

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 17 16:11:55 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=2
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=2
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=2
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1,inline
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=2
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=2
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1,group=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=4,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=4,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=4,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1,group=1
   230                           	psect	text206,global,reloc=4,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=4,class=CODE,delta=1
   234                           	psect	text210,global,reloc=4,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=4,class=CODE,delta=1
   239                           	psect	text215,global,reloc=4,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=4,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=4,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=4,class=CODE,delta=1
   246                           	psect	text222,global,reloc=2,class=CODE,delta=1
   247                           	psect	text223,global,reloc=2,class=CODE,delta=1
   248                           	psect	text224,global,reloc=4,class=CODE,delta=1
   249                           	psect	text225,global,reloc=4,class=CODE,delta=1
   250                           	psect	text226,global,reloc=4,class=CODE,delta=1
   251                           	psect	text227,global,reloc=4,class=CODE,delta=1
   252                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   253                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   254                           	psect	text228,global,reloc=4,class=CODE,delta=1
   255                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   256                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   257  0000                     
   258                           ; Version 2.10
   259                           ; Generated 31/07/2019 GMT
   260                           ; 
   261                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   262                           ; All rights reserved.
   263                           ; 
   264                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   265                           ; 
   266                           ; Redistribution and use in source and binary forms, with or without modification, are
   267                           ; permitted provided that the following conditions are met:
   268                           ; 
   269                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   270                           ;        conditions and the following disclaimer.
   271                           ; 
   272                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   273                           ;        of conditions and the following disclaimer in the documentation and/or other
   274                           ;        materials provided with the distribution.
   275                           ; 
   276                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   277                           ;        software without specific prior written permission.
   278                           ; 
   279                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   280                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   281                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   282                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   283                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   284                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   285                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   286                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   287                           ; 
   288                           ; 
   289                           ; Code-generator required, PIC18F57K42 Definitions
   290                           ; 
   291                           ; SFR Addresses
   292  0000                     
   293 ;;_main$4049	offset	0
   294 ;;_main$4045	offset	2
   295 ;;_esr_temp	offset	4
   296 ;;_i_esr	offset	8
   297 ;;_shape	offset	10
   298 ;;_inp_index	offset	11
   299 ;;_k	offset	12
   300 ;;_j	offset	13
   301 ;;_i	offset	14
   302 ;;_mode	offset	15
   303 ;;_i_ror	offset	16
   304 ;;_mode	offset=-1 (param)
   305 ;;_hist	offset=-3 (param)
   306 ;;_s	offset=-2 (param)
   307 ;;_t	offset=-8 (param)
   308 ;;_voltage	offset=-4 (param)
   309 ;;_voltage	offset=-4 (param)
   310 ;;_voltage	offset=-4 (param)
   311 ;;_set	offset=-1 (param)
   312 ;;_x	offset	0
   313 ;;_r_cal_ptr	offset	2
   314 ;;_y	offset	4
   315 ;;_crcVal_save	offset	6
   316 ;;_bAdd	offset=-2 (param)
   317 ;;_esr_rescale	offset	0
   318 ;;_data	offset=-1 (param)
   319 ;;_cmd	offset=-1 (param)
   320 ;;_cmd	offset=-1 (param)
   321 ;;_data	offset=-1 (param)
   322 ;;__this	offset=-2 (param)
   323 ;;_soc	offset	0
   324 ;;_slot	offset	2
   325 ;;_cvoltage	offset=-4 (param)
   326 ;;_h	offset=-2 (param)
   327 ;;_h	offset=-2 (param)
   328 ;;_fsm	offset=-1 (param)
   329 ;;_mode	offset=-1 (param)
   330 ;;_mode	offset=-1 (param)
   331 ;;_cmd	offset=-1 (param)
   332 ;;_t	offset=-8 (param)
   333 ;;_t	offset=-1 (param)
   334 ;;_t	offset=-1 (param)
   335 ;;_tm	offset=-3 (param)
   336 ;;_y	offset	0
   337 ;;_t1	offset	8
   338 ;;_t0	offset	16
   339 ;;_t	offset=-8 (param)
   340 ;;_local	offset=-10 (param)
   341 ;;_isdst	offset=-12 (param)
   342 ;;_offset	offset=-14 (param)
   343 ;;_oppoff	offset=-16 (param)
   344 ;;_zonename	offset=-18 (param)
   345 ;;_t	offset=-8 (param)
   346 ;;_local	offset=-10 (param)
   347 ;;_alt	offset=-12 (param)
   348 ;;_z	offset=-2 (param)
   349 ;;_days	offset	0
   350 ;;_wday	offset	2
   351 ;;_t	offset	4
   352 ;;_is_leap	offset	12
   353 ;;_n	offset	14
   354 ;;_x	offset	16
   355 ;;_m	offset	18
   356 ;;_d	offset	20
   357 ;;_rule	offset=-6 (param)
   358 ;;_year	offset=-8 (param)
   359 ;;_m	offset=-2 (param)
   360 ;;_is_leap	offset=-4 (param)
   361 ;;_y	offset	0
   362 ;;_leaps	offset	2
   363 ;;_rem	offset	4
   364 ;;F5	offset	6
   365 ;;_centuries	offset	8
   366 ;;_leaps	offset	10
   367 ;;_cycles	offset	12
   368 ;;_year	offset=-8 (param)
   369 ;;_is_leap	offset=-10 (param)
   370 ;;_t	offset	0
   371 ;;_month	offset=-2 (param)
   372 ;;_is_leap	offset=-4 (param)
   373 ;;_s	offset	0
   374 ;;_r	offset	0
   375 ;;_p	offset=-2 (param)
   376 ;;_rule	offset=-4 (param)
   377 ;;_off	offset	0
   378 ;;_neg	offset	2
   379 ;;_p	offset=-2 (param)
   380 ;;_x	offset	0
   381 ;;_p	offset=-2 (param)
   382 ;;_i	offset	0
   383 ;;_d	offset=-2 (param)
   384 ;;_p	offset=-4 (param)
   385 ;;___secs_to_tm$7650	offset	0
   386 ;;_years	offset	1
   387 ;;_days	offset	9
   388 ;;_secs	offset	17
   389 ;;_remdays	offset	25
   390 ;;_q_cycles	offset	29
   391 ;;_c_cycles	offset	33
   392 ;;_remyears	offset	37
   393 ;;_remsecs	offset	41
   394 ;;_qc_cycles	offset	45
   395 ;;_months	offset	49
   396 ;;_leap	offset	51
   397 ;;_yday	offset	53
   398 ;;_wday	offset	55
   399 ;;_t	offset=-8 (param)
   400 ;;_tm	offset=-10 (param)
   401 ;;_product	offset	0
   402 ;;_multiplier	offset=-8 (param)
   403 ;;_multiplicand	offset=-16 (param)
   404 ;;_product	offset	0
   405 ;;_multiplier	offset=-4 (param)
   406 ;;_multiplicand	offset=-8 (param)
   407 ;;_sign	offset	0
   408 ;;_counter	offset	1
   409 ;;_dividend	offset=-4 (param)
   410 ;;_divisor	offset=-8 (param)
   411 ;;_quotient	offset	0
   412 ;;_sign	offset	4
   413 ;;_counter	offset	5
   414 ;;_dividend	offset=-4 (param)
   415 ;;_divisor	offset=-8 (param)
   416 ;;_cp	offset	0
   417 ;;_s	offset	2
   418 ;;_tim	offset=-2 (param)
   419 ;;_cp	offset=-2 (param)
   420 ;;_i	offset=-3 (param)
   421 ;;_cl	offset=-4 (param)
   422 ;;_ct	offset=-5 (param)
   423 ;;_rem	offset	0
   424 ;;_counter	offset	1
   425 ;;_dividend	offset=-1 (param)
   426 ;;_divisor	offset=-2 (param)
   427 ;;_cp	offset	0
   428 ;;_cb	offset	4
   429 ;;_cpz	offset	8
   430 ;;_cbz	offset	12
   431 ;;_x	offset	16
   432 ;;_x	offset	0
   433 ;;_r_cal_ptr	offset	2
   434 ;;_y	offset	4
   435 ;;_crcVal	offset	6
   436 ;;_GIEBitValue	offset	0
   437 ;;_bAdd	offset=-2 (param)
   438 ;;_bData	offset=-3 (param)
   439 ;;_result	offset	0
   440 ;;_mask	offset	2
   441 ;;_reverse	offset=-1 (param)
   442 ;;_xorValue	offset=-3 (param)
   443 ;;_mask	offset	0
   444 ;;_reverse	offset	2
   445 ;;_crc	offset=-2 (param)
   446 ;;_data	offset=-1 (param)
   447 ;;_channel	offset=-1 (param)
   448 ;;_c	offset	0
   449 ;;_shape	offset=-1 (param)
   450 ;;_reset	offset=-2 (param)
   451 ;;_i	offset=-1 (param)
   452 ;;_i	offset=-1 (param)
   453 ;;_mode	offset=-1 (param)
   454 ;;_cb	offset=-3 (param)
   455 ;;_cp	offset=-5 (param)
   456 ;;_mode	offset=-1 (param)
   457 ;;_cb	offset=-3 (param)
   458 ;;_cp	offset=-5 (param)
   459 ;;_scaleb	offset=-9 (param)
   460 ;;_scalep	offset=-13 (param)
   461 ;;_value	offset=-2 (param)
   462 ;;_window	offset=-4 (param)
   463 ;;_standard	offset=-6 (param)
   464 ;;_i	offset	0
   465 ;;_h	offset=-2 (param)
   466 ;;_flipper	offset=-1 (param)
   467 ;;_f	offset	0
   468 ;;_ap	offset	6
   469 ;;_s	offset=-3 (param)
   470 ;;_fmt	offset=-5 (param)
   471 ;;_line	offset=-1 (param)
   472 ;;_vterm	offset=-2 (param)
   473 ;;_numMilliseconds	offset=-2 (param)
   474 ;;_vterm	offset=-1 (param)
   475 ;;_row	offset	0
   476 ;;_r	offset=-1 (param)
   477 ;;_c	offset=-2 (param)
   478 ;;_strPtr	offset=-4 (param)
   479 ;;_strPtr	offset=-1 (param)
   480 ;;_delay	offset=-4 (param)
   481 ;;_strPtr	offset=-1 (param)
   482 ;;_strPtr	offset=-2 (param)
   483 ;;__this	offset=-2 (param)
   484 ;;_clearBuffer	offset=-3 (param)
   485 ;;_s	offset	0
   486 ;;_k	offset	2
   487 ;;_dest	offset=-2 (param)
   488 ;;_c	offset=-4 (param)
   489 ;;_n	offset=-6 (param)
   490 ;;_ap	offset	0
   491 ;;_fmt	offset=-3 (param)
   492 ;;_cfmt	offset	0
   493 ;;_fp	offset=-2 (param)
   494 ;;_fmt	offset=-4 (param)
   495 ;;_ap	offset=-6 (param)
   496 ;;_vfpfcnvrt$6691	offset	0
   497 ;;_vfpfcnvrt$6702	offset	2
   498 ;;_vfpfcnvrt$6690	offset	4
   499 ;;_llu	offset	6
   500 ;;_ll	offset	14
   501 ;;_f	offset	22
   502 ;;_ct	offset	26
   503 ;;_cp	offset	29
   504 ;;_c	offset	31
   505 ;;_fp	offset=-2 (param)
   506 ;;_fmt	offset=-4 (param)
   507 ;;_ap	offset=-6 (param)
   508 ;;_xtoa$6676	offset	0
   509 ;;_xtoa$6675	offset	2
   510 ;;_n	offset	4
   511 ;;_c	offset	12
   512 ;;_i	offset	14
   513 ;;_w	offset	16
   514 ;;_p	offset	18
   515 ;;_fp	offset=-2 (param)
   516 ;;_d	offset=-10 (param)
   517 ;;_x	offset=-11 (param)
   518 ;;_toupper$7617	offset	0
   519 ;;_c	offset=-2 (param)
   520 ;;_c	offset=-2 (param)
   521 ;;_c	offset=-2 (param)
   522 ;;_n	offset	0
   523 ;;_i	offset	8
   524 ;;_w	offset	10
   525 ;;_p	offset	12
   526 ;;_fp	offset=-2 (param)
   527 ;;_d	offset=-10 (param)
   528 ;;_counter	offset	0
   529 ;;_dividend	offset=-8 (param)
   530 ;;_divisor	offset=-16 (param)
   531 ;;_quotient	offset	0
   532 ;;_counter	offset	8
   533 ;;_dividend	offset=-8 (param)
   534 ;;_divisor	offset=-16 (param)
   535 ;;_r	offset	0
   536 ;;_l	offset	2
   537 ;;__l	offset=-2 (param)
   538 ;;__r	offset=-4 (param)
   539 ;;_n	offset=-6 (param)
   540 ;;_nuls	offset	0
   541 ;;_l	offset	7
   542 ;;_p	offset	9
   543 ;;_cp	offset	11
   544 ;;_w	offset	13
   545 ;;_i	offset	15
   546 ;;_fp	offset=-2 (param)
   547 ;;_s	offset=-4 (param)
   548 ;;_efgtoa$6648	offset	0
   549 ;;_efgtoa$6647	offset	2
   550 ;;_efgtoa$6646	offset	4
   551 ;;_efgtoa$6642	offset	6
   552 ;;_efgtoa$6638	offset	8
   553 ;;_efgtoa$6637	offset	10
   554 ;;_u	offset	12
   555 ;;_g	offset	16
   556 ;;_l	offset	20
   557 ;;_h	offset	24
   558 ;;_ou	offset	28
   559 ;;_n	offset	32
   560 ;;_e	offset	34
   561 ;;_i	offset	36
   562 ;;_w	offset	38
   563 ;;_p	offset	40
   564 ;;_sign	offset	42
   565 ;;_d	offset	44
   566 ;;_ne	offset	46
   567 ;;_m	offset	48
   568 ;;_pp	offset	50
   569 ;;_t	offset	52
   570 ;;_mode	offset	54
   571 ;;_nmode	offset	55
   572 ;;_fp	offset=-2 (param)
   573 ;;_f	offset=-6 (param)
   574 ;;_c	offset=-7 (param)
   575 ;;_tolower$7602	offset	0
   576 ;;_c	offset=-2 (param)
   577 ;;_c	offset=-2 (param)
   578 ;;_d	offset	0
   579 ;;_s	offset	2
   580 ;;_dest	offset=-2 (param)
   581 ;;_src	offset=-4 (param)
   582 ;;_u	offset	0
   583 ;;_m	offset	4
   584 ;;_e	offset	8
   585 ;;_x	offset=-4 (param)
   586 ;;_u	offset	0
   587 ;;_e	offset	4
   588 ;;_x	offset=-4 (param)
   589 ;;_exp1	offset	0
   590 ;;_sign1	offset	1
   591 ;;_f1	offset=-4 (param)
   592 ;;_f1	offset=-4 (param)
   593 ;;_ff1	offset=-4 (param)
   594 ;;_ff2	offset=-8 (param)
   595 ;;_sign	offset	0
   596 ;;_counter	offset	1
   597 ;;_dividend	offset=-2 (param)
   598 ;;_divisor	offset=-4 (param)
   599 ;;_quotient	offset	0
   600 ;;_sign	offset	2
   601 ;;_counter	offset	3
   602 ;;_dividend	offset=-2 (param)
   603 ;;_divisor	offset=-4 (param)
   604 ;;_dtoa$6614	offset	0
   605 ;;_n	offset	2
   606 ;;_i	offset	10
   607 ;;_s	offset	12
   608 ;;_w	offset	14
   609 ;;_p	offset	16
   610 ;;_fp	offset=-2 (param)
   611 ;;_d	offset=-10 (param)
   612 ;;_a	offset=-2 (param)
   613 ;;_sign	offset	0
   614 ;;_counter	offset	1
   615 ;;_dividend	offset=-8 (param)
   616 ;;_divisor	offset=-16 (param)
   617 ;;_quotient	offset	0
   618 ;;_sign	offset	8
   619 ;;_counter	offset	9
   620 ;;_dividend	offset=-8 (param)
   621 ;;_divisor	offset=-16 (param)
   622 ;;_w	offset	0
   623 ;;_fp	offset=-2 (param)
   624 ;;_c	offset=-3 (param)
   625 ;;_w	offset	0
   626 ;;_i	offset	2
   627 ;;_fp	offset=-2 (param)
   628 ;;_buf	offset=-4 (param)
   629 ;;_p	offset=-6 (param)
   630 ;;_a	offset	0
   631 ;;_s	offset=-2 (param)
   632 ;;_i	offset	0
   633 ;;_c	offset	2
   634 ;;_s	offset=-2 (param)
   635 ;;_fp	offset=-4 (param)
   636 ;;_c	offset=-2 (param)
   637 ;;_fp	offset=-4 (param)
   638 ;;_c	offset=-1 (param)
   639 ;;__this	offset=-2 (param)
   640 ;;_c	offset=-3 (param)
   641 ;;_atoi$7234	offset	0
   642 ;;_atoi$7232	offset	2
   643 ;;_atoi$7233	offset	4
   644 ;;_n	offset	5
   645 ;;_neg	offset	7
   646 ;;_s	offset=-2 (param)
   647 ;;_isspace$7283	offset	0
   648 ;;_c	offset=-2 (param)
   649 ;;_c	offset=-2 (param)
   650 ;;_vterm	offset=-1 (param)
   651 ;;_new_response_info	offset=-1 (param)
   652 ;;_new_response_info	offset=-1 (param)
   653 ;;_level	offset=-2 (param)
   654 ;;_dutyValue	offset=-2 (param)
   655 ;;_timer	offset=-1 (param)
   656 ;;_timer	offset=-1 (param)
   657 ;;_count	offset=-3 (param)
   658 ;;_h	offset=-2 (param)
   659 ;;_u	offset	0
   660 ;;_x	offset=-4 (param)
   661 ;;_chan	offset=-1 (param)
   662 ;;_to_what	offset=-2 (param)
   663 ;;_u	offset	0
   664 ;;_s	offset=-2 (param)
   665 ;;_index	offset=-1 (param)
   666 ;;_arg	offset	0
   667 ;;_exp	offset	4
   668 ;;_sign	offset=-1 (param)
   669 ;;_val	offset=-5 (param)
   670 ;;_grs	offset	0
   671 ;;_rem	offset	4
   672 ;;_new_exp	offset	8
   673 ;;_aexp	offset	10
   674 ;;_bexp	offset	11
   675 ;;_sign	offset	12
   676 ;;_b	offset=-4 (param)
   677 ;;_a	offset=-8 (param)
   678 ;;_ff1	offset=-4 (param)
   679 ;;_ff2	offset=-8 (param)
   680 ;;_lp_speed	offset	0
   681 ;;_new	offset=-4 (param)
   682 ;;_bn	offset=-5 (param)
   683 ;;_slow	offset=-6 (param)
   684 ;;_b	offset=-4 (param)
   685 ;;_a	offset=-8 (param)
   686 ;;_grs	offset	0
   687 ;;_bexp	offset	1
   688 ;;_aexp	offset	2
   689 ;;_signs	offset	3
   690 ;;_b	offset=-4 (param)
   691 ;;_a	offset=-8 (param)
   692 ;;_prod	offset	0
   693 ;;_grs	offset	4
   694 ;;_temp	offset	8
   695 ;;_bexp	offset	10
   696 ;;_aexp	offset	11
   697 ;;_sign	offset	12
   698 ;;_b	offset=-4 (param)
   699 ;;_a	offset=-8 (param)
   700 ;;_InterruptHandler	offset=-3 (param)
   701 ;;_InterruptHandler	offset=-3 (param)
   702 ;;_InterruptHandler	offset=-3 (param)
   703 ;;_InterruptHandler	offset=-3 (param)
   704 ;;_InterruptHandler	offset=-3 (param)
   705 ;;_InterruptHandler	offset=-3 (param)
   706 ;;_state	offset	0
   707 ;;_InterruptHandler	offset=-3 (param)
   708 ;;_InterruptHandler	offset=-3 (param)
   709 ;;_seed	offset	0
   710 ;;_poly	offset	2
   711 ;;_InterruptHandler	offset=-3 (param)
   712 ;;_InterruptHandler	offset=-3 (param)
   713 ;;_i	offset	0
   714 ;;_sw_value	offset	1
   715 ;;_timerVal	offset=-2 (param)
   716 ;;_light	offset	0
   717 ;;_t	offset=-8 (param)
   718 ;;_mode	offset=-1 (param)
   719 ;;_chan	offset=-1 (param)
   720 ;;_to_what	offset=-2 (param)
   721 ;;_u	offset	0
   722 ;;_s	offset=-2 (param)
   723 ;;_index	offset=-1 (param)
   724 ;;_arg	offset	0
   725 ;;_exp	offset	4
   726 ;;_sign	offset=-1 (param)
   727 ;;_val	offset=-5 (param)
   728 ;;_b	offset=-4 (param)
   729 ;;_a	offset=-8 (param)
   730 ;;_grs	offset	0
   731 ;;_bexp	offset	1
   732 ;;_aexp	offset	2
   733 ;;_signs	offset	3
   734 ;;_b	offset=-4 (param)
   735 ;;_a	offset=-8 (param)
   736 ;;_prod	offset	0
   737 ;;_grs	offset	4
   738 ;;_temp	offset	8
   739 ;;_bexp	offset	10
   740 ;;_aexp	offset	11
   741 ;;_sign	offset	12
   742 ;;_b	offset=-4 (param)
   743 ;;_a	offset=-8 (param)
   744 ;;_grs	offset	0
   745 ;;_rem	offset	4
   746 ;;_new_exp	offset	8
   747 ;;_aexp	offset	10
   748 ;;_bexp	offset	11
   749 ;;_sign	offset	12
   750 ;;_b	offset=-4 (param)
   751 ;;_a	offset=-8 (param)
   752 ;;_ff1	offset=-4 (param)
   753 ;;_ff2	offset=-8 (param)
   754 ;;_timerVal	offset=-2 (param)
   755 ;;_adj	offset	0
   756 ;;_log_ptr	offset	4
   757 ;;_f	offset	0
   758 ;;_ap	offset	6
   759 ;;_s	offset=-3 (param)
   760 ;;_fmt	offset=-5 (param)
   761 ;;_cfmt	offset	0
   762 ;;_fp	offset=-2 (param)
   763 ;;_fmt	offset=-4 (param)
   764 ;;_ap	offset=-6 (param)
   765 ;;_vfpfcnvrt$6691	offset	0
   766 ;;_vfpfcnvrt$6702	offset	2
   767 ;;_vfpfcnvrt$6690	offset	4
   768 ;;_llu	offset	6
   769 ;;_ll	offset	14
   770 ;;_f	offset	22
   771 ;;_ct	offset	26
   772 ;;_cp	offset	29
   773 ;;_c	offset	31
   774 ;;_fp	offset=-2 (param)
   775 ;;_fmt	offset=-4 (param)
   776 ;;_ap	offset=-6 (param)
   777 ;;_xtoa$6676	offset	0
   778 ;;_xtoa$6675	offset	2
   779 ;;_n	offset	4
   780 ;;_c	offset	12
   781 ;;_i	offset	14
   782 ;;_w	offset	16
   783 ;;_p	offset	18
   784 ;;_fp	offset=-2 (param)
   785 ;;_d	offset=-10 (param)
   786 ;;_x	offset=-11 (param)
   787 ;;_toupper$7617	offset	0
   788 ;;_c	offset=-2 (param)
   789 ;;_c	offset=-2 (param)
   790 ;;_c	offset=-2 (param)
   791 ;;_n	offset	0
   792 ;;_i	offset	8
   793 ;;_w	offset	10
   794 ;;_p	offset	12
   795 ;;_fp	offset=-2 (param)
   796 ;;_d	offset=-10 (param)
   797 ;;_counter	offset	0
   798 ;;_dividend	offset=-8 (param)
   799 ;;_divisor	offset=-16 (param)
   800 ;;_quotient	offset	0
   801 ;;_counter	offset	8
   802 ;;_dividend	offset=-8 (param)
   803 ;;_divisor	offset=-16 (param)
   804 ;;_r	offset	0
   805 ;;_l	offset	2
   806 ;;__l	offset=-2 (param)
   807 ;;__r	offset=-4 (param)
   808 ;;_n	offset=-6 (param)
   809 ;;_nuls	offset	0
   810 ;;_l	offset	7
   811 ;;_p	offset	9
   812 ;;_cp	offset	11
   813 ;;_w	offset	13
   814 ;;_i	offset	15
   815 ;;_fp	offset=-2 (param)
   816 ;;_s	offset=-4 (param)
   817 ;;_efgtoa$6648	offset	0
   818 ;;_efgtoa$6647	offset	2
   819 ;;_efgtoa$6646	offset	4
   820 ;;_efgtoa$6642	offset	6
   821 ;;_efgtoa$6638	offset	8
   822 ;;_efgtoa$6637	offset	10
   823 ;;_u	offset	12
   824 ;;_g	offset	16
   825 ;;_l	offset	20
   826 ;;_h	offset	24
   827 ;;_ou	offset	28
   828 ;;_n	offset	32
   829 ;;_e	offset	34
   830 ;;_i	offset	36
   831 ;;_w	offset	38
   832 ;;_p	offset	40
   833 ;;_sign	offset	42
   834 ;;_d	offset	44
   835 ;;_ne	offset	46
   836 ;;_m	offset	48
   837 ;;_pp	offset	50
   838 ;;_t	offset	52
   839 ;;_mode	offset	54
   840 ;;_nmode	offset	55
   841 ;;_fp	offset=-2 (param)
   842 ;;_f	offset=-6 (param)
   843 ;;_c	offset=-7 (param)
   844 ;;_tolower$7602	offset	0
   845 ;;_c	offset=-2 (param)
   846 ;;_c	offset=-2 (param)
   847 ;;_d	offset	0
   848 ;;_s	offset	2
   849 ;;_dest	offset=-2 (param)
   850 ;;_src	offset=-4 (param)
   851 ;;_u	offset	0
   852 ;;_m	offset	4
   853 ;;_e	offset	8
   854 ;;_x	offset=-4 (param)
   855 ;;_u	offset	0
   856 ;;_e	offset	4
   857 ;;_x	offset=-4 (param)
   858 ;;_exp1	offset	0
   859 ;;_sign1	offset	1
   860 ;;_f1	offset=-4 (param)
   861 ;;_f1	offset=-4 (param)
   862 ;;_ff1	offset=-4 (param)
   863 ;;_ff2	offset=-8 (param)
   864 ;;_sign	offset	0
   865 ;;_counter	offset	1
   866 ;;_dividend	offset=-2 (param)
   867 ;;_divisor	offset=-4 (param)
   868 ;;_quotient	offset	0
   869 ;;_sign	offset	2
   870 ;;_counter	offset	3
   871 ;;_dividend	offset=-2 (param)
   872 ;;_divisor	offset=-4 (param)
   873 ;;_dtoa$6614	offset	0
   874 ;;_n	offset	2
   875 ;;_i	offset	10
   876 ;;_s	offset	12
   877 ;;_w	offset	14
   878 ;;_p	offset	16
   879 ;;_fp	offset=-2 (param)
   880 ;;_d	offset=-10 (param)
   881 ;;_a	offset=-2 (param)
   882 ;;_sign	offset	0
   883 ;;_counter	offset	1
   884 ;;_dividend	offset=-8 (param)
   885 ;;_divisor	offset=-16 (param)
   886 ;;_quotient	offset	0
   887 ;;_sign	offset	8
   888 ;;_counter	offset	9
   889 ;;_dividend	offset=-8 (param)
   890 ;;_divisor	offset=-16 (param)
   891 ;;_w	offset	0
   892 ;;_fp	offset=-2 (param)
   893 ;;_c	offset=-3 (param)
   894 ;;_w	offset	0
   895 ;;_i	offset	2
   896 ;;_fp	offset=-2 (param)
   897 ;;_buf	offset=-4 (param)
   898 ;;_p	offset=-6 (param)
   899 ;;_a	offset	0
   900 ;;_s	offset=-2 (param)
   901 ;;_i	offset	0
   902 ;;_c	offset	2
   903 ;;_s	offset=-2 (param)
   904 ;;_fp	offset=-4 (param)
   905 ;;_c	offset=-2 (param)
   906 ;;_fp	offset=-4 (param)
   907 ;;_c	offset=-1 (param)
   908 ;;__this	offset=-2 (param)
   909 ;;_c	offset=-3 (param)
   910 ;;_atoi$7234	offset	0
   911 ;;_atoi$7232	offset	2
   912 ;;_atoi$7233	offset	4
   913 ;;_n	offset	5
   914 ;;_neg	offset	7
   915 ;;_s	offset=-2 (param)
   916 ;;_isspace$7283	offset	0
   917 ;;_c	offset=-2 (param)
   918 ;;_c	offset=-2 (param)
   919 ;;_dsize	offset=-2 (param)
   920 ;;_u	offset	0
   921 ;;_x	offset=-4 (param)
   922 ;;_f1p	offset=-2 (param)
   923 ;;_f2	offset=-6 (param)
   924 ;;_timer	offset=-1 (param)
   925 ;;_count	offset=-3 (param)
   926 ;;_channel	offset=-1 (param)
   927 ;;_i	offset	0
   928                           
   929                           	psect	idataBIGRAM
   930  01A9B0                     __pidataBIGRAM:
   931                           	opt callstack 0
   932                           
   933                           ;initializer for _port_data
   934  01A9B0  FF                 	db	255
   935  01A9B1  00                 	db	0
   936  01A9B2  FF                 	db	255
   937  01A9B3  00                 	db	0
   938  01A9B4  FF                 	db	255
   939  01A9B5  00                 	db	0
   940  01A9B6  FF                 	db	255
   941  01A9B7  00                 	db	0
   942  01A9B8  FF                 	db	255
   943  01A9B9  00                 	db	0
   944  01A9BA  FF                 	db	255
   945  01A9BB  00                 	db	0
   946  01A9BC  FF                 	db	255
   947  01A9BD  00                 	db	0
   948  01A9BE  FF                 	db	255
   949  01A9BF  00                 	db	0
   950  01A9C0  00                 	db	0
   951  01A9C1  00                 	db	0
   952  01A9C2  00                 	db	0
   953  01A9C3  00                 	db	0
   954  01A9C4  00                 	db	0
   955  01A9C5  00                 	db	0
   956  01A9C6  00                 	db	0
   957  01A9C7  00                 	db	0
   958  01A9C8  00                 	db	0
   959  01A9C9  00                 	db	0
   960  01A9CA  00                 	db	0
   961  01A9CB  00                 	db	0
   962  01A9CC  00                 	db	0
   963  01A9CD  00                 	db	0
   964  01A9CE  00                 	db	0
   965  01A9CF  00                 	db	0
   966  01A9D0  00                 	db	0
   967  01A9D1  00                 	db	0
   968  01A9D2  00                 	db	0
   969  01A9D3  00                 	db	0
   970  01A9D4  00                 	db	0
   971  01A9D5  00                 	db	0
   972  01A9D6  00                 	db	0
   973  01A9D7  00                 	db	0
   974  01A9D8  00                 	db	0
   975  01A9D9  00                 	db	0
   976  01A9DA  00                 	db	0
   977  01A9DB  00                 	db	0
   978  01A9DC  00                 	db	0
   979  01A9DD  00                 	db	0
   980  01A9DE  00                 	db	0
   981  01A9DF  00                 	db	0
   982  01A9E0  00                 	db	0
   983  01A9E1  00                 	db	0
   984  01A9E2  00                 	db	0
   985  01A9E3  00                 	db	0
   986  01A9E4  00                 	db	0
   987  01A9E5  00                 	db	0
   988  01A9E6  00                 	db	0
   989  01A9E7  00                 	db	0
   990  01A9E8  00                 	db	0
   991  01A9E9  00                 	db	0
   992  01A9EA  00                 	db	0
   993  01A9EB  00                 	db	0
   994  01A9EC  00                 	db	0
   995  01A9ED  00                 	db	0
   996  01A9EE  00                 	db	0
   997  01A9EF  00                 	db	0
   998  01A9F0  00                 	db	0
   999  01A9F1  00                 	db	0
  1000  01A9F2  00                 	db	0
  1001  01A9F3  00                 	db	0
  1002  01A9F4  00                 	db	0
  1003  01A9F5  00                 	db	0
  1004  01A9F6  00                 	db	0
  1005  01A9F7  00                 	db	0
  1006  01A9F8  00                 	db	0
  1007  01A9F9  00                 	db	0
  1008  01A9FA  00                 	db	0
  1009  01A9FB  00                 	db	0
  1010  01A9FC  00                 	db	0
  1011  01A9FD  00                 	db	0
  1012  01A9FE  00                 	db	0
  1013  01A9FF  00                 	db	0
  1014  01AA00  00                 	db	0
  1015  01AA01  00                 	db	0
  1016  01AA02  00                 	db	0
  1017  01AA03  00                 	db	0
  1018  01AA04  00                 	db	0
  1019  01AA05  00                 	db	0
  1020  01AA06  00                 	db	0
  1021  01AA07  00                 	db	0
  1022  01AA08  00                 	db	0
  1023  01AA09  00                 	db	0
  1024  01AA0A  00                 	db	0
  1025  01AA0B  00                 	db	0
  1026  01AA0C  00                 	db	0
  1027  01AA0D  00                 	db	0
  1028  01AA0E  00                 	db	0
  1029  01AA0F  00                 	db	0
  1030  01AA10  00                 	db	0
  1031  01AA11  00                 	db	0
  1032  01AA12  00                 	db	0
  1033  01AA13  00                 	db	0
  1034  01AA14  00                 	db	0
  1035  01AA15  00                 	db	0
  1036  01AA16  00                 	db	0
  1037  01AA17  00                 	db	0
  1038  01AA18  00                 	db	0
  1039  01AA19  00                 	db	0
  1040  01AA1A  00                 	db	0
  1041  01AA1B  00                 	db	0
  1042  01AA1C  00                 	db	0
  1043  01AA1D  00                 	db	0
  1044  01AA1E  00                 	db	0
  1045  01AA1F  00                 	db	0
  1046  01AA20  00                 	db	0
  1047  01AA21  00                 	db	0
  1048  01AA22  00                 	db	0
  1049  01AA23  00                 	db	0
  1050  01AA24  00                 	db	0
  1051  01AA25  00                 	db	0
  1052  01AA26  00                 	db	0
  1053  01AA27  00                 	db	0
  1054  01AA28  00                 	db	0
  1055  01AA29  00                 	db	0
  1056  01AA2A  00                 	db	0
  1057  01AA2B  00                 	db	0
  1058  01AA2C  00                 	db	0
  1059  01AA2D  00                 	db	0
  1060  01AA2E  00                 	db	0
  1061  01AA2F  00                 	db	0
  1062  01AA30  00                 	db	0
  1063  01AA31  00                 	db	0
  1064  01AA32  00                 	db	0
  1065  01AA33  00                 	db	0
  1066  01AA34  00                 	db	0
  1067  01AA35  00                 	db	0
  1068  01AA36  00                 	db	0
  1069  01AA37  00                 	db	0
  1070  01AA38  00                 	db	0
  1071  01AA39  00                 	db	0
  1072  01AA3A  00                 	db	0
  1073  01AA3B  00                 	db	0
  1074  01AA3C  00                 	db	0
  1075  01AA3D  00                 	db	0
  1076  01AA3E  00                 	db	0
  1077  01AA3F  00                 	db	0
  1078  01AA40  00                 	db	0
  1079  01AA41  00                 	db	0
  1080  01AA42  00                 	db	0
  1081  01AA43  00                 	db	0
  1082  01AA44  00                 	db	0
  1083  01AA45  00                 	db	0
  1084  01AA46  00                 	db	0
  1085  01AA47  00                 	db	0
  1086  01AA48  00                 	db	0
  1087  01AA49  00                 	db	0
  1088  01AA4A  00                 	db	0
  1089  01AA4B  00                 	db	0
  1090  01AA4C  00                 	db	0
  1091  01AA4D  00                 	db	0
  1092  01AA4E  00                 	db	0
  1093  01AA4F  00                 	db	0
  1094  01AA50  00                 	db	0
  1095  01AA51  00                 	db	0
  1096  01AA52  00                 	db	0
  1097  01AA53  00                 	db	0
  1098  01AA54  00                 	db	0
  1099  01AA55  00                 	db	0
  1100  01AA56  00                 	db	0
  1101  01AA57  00                 	db	0
  1102  01AA58  00                 	db	0
  1103  01AA59  00                 	db	0
  1104  01AA5A  00                 	db	0
  1105  01AA5B  00                 	db	0
  1106  01AA5C  00                 	db	0
  1107  01AA5D  00                 	db	0
  1108  01AA5E  00                 	db	0
  1109  01AA5F  00                 	db	0
  1110  01AA60  00                 	db	0
  1111  01AA61  00                 	db	0
  1112  01AA62  00                 	db	0
  1113  01AA63  00                 	db	0
  1114  01AA64  00                 	db	0
  1115  01AA65  00                 	db	0
  1116  01AA66  00                 	db	0
  1117  01AA67  00                 	db	0
  1118  01AA68  00                 	db	0
  1119  01AA69  00                 	db	0
  1120  01AA6A  00                 	db	0
  1121  01AA6B  00                 	db	0
  1122  01AA6C  00                 	db	0
  1123  01AA6D  00                 	db	0
  1124  01AA6E  00                 	db	0
  1125  01AA6F  00                 	db	0
  1126  01AA70  00                 	db	0
  1127  01AA71  00                 	db	0
  1128  01AA72  00                 	db	0
  1129  01AA73  00                 	db	0
  1130  01AA74  00                 	db	0
  1131  01AA75  00                 	db	0
  1132  01AA76  00                 	db	0
  1133  01AA77  00                 	db	0
  1134  01AA78  00                 	db	0
  1135  01AA79  00                 	db	0
  1136  01AA7A  00                 	db	0
  1137  01AA7B  00                 	db	0
  1138  01AA7C  00                 	db	0
  1139  01AA7D  00                 	db	0
  1140  01AA7E  00                 	db	0
  1141  01AA7F  00                 	db	0
  1142  01AA80  00                 	db	0
  1143  01AA81  00                 	db	0
  1144  01AA82  00                 	db	0
  1145  01AA83  00                 	db	0
  1146  01AA84  00                 	db	0
  1147  01AA85  00                 	db	0
  1148  01AA86  00                 	db	0
  1149  01AA87  00                 	db	0
  1150  01AA88  00                 	db	0
  1151  01AA89  00                 	db	0
  1152  01AA8A  00                 	db	0
  1153  01AA8B  00                 	db	0
  1154  01AA8C  00                 	db	0
  1155  01AA8D  00                 	db	0
  1156  01AA8E  00                 	db	0
  1157  01AA8F  00                 	db	0
  1158  01AA90  00                 	db	0
  1159  01AA91  00                 	db	0
  1160  01AA92  00                 	db	0
  1161  01AA93  00                 	db	0
  1162  01AA94  00                 	db	0
  1163  01AA95  00                 	db	0
  1164  01AA96  00                 	db	0
  1165  01AA97  00                 	db	0
  1166  01AA98  00                 	db	0
  1167  01AA99  00                 	db	0
  1168  01AA9A  00                 	db	0
  1169  01AA9B  00                 	db	0
  1170  01AA9C  00                 	db	0
  1171  01AA9D  00                 	db	0
  1172  01AA9E  00                 	db	0
  1173  01AA9F  00                 	db	0
  1174  01AAA0  00                 	db	0
  1175  01AAA1  00                 	db	0
  1176  01AAA2  00                 	db	0
  1177  01AAA3  00                 	db	0
  1178  01AAA4  00                 	db	0
  1179  01AAA5  00                 	db	0
  1180  01AAA6  00                 	db	0
  1181  01AAA7  00                 	db	0
  1182  01AAA8  00                 	db	0
  1183  01AAA9  00                 	db	0
  1184  01AAAA  00                 	db	0
  1185  01AAAB  00                 	db	0
  1186  01AAAC  00                 	db	0
  1187  01AAAD  00                 	db	0
  1188  01AAAE  00                 	db	0
  1189  01AAAF  00                 	db	0
  1190  01AAB0  00                 	db	0
  1191  01AAB1  00                 	db	0
  1192  01AAB2  00                 	db	0
  1193  01AAB3  00                 	db	0
  1194  01AAB4  00                 	db	0
  1195  01AAB5  00                 	db	0
  1196  01AAB6  00                 	db	0
  1197  01AAB7  00                 	db	0
  1198  01AAB8  00                 	db	0
  1199  01AAB9  00                 	db	0
  1200  01AABA  00                 	db	0
  1201  01AABB  00                 	db	0
  1202  01AABC  00                 	db	0
  1203  01AABD  00                 	db	0
  1204  01AABE  00                 	db	0
  1205  01AABF  00                 	db	0
  1206  01AAC0  00                 	db	0
  1207  01AAC1  00                 	db	0
  1208  01AAC2  00                 	db	0
  1209  01AAC3  00                 	db	0
  1210  01AAC4  00                 	db	0
  1211  01AAC5  00                 	db	0
  1212  01AAC6  00                 	db	0
  1213  01AAC7  00                 	db	0
  1214  01AAC8  00                 	db	0
  1215  01AAC9  00                 	db	0
  1216  01AACA  00                 	db	0
  1217  01AACB  00                 	db	0
  1218  01AACC  00                 	db	0
  1219  01AACD  00                 	db	0
  1220  01AACE  00                 	db	0
  1221  01AACF  00                 	db	0
  1222  01AAD0  00                 	db	0
  1223  01AAD1  00                 	db	0
  1224  01AAD2  00                 	db	0
  1225  01AAD3  00                 	db	0
  1226  01AAD4  00                 	db	0
  1227  01AAD5  00                 	db	0
  1228  01AAD6  00                 	db	0
  1229  01AAD7  00                 	db	0
  1230  01AAD8  00                 	db	0
  1231  01AAD9  00                 	db	0
  1232  01AADA  00                 	db	0
  1233  01AADB  00                 	db	0
  1234  01AADC  00                 	db	0
  1235  01AADD  00                 	db	0
  1236  01AADE  00                 	db	0
  1237  01AADF  00                 	db	0
  1238  01AAE0  00                 	db	0
  1239  01AAE1  00                 	db	0
  1240  01AAE2  00                 	db	0
  1241  01AAE3  00                 	db	0
  1242  01AAE4  00                 	db	0
  1243  01AAE5  00                 	db	0
  1244  01AAE6  00                 	db	0
  1245  01AAE7  00                 	db	0
  1246  01AAE8  00                 	db	0
  1247  01AAE9  00                 	db	0
  1248  01AAEA  00                 	db	0
  1249  01AAEB  00                 	db	0
  1250  01AAEC  00                 	db	0
  1251  01AAED  00                 	db	0
  1252  01AAEE  00                 	db	0
  1253  01AAEF  00                 	db	0
  1254  01AAF0  00                 	db	0
  1255  01AAF1  00                 	db	0
  1256  01AAF2  00                 	db	0
  1257  01AAF3  00                 	db	0
  1258  01AAF4  00                 	db	0
  1259  01AAF5  00                 	db	0
  1260  01AAF6  00                 	db	0
  1261  01AAF7  00                 	db	0
  1262  01AAF8  00                 	db	0
  1263  01AAF9  00                 	db	0
  1264  01AAFA  00                 	db	0
  1265  01AAFB  00                 	db	0
  1266  01AAFC  00                 	db	0
  1267  01AAFD  00                 	db	0
  1268  01AAFE  00                 	db	0
  1269  01AAFF  00                 	db	0
  1270  01AB00  00                 	db	0
  1271  01AB01  00                 	db	0
  1272  01AB02  00                 	db	0
  1273  01AB03  00                 	db	0
  1274  01AB04  00                 	db	0
  1275  01AB05  00                 	db	0
  1276  01AB06  00                 	db	0
  1277  01AB07  00                 	db	0
  1278  01AB08  00                 	db	0
  1279  01AB09  00                 	db	0
  1280  01AB0A  00                 	db	0
  1281  01AB0B  00                 	db	0
  1282  01AB0C  00                 	db	0
  1283  01AB0D  00                 	db	0
  1284  01AB0E  00                 	db	0
  1285  01AB0F  00                 	db	0
  1286  01AB10  00                 	db	0
  1287  01AB11  00                 	db	0
  1288  01AB12  00                 	db	0
  1289  01AB13  00                 	db	0
  1290  01AB14  00                 	db	0
  1291  01AB15  00                 	db	0
  1292  01AB16  00                 	db	0
  1293  01AB17  00                 	db	0
  1294  01AB18  00                 	db	0
  1295  01AB19  00                 	db	0
  1296  01AB1A  00                 	db	0
  1297  01AB1B  00                 	db	0
  1298  01AB1C  00                 	db	0
  1299  01AB1D  00                 	db	0
  1300  01AB1E  00                 	db	0
  1301  01AB1F  00                 	db	0
  1302  01AB20  00                 	db	0
  1303  01AB21  00                 	db	0
  1304  01AB22  00                 	db	0
  1305  01AB23  00                 	db	0
  1306  01AB24  00                 	db	0
  1307  01AB25  00                 	db	0
  1308  01AB26  00                 	db	0
  1309  01AB27  00                 	db	0
  1310  01AB28  00                 	db	0
  1311  01AB29  00                 	db	0
  1312  01AB2A  00                 	db	0
  1313  01AB2B  00                 	db	0
  1314  01AB2C  00                 	db	0
  1315  01AB2D  00                 	db	0
  1316  01AB2E  00                 	db	0
  1317  01AB2F  00                 	db	0
  1318  01AB30  00                 	db	0
  1319  01AB31  00                 	db	0
  1320  01AB32  00                 	db	0
  1321  01AB33  00                 	db	0
  1322  01AB34  00                 	db	0
  1323  01AB35  00                 	db	0
  1324  01AB36  00                 	db	0
  1325  01AB37  00                 	db	0
  1326  01AB38  00                 	db	0
  1327  01AB39  00                 	db	0
  1328  01AB3A  00                 	db	0
  1329  01AB3B  00                 	db	0
  1330  01AB3C  00                 	db	0
  1331  01AB3D  00                 	db	0
  1332  01AB3E  00                 	db	0
  1333  01AB3F  00                 	db	0
  1334  01AB40  00                 	db	0
  1335  01AB41  00                 	db	0
  1336  01AB42  00                 	db	0
  1337  01AB43  00                 	db	0
  1338  01AB44  00                 	db	0
  1339  01AB45  00                 	db	0
  1340  01AB46  00                 	db	0
  1341  01AB47  00                 	db	0
  1342  01AB48  00                 	db	0
  1343  01AB49  00                 	db	0
  1344  01AB4A  00                 	db	0
  1345  01AB4B  00                 	db	0
  1346  01AB4C  00                 	db	0
  1347  01AB4D  00                 	db	0
  1348  01AB4E  00                 	db	0
  1349  01AB4F  00                 	db	0
  1350  01AB50  00                 	db	0
  1351  01AB51  00                 	db	0
  1352  01AB52  00                 	db	0
  1353  01AB53  00                 	db	0
  1354  01AB54  00                 	db	0
  1355  01AB55  00                 	db	0
  1356  01AB56  00                 	db	0
  1357  01AB57  00                 	db	0
  1358  01AB58  00                 	db	0
  1359  01AB59  00                 	db	0
  1360  01AB5A  00                 	db	0
  1361  01AB5B  00                 	db	0
  1362  01AB5C  00                 	db	0
  1363  01AB5D  00                 	db	0
  1364  01AB5E  00                 	db	0
  1365  01AB5F  00                 	db	0
  1366  01AB60  00                 	db	0
  1367  01AB61  00                 	db	0
  1368  01AB62  00                 	db	0
  1369  01AB63  00                 	db	0
  1370  01AB64  00                 	db	0
  1371  01AB65  00                 	db	0
  1372  01AB66  00                 	db	0
  1373  01AB67  00                 	db	0
  1374  01AB68  00                 	db	0
  1375  01AB69  00                 	db	0
  1376  01AB6A  00                 	db	0
  1377  01AB6B  00                 	db	0
  1378  01AB6C  00                 	db	0
  1379  01AB6D  00                 	db	0
  1380  01AB6E  00                 	db	0
  1381  01AB6F  00                 	db	0
  1382  01AB70  00                 	db	0
  1383  01AB71  00                 	db	0
  1384  01AB72  00                 	db	0
  1385  01AB73  00                 	db	0
  1386  01AB74  00                 	db	0
  1387  01AB75  00                 	db	0
  1388  01AB76  00                 	db	0
  1389  01AB77  00                 	db	0
  1390  01AB78  00                 	db	0
  1391  01AB79  00                 	db	0
  1392  01AB7A  00                 	db	0
  1393  01AB7B  00                 	db	0
  1394  01AB7C  00                 	db	0
  1395  01AB7D  00                 	db	0
  1396  01AB7E  00                 	db	0
  1397  01AB7F  00                 	db	0
  1398  01AB80  00                 	db	0
  1399  01AB81  00                 	db	0
  1400  01AB82  00                 	db	0
  1401  01AB83  00                 	db	0
  1402  01AB84  00                 	db	0
  1403  01AB85  00                 	db	0
  1404  01AB86  00                 	db	0
  1405  01AB87  00                 	db	0
  1406  01AB88  00                 	db	0
  1407  01AB89  00                 	db	0
  1408  01AB8A  00                 	db	0
  1409  01AB8B  00                 	db	0
  1410  01AB8C  00                 	db	0
  1411  01AB8D  00                 	db	0
  1412  01AB8E  00                 	db	0
  1413  01AB8F  00                 	db	0
  1414  01AB90  00                 	db	0
  1415  01AB91  00                 	db	0
  1416  01AB92  00                 	db	0
  1417  01AB93  00                 	db	0
  1418  01AB94  00                 	db	0
  1419  01AB95  00                 	db	0
  1420  01AB96  00                 	db	0
  1421  01AB97  00                 	db	0
  1422  01AB98  00                 	db	0
  1423  01AB99  00                 	db	0
  1424  01AB9A  00                 	db	0
  1425  01AB9B  00                 	db	0
  1426  01AB9C  00                 	db	0
  1427  01AB9D  00                 	db	0
  1428  01AB9E  00                 	db	0
  1429  01AB9F  00                 	db	0
  1430  01ABA0  00                 	db	0
  1431  01ABA1  00                 	db	0
  1432  01ABA2  00                 	db	0
  1433  01ABA3  00                 	db	0
  1434  01ABA4  00                 	db	0
  1435  01ABA5  00                 	db	0
  1436  01ABA6  00                 	db	0
  1437  01ABA7  00                 	db	0
  1438  01ABA8  00                 	db	0
  1439  01ABA9  00                 	db	0
  1440  01ABAA  00                 	db	0
  1441  01ABAB  00                 	db	0
  1442  01ABAC  00                 	db	0
  1443  01ABAD  00                 	db	0
  1444  01ABAE  00                 	db	0
  1445  01ABAF  00                 	db	0
  1446                           
  1447                           ;initializer for _C
  1448  01ABB0  0000               	dw	0
  1449  01ABB2  0000               	dw	0
  1450  01ABB4  0000               	dw	0
  1451  01ABB6  0000               	dw	0
  1452  01ABB8  0000               	dw	0
  1453  01ABBA  0000               	dw	0
  1454  01ABBC  0000               	dw	0
  1455  01ABBE  0000               	dw	0
  1456  01ABC0  0000               	dw	0
  1457  01ABC2  0000               	dw	0
  1458  01ABC4  0000               	dw	0
  1459  01ABC6  0000               	dw	0
  1460  01ABC8  0000               	dw	0
  1461  01ABCA  0000               	dw	0
  1462  01ABCC  0000               	dw	0
  1463  01ABCE  0000               	dw	0
  1464  01ABD0  0000               	dw	0
  1465  01ABD2  0000               	dw	0
  1466  01ABD4  0000               	dw	0
  1467  01ABD6  0000               	dw	0
  1468  01ABD8  0000               	dw	0
  1469  01ABDA  0000               	dw	0
  1470  01ABDC  0000               	dw	0
  1471  01ABDE  0000               	dw	0
  1472  01ABE0  0000               	dw	0
  1473  01ABE2  0000               	dw	0
  1474  01ABE4  0000               	dw	0
  1475  01ABE6  0000               	dw	0
  1476  01ABE8  0000               	dw	0
  1477  01ABEA  0000               	dw	0
  1478  01ABEC  0000               	dw	0
  1479  01ABEE  0000               	dw	0
  1480  01ABF0  0000               	dw	0
  1481  01ABF2  0000               	dw	0
  1482  01ABF4  0000               	dw	0
  1483  01ABF6  0000               	dw	0
  1484  01ABF8  0000               	dw	0
  1485  01ABFA  0000               	dw	0
  1486  01ABFC  0000               	dw	0
  1487  01ABFE  0000               	dw	0
  1488  01AC00  0000               	dw	0
  1489  01AC02  0000               	dw	0
  1490  01AC04  0000               	dw	0
  1491  01AC06  0000               	dw	0
  1492  01AC08  0000               	dw	0
  1493  01AC0A  0000               	dw	0
  1494  01AC0C  0000               	dw	0
  1495  01AC0E  0000               	dw	0
  1496  01AC10  0000               	dw	0
  1497  01AC12  0000               	dw	0
  1498  01AC14  0000               	dw	0
  1499  01AC16  0000               	dw	0
  1500  01AC18  0000               	dw	0
  1501  01AC1A  0000               	dw	0
  1502  01AC1C  0000               	dw	0
  1503  01AC1E  0000               	dw	0
  1504  01AC20  0000               	dw	0
  1505  01AC22  0000               	dw	0
  1506  01AC24  0000               	dw	0
  1507  01AC26  0000               	dw	0
  1508  01AC28  0000               	dw	0
  1509  01AC2A  0000               	dw	0
  1510  01AC2C  0000               	dw	0
  1511  01AC2E  0000               	dw	0
  1512  01AC30  0000               	dw	0
  1513  01AC32  0000               	dw	0
  1514  01AC34  0000               	dw	0
  1515  01AC36  0000               	dw	0
  1516  01AC38  0000               	dw	0
  1517  01AC3A  0000               	dw	0
  1518  01AC3C  0000               	dw	0
  1519  01AC3E  42FA               	dw	17146
  1520  01AC40  0000               	dw	0
  1521  01AC42  0000               	dw	0
  1522  01AC44  0000               	dw	0
  1523  01AC46  0000               	dw	0
  1524  01AC48  0000               	dw	0
  1525  01AC4A  0000               	dw	0
  1526  01AC4C  0000               	dw	0
  1527  01AC4E  0000               	dw	0
  1528  01AC50  0000               	dw	0
  1529  01AC52  0000               	dw	0
  1530  01AC54  0000               	dw	0
  1531  01AC56  0000               	dw	0
  1532  01AC58  0000               	dw	0
  1533  01AC5A  0000               	dw	0
  1534  01AC5C  0000               	dw	0
  1535  01AC5E  0000               	dw	0
  1536  01AC60  0000               	dw	0
  1537  01AC62  0000               	dw	0
  1538  01AC64  0000               	dw	0
  1539  01AC66  0000               	dw	0
  1540  01AC68  00                 	db	0
  1541  01AC69  01                 	db	1
  1542  01AC6A  0000               	dw	0
  1543  01AC6C  0000               	dw	0
  1544  01AC6E  0000               	dw	0
  1545  01AC70  0000               	dw	0
  1546  01AC72  0000               	dw	0
  1547  01AC74  3F80               	dw	16256
  1548  01AC76  0000               	dw	0
  1549  01AC78  3F80               	dw	16256
  1550  01AC7A  0000               	dw	0
  1551  01AC7C  0000               	dw	0
  1552  01AC7E  0000               	dw	0
  1553  01AC80  0000               	dw	0
  1554  01AC82  0000               	dw	0
  1555  01AC84  0000               	dw	0
  1556  01AC86  0000               	dw	0
  1557  01AC88  0000               	dw	0
  1558  01AC8A  0000               	dw	0
  1559  01AC8C  0000               	dw	0
  1560  01AC8E  00                 	db	0
  1561  01AC8F  00                 	db	0
  1562  01AC90  00                 	db	0
  1563  01AC91  00                 	db	0
  1564  01AC92  00                 	db	0
  1565  01AC93  00                 	db	0
  1566  01AC94  00                 	db	0
  1567  01AC95  00                 	db	0
  1568  01AC96  00                 	db	0
  1569  01AC97  00                 	db	0
  1570  01AC98  00                 	db	0
  1571  01AC99  00                 	db	0
  1572  01AC9A  00                 	db	0
  1573  01AC9B  00                 	db	0
  1574  01AC9C  00                 	db	0
  1575  01AC9D  00                 	db	0
  1576  01AC9E  00                 	db	0
  1577  01AC9F  00                 	db	0
  1578  01ACA0  00                 	db	0
  1579  01ACA1  00                 	db	0
  1580  01ACA2  00                 	db	0
  1581  01ACA3  00                 	db	0
  1582  01ACA4  00                 	db	0
  1583  01ACA5  00                 	db	0
  1584  01ACA6  00                 	db	0
  1585  01ACA7  00                 	db	0
  1586  01ACA8  00                 	db	0
  1587  01ACA9  00                 	db	0
  1588  01ACAA  00                 	db	0
  1589  01ACAB  00                 	db	0
  1590  01ACAC  00                 	db	0
  1591  01ACAD  00                 	db	0
  1592  01ACAE  00                 	db	0
  1593  01ACAF  00                 	db	0
  1594  01ACB0  00                 	db	0
  1595  01ACB1  00                 	db	0
  1596  01ACB2  00                 	db	0
  1597  01ACB3  00                 	db	0
  1598  01ACB4  00                 	db	0
  1599  01ACB5  00                 	db	0
  1600  01ACB6  00                 	db	0
  1601  01ACB7  00                 	db	0
  1602  01ACB8  00                 	db	0
  1603  01ACB9  00                 	db	0
  1604  01ACBA  00                 	db	0
  1605  01ACBB  00                 	db	0
  1606  01ACBC  00                 	db	0
  1607  01ACBD  00                 	db	0
  1608  01ACBE  00                 	db	0
  1609  01ACBF  00                 	db	0
  1610  01ACC0  00                 	db	0
  1611  01ACC1  00                 	db	0
  1612  01ACC2  00                 	db	0
  1613  01ACC3  00                 	db	0
  1614  01ACC4  00                 	db	0
  1615  01ACC5  00                 	db	0
  1616  01ACC6  00                 	db	0
  1617  01ACC7  00                 	db	0
  1618  01ACC8  00                 	db	0
  1619  01ACC9  00                 	db	0
  1620  01ACCA  0000               	dw	0
  1621  01ACCC  0000               	dw	0
  1622  01ACCE  0000               	dw	0
  1623  01ACD0  0000               	dw	0
  1624  01ACD2  0000               	dw	0
  1625  01ACD4  0000               	dw	0
  1626  01ACD6  0000               	dw	0
  1627  01ACD8  0000               	dw	0
  1628  01ACDA  0000               	dw	0
  1629  01ACDC  0000               	dw	0
  1630  01ACDE  01                 	db	1
  1631  01ACDF  00                 	db	0
  1632  01ACE0  0000               	dw	0
  1633  01ACE2  0000               	dw	0
  1634  01ACE4  0000               	dw	0
  1635  01ACE6  0000               	dw	0
  1636  01ACE8  0000               	dw	0
  1637  01ACEA  0000               	dw	0
  1638  01ACEC  0000               	dw	0
  1639  01ACEE  0000               	dw	0
  1640                           
  1641                           	psect	idataBANK1
  1642  000FEA                     __pidataBANK1:
  1643                           	opt callstack 0
  1644                           
  1645                           ;initializer for _R
  1646  000FEA  0000               	dw	0
  1647  000FEC  0000               	dw	0
  1648  000FEE  0000               	dw	0
  1649  000FF0  0000               	dw	0
  1650  000FF2  0000               	dw	0
  1651  000FF4  0000               	dw	0
  1652  000FF6  0000               	dw	0
  1653  000FF8  0000               	dw	0
  1654  000FFA  0000               	dw	0
  1655  000FFC  0000               	dw	0
  1656  000FFE  0000               	dw	0
  1657  001000  0000               	dw	0
  1658  001002  0000               	dw	0
  1659  001004  0000               	dw	0
  1660  001006  0000               	dw	0
  1661  001008  0000               	dw	0
  1662  00100A  0000               	dw	0
  1663  00100C  0000               	dw	0
  1664  00100E  0000               	dw	0
  1665  001010  0F62               	dw	3938
  1666  001012  0FA4               	dw	4004
  1667  001014  89A0               	dw	35232
  1668  001016  3DB0               	dw	15792
  1669  001018  DEA4               	dw	56996
  1670  00101A  3D13               	dw	15635
  1671  00101C  00                 	db	0
  1672  00101D  0000               	dw	0
  1673  00101F  00                 	db	0
  1674  001020  00                 	db	0
  1675  001021  0000               	dw	0
  1676  001023  0000               	dw	0
  1677  001025  0000               	dw	0
  1678  001027  0000               	dw	0
  1679  001029  0000               	dw	0
  1680  00102B  0000               	dw	0
  1681  00102D  0000               	dw	0
  1682  00102F  0000               	dw	0
  1683  001031  0000               	dw	0
  1684  001033  0000               	dw	0
  1685  001035  0000               	dw	0
  1686  001037  0000               	dw	0
  1687  001039  0000               	dw	0
  1688  00103B  0000               	dw	0
  1689  00103D  0000               	dw	0
  1690  00103F  0000               	dw	0
  1691  001041  0000               	dw	0
  1692  001043  0000               	dw	0
  1693  001045  0000               	dw	0
  1694  001047  0000               	dw	0
  1695  001049  0000               	dw	0
  1696  00104B  0000               	dw	0
  1697  00104D  0000               	dw	0
  1698  00104F  0000               	dw	0
  1699  001051  0000               	dw	0
  1700  001053  0000               	dw	0
  1701  001055  0000               	dw	0
  1702  001057  0000               	dw	0
  1703  001059  0000               	dw	0
  1704  00105B  0000               	dw	0
  1705  00105D  0000               	dw	0
  1706  00105F  0000               	dw	0
  1707  001061  0000               	dw	0
  1708  001063  0000               	dw	0
  1709  001065  0000               	dw	0
  1710  001067  0000               	dw	0
  1711  001069  0000               	dw	0
  1712  00106B  0000               	dw	0
  1713  00106D  0000               	dw	0
  1714  00106F  0000               	dw	0
  1715  001071  0000               	dw	0
  1716  001073  0000               	dw	0
  1717  001075  0000               	dw	0
  1718  001077  0000               	dw	0
  1719  001079  0000               	dw	0
  1720  00107B  0000               	dw	0
  1721  00107D  0000               	dw	0
  1722  00107F  0000               	dw	0
  1723  001081  00                 	db	0
  1724  001082  1957               	dw	6487
  1725  001084  42                 	db	66
  1726                           
  1727                           ;initializer for _H
  1728  001085  00                 	db	0
  1729  001086  00                 	db	0
  1730  001087  01                 	db	1
  1731  001088  00                 	db	0
  1732  001089  01                 	db	1
  1733  00108A  00                 	db	0
  1734  00108B  01                 	db	1
  1735  00108C  00                 	db	0
  1736  00108D  00                 	db	0
  1737                           
  1738                           	psect	idataBANK2
  1739  000A5C                     __pidataBANK2:
  1740                           	opt callstack 0
  1741                           
  1742                           ;initializer for stoa@F1166
  1743  000A5C  28                 	db	40
  1744  000A5D  6E                 	db	110
  1745  000A5E  75                 	db	117
  1746  000A5F  6C                 	db	108
  1747  000A60  6C                 	db	108
  1748  000A61  29                 	db	41
  1749  000A62  00                 	db	0
  1750                           
  1751                           ;initializer for _V
  1752  000A63  00                 	db	0
  1753  000A64  00                 	db	0
  1754  000A65  00                 	db	0
  1755  000A66  00                 	db	0
  1756  000A67  00                 	db	0
  1757  000A68  00                 	db	0
  1758  000A69  00                 	db	0
  1759  000A6A  00                 	db	0
  1760  000A6B  00                 	db	0
  1761  000A6C  00                 	db	0
  1762  000A6D  00                 	db	0
  1763  000A6E  00                 	db	0
  1764  000A6F  00                 	db	0
  1765  000A70  00                 	db	0
  1766  000A71  00                 	db	0
  1767  000A72  00                 	db	0
  1768  000A73  00                 	db	0
  1769  000A74  00                 	db	0
  1770  000A75  00                 	db	0
  1771  000A76  00                 	db	0
  1772  000A77  00                 	db	0
  1773  000A78  00                 	db	0
  1774  000A79  00                 	db	0
  1775  000A7A  00                 	db	0
  1776  000A7B  00                 	db	0
  1777  000A7C  00                 	db	0
  1778  000A7D  00                 	db	0
  1779  000A7E  00                 	db	0
  1780  000A7F  00                 	db	0
  1781  000A80  00                 	db	0
  1782  000A81  00                 	db	0
  1783  000A82  00                 	db	0
  1784  000A83  00                 	db	0
  1785  000A84  00                 	db	0
  1786  000A85  00                 	db	0
  1787  000A86  00                 	db	0
  1788  000A87  00                 	db	0
  1789  000A88  00                 	db	0
  1790  000A89  00                 	db	0
  1791  000A8A  00                 	db	0
  1792  000A8B  00                 	db	0
  1793  000A8C  00                 	db	0
  1794  000A8D  00                 	db	0
  1795  000A8E  00                 	db	0
  1796  000A8F  00                 	db	0
  1797  000A90  00                 	db	0
  1798  000A91  00                 	db	0
  1799  000A92  00                 	db	0
  1800  000A93  00                 	db	0
  1801  000A94  00                 	db	0
  1802  000A95  00                 	db	0
  1803  000A96  00                 	db	0
  1804  000A97  00                 	db	0
  1805  000A98  00                 	db	0
  1806  000A99  00                 	db	0
  1807  000A9A  00                 	db	0
  1808  000A9B  00                 	db	0
  1809  000A9C  00                 	db	0
  1810  000A9D  00                 	db	0
  1811  000A9E  00                 	db	0
  1812  000A9F  00                 	db	0
  1813  000AA0  00                 	db	0
  1814  000AA1  00                 	db	0
  1815  000AA2  00                 	db	0
  1816  000AA3  00                 	db	0
  1817  000AA4  00                 	db	0
  1818  000AA5  00                 	db	0
  1819  000AA6  00                 	db	0
  1820  000AA7  00                 	db	0
  1821  000AA8  00                 	db	0
  1822  000AA9  00                 	db	0
  1823  000AAA  00                 	db	0
  1824  000AAB  00                 	db	0
  1825  000AAC  00                 	db	0
  1826  000AAD  00                 	db	0
  1827  000AAE  00                 	db	0
  1828  000AAF  00                 	db	0
  1829  000AB0  00                 	db	0
  1830  000AB1  00                 	db	0
  1831  000AB2  00                 	db	0
  1832  000AB3  00                 	db	0
  1833  000AB4  00                 	db	0
  1834  000AB5  00                 	db	0
  1835  000AB6  00                 	db	0
  1836  000AB7  00                 	db	0
  1837  000AB8  00                 	db	0
  1838  000AB9  00                 	db	0
  1839  000ABA  00                 	db	0
  1840  000ABB  00                 	db	0
  1841  000ABC  00                 	db	0
  1842  000ABD  00                 	db	0
  1843  000ABE  00                 	db	0
  1844  000ABF  00                 	db	0
  1845  000AC0  00                 	db	0
  1846  000AC1  00                 	db	0
  1847  000AC2  00                 	db	0
  1848  000AC3  00                 	db	0
  1849  000AC4  00                 	db	0
  1850  000AC5  00                 	db	0
  1851  000AC6  00                 	db	0
  1852  000AC7  00                 	db	0
  1853  000AC8  00                 	db	0
  1854  000AC9  00                 	db	0
  1855  000ACA  00                 	db	0
  1856  000ACB  00                 	db	0
  1857  000ACC  00                 	db	0
  1858  000ACD  00                 	db	0
  1859  000ACE  00                 	db	0
  1860  000ACF  00                 	db	0
  1861  000AD0  00                 	db	0
  1862  000AD1  00                 	db	0
  1863  000AD2  00                 	db	0
  1864  000AD3  00                 	db	0
  1865  000AD4  00                 	db	0
  1866  000AD5  00                 	db	0
  1867  000AD6  00                 	db	0
  1868  000AD7  00                 	db	0
  1869  000AD8  00                 	db	0
  1870  000AD9  00                 	db	0
  1871  000ADA  00                 	db	0
  1872  000ADB  00                 	db	0
  1873  000ADC  00                 	db	0
  1874  000ADD  00                 	db	0
  1875  000ADE  00                 	db	0
  1876  000ADF  00                 	db	0
  1877  000AE0  00                 	db	0
  1878  000AE1  00                 	db	0
  1879  000AE2  00                 	db	0
  1880  000AE3  00                 	db	0
  1881  000AE4  019A               	dw	410
  1882  000AE6  5E48               	dw	24136
  1883  000AE8  00                 	db	0
  1884  000AE9  00                 	db	0
  1885  000AEA  00                 	db	0
  1886  000AEB  00                 	db	0
  1887  000AEC  00                 	db	0
  1888  000AED  00                 	db	0
  1889  000AEE  00                 	db	0
  1890  000AEF  0000               	dw	0
  1891  000AF1  0000               	dw	0
  1892  000AF3  0000               	dw	0
  1893  000AF5  0000               	dw	0
  1894  000AF7  0000               	dw	0
  1895  000AF9  0000               	dw	0
  1896  000AFB  00                 	db	0
  1897  000AFC  00                 	db	0
  1898  000AFD  00                 	db	0
  1899  000AFE  00                 	db	0
  1900  000AFF  00                 	db	0
  1901  000B00  00                 	db	0
  1902  000B01  00                 	db	0
  1903  000B02  00                 	db	0
  1904  000B03  00                 	db	0
  1905  000B04  00                 	db	0
  1906  000B05  00                 	db	0
  1907  000B06  0000               	dw	0
  1908  000B08  0000               	dw	0
  1909  000B0A  2D                 	db	45
  1910  000B0B  00                 	db	0
  1911  000B0C  00                 	db	0
  1912  000B0D  00                 	db	0
  1913  000B0E  00                 	db	0
  1914  000B0F  00                 	db	0
  1915  000B10  0000               	dw	0
  1916  000B12  0000               	dw	0
  1917  000B14  0000               	dw	0
  1918  000B16  0000               	dw	0
  1919                           
  1920                           	psect	mediumconst
  1921  00F716                     __pmediumconst:
  1922                           	opt callstack 0
  1923  00F716  00                 	db	0
  1924  00F717                     _BVSOC_TABLE:
  1925                           	opt callstack 0
  1926  00F717  59D8               	dw	23000
  1927  00F719  0000               	dw	0
  1928  00F71B  0005               	dw	5
  1929  00F71D  0000               	dw	0
  1930  00F71F  5B68               	dw	23400
  1931  00F721  0000               	dw	0
  1932  00F723  000A               	dw	10
  1933  00F725  0000               	dw	0
  1934  00F727  5C30               	dw	23600
  1935  00F729  0000               	dw	0
  1936  00F72B  0014               	dw	20
  1937  00F72D  0000               	dw	0
  1938  00F72F  5E38               	dw	24120
  1939  00F731  0000               	dw	0
  1940  00F733  0019               	dw	25
  1941  00F735  0000               	dw	0
  1942  00F737  5E88               	dw	24200
  1943  00F739  0000               	dw	0
  1944  00F73B  001E               	dw	30
  1945  00F73D  0000               	dw	0
  1946  00F73F  5F78               	dw	24440
  1947  00F741  0000               	dw	0
  1948  00F743  0028               	dw	40
  1949  00F745  0000               	dw	0
  1950  00F747  5FDC               	dw	24540
  1951  00F749  0000               	dw	0
  1952  00F74B  002D               	dw	45
  1953  00F74D  0000               	dw	0
  1954  00F74F  6018               	dw	24600
  1955  00F751  0000               	dw	0
  1956  00F753  0032               	dw	50
  1957  00F755  0000               	dw	0
  1958  00F757  6046               	dw	24646
  1959  00F759  0000               	dw	0
  1960  00F75B  0035               	dw	53
  1961  00F75D  0000               	dw	0
  1962  00F75F  607C               	dw	24700
  1963  00F761  0000               	dw	0
  1964  00F763  0037               	dw	55
  1965  00F765  0000               	dw	0
  1966  00F767  60AE               	dw	24750
  1967  00F769  0000               	dw	0
  1968  00F76B  0039               	dw	57
  1969  00F76D  0000               	dw	0
  1970  00F76F  60E0               	dw	24800
  1971  00F771  0000               	dw	0
  1972  00F773  003C               	dw	60
  1973  00F775  0000               	dw	0
  1974  00F777  6112               	dw	24850
  1975  00F779  0000               	dw	0
  1976  00F77B  003F               	dw	63
  1977  00F77D  0000               	dw	0
  1978  00F77F  615D               	dw	24925
  1979  00F781  0000               	dw	0
  1980  00F783  0043               	dw	67
  1981  00F785  0000               	dw	0
  1982  00F787  61A8               	dw	25000
  1983  00F789  0000               	dw	0
  1984  00F78B  0046               	dw	70
  1985  00F78D  0000               	dw	0
  1986  00F78F  61BC               	dw	25020
  1987  00F791  0000               	dw	0
  1988  00F793  0048               	dw	72
  1989  00F795  0000               	dw	0
  1990  00F797  61D0               	dw	25040
  1991  00F799  0000               	dw	0
  1992  00F79B  004B               	dw	75
  1993  00F79D  0000               	dw	0
  1994  00F79F  61DA               	dw	25050
  1995  00F7A1  0000               	dw	0
  1996  00F7A3  0050               	dw	80
  1997  00F7A5  0000               	dw	0
  1998  00F7A7  61E4               	dw	25060
  1999  00F7A9  0000               	dw	0
  2000  00F7AB  0055               	dw	85
  2001  00F7AD  0000               	dw	0
  2002  00F7AF  61F8               	dw	25080
  2003  00F7B1  0000               	dw	0
  2004  00F7B3  005A               	dw	90
  2005  00F7B5  0000               	dw	0
  2006  00F7B7  6208               	dw	25096
  2007  00F7B9  0000               	dw	0
  2008  00F7BB  005C               	dw	92
  2009  00F7BD  0000               	dw	0
  2010  00F7BF  6222               	dw	25122
  2011  00F7C1  0000               	dw	0
  2012  00F7C3  005D               	dw	93
  2013  00F7C5  0000               	dw	0
  2014  00F7C7  6234               	dw	25140
  2015  00F7C9  0000               	dw	0
  2016  00F7CB  005F               	dw	95
  2017  00F7CD  0000               	dw	0
  2018  00F7CF  6248               	dw	25160
  2019  00F7D1  0000               	dw	0
  2020  00F7D3  0061               	dw	97
  2021  00F7D5  0000               	dw	0
  2022  00F7D7  625C               	dw	25180
  2023  00F7D9  0000               	dw	0
  2024  00F7DB  0064               	dw	100
  2025  00F7DD  0000               	dw	0
  2026  00F7DF  6784               	dw	26500
  2027  00F7E1  0000               	dw	0
  2028  00F7E3  0062               	dw	98
  2029  00F7E5  0000               	dw	0
  2030  00F7E7                     __end_of_BVSOC_TABLE:
  2031                           	opt callstack 0
  2032  00F7E7                     ___month_to_secs@secs_through_month:
  2033                           	opt callstack 0
  2034  00F7E7  0000               	dw	0
  2035  00F7E9  0000               	dw	0
  2036  00F7EB  DE80               	dw	56960
  2037  00F7ED  0028               	dw	40
  2038  00F7EF  C880               	dw	51328
  2039  00F7F1  004D               	dw	77
  2040  00F7F3  A700               	dw	42752
  2041  00F7F5  0076               	dw	118
  2042  00F7F7  3400               	dw	13312
  2043  00F7F9  009E               	dw	158
  2044  00F7FB  1280               	dw	4736
  2045  00F7FD  00C7               	dw	199
  2046  00F7FF  9F80               	dw	40832
  2047  00F801  00EE               	dw	238
  2048  00F803  7E00               	dw	32256
  2049  00F805  0117               	dw	279
  2050  00F807  5C80               	dw	23680
  2051  00F809  0140               	dw	320
  2052  00F80B  E980               	dw	59776
  2053  00F80D  0167               	dw	359
  2054  00F80F  C800               	dw	51200
  2055  00F811  0190               	dw	400
  2056  00F813  5500               	dw	21760
  2057  00F815  01B8               	dw	440
  2058  00F817                     __end_of___month_to_secs@secs_through_month:
  2059                           	opt callstack 0
  2060  00F817                     ___secs_to_tm@days_in_month:
  2061                           	opt callstack 0
  2062  00F817  1F                 	db	31
  2063  00F818  1E                 	db	30
  2064  00F819  1F                 	db	31
  2065  00F81A  1E                 	db	30
  2066  00F81B  1F                 	db	31
  2067  00F81C  1F                 	db	31
  2068  00F81D  1E                 	db	30
  2069  00F81E  1F                 	db	31
  2070  00F81F  1E                 	db	30
  2071  00F820  1F                 	db	31
  2072  00F821  1F                 	db	31
  2073  00F822  1D                 	db	29
  2074  00F823                     __end_of___secs_to_tm@days_in_month:
  2075                           	opt callstack 0
  2076  00F823                     _T:
  2077                           	opt callstack 0
  2078  00F823  63                 	db	99
  2079  00F824  6F                 	db	111
  2080  00F825  6D                 	db	109
  2081  00F826  6D                 	db	109
  2082  00F827  61                 	db	97
  2083  00F828  6E                 	db	110
  2084  00F829  64                 	db	100
  2085  00F82A  73                 	db	115
  2086  00F82B  20                 	db	32
  2087  00F82C  31                 	db	49
  2088  00F82D  00                 	db	0
  2089  00F82E  00                 	db	0
  2090  00F82F  00                 	db	0
  2091  00F830  00                 	db	0
  2092  00F831  00                 	db	0
  2093  00F832  00                 	db	0
  2094  00F833  00                 	db	0
  2095  00F834  00                 	db	0
  2096  00F835  00                 	db	0
  2097  00F836  00                 	db	0
  2098  00F837  00                 	db	0
  2099  00F838  00                 	db	0
  2100  00F839  64                 	db	100
  2101  00F83A  69                 	db	105
  2102  00F83B  73                 	db	115
  2103  00F83C  70                 	db	112
  2104  00F83D  6C                 	db	108
  2105  00F83E  61                 	db	97
  2106  00F83F  79                 	db	121
  2107  00F840  73                 	db	115
  2108  00F841  20                 	db	32
  2109  00F842  31                 	db	49
  2110  00F843  00                 	db	0
  2111  00F844  00                 	db	0
  2112  00F845  00                 	db	0
  2113  00F846  00                 	db	0
  2114  00F847  00                 	db	0
  2115  00F848  00                 	db	0
  2116  00F849  00                 	db	0
  2117  00F84A  00                 	db	0
  2118  00F84B  00                 	db	0
  2119  00F84C  00                 	db	0
  2120  00F84D  00                 	db	0
  2121  00F84E  00                 	db	0
  2122  00F84F  63                 	db	99
  2123  00F850  6F                 	db	111
  2124  00F851  6D                 	db	109
  2125  00F852  6D                 	db	109
  2126  00F853  61                 	db	97
  2127  00F854  6E                 	db	110
  2128  00F855  64                 	db	100
  2129  00F856  73                 	db	115
  2130  00F857  20                 	db	32
  2131  00F858  32                 	db	50
  2132  00F859  00                 	db	0
  2133  00F85A  00                 	db	0
  2134  00F85B  00                 	db	0
  2135  00F85C  00                 	db	0
  2136  00F85D  00                 	db	0
  2137  00F85E  00                 	db	0
  2138  00F85F  00                 	db	0
  2139  00F860  00                 	db	0
  2140  00F861  00                 	db	0
  2141  00F862  00                 	db	0
  2142  00F863  00                 	db	0
  2143  00F864  00                 	db	0
  2144  00F865  64                 	db	100
  2145  00F866  69                 	db	105
  2146  00F867  73                 	db	115
  2147  00F868  70                 	db	112
  2148  00F869  6C                 	db	108
  2149  00F86A  61                 	db	97
  2150  00F86B  79                 	db	121
  2151  00F86C  73                 	db	115
  2152  00F86D  20                 	db	32
  2153  00F86E  32                 	db	50
  2154  00F86F  00                 	db	0
  2155  00F870  00                 	db	0
  2156  00F871  00                 	db	0
  2157  00F872  00                 	db	0
  2158  00F873  00                 	db	0
  2159  00F874  00                 	db	0
  2160  00F875  00                 	db	0
  2161  00F876  00                 	db	0
  2162  00F877  00                 	db	0
  2163  00F878  00                 	db	0
  2164  00F879  00                 	db	0
  2165  00F87A  00                 	db	0
  2166  00F87B  63                 	db	99
  2167  00F87C  6F                 	db	111
  2168  00F87D  6D                 	db	109
  2169  00F87E  6D                 	db	109
  2170  00F87F  61                 	db	97
  2171  00F880  6E                 	db	110
  2172  00F881  64                 	db	100
  2173  00F882  73                 	db	115
  2174  00F883  20                 	db	32
  2175  00F884  33                 	db	51
  2176  00F885  00                 	db	0
  2177  00F886  00                 	db	0
  2178  00F887  00                 	db	0
  2179  00F888  00                 	db	0
  2180  00F889  00                 	db	0
  2181  00F88A  00                 	db	0
  2182  00F88B  00                 	db	0
  2183  00F88C  00                 	db	0
  2184  00F88D  00                 	db	0
  2185  00F88E  00                 	db	0
  2186  00F88F  00                 	db	0
  2187  00F890  00                 	db	0
  2188  00F891  64                 	db	100
  2189  00F892  69                 	db	105
  2190  00F893  73                 	db	115
  2191  00F894  70                 	db	112
  2192  00F895  6C                 	db	108
  2193  00F896  61                 	db	97
  2194  00F897  79                 	db	121
  2195  00F898  73                 	db	115
  2196  00F899  20                 	db	32
  2197  00F89A  33                 	db	51
  2198  00F89B  00                 	db	0
  2199  00F89C  00                 	db	0
  2200  00F89D  00                 	db	0
  2201  00F89E  00                 	db	0
  2202  00F89F  00                 	db	0
  2203  00F8A0  00                 	db	0
  2204  00F8A1  00                 	db	0
  2205  00F8A2  00                 	db	0
  2206  00F8A3  00                 	db	0
  2207  00F8A4  00                 	db	0
  2208  00F8A5  00                 	db	0
  2209  00F8A6  00                 	db	0
  2210  00F8A7  63                 	db	99
  2211  00F8A8  6F                 	db	111
  2212  00F8A9  6D                 	db	109
  2213  00F8AA  6D                 	db	109
  2214  00F8AB  61                 	db	97
  2215  00F8AC  6E                 	db	110
  2216  00F8AD  64                 	db	100
  2217  00F8AE  73                 	db	115
  2218  00F8AF  20                 	db	32
  2219  00F8B0  34                 	db	52
  2220  00F8B1  00                 	db	0
  2221  00F8B2  00                 	db	0
  2222  00F8B3  00                 	db	0
  2223  00F8B4  00                 	db	0
  2224  00F8B5  00                 	db	0
  2225  00F8B6  00                 	db	0
  2226  00F8B7  00                 	db	0
  2227  00F8B8  00                 	db	0
  2228  00F8B9  00                 	db	0
  2229  00F8BA  00                 	db	0
  2230  00F8BB  00                 	db	0
  2231  00F8BC  00                 	db	0
  2232  00F8BD  64                 	db	100
  2233  00F8BE  69                 	db	105
  2234  00F8BF  73                 	db	115
  2235  00F8C0  70                 	db	112
  2236  00F8C1  6C                 	db	108
  2237  00F8C2  61                 	db	97
  2238  00F8C3  79                 	db	121
  2239  00F8C4  73                 	db	115
  2240  00F8C5  20                 	db	32
  2241  00F8C6  34                 	db	52
  2242  00F8C7  00                 	db	0
  2243  00F8C8  00                 	db	0
  2244  00F8C9  00                 	db	0
  2245  00F8CA  00                 	db	0
  2246  00F8CB  00                 	db	0
  2247  00F8CC  00                 	db	0
  2248  00F8CD  00                 	db	0
  2249  00F8CE  00                 	db	0
  2250  00F8CF  00                 	db	0
  2251  00F8D0  00                 	db	0
  2252  00F8D1  00                 	db	0
  2253  00F8D2  00                 	db	0
  2254  00F8D3                     __end_of_T:
  2255                           	opt callstack 0
  2256  00F8D3                     _spin:
  2257                           	opt callstack 0
  2258  00F8D3  7C                 	db	124
  2259  00F8D4  7C                 	db	124
  2260  00F8D5  2F                 	db	47
  2261  00F8D6  2F                 	db	47
  2262  00F8D7  2D                 	db	45
  2263  00F8D8  2D                 	db	45
  2264  00F8D9  00                 	db	0
  2265  00F8DA  00                 	db	0
  2266  00F8DB  00                 	db	0
  2267  00F8DC  00                 	db	0
  2268  00F8DD  00                 	db	0
  2269  00F8DE  00                 	db	0
  2270  00F8DF  00                 	db	0
  2271  00F8E0  00                 	db	0
  2272  00F8E1  00                 	db	0
  2273  00F8E2  00                 	db	0
  2274  00F8E3  00                 	db	0
  2275  00F8E4  00                 	db	0
  2276  00F8E5  00                 	db	0
  2277  00F8E6  00                 	db	0
  2278  00F8E7  7C                 	db	124
  2279  00F8E8  7C                 	db	124
  2280  00F8E9  2F                 	db	47
  2281  00F8EA  2F                 	db	47
  2282  00F8EB  2D                 	db	45
  2283  00F8EC  2D                 	db	45
  2284  00F8ED  5C                 	db	92
  2285  00F8EE  5C                 	db	92
  2286  00F8EF  00                 	db	0
  2287  00F8F0  00                 	db	0
  2288  00F8F1  00                 	db	0
  2289  00F8F2  00                 	db	0
  2290  00F8F3  00                 	db	0
  2291  00F8F4  00                 	db	0
  2292  00F8F5  00                 	db	0
  2293  00F8F6  00                 	db	0
  2294  00F8F7  00                 	db	0
  2295  00F8F8  00                 	db	0
  2296  00F8F9  00                 	db	0
  2297  00F8FA  00                 	db	0
  2298  00F8FB  4F                 	db	79
  2299  00F8FC  4F                 	db	79
  2300  00F8FD  4F                 	db	79
  2301  00F8FE  4F                 	db	79
  2302  00F8FF  4F                 	db	79
  2303  00F900  4F                 	db	79
  2304  00F901  2D                 	db	45
  2305  00F902  2D                 	db	45
  2306  00F903  5F                 	db	95
  2307  00F904  5F                 	db	95
  2308  00F905  2D                 	db	45
  2309  00F906  00                 	db	0
  2310  00F907  00                 	db	0
  2311  00F908  00                 	db	0
  2312  00F909  00                 	db	0
  2313  00F90A  00                 	db	0
  2314  00F90B  00                 	db	0
  2315  00F90C  00                 	db	0
  2316  00F90D  00                 	db	0
  2317  00F90E  00                 	db	0
  2318  00F90F  76                 	db	118
  2319  00F910  76                 	db	118
  2320  00F911  3C                 	db	60
  2321  00F912  3C                 	db	60
  2322  00F913  5E                 	db	94
  2323  00F914  5E                 	db	94
  2324  00F915  3E                 	db	62
  2325  00F916  3E                 	db	62
  2326  00F917  00                 	db	0
  2327  00F918  00                 	db	0
  2328  00F919  00                 	db	0
  2329  00F91A  00                 	db	0
  2330  00F91B  00                 	db	0
  2331  00F91C  00                 	db	0
  2332  00F91D  00                 	db	0
  2333  00F91E  00                 	db	0
  2334  00F91F  00                 	db	0
  2335  00F920  00                 	db	0
  2336  00F921  00                 	db	0
  2337  00F922  00                 	db	0
  2338  00F923  2E                 	db	46
  2339  00F924  2E                 	db	46
  2340  00F925  2A                 	db	42
  2341  00F926  2A                 	db	42
  2342  00F927  78                 	db	120
  2343  00F928  23                 	db	35
  2344  00F929  78                 	db	120
  2345  00F92A  23                 	db	35
  2346  00F92B  58                 	db	88
  2347  00F92C  58                 	db	88
  2348  00F92D  7C                 	db	124
  2349  00F92E  7C                 	db	124
  2350  00F92F  2D                 	db	45
  2351  00F930  2D                 	db	45
  2352  00F931  00                 	db	0
  2353  00F932  00                 	db	0
  2354  00F933  00                 	db	0
  2355  00F934  00                 	db	0
  2356  00F935  00                 	db	0
  2357  00F936  00                 	db	0
  2358  00F937  2E                 	db	46
  2359  00F938  2E                 	db	46
  2360  00F939  6F                 	db	111
  2361  00F93A  6F                 	db	111
  2362  00F93B  4F                 	db	79
  2363  00F93C  4F                 	db	79
  2364  00F93D  6F                 	db	111
  2365  00F93E  6F                 	db	111
  2366  00F93F  00                 	db	0
  2367  00F940  00                 	db	0
  2368  00F941  00                 	db	0
  2369  00F942  00                 	db	0
  2370  00F943  00                 	db	0
  2371  00F944  00                 	db	0
  2372  00F945  00                 	db	0
  2373  00F946  00                 	db	0
  2374  00F947  00                 	db	0
  2375  00F948  00                 	db	0
  2376  00F949  00                 	db	0
  2377  00F94A  00                 	db	0
  2378  00F94B                     __end_of_spin:
  2379                           	opt callstack 0
  2380  00F94B  0000               	dw	0
  2381  00F94D  3F80               	dw	16256
  2382  00F94F  0000               	dw	0
  2383  00F951  3FC0               	dw	16320
  2384  00F953                     __end_of_bp:
  2385                           	opt callstack 0
  2386  00F953                     ___gmt:
  2387                           	opt callstack 0
  2388  00F953  47                 	db	71
  2389  00F954  4D                 	db	77
  2390  00F955  54                 	db	84
  2391  00F956  00                 	db	0
  2392  00F957                     __end_of___gmt:
  2393                           	opt callstack 0
  2394  00F957  AA00               	dw	43520
  2395  00F959  3FB8               	dw	16312
  2396  00F95B                     __end_of_ivln2_h:
  2397                           	opt callstack 0
  2398  00F95B  23C6               	dw	9158
  2399  00F95D  B8F6               	dw	47350
  2400  00F95F                     __end_of_cp_l:
  2401                           	opt callstack 0
  2402  00F95F  4000               	dw	16384
  2403  00F961  3F76               	dw	16246
  2404  00F963                     __end_of_cp_h:
  2405                           	opt callstack 0
  2406  0000                     _IVTADL	set	14493
  2407  0000                     _IVTADH	set	14494
  2408  0000                     _IVTADU	set	14495
  2409  0000                     _CRCDATH	set	14689
  2410  0000                     _CRCDATL	set	14688
  2411  0000                     _CRCCON0bits	set	14696
  2412  0000                     _CRCCON1bits	set	14697
  2413  0000                     _CRCXORL	set	14694
  2414  0000                     _CRCXORH	set	14695
  2415  0000                     _SCANTRIG	set	14717
  2416  0000                     _SCANHADRL	set	14713
  2417  0000                     _SCANHADRH	set	14714
  2418  0000                     _SCANHADRU	set	14715
  2419  0000                     _SCANLADRL	set	14710
  2420  0000                     _SCANLADRH	set	14711
  2421  0000                     _SCANLADRU	set	14712
  2422  0000                     _SCANCON0	set	14716
  2423  0000                     _CRCACCH	set	14691
  2424  0000                     _CRCACCL	set	14690
  2425  0000                     _CRCCON1	set	14697
  2426  0000                     _CRCCON0	set	14696
  2427  0000                     _PIR6bits	set	14758
  2428  0000                     _PIR4bits	set	14756
  2429  0000                     _PIE8bits	set	14744
  2430  0000                     _PIR8bits	set	14760
  2431  0000                     _PIR0bits	set	14752
  2432  0000                     _NVMCON2	set	14822
  2433  0000                     _NVMDAT	set	14819
  2434  0000                     _NVMADRL	set	14816
  2435  0000                     _NVMADRH	set	14817
  2436  0000                     _NVMCON1bits	set	14821
  2437  0000                     _SCANPR	set	14839
  2438  0000                     _DMA2PR	set	14836
  2439  0000                     _DMA1PR	set	14835
  2440  0000                     _MAINPR	set	14834
  2441  0000                     _ISRPR	set	14833
  2442  0000                     _PIE2bits	set	14738
  2443  0000                     _PIR2bits	set	14754
  2444  0000                     _PIE9bits	set	14745
  2445  0000                     _PIR9bits	set	14761
  2446  0000                     _PIE6bits	set	14742
  2447  0000                     _PIE3bits	set	14739
  2448  0000                     _PMD7	set	14791
  2449  0000                     _PMD6	set	14790
  2450  0000                     _PMD5	set	14789
  2451  0000                     _PMD4	set	14788
  2452  0000                     _PMD3	set	14787
  2453  0000                     _PMD2	set	14786
  2454  0000                     _PMD1	set	14785
  2455  0000                     _PMD0	set	14784
  2456  0000                     _OSCTUNE	set	14814
  2457  0000                     _OSCFRQ	set	14815
  2458  0000                     _OSCEN	set	14813
  2459  0000                     _OSCCON3	set	14811
  2460  0000                     _OSCCON1	set	14809
  2461  0000                     _IPR8bits	set	14728
  2462  0000                     _IPR9bits	set	14729
  2463  0000                     _IPR5bits	set	14725
  2464  0000                     _IPR1bits	set	14721
  2465  0000                     _IPR3bits	set	14723
  2466  0000                     _IPR6bits	set	14726
  2467  0000                     _IPR2bits	set	14722
  2468  0000                     _PIE5bits	set	14741
  2469  0000                     _PIE1bits	set	14737
  2470  0000                     _PIR5bits	set	14757
  2471  0000                     _PIR1bits	set	14753
  2472  0000                     _PLLR	set	118496
  2473  0000                     _SPI1SDIPPS	set	15071
  2474  0000                     _U1RXPPS	set	15077
  2475  0000                     _RC6PPS	set	14870
  2476  0000                     _RC5PPS	set	14869
  2477  0000                     _INT1PPS	set	15041
  2478  0000                     _RD1PPS	set	14873
  2479  0000                     _INT0PPS	set	15040
  2480  0000                     _RC3PPS	set	14867
  2481  0000                     _RB6PPS	set	14862
  2482  0000                     _SPI1SCKPPS	set	15070
  2483  0000                     _U2RXPPS	set	15080
  2484  0000                     _SLRCONF	set	14995
  2485  0000                     _SLRCONE	set	14979
  2486  0000                     _SLRCOND	set	14963
  2487  0000                     _SLRCONC	set	14947
  2488  0000                     _SLRCONB	set	14931
  2489  0000                     _SLRCONA	set	14915
  2490  0000                     _ODCOND	set	14962
  2491  0000                     _ODCONC	set	14946
  2492  0000                     _ODCONB	set	14930
  2493  0000                     _ODCONA	set	14914
  2494  0000                     _ODCONF	set	14994
  2495  0000                     _ODCONE	set	14978
  2496  0000                     _WPUC	set	14945
  2497  0000                     _WPUA	set	14913
  2498  0000                     _WPUB	set	14929
  2499  0000                     _WPUE	set	14977
  2500  0000                     _WPUF	set	14993
  2501  0000                     _WPUD	set	14961
  2502  0000                     _ANSELA	set	14912
  2503  0000                     _ANSELF	set	14992
  2504  0000                     _ANSELE	set	14976
  2505  0000                     _ANSELB	set	14928
  2506  0000                     _ANSELC	set	14944
  2507  0000                     _ANSELD	set	14960
  2508  0000                     _DMA2SSA	set	15321
  2509  0000                     _DMA1SSA	set	15353
  2510  0000                     _DMA2DSZ	set	15310
  2511  0000                     _DMA2SSZ	set	15319
  2512  0000                     _DMA2DSA	set	15312
  2513  0000                     _DMA1DSZ	set	15342
  2514  0000                     _DMA1SSZ	set	15351
  2515  0000                     _DMA1DSA	set	15344
  2516  0000                     _DMA2CON0bits	set	15324
  2517  0000                     _DMA2CON1bits	set	15325
  2518  0000                     _DMA1CON0bits	set	15356
  2519  0000                     _DMA1CON1bits	set	15357
  2520  0000                     _DMA2CON0	set	15324
  2521  0000                     _DMA2AIRQ	set	15326
  2522  0000                     _DMA2SIRQ	set	15327
  2523  0000                     _DMA2CON1	set	15325
  2524  0000                     _DMA1CON0	set	15356
  2525  0000                     _DMA1AIRQ	set	15358
  2526  0000                     _DMA1SIRQ	set	15359
  2527  0000                     _DMA1CON1	set	15357
  2528  0000                     _CLKRCON	set	15589
  2529  0000                     _CLKRCLK	set	15590
  2530  0000                     _SPI1CON1bits	set	15637
  2531  0000                     _SPI1STATUSbits	set	15639
  2532  0000                     _SPI1INTFbits	set	15642
  2533  0000                     _SPI1CON0bits	set	15636
  2534  0000                     _SPI1RXB	set	15632
  2535  0000                     _SPI1TXB	set	15633
  2536  0000                     _SPI1TCNTL	set	15634
  2537  0000                     _SPI1CON0	set	15636
  2538  0000                     _SPI1CLK	set	15644
  2539  0000                     _SPI1BAUD	set	15641
  2540  0000                     _SPI1CON2	set	15638
  2541  0000                     _SPI1CON1	set	15637
  2542  0000                     _U2RXB	set	15824
  2543  0000                     _U2TXB	set	15826
  2544  0000                     _U2ERRIE	set	15842
  2545  0000                     _U2ERRIR	set	15841
  2546  0000                     _U2UIR	set	15840
  2547  0000                     _U2FIFO	set	15839
  2548  0000                     _U2BRGH	set	15838
  2549  0000                     _U2BRGL	set	15837
  2550  0000                     _U2CON2	set	15836
  2551  0000                     _U2CON1	set	15835
  2552  0000                     _U2CON0	set	15834
  2553  0000                     _U2P3L	set	15832
  2554  0000                     _U2P2L	set	15830
  2555  0000                     _U2P1L	set	15828
  2556  0000                     _U1RXB	set	15848
  2557  0000                     _U1ERRIE	set	15866
  2558  0000                     _U1ERRIR	set	15865
  2559  0000                     _U1UIR	set	15864
  2560  0000                     _U1FIFO	set	15863
  2561  0000                     _U1BRGH	set	15862
  2562  0000                     _U1BRGL	set	15861
  2563  0000                     _U1CON2	set	15860
  2564  0000                     _U1CON1	set	15859
  2565  0000                     _U1CON0	set	15858
  2566  0000                     _U1P3H	set	15857
  2567  0000                     _U1P3L	set	15856
  2568  0000                     _U1P2H	set	15855
  2569  0000                     _U1P2L	set	15854
  2570  0000                     _U1P1H	set	15853
  2571  0000                     _U1P1L	set	15852
  2572  0000                     _FVRCON	set	16065
  2573  0000                     _ADFLTRL	set	16102
  2574  0000                     _ADFLTRH	set	16103
  2575  0000                     _ADCON0bits	set	16120
  2576  0000                     _ADCON0	set	16120
  2577  0000                     _ADCLK	set	16127
  2578  0000                     _ADACT	set	16126
  2579  0000                     _ADREF	set	16125
  2580  0000                     _ADSTAT	set	16124
  2581  0000                     _ADCON3	set	16123
  2582  0000                     _ADCON2	set	16122
  2583  0000                     _ADCON1	set	16121
  2584  0000                     _ADPREH	set	16119
  2585  0000                     _ADPREL	set	16118
  2586  0000                     _ADCAP	set	16117
  2587  0000                     _ADACQH	set	16116
  2588  0000                     _ADACQL	set	16115
  2589  0000                     _ADPCH	set	16113
  2590  0000                     _ADRPT	set	16108
  2591  0000                     _ADACCU	set	16106
  2592  0000                     _ADSTPTH	set	16101
  2593  0000                     _ADSTPTL	set	16100
  2594  0000                     _ADUTHH	set	16097
  2595  0000                     _ADUTHL	set	16096
  2596  0000                     _ADLTHH	set	16095
  2597  0000                     _ADLTHL	set	16094
  2598  0000                     _CCPTMRS1bits	set	16223
  2599  0000                     _PORTDbits	set	16333
  2600  0000                     _PORTFbits	set	16335
  2601  0000                     _LATFbits	set	16319
  2602  0000                     _LATCbits	set	16316
  2603  0000                     _LATDbits	set	16317
  2604  0000                     _PORTBbits	set	16331
  2605  0000                     _T3CONbits	set	16294
  2606  0000                     _T3CON	set	16294
  2607  0000                     _TMR3L	set	16292
  2608  0000                     _TMR3H	set	16293
  2609  0000                     _T3CLK	set	16297
  2610  0000                     _T3GATE	set	16296
  2611  0000                     _T3GCON	set	16295
  2612  0000                     _T2CON	set	16300
  2613  0000                     _T2TMR	set	16298
  2614  0000                     _T2PR	set	16299
  2615  0000                     _T2RST	set	16303
  2616  0000                     _T2HLT	set	16301
  2617  0000                     _T2CLKCON	set	16302
  2618  0000                     _PWM8DCL	set	16224
  2619  0000                     _PWM8DCH	set	16225
  2620  0000                     _PWM8CON	set	16226
  2621  0000                     _LATEbits	set	16318
  2622  0000                     _T5CONbits	set	16282
  2623  0000                     _T5CON	set	16282
  2624  0000                     _TMR5L	set	16280
  2625  0000                     _TMR5H	set	16281
  2626  0000                     _T5CLK	set	16285
  2627  0000                     _T5GATE	set	16284
  2628  0000                     _T5GCON	set	16283
  2629  0000                     _T6CON	set	16276
  2630  0000                     _T6TMR	set	16274
  2631  0000                     _T6PR	set	16275
  2632  0000                     _T6RST	set	16279
  2633  0000                     _T6HLT	set	16277
  2634  0000                     _T6CLKCON	set	16278
  2635  0000                     _TRISD	set	16325
  2636  0000                     _TRISC	set	16324
  2637  0000                     _TRISB	set	16323
  2638  0000                     _TRISA	set	16322
  2639  0000                     _TRISF	set	16327
  2640  0000                     _TRISE	set	16326
  2641  0000                     _LATC	set	16316
  2642  0000                     _LATB	set	16315
  2643  0000                     _LATF	set	16319
  2644  0000                     _LATA	set	16314
  2645  0000                     _LATD	set	16317
  2646  0000                     _LATE	set	16318
  2647  0000                     _IVTLOCKbits	set	16340
  2648  0000                     _IVTLOCK	set	16340
  2649  0000                     _INTCON0bits	set	16338
  2650  0000                     _GIE	set	130711
  2651  00F963                     STR_103:
  2652                           
  2653                           ; BSR set to: 57
  2654  00F963  20                 	db	32
  2655  00F964  25                 	db	37
  2656  00F965  63                 	db	99	;'c'
  2657  00F966  20                 	db	32
  2658  00F967  2C                 	db	44
  2659  00F968  25                 	db	37
  2660  00F969  6C                 	db	108	;'l'
  2661  00F96A  75                 	db	117	;'u'
  2662  00F96B  2C                 	db	44
  2663  00F96C  25                 	db	37
  2664  00F96D  34                 	db	52	;'4'
  2665  00F96E  2E                 	db	46
  2666  00F96F  34                 	db	52	;'4'
  2667  00F970  66                 	db	102	;'f'
  2668  00F971  2C                 	db	44
  2669  00F972  25                 	db	37
  2670  00F973  34                 	db	52	;'4'
  2671  00F974  2E                 	db	46
  2672  00F975  34                 	db	52	;'4'
  2673  00F976  66                 	db	102	;'f'
  2674  00F977  2C                 	db	44
  2675  00F978  25                 	db	37
  2676  00F979  34                 	db	52	;'4'
  2677  00F97A  2E                 	db	46
  2678  00F97B  34                 	db	52	;'4'
  2679  00F97C  66                 	db	102	;'f'
  2680  00F97D  2C                 	db	44
  2681  00F97E  25                 	db	37
  2682  00F97F  34                 	db	52	;'4'
  2683  00F980  2E                 	db	46
  2684  00F981  34                 	db	52	;'4'
  2685  00F982  66                 	db	102	;'f'
  2686  00F983  2C                 	db	44
  2687  00F984  25                 	db	37
  2688  00F985  34                 	db	52	;'4'
  2689  00F986  2E                 	db	46
  2690  00F987  34                 	db	52	;'4'
  2691  00F988  66                 	db	102	;'f'
  2692  00F989  2C                 	db	44
  2693  00F98A  25                 	db	37
  2694  00F98B  34                 	db	52	;'4'
  2695  00F98C  2E                 	db	46
  2696  00F98D  33                 	db	51	;'3'
  2697  00F98E  66                 	db	102	;'f'
  2698  00F98F  2C                 	db	44
  2699  00F990  25                 	db	37
  2700  00F991  34                 	db	52	;'4'
  2701  00F992  2E                 	db	46
  2702  00F993  33                 	db	51	;'3'
  2703  00F994  66                 	db	102	;'f'
  2704  00F995  2C                 	db	44
  2705  00F996  25                 	db	37
  2706  00F997  34                 	db	52	;'4'
  2707  00F998  2E                 	db	46
  2708  00F999  33                 	db	51	;'3'
  2709  00F99A  66                 	db	102	;'f'
  2710  00F99B  2C                 	db	44
  2711  00F99C  25                 	db	37
  2712  00F99D  34                 	db	52	;'4'
  2713  00F99E  2E                 	db	46
  2714  00F99F  33                 	db	51	;'3'
  2715  00F9A0  66                 	db	102	;'f'
  2716  00F9A1  2C                 	db	44
  2717  00F9A2  25                 	db	37
  2718  00F9A3  34                 	db	52	;'4'
  2719  00F9A4  2E                 	db	46
  2720  00F9A5  33                 	db	51	;'3'
  2721  00F9A6  66                 	db	102	;'f'
  2722  00F9A7  2C                 	db	44
  2723  00F9A8  25                 	db	37
  2724  00F9A9  34                 	db	52	;'4'
  2725  00F9AA  2E                 	db	46
  2726  00F9AB  33                 	db	51	;'3'
  2727  00F9AC  66                 	db	102	;'f'
  2728  00F9AD  2C                 	db	44
  2729  00F9AE  25                 	db	37
  2730  00F9AF  64                 	db	100	;'d'
  2731  00F9B0  2C                 	db	44
  2732  00F9B1  25                 	db	37
  2733  00F9B2  64                 	db	100	;'d'
  2734  00F9B3  2C                 	db	44
  2735  00F9B4  25                 	db	37
  2736  00F9B5  32                 	db	50	;'2'
  2737  00F9B6  2E                 	db	46
  2738  00F9B7  36                 	db	54	;'6'
  2739  00F9B8  66                 	db	102	;'f'
  2740  00F9B9  2C                 	db	44
  2741  00F9BA  25                 	db	37
  2742  00F9BB  34                 	db	52	;'4'
  2743  00F9BC  2E                 	db	46
  2744  00F9BD  33                 	db	51	;'3'
  2745  00F9BE  66                 	db	102	;'f'
  2746  00F9BF  2C                 	db	44
  2747  00F9C0  25                 	db	37
  2748  00F9C1  64                 	db	100	;'d'
  2749  00F9C2  2C                 	db	44
  2750  00F9C3  25                 	db	37
  2751  00F9C4  64                 	db	100	;'d'
  2752  00F9C5  2C                 	db	44
  2753  00F9C6  25                 	db	37
  2754  00F9C7  6C                 	db	108	;'l'
  2755  00F9C8  75                 	db	117	;'u'
  2756  00F9C9  2C                 	db	44
  2757  00F9CA  25                 	db	37
  2758  00F9CB  6C                 	db	108	;'l'
  2759  00F9CC  75                 	db	117	;'u'
  2760  00F9CD  2C                 	db	44
  2761  00F9CE  25                 	db	37
  2762  00F9CF  34                 	db	52	;'4'
  2763  00F9D0  2E                 	db	46
  2764  00F9D1  33                 	db	51	;'3'
  2765  00F9D2  66                 	db	102	;'f'
  2766  00F9D3  2C                 	db	44
  2767  00F9D4  25                 	db	37
  2768  00F9D5  34                 	db	52	;'4'
  2769  00F9D6  2E                 	db	46
  2770  00F9D7  33                 	db	51	;'3'
  2771  00F9D8  66                 	db	102	;'f'
  2772  00F9D9  2C                 	db	44
  2773  00F9DA  25                 	db	37
  2774  00F9DB  34                 	db	52	;'4'
  2775  00F9DC  2E                 	db	46
  2776  00F9DD  33                 	db	51	;'3'
  2777  00F9DE  66                 	db	102	;'f'
  2778  00F9DF  0D                 	db	13
  2779  00F9E0  0A                 	db	10
  2780  00F9E1  00                 	db	0
  2781  00F9E2                     STR_141:
  2782                           
  2783                           ; BSR set to: 57
  2784  00F9E2  4A                 	db	74	;'J'
  2785  00F9E3  61                 	db	97	;'a'
  2786  00F9E4  6E                 	db	110	;'n'
  2787  00F9E5  46                 	db	70	;'F'
  2788  00F9E6  65                 	db	101	;'e'
  2789  00F9E7  62                 	db	98	;'b'
  2790  00F9E8  4D                 	db	77	;'M'
  2791  00F9E9  61                 	db	97	;'a'
  2792  00F9EA  72                 	db	114	;'r'
  2793  00F9EB  41                 	db	65	;'A'
  2794  00F9EC  70                 	db	112	;'p'
  2795  00F9ED  72                 	db	114	;'r'
  2796  00F9EE  4D                 	db	77	;'M'
  2797  00F9EF  61                 	db	97	;'a'
  2798  00F9F0  79                 	db	121	;'y'
  2799  00F9F1  4A                 	db	74	;'J'
  2800  00F9F2  75                 	db	117	;'u'
  2801  00F9F3  6E                 	db	110	;'n'
  2802  00F9F4  4A                 	db	74	;'J'
  2803  00F9F5  75                 	db	117	;'u'
  2804  00F9F6  6C                 	db	108	;'l'
  2805  00F9F7  41                 	db	65	;'A'
  2806  00F9F8  75                 	db	117	;'u'
  2807  00F9F9  67                 	db	103	;'g'
  2808  00F9FA  53                 	db	83	;'S'
  2809  00F9FB  65                 	db	101	;'e'
  2810  00F9FC  70                 	db	112	;'p'
  2811  00F9FD  4F                 	db	79	;'O'
  2812  00F9FE  63                 	db	99	;'c'
  2813  00F9FF  74                 	db	116	;'t'
  2814  00FA00  4E                 	db	78	;'N'
  2815  00FA01  6F                 	db	111	;'o'
  2816  00FA02  76                 	db	118	;'v'
  2817  00FA03  44                 	db	68	;'D'
  2818  00FA04  65                 	db	101	;'e'
  2819  00FA05  63                 	db	99	;'c'
  2820  00FA06  00                 	db	0
  2821  00FA07                     STR_45:
  2822                           
  2823                           ; BSR set to: 57
  2824  00FA07  53                 	db	83	;'S'
  2825  00FA08  25                 	db	37
  2826  00FA09  63                 	db	99	;'c'
  2827  00FA0A  43                 	db	67	;'C'
  2828  00FA0B  20                 	db	32
  2829  00FA0C  25                 	db	37
  2830  00FA0D  64                 	db	100	;'d'
  2831  00FA0E  20                 	db	32
  2832  00FA0F  52                 	db	82	;'R'
  2833  00FA10  55                 	db	85	;'U'
  2834  00FA11  4E                 	db	78	;'N'
  2835  00FA12  20                 	db	32
  2836  00FA13  25                 	db	37
  2837  00FA14  64                 	db	100	;'d'
  2838  00FA15  20                 	db	32
  2839  00FA16  56                 	db	86	;'V'
  2840  00FA17  25                 	db	37
  2841  00FA18  32                 	db	50	;'2'
  2842  00FA19  2E                 	db	46
  2843  00FA1A  32                 	db	50	;'2'
  2844  00FA1B  66                 	db	102	;'f'
  2845  00FA1C  20                 	db	32
  2846  00FA1D  20                 	db	32
  2847  00FA1E  20                 	db	32
  2848  00FA1F  20                 	db	32
  2849  00FA20  20                 	db	32
  2850  00FA21  20                 	db	32
  2851  00FA22  20                 	db	32
  2852  00FA23  20                 	db	32
  2853  00FA24  00                 	db	0
  2854  00FA25                     STR_78:
  2855                           
  2856                           ; BSR set to: 57
  2857  00FA25  25                 	db	37
  2858  00FA26  64                 	db	100	;'d'
  2859  00FA27  20                 	db	32
  2860  00FA28  25                 	db	37
  2861  00FA29  64                 	db	100	;'d'
  2862  00FA2A  20                 	db	32
  2863  00FA2B  25                 	db	37
  2864  00FA2C  64                 	db	100	;'d'
  2865  00FA2D  20                 	db	32
  2866  00FA2E  25                 	db	37
  2867  00FA2F  64                 	db	100	;'d'
  2868  00FA30  20                 	db	32
  2869  00FA31  20                 	db	32
  2870  00FA32  20                 	db	32
  2871  00FA33  20                 	db	32
  2872  00FA34  20                 	db	32
  2873  00FA35  20                 	db	32
  2874  00FA36  20                 	db	32
  2875  00FA37  20                 	db	32
  2876  00FA38  20                 	db	32
  2877  00FA39  20                 	db	32
  2878  00FA3A  20                 	db	32
  2879  00FA3B  20                 	db	32
  2880  00FA3C  20                 	db	32
  2881  00FA3D  20                 	db	32
  2882  00FA3E  20                 	db	32
  2883  00FA3F  20                 	db	32
  2884  00FA40  00                 	db	0
  2885  00FA41                     STR_22:
  2886                           
  2887                           ; BSR set to: 57
  2888  00FA41  52                 	db	82	;'R'
  2889  00FA42  31                 	db	49	;'1'
  2890  00FA43  20                 	db	32
  2891  00FA44  25                 	db	37
  2892  00FA45  32                 	db	50	;'2'
  2893  00FA46  2E                 	db	46
  2894  00FA47  33                 	db	51	;'3'
  2895  00FA48  66                 	db	102	;'f'
  2896  00FA49  20                 	db	32
  2897  00FA4A  25                 	db	37
  2898  00FA4B  33                 	db	51	;'3'
  2899  00FA4C  2E                 	db	46
  2900  00FA4D  34                 	db	52	;'4'
  2901  00FA4E  66                 	db	102	;'f'
  2902  00FA4F  20                 	db	32
  2903  00FA50  20                 	db	32
  2904  00FA51  20                 	db	32
  2905  00FA52  20                 	db	32
  2906  00FA53  20                 	db	32
  2907  00FA54  20                 	db	32
  2908  00FA55  20                 	db	32
  2909  00FA56  20                 	db	32
  2910  00FA57  20                 	db	32
  2911  00FA58  20                 	db	32
  2912  00FA59  20                 	db	32
  2913  00FA5A  20                 	db	32
  2914  00FA5B  00                 	db	0
  2915  00FA5C                     STR_23:
  2916                           
  2917                           ; BSR set to: 57
  2918  00FA5C  52                 	db	82	;'R'
  2919  00FA5D  32                 	db	50	;'2'
  2920  00FA5E  20                 	db	32
  2921  00FA5F  25                 	db	37
  2922  00FA60  32                 	db	50	;'2'
  2923  00FA61  2E                 	db	46
  2924  00FA62  33                 	db	51	;'3'
  2925  00FA63  66                 	db	102	;'f'
  2926  00FA64  20                 	db	32
  2927  00FA65  25                 	db	37
  2928  00FA66  33                 	db	51	;'3'
  2929  00FA67  2E                 	db	46
  2930  00FA68  34                 	db	52	;'4'
  2931  00FA69  66                 	db	102	;'f'
  2932  00FA6A  20                 	db	32
  2933  00FA6B  20                 	db	32
  2934  00FA6C  20                 	db	32
  2935  00FA6D  20                 	db	32
  2936  00FA6E  20                 	db	32
  2937  00FA6F  20                 	db	32
  2938  00FA70  20                 	db	32
  2939  00FA71  20                 	db	32
  2940  00FA72  20                 	db	32
  2941  00FA73  20                 	db	32
  2942  00FA74  20                 	db	32
  2943  00FA75  20                 	db	32
  2944  00FA76  00                 	db	0
  2945  00FA77                     
  2946                           ; BSR set to: 57
  2947  00FA77  20                 	db	32
  2948  00FA78  4D                 	db	77	;'M'
  2949  00FA79  65                 	db	101	;'e'
  2950  00FA7A  73                 	db	115	;'s'
  2951  00FA7B  67                 	db	103	;'g'
  2952  00FA7C  20                 	db	32
  2953  00FA7D  25                 	db	37
  2954  00FA7E  64                 	db	100	;'d'
  2955  00FA7F  20                 	db	32
  2956  00FA80  53                 	db	83	;'S'
  2957  00FA81  74                 	db	116	;'t'
  2958  00FA82  61                 	db	97	;'a'
  2959  00FA83  63                 	db	99	;'c'
  2960  00FA84  6B                 	db	107	;'k'
  2961  00FA85  20                 	db	32
  2962  00FA86  25                 	db	37
  2963  00FA87  64                 	db	100	;'d'
  2964  00FA88  20                 	db	32
  2965  00FA89  20                 	db	32
  2966  00FA8A  20                 	db	32
  2967  00FA8B  20                 	db	32
  2968  00FA8C  20                 	db	32
  2969  00FA8D  20                 	db	32
  2970  00FA8E  20                 	db	32
  2971  00FA8F  20                 	db	32
  2972  00FA90  00                 	db	0
  2973  00FA91                     STR_13:
  2974                           
  2975                           ; BSR set to: 57
  2976  00FA91  53                 	db	83	;'S'
  2977  00FA92  20                 	db	32
  2978  00FA93  53                 	db	83	;'S'
  2979  00FA94  25                 	db	37
  2980  00FA95  63                 	db	99	;'c'
  2981  00FA96  43                 	db	67	;'C'
  2982  00FA97  20                 	db	32
  2983  00FA98  25                 	db	37
  2984  00FA99  64                 	db	100	;'d'
  2985  00FA9A  20                 	db	32
  2986  00FA9B  25                 	db	37
  2987  00FA9C  32                 	db	50	;'2'
  2988  00FA9D  2E                 	db	46
  2989  00FA9E  34                 	db	52	;'4'
  2990  00FA9F  66                 	db	102	;'f'
  2991  00FAA0  20                 	db	32
  2992  00FAA1  20                 	db	32
  2993  00FAA2  20                 	db	32
  2994  00FAA3  20                 	db	32
  2995  00FAA4  20                 	db	32
  2996  00FAA5  20                 	db	32
  2997  00FAA6  20                 	db	32
  2998  00FAA7  20                 	db	32
  2999  00FAA8  20                 	db	32
  3000  00FAA9  20                 	db	32
  3001  00FAAA  00                 	db	0
  3002  00FAAB                     STR_46:
  3003                           
  3004                           ; BSR set to: 57
  3005  00FAAB  45                 	db	69	;'E'
  3006  00FAAC  53                 	db	83	;'S'
  3007  00FAAD  52                 	db	82	;'R'
  3008  00FAAE  20                 	db	32
  3009  00FAAF  20                 	db	32
  3010  00FAB0  25                 	db	37
  3011  00FAB1  32                 	db	50	;'2'
  3012  00FAB2  2E                 	db	46
  3013  00FAB3  36                 	db	54	;'6'
  3014  00FAB4  66                 	db	102	;'f'
  3015  00FAB5  20                 	db	32
  3016  00FAB6  20                 	db	32
  3017  00FAB7  20                 	db	32
  3018  00FAB8  20                 	db	32
  3019  00FAB9  20                 	db	32
  3020  00FABA  20                 	db	32
  3021  00FABB  20                 	db	32
  3022  00FABC  20                 	db	32
  3023  00FABD  20                 	db	32
  3024  00FABE  20                 	db	32
  3025  00FABF  20                 	db	32
  3026  00FAC0  20                 	db	32
  3027  00FAC1  20                 	db	32
  3028  00FAC2  00                 	db	0
  3029  00FAC3                     STR_43:
  3030                           
  3031                           ; BSR set to: 57
  3032  00FAC3  42                 	db	66	;'B'
  3033  00FAC4  41                 	db	65	;'A'
  3034  00FAC5  54                 	db	84	;'T'
  3035  00FAC6  54                 	db	84	;'T'
  3036  00FAC7  20                 	db	32
  3037  00FAC8  50                 	db	80	;'P'
  3038  00FAC9  57                 	db	87	;'W'
  3039  00FACA  52                 	db	82	;'R'
  3040  00FACB  20                 	db	32
  3041  00FACC  25                 	db	37
  3042  00FACD  33                 	db	51	;'3'
  3043  00FACE  2E                 	db	46
  3044  00FACF  32                 	db	50	;'2'
  3045  00FAD0  66                 	db	102	;'f'
  3046  00FAD1  20                 	db	32
  3047  00FAD2  20                 	db	32
  3048  00FAD3  20                 	db	32
  3049  00FAD4  20                 	db	32
  3050  00FAD5  20                 	db	32
  3051  00FAD6  20                 	db	32
  3052  00FAD7  20                 	db	32
  3053  00FAD8  20                 	db	32
  3054  00FAD9  20                 	db	32
  3055  00FADA  00                 	db	0
  3056  00FADB                     STR_47:
  3057                           
  3058                           ; BSR set to: 57
  3059  00FADB  52                 	db	82	;'R'
  3060  00FADC  31                 	db	49	;'1'
  3061  00FADD  20                 	db	32
  3062  00FADE  25                 	db	37
  3063  00FADF  32                 	db	50	;'2'
  3064  00FAE0  2E                 	db	46
  3065  00FAE1  33                 	db	51	;'3'
  3066  00FAE2  66                 	db	102	;'f'
  3067  00FAE3  20                 	db	32
  3068  00FAE4  25                 	db	37
  3069  00FAE5  33                 	db	51	;'3'
  3070  00FAE6  2E                 	db	46
  3071  00FAE7  34                 	db	52	;'4'
  3072  00FAE8  66                 	db	102	;'f'
  3073  00FAE9  20                 	db	32
  3074  00FAEA  20                 	db	32
  3075  00FAEB  20                 	db	32
  3076  00FAEC  20                 	db	32
  3077  00FAED  20                 	db	32
  3078  00FAEE  20                 	db	32
  3079  00FAEF  20                 	db	32
  3080  00FAF0  20                 	db	32
  3081  00FAF1  20                 	db	32
  3082  00FAF2  00                 	db	0
  3083  00FAF3                     STR_48:
  3084                           
  3085                           ; BSR set to: 57
  3086  00FAF3  52                 	db	82	;'R'
  3087  00FAF4  32                 	db	50	;'2'
  3088  00FAF5  20                 	db	32
  3089  00FAF6  25                 	db	37
  3090  00FAF7  32                 	db	50	;'2'
  3091  00FAF8  2E                 	db	46
  3092  00FAF9  33                 	db	51	;'3'
  3093  00FAFA  66                 	db	102	;'f'
  3094  00FAFB  20                 	db	32
  3095  00FAFC  25                 	db	37
  3096  00FAFD  33                 	db	51	;'3'
  3097  00FAFE  2E                 	db	46
  3098  00FAFF  34                 	db	52	;'4'
  3099  00FB00  66                 	db	102	;'f'
  3100  00FB01  20                 	db	32
  3101  00FB02  20                 	db	32
  3102  00FB03  20                 	db	32
  3103  00FB04  20                 	db	32
  3104  00FB05  20                 	db	32
  3105  00FB06  20                 	db	32
  3106  00FB07  20                 	db	32
  3107  00FB08  20                 	db	32
  3108  00FB09  20                 	db	32
  3109  00FB0A  00                 	db	0
  3110  00FB0B                     STR_44:
  3111                           
  3112                           ; BSR set to: 57
  3113  00FB0B  42                 	db	66	;'B'
  3114  00FB0C  41                 	db	65	;'A'
  3115  00FB0D  48                 	db	72	;'H'
  3116  00FB0E  20                 	db	32
  3117  00FB0F  25                 	db	37
  3118  00FB10  33                 	db	51	;'3'
  3119  00FB11  2E                 	db	46
  3120  00FB12  32                 	db	50	;'2'
  3121  00FB13  66                 	db	102	;'f'
  3122  00FB14  20                 	db	32
  3123  00FB15  50                 	db	80	;'P'
  3124  00FB16  25                 	db	37
  3125  00FB17  33                 	db	51	;'3'
  3126  00FB18  2E                 	db	46
  3127  00FB19  32                 	db	50	;'2'
  3128  00FB1A  66                 	db	102	;'f'
  3129  00FB1B  20                 	db	32
  3130  00FB1C  20                 	db	32
  3131  00FB1D  20                 	db	32
  3132  00FB1E  20                 	db	32
  3133  00FB1F  20                 	db	32
  3134  00FB20  20                 	db	32
  3135  00FB21  20                 	db	32
  3136  00FB22  00                 	db	0
  3137  00FB23                     STR_16:
  3138                           
  3139                           ; BSR set to: 57
  3140  00FB23  20                 	db	32
  3141  00FB24  20                 	db	32
  3142  00FB25  20                 	db	32
  3143  00FB26  20                 	db	32
  3144  00FB27  20                 	db	32
  3145  00FB28  20                 	db	32
  3146  00FB29  20                 	db	32
  3147  00FB2A  20                 	db	32
  3148  00FB2B  20                 	db	32
  3149  00FB2C  20                 	db	32
  3150  00FB2D  20                 	db	32
  3151  00FB2E  20                 	db	32
  3152  00FB2F  20                 	db	32
  3153  00FB30  20                 	db	32
  3154  00FB31  20                 	db	32
  3155  00FB32  20                 	db	32
  3156  00FB33  20                 	db	32
  3157  00FB34  20                 	db	32
  3158  00FB35  20                 	db	32
  3159  00FB36  20                 	db	32
  3160  00FB37  20                 	db	32
  3161  00FB38  20                 	db	32
  3162  00FB39  00                 	db	0
  3163  00FB3A                     STR_21:
  3164                           
  3165                           ; BSR set to: 57
  3166  00FB3A  45                 	db	69	;'E'
  3167  00FB3B  53                 	db	83	;'S'
  3168  00FB3C  52                 	db	82	;'R'
  3169  00FB3D  20                 	db	32
  3170  00FB3E  20                 	db	32
  3171  00FB3F  25                 	db	37
  3172  00FB40  32                 	db	50	;'2'
  3173  00FB41  2E                 	db	46
  3174  00FB42  36                 	db	54	;'6'
  3175  00FB43  66                 	db	102	;'f'
  3176  00FB44  20                 	db	32
  3177  00FB45  20                 	db	32
  3178  00FB46  20                 	db	32
  3179  00FB47  20                 	db	32
  3180  00FB48  20                 	db	32
  3181  00FB49  20                 	db	32
  3182  00FB4A  20                 	db	32
  3183  00FB4B  20                 	db	32
  3184  00FB4C  20                 	db	32
  3185  00FB4D  20                 	db	32
  3186  00FB4E  20                 	db	32
  3187  00FB4F  20                 	db	32
  3188  00FB50  00                 	db	0
  3189  00FB51                     STR_14:
  3190                           
  3191                           ; BSR set to: 57
  3192  00FB51  53                 	db	83	;'S'
  3193  00FB52  74                 	db	116	;'t'
  3194  00FB53  61                 	db	97	;'a'
  3195  00FB54  74                 	db	116	;'t'
  3196  00FB55  69                 	db	105	;'i'
  3197  00FB56  63                 	db	99	;'c'
  3198  00FB57  20                 	db	32
  3199  00FB58  53                 	db	83	;'S'
  3200  00FB59  4F                 	db	79	;'O'
  3201  00FB5A  43                 	db	67	;'C'
  3202  00FB5B  20                 	db	32
  3203  00FB5C  25                 	db	37
  3204  00FB5D  64                 	db	100	;'d'
  3205  00FB5E  20                 	db	32
  3206  00FB5F  20                 	db	32
  3207  00FB60  20                 	db	32
  3208  00FB61  20                 	db	32
  3209  00FB62  20                 	db	32
  3210  00FB63  20                 	db	32
  3211  00FB64  20                 	db	32
  3212  00FB65  20                 	db	32
  3213  00FB66  20                 	db	32
  3214  00FB67  00                 	db	0
  3215  00FB68                     STR_40:
  3216                           
  3217                           ; BSR set to: 57
  3218  00FB68  42                 	db	66	;'B'
  3219  00FB69  41                 	db	65	;'A'
  3220  00FB6A  54                 	db	84	;'T'
  3221  00FB6B  20                 	db	32
  3222  00FB6C  49                 	db	73	;'I'
  3223  00FB6D  57                 	db	87	;'W'
  3224  00FB6E  48                 	db	72	;'H'
  3225  00FB6F  20                 	db	32
  3226  00FB70  25                 	db	37
  3227  00FB71  34                 	db	52	;'4'
  3228  00FB72  2E                 	db	46
  3229  00FB73  31                 	db	49	;'1'
  3230  00FB74  66                 	db	102	;'f'
  3231  00FB75  20                 	db	32
  3232  00FB76  20                 	db	32
  3233  00FB77  20                 	db	32
  3234  00FB78  20                 	db	32
  3235  00FB79  20                 	db	32
  3236  00FB7A  20                 	db	32
  3237  00FB7B  20                 	db	32
  3238  00FB7C  20                 	db	32
  3239  00FB7D  20                 	db	32
  3240  00FB7E  00                 	db	0
  3241  00FB7F                     STR_41:
  3242                           
  3243                           ; BSR set to: 57
  3244  00FB7F  42                 	db	66	;'B'
  3245  00FB80  41                 	db	65	;'A'
  3246  00FB81  54                 	db	84	;'T'
  3247  00FB82  20                 	db	32
  3248  00FB83  4F                 	db	79	;'O'
  3249  00FB84  57                 	db	87	;'W'
  3250  00FB85  48                 	db	72	;'H'
  3251  00FB86  20                 	db	32
  3252  00FB87  25                 	db	37
  3253  00FB88  34                 	db	52	;'4'
  3254  00FB89  2E                 	db	46
  3255  00FB8A  31                 	db	49	;'1'
  3256  00FB8B  66                 	db	102	;'f'
  3257  00FB8C  20                 	db	32
  3258  00FB8D  20                 	db	32
  3259  00FB8E  20                 	db	32
  3260  00FB8F  20                 	db	32
  3261  00FB90  20                 	db	32
  3262  00FB91  20                 	db	32
  3263  00FB92  20                 	db	32
  3264  00FB93  20                 	db	32
  3265  00FB94  20                 	db	32
  3266  00FB95  00                 	db	0
  3267  00FB96                     STR_42:
  3268                           
  3269                           ; BSR set to: 57
  3270  00FB96  42                 	db	66	;'B'
  3271  00FB97  41                 	db	65	;'A'
  3272  00FB98  54                 	db	84	;'T'
  3273  00FB99  20                 	db	32
  3274  00FB9A  54                 	db	84	;'T'
  3275  00FB9B  57                 	db	87	;'W'
  3276  00FB9C  48                 	db	72	;'H'
  3277  00FB9D  20                 	db	32
  3278  00FB9E  25                 	db	37
  3279  00FB9F  34                 	db	52	;'4'
  3280  00FBA0  2E                 	db	46
  3281  00FBA1  31                 	db	49	;'1'
  3282  00FBA2  66                 	db	102	;'f'
  3283  00FBA3  20                 	db	32
  3284  00FBA4  20                 	db	32
  3285  00FBA5  20                 	db	32
  3286  00FBA6  20                 	db	32
  3287  00FBA7  20                 	db	32
  3288  00FBA8  20                 	db	32
  3289  00FBA9  20                 	db	32
  3290  00FBAA  20                 	db	32
  3291  00FBAB  20                 	db	32
  3292  00FBAC  00                 	db	0
  3293  00FBAD                     STR_36:
  3294                           
  3295                           ; BSR set to: 57
  3296  00FBAD  49                 	db	73	;'I'
  3297  00FBAE  4E                 	db	78	;'N'
  3298  00FBAF  56                 	db	86	;'V'
  3299  00FBB0  20                 	db	32
  3300  00FBB1  20                 	db	32
  3301  00FBB2  57                 	db	87	;'W'
  3302  00FBB3  48                 	db	72	;'H'
  3303  00FBB4  20                 	db	32
  3304  00FBB5  25                 	db	37
  3305  00FBB6  33                 	db	51	;'3'
  3306  00FBB7  2E                 	db	46
  3307  00FBB8  32                 	db	50	;'2'
  3308  00FBB9  66                 	db	102	;'f'
  3309  00FBBA  20                 	db	32
  3310  00FBBB  20                 	db	32
  3311  00FBBC  20                 	db	32
  3312  00FBBD  20                 	db	32
  3313  00FBBE  20                 	db	32
  3314  00FBBF  20                 	db	32
  3315  00FBC0  20                 	db	32
  3316  00FBC1  20                 	db	32
  3317  00FBC2  20                 	db	32
  3318  00FBC3  00                 	db	0
  3319  00FBC4                     STR_35:
  3320                           
  3321                           ; BSR set to: 57
  3322  00FBC4  4C                 	db	76	;'L'
  3323  00FBC5  4F                 	db	79	;'O'
  3324  00FBC6  41                 	db	65	;'A'
  3325  00FBC7  44                 	db	68	;'D'
  3326  00FBC8  20                 	db	32
  3327  00FBC9  57                 	db	87	;'W'
  3328  00FBCA  48                 	db	72	;'H'
  3329  00FBCB  20                 	db	32
  3330  00FBCC  25                 	db	37
  3331  00FBCD  33                 	db	51	;'3'
  3332  00FBCE  2E                 	db	46
  3333  00FBCF  32                 	db	50	;'2'
  3334  00FBD0  66                 	db	102	;'f'
  3335  00FBD1  20                 	db	32
  3336  00FBD2  20                 	db	32
  3337  00FBD3  20                 	db	32
  3338  00FBD4  20                 	db	32
  3339  00FBD5  20                 	db	32
  3340  00FBD6  20                 	db	32
  3341  00FBD7  20                 	db	32
  3342  00FBD8  20                 	db	32
  3343  00FBD9  20                 	db	32
  3344  00FBDA  00                 	db	0
  3345  00FBDB                     STR_34:
  3346                           
  3347                           ; BSR set to: 57
  3348  00FBDB  50                 	db	80	;'P'
  3349  00FBDC  56                 	db	86	;'V'
  3350  00FBDD  20                 	db	32
  3351  00FBDE  25                 	db	37
  3352  00FBDF  63                 	db	99	;'c'
  3353  00FBE0  20                 	db	32
  3354  00FBE1  57                 	db	87	;'W'
  3355  00FBE2  48                 	db	72	;'H'
  3356  00FBE3  20                 	db	32
  3357  00FBE4  25                 	db	37
  3358  00FBE5  33                 	db	51	;'3'
  3359  00FBE6  2E                 	db	46
  3360  00FBE7  32                 	db	50	;'2'
  3361  00FBE8  66                 	db	102	;'f'
  3362  00FBE9  20                 	db	32
  3363  00FBEA  20                 	db	32
  3364  00FBEB  20                 	db	32
  3365  00FBEC  20                 	db	32
  3366  00FBED  20                 	db	32
  3367  00FBEE  20                 	db	32
  3368  00FBEF  20                 	db	32
  3369  00FBF0  20                 	db	32
  3370  00FBF1  00                 	db	0
  3371  00FBF2                     STR_33:
  3372                           
  3373                           ; BSR set to: 57
  3374  00FBF2  49                 	db	73	;'I'
  3375  00FBF3  4E                 	db	78	;'N'
  3376  00FBF4  56                 	db	86	;'V'
  3377  00FBF5  20                 	db	32
  3378  00FBF6  20                 	db	32
  3379  00FBF7  50                 	db	80	;'P'
  3380  00FBF8  57                 	db	87	;'W'
  3381  00FBF9  52                 	db	82	;'R'
  3382  00FBFA  20                 	db	32
  3383  00FBFB  25                 	db	37
  3384  00FBFC  33                 	db	51	;'3'
  3385  00FBFD  2E                 	db	46
  3386  00FBFE  32                 	db	50	;'2'
  3387  00FBFF  66                 	db	102	;'f'
  3388  00FC00  20                 	db	32
  3389  00FC01  20                 	db	32
  3390  00FC02  20                 	db	32
  3391  00FC03  20                 	db	32
  3392  00FC04  20                 	db	32
  3393  00FC05  20                 	db	32
  3394  00FC06  20                 	db	32
  3395  00FC07  20                 	db	32
  3396  00FC08  00                 	db	0
  3397  00FC09                     STR_32:
  3398                           
  3399                           ; BSR set to: 57
  3400  00FC09  4C                 	db	76	;'L'
  3401  00FC0A  4F                 	db	79	;'O'
  3402  00FC0B  41                 	db	65	;'A'
  3403  00FC0C  44                 	db	68	;'D'
  3404  00FC0D  20                 	db	32
  3405  00FC0E  50                 	db	80	;'P'
  3406  00FC0F  57                 	db	87	;'W'
  3407  00FC10  52                 	db	82	;'R'
  3408  00FC11  20                 	db	32
  3409  00FC12  25                 	db	37
  3410  00FC13  33                 	db	51	;'3'
  3411  00FC14  2E                 	db	46
  3412  00FC15  32                 	db	50	;'2'
  3413  00FC16  66                 	db	102	;'f'
  3414  00FC17  20                 	db	32
  3415  00FC18  20                 	db	32
  3416  00FC19  20                 	db	32
  3417  00FC1A  20                 	db	32
  3418  00FC1B  20                 	db	32
  3419  00FC1C  20                 	db	32
  3420  00FC1D  20                 	db	32
  3421  00FC1E  20                 	db	32
  3422  00FC1F  00                 	db	0
  3423  00FC20                     STR_31:
  3424                           
  3425                           ; BSR set to: 57
  3426  00FC20  50                 	db	80	;'P'
  3427  00FC21  56                 	db	86	;'V'
  3428  00FC22  20                 	db	32
  3429  00FC23  25                 	db	37
  3430  00FC24  63                 	db	99	;'c'
  3431  00FC25  20                 	db	32
  3432  00FC26  50                 	db	80	;'P'
  3433  00FC27  57                 	db	87	;'W'
  3434  00FC28  52                 	db	82	;'R'
  3435  00FC29  20                 	db	32
  3436  00FC2A  25                 	db	37
  3437  00FC2B  33                 	db	51	;'3'
  3438  00FC2C  2E                 	db	46
  3439  00FC2D  32                 	db	50	;'2'
  3440  00FC2E  66                 	db	102	;'f'
  3441  00FC2F  20                 	db	32
  3442  00FC30  20                 	db	32
  3443  00FC31  20                 	db	32
  3444  00FC32  20                 	db	32
  3445  00FC33  20                 	db	32
  3446  00FC34  20                 	db	32
  3447  00FC35  20                 	db	32
  3448  00FC36  00                 	db	0
  3449  00FC37                     STR_15:
  3450                           
  3451                           ; BSR set to: 57
  3452  00FC37  42                 	db	66	;'B'
  3453  00FC38  61                 	db	97	;'a'
  3454  00FC39  74                 	db	116	;'t'
  3455  00FC3A  74                 	db	116	;'t'
  3456  00FC3B  65                 	db	101	;'e'
  3457  00FC3C  72                 	db	114	;'r'
  3458  00FC3D  79                 	db	121	;'y'
  3459  00FC3E  20                 	db	32
  3460  00FC3F  41                 	db	65	;'A'
  3461  00FC40  68                 	db	104	;'h'
  3462  00FC41  20                 	db	32
  3463  00FC42  25                 	db	37
  3464  00FC43  33                 	db	51	;'3'
  3465  00FC44  2E                 	db	46
  3466  00FC45  32                 	db	50	;'2'
  3467  00FC46  66                 	db	102	;'f'
  3468  00FC47  20                 	db	32
  3469  00FC48  20                 	db	32
  3470  00FC49  20                 	db	32
  3471  00FC4A  20                 	db	32
  3472  00FC4B  20                 	db	32
  3473  00FC4C  20                 	db	32
  3474  00FC4D  00                 	db	0
  3475  00FC4E                     STR_38:
  3476                           
  3477                           ; BSR set to: 57
  3478  00FC4E  42                 	db	66	;'B'
  3479  00FC4F  56                 	db	86	;'V'
  3480  00FC50  20                 	db	32
  3481  00FC51  25                 	db	37
  3482  00FC52  32                 	db	50	;'2'
  3483  00FC53  2E                 	db	46
  3484  00FC54  32                 	db	50	;'2'
  3485  00FC55  66                 	db	102	;'f'
  3486  00FC56  20                 	db	32
  3487  00FC57  42                 	db	66	;'B'
  3488  00FC58  41                 	db	65	;'A'
  3489  00FC59  20                 	db	32
  3490  00FC5A  25                 	db	37
  3491  00FC5B  32                 	db	50	;'2'
  3492  00FC5C  2E                 	db	46
  3493  00FC5D  32                 	db	50	;'2'
  3494  00FC5E  66                 	db	102	;'f'
  3495  00FC5F  20                 	db	32
  3496  00FC60  20                 	db	32
  3497  00FC61  20                 	db	32
  3498  00FC62  20                 	db	32
  3499  00FC63  20                 	db	32
  3500  00FC64  00                 	db	0
  3501  00FC65                     STR_39:
  3502                           
  3503                           ; BSR set to: 57
  3504  00FC65  43                 	db	67	;'C'
  3505  00FC66  56                 	db	86	;'V'
  3506  00FC67  20                 	db	32
  3507  00FC68  25                 	db	37
  3508  00FC69  32                 	db	50	;'2'
  3509  00FC6A  2E                 	db	46
  3510  00FC6B  32                 	db	50	;'2'
  3511  00FC6C  66                 	db	102	;'f'
  3512  00FC6D  20                 	db	32
  3513  00FC6E  4C                 	db	76	;'L'
  3514  00FC6F  41                 	db	65	;'A'
  3515  00FC70  20                 	db	32
  3516  00FC71  25                 	db	37
  3517  00FC72  32                 	db	50	;'2'
  3518  00FC73  2E                 	db	46
  3519  00FC74  32                 	db	50	;'2'
  3520  00FC75  66                 	db	102	;'f'
  3521  00FC76  20                 	db	32
  3522  00FC77  20                 	db	32
  3523  00FC78  20                 	db	32
  3524  00FC79  20                 	db	32
  3525  00FC7A  20                 	db	32
  3526  00FC7B  00                 	db	0
  3527  00FC7C                     STR_37:
  3528                           
  3529                           ; BSR set to: 57
  3530  00FC7C  50                 	db	80	;'P'
  3531  00FC7D  56                 	db	86	;'V'
  3532  00FC7E  20                 	db	32
  3533  00FC7F  25                 	db	37
  3534  00FC80  32                 	db	50	;'2'
  3535  00FC81  2E                 	db	46
  3536  00FC82  32                 	db	50	;'2'
  3537  00FC83  66                 	db	102	;'f'
  3538  00FC84  20                 	db	32
  3539  00FC85  50                 	db	80	;'P'
  3540  00FC86  41                 	db	65	;'A'
  3541  00FC87  20                 	db	32
  3542  00FC88  25                 	db	37
  3543  00FC89  32                 	db	50	;'2'
  3544  00FC8A  2E                 	db	46
  3545  00FC8B  32                 	db	50	;'2'
  3546  00FC8C  66                 	db	102	;'f'
  3547  00FC8D  20                 	db	32
  3548  00FC8E  20                 	db	32
  3549  00FC8F  20                 	db	32
  3550  00FC90  20                 	db	32
  3551  00FC91  20                 	db	32
  3552  00FC92  00                 	db	0
  3553  00FC93                     STR_140:
  3554                           
  3555                           ; BSR set to: 57
  3556  00FC93  53                 	db	83	;'S'
  3557  00FC94  75                 	db	117	;'u'
  3558  00FC95  6E                 	db	110	;'n'
  3559  00FC96  4D                 	db	77	;'M'
  3560  00FC97  6F                 	db	111	;'o'
  3561  00FC98  6E                 	db	110	;'n'
  3562  00FC99  54                 	db	84	;'T'
  3563  00FC9A  75                 	db	117	;'u'
  3564  00FC9B  65                 	db	101	;'e'
  3565  00FC9C  57                 	db	87	;'W'
  3566  00FC9D  65                 	db	101	;'e'
  3567  00FC9E  64                 	db	100	;'d'
  3568  00FC9F  54                 	db	84	;'T'
  3569  00FCA0  68                 	db	104	;'h'
  3570  00FCA1  75                 	db	117	;'u'
  3571  00FCA2  46                 	db	70	;'F'
  3572  00FCA3  72                 	db	114	;'r'
  3573  00FCA4  69                 	db	105	;'i'
  3574  00FCA5  53                 	db	83	;'S'
  3575  00FCA6  61                 	db	97	;'a'
  3576  00FCA7  74                 	db	116	;'t'
  3577  00FCA8  00                 	db	0
  3578  00FCA9                     STR_57:
  3579                           
  3580                           ; BSR set to: 57
  3581  00FCA9  20                 	db	32
  3582  00FCAA  25                 	db	37
  3583  00FCAB  64                 	db	100	;'d'
  3584  00FCAC  20                 	db	32
  3585  00FCAD  25                 	db	37
  3586  00FCAE  64                 	db	100	;'d'
  3587  00FCAF  20                 	db	32
  3588  00FCB0  20                 	db	32
  3589  00FCB1  20                 	db	32
  3590  00FCB2  20                 	db	32
  3591  00FCB3  20                 	db	32
  3592  00FCB4  20                 	db	32
  3593  00FCB5  20                 	db	32
  3594  00FCB6  20                 	db	32
  3595  00FCB7  20                 	db	32
  3596  00FCB8  20                 	db	32
  3597  00FCB9  20                 	db	32
  3598  00FCBA  20                 	db	32
  3599  00FCBB  20                 	db	32
  3600  00FCBC  20                 	db	32
  3601  00FCBD  20                 	db	32
  3602  00FCBE  00                 	db	0
  3603  00FCBF                     STR_73:
  3604                           
  3605                           ; BSR set to: 57
  3606  00FCBF  20                 	db	32
  3607  00FCC0  25                 	db	37
  3608  00FCC1  66                 	db	102	;'f'
  3609  00FCC2  20                 	db	32
  3610  00FCC3  25                 	db	37
  3611  00FCC4  66                 	db	102	;'f'
  3612  00FCC5  20                 	db	32
  3613  00FCC6  20                 	db	32
  3614  00FCC7  20                 	db	32
  3615  00FCC8  20                 	db	32
  3616  00FCC9  20                 	db	32
  3617  00FCCA  20                 	db	32
  3618  00FCCB  20                 	db	32
  3619  00FCCC  20                 	db	32
  3620  00FCCD  20                 	db	32
  3621  00FCCE  20                 	db	32
  3622  00FCCF  20                 	db	32
  3623  00FCD0  20                 	db	32
  3624  00FCD1  20                 	db	32
  3625  00FCD2  20                 	db	32
  3626  00FCD3  20                 	db	32
  3627  00FCD4  00                 	db	0
  3628  00FCD5                     STR_60:
  3629                           
  3630                           ; BSR set to: 57
  3631  00FCD5  20                 	db	32
  3632  00FCD6  25                 	db	37
  3633  00FCD7  6C                 	db	108	;'l'
  3634  00FCD8  64                 	db	100	;'d'
  3635  00FCD9  20                 	db	32
  3636  00FCDA  25                 	db	37
  3637  00FCDB  6C                 	db	108	;'l'
  3638  00FCDC  64                 	db	100	;'d'
  3639  00FCDD  20                 	db	32
  3640  00FCDE  20                 	db	32
  3641  00FCDF  20                 	db	32
  3642  00FCE0  20                 	db	32
  3643  00FCE1  20                 	db	32
  3644  00FCE2  20                 	db	32
  3645  00FCE3  20                 	db	32
  3646  00FCE4  20                 	db	32
  3647  00FCE5  20                 	db	32
  3648  00FCE6  20                 	db	32
  3649  00FCE7  20                 	db	32
  3650  00FCE8  20                 	db	32
  3651  00FCE9  20                 	db	32
  3652  00FCEA  00                 	db	0
  3653  00FCEB                     STR_12:
  3654                           
  3655                           ; BSR set to: 57
  3656  00FCEB  42                 	db	66	;'B'
  3657  00FCEC  56                 	db	86	;'V'
  3658  00FCED  20                 	db	32
  3659  00FCEE  25                 	db	37
  3660  00FCEF  32                 	db	50	;'2'
  3661  00FCF0  2E                 	db	46
  3662  00FCF1  34                 	db	52	;'4'
  3663  00FCF2  66                 	db	102	;'f'
  3664  00FCF3  20                 	db	32
  3665  00FCF4  20                 	db	32
  3666  00FCF5  20                 	db	32
  3667  00FCF6  20                 	db	32
  3668  00FCF7  20                 	db	32
  3669  00FCF8  20                 	db	32
  3670  00FCF9  20                 	db	32
  3671  00FCFA  20                 	db	32
  3672  00FCFB  20                 	db	32
  3673  00FCFC  20                 	db	32
  3674  00FCFD  20                 	db	32
  3675  00FCFE  20                 	db	32
  3676  00FCFF  20                 	db	32
  3677  00FD00  00                 	db	0
  3678  00FD01                     STR_26:
  3679                           
  3680                           ; BSR set to: 57
  3681  00FD01  54                 	db	84	;'T'
  3682  00FD02  6F                 	db	111	;'o'
  3683  00FD03  20                 	db	32
  3684  00FD04  45                 	db	69	;'E'
  3685  00FD05  45                 	db	69	;'E'
  3686  00FD06  50                 	db	80	;'P'
  3687  00FD07  52                 	db	82	;'R'
  3688  00FD08  4F                 	db	79	;'O'
  3689  00FD09  4D                 	db	77	;'M'
  3690  00FD0A  20                 	db	32
  3691  00FD0B  20                 	db	32
  3692  00FD0C  20                 	db	32
  3693  00FD0D  20                 	db	32
  3694  00FD0E  20                 	db	32
  3695  00FD0F  20                 	db	32
  3696  00FD10  20                 	db	32
  3697  00FD11  20                 	db	32
  3698  00FD12  20                 	db	32
  3699  00FD13  20                 	db	32
  3700  00FD14  20                 	db	32
  3701  00FD15  20                 	db	32
  3702  00FD16  00                 	db	0
  3703  00FD17                     STR_17:
  3704                           
  3705                           ; BSR set to: 57
  3706  00FD17  42                 	db	66	;'B'
  3707  00FD18  61                 	db	97	;'a'
  3708  00FD19  74                 	db	116	;'t'
  3709  00FD1A  74                 	db	116	;'t'
  3710  00FD1B  65                 	db	101	;'e'
  3711  00FD1C  72                 	db	114	;'r'
  3712  00FD1D  79                 	db	121	;'y'
  3713  00FD1E  20                 	db	32
  3714  00FD1F  45                 	db	69	;'E'
  3715  00FD20  53                 	db	83	;'S'
  3716  00FD21  52                 	db	82	;'R'
  3717  00FD22  20                 	db	32
  3718  00FD23  20                 	db	32
  3719  00FD24  20                 	db	32
  3720  00FD25  20                 	db	32
  3721  00FD26  20                 	db	32
  3722  00FD27  20                 	db	32
  3723  00FD28  20                 	db	32
  3724  00FD29  20                 	db	32
  3725  00FD2A  20                 	db	32
  3726  00FD2B  20                 	db	32
  3727  00FD2C  00                 	db	0
  3728  00FD2D                     STR_18:
  3729                           
  3730                           ; BSR set to: 57
  3731  00FD2D  43                 	db	67	;'C'
  3732  00FD2E  61                 	db	97	;'a'
  3733  00FD2F  6C                 	db	108	;'l'
  3734  00FD30  63                 	db	99	;'c'
  3735  00FD31  75                 	db	117	;'u'
  3736  00FD32  6C                 	db	108	;'l'
  3737  00FD33  61                 	db	97	;'a'
  3738  00FD34  74                 	db	116	;'t'
  3739  00FD35  69                 	db	105	;'i'
  3740  00FD36  6F                 	db	111	;'o'
  3741  00FD37  6E                 	db	110	;'n'
  3742  00FD38  20                 	db	32
  3743  00FD39  20                 	db	32
  3744  00FD3A  20                 	db	32
  3745  00FD3B  20                 	db	32
  3746  00FD3C  20                 	db	32
  3747  00FD3D  20                 	db	32
  3748  00FD3E  20                 	db	32
  3749  00FD3F  20                 	db	32
  3750  00FD40  20                 	db	32
  3751  00FD41  20                 	db	32
  3752  00FD42  00                 	db	0
  3753  00FD43                     STR_54:
  3754                           
  3755                           ; BSR set to: 57
  3756  00FD43  43                 	db	67	;'C'
  3757  00FD44  61                 	db	97	;'a'
  3758  00FD45  6C                 	db	108	;'l'
  3759  00FD46  69                 	db	105	;'i'
  3760  00FD47  62                 	db	98	;'b'
  3761  00FD48  72                 	db	114	;'r'
  3762  00FD49  61                 	db	97	;'a'
  3763  00FD4A  74                 	db	116	;'t'
  3764  00FD4B  69                 	db	105	;'i'
  3765  00FD4C  6F                 	db	111	;'o'
  3766  00FD4D  6E                 	db	110	;'n'
  3767  00FD4E  20                 	db	32
  3768  00FD4F  20                 	db	32
  3769  00FD50  20                 	db	32
  3770  00FD51  20                 	db	32
  3771  00FD52  20                 	db	32
  3772  00FD53  20                 	db	32
  3773  00FD54  20                 	db	32
  3774  00FD55  20                 	db	32
  3775  00FD56  20                 	db	32
  3776  00FD57  20                 	db	32
  3777  00FD58  00                 	db	0
  3778  00FD59                     STR_53:
  3779                           
  3780                           ; BSR set to: 57
  3781  00FD59  53                 	db	83	;'S'
  3782  00FD5A  65                 	db	101	;'e'
  3783  00FD5B  6E                 	db	110	;'n'
  3784  00FD5C  73                 	db	115	;'s'
  3785  00FD5D  6F                 	db	111	;'o'
  3786  00FD5E  72                 	db	114	;'r'
  3787  00FD5F  20                 	db	32
  3788  00FD60  5A                 	db	90	;'Z'
  3789  00FD61  65                 	db	101	;'e'
  3790  00FD62  72                 	db	114	;'r'
  3791  00FD63  6F                 	db	111	;'o'
  3792  00FD64  20                 	db	32
  3793  00FD65  20                 	db	32
  3794  00FD66  20                 	db	32
  3795  00FD67  20                 	db	32
  3796  00FD68  20                 	db	32
  3797  00FD69  20                 	db	32
  3798  00FD6A  20                 	db	32
  3799  00FD6B  20                 	db	32
  3800  00FD6C  20                 	db	32
  3801  00FD6D  20                 	db	32
  3802  00FD6E  00                 	db	0
  3803  00FD6F                     STR_74:
  3804                           
  3805                           ; BSR set to: 57
  3806  00FD6F  31                 	db	49	;'1'
  3807  00FD70  30                 	db	48	;'0'
  3808  00FD71  41                 	db	65	;'A'
  3809  00FD72  20                 	db	32
  3810  00FD73  43                 	db	67	;'C'
  3811  00FD74  61                 	db	97	;'a'
  3812  00FD75  6C                 	db	108	;'l'
  3813  00FD76  20                 	db	32
  3814  00FD77  53                 	db	83	;'S'
  3815  00FD78  65                 	db	101	;'e'
  3816  00FD79  74                 	db	116	;'t'
  3817  00FD7A  20                 	db	32
  3818  00FD7B  20                 	db	32
  3819  00FD7C  20                 	db	32
  3820  00FD7D  20                 	db	32
  3821  00FD7E  20                 	db	32
  3822  00FD7F  20                 	db	32
  3823  00FD80  20                 	db	32
  3824  00FD81  20                 	db	32
  3825  00FD82  20                 	db	32
  3826  00FD83  20                 	db	32
  3827  00FD84  00                 	db	0
  3828  00FD85                     STR_61:
  3829                           
  3830                           ; BSR set to: 57
  3831  00FD85  5A                 	db	90	;'Z'
  3832  00FD86  65                 	db	101	;'e'
  3833  00FD87  72                 	db	114	;'r'
  3834  00FD88  6F                 	db	111	;'o'
  3835  00FD89  20                 	db	32
  3836  00FD8A  43                 	db	67	;'C'
  3837  00FD8B  61                 	db	97	;'a'
  3838  00FD8C  6C                 	db	108	;'l'
  3839  00FD8D  20                 	db	32
  3840  00FD8E  53                 	db	83	;'S'
  3841  00FD8F  65                 	db	101	;'e'
  3842  00FD90  74                 	db	116	;'t'
  3843  00FD91  20                 	db	32
  3844  00FD92  20                 	db	32
  3845  00FD93  20                 	db	32
  3846  00FD94  20                 	db	32
  3847  00FD95  20                 	db	32
  3848  00FD96  20                 	db	32
  3849  00FD97  20                 	db	32
  3850  00FD98  20                 	db	32
  3851  00FD99  20                 	db	32
  3852  00FD9A  00                 	db	0
  3853  00FD9B                     STR_52:
  3854                           
  3855                           ; BSR set to: 57
  3856  00FD9B  42                 	db	66	;'B'
  3857  00FD9C  61                 	db	97	;'a'
  3858  00FD9D  74                 	db	116	;'t'
  3859  00FD9E  74                 	db	116	;'t'
  3860  00FD9F  65                 	db	101	;'e'
  3861  00FDA0  72                 	db	114	;'r'
  3862  00FDA1  79                 	db	121	;'y'
  3863  00FDA2  20                 	db	32
  3864  00FDA3  61                 	db	97	;'a'
  3865  00FDA4  6E                 	db	110	;'n'
  3866  00FDA5  64                 	db	100	;'d'
  3867  00FDA6  20                 	db	32
  3868  00FDA7  50                 	db	80	;'P'
  3869  00FDA8  56                 	db	86	;'V'
  3870  00FDA9  20                 	db	32
  3871  00FDAA  20                 	db	32
  3872  00FDAB  20                 	db	32
  3873  00FDAC  20                 	db	32
  3874  00FDAD  20                 	db	32
  3875  00FDAE  20                 	db	32
  3876  00FDAF  20                 	db	32
  3877  00FDB0  00                 	db	0
  3878  00FDB1                     STR_20:
  3879                           
  3880                           ; BSR set to: 57
  3881  00FDB1  43                 	db	67	;'C'
  3882  00FDB2  68                 	db	104	;'h'
  3883  00FDB3  65                 	db	101	;'e'
  3884  00FDB4  63                 	db	99	;'c'
  3885  00FDB5  6B                 	db	107	;'k'
  3886  00FDB6  69                 	db	105	;'i'
  3887  00FDB7  6E                 	db	110	;'n'
  3888  00FDB8  67                 	db	103	;'g'
  3889  00FDB9  20                 	db	32
  3890  00FDBA  25                 	db	37
  3891  00FDBB  63                 	db	99	;'c'
  3892  00FDBC  20                 	db	32
  3893  00FDBD  25                 	db	37
  3894  00FDBE  63                 	db	99	;'c'
  3895  00FDBF  20                 	db	32
  3896  00FDC0  20                 	db	32
  3897  00FDC1  20                 	db	32
  3898  00FDC2  20                 	db	32
  3899  00FDC3  20                 	db	32
  3900  00FDC4  20                 	db	32
  3901  00FDC5  20                 	db	32
  3902  00FDC6  00                 	db	0
  3903  00FDC7                     STR_27:
  3904                           
  3905                           ; BSR set to: 57
  3906  00FDC7  20                 	db	32
  3907  00FDC8  54                 	db	84	;'T'
  3908  00FDC9  69                 	db	105	;'i'
  3909  00FDCA  6D                 	db	109	;'m'
  3910  00FDCB  65                 	db	101	;'e'
  3911  00FDCC  20                 	db	32
  3912  00FDCD  25                 	db	37
  3913  00FDCE  6C                 	db	108	;'l'
  3914  00FDCF  75                 	db	117	;'u'
  3915  00FDD0  2C                 	db	44
  3916  00FDD1  20                 	db	32
  3917  00FDD2  25                 	db	37
  3918  00FDD3  6C                 	db	108	;'l'
  3919  00FDD4  75                 	db	117	;'u'
  3920  00FDD5  20                 	db	32
  3921  00FDD6  20                 	db	32
  3922  00FDD7  20                 	db	32
  3923  00FDD8  20                 	db	32
  3924  00FDD9  20                 	db	32
  3925  00FDDA  20                 	db	32
  3926  00FDDB  20                 	db	32
  3927  00FDDC  00                 	db	0
  3928  00FDDD                     STR_56:
  3929                           
  3930                           ; BSR set to: 57
  3931  00FDDD  53                 	db	83	;'S'
  3932  00FDDE  65                 	db	101	;'e'
  3933  00FDDF  6E                 	db	110	;'n'
  3934  00FDE0  73                 	db	115	;'s'
  3935  00FDE1  6F                 	db	111	;'o'
  3936  00FDE2  72                 	db	114	;'r'
  3937  00FDE3  20                 	db	32
  3938  00FDE4  52                 	db	82	;'R'
  3939  00FDE5  65                 	db	101	;'e'
  3940  00FDE6  61                 	db	97	;'a'
  3941  00FDE7  64                 	db	100	;'d'
  3942  00FDE8  69                 	db	105	;'i'
  3943  00FDE9  6E                 	db	110	;'n'
  3944  00FDEA  67                 	db	103	;'g'
  3945  00FDEB  73                 	db	115	;'s'
  3946  00FDEC  20                 	db	32
  3947  00FDED  20                 	db	32
  3948  00FDEE  20                 	db	32
  3949  00FDEF  20                 	db	32
  3950  00FDF0  20                 	db	32
  3951  00FDF1  20                 	db	32
  3952  00FDF2  00                 	db	0
  3953  00FDF3                     STR_77:
  3954                           
  3955                           ; BSR set to: 57
  3956  00FDF3  31                 	db	49	;'1'
  3957  00FDF4  30                 	db	48	;'0'
  3958  00FDF5  41                 	db	65	;'A'
  3959  00FDF6  20                 	db	32
  3960  00FDF7  4F                 	db	79	;'O'
  3961  00FDF8  75                 	db	117	;'u'
  3962  00FDF9  74                 	db	116	;'t'
  3963  00FDFA  20                 	db	32
  3964  00FDFB  4F                 	db	79	;'O'
  3965  00FDFC  66                 	db	102	;'f'
  3966  00FDFD  20                 	db	32
  3967  00FDFE  52                 	db	82	;'R'
  3968  00FDFF  61                 	db	97	;'a'
  3969  00FE00  6E                 	db	110	;'n'
  3970  00FE01  67                 	db	103	;'g'
  3971  00FE02  65                 	db	101	;'e'
  3972  00FE03  20                 	db	32
  3973  00FE04  20                 	db	32
  3974  00FE05  20                 	db	32
  3975  00FE06  20                 	db	32
  3976  00FE07  20                 	db	32
  3977  00FE08  00                 	db	0
  3978  00FE09                     STR_19:
  3979                           
  3980                           ; BSR set to: 57
  3981  00FE09  43                 	db	67	;'C'
  3982  00FE0A  68                 	db	104	;'h'
  3983  00FE0B  65                 	db	101	;'e'
  3984  00FE0C  63                 	db	99	;'c'
  3985  00FE0D  6B                 	db	107	;'k'
  3986  00FE0E  20                 	db	32
  3987  00FE0F  33                 	db	51	;'3'
  3988  00FE10  30                 	db	48	;'0'
  3989  00FE11  20                 	db	32
  3990  00FE12  73                 	db	115	;'s'
  3991  00FE13  65                 	db	101	;'e'
  3992  00FE14  63                 	db	99	;'c'
  3993  00FE15  6F                 	db	111	;'o'
  3994  00FE16  6E                 	db	110	;'n'
  3995  00FE17  64                 	db	100	;'d'
  3996  00FE18  73                 	db	115	;'s'
  3997  00FE19  20                 	db	32
  3998  00FE1A  20                 	db	32
  3999  00FE1B  20                 	db	32
  4000  00FE1C  20                 	db	32
  4001  00FE1D  20                 	db	32
  4002  00FE1E  00                 	db	0
  4003  00FE1F                     STR_64:
  4004                           
  4005                           ; BSR set to: 57
  4006  00FE1F  5A                 	db	90	;'Z'
  4007  00FE20  65                 	db	101	;'e'
  4008  00FE21  72                 	db	114	;'r'
  4009  00FE22  6F                 	db	111	;'o'
  4010  00FE23  20                 	db	32
  4011  00FE24  4F                 	db	79	;'O'
  4012  00FE25  75                 	db	117	;'u'
  4013  00FE26  74                 	db	116	;'t'
  4014  00FE27  20                 	db	32
  4015  00FE28  4F                 	db	79	;'O'
  4016  00FE29  66                 	db	102	;'f'
  4017  00FE2A  20                 	db	32
  4018  00FE2B  52                 	db	82	;'R'
  4019  00FE2C  61                 	db	97	;'a'
  4020  00FE2D  6E                 	db	110	;'n'
  4021  00FE2E  67                 	db	103	;'g'
  4022  00FE2F  65                 	db	101	;'e'
  4023  00FE30  20                 	db	32
  4024  00FE31  20                 	db	32
  4025  00FE32  20                 	db	32
  4026  00FE33  20                 	db	32
  4027  00FE34  00                 	db	0
  4028  00FE35                     STR_49:
  4029                           
  4030                           ; BSR set to: 57
  4031  00FE35  25                 	db	37
  4032  00FE36  64                 	db	100	;'d'
  4033  00FE37  20                 	db	32
  4034  00FE38  25                 	db	37
  4035  00FE39  32                 	db	50	;'2'
  4036  00FE3A  2E                 	db	46
  4037  00FE3B  34                 	db	52	;'4'
  4038  00FE3C  66                 	db	102	;'f'
  4039  00FE3D  2C                 	db	44
  4040  00FE3E  20                 	db	32
  4041  00FE3F  25                 	db	37
  4042  00FE40  64                 	db	100	;'d'
  4043  00FE41  20                 	db	32
  4044  00FE42  20                 	db	32
  4045  00FE43  54                 	db	84	;'T'
  4046  00FE44  52                 	db	82	;'R'
  4047  00FE45  49                 	db	73	;'I'
  4048  00FE46  4D                 	db	77	;'M'
  4049  00FE47  20                 	db	32
  4050  00FE48  20                 	db	32
  4051  00FE49  20                 	db	32
  4052  00FE4A  00                 	db	0
  4053  00FE4B                     STR_58:
  4054                           
  4055                           ; BSR set to: 57
  4056  00FE4B  53                 	db	83	;'S'
  4057  00FE4C  74                 	db	116	;'t'
  4058  00FE4D  61                 	db	97	;'a'
  4059  00FE4E  62                 	db	98	;'b'
  4060  00FE4F  69                 	db	105	;'i'
  4061  00FE50  6C                 	db	108	;'l'
  4062  00FE51  69                 	db	105	;'i'
  4063  00FE52  74                 	db	116	;'t'
  4064  00FE53  79                 	db	121	;'y'
  4065  00FE54  20                 	db	32
  4066  00FE55  63                 	db	99	;'c'
  4067  00FE56  6C                 	db	108	;'l'
  4068  00FE57  6F                 	db	111	;'o'
  4069  00FE58  63                 	db	99	;'c'
  4070  00FE59  6B                 	db	107	;'k'
  4071  00FE5A  20                 	db	32
  4072  00FE5B  25                 	db	37
  4073  00FE5C  64                 	db	100	;'d'
  4074  00FE5D  20                 	db	32
  4075  00FE5E  20                 	db	32
  4076  00FE5F  20                 	db	32
  4077  00FE60  00                 	db	0
  4078  00FE61                     STR_25:
  4079                           
  4080                           ; BSR set to: 57
  4081  00FE61  48                 	db	72	;'H'
  4082  00FE62  69                 	db	105	;'i'
  4083  00FE63  73                 	db	115	;'s'
  4084  00FE64  74                 	db	116	;'t'
  4085  00FE65  6F                 	db	111	;'o'
  4086  00FE66  72                 	db	114	;'r'
  4087  00FE67  79                 	db	121	;'y'
  4088  00FE68  20                 	db	32
  4089  00FE69  44                 	db	68	;'D'
  4090  00FE6A  61                 	db	97	;'a'
  4091  00FE6B  74                 	db	116	;'t'
  4092  00FE6C  61                 	db	97	;'a'
  4093  00FE6D  20                 	db	32
  4094  00FE6E  20                 	db	32
  4095  00FE6F  53                 	db	83	;'S'
  4096  00FE70  61                 	db	97	;'a'
  4097  00FE71  76                 	db	118	;'v'
  4098  00FE72  65                 	db	101	;'e'
  4099  00FE73  64                 	db	100	;'d'
  4100  00FE74  20                 	db	32
  4101  00FE75  20                 	db	32
  4102  00FE76  00                 	db	0
  4103  00FE77                     
  4104                           ; BSR set to: 57
  4105  00FE77  48                 	db	72	;'H'
  4106  00FE78  45                 	db	69	;'E'
  4107  00FE79  4C                 	db	76	;'L'
  4108  00FE7A  50                 	db	80	;'P'
  4109  00FE7B  20                 	db	32
  4110  00FE7C  25                 	db	37
  4111  00FE7D  73                 	db	115	;'s'
  4112  00FE7E  20                 	db	32
  4113  00FE7F  20                 	db	32
  4114  00FE80  20                 	db	32
  4115  00FE81  20                 	db	32
  4116  00FE82  20                 	db	32
  4117  00FE83  20                 	db	32
  4118  00FE84  20                 	db	32
  4119  00FE85  20                 	db	32
  4120  00FE86  20                 	db	32
  4121  00FE87  20                 	db	32
  4122  00FE88  20                 	db	32
  4123  00FE89  20                 	db	32
  4124  00FE8A  20                 	db	32
  4125  00FE8B  00                 	db	0
  4126  00FE8C                     
  4127                           ; BSR set to: 57
  4128  00FE8C  44                 	db	68	;'D'
  4129  00FE8D  49                 	db	73	;'I'
  4130  00FE8E  53                 	db	83	;'S'
  4131  00FE8F  50                 	db	80	;'P'
  4132  00FE90  4C                 	db	76	;'L'
  4133  00FE91  41                 	db	65	;'A'
  4134  00FE92  59                 	db	89	;'Y'
  4135  00FE93  20                 	db	32
  4136  00FE94  25                 	db	37
  4137  00FE95  73                 	db	115	;'s'
  4138  00FE96  20                 	db	32
  4139  00FE97  20                 	db	32
  4140  00FE98  20                 	db	32
  4141  00FE99  20                 	db	32
  4142  00FE9A  20                 	db	32
  4143  00FE9B  20                 	db	32
  4144  00FE9C  20                 	db	32
  4145  00FE9D  20                 	db	32
  4146  00FE9E  20                 	db	32
  4147  00FE9F  20                 	db	32
  4148  00FEA0  00                 	db	0
  4149  00FEA1                     STR_4:
  4150                           
  4151                           ; BSR set to: 57
  4152  00FEA1  20                 	db	32
  4153  00FEA2  4E                 	db	78	;'N'
  4154  00FEA3  53                 	db	83	;'S'
  4155  00FEA4  41                 	db	65	;'A'
  4156  00FEA5  53                 	db	83	;'S'
  4157  00FEA6  50                 	db	80	;'P'
  4158  00FEA7  4F                 	db	79	;'O'
  4159  00FEA8  4F                 	db	79	;'O'
  4160  00FEA9  4B                 	db	75	;'K'
  4161  00FEAA  20                 	db	32
  4162  00FEAB  20                 	db	32
  4163  00FEAC  20                 	db	32
  4164  00FEAD  20                 	db	32
  4165  00FEAE  20                 	db	32
  4166  00FEAF  20                 	db	32
  4167  00FEB0  20                 	db	32
  4168  00FEB1  20                 	db	32
  4169  00FEB2  20                 	db	32
  4170  00FEB3  20                 	db	32
  4171  00FEB4  20                 	db	32
  4172  00FEB5  00                 	db	0
  4173  00FEB6                     STR_67:
  4174                           
  4175                           ; BSR set to: 57
  4176  00FEB6  43                 	db	67	;'C'
  4177  00FEB7  61                 	db	97	;'a'
  4178  00FEB8  6C                 	db	108	;'l'
  4179  00FEB9  69                 	db	105	;'i'
  4180  00FEBA  62                 	db	98	;'b'
  4181  00FEBB  72                 	db	114	;'r'
  4182  00FEBC  61                 	db	97	;'a'
  4183  00FEBD  74                 	db	116	;'t'
  4184  00FEBE  69                 	db	105	;'i'
  4185  00FEBF  6F                 	db	111	;'o'
  4186  00FEC0  6E                 	db	110	;'n'
  4187  00FEC1  20                 	db	32
  4188  00FEC2  20                 	db	32
  4189  00FEC3  20                 	db	32
  4190  00FEC4  20                 	db	32
  4191  00FEC5  20                 	db	32
  4192  00FEC6  20                 	db	32
  4193  00FEC7  20                 	db	32
  4194  00FEC8  20                 	db	32
  4195  00FEC9  20                 	db	32
  4196  00FECA  00                 	db	0
  4197  00FECB                     STR_2:
  4198                           
  4199                           ; BSR set to: 57
  4200  00FECB  20                 	db	32
  4201  00FECC  56                 	db	86	;'V'
  4202  00FECD  65                 	db	101	;'e'
  4203  00FECE  72                 	db	114	;'r'
  4204  00FECF  73                 	db	115	;'s'
  4205  00FED0  69                 	db	105	;'i'
  4206  00FED1  6F                 	db	111	;'o'
  4207  00FED2  6E                 	db	110	;'n'
  4208  00FED3  20                 	db	32
  4209  00FED4  25                 	db	37
  4210  00FED5  73                 	db	115	;'s'
  4211  00FED6  20                 	db	32
  4212  00FED7  20                 	db	32
  4213  00FED8  20                 	db	32
  4214  00FED9  20                 	db	32
  4215  00FEDA  20                 	db	32
  4216  00FEDB  20                 	db	32
  4217  00FEDC  20                 	db	32
  4218  00FEDD  20                 	db	32
  4219  00FEDE  20                 	db	32
  4220  00FEDF  00                 	db	0
  4221  00FEE0                     STR_66:
  4222                           
  4223                           ; BSR set to: 57
  4224  00FEE0  31                 	db	49	;'1'
  4225  00FEE1  30                 	db	48	;'0'
  4226  00FEE2  20                 	db	32
  4227  00FEE3  41                 	db	65	;'A'
  4228  00FEE4  6D                 	db	109	;'m'
  4229  00FEE5  70                 	db	112	;'p'
  4230  00FEE6  20                 	db	32
  4231  00FEE7  53                 	db	83	;'S'
  4232  00FEE8  65                 	db	101	;'e'
  4233  00FEE9  6E                 	db	110	;'n'
  4234  00FEEA  73                 	db	115	;'s'
  4235  00FEEB  6F                 	db	111	;'o'
  4236  00FEEC  72                 	db	114	;'r'
  4237  00FEED  20                 	db	32
  4238  00FEEE  20                 	db	32
  4239  00FEEF  20                 	db	32
  4240  00FEF0  20                 	db	32
  4241  00FEF1  20                 	db	32
  4242  00FEF2  20                 	db	32
  4243  00FEF3  20                 	db	32
  4244  00FEF4  00                 	db	0
  4245  00FEF5                     STR_1:
  4246                           
  4247                           ; BSR set to: 57
  4248  00FEF5  20                 	db	32
  4249  00FEF6  4D                 	db	77	;'M'
  4250  00FEF7  42                 	db	66	;'B'
  4251  00FEF8  4D                 	db	77	;'M'
  4252  00FEF9  43                 	db	67	;'C'
  4253  00FEFA  20                 	db	32
  4254  00FEFB  53                 	db	83	;'S'
  4255  00FEFC  4F                 	db	79	;'O'
  4256  00FEFD  4C                 	db	76	;'L'
  4257  00FEFE  41                 	db	65	;'A'
  4258  00FEFF  52                 	db	82	;'R'
  4259  00FF00  4D                 	db	77	;'M'
  4260  00FF01  4F                 	db	79	;'O'
  4261  00FF02  4E                 	db	78	;'N'
  4262  00FF03  20                 	db	32
  4263  00FF04  20                 	db	32
  4264  00FF05  20                 	db	32
  4265  00FF06  20                 	db	32
  4266  00FF07  20                 	db	32
  4267  00FF08  20                 	db	32
  4268  00FF09  00                 	db	0
  4269  00FF0A                     STR_65:
  4270                           
  4271                           ; BSR set to: 57
  4272  00FF0A  42                 	db	66	;'B'
  4273  00FF0B  61                 	db	97	;'a'
  4274  00FF0C  74                 	db	116	;'t'
  4275  00FF0D  74                 	db	116	;'t'
  4276  00FF0E  65                 	db	101	;'e'
  4277  00FF0F  72                 	db	114	;'r'
  4278  00FF10  79                 	db	121	;'y'
  4279  00FF11  20                 	db	32
  4280  00FF12  61                 	db	97	;'a'
  4281  00FF13  6E                 	db	110	;'n'
  4282  00FF14  64                 	db	100	;'d'
  4283  00FF15  20                 	db	32
  4284  00FF16  50                 	db	80	;'P'
  4285  00FF17  56                 	db	86	;'V'
  4286  00FF18  20                 	db	32
  4287  00FF19  20                 	db	32
  4288  00FF1A  20                 	db	32
  4289  00FF1B  20                 	db	32
  4290  00FF1C  20                 	db	32
  4291  00FF1D  20                 	db	32
  4292  00FF1E  00                 	db	0
  4293  00FF1F                     STR_10:
  4294                           
  4295                           ; BSR set to: 57
  4296  00FF1F  52                 	db	82	;'R'
  4297  00FF20  65                 	db	101	;'e'
  4298  00FF21  61                 	db	97	;'a'
  4299  00FF22  64                 	db	100	;'d'
  4300  00FF23  20                 	db	32
  4301  00FF24  45                 	db	69	;'E'
  4302  00FF25  45                 	db	69	;'E'
  4303  00FF26  50                 	db	80	;'P'
  4304  00FF27  52                 	db	82	;'R'
  4305  00FF28  4F                 	db	79	;'O'
  4306  00FF29  4D                 	db	77	;'M'
  4307  00FF2A  20                 	db	32
  4308  00FF2B  44                 	db	68	;'D'
  4309  00FF2C  41                 	db	65	;'A'
  4310  00FF2D  54                 	db	84	;'T'
  4311  00FF2E  41                 	db	65	;'A'
  4312  00FF2F  20                 	db	32
  4313  00FF30  20                 	db	32
  4314  00FF31  20                 	db	32
  4315  00FF32  20                 	db	32
  4316  00FF33  00                 	db	0
  4317  00FF34                     STR_55:
  4318                           
  4319                           ; BSR set to: 57
  4320  00FF34  52                 	db	82	;'R'
  4321  00FF35  65                 	db	101	;'e'
  4322  00FF36  6C                 	db	108	;'l'
  4323  00FF37  65                 	db	101	;'e'
  4324  00FF38  61                 	db	97	;'a'
  4325  00FF39  73                 	db	115	;'s'
  4326  00FF3A  65                 	db	101	;'e'
  4327  00FF3B  20                 	db	32
  4328  00FF3C  62                 	db	98	;'b'
  4329  00FF3D  75                 	db	117	;'u'
  4330  00FF3E  74                 	db	116	;'t'
  4331  00FF3F  74                 	db	116	;'t'
  4332  00FF40  6F                 	db	111	;'o'
  4333  00FF41  6E                 	db	110	;'n'
  4334  00FF42  20                 	db	32
  4335  00FF43  25                 	db	37
  4336  00FF44  63                 	db	99	;'c'
  4337  00FF45  20                 	db	32
  4338  00FF46  20                 	db	32
  4339  00FF47  20                 	db	32
  4340  00FF48  00                 	db	0
  4341  00FF49                     STR_11:
  4342                           
  4343                           ; BSR set to: 57
  4344  00FF49  49                 	db	73	;'I'
  4345  00FF4A  6E                 	db	110	;'n'
  4346  00FF4B  76                 	db	118	;'v'
  4347  00FF4C  61                 	db	97	;'a'
  4348  00FF4D  6C                 	db	108	;'l'
  4349  00FF4E  69                 	db	105	;'i'
  4350  00FF4F  64                 	db	100	;'d'
  4351  00FF50  20                 	db	32
  4352  00FF51  45                 	db	69	;'E'
  4353  00FF52  45                 	db	69	;'E'
  4354  00FF53  50                 	db	80	;'P'
  4355  00FF54  52                 	db	82	;'R'
  4356  00FF55  4F                 	db	79	;'O'
  4357  00FF56  4D                 	db	77	;'M'
  4358  00FF57  20                 	db	32
  4359  00FF58  44                 	db	68	;'D'
  4360  00FF59  41                 	db	65	;'A'
  4361  00FF5A  54                 	db	84	;'T'
  4362  00FF5B  41                 	db	65	;'A'
  4363  00FF5C  20                 	db	32
  4364  00FF5D  00                 	db	0
  4365  00FF5E                     STR_85:
  4366                           
  4367                           ; BSR set to: 57
  4368  00FF5E  48                 	db	72	;'H'
  4369  00FF5F  45                 	db	69	;'E'
  4370  00FF60  4C                 	db	76	;'L'
  4371  00FF61  50                 	db	80	;'P'
  4372  00FF62  20                 	db	32
  4373  00FF63  25                 	db	37
  4374  00FF64  73                 	db	115	;'s'
  4375  00FF65  20                 	db	32
  4376  00FF66  20                 	db	32
  4377  00FF67  20                 	db	32
  4378  00FF68  20                 	db	32
  4379  00FF69  20                 	db	32
  4380  00FF6A  20                 	db	32
  4381  00FF6B  20                 	db	32
  4382  00FF6C  20                 	db	32
  4383  00FF6D  20                 	db	32
  4384  00FF6E  20                 	db	32
  4385  00FF6F  20                 	db	32
  4386  00FF70  00                 	db	0
  4387  00FF71                     STR_68:
  4388                           
  4389                           ; BSR set to: 57
  4390  00FF71  50                 	db	80	;'P'
  4391  00FF72  72                 	db	114	;'r'
  4392  00FF73  65                 	db	101	;'e'
  4393  00FF74  73                 	db	115	;'s'
  4394  00FF75  73                 	db	115	;'s'
  4395  00FF76  20                 	db	32
  4396  00FF77  62                 	db	98	;'b'
  4397  00FF78  75                 	db	117	;'u'
  4398  00FF79  74                 	db	116	;'t'
  4399  00FF7A  74                 	db	116	;'t'
  4400  00FF7B  6F                 	db	111	;'o'
  4401  00FF7C  6E                 	db	110	;'n'
  4402  00FF7D  20                 	db	32
  4403  00FF7E  25                 	db	37
  4404  00FF7F  63                 	db	99	;'c'
  4405  00FF80  20                 	db	32
  4406  00FF81  20                 	db	32
  4407  00FF82  20                 	db	32
  4408  00FF83  00                 	db	0
  4409  00FF84                     
  4410                           ; BSR set to: 57
  4411  00FF84  25                 	db	37
  4412  00FF85  64                 	db	100	;'d'
  4413  00FF86  20                 	db	32
  4414  00FF87  25                 	db	37
  4415  00FF88  32                 	db	50	;'2'
  4416  00FF89  2E                 	db	46
  4417  00FF8A  34                 	db	52	;'4'
  4418  00FF8B  66                 	db	102	;'f'
  4419  00FF8C  2C                 	db	44
  4420  00FF8D  20                 	db	32
  4421  00FF8E  25                 	db	37
  4422  00FF8F  64                 	db	100	;'d'
  4423  00FF90  20                 	db	32
  4424  00FF91  20                 	db	32
  4425  00FF92  20                 	db	32
  4426  00FF93  23                 	db	35
  4427  00FF94  20                 	db	32
  4428  00FF95  00                 	db	0
  4429  00FF96                     STR_28:
  4430                           
  4431                           ; BSR set to: 57
  4432  00FF96  25                 	db	37
  4433  00FF97  64                 	db	100	;'d'
  4434  00FF98  20                 	db	32
  4435  00FF99  25                 	db	37
  4436  00FF9A  32                 	db	50	;'2'
  4437  00FF9B  2E                 	db	46
  4438  00FF9C  34                 	db	52	;'4'
  4439  00FF9D  66                 	db	102	;'f'
  4440  00FF9E  20                 	db	32
  4441  00FF9F  20                 	db	32
  4442  00FFA0  20                 	db	32
  4443  00FFA1  25                 	db	37
  4444  00FFA2  64                 	db	100	;'d'
  4445  00FFA3  20                 	db	32
  4446  00FFA4  20                 	db	32
  4447  00FFA5  20                 	db	32
  4448  00FFA6  00                 	db	0
  4449  00FFA7                     STR_89:
  4450                           
  4451                           ; BSR set to: 57
  4452  00FFA7  76                 	db	118	;'v'
  4453  00FFA8  74                 	db	116	;'t'
  4454  00FFA9  65                 	db	101	;'e'
  4455  00FFAA  72                 	db	114	;'r'
  4456  00FFAB  6D                 	db	109	;'m'
  4457  00FFAC  20                 	db	32
  4458  00FFAD  25                 	db	37
  4459  00FFAE  78                 	db	120	;'x'
  4460  00FFAF  3A                 	db	58	;':'
  4461  00FFB0  25                 	db	37
  4462  00FFB1  78                 	db	120	;'x'
  4463  00FFB2  20                 	db	32
  4464  00FFB3  20                 	db	32
  4465  00FFB4  20                 	db	32
  4466  00FFB5  00                 	db	0
  4467  00FFB6                     STR_83:
  4468                           
  4469                           ; BSR set to: 57
  4470  00FFB6  46                 	db	70	;'F'
  4471  00FFB7  65                 	db	101	;'e'
  4472  00FFB8  62                 	db	98	;'b'
  4473  00FFB9  20                 	db	32
  4474  00FFBA  31                 	db	49	;'1'
  4475  00FFBB  37                 	db	55	;'7'
  4476  00FFBC  20                 	db	32
  4477  00FFBD  32                 	db	50	;'2'
  4478  00FFBE  30                 	db	48	;'0'
  4479  00FFBF  32                 	db	50	;'2'
  4480  00FFC0  30                 	db	48	;'0'
  4481  00FFC1  00                 	db	0
  4482  00FFC2                     STR_87:
  4483                           
  4484                           ; BSR set to: 57
  4485  00FFC2  25                 	db	37
  4486  00FFC3  73                 	db	115	;'s'
  4487  00FFC4  20                 	db	32
  4488  00FFC5  20                 	db	32
  4489  00FFC6  20                 	db	32
  4490  00FFC7  20                 	db	32
  4491  00FFC8  20                 	db	32
  4492  00FFC9  20                 	db	32
  4493  00FFCA  20                 	db	32
  4494  00FFCB  00                 	db	0
  4495  00FFCC                     STR_84:
  4496                           
  4497                           ; BSR set to: 57
  4498  00FFCC  30                 	db	48	;'0'
  4499  00FFCD  38                 	db	56	;'8'
  4500  00FFCE  3A                 	db	58	;':'
  4501  00FFCF  31                 	db	49	;'1'
  4502  00FFD0  31                 	db	49	;'1'
  4503  00FFD1  3A                 	db	58	;':'
  4504  00FFD2  34                 	db	52	;'4'
  4505  00FFD3  36                 	db	54	;'6'
  4506  00FFD4  00                 	db	0
  4507  00FFD5                     STR_3:
  4508                           
  4509                           ; BSR set to: 57
  4510  00FFD5  31                 	db	49	;'1'
  4511  00FFD6  2E                 	db	46
  4512  00FFD7  32                 	db	50	;'2'
  4513  00FFD8  35                 	db	53	;'5'
  4514  00FFD9  00                 	db	0
  4515  00FFDA                     STR_104:
  4516                           
  4517                           ; BSR set to: 57
  4518  00FFDA  49                 	db	73	;'I'
  4519  00FFDB  4E                 	db	78	;'N'
  4520  00FFDC  46                 	db	70	;'F'
  4521  00FFDD  00                 	db	0
  4522  00FFDE                     STR_108:
  4523                           
  4524                           ; BSR set to: 57
  4525  00FFDE  4E                 	db	78	;'N'
  4526  00FFDF  41                 	db	65	;'A'
  4527  00FFE0  4E                 	db	78	;'N'
  4528  00FFE1  00                 	db	0
  4529  00FFE2                     STR_105:
  4530                           
  4531                           ; BSR set to: 57
  4532  00FFE2  69                 	db	105	;'i'
  4533  00FFE3  6E                 	db	110	;'n'
  4534  00FFE4  66                 	db	102	;'f'
  4535  00FFE5  00                 	db	0
  4536  00FFE6                     STR_109:
  4537                           
  4538                           ; BSR set to: 57
  4539  00FFE6  6E                 	db	110	;'n'
  4540  00FFE7  61                 	db	97	;'a'
  4541  00FFE8  6E                 	db	110	;'n'
  4542  00FFE9  00                 	db	0
  4543  00FFEA                     STR_135:
  4544                           
  4545                           ; BSR set to: 57
  4546  00FFEA  6C                 	db	108	;'l'
  4547  00FFEB  58                 	db	88	;'X'
  4548  00FFEC  00                 	db	0
  4549  00FFED                     STR_112:
  4550                           
  4551                           ; BSR set to: 57
  4552  00FFED  6C                 	db	108	;'l'
  4553  00FFEE  64                 	db	100	;'d'
  4554  00FFEF  00                 	db	0
  4555  00FFF0                     STR_121:
  4556                           
  4557                           ; BSR set to: 57
  4558  00FFF0  6C                 	db	108	;'l'
  4559  00FFF1  66                 	db	102	;'f'
  4560  00FFF2  00                 	db	0
  4561  00FFF3                     STR_116:
  4562                           
  4563                           ; BSR set to: 57
  4564  00FFF3  6C                 	db	108	;'l'
  4565  00FFF4  69                 	db	105	;'i'
  4566  00FFF5  00                 	db	0
  4567  00FFF6                     STR_126:
  4568                           
  4569                           ; BSR set to: 57
  4570  00FFF6  6C                 	db	108	;'l'
  4571  00FFF7  75                 	db	117	;'u'
  4572  00FFF8  00                 	db	0
  4573  00FFF9                     STR_131:
  4574                           
  4575                           ; BSR set to: 57
  4576  00FFF9  6C                 	db	108	;'l'
  4577  00FFFA  78                 	db	120	;'x'
  4578  00FFFB  00                 	db	0
  4579  00FFFC                     STR_82:
  4580                           
  4581                           ; BSR set to: 57
  4582  00FFFC  25                 	db	37
  4583  00FFFD  73                 	db	115	;'s'
  4584  00FFFE  00                 	db	0
  4585  0000                     
  4586                           ; #config settings
  4587  00FFFF  00                 	db	0	; dummy byte at the end
  4588  0000                     
  4589                           	psect	cinit
  4590  0000B6                     __pcinit:
  4591                           	opt callstack 0
  4592  0000B6                     start_initialization:
  4593                           	opt callstack 0
  4594  0000B6                     __initialization:
  4595                           	opt callstack 0
  4596                           
  4597                           ; Initialize objects allocated to BIGRAM (832 bytes)
  4598                           ; load TBLPTR registers with __pidataBIGRAM
  4599  0000B6  0EB0               	movlw	low __pidataBIGRAM
  4600  0000B8  6EF6               	movwf	tblptrl,c
  4601  0000BA  0EA9               	movlw	high __pidataBIGRAM
  4602  0000BC  6EF7               	movwf	tblptrh,c
  4603  0000BE  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4604  0000C0  6EF8               	movwf	tblptru,c
  4605  0000C2  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  4606  0000C6  EE20 F340          	lfsr	2,832
  4607  0000CA                     copy_data0:
  4608  0000CA  0009               	tblrd		*+
  4609  0000CC  006F FFD7 FFEE     	movff	tablat,postinc0
  4610  0000D2  50DD               	movf	postdec2,w,c
  4611  0000D4  50D9               	movf	fsr2l,w,c
  4612  0000D6  E1F9               	bnz	copy_data0
  4613  0000D8  50DA               	movf	fsr2h,w,c
  4614  0000DA  E1F7               	bnz	copy_data0
  4615                           
  4616                           ; Initialize objects allocated to BANK2 (188 bytes)
  4617                           ; load TBLPTR registers with __pidataBANK2
  4618  0000DC  0E5C               	movlw	low __pidataBANK2
  4619  0000DE  6EF6               	movwf	tblptrl,c
  4620  0000E0  0E0A               	movlw	high __pidataBANK2
  4621  0000E2  6EF7               	movwf	tblptrh,c
  4622  0000E4  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4623  0000E6  6EF8               	movwf	tblptru,c
  4624  0000E8  EE00  F200         	lfsr	0,__pdataBANK2
  4625  0000EC  EE20 F0BC          	lfsr	2,188
  4626  0000F0                     copy_data1:
  4627  0000F0  0009               	tblrd		*+
  4628  0000F2  006F FFD7 FFEE     	movff	tablat,postinc0
  4629  0000F8  50DD               	movf	postdec2,w,c
  4630  0000FA  50D9               	movf	fsr2l,w,c
  4631  0000FC  E1F9               	bnz	copy_data1
  4632                           
  4633                           ; Initialize objects allocated to BANK1 (164 bytes)
  4634                           ; load TBLPTR registers with __pidataBANK1
  4635  0000FE  0EEA               	movlw	low __pidataBANK1
  4636  000100  6EF6               	movwf	tblptrl,c
  4637  000102  0E0F               	movlw	high __pidataBANK1
  4638  000104  6EF7               	movwf	tblptrh,c
  4639  000106  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4640  000108  6EF8               	movwf	tblptru,c
  4641  00010A  EE00  F100         	lfsr	0,__pdataBANK1
  4642  00010E  EE20 F0A4          	lfsr	2,164
  4643  000112                     copy_data2:
  4644  000112  0009               	tblrd		*+
  4645  000114  006F FFD7 FFEE     	movff	tablat,postinc0
  4646  00011A  50DD               	movf	postdec2,w,c
  4647  00011C  50D9               	movf	fsr2l,w,c
  4648  00011E  E1F9               	bnz	copy_data2
  4649                           
  4650                           ; Clear objects allocated to BIGRAM (642 bytes)
  4651  000120  EE02  F23F         	lfsr	0,__pbssBIGRAM
  4652  000124  EE20 F282          	lfsr	2,642
  4653  000128                     clear_0:
  4654  000128  6AEE               	clrf	postinc0,c
  4655  00012A  50DD               	movf	postdec2,w,c
  4656  00012C  50D9               	movf	fsr2l,w,c
  4657  00012E  E1FC               	bnz	clear_0
  4658  000130  50DA               	movf	fsr2h,w,c
  4659  000132  E1FA               	bnz	clear_0
  4660                           
  4661                           ; Clear objects allocated to BANK6 (255 bytes)
  4662  000134  EE01  F200         	lfsr	0,__pbssBANK6
  4663  000138  EE20 F0FF          	lfsr	2,255
  4664  00013C                     clear_1:
  4665  00013C  6AEE               	clrf	postinc0,c
  4666  00013E  50DD               	movf	postdec2,w,c
  4667  000140  50D9               	movf	fsr2l,w,c
  4668  000142  E1FC               	bnz	clear_1
  4669  000144  50DA               	movf	fsr2h,w,c
  4670  000146  E1FA               	bnz	clear_1
  4671                           
  4672                           ; Clear objects allocated to BANK5 (134 bytes)
  4673  000148  EE01  F100         	lfsr	0,__pbssBANK5
  4674  00014C  0E86               	movlw	134
  4675  00014E                     clear_2:
  4676  00014E  6AEE               	clrf	postinc0,c
  4677  000150  06E8               	decf	wreg,f,c
  4678  000152  E1FD               	bnz	clear_2
  4679                           
  4680                           ; Clear objects allocated to BANK4 (219 bytes)
  4681  000154  EE01  F000         	lfsr	0,__pbssBANK4
  4682  000158  0EDB               	movlw	219
  4683  00015A                     clear_3:
  4684  00015A  6AEE               	clrf	postinc0,c
  4685  00015C  06E8               	decf	wreg,f,c
  4686  00015E  E1FD               	bnz	clear_3
  4687                           
  4688                           ; Clear objects allocated to BANK3 (247 bytes)
  4689  000160  EE00  F300         	lfsr	0,__pbssBANK3
  4690  000164  0EF7               	movlw	247
  4691  000166                     clear_4:
  4692  000166  6AEE               	clrf	postinc0,c
  4693  000168  06E8               	decf	wreg,f,c
  4694  00016A  E1FD               	bnz	clear_4
  4695                           
  4696                           ; Clear objects allocated to BANK2 (42 bytes)
  4697  00016C  EE00  F2BC         	lfsr	0,__pbssBANK2
  4698  000170  0E2A               	movlw	42
  4699  000172                     clear_5:
  4700  000172  6AEE               	clrf	postinc0,c
  4701  000174  06E8               	decf	wreg,f,c
  4702  000176  E1FD               	bnz	clear_5
  4703                           
  4704                           ; Clear objects allocated to BANK1 (89 bytes)
  4705  000178  EE00  F1A4         	lfsr	0,__pbssBANK1
  4706  00017C  0E59               	movlw	89
  4707  00017E                     clear_6:
  4708  00017E  6AEE               	clrf	postinc0,c
  4709  000180  06E8               	decf	wreg,f,c
  4710  000182  E1FD               	bnz	clear_6
  4711                           
  4712                           ; Clear objects allocated to BANK0 (133 bytes)
  4713  000184  EE00  F060         	lfsr	0,__pbssBANK0
  4714  000188  0E85               	movlw	133
  4715  00018A                     clear_7:
  4716  00018A  6AEE               	clrf	postinc0,c
  4717  00018C  06E8               	decf	wreg,f,c
  4718  00018E  E1FD               	bnz	clear_7
  4719                           
  4720                           ; Clear objects allocated to COMRAM (14 bytes)
  4721  000190  EE00  F04A         	lfsr	0,__pbssCOMRAM
  4722  000194  0E0E               	movlw	14
  4723  000196                     clear_8:
  4724  000196  6AEE               	clrf	postinc0,c
  4725  000198  06E8               	decf	wreg,f,c
  4726  00019A  E1FD               	bnz	clear_8
  4727                           
  4728                           ;
  4729                           ; Setup IVTBASE
  4730                           ;
  4731  00019C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4732  00019E  6ED5               	movwf	213,c
  4733  0001A0  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4734  0001A2  6ED6               	movwf	214,c
  4735  0001A4  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4736  0001A6  6ED7               	movwf	215,c
  4737  0001A8                     end_of_initialization:
  4738                           	opt callstack 0
  4739  0001A8                     __end_of__initialization:
  4740                           	opt callstack 0
  4741  0001A8  0100               	movlb	0
  4742  0001AA  EF00  F080         	goto	_main	;jump to C main() function
  4743                           
  4744                           	psect	bssCOMRAM
  4745  00004A                     __pbssCOMRAM:
  4746                           	opt callstack 0
  4747  00004A                     _width:
  4748                           	opt callstack 0
  4749  00004A                     	ds	2
  4750  00004C                     _prec:
  4751                           	opt callstack 0
  4752  00004C                     	ds	2
  4753  00004E                     _flags:
  4754                           	opt callstack 0
  4755  00004E                     	ds	2
  4756  000050                     calc_bsoc@log_update_wait:
  4757                           	opt callstack 0
  4758  000050                     	ds	1
  4759  000051                     check_day_time@day_delay:
  4760                           	opt callstack 0
  4761  000051                     	ds	1
  4762  000052                     dac_spi_control@init:
  4763                           	opt callstack 0
  4764  000052                     	ds	1
  4765  000053                     display_history@bwait:
  4766                           	opt callstack 0
  4767  000053                     	ds	1
  4768  000054                     _uart2RxHead:
  4769                           	opt callstack 0
  4770  000054                     	ds	1
  4771  000055                     _uart2TxBufferRemaining:
  4772                           	opt callstack 0
  4773  000055                     	ds	1
  4774  000056                     _uart2TxTail:
  4775                           	opt callstack 0
  4776  000056                     	ds	1
  4777  000057                     _uart1RxHead:
  4778                           	opt callstack 0
  4779  000057                     	ds	1
  4780                           
  4781                           	psect	bssBANK0
  4782  000060                     __pbssBANK0:
  4783                           	opt callstack 0
  4784  000060                     _spi_link:
  4785                           	opt callstack 0
  4786  000060                     	ds	12
  4787  00006C                     ___tzname:
  4788                           	opt callstack 0
  4789  00006C                     	ds	4
  4790  000070                     ___timezone:
  4791                           	opt callstack 0
  4792  000070                     	ds	4
  4793  000074                     floorf@F524:
  4794                           	opt callstack 0
  4795  000074                     	ds	4
  4796  000078                     fabsf@F463:
  4797                           	opt callstack 0
  4798  000078                     	ds	4
  4799  00007C                     ___fpclassifyf@F463:
  4800                           	opt callstack 0
  4801  00007C                     	ds	4
  4802  000080                     calc_ror_data@bcror:
  4803                           	opt callstack 0
  4804  000080                     	ds	4
  4805  000084                     calc_ror_data@bvror:
  4806                           	opt callstack 0
  4807  000084                     	ds	4
  4808  000088                     calc_model_data@bcror:
  4809                           	opt callstack 0
  4810  000088                     	ds	4
  4811  00008C                     calc_model_data@bvror:
  4812                           	opt callstack 0
  4813  00008C                     	ds	4
  4814  000090                     wdtdelay@dcount:
  4815                           	opt callstack 0
  4816  000090                     	ds	4
  4817  000094                     _P:
  4818                           	opt callstack 0
  4819  000094                     	ds	4
  4820  000098                     _TMR3_InterruptHandler:
  4821                           	opt callstack 0
  4822  000098                     	ds	3
  4823  00009B                     _TMR5_InterruptHandler:
  4824                           	opt callstack 0
  4825  00009B                     	ds	3
  4826  00009E                     _TMR6_InterruptHandler:
  4827                           	opt callstack 0
  4828  00009E                     	ds	3
  4829  0000A1                     _ADCC_ADTI_InterruptHandler:
  4830                           	opt callstack 0
  4831  0000A1                     	ds	3
  4832  0000A4                     _ADCC_ADI_InterruptHandler:
  4833                           	opt callstack 0
  4834  0000A4                     	ds	3
  4835  0000A7                     _UART1_RxInterruptHandler:
  4836                           	opt callstack 0
  4837  0000A7                     	ds	3
  4838  0000AA                     _UART2_TxInterruptHandler:
  4839                           	opt callstack 0
  4840  0000AA                     	ds	3
  4841  0000AD                     _UART2_RxInterruptHandler:
  4842                           	opt callstack 0
  4843  0000AD                     	ds	3
  4844  0000B0                     _INT1_InterruptHandler:
  4845                           	opt callstack 0
  4846  0000B0                     	ds	3
  4847  0000B3                     _INT0_InterruptHandler:
  4848                           	opt callstack 0
  4849  0000B3                     	ds	3
  4850  0000B6                     _dst_off:
  4851                           	opt callstack 0
  4852  0000B6                     	ds	2
  4853  0000B8                     ___daylight:
  4854                           	opt callstack 0
  4855  0000B8                     	ds	2
  4856  0000BA                     _nout:
  4857                           	opt callstack 0
  4858  0000BA                     	ds	2
  4859  0000BC                     _t_mbmc:
  4860                           	opt callstack 0
  4861  0000BC                     	ds	2
  4862  0000BE                     TMR3_ISR@CountCallBack:
  4863                           	opt callstack 0
  4864  0000BE                     	ds	2
  4865  0000C0                     _timer3ReloadVal:
  4866                           	opt callstack 0
  4867  0000C0                     	ds	2
  4868  0000C2                     TMR5_ISR@CountCallBack:
  4869                           	opt callstack 0
  4870  0000C2                     	ds	2
  4871  0000C4                     _timer5ReloadVal:
  4872                           	opt callstack 0
  4873  0000C4                     	ds	2
  4874  0000C6                     esr_check@esr_state:
  4875                           	opt callstack 0
  4876  0000C6                     	ds	1
  4877  0000C7                     dac_spi_control@SB:
  4878                           	opt callstack 0
  4879  0000C7                     	ds	1
  4880  0000C8                     dac_spi_control@SC:
  4881                           	opt callstack 0
  4882  0000C8                     	ds	1
  4883  0000C9                     dac_spi_control@S2:
  4884                           	opt callstack 0
  4885  0000C9                     	ds	1
  4886  0000CA                     dac_spi_control@S1:
  4887                           	opt callstack 0
  4888  0000CA                     	ds	1
  4889  0000CB                     dac_spi_control@S0:
  4890                           	opt callstack 0
  4891  0000CB                     	ds	1
  4892  0000CC                     _mode_sw:
  4893                           	opt callstack 0
  4894  0000CC                     	ds	1
  4895  0000CD                     _uart2RxCount:
  4896                           	opt callstack 0
  4897  0000CD                     	ds	1
  4898  0000CE                     _uart2RxTail:
  4899                           	opt callstack 0
  4900  0000CE                     	ds	1
  4901  0000CF                     _uart2TxHead:
  4902                           	opt callstack 0
  4903  0000CF                     	ds	1
  4904  0000D0                     _uart1RxCount:
  4905                           	opt callstack 0
  4906  0000D0                     	ds	1
  4907  0000D1                     _uart1RxTail:
  4908                           	opt callstack 0
  4909  0000D1                     	ds	1
  4910  0000D2                     time@current_time:
  4911                           	opt callstack 0
  4912  0000D2                     	ds	8
  4913  0000DA                     _pclock:
  4914                           	opt callstack 0
  4915  0000DA                     	ds	8
  4916  0000E2                     _crcObj:
  4917                           	opt callstack 0
  4918  0000E2                     	ds	3
  4919                           
  4920                           	psect	bssBANK1
  4921  0001A4                     __pbssBANK1:
  4922                           	opt callstack 0
  4923  0001A4                     _S:
  4924                           	opt callstack 0
  4925  0001A4                     	ds	41
  4926  0001CD                     spinners@s:
  4927                           	opt callstack 0
  4928  0001CD                     	ds	6
  4929  0001D3                     _lock:
  4930                           	opt callstack 0
  4931  0001D3                     	ds	4
  4932  0001D7                     _utctime:
  4933                           	opt callstack 0
  4934  0001D7                     	ds	4
  4935  0001DB                     _r1:
  4936                           	opt callstack 0
  4937  0001DB                     	ds	10
  4938  0001E5                     _r0:
  4939                           	opt callstack 0
  4940  0001E5                     	ds	10
  4941  0001EF                     _dst_name:
  4942                           	opt callstack 0
  4943  0001EF                     	ds	7
  4944  0001F6                     _std_name:
  4945                           	opt callstack 0
  4946  0001F6                     	ds	7
  4947                           
  4948                           	psect	dataBANK1
  4949  000100                     __pdataBANK1:
  4950                           	opt callstack 0
  4951  000100                     _R:
  4952                           	opt callstack 0
  4953  000100                     	ds	155
  4954  00019B                     _H:
  4955                           	opt callstack 0
  4956  00019B                     	ds	9
  4957                           
  4958                           	psect	bssBANK2
  4959  0002BC                     __pbssBANK2:
  4960                           	opt callstack 0
  4961  0002BC                     _tickCount:
  4962                           	opt callstack 0
  4963  0002BC                     	ds	26
  4964  0002D6                     _uart1RxBuffer:
  4965                           	opt callstack 0
  4966  0002D6                     	ds	8
  4967  0002DE                     _seed:
  4968                           	opt callstack 0
  4969  0002DE                     	ds	8
  4970                           
  4971                           	psect	dataBANK2
  4972  000200                     __pdataBANK2:
  4973                           	opt callstack 0
  4974  000200                     stoa@F1166:
  4975                           	opt callstack 0
  4976  000200                     	ds	7
  4977  000207                     _V:
  4978                           	opt callstack 0
  4979  000207                     	ds	181
  4980                           
  4981                           	psect	bssBANK3
  4982  000300                     __pbssBANK3:
  4983                           	opt callstack 0
  4984  000300                     lp_filter@smooth:
  4985                           	opt callstack 0
  4986  000300                     	ds	84
  4987  000354                     _dbuf:
  4988                           	opt callstack 0
  4989  000354                     	ds	80
  4990  0003A4                     	ds	32
  4991  0003C4                     asctime@buf:
  4992                           	opt callstack 0
  4993  0003C4                     	ds	27
  4994  0003DF                     localtime@tm:
  4995                           	opt callstack 0
  4996  0003DF                     	ds	24
  4997                           
  4998                           	psect	bssBANK4
  4999  000400                     __pbssBANK4:
  5000                           	opt callstack 0
  5001  000400                     _uart2TxBuffer:
  5002                           	opt callstack 0
  5003  000400                     	ds	64
  5004  000440                     _r_cal:
  5005                           	opt callstack 0
  5006  000440                     	ds	155
  5007                           
  5008                           	psect	bssBANK5
  5009  000500                     __pbssBANK5:
  5010                           	opt callstack 0
  5011  000500                     _ring_buf2:
  5012                           	opt callstack 0
  5013  000500                     	ds	67
  5014  000543                     _ring_buf1:
  5015                           	opt callstack 0
  5016  000543                     	ds	67
  5017                           
  5018                           	psect	bssBANK6
  5019  000600                     __pbssBANK6:
  5020                           	opt callstack 0
  5021  000600                     _uart2RxBuffer:
  5022                           	opt callstack 0
  5023  000600                     	ds	255
  5024                           
  5025                           	psect	bssBIGRAM
  5026  000A3F                     __pbssBIGRAM:
  5027                           	opt callstack 0
  5028  000A3F                     _D:
  5029                           	opt callstack 0
  5030  000A3F                     	ds	642
  5031                           
  5032                           	psect	dataBIGRAM
  5033  0006FF                     __pdataBIGRAM:
  5034                           	opt callstack 0
  5035  0006FF                     _port_data:
  5036                           	opt callstack 0
  5037  0006FF                     	ds	512
  5038  0008FF                     _C:
  5039                           	opt callstack 0
  5040  0008FF                     	ds	320
  5041                           
  5042                           	psect	cstackBANK0
  5043  0000E5                     __pcstackBANK0:
  5044                           	opt callstack 0
  5045  0000E5                     ??_TMR3_ISR:
  5046                           
  5047                           ; 1 bytes @ 0x0
  5048  0000E5                     	ds	25
  5049                           
  5050                           	psect	cstackCOMRAM
  5051  000001                     __pcstackCOMRAM:
  5052                           	opt callstack 0
  5053  000001                     ??_ADCC_ThresholdISR:
  5054  000001                     
  5055                           ; 1 bytes @ 0x0
  5056  000001                     	ds	5
  5057  000006                     ??_TMR6_ISR:
  5058                           
  5059                           ; 1 bytes @ 0x5
  5060  000006                     	ds	1
  5061  000007                     ??_INT1_ISR:
  5062  000007                     
  5063                           ; 1 bytes @ 0x6
  5064  000007                     	ds	4
  5065  00000B                     ??_TMR5_ISR:
  5066                           
  5067                           ; 1 bytes @ 0xA
  5068  00000B                     	ds	31
  5069                           
  5070 ;;
  5071 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  5072 ;;
  5073 ;; *************** function _main *****************
  5074 ;; Defined at:
  5075 ;;		line 198 in file "main.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;		None
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  esr_temp        4  [STACK] float 
  5080 ;;  i_esr           2  [STACK] unsigned short 
  5081 ;;  shape           1  [STACK] unsigned char 
  5082 ;;  inp_index       1  [STACK] unsigned char 
  5083 ;;  k               1  [STACK] unsigned char 
  5084 ;;  j               1  [STACK] unsigned char 
  5085 ;;  i               1  [STACK] unsigned char 
  5086 ;;  mode            1  [STACK] enum E17179
  5087 ;;  i_ror           1  [STACK] unsigned char 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1  [STACK] void 
  5090 ;; Registers used:
  5091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5101 ;;Total ram usage:        0 bytes
  5102 ;; Hardware stack levels required when called:   28
  5103 ;; This function calls:
  5104 ;;		_SYSTEM_Initialize
  5105 ;;		_StartTimer
  5106 ;;		_TimerDone
  5107 ;;		_WaitMs
  5108 ;;		___fladd
  5109 ;;		___flge
  5110 ;;		___fltol
  5111 ;;		_asctime
  5112 ;;		_calc_model_data
  5113 ;;		_calc_ror_data
  5114 ;;		_check_adc_scan
  5115 ;;		_check_enter_button
  5116 ;;		_check_help
  5117 ;;		_clear_adc_scan
  5118 ;;		_clear_hid_pflags
  5119 ;;		_conv_raw_result
  5120 ;;		_convert_adc_data
  5121 ;;		_current_sensor_cal
  5122 ;;		_display_history
  5123 ;;		_eaDogM_WriteCommand
  5124 ;;		_esr_check
  5125 ;;		_fabsf
  5126 ;;		_get_raw_result
  5127 ;;		_get_switch
  5128 ;;		_get_vterm_ptr
  5129 ;;		_hid_display
  5130 ;;		_init_bsoc
  5131 ;;		_init_display
  5132 ;;		_init_port_dma
  5133 ;;		_load_hist_data
  5134 ;;		_localtime
  5135 ;;		_lp_filter
  5136 ;;		_mode_lamp_dim
  5137 ;;		_read_cal_data
  5138 ;;		_set_dac
  5139 ;;		_set_dac_a
  5140 ;;		_set_dac_b
  5141 ;;		_set_display_info
  5142 ;;		_set_hist_flag
  5143 ;;		_set_load_relay_one
  5144 ;;		_set_load_relay_two
  5145 ;;		_set_time
  5146 ;;		_set_vterm
  5147 ;;		_spinners
  5148 ;;		_sprintf
  5149 ;;		_srand
  5150 ;;		_start_adc_scan
  5151 ;;		_start_switch_handler
  5152 ;;		_static_soc
  5153 ;;		_time
  5154 ;;		_update_cal_data
  5155 ;;		_update_hist_data
  5156 ;;		_update_lcd
  5157 ;;		_wait_lcd_done
  5158 ;;		_write_cal_data
  5159 ;; This function is called by:
  5160 ;;		Startup code after reset
  5161 ;; This function uses a reentrant model
  5162 ;;
  5163                           
  5164                           	psect	text0
  5165  010000                     __ptext0:
  5166                           	opt callstack 0
  5167  010000                     _main:
  5168                           	opt callstack 0
  5169                           
  5170                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5171  010000  0E11               	movlw	17
  5172  010002  26E1               	addwf	fsr1l,f,c
  5173  010004  0E00               	movlw	0
  5174  010006  22E2               	addwfc	fsr1h,f,c
  5175                           
  5176                           ;main.c: 200:  UI_STATES mode;;main.c: 201:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  5177                           ;stkvar	_inp_index @ sp[(-17)+11]
  5178                           
  5179                           ;incstack = 0
  5180  010008  0EFA               	movlw	-6
  5181  01000A  6AE3               	clrf	plusw1,c
  5182                           
  5183                           ;stkvar	_i @ sp[(-17)+14]
  5184  01000C  0EFD               	movlw	-3
  5185  01000E  6AE3               	clrf	plusw1,c
  5186                           
  5187                           ;stkvar	_j @ sp[(-17)+13]
  5188  010010  0EFC               	movlw	-4
  5189  010012  6AE3               	clrf	plusw1,c
  5190  010014  2AE3               	incf	plusw1,f,c
  5191                           
  5192                           ;stkvar	_k @ sp[(-17)+12]
  5193  010016  0EFB               	movlw	-5
  5194  010018  6AE3               	clrf	plusw1,c
  5195  01001A  82E3               	bsf	plusw1,1,c
  5196                           
  5197                           ;main.c: 204:  SYSTEM_Initialize();
  5198  01001C  EC61  F010         	call	_SYSTEM_Initialize	;wreg free
  5199                           
  5200                           ; BSR set to: 60
  5201                           ;main.c: 207:  (INTCON0bits.GIEH = 1);
  5202  010020  8ED2               	bsf	210,7,c	;volatile
  5203                           
  5204                           ; BSR set to: 60
  5205                           ;main.c: 210:  (INTCON0bits.GIEL = 1);
  5206  010022  8CD2               	bsf	210,6,c	;volatile
  5207                           
  5208                           ; BSR set to: 60
  5209                           ;main.c: 212:  V.ui_state = UI_STATE_INIT;
  5210  010024  0102               	movlb	2	; () banked
  5211  010026  6B07               	clrf	_V& (0+255),b	;volatile
  5212                           
  5213                           ; BSR set to: 2
  5214                           ;main.c: 217:  WaitMs(300);
  5215  010028  0E2C               	movlw	44
  5216  01002A  6EE6               	movwf	postinc1,c
  5217  01002C  0E01               	movlw	1
  5218  01002E  6EE6               	movwf	postinc1,c
  5219  010030  EC17  F013         	call	_WaitMs	;wreg free
  5220                           
  5221                           ;main.c: 218:  if (PORTBbits.RB0) {
  5222  010034  A0CB               	btfss	203,0,c	;volatile
  5223  010036  D004               	goto	l17683
  5224                           
  5225                           ;main.c: 219:   mode = UI_STATE_HOST;
  5226                           ;stkvar	_mode @ sp[(-17)+15]
  5227  010038  0EFE               	movlw	-2
  5228  01003A  6AE3               	clrf	plusw1,c
  5229  01003C  2AE3               	incf	plusw1,f,c
  5230                           
  5231                           ;main.c: 220:  } else {
  5232  01003E  D004               	goto	l17685
  5233  010040                     l17683:
  5234                           
  5235                           ;main.c: 221:   mode = UI_STATE_LOG;
  5236                           ;stkvar	_mode @ sp[(-17)+15]
  5237  010040  0EFE               	movlw	-2
  5238  010042  6AE3               	clrf	plusw1,c
  5239  010044  80E3               	bsf	plusw1,0,c
  5240  010046  82E3               	bsf	plusw1,1,c	;indir
  5241  010048                     l17685:
  5242                           
  5243                           ;main.c: 224:  if (mode == UI_STATE_HOST) {
  5244                           ;stkvar	_mode @ sp[(-17)+15]
  5245  010048  0EFE               	movlw	-2
  5246  01004A  04E3               	decf	plusw1,w,c
  5247  01004C  A4D8               	btfss	status,2,c
  5248  01004E  D007               	goto	l1459
  5249                           
  5250                           ;main.c: 225:   do { LATDbits.LATD0 = 1; } while(0);
  5251  010050  80BD               	bsf	189,0,c	;volatile
  5252                           
  5253                           ;main.c: 226:   V.mode_pwm = 70;
  5254  010052  0E00               	movlw	0
  5255  010054  0102               	movlb	2	; () banked
  5256  010056  6F9A               	movwf	(_V+147)& (0+255),b	;volatile
  5257  010058  0E46               	movlw	70
  5258  01005A  6F99               	movwf	(_V+146)& (0+255),b	;volatile
  5259                           
  5260                           ;main.c: 227:  } else {
  5261  01005C  D004               	goto	l17689
  5262  01005E                     l1459:
  5263  01005E  90BD               	bcf	189,0,c	;volatile
  5264                           
  5265                           ;main.c: 229:   V.mode_pwm = 0;
  5266  010060  0102               	movlb	2	; () banked
  5267  010062  6B99               	clrf	(_V+146)& (0+255),b	;volatile
  5268  010064  6B9A               	clrf	(_V+147)& (0+255),b	;volatile
  5269  010066                     l17689:
  5270                           
  5271                           ; BSR set to: 2
  5272                           ;main.c: 231:  mode_lamp_dim(V.mode_pwm);
  5273  010066  0060  FA67  FFE6   	movff	_V+146,postinc1
  5274  01006C  0060  FA6B  FFE6   	movff	_V+147,postinc1
  5275  010072  ECD5  F016         	call	_mode_lamp_dim	;wreg free
  5276  010076  D3EB               	goto	l17845
  5277  010078                     l17691:
  5278                           
  5279                           ; BSR set to: 2
  5280                           ;main.c: 239:    init_port_dma();
  5281  010078  ECB3  F013         	call	_init_port_dma	;wreg free
  5282                           
  5283                           ; BSR set to: 59
  5284                           ;main.c: 241:    init_display();
  5285  01007C  ECBC  F002         	call	_init_display	;wreg free
  5286                           
  5287                           ; BSR set to: 61
  5288                           ;main.c: 242:    eaDogM_WriteCommand(0b00001100);
  5289  010080  0E0C               	movlw	12
  5290  010082  6EE6               	movwf	postinc1,c
  5291  010084  EC5D  F017         	call	_eaDogM_WriteCommand	;wreg free
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;main.c: 243:    set_dac();
  5295  010088  EC45  F006         	call	_set_dac	;wreg free
  5296                           
  5297                           ;main.c: 247:    set_load_relay_one(1);
  5298  01008C  0E01               	movlw	1
  5299  01008E  6EE6               	movwf	postinc1,c
  5300  010090  EC3D  F017         	call	_set_load_relay_one	;wreg free
  5301                           
  5302                           ;main.c: 248:    set_load_relay_two(1);
  5303  010094  0E01               	movlw	1
  5304  010096  6EE6               	movwf	postinc1,c
  5305  010098  EC35  F017         	call	_set_load_relay_two	;wreg free
  5306                           
  5307                           ;main.c: 250:    V.ui_state = mode;
  5308                           ;stkvar	_mode @ sp[(-17)+15]
  5309  01009C  0EFE               	movlw	-2
  5310  01009E  006F FF8C  F207    	movff	plusw1,_V	;volatile
  5311                           
  5312                           ;main.c: 251:    srand(1957);
  5313  0100A4  0EA5               	movlw	165
  5314  0100A6  6EE6               	movwf	postinc1,c
  5315  0100A8  0E07               	movlw	7
  5316  0100AA  6EE6               	movwf	postinc1,c
  5317  0100AC  EC32  F013         	call	_srand	;wreg free
  5318                           
  5319                           ; BSR set to: 2
  5320                           ;main.c: 252:    set_vterm(0);
  5321  0100B0  0E00               	movlw	0
  5322  0100B2  6EE6               	movwf	postinc1,c
  5323  0100B4  EC9C  F016         	call	_set_vterm	;wreg free
  5324                           
  5325                           ;main.c: 253:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  5326  0100B8  0EF5               	movlw	low STR_1
  5327  0100BA  6EE6               	movwf	postinc1,c
  5328  0100BC  0EFE               	movlw	high STR_1
  5329  0100BE  6EE6               	movwf	postinc1,c
  5330  0100C0  0E00               	movlw	0
  5331  0100C2  6EE6               	movwf	postinc1,c
  5332  0100C4  0E00               	movlw	0
  5333  0100C6  6EE6               	movwf	postinc1,c
  5334  0100C8  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5335  0100CC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5336  0100D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5337  0100D8  0E04               	movlw	4
  5338  0100DA  6EE6               	movwf	postinc1,c
  5339  0100DC  EC59  F0FF         	call	_sprintf	;wreg free
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;main.c: 254:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.25");
  5343  0100E0  0ED5               	movlw	low STR_3
  5344  0100E2  6EE6               	movwf	postinc1,c
  5345  0100E4  0EFF               	movlw	high STR_3
  5346  0100E6  6EE6               	movwf	postinc1,c
  5347  0100E8  0ECB               	movlw	low STR_2
  5348  0100EA  6EE6               	movwf	postinc1,c
  5349  0100EC  0EFE               	movlw	high STR_2
  5350  0100EE  6EE6               	movwf	postinc1,c
  5351  0100F0  0E00               	movlw	0
  5352  0100F2  6EE6               	movwf	postinc1,c
  5353  0100F4  0E01               	movlw	1
  5354  0100F6  6EE6               	movwf	postinc1,c
  5355  0100F8  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5356  0100FC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5357  010102  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5358  010108  0E06               	movlw	6
  5359  01010A  6EE6               	movwf	postinc1,c
  5360  01010C  EC59  F0FF         	call	_sprintf	;wreg free
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;main.c: 255:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  5364  010110  0EA1               	movlw	low STR_4
  5365  010112  6EE6               	movwf	postinc1,c
  5366  010114  0EFE               	movlw	high STR_4
  5367  010116  6EE6               	movwf	postinc1,c
  5368  010118  0E00               	movlw	0
  5369  01011A  6EE6               	movwf	postinc1,c
  5370  01011C  0E02               	movlw	2
  5371  01011E  6EE6               	movwf	postinc1,c
  5372  010120  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5373  010124  0060  F0AB  FFE6   	movff	btemp,postinc1
  5374  01012A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5375  010130  0E04               	movlw	4
  5376  010132  6EE6               	movwf	postinc1,c
  5377  010134  EC59  F0FF         	call	_sprintf	;wreg free
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;main.c: 256:    sprintf(get_vterm_ptr(3, 0), "                    ");
  5381  010138  0E25               	movlw	low (STR_16+2)
  5382  01013A  6EE6               	movwf	postinc1,c
  5383  01013C  0EFB               	movlw	high (STR_16+2)
  5384  01013E  6EE6               	movwf	postinc1,c
  5385  010140  0E00               	movlw	0
  5386  010142  6EE6               	movwf	postinc1,c
  5387  010144  0E03               	movlw	3
  5388  010146  6EE6               	movwf	postinc1,c
  5389  010148  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5390  01014C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5391  010152  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5392  010158  0E04               	movlw	4
  5393  01015A  6EE6               	movwf	postinc1,c
  5394  01015C  EC59  F0FF         	call	_sprintf	;wreg free
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;main.c: 257:    sprintf(get_vterm_ptr(0, 2), "                    ");
  5398  010160  0E25               	movlw	low (STR_16+2)
  5399  010162  6EE6               	movwf	postinc1,c
  5400  010164  0EFB               	movlw	high (STR_16+2)
  5401  010166  6EE6               	movwf	postinc1,c
  5402  010168  0E02               	movlw	2
  5403  01016A  6EE6               	movwf	postinc1,c
  5404  01016C  0E00               	movlw	0
  5405  01016E  6EE6               	movwf	postinc1,c
  5406  010170  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5407  010174  0060  F0AB  FFE6   	movff	btemp,postinc1
  5408  01017A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5409  010180  0E04               	movlw	4
  5410  010182  6EE6               	movwf	postinc1,c
  5411  010184  EC59  F0FF         	call	_sprintf	;wreg free
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;main.c: 258:    sprintf(get_vterm_ptr(1, 2), "                    ");
  5415  010188  0E25               	movlw	low (STR_16+2)
  5416  01018A  6EE6               	movwf	postinc1,c
  5417  01018C  0EFB               	movlw	high (STR_16+2)
  5418  01018E  6EE6               	movwf	postinc1,c
  5419  010190  0E02               	movlw	2
  5420  010192  6EE6               	movwf	postinc1,c
  5421  010194  0E01               	movlw	1
  5422  010196  6EE6               	movwf	postinc1,c
  5423  010198  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5424  01019C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5425  0101A2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5426  0101A8  0E04               	movlw	4
  5427  0101AA  6EE6               	movwf	postinc1,c
  5428  0101AC  EC59  F0FF         	call	_sprintf	;wreg free
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;main.c: 259:    sprintf(get_vterm_ptr(2, 2), "                    ");
  5432  0101B0  0E25               	movlw	low (STR_16+2)
  5433  0101B2  6EE6               	movwf	postinc1,c
  5434  0101B4  0EFB               	movlw	high (STR_16+2)
  5435  0101B6  6EE6               	movwf	postinc1,c
  5436  0101B8  0E02               	movlw	2
  5437  0101BA  6EE6               	movwf	postinc1,c
  5438  0101BC  0E02               	movlw	2
  5439  0101BE  6EE6               	movwf	postinc1,c
  5440  0101C0  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5441  0101C4  0060  F0AB  FFE6   	movff	btemp,postinc1
  5442  0101CA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5443  0101D0  0E04               	movlw	4
  5444  0101D2  6EE6               	movwf	postinc1,c
  5445  0101D4  EC59  F0FF         	call	_sprintf	;wreg free
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;main.c: 260:    sprintf(get_vterm_ptr(3, 2), "                    ");
  5449  0101D8  0E25               	movlw	low (STR_16+2)
  5450  0101DA  6EE6               	movwf	postinc1,c
  5451  0101DC  0EFB               	movlw	high (STR_16+2)
  5452  0101DE  6EE6               	movwf	postinc1,c
  5453  0101E0  0E02               	movlw	2
  5454  0101E2  6EE6               	movwf	postinc1,c
  5455  0101E4  0E03               	movlw	3
  5456  0101E6  6EE6               	movwf	postinc1,c
  5457  0101E8  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5458  0101EC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5459  0101F2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5460  0101F8  0E04               	movlw	4
  5461  0101FA  6EE6               	movwf	postinc1,c
  5462  0101FC  EC59  F0FF         	call	_sprintf	;wreg free
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;main.c: 261:    update_lcd(0);
  5466  010200  0E00               	movlw	0
  5467  010202  6EE6               	movwf	postinc1,c
  5468  010204  EC0B  F0F8         	call	_update_lcd	;wreg free
  5469                           
  5470                           ;main.c: 262:    WaitMs(1000);
  5471  010208  0EE8               	movlw	232
  5472  01020A  6EE6               	movwf	postinc1,c
  5473  01020C  0E03               	movlw	3
  5474  01020E  6EE6               	movwf	postinc1,c
  5475  010210  EC17  F013         	call	_WaitMs	;wreg free
  5476                           
  5477                           ;main.c: 263:    StartTimer(TMR_DISPLAY, 250);
  5478  010214  0EFA               	movlw	250
  5479  010216  6EE6               	movwf	postinc1,c
  5480  010218  0E00               	movlw	0
  5481  01021A  6EE6               	movwf	postinc1,c
  5482  01021C  0E0A               	movlw	10
  5483  01021E  6EE6               	movwf	postinc1,c
  5484  010220  EC09  F012         	call	_StartTimer	;wreg free
  5485                           
  5486                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  5487  010224  0EC8               	movlw	200
  5488  010226  6EE6               	movwf	postinc1,c
  5489  010228  0E00               	movlw	0
  5490  01022A  6EE6               	movwf	postinc1,c
  5491  01022C  0E01               	movlw	1
  5492  01022E  6EE6               	movwf	postinc1,c
  5493  010230  EC09  F012         	call	_StartTimer	;wreg free
  5494                           
  5495                           ;main.c: 265:    StartTimer(TMR_INFO, 3000);
  5496  010234  0EB8               	movlw	184
  5497  010236  6EE6               	movwf	postinc1,c
  5498  010238  0E0B               	movlw	11
  5499  01023A  6EE6               	movwf	postinc1,c
  5500  01023C  0E07               	movlw	7
  5501  01023E  6EE6               	movwf	postinc1,c
  5502  010240  EC09  F012         	call	_StartTimer	;wreg free
  5503                           
  5504                           ;main.c: 266:    StartTimer(TMR_FLIPPER, 1500);
  5505  010244  0EDC               	movlw	220
  5506  010246  6EE6               	movwf	postinc1,c
  5507  010248  0E05               	movlw	5
  5508  01024A  6EE6               	movwf	postinc1,c
  5509  01024C  0E0B               	movlw	11
  5510  01024E  6EE6               	movwf	postinc1,c
  5511  010250  EC09  F012         	call	_StartTimer	;wreg free
  5512                           
  5513                           ;main.c: 267:    StartTimer(TMR_HELPDIS, 3000);
  5514  010254  0EB8               	movlw	184
  5515  010256  6EE6               	movwf	postinc1,c
  5516  010258  0E0B               	movlw	11
  5517  01025A  6EE6               	movwf	postinc1,c
  5518  01025C  0E09               	movlw	9
  5519  01025E  6EE6               	movwf	postinc1,c
  5520  010260  EC09  F012         	call	_StartTimer	;wreg free
  5521                           
  5522                           ;main.c: 269:    start_adc_scan();
  5523  010264  EC43  F00E         	call	_start_adc_scan	;wreg free
  5524                           
  5525                           ;main.c: 270:    start_switch_handler();
  5526  010268  EC5E  F016         	call	_start_switch_handler	;wreg free
  5527                           
  5528                           ; BSR set to: 57
  5529                           ;main.c: 271:    WaitMs(1000);
  5530  01026C  0EE8               	movlw	232
  5531  01026E  6EE6               	movwf	postinc1,c
  5532  010270  0E03               	movlw	3
  5533  010272  6EE6               	movwf	postinc1,c
  5534  010274  EC17  F013         	call	_WaitMs	;wreg free
  5535                           
  5536                           ;main.c: 276:    if (read_cal_data()) {
  5537  010278  EC11  F0EE         	call	_read_cal_data	;wreg free
  5538  01027C  502A               	movf	btemp^0,w,c
  5539  01027E  B4D8               	btfsc	status,2,c
  5540  010280  D03E               	goto	l17755
  5541                           
  5542                           ;main.c: 277:     update_cal_data();
  5543  010282  ECBD  F00F         	call	_update_cal_data	;wreg free
  5544                           
  5545                           ; BSR set to: 1
  5546                           ;main.c: 278:     if (update_hist_data(1, &C.hist[0]))
  5547  010286  0EB8               	movlw	low (_C+185)
  5548  010288  6EE6               	movwf	postinc1,c
  5549  01028A  0E09               	movlw	high (_C+185)
  5550  01028C  6EE6               	movwf	postinc1,c
  5551  01028E  0E01               	movlw	1
  5552  010290  6EE6               	movwf	postinc1,c
  5553  010292  ECE7  F00B         	call	_update_hist_data	;wreg free
  5554  010296  502A               	movf	btemp^0,w,c
  5555  010298  B4D8               	btfsc	status,2,c
  5556  01029A  D01C               	goto	l17753
  5557                           
  5558                           ;main.c: 279:      set_time(C.hist[0].pclock);
  5559  01029C  EE22  F1B9         	lfsr	2,_C+186	;volatile
  5560  0102A0  006F FF7B FFE6     	movff	postinc2,postinc1
  5561  0102A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5562  0102AC  006F FF7B FFE6     	movff	postinc2,postinc1
  5563  0102B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5564  0102B8  006F FF7B FFE6     	movff	postinc2,postinc1
  5565  0102BE  006F FF7B FFE6     	movff	postinc2,postinc1
  5566  0102C4  006F FF7B FFE6     	movff	postinc2,postinc1
  5567  0102CA  006F FF7B FFE6     	movff	postinc2,postinc1
  5568  0102D0  ECFC  F012         	call	_set_time	;wreg free
  5569  0102D4                     l17753:
  5570                           
  5571                           ;main.c: 281:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  5572  0102D4  0E1F               	movlw	low STR_10
  5573  0102D6  6EE6               	movwf	postinc1,c
  5574  0102D8  0EFF               	movlw	high STR_10
  5575  0102DA  6EE6               	movwf	postinc1,c
  5576  0102DC  0E00               	movlw	0
  5577  0102DE  6EE6               	movwf	postinc1,c
  5578  0102E0  0E02               	movlw	2
  5579  0102E2  6EE6               	movwf	postinc1,c
  5580  0102E4  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5581  0102E8  0060  F0AB  FFE6   	movff	btemp,postinc1
  5582  0102EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5583  0102F4  0E04               	movlw	4
  5584  0102F6  6EE6               	movwf	postinc1,c
  5585  0102F8  EC59  F0FF         	call	_sprintf	;wreg free
  5586                           
  5587                           ;main.c: 282:    } else {
  5588  0102FC  D014               	goto	l1466
  5589  0102FE                     l17755:
  5590                           
  5591                           ;main.c: 283:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  5592  0102FE  0E49               	movlw	low STR_11
  5593  010300  6EE6               	movwf	postinc1,c
  5594  010302  0EFF               	movlw	high STR_11
  5595  010304  6EE6               	movwf	postinc1,c
  5596  010306  0E00               	movlw	0
  5597  010308  6EE6               	movwf	postinc1,c
  5598  01030A  0E02               	movlw	2
  5599  01030C  6EE6               	movwf	postinc1,c
  5600  01030E  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5601  010312  0060  F0AB  FFE6   	movff	btemp,postinc1
  5602  010318  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5603  01031E  0E04               	movlw	4
  5604  010320  6EE6               	movwf	postinc1,c
  5605  010322  EC59  F0FF         	call	_sprintf	;wreg free
  5606  010326                     l1466:
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;main.c: 285:    update_lcd(0);
  5610  010326  0E00               	movlw	0
  5611  010328  6EE6               	movwf	postinc1,c
  5612  01032A  EC0B  F0F8         	call	_update_lcd	;wreg free
  5613                           
  5614                           ;main.c: 286:    WaitMs(2000);
  5615  01032E  0ED0               	movlw	208
  5616  010330  6EE6               	movwf	postinc1,c
  5617  010332  0E07               	movlw	7
  5618  010334  6EE6               	movwf	postinc1,c
  5619  010336  EC17  F013         	call	_WaitMs	;wreg free
  5620                           
  5621                           ;main.c: 288:    i_ror = 1;
  5622                           ;stkvar	_i_ror @ sp[(-17)+16]
  5623  01033A  0EFF               	movlw	-1
  5624  01033C  6AE3               	clrf	plusw1,c
  5625  01033E  2AE3               	incf	plusw1,f,c
  5626  010340                     l17761:
  5627                           
  5628                           ;main.c: 290:     calc_ror_data();
  5629  010340  EC01  F0F3         	call	_calc_ror_data	;wreg free
  5630                           
  5631                           ;main.c: 291:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f             ", conv_raw_result(
      +                          V_BAT, CONV));
  5632  010344  0E00               	movlw	0
  5633  010346  6EE6               	movwf	postinc1,c
  5634  010348  0E04               	movlw	4
  5635  01034A  6EE6               	movwf	postinc1,c
  5636  01034C  ECC0  F0C8         	call	_conv_raw_result	;wreg free
  5637  010350  0060  F0AB  FFE6   	movff	btemp,postinc1
  5638  010356  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5639  01035C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5640  010362  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5641  010368  0EEB               	movlw	low STR_12
  5642  01036A  6EE6               	movwf	postinc1,c
  5643  01036C  0EFC               	movlw	high STR_12
  5644  01036E  6EE6               	movwf	postinc1,c
  5645  010370  0E00               	movlw	0
  5646  010372  6EE6               	movwf	postinc1,c
  5647  010374  0E01               	movlw	1
  5648  010376  6EE6               	movwf	postinc1,c
  5649  010378  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5650  01037C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5651  010382  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5652  010388  0E08               	movlw	8
  5653  01038A  6EE6               	movwf	postinc1,c
  5654  01038C  EC59  F0FF         	call	_sprintf	;wreg free
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;main.c: 292:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5658  010390  EE22  F16B         	lfsr	2,_C+108	;volatile
  5659  010394  006F FF7B FFE6     	movff	postinc2,postinc1
  5660  01039A  006F FF7B FFE6     	movff	postinc2,postinc1
  5661  0103A0  006F FF7B FFE6     	movff	postinc2,postinc1
  5662  0103A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5663                           
  5664                           ;stkvar	_i_ror @ sp[(-21)+16]
  5665  0103AC  0EFB               	movlw	-5
  5666  0103AE  50E3               	movf	plusw1,w,c
  5667  0103B0  6EE6               	movwf	postinc1,c
  5668  0103B2  0E00               	movlw	0
  5669  0103B4  6EE6               	movwf	postinc1,c
  5670  0103B6  0E00               	movlw	0
  5671  0103B8  6EE6               	movwf	postinc1,c
  5672  0103BA  0E05               	movlw	5
  5673  0103BC  6EE6               	movwf	postinc1,c
  5674  0103BE  EC52  F001         	call	_spinners	;wreg free
  5675  0103C2  502A               	movf	btemp^0,w,c
  5676  0103C4  6EE6               	movwf	postinc1,c
  5677  0103C6  0E00               	movlw	0
  5678  0103C8  6EE6               	movwf	postinc1,c
  5679  0103CA  0E91               	movlw	low STR_13
  5680  0103CC  6EE6               	movwf	postinc1,c
  5681  0103CE  0EFA               	movlw	high STR_13
  5682  0103D0  6EE6               	movwf	postinc1,c
  5683  0103D2  0E00               	movlw	0
  5684  0103D4  6EE6               	movwf	postinc1,c
  5685  0103D6  0E02               	movlw	2
  5686  0103D8  6EE6               	movwf	postinc1,c
  5687  0103DA  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5688  0103DE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5689  0103E4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5690  0103EA  0E0C               	movlw	12
  5691  0103EC  6EE6               	movwf	postinc1,c
  5692  0103EE  EC59  F0FF         	call	_sprintf	;wreg free
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;main.c: 293:     update_lcd(0);
  5696  0103F2  0E00               	movlw	0
  5697  0103F4  6EE6               	movwf	postinc1,c
  5698  0103F6  EC0B  F0F8         	call	_update_lcd	;wreg free
  5699                           
  5700                           ;main.c: 294:     clear_adc_scan();
  5701  0103FA  ECB7  F017         	call	_clear_adc_scan	;wreg free
  5702                           
  5703                           ; BSR set to: 1
  5704                           ;main.c: 295:     start_adc_scan();
  5705  0103FE  EC43  F00E         	call	_start_adc_scan	;wreg free
  5706                           
  5707                           ;main.c: 296:     WaitMs(2000);
  5708  010402  0ED0               	movlw	208
  5709  010404  6EE6               	movwf	postinc1,c
  5710  010406  0E07               	movlw	7
  5711  010408  6EE6               	movwf	postinc1,c
  5712  01040A  EC17  F013         	call	_WaitMs	;wreg free
  5713                           
  5714                           ;main.c: 299:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5715                           ;stkvar	_i_ror @ sp[(-17)+16]
  5716  01040E  0EFF               	movlw	-1
  5717  010410  006F FF8C  F035    	movff	plusw1,btemp+11
  5718  010416  2A35               	incf	(btemp+11)^0,f,c
  5719  010418  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5720  01041E  0635               	decf	(btemp+11)^0,f,c
  5721  010420  0E1E               	movlw	30
  5722  010422  6035               	cpfslt	(btemp+11)^0,c
  5723  010424  D01A               	goto	u17280
  5724  010426  EE22  F16B         	lfsr	2,_C+108	;volatile
  5725  01042A  006F FF7B FFE6     	movff	postinc2,postinc1
  5726  010430  006F FF7B FFE6     	movff	postinc2,postinc1
  5727  010436  006F FF7B FFE6     	movff	postinc2,postinc1
  5728  01043C  006F FF7B FFE6     	movff	postinc2,postinc1
  5729  010442  0E42               	movlw	66
  5730  010444  6EE6               	movwf	postinc1,c
  5731  010446  0E60               	movlw	96
  5732  010448  6EE6               	movwf	postinc1,c
  5733  01044A  0E65               	movlw	101
  5734  01044C  6EE6               	movwf	postinc1,c
  5735  01044E  0E3C               	movlw	60
  5736  010450  6EE6               	movwf	postinc1,c
  5737  010452  ECA9  F0F6         	call	___flge	;wreg free
  5738  010456  A02A               	btfss	btemp& (0+255),0,c
  5739  010458  D773               	goto	l17761
  5740  01045A                     u17280:
  5741                           
  5742                           ;main.c: 301:    static_soc();
  5743  01045A  EC36  F00F         	call	_static_soc	;wreg free
  5744                           
  5745                           ;main.c: 302:    init_bsoc();
  5746  01045E  EC6B  F0E5         	call	_init_bsoc	;wreg free
  5747                           
  5748                           ;main.c: 303:    set_load_relay_one(0);
  5749  010462  0E00               	movlw	0
  5750  010464  6EE6               	movwf	postinc1,c
  5751  010466  EC3D  F017         	call	_set_load_relay_one	;wreg free
  5752                           
  5753                           ;main.c: 304:    set_load_relay_two(0);
  5754  01046A  0E00               	movlw	0
  5755  01046C  6EE6               	movwf	postinc1,c
  5756  01046E  EC35  F017         	call	_set_load_relay_two	;wreg free
  5757                           
  5758                           ;main.c: 305:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d         ", C.soc);
  5759  010472  EE22  F1B5         	lfsr	2,_C+182	;volatile
  5760  010476  006F FF78  F034    	movff	postinc2,btemp+10
  5761  01047C  006F FF74  F035    	movff	postdec2,btemp+11
  5762  010482  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  5763  010488  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  5764  01048E  0E51               	movlw	low STR_14
  5765  010490  6EE6               	movwf	postinc1,c
  5766  010492  0EFB               	movlw	high STR_14
  5767  010494  6EE6               	movwf	postinc1,c
  5768  010496  0E00               	movlw	0
  5769  010498  6EE6               	movwf	postinc1,c
  5770  01049A  0E00               	movlw	0
  5771  01049C  6EE6               	movwf	postinc1,c
  5772  01049E  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5773  0104A2  0060  F0AB  FFE6   	movff	btemp,postinc1
  5774  0104A8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5775  0104AE  0E06               	movlw	6
  5776  0104B0  6EE6               	movwf	postinc1,c
  5777  0104B2  EC59  F0FF         	call	_sprintf	;wreg free
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;main.c: 306:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f      ", C.dynamic_ah);
  5781  0104B6  EE22  F18F         	lfsr	2,_C+144	;volatile
  5782  0104BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5783  0104C0  006F FF7B FFE6     	movff	postinc2,postinc1
  5784  0104C6  006F FF7B FFE6     	movff	postinc2,postinc1
  5785  0104CC  006F FF7B FFE6     	movff	postinc2,postinc1
  5786  0104D2  0E37               	movlw	low STR_15
  5787  0104D4  6EE6               	movwf	postinc1,c
  5788  0104D6  0EFC               	movlw	high STR_15
  5789  0104D8  6EE6               	movwf	postinc1,c
  5790  0104DA  0E00               	movlw	0
  5791  0104DC  6EE6               	movwf	postinc1,c
  5792  0104DE  0E01               	movlw	1
  5793  0104E0  6EE6               	movwf	postinc1,c
  5794  0104E2  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5795  0104E6  0060  F0AB  FFE6   	movff	btemp,postinc1
  5796  0104EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5797  0104F2  0E08               	movlw	8
  5798  0104F4  6EE6               	movwf	postinc1,c
  5799  0104F6  EC59  F0FF         	call	_sprintf	;wreg free
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;main.c: 307:    sprintf(get_vterm_ptr(2, 0), "                      ");
  5803  0104FA  0E23               	movlw	low STR_16
  5804  0104FC  6EE6               	movwf	postinc1,c
  5805  0104FE  0EFB               	movlw	high STR_16
  5806  010500  6EE6               	movwf	postinc1,c
  5807  010502  0E00               	movlw	0
  5808  010504  6EE6               	movwf	postinc1,c
  5809  010506  0E02               	movlw	2
  5810  010508  6EE6               	movwf	postinc1,c
  5811  01050A  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5812  01050E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5813  010514  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5814  01051A  0E04               	movlw	4
  5815  01051C  6EE6               	movwf	postinc1,c
  5816  01051E  EC59  F0FF         	call	_sprintf	;wreg free
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;main.c: 308:    update_lcd(0);
  5820  010522  0E00               	movlw	0
  5821  010524  6EE6               	movwf	postinc1,c
  5822  010526  EC0B  F0F8         	call	_update_lcd	;wreg free
  5823                           
  5824                           ;main.c: 309:    WaitMs(2000);
  5825  01052A  0ED0               	movlw	208
  5826  01052C  6EE6               	movwf	postinc1,c
  5827  01052E  0E07               	movlw	7
  5828  010530  6EE6               	movwf	postinc1,c
  5829  010532  EC17  F013         	call	_WaitMs	;wreg free
  5830                           
  5831                           ;main.c: 310:    sprintf(get_vterm_ptr(0, 0), "Battery ESR          ");
  5832  010536  0E17               	movlw	low STR_17
  5833  010538  6EE6               	movwf	postinc1,c
  5834  01053A  0EFD               	movlw	high STR_17
  5835  01053C  6EE6               	movwf	postinc1,c
  5836  01053E  0E00               	movlw	0
  5837  010540  6EE6               	movwf	postinc1,c
  5838  010542  0E00               	movlw	0
  5839  010544  6EE6               	movwf	postinc1,c
  5840  010546  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5841  01054A  0060  F0AB  FFE6   	movff	btemp,postinc1
  5842  010550  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5843  010556  0E04               	movlw	4
  5844  010558  6EE6               	movwf	postinc1,c
  5845  01055A  EC59  F0FF         	call	_sprintf	;wreg free
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;main.c: 311:    sprintf(get_vterm_ptr(1, 0), "Calculation          ");
  5849  01055E  0E2D               	movlw	low STR_18
  5850  010560  6EE6               	movwf	postinc1,c
  5851  010562  0EFD               	movlw	high STR_18
  5852  010564  6EE6               	movwf	postinc1,c
  5853  010566  0E00               	movlw	0
  5854  010568  6EE6               	movwf	postinc1,c
  5855  01056A  0E01               	movlw	1
  5856  01056C  6EE6               	movwf	postinc1,c
  5857  01056E  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5858  010572  0060  F0AB  FFE6   	movff	btemp,postinc1
  5859  010578  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5860  01057E  0E04               	movlw	4
  5861  010580  6EE6               	movwf	postinc1,c
  5862  010582  EC59  F0FF         	call	_sprintf	;wreg free
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;main.c: 312:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds     ");
  5866  010586  0E09               	movlw	low STR_19
  5867  010588  6EE6               	movwf	postinc1,c
  5868  01058A  0EFE               	movlw	high STR_19
  5869  01058C  6EE6               	movwf	postinc1,c
  5870  01058E  0E00               	movlw	0
  5871  010590  6EE6               	movwf	postinc1,c
  5872  010592  0E02               	movlw	2
  5873  010594  6EE6               	movwf	postinc1,c
  5874  010596  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5875  01059A  0060  F0AB  FFE6   	movff	btemp,postinc1
  5876  0105A0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5877  0105A6  0E04               	movlw	4
  5878  0105A8  6EE6               	movwf	postinc1,c
  5879  0105AA  EC59  F0FF         	call	_sprintf	;wreg free
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;main.c: 313:    update_lcd(0);
  5883  0105AE  0E00               	movlw	0
  5884  0105B0  6EE6               	movwf	postinc1,c
  5885  0105B2  EC0B  F0F8         	call	_update_lcd	;wreg free
  5886                           
  5887                           ;main.c: 314:    uint16_t i_esr = 1;
  5888  0105B6  0E01               	movlw	1
  5889  0105B8  6E34               	movwf	(btemp+10)^0,c
  5890  0105BA  0E00               	movlw	0
  5891  0105BC  6E35               	movwf	(btemp+11)^0,c
  5892                           
  5893                           ;stkvar	_i_esr @ sp[(-17)+8]
  5894  0105BE  0EF7               	movlw	-9
  5895  0105C0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  5896  0105C6  0EF8               	movlw	-8
  5897  0105C8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5898                           
  5899                           ;main.c: 316:    float esr_temp;;main.c: 317:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5900  0105CE  D06D               	goto	l17821
  5901  0105D0                     l17809:
  5902                           
  5903                           ;main.c: 318:     WaitMs(110);
  5904  0105D0  0E6E               	movlw	110
  5905  0105D2  6EE6               	movwf	postinc1,c
  5906  0105D4  0E00               	movlw	0
  5907  0105D6  6EE6               	movwf	postinc1,c
  5908  0105D8  EC17  F013         	call	_WaitMs	;wreg free
  5909                           
  5910                           ;main.c: 319:     shape = (uint8_t) fabsf(esr_temp);
  5911                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5912  0105DC  0EF3               	movlw	-13
  5913  0105DE  006F FF8F FFE6     	movff	plusw1,postinc1
  5914  0105E4  006F FF8F FFE6     	movff	plusw1,postinc1
  5915  0105EA  006F FF8F FFE6     	movff	plusw1,postinc1
  5916  0105F0  006F FF8F FFE6     	movff	plusw1,postinc1
  5917  0105F6  ECA0  F006         	call	_fabsf	;wreg free
  5918  0105FA  0060  F0AB  FFE6   	movff	btemp,postinc1
  5919  010600  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5920  010606  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5921  01060C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5922  010612  EC3D  F0F5         	call	___fltol	;wreg free
  5923  010616  0060  F0A8  F035   	movff	btemp,btemp+11
  5924                           
  5925                           ;stkvar	_shape @ sp[(-17)+10]
  5926  01061C  0EF9               	movlw	-7
  5927  01061E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5928                           
  5929                           ;main.c: 320:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c       ", spinners(0, 0), 
      +                          spinners(shape, 0));
  5930  010624  0E00               	movlw	0
  5931  010626  6EE6               	movwf	postinc1,c
  5932                           
  5933                           ;stkvar	_shape @ sp[(-18)+10]
  5934  010628  0EF8               	movlw	-8
  5935  01062A  50E3               	movf	plusw1,w,c
  5936  01062C  6EE6               	movwf	postinc1,c
  5937  01062E  EC52  F001         	call	_spinners	;wreg free
  5938  010632  502A               	movf	btemp^0,w,c
  5939  010634  6EE6               	movwf	postinc1,c
  5940  010636  0E00               	movlw	0
  5941  010638  6EE6               	movwf	postinc1,c
  5942  01063A  0E00               	movlw	0
  5943  01063C  6EE6               	movwf	postinc1,c
  5944  01063E  0E00               	movlw	0
  5945  010640  6EE6               	movwf	postinc1,c
  5946  010642  EC52  F001         	call	_spinners	;wreg free
  5947  010646  502A               	movf	btemp^0,w,c
  5948  010648  6EE6               	movwf	postinc1,c
  5949  01064A  0E00               	movlw	0
  5950  01064C  6EE6               	movwf	postinc1,c
  5951  01064E  0EB1               	movlw	low STR_20
  5952  010650  6EE6               	movwf	postinc1,c
  5953  010652  0EFD               	movlw	high STR_20
  5954  010654  6EE6               	movwf	postinc1,c
  5955  010656  0E00               	movlw	0
  5956  010658  6EE6               	movwf	postinc1,c
  5957  01065A  0E02               	movlw	2
  5958  01065C  6EE6               	movwf	postinc1,c
  5959  01065E  EC13  F014         	call	_get_vterm_ptr	;wreg free
  5960  010662  0060  F0AB  FFE6   	movff	btemp,postinc1
  5961  010668  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5962  01066E  0E08               	movlw	8
  5963  010670  6EE6               	movwf	postinc1,c
  5964  010672  EC59  F0FF         	call	_sprintf	;wreg free
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;main.c: 321:     update_lcd(0);
  5968  010676  0E00               	movlw	0
  5969  010678  6EE6               	movwf	postinc1,c
  5970  01067A  EC0B  F0F8         	call	_update_lcd	;wreg free
  5971                           
  5972                           ;main.c: 323:     if (i_esr++ > 512)
  5973                           ;stkvar	_i_esr @ sp[(-17)+8]
  5974  01067E  50E1               	movf	fsr1l,w,c
  5975  010680  0FF7               	addlw	-9
  5976  010682  6ED9               	movwf	fsr2l,c
  5977  010684  50E2               	movf	fsr1h,w,c
  5978  010686  6EDA               	movwf	fsr2h,c
  5979  010688  0EFF               	movlw	255
  5980  01068A  22DA               	addwfc	fsr2h,f,c
  5981  01068C  006F FF7C  F034    	movff	indf2,btemp+10
  5982  010692  0E01               	movlw	1
  5983  010694  26DE               	addwf	postinc2,f,c
  5984  010696  006F FF7C  F035    	movff	indf2,btemp+11
  5985  01069C  0E00               	movlw	0
  5986  01069E  22DD               	addwfc	postdec2,f,c
  5987  0106A0  0434               	decf	(btemp+10)^0,w,c
  5988  0106A2  0E02               	movlw	2
  5989  0106A4  5835               	subwfb	(btemp+11)^0,w,c
  5990  0106A6  B0D8               	btfsc	status,0,c
  5991  0106A8  D017               	goto	u17300
  5992  0106AA                     l17821:
  5993                           
  5994                           ;main.c: 317:    while ((esr_temp = esr_check(0)) < 0.0) {
  5995  0106AA  0E00               	movlw	0
  5996  0106AC  6EE6               	movwf	postinc1,c
  5997  0106AE  EC79  F0DC         	call	_esr_check	;wreg free
  5998                           
  5999                           ;stkvar	_esr_temp @ sp[(-17)+4]
  6000  0106B2  0EF3               	movlw	-13
  6001  0106B4  0060  F0AB  FFE3   	movff	btemp,plusw1
  6002  0106BA  0EF4               	movlw	-12
  6003  0106BC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
  6004  0106C2  0EF5               	movlw	-11
  6005  0106C4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
  6006  0106CA  0EF6               	movlw	-10
  6007  0106CC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
  6008  0106D2  0EF6               	movlw	-10
  6009  0106D4  BEE3               	btfsc	plusw1,7,c
  6010  0106D6  D77C               	goto	l17809
  6011  0106D8                     u17300:
  6012                           
  6013                           ;main.c: 326:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f            ", C.esr);
  6014  0106D8  EE22  F187         	lfsr	2,_C+136	;volatile
  6015  0106DC  006F FF7B FFE6     	movff	postinc2,postinc1
  6016  0106E2  006F FF7B FFE6     	movff	postinc2,postinc1
  6017  0106E8  006F FF7B FFE6     	movff	postinc2,postinc1
  6018  0106EE  006F FF7B FFE6     	movff	postinc2,postinc1
  6019  0106F4  0E3A               	movlw	low STR_21
  6020  0106F6  6EE6               	movwf	postinc1,c
  6021  0106F8  0EFB               	movlw	high STR_21
  6022  0106FA  6EE6               	movwf	postinc1,c
  6023  0106FC  0E00               	movlw	0
  6024  0106FE  6EE6               	movwf	postinc1,c
  6025  010700  0E00               	movlw	0
  6026  010702  6EE6               	movwf	postinc1,c
  6027  010704  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6028  010708  0060  F0AB  FFE6   	movff	btemp,postinc1
  6029  01070E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6030  010714  0E08               	movlw	8
  6031  010716  6EE6               	movwf	postinc1,c
  6032  010718  EC59  F0FF         	call	_sprintf	;wreg free
  6033                           
  6034                           ;main.c: 327:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f            ", C.bv_one_loa
      +                          d, C.load_i1);
  6035  01071C  EE22  F219         	lfsr	2,_C+282	;volatile
  6036  010720  006F FF7B FFE6     	movff	postinc2,postinc1
  6037  010726  006F FF7B FFE6     	movff	postinc2,postinc1
  6038  01072C  006F FF7B FFE6     	movff	postinc2,postinc1
  6039  010732  006F FF7B FFE6     	movff	postinc2,postinc1
  6040  010738  EE22  F225         	lfsr	2,_C+294	;volatile
  6041  01073C  006F FF7B FFE6     	movff	postinc2,postinc1
  6042  010742  006F FF7B FFE6     	movff	postinc2,postinc1
  6043  010748  006F FF7B FFE6     	movff	postinc2,postinc1
  6044  01074E  006F FF7B FFE6     	movff	postinc2,postinc1
  6045  010754  0E41               	movlw	low STR_22
  6046  010756  6EE6               	movwf	postinc1,c
  6047  010758  0EFA               	movlw	high STR_22
  6048  01075A  6EE6               	movwf	postinc1,c
  6049  01075C  0E00               	movlw	0
  6050  01075E  6EE6               	movwf	postinc1,c
  6051  010760  0E01               	movlw	1
  6052  010762  6EE6               	movwf	postinc1,c
  6053  010764  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6054  010768  0060  F0AB  FFE6   	movff	btemp,postinc1
  6055  01076E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6056  010774  0E0C               	movlw	12
  6057  010776  6EE6               	movwf	postinc1,c
  6058  010778  EC59  F0FF         	call	_sprintf	;wreg free
  6059                           
  6060                           ;main.c: 328:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f            ", C.bv_full_lo
      +                          ad, C.load_i2);
  6061  01077C  EE22  F21D         	lfsr	2,_C+286	;volatile
  6062  010780  006F FF7B FFE6     	movff	postinc2,postinc1
  6063  010786  006F FF7B FFE6     	movff	postinc2,postinc1
  6064  01078C  006F FF7B FFE6     	movff	postinc2,postinc1
  6065  010792  006F FF7B FFE6     	movff	postinc2,postinc1
  6066  010798  EE22  F229         	lfsr	2,_C+298	;volatile
  6067  01079C  006F FF7B FFE6     	movff	postinc2,postinc1
  6068  0107A2  006F FF7B FFE6     	movff	postinc2,postinc1
  6069  0107A8  006F FF7B FFE6     	movff	postinc2,postinc1
  6070  0107AE  006F FF7B FFE6     	movff	postinc2,postinc1
  6071  0107B4  0E5C               	movlw	low STR_23
  6072  0107B6  6EE6               	movwf	postinc1,c
  6073  0107B8  0EFA               	movlw	high STR_23
  6074  0107BA  6EE6               	movwf	postinc1,c
  6075  0107BC  0E00               	movlw	0
  6076  0107BE  6EE6               	movwf	postinc1,c
  6077  0107C0  0E02               	movlw	2
  6078  0107C2  6EE6               	movwf	postinc1,c
  6079  0107C4  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6080  0107C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6081  0107CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6082  0107D4  0E0C               	movlw	12
  6083  0107D6  6EE6               	movwf	postinc1,c
  6084  0107D8  EC59  F0FF         	call	_sprintf	;wreg free
  6085                           
  6086                           ;main.c: 329:    update_lcd(0);
  6087  0107DC  0E00               	movlw	0
  6088  0107DE  6EE6               	movwf	postinc1,c
  6089  0107E0  EC0B  F0F8         	call	_update_lcd	;wreg free
  6090                           
  6091                           ;main.c: 330:    WaitMs(4000);
  6092  0107E4  0EA0               	movlw	160
  6093  0107E6  6EE6               	movwf	postinc1,c
  6094  0107E8  0E0F               	movlw	15
  6095  0107EA  6EE6               	movwf	postinc1,c
  6096  0107EC  EC17  F013         	call	_WaitMs	;wreg free
  6097                           
  6098                           ;main.c: 331:    V.sensor_set = get_switch(SCALIB);
  6099  0107F0  0E04               	movlw	4
  6100  0107F2  6EE6               	movwf	postinc1,c
  6101  0107F4  EC2A  F014         	call	_get_switch	;wreg free
  6102  0107F8  502A               	movf	btemp^0,w,c
  6103  0107FA  B4D8               	btfsc	status,2,c
  6104  0107FC  D002               	goto	u17310
  6105  0107FE  0E01               	movlw	1
  6106  010800  D001               	goto	u17320
  6107  010802                     u17310:
  6108  010802  0E00               	movlw	0
  6109  010804                     u17320:
  6110  010804  0102               	movlb	2	; () banked
  6111  010806  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  6112                           
  6113                           ; BSR set to: 2
  6114                           ;main.c: 332:    WaitMs(1000);
  6115  010808  0EE8               	movlw	232
  6116  01080A  6EE6               	movwf	postinc1,c
  6117  01080C  0E03               	movlw	3
  6118  01080E  6EE6               	movwf	postinc1,c
  6119  010810  EC17  F013         	call	_WaitMs	;wreg free
  6120                           
  6121                           ;main.c: 333:    if (V.sensor_set && get_switch(SCALIB)) {
  6122  010814  0102               	movlb	2	; () banked
  6123  010816  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6124  010818  B4D8               	btfsc	status,2,c
  6125  01081A  D00F               	goto	l17839
  6126                           
  6127                           ; BSR set to: 2
  6128  01081C  0E04               	movlw	4
  6129  01081E  6EE6               	movwf	postinc1,c
  6130  010820  EC2A  F014         	call	_get_switch	;wreg free
  6131  010824  502A               	movf	btemp^0,w,c
  6132  010826  B4D8               	btfsc	status,2,c
  6133  010828  D008               	goto	l17839
  6134                           
  6135                           ;main.c: 334:     current_sensor_cal();
  6136  01082A  EC0C  F0A4         	call	_current_sensor_cal	;wreg free
  6137                           
  6138                           ;main.c: 335:     WaitMs(4000);
  6139  01082E  0EA0               	movlw	160
  6140  010830  6EE6               	movwf	postinc1,c
  6141  010832  0E0F               	movlw	15
  6142  010834  6EE6               	movwf	postinc1,c
  6143  010836  EC17  F013         	call	_WaitMs	;wreg free
  6144  01083A                     l17839:
  6145                           
  6146                           ;main.c: 337:    V.sensor_set = 0;
  6147  01083A  0102               	movlb	2	; () banked
  6148  01083C  6BB2               	clrf	(_V+171)& (0+255),b	;volatile
  6149                           
  6150                           ; BSR set to: 2
  6151                           ;main.c: 338:    V.system_stable = 1;
  6152  01083E  0E01               	movlw	1
  6153  010840  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6154                           
  6155                           ;main.c: 339:    break;
  6156  010842  D01C               	goto	l17847
  6157  010844                     l1479:
  6158                           
  6159                           ; BSR set to: 2
  6160                           ;main.c: 345:    P.SYSTEM_STABLE = 1;
  6161  010844  0100               	movlb	0	; () banked
  6162  010846  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  6163                           
  6164                           ;main.c: 346:    break;
  6165  010848  D019               	goto	l17847
  6166  01084A                     l1481:
  6167                           
  6168                           ; BSR set to: 2
  6169                           ;main.c: 349:    V.ui_state = UI_STATE_INIT;
  6170  01084A  6B07               	clrf	_V& (0+255),b	;volatile
  6171                           
  6172                           ;main.c: 350:    break;
  6173  01084C  D017               	goto	l17847
  6174  01084E                     l17845:
  6175  01084E  0102               	movlb	2	; () banked
  6176  010850  5107               	movf	_V& (0+255),w,b	;volatile
  6177  010852  6E34               	movwf	(btemp+10)^0,c
  6178  010854  6A35               	clrf	(btemp+11)^0,c
  6179                           
  6180                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6181                           ; Switch size 1, requested type "simple"
  6182                           ; Number of cases is 1, Range of values is 0 to 0
  6183                           ; switch strategies available:
  6184                           ; Name         Instructions Cycles
  6185                           ; simple_byte            4     3 (average)
  6186                           ;	Chosen strategy is simple_byte
  6187  010856  5035               	movf	(btemp+11)^0,w,c
  6188  010858  0A00               	xorlw	0	; case 0
  6189  01085A  A4D8               	btfss	status,2,c
  6190  01085C  D7F6               	goto	l1481
  6191                           
  6192                           ; BSR set to: 2
  6193                           ; Switch size 1, requested type "simple"
  6194                           ; Number of cases is 5, Range of values is 0 to 5
  6195                           ; switch strategies available:
  6196                           ; Name         Instructions Cycles
  6197                           ; simple_byte           16     9 (average)
  6198                           ;	Chosen strategy is simple_byte
  6199  01085E  5034               	movf	(btemp+10)^0,w,c
  6200  010860  0A00               	xorlw	0	; case 0
  6201  010862  B4D8               	btfsc	status,2,c
  6202  010864  D409               	goto	l17691
  6203  010866  0A01               	xorlw	1	; case 1
  6204  010868  B4D8               	btfsc	status,2,c
  6205  01086A  D008               	goto	l17847
  6206  01086C  0A02               	xorlw	2	; case 3
  6207  01086E  B4D8               	btfsc	status,2,c
  6208  010870  D005               	goto	l17847
  6209  010872  0A07               	xorlw	7	; case 4
  6210  010874  B4D8               	btfsc	status,2,c
  6211  010876  D7E6               	goto	l1479
  6212  010878  0A01               	xorlw	1	; case 5
  6213  01087A  D7E7               	goto	l1481
  6214  01087C                     l17847:
  6215                           
  6216                           ;main.c: 353:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  6217  01087C  0E01               	movlw	1
  6218  01087E  6EE6               	movwf	postinc1,c
  6219  010880  EC95  F014         	call	_TimerDone	;wreg free
  6220  010884  502A               	movf	btemp^0,w,c
  6221  010886  B4D8               	btfsc	status,2,c
  6222  010888  D013               	goto	l17859
  6223  01088A  EC9D  F017         	call	_check_adc_scan	;wreg free
  6224  01088E  502A               	movf	btemp^0,w,c
  6225  010890  B4D8               	btfsc	status,2,c
  6226  010892  D00E               	goto	l17859
  6227                           
  6228                           ;main.c: 357:    convert_adc_data();
  6229  010894  ECE9  F005         	call	_convert_adc_data	;wreg free
  6230                           
  6231                           ;main.c: 361:    clear_adc_scan();
  6232  010898  ECB7  F017         	call	_clear_adc_scan	;wreg free
  6233                           
  6234                           ; BSR set to: 1
  6235                           ;main.c: 362:    start_adc_scan();
  6236  01089C  EC43  F00E         	call	_start_adc_scan	;wreg free
  6237                           
  6238                           ;main.c: 363:    StartTimer(TMR_ADC, 200);
  6239  0108A0  0EC8               	movlw	200
  6240  0108A2  6EE6               	movwf	postinc1,c
  6241  0108A4  0E00               	movlw	0
  6242  0108A6  6EE6               	movwf	postinc1,c
  6243  0108A8  0E01               	movlw	1
  6244  0108AA  6EE6               	movwf	postinc1,c
  6245  0108AC  EC09  F012         	call	_StartTimer	;wreg free
  6246  0108B0                     l17859:
  6247                           
  6248                           ;main.c: 366:   if (TimerDone(TMR_DISPLAY)) {
  6249  0108B0  0E0A               	movlw	10
  6250  0108B2  6EE6               	movwf	postinc1,c
  6251  0108B4  EC95  F014         	call	_TimerDone	;wreg free
  6252  0108B8  502A               	movf	btemp^0,w,c
  6253  0108BA  B4D8               	btfsc	status,2,c
  6254  0108BC  EF20  F08A         	goto	l17969
  6255                           
  6256                           ;main.c: 367:    if (TimerDone(TMR_HELPDIS)) {
  6257  0108C0  0E09               	movlw	9
  6258  0108C2  6EE6               	movwf	postinc1,c
  6259  0108C4  EC95  F014         	call	_TimerDone	;wreg free
  6260  0108C8  502A               	movf	btemp^0,w,c
  6261  0108CA  B4D8               	btfsc	status,2,c
  6262  0108CC  D004               	goto	l17865
  6263                           
  6264                           ;main.c: 368:     set_display_info(DIS_STR);
  6265  0108CE  0E00               	movlw	0
  6266  0108D0  6EE6               	movwf	postinc1,c
  6267  0108D2  ECAB  F016         	call	_set_display_info	;wreg free
  6268  0108D6                     l17865:
  6269                           
  6270                           ;main.c: 370:    pclock = time(((void*)0));
  6271  0108D6  0E00               	movlw	0
  6272  0108D8  6EE6               	movwf	postinc1,c
  6273  0108DA  0E00               	movlw	0
  6274  0108DC  6EE6               	movwf	postinc1,c
  6275  0108DE  EC07  F00F         	call	_time	;wreg free
  6276  0108E2  52E5               	movf	postdec1,f,c
  6277  0108E4  006F FF9C  F041    	movff	indf1,btemp+23
  6278  0108EA  52E5               	movf	postdec1,f,c
  6279  0108EC  006F FF9C  F040    	movff	indf1,btemp+22
  6280  0108F2  52E5               	movf	postdec1,f,c
  6281  0108F4  006F FF9C  F03F    	movff	indf1,btemp+21
  6282  0108FA  52E5               	movf	postdec1,f,c
  6283  0108FC  006F FF9C  F03E    	movff	indf1,btemp+20
  6284  010902  52E5               	movf	postdec1,f,c
  6285  010904  006F FF9C  F03D    	movff	indf1,btemp+19
  6286  01090A  52E5               	movf	postdec1,f,c
  6287  01090C  006F FF9C  F03C    	movff	indf1,btemp+18
  6288  010912  52E5               	movf	postdec1,f,c
  6289  010914  006F FF9C  F03B    	movff	indf1,btemp+17
  6290  01091A  52E5               	movf	postdec1,f,c
  6291  01091C  006F FF9C  F03A    	movff	indf1,btemp+16
  6292  010922  0060  F0E8  F0DA   	movff	btemp+16,_pclock
  6293  010928  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
  6294  01092E  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
  6295  010934  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
  6296  01093A  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
  6297  010940  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
  6298  010946  0060  F100  F0E0   	movff	btemp+22,_pclock+6
  6299  01094C  0060  F104  F0E1   	movff	btemp+23,_pclock+7
  6300                           
  6301                           ; BSR set to: 57
  6302                           ;main.c: 371:    t_mbmc = localtime(&pclock);
  6303  010952  0EDA               	movlw	_pclock& (0+255)
  6304  010954  6EE6               	movwf	postinc1,c
  6305  010956  ECED  F016         	call	_localtime	;wreg free
  6306  01095A  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
  6307  010960  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
  6308                           
  6309                           ;main.c: 372:    sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
  6310  010966  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
  6311  01096C  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
  6312  010972  EC35  F0C6         	call	_asctime	;wreg free
  6313  010976  0060  F0AB  FFE6   	movff	btemp,postinc1
  6314  01097C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6315  010982  0E63               	movlw	low (STR_85+5)
  6316  010984  6EE6               	movwf	postinc1,c
  6317  010986  0EFF               	movlw	high (STR_85+5)
  6318  010988  6EE6               	movwf	postinc1,c
  6319  01098A  0E00               	movlw	0
  6320  01098C  6EE6               	movwf	postinc1,c
  6321  01098E  0E03               	movlw	3
  6322  010990  6EE6               	movwf	postinc1,c
  6323  010992  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6324  010996  0060  F0AB  FFE6   	movff	btemp,postinc1
  6325  01099C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6326  0109A2  0E06               	movlw	6
  6327  0109A4  6EE6               	movwf	postinc1,c
  6328  0109A6  EC59  F0FF         	call	_sprintf	;wreg free
  6329                           
  6330                           ; BSR set to: 0
  6331                           ;main.c: 373:    calc_model_data();
  6332  0109AA  EC5E  F0CD         	call	_calc_model_data	;wreg free
  6333                           
  6334                           ; BSR set to: 57
  6335                           ;main.c: 374:    if (C.dupdate) {
  6336  0109AE  EE22  F22E         	lfsr	2,_C+303	;volatile
  6337  0109B2  50DF               	movf	indf2,w,c
  6338  0109B4  B4D8               	btfsc	status,2,c
  6339  0109B6  D0A4               	goto	l17895
  6340                           
  6341                           ; BSR set to: 57
  6342                           ;main.c: 375:     C.dupdate = 0;
  6343  0109B8  0E00               	movlw	0
  6344  0109BA  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
  6345                           
  6346                           ;main.c: 376:     set_hist_flag();
  6347  0109C0  ECB1  F017         	call	_set_hist_flag	;wreg free
  6348                           
  6349                           ; BSR set to: 1
  6350                           ;main.c: 377:     load_hist_data();
  6351  0109C4  EC3E  F0E4         	call	_load_hist_data	;wreg free
  6352                           
  6353                           ; BSR set to: 57
  6354                           ;main.c: 378:     update_hist_data(0, &C.hist[0]);
  6355  0109C8  0EB8               	movlw	low (_C+185)
  6356  0109CA  6EE6               	movwf	postinc1,c
  6357  0109CC  0E09               	movlw	high (_C+185)
  6358  0109CE  6EE6               	movwf	postinc1,c
  6359  0109D0  0E00               	movlw	0
  6360  0109D2  6EE6               	movwf	postinc1,c
  6361  0109D4  ECE7  F00B         	call	_update_hist_data	;wreg free
  6362                           
  6363                           ;main.c: 379:     write_cal_data();
  6364  0109D8  EC68  F0F9         	call	_write_cal_data	;wreg free
  6365                           
  6366                           ;main.c: 380:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved  ");
  6367  0109DC  0E61               	movlw	low STR_25
  6368  0109DE  6EE6               	movwf	postinc1,c
  6369  0109E0  0EFE               	movlw	high STR_25
  6370  0109E2  6EE6               	movwf	postinc1,c
  6371  0109E4  0E00               	movlw	0
  6372  0109E6  6EE6               	movwf	postinc1,c
  6373  0109E8  0E00               	movlw	0
  6374  0109EA  6EE6               	movwf	postinc1,c
  6375  0109EC  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6376  0109F0  0060  F0AB  FFE6   	movff	btemp,postinc1
  6377  0109F6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6378  0109FC  0E04               	movlw	4
  6379  0109FE  6EE6               	movwf	postinc1,c
  6380  010A00  EC59  F0FF         	call	_sprintf	;wreg free
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;main.c: 381:     sprintf(get_vterm_ptr(1, 0), "To EEPROM            ");
  6384  010A04  0E01               	movlw	low STR_26
  6385  010A06  6EE6               	movwf	postinc1,c
  6386  010A08  0EFD               	movlw	high STR_26
  6387  010A0A  6EE6               	movwf	postinc1,c
  6388  010A0C  0E00               	movlw	0
  6389  010A0E  6EE6               	movwf	postinc1,c
  6390  010A10  0E01               	movlw	1
  6391  010A12  6EE6               	movwf	postinc1,c
  6392  010A14  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6393  010A18  0060  F0AB  FFE6   	movff	btemp,postinc1
  6394  010A1E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6395  010A24  0E04               	movlw	4
  6396  010A26  6EE6               	movwf	postinc1,c
  6397  010A28  EC59  F0FF         	call	_sprintf	;wreg free
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;main.c: 382:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu       ", time(((void*)0))
      +                          , C.hist[0].updates);
  6401  010A2C  EE22  F1D9         	lfsr	2,_C+218	;volatile
  6402  010A30  006F FF7B FFE6     	movff	postinc2,postinc1
  6403  010A36  006F FF7B FFE6     	movff	postinc2,postinc1
  6404  010A3C  006F FF7B FFE6     	movff	postinc2,postinc1
  6405  010A42  006F FF7B FFE6     	movff	postinc2,postinc1
  6406  010A48  0E00               	movlw	0
  6407  010A4A  6EE6               	movwf	postinc1,c
  6408  010A4C  0E00               	movlw	0
  6409  010A4E  6EE6               	movwf	postinc1,c
  6410  010A50  EC07  F00F         	call	_time	;wreg free
  6411  010A54  52E5               	movf	postdec1,f,c
  6412  010A56  006F FF9C  F041    	movff	indf1,btemp+23
  6413  010A5C  52E5               	movf	postdec1,f,c
  6414  010A5E  006F FF9C  F040    	movff	indf1,btemp+22
  6415  010A64  52E5               	movf	postdec1,f,c
  6416  010A66  006F FF9C  F03F    	movff	indf1,btemp+21
  6417  010A6C  52E5               	movf	postdec1,f,c
  6418  010A6E  006F FF9C  F03E    	movff	indf1,btemp+20
  6419  010A74  52E5               	movf	postdec1,f,c
  6420  010A76  006F FF9C  F03D    	movff	indf1,btemp+19
  6421  010A7C  52E5               	movf	postdec1,f,c
  6422  010A7E  006F FF9C  F03C    	movff	indf1,btemp+18
  6423  010A84  52E5               	movf	postdec1,f,c
  6424  010A86  006F FF9C  F03B    	movff	indf1,btemp+17
  6425  010A8C  52E5               	movf	postdec1,f,c
  6426  010A8E  006F FF9C  F03A    	movff	indf1,btemp+16
  6427  010A94  0060  F0EB  FFE6   	movff	btemp+16,postinc1
  6428  010A9A  0060  F0EF  FFE6   	movff	btemp+17,postinc1
  6429  010AA0  0060  F0F3  FFE6   	movff	btemp+18,postinc1
  6430  010AA6  0060  F0F7  FFE6   	movff	btemp+19,postinc1
  6431  010AAC  0060  F0FB  FFE6   	movff	btemp+20,postinc1
  6432  010AB2  0060  F0FF  FFE6   	movff	btemp+21,postinc1
  6433  010AB8  0060  F103  FFE6   	movff	btemp+22,postinc1
  6434  010ABE  0060  F107  FFE6   	movff	btemp+23,postinc1
  6435  010AC4  0EC7               	movlw	low STR_27
  6436  010AC6  6EE6               	movwf	postinc1,c
  6437  010AC8  0EFD               	movlw	high STR_27
  6438  010ACA  6EE6               	movwf	postinc1,c
  6439  010ACC  0E00               	movlw	0
  6440  010ACE  6EE6               	movwf	postinc1,c
  6441  010AD0  0E02               	movlw	2
  6442  010AD2  6EE6               	movwf	postinc1,c
  6443  010AD4  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6444  010AD8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6445  010ADE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6446  010AE4  0E10               	movlw	16
  6447  010AE6  6EE6               	movwf	postinc1,c
  6448  010AE8  EC59  F0FF         	call	_sprintf	;wreg free
  6449                           
  6450                           ; BSR set to: 0
  6451                           ;main.c: 383:     update_lcd(0);
  6452  010AEC  0E00               	movlw	0
  6453  010AEE  6EE6               	movwf	postinc1,c
  6454  010AF0  EC0B  F0F8         	call	_update_lcd	;wreg free
  6455                           
  6456                           ;main.c: 384:     WaitMs(2000);
  6457  010AF4  0ED0               	movlw	208
  6458  010AF6  6EE6               	movwf	postinc1,c
  6459  010AF8  0E07               	movlw	7
  6460  010AFA  6EE6               	movwf	postinc1,c
  6461  010AFC  EC17  F013         	call	_WaitMs	;wreg free
  6462  010B00                     l17895:
  6463                           
  6464                           ;main.c: 392:     hid_display(&H);
  6465  010B00  0E9B               	movlw	low _H
  6466  010B02  6EE6               	movwf	postinc1,c
  6467  010B04  0E01               	movlw	high _H
  6468  010B06  6EE6               	movwf	postinc1,c
  6469  010B08  ECF8  F0EA         	call	_hid_display	;wreg free
  6470                           
  6471                           ;main.c: 393:     switch (H.hid_display) {
  6472  010B0C  EFB1  F089         	goto	l17939
  6473  010B10                     l1489:
  6474                           
  6475                           ; BSR set to: 1
  6476                           ;main.c: 395:      V.calib = 0;
  6477  010B10  0102               	movlb	2	; () banked
  6478  010B12  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6479                           
  6480                           ; BSR set to: 2
  6481                           ;main.c: 396:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f       ", (C.day) ? 'D' 
      +                          : ' ', C.p_pv);
  6482  010B14  EE22  F22D         	lfsr	2,_C+302	;volatile
  6483  010B18  50DF               	movf	indf2,w,c
  6484  010B1A  A4D8               	btfss	status,2,c
  6485  010B1C  D002               	goto	l17901
  6486                           
  6487                           ; BSR set to: 2
  6488  010B1E  0E20               	movlw	32
  6489  010B20  D001               	goto	L1
  6490  010B22                     l17901:
  6491                           
  6492                           ; BSR set to: 2
  6493  010B22  0E44               	movlw	68
  6494  010B24                     L1:
  6495  010B24  6E34               	movwf	(btemp+10)^0,c
  6496  010B26  0E00               	movlw	0
  6497  010B28  6E35               	movwf	(btemp+11)^0,c
  6498                           
  6499                           ;stkvar	_main$4045 @ sp[(-17)+2]
  6500  010B2A  0EF1               	movlw	-15
  6501  010B2C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6502  010B32  0EF2               	movlw	-14
  6503  010B34  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6504                           
  6505                           ; BSR set to: 2
  6506  010B3A  EE22  F17B         	lfsr	2,_C+124	;volatile
  6507  010B3E  006F FF7B FFE6     	movff	postinc2,postinc1
  6508  010B44  006F FF7B FFE6     	movff	postinc2,postinc1
  6509  010B4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6510  010B50  006F FF7B FFE6     	movff	postinc2,postinc1
  6511                           
  6512                           ;stkvar	_main$4045 @ sp[(-21)+2]
  6513  010B56  0EED               	movlw	-19
  6514  010B58  006F FF8F FFE6     	movff	plusw1,postinc1
  6515  010B5E  006F FF8F FFE6     	movff	plusw1,postinc1
  6516  010B64  0E20               	movlw	low STR_31
  6517  010B66  6EE6               	movwf	postinc1,c
  6518  010B68  0EFC               	movlw	high STR_31
  6519  010B6A  6EE6               	movwf	postinc1,c
  6520  010B6C  0E00               	movlw	0
  6521  010B6E  6EE6               	movwf	postinc1,c
  6522  010B70  0E00               	movlw	0
  6523  010B72  6EE6               	movwf	postinc1,c
  6524  010B74  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6525  010B78  0060  F0AB  FFE6   	movff	btemp,postinc1
  6526  010B7E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6527  010B84  0E0A               	movlw	10
  6528  010B86  6EE6               	movwf	postinc1,c
  6529  010B88  EC59  F0FF         	call	_sprintf	;wreg free
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;main.c: 397:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f        ", C.p_load);
  6533  010B8C  EE22  F173         	lfsr	2,_C+116	;volatile
  6534  010B90  006F FF7B FFE6     	movff	postinc2,postinc1
  6535  010B96  006F FF7B FFE6     	movff	postinc2,postinc1
  6536  010B9C  006F FF7B FFE6     	movff	postinc2,postinc1
  6537  010BA2  006F FF7B FFE6     	movff	postinc2,postinc1
  6538  010BA8  0E09               	movlw	low STR_32
  6539  010BAA  6EE6               	movwf	postinc1,c
  6540  010BAC  0EFC               	movlw	high STR_32
  6541  010BAE  6EE6               	movwf	postinc1,c
  6542  010BB0  0E00               	movlw	0
  6543  010BB2  6EE6               	movwf	postinc1,c
  6544  010BB4  0E01               	movlw	1
  6545  010BB6  6EE6               	movwf	postinc1,c
  6546  010BB8  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6547  010BBC  0060  F0AB  FFE6   	movff	btemp,postinc1
  6548  010BC2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6549  010BC8  0E08               	movlw	8
  6550  010BCA  6EE6               	movwf	postinc1,c
  6551  010BCC  EC59  F0FF         	call	_sprintf	;wreg free
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;main.c: 398:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f        ", C.p_inverter);
  6555  010BD0  EE22  F177         	lfsr	2,_C+120	;volatile
  6556  010BD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6557  010BDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6558  010BE0  006F FF7B FFE6     	movff	postinc2,postinc1
  6559  010BE6  006F FF7B FFE6     	movff	postinc2,postinc1
  6560  010BEC  0EF2               	movlw	low STR_33
  6561  010BEE  6EE6               	movwf	postinc1,c
  6562  010BF0  0EFB               	movlw	high STR_33
  6563  010BF2  6EE6               	movwf	postinc1,c
  6564  010BF4  0E00               	movlw	0
  6565  010BF6  6EE6               	movwf	postinc1,c
  6566  010BF8  0E02               	movlw	2
  6567  010BFA  6EE6               	movwf	postinc1,c
  6568  010BFC  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6569  010C00  0060  F0AB  FFE6   	movff	btemp,postinc1
  6570  010C06  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6571  010C0C  0E08               	movlw	8
  6572  010C0E  6EE6               	movwf	postinc1,c
  6573  010C10  EC59  F0FF         	call	_sprintf	;wreg free
  6574                           
  6575                           ; BSR set to: 0
  6576                           ;main.c: 400:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f        ", (C.day) ? 'D' 
      +                          : ' ', C.pvkw);
  6577  010C14  EE22  F22D         	lfsr	2,_C+302	;volatile
  6578  010C18  50DF               	movf	indf2,w,c
  6579  010C1A  A4D8               	btfss	status,2,c
  6580  010C1C  D002               	goto	l17913
  6581                           
  6582                           ; BSR set to: 0
  6583  010C1E  0E20               	movlw	32
  6584  010C20  D001               	goto	L2
  6585  010C22                     l17913:
  6586                           
  6587                           ; BSR set to: 0
  6588  010C22  0E44               	movlw	68
  6589  010C24                     L2:
  6590  010C24  6E34               	movwf	(btemp+10)^0,c
  6591  010C26  0E00               	movlw	0
  6592  010C28  6E35               	movwf	(btemp+11)^0,c
  6593                           
  6594                           ;stkvar	_main$4049 @ sp[(-17)+0]
  6595  010C2A  0EEF               	movlw	-17
  6596  010C2C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6597  010C32  0EF0               	movlw	-16
  6598  010C34  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6599                           
  6600                           ; BSR set to: 0
  6601  010C3A  EE22  F1A7         	lfsr	2,_C+168	;volatile
  6602  010C3E  006F FF7B FFE6     	movff	postinc2,postinc1
  6603  010C44  006F FF7B FFE6     	movff	postinc2,postinc1
  6604  010C4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6605  010C50  006F FF7B FFE6     	movff	postinc2,postinc1
  6606                           
  6607                           ;stkvar	_main$4049 @ sp[(-21)+0]
  6608  010C56  0EEB               	movlw	-21
  6609  010C58  006F FF8F FFE6     	movff	plusw1,postinc1
  6610  010C5E  006F FF8F FFE6     	movff	plusw1,postinc1
  6611  010C64  0EDB               	movlw	low STR_34
  6612  010C66  6EE6               	movwf	postinc1,c
  6613  010C68  0EFB               	movlw	high STR_34
  6614  010C6A  6EE6               	movwf	postinc1,c
  6615  010C6C  0E01               	movlw	1
  6616  010C6E  6EE6               	movwf	postinc1,c
  6617  010C70  0E00               	movlw	0
  6618  010C72  6EE6               	movwf	postinc1,c
  6619  010C74  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6620  010C78  0060  F0AB  FFE6   	movff	btemp,postinc1
  6621  010C7E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6622  010C84  0E0A               	movlw	10
  6623  010C86  6EE6               	movwf	postinc1,c
  6624  010C88  EC59  F0FF         	call	_sprintf	;wreg free
  6625                           
  6626                           ; BSR set to: 0
  6627                           ;main.c: 401:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f         ", C.loadkw);
  6628  010C8C  EE22  F1AF         	lfsr	2,_C+176	;volatile
  6629  010C90  006F FF7B FFE6     	movff	postinc2,postinc1
  6630  010C96  006F FF7B FFE6     	movff	postinc2,postinc1
  6631  010C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  6632  010CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  6633  010CA8  0EC4               	movlw	low STR_35
  6634  010CAA  6EE6               	movwf	postinc1,c
  6635  010CAC  0EFB               	movlw	high STR_35
  6636  010CAE  6EE6               	movwf	postinc1,c
  6637  010CB0  0E01               	movlw	1
  6638  010CB2  6EE6               	movwf	postinc1,c
  6639  010CB4  0E01               	movlw	1
  6640  010CB6  6EE6               	movwf	postinc1,c
  6641  010CB8  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6642  010CBC  0060  F0AB  FFE6   	movff	btemp,postinc1
  6643  010CC2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6644  010CC8  0E08               	movlw	8
  6645  010CCA  6EE6               	movwf	postinc1,c
  6646  010CCC  EC59  F0FF         	call	_sprintf	;wreg free
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;main.c: 402:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f         ", C.invkw);
  6650  010CD0  EE22  F1AB         	lfsr	2,_C+172	;volatile
  6651  010CD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6652  010CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6653  010CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  6654  010CE6  006F FF7B FFE6     	movff	postinc2,postinc1
  6655  010CEC  0EAD               	movlw	low STR_36
  6656  010CEE  6EE6               	movwf	postinc1,c
  6657  010CF0  0EFB               	movlw	high STR_36
  6658  010CF2  6EE6               	movwf	postinc1,c
  6659  010CF4  0E01               	movlw	1
  6660  010CF6  6EE6               	movwf	postinc1,c
  6661  010CF8  0E02               	movlw	2
  6662  010CFA  6EE6               	movwf	postinc1,c
  6663  010CFC  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6664  010D00  0060  F0AB  FFE6   	movff	btemp,postinc1
  6665  010D06  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6666  010D0C  0E08               	movlw	8
  6667  010D0E  6EE6               	movwf	postinc1,c
  6668  010D10  EC59  F0FF         	call	_sprintf	;wreg free
  6669                           
  6670                           ;main.c: 403:      break;
  6671  010D14  D33C               	goto	l17941
  6672  010D16                     l1499:
  6673                           
  6674                           ; BSR set to: 1
  6675                           ;main.c: 405:      V.calib = 0;
  6676  010D16  0102               	movlb	2	; () banked
  6677  010D18  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6678                           
  6679                           ; BSR set to: 2
  6680                           ;main.c: 406:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f     ", C.calc[V_PV], 
      +                          C.calc[C_PV]);
  6681  010D1A  EE22  F103         	lfsr	2,_C+4	;volatile
  6682  010D1E  006F FF7B FFE6     	movff	postinc2,postinc1
  6683  010D24  006F FF7B FFE6     	movff	postinc2,postinc1
  6684  010D2A  006F FF7B FFE6     	movff	postinc2,postinc1
  6685  010D30  006F FF7B FFE6     	movff	postinc2,postinc1
  6686  010D36  EE22  F113         	lfsr	2,_C+20	;volatile
  6687  010D3A  006F FF7B FFE6     	movff	postinc2,postinc1
  6688  010D40  006F FF7B FFE6     	movff	postinc2,postinc1
  6689  010D46  006F FF7B FFE6     	movff	postinc2,postinc1
  6690  010D4C  006F FF7B FFE6     	movff	postinc2,postinc1
  6691  010D52  0E7C               	movlw	low STR_37
  6692  010D54  6EE6               	movwf	postinc1,c
  6693  010D56  0EFC               	movlw	high STR_37
  6694  010D58  6EE6               	movwf	postinc1,c
  6695  010D5A  0E00               	movlw	0
  6696  010D5C  6EE6               	movwf	postinc1,c
  6697  010D5E  0E00               	movlw	0
  6698  010D60  6EE6               	movwf	postinc1,c
  6699  010D62  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6700  010D66  0060  F0AB  FFE6   	movff	btemp,postinc1
  6701  010D6C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6702  010D72  0E0C               	movlw	12
  6703  010D74  6EE6               	movwf	postinc1,c
  6704  010D76  EC59  F0FF         	call	_sprintf	;wreg free
  6705                           
  6706                           ;main.c: 407:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f     ", C.calc[V_BAT],
      +                           C.calc[C_BATT]);
  6707  010D7A  EE22  F0FF         	lfsr	2,_C
  6708  010D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  6709  010D84  006F FF7B FFE6     	movff	postinc2,postinc1
  6710  010D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  6711  010D90  006F FF7B FFE6     	movff	postinc2,postinc1
  6712  010D96  EE22  F10F         	lfsr	2,_C+16	;volatile
  6713  010D9A  006F FF7B FFE6     	movff	postinc2,postinc1
  6714  010DA0  006F FF7B FFE6     	movff	postinc2,postinc1
  6715  010DA6  006F FF7B FFE6     	movff	postinc2,postinc1
  6716  010DAC  006F FF7B FFE6     	movff	postinc2,postinc1
  6717  010DB2  0E4E               	movlw	low STR_38
  6718  010DB4  6EE6               	movwf	postinc1,c
  6719  010DB6  0EFC               	movlw	high STR_38
  6720  010DB8  6EE6               	movwf	postinc1,c
  6721  010DBA  0E00               	movlw	0
  6722  010DBC  6EE6               	movwf	postinc1,c
  6723  010DBE  0E01               	movlw	1
  6724  010DC0  6EE6               	movwf	postinc1,c
  6725  010DC2  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6726  010DC6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6727  010DCC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6728  010DD2  0E0C               	movlw	12
  6729  010DD4  6EE6               	movwf	postinc1,c
  6730  010DD6  EC59  F0FF         	call	_sprintf	;wreg free
  6731                           
  6732                           ;main.c: 408:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f     ", C.calc[V_CC], 
      +                          C.c_load);
  6733  010DDA  EE22  F13F         	lfsr	2,_C+64	;volatile
  6734  010DDE  006F FF7B FFE6     	movff	postinc2,postinc1
  6735  010DE4  006F FF7B FFE6     	movff	postinc2,postinc1
  6736  010DEA  006F FF7B FFE6     	movff	postinc2,postinc1
  6737  010DF0  006F FF7B FFE6     	movff	postinc2,postinc1
  6738  010DF6  EE22  F107         	lfsr	2,_C+8	;volatile
  6739  010DFA  006F FF7B FFE6     	movff	postinc2,postinc1
  6740  010E00  006F FF7B FFE6     	movff	postinc2,postinc1
  6741  010E06  006F FF7B FFE6     	movff	postinc2,postinc1
  6742  010E0C  006F FF7B FFE6     	movff	postinc2,postinc1
  6743  010E12  0E65               	movlw	low STR_39
  6744  010E14  6EE6               	movwf	postinc1,c
  6745  010E16  0EFC               	movlw	high STR_39
  6746  010E18  6EE6               	movwf	postinc1,c
  6747  010E1A  0E00               	movlw	0
  6748  010E1C  6EE6               	movwf	postinc1,c
  6749  010E1E  0E02               	movlw	2
  6750  010E20  6EE6               	movwf	postinc1,c
  6751  010E22  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6752  010E26  0060  F0AB  FFE6   	movff	btemp,postinc1
  6753  010E2C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6754  010E32  0E0C               	movlw	12
  6755  010E34  6EE6               	movwf	postinc1,c
  6756  010E36  EC59  F0FF         	call	_sprintf	;wreg free
  6757                           
  6758                           ;main.c: 410:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f         ", C.bkwi);
  6759  010E3A  EE22  F19F         	lfsr	2,_C+160	;volatile
  6760  010E3E  006F FF7B FFE6     	movff	postinc2,postinc1
  6761  010E44  006F FF7B FFE6     	movff	postinc2,postinc1
  6762  010E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6763  010E50  006F FF7B FFE6     	movff	postinc2,postinc1
  6764  010E56  0E68               	movlw	low STR_40
  6765  010E58  6EE6               	movwf	postinc1,c
  6766  010E5A  0EFB               	movlw	high STR_40
  6767  010E5C  6EE6               	movwf	postinc1,c
  6768  010E5E  0E01               	movlw	1
  6769  010E60  6EE6               	movwf	postinc1,c
  6770  010E62  0E00               	movlw	0
  6771  010E64  6EE6               	movwf	postinc1,c
  6772  010E66  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6773  010E6A  0060  F0AB  FFE6   	movff	btemp,postinc1
  6774  010E70  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6775  010E76  0E08               	movlw	8
  6776  010E78  6EE6               	movwf	postinc1,c
  6777  010E7A  EC59  F0FF         	call	_sprintf	;wreg free
  6778                           
  6779                           ;main.c: 411:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f         ", C.bkwo);
  6780  010E7E  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6781  010E82  006F FF7B FFE6     	movff	postinc2,postinc1
  6782  010E88  006F FF7B FFE6     	movff	postinc2,postinc1
  6783  010E8E  006F FF7B FFE6     	movff	postinc2,postinc1
  6784  010E94  006F FF7B FFE6     	movff	postinc2,postinc1
  6785  010E9A  0E7F               	movlw	low STR_41
  6786  010E9C  6EE6               	movwf	postinc1,c
  6787  010E9E  0EFB               	movlw	high STR_41
  6788  010EA0  6EE6               	movwf	postinc1,c
  6789  010EA2  0E01               	movlw	1
  6790  010EA4  6EE6               	movwf	postinc1,c
  6791  010EA6  0E01               	movlw	1
  6792  010EA8  6EE6               	movwf	postinc1,c
  6793  010EAA  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6794  010EAE  0060  F0AB  FFE6   	movff	btemp,postinc1
  6795  010EB4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6796  010EBA  0E08               	movlw	8
  6797  010EBC  6EE6               	movwf	postinc1,c
  6798  010EBE  EC59  F0FF         	call	_sprintf	;wreg free
  6799                           
  6800                           ;main.c: 412:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f         ", C.bkwi + C.bkw
      +                          o);
  6801  010EC2  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6802  010EC6  006F FF7B FFE6     	movff	postinc2,postinc1
  6803  010ECC  006F FF7B FFE6     	movff	postinc2,postinc1
  6804  010ED2  006F FF7B FFE6     	movff	postinc2,postinc1
  6805  010ED8  006F FF7B FFE6     	movff	postinc2,postinc1
  6806  010EDE  EE22  F19F         	lfsr	2,_C+160	;volatile
  6807  010EE2  006F FF7B FFE6     	movff	postinc2,postinc1
  6808  010EE8  006F FF7B FFE6     	movff	postinc2,postinc1
  6809  010EEE  006F FF7B FFE6     	movff	postinc2,postinc1
  6810  010EF4  006F FF7B FFE6     	movff	postinc2,postinc1
  6811  010EFA  EC3C  F0BC         	call	___fladd	;wreg free
  6812  010EFE  0060  F0AB  FFE6   	movff	btemp,postinc1
  6813  010F04  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6814  010F0A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  6815  010F10  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  6816  010F16  0E96               	movlw	low STR_42
  6817  010F18  6EE6               	movwf	postinc1,c
  6818  010F1A  0EFB               	movlw	high STR_42
  6819  010F1C  6EE6               	movwf	postinc1,c
  6820  010F1E  0E01               	movlw	1
  6821  010F20  6EE6               	movwf	postinc1,c
  6822  010F22  0E02               	movlw	2
  6823  010F24  6EE6               	movwf	postinc1,c
  6824  010F26  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6825  010F2A  0060  F0AB  FFE6   	movff	btemp,postinc1
  6826  010F30  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6827  010F36  0E08               	movlw	8
  6828  010F38  6EE6               	movwf	postinc1,c
  6829  010F3A  EC59  F0FF         	call	_sprintf	;wreg free
  6830                           
  6831                           ;main.c: 413:      break;
  6832  010F3E  D227               	goto	l17941
  6833  010F40                     l1500:
  6834                           
  6835                           ; BSR set to: 1
  6836                           ;main.c: 415:      V.calib = 0;
  6837  010F40  0102               	movlb	2	; () banked
  6838  010F42  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6839                           
  6840                           ; BSR set to: 2
  6841                           ;main.c: 416:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f         ", C.p_bat);
  6842  010F44  EE22  F17F         	lfsr	2,_C+128	;volatile
  6843  010F48  006F FF7B FFE6     	movff	postinc2,postinc1
  6844  010F4E  006F FF7B FFE6     	movff	postinc2,postinc1
  6845  010F54  006F FF7B FFE6     	movff	postinc2,postinc1
  6846  010F5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6847  010F60  0EC3               	movlw	low STR_43
  6848  010F62  6EE6               	movwf	postinc1,c
  6849  010F64  0EFA               	movlw	high STR_43
  6850  010F66  6EE6               	movwf	postinc1,c
  6851  010F68  0E00               	movlw	0
  6852  010F6A  6EE6               	movwf	postinc1,c
  6853  010F6C  0E00               	movlw	0
  6854  010F6E  6EE6               	movwf	postinc1,c
  6855  010F70  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6856  010F74  0060  F0AB  FFE6   	movff	btemp,postinc1
  6857  010F7A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6858  010F80  0E08               	movlw	8
  6859  010F82  6EE6               	movwf	postinc1,c
  6860  010F84  EC59  F0FF         	call	_sprintf	;wreg free
  6861                           
  6862                           ;main.c: 417:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f       ", C.dynamic_ah,
      +                           C.pv_ah);
  6863  010F88  EE22  F193         	lfsr	2,_C+148	;volatile
  6864  010F8C  006F FF7B FFE6     	movff	postinc2,postinc1
  6865  010F92  006F FF7B FFE6     	movff	postinc2,postinc1
  6866  010F98  006F FF7B FFE6     	movff	postinc2,postinc1
  6867  010F9E  006F FF7B FFE6     	movff	postinc2,postinc1
  6868  010FA4  EE22  F18F         	lfsr	2,_C+144	;volatile
  6869  010FA8  006F FF7B FFE6     	movff	postinc2,postinc1
  6870  010FAE  006F FF7B FFE6     	movff	postinc2,postinc1
  6871  010FB4  006F FF7B FFE6     	movff	postinc2,postinc1
  6872  010FBA  006F FF7B FFE6     	movff	postinc2,postinc1
  6873  010FC0  0E0B               	movlw	low STR_44
  6874  010FC2  6EE6               	movwf	postinc1,c
  6875  010FC4  0EFB               	movlw	high STR_44
  6876  010FC6  6EE6               	movwf	postinc1,c
  6877  010FC8  0E00               	movlw	0
  6878  010FCA  6EE6               	movwf	postinc1,c
  6879  010FCC  0E01               	movlw	1
  6880  010FCE  6EE6               	movwf	postinc1,c
  6881  010FD0  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6882  010FD4  0060  F0AB  FFE6   	movff	btemp,postinc1
  6883  010FDA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6884  010FE0  0E0C               	movlw	12
  6885  010FE2  6EE6               	movwf	postinc1,c
  6886  010FE4  EC59  F0FF         	call	_sprintf	;wreg free
  6887                           
  6888                           ;main.c: 418:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f        ", spinner
      +                          s(5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6889  010FE8  EE22  F10F         	lfsr	2,_C+16	;volatile
  6890  010FEC  006F FF7B FFE6     	movff	postinc2,postinc1
  6891  010FF2  006F FF7B FFE6     	movff	postinc2,postinc1
  6892  010FF8  006F FF7B FFE6     	movff	postinc2,postinc1
  6893  010FFE  006F FF7B FFE6     	movff	postinc2,postinc1
  6894  011004  EE22  F1B3         	lfsr	2,_C+180	;volatile
  6895  011008  006F FF78  F034    	movff	postinc2,btemp+10
  6896  01100E  006F FF74  F035    	movff	postdec2,btemp+11
  6897  011014  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6898  01101A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6899  011020  EE22  F1B5         	lfsr	2,_C+182	;volatile
  6900  011024  006F FF78  F034    	movff	postinc2,btemp+10
  6901  01102A  006F FF74  F035    	movff	postdec2,btemp+11
  6902  011030  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6903  011036  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6904  01103C  0E00               	movlw	0
  6905  01103E  6EE6               	movwf	postinc1,c
  6906  011040  0E05               	movlw	5
  6907  011042  6EE6               	movwf	postinc1,c
  6908  011044  EC52  F001         	call	_spinners	;wreg free
  6909  011048  502A               	movf	btemp^0,w,c
  6910  01104A  6EE6               	movwf	postinc1,c
  6911  01104C  0E00               	movlw	0
  6912  01104E  6EE6               	movwf	postinc1,c
  6913  011050  0E07               	movlw	low STR_45
  6914  011052  6EE6               	movwf	postinc1,c
  6915  011054  0EFA               	movlw	high STR_45
  6916  011056  6EE6               	movwf	postinc1,c
  6917  011058  0E00               	movlw	0
  6918  01105A  6EE6               	movwf	postinc1,c
  6919  01105C  0E02               	movlw	2
  6920  01105E  6EE6               	movwf	postinc1,c
  6921  011060  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6922  011064  0060  F0AB  FFE6   	movff	btemp,postinc1
  6923  01106A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6924  011070  0E0E               	movlw	14
  6925  011072  6EE6               	movwf	postinc1,c
  6926  011074  EC59  F0FF         	call	_sprintf	;wreg free
  6927                           
  6928                           ;main.c: 420:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f             ", C.esr);
  6929  011078  EE22  F187         	lfsr	2,_C+136	;volatile
  6930  01107C  006F FF7B FFE6     	movff	postinc2,postinc1
  6931  011082  006F FF7B FFE6     	movff	postinc2,postinc1
  6932  011088  006F FF7B FFE6     	movff	postinc2,postinc1
  6933  01108E  006F FF7B FFE6     	movff	postinc2,postinc1
  6934  011094  0EAB               	movlw	low STR_46
  6935  011096  6EE6               	movwf	postinc1,c
  6936  011098  0EFA               	movlw	high STR_46
  6937  01109A  6EE6               	movwf	postinc1,c
  6938  01109C  0E01               	movlw	1
  6939  01109E  6EE6               	movwf	postinc1,c
  6940  0110A0  0E00               	movlw	0
  6941  0110A2  6EE6               	movwf	postinc1,c
  6942  0110A4  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6943  0110A8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6944  0110AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6945  0110B4  0E08               	movlw	8
  6946  0110B6  6EE6               	movwf	postinc1,c
  6947  0110B8  EC59  F0FF         	call	_sprintf	;wreg free
  6948                           
  6949                           ;main.c: 421:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f         ", C.bv_one_load
      +                          , C.load_i1);
  6950  0110BC  EE22  F219         	lfsr	2,_C+282	;volatile
  6951  0110C0  006F FF7B FFE6     	movff	postinc2,postinc1
  6952  0110C6  006F FF7B FFE6     	movff	postinc2,postinc1
  6953  0110CC  006F FF7B FFE6     	movff	postinc2,postinc1
  6954  0110D2  006F FF7B FFE6     	movff	postinc2,postinc1
  6955  0110D8  EE22  F225         	lfsr	2,_C+294	;volatile
  6956  0110DC  006F FF7B FFE6     	movff	postinc2,postinc1
  6957  0110E2  006F FF7B FFE6     	movff	postinc2,postinc1
  6958  0110E8  006F FF7B FFE6     	movff	postinc2,postinc1
  6959  0110EE  006F FF7B FFE6     	movff	postinc2,postinc1
  6960  0110F4  0EDB               	movlw	low STR_47
  6961  0110F6  6EE6               	movwf	postinc1,c
  6962  0110F8  0EFA               	movlw	high STR_47
  6963  0110FA  6EE6               	movwf	postinc1,c
  6964  0110FC  0E01               	movlw	1
  6965  0110FE  6EE6               	movwf	postinc1,c
  6966  011100  0E01               	movlw	1
  6967  011102  6EE6               	movwf	postinc1,c
  6968  011104  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6969  011108  0060  F0AB  FFE6   	movff	btemp,postinc1
  6970  01110E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6971  011114  0E0C               	movlw	12
  6972  011116  6EE6               	movwf	postinc1,c
  6973  011118  EC59  F0FF         	call	_sprintf	;wreg free
  6974                           
  6975                           ;main.c: 422:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f         ", C.bv_full_loa
      +                          d, C.load_i2);
  6976  01111C  EE22  F21D         	lfsr	2,_C+286	;volatile
  6977  011120  006F FF7B FFE6     	movff	postinc2,postinc1
  6978  011126  006F FF7B FFE6     	movff	postinc2,postinc1
  6979  01112C  006F FF7B FFE6     	movff	postinc2,postinc1
  6980  011132  006F FF7B FFE6     	movff	postinc2,postinc1
  6981  011138  EE22  F229         	lfsr	2,_C+298	;volatile
  6982  01113C  006F FF7B FFE6     	movff	postinc2,postinc1
  6983  011142  006F FF7B FFE6     	movff	postinc2,postinc1
  6984  011148  006F FF7B FFE6     	movff	postinc2,postinc1
  6985  01114E  006F FF7B FFE6     	movff	postinc2,postinc1
  6986  011154  0EF3               	movlw	low STR_48
  6987  011156  6EE6               	movwf	postinc1,c
  6988  011158  0EFA               	movlw	high STR_48
  6989  01115A  6EE6               	movwf	postinc1,c
  6990  01115C  0E01               	movlw	1
  6991  01115E  6EE6               	movwf	postinc1,c
  6992  011160  0E02               	movlw	2
  6993  011162  6EE6               	movwf	postinc1,c
  6994  011164  EC13  F014         	call	_get_vterm_ptr	;wreg free
  6995  011168  0060  F0AB  FFE6   	movff	btemp,postinc1
  6996  01116E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6997  011174  0E0C               	movlw	12
  6998  011176  6EE6               	movwf	postinc1,c
  6999  011178  EC59  F0FF         	call	_sprintf	;wreg free
  7000                           
  7001                           ;main.c: 423:      break;
  7002  01117C  D108               	goto	l17941
  7003  01117E                     l17925:
  7004                           
  7005                           ; BSR set to: 1
  7006                           ;main.c: 425:      if (!V.calib) {
  7007  01117E  0102               	movlb	2	; () banked
  7008  011180  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
  7009  011182  A4D8               	btfss	status,2,c
  7010  011184  D02D               	goto	l17929
  7011                           
  7012                           ; BSR set to: 2
  7013                           ;main.c: 426:       lp_filter(0.0, i, -1);
  7014  011186  0EFF               	movlw	255
  7015  011188  6EE6               	movwf	postinc1,c
  7016                           
  7017                           ;stkvar	_i @ sp[(-18)+14]
  7018  01118A  0EFC               	movlw	-4
  7019  01118C  50E3               	movf	plusw1,w,c
  7020  01118E  6EE6               	movwf	postinc1,c
  7021  011190  0E00               	movlw	0
  7022  011192  6EE6               	movwf	postinc1,c
  7023  011194  0E00               	movlw	0
  7024  011196  6EE6               	movwf	postinc1,c
  7025  011198  0E00               	movlw	0
  7026  01119A  6EE6               	movwf	postinc1,c
  7027  01119C  0E00               	movlw	0
  7028  01119E  6EE6               	movwf	postinc1,c
  7029  0111A0  ECF6  F0EE         	call	_lp_filter	;wreg free
  7030                           
  7031                           ;main.c: 427:       lp_filter(0.0, j, -1);
  7032  0111A4  0EFF               	movlw	255
  7033  0111A6  6EE6               	movwf	postinc1,c
  7034                           
  7035                           ;stkvar	_j @ sp[(-18)+13]
  7036  0111A8  0EFB               	movlw	-5
  7037  0111AA  50E3               	movf	plusw1,w,c
  7038  0111AC  6EE6               	movwf	postinc1,c
  7039  0111AE  0E00               	movlw	0
  7040  0111B0  6EE6               	movwf	postinc1,c
  7041  0111B2  0E00               	movlw	0
  7042  0111B4  6EE6               	movwf	postinc1,c
  7043  0111B6  0E00               	movlw	0
  7044  0111B8  6EE6               	movwf	postinc1,c
  7045  0111BA  0E00               	movlw	0
  7046  0111BC  6EE6               	movwf	postinc1,c
  7047  0111BE  ECF6  F0EE         	call	_lp_filter	;wreg free
  7048                           
  7049                           ;main.c: 428:       lp_filter(0.0, k, -1);
  7050  0111C2  0EFF               	movlw	255
  7051  0111C4  6EE6               	movwf	postinc1,c
  7052                           
  7053                           ;stkvar	_k @ sp[(-18)+12]
  7054  0111C6  0EFA               	movlw	-6
  7055  0111C8  50E3               	movf	plusw1,w,c
  7056  0111CA  6EE6               	movwf	postinc1,c
  7057  0111CC  0E00               	movlw	0
  7058  0111CE  6EE6               	movwf	postinc1,c
  7059  0111D0  0E00               	movlw	0
  7060  0111D2  6EE6               	movwf	postinc1,c
  7061  0111D4  0E00               	movlw	0
  7062  0111D6  6EE6               	movwf	postinc1,c
  7063  0111D8  0E00               	movlw	0
  7064  0111DA  6EE6               	movwf	postinc1,c
  7065  0111DC  ECF6  F0EE         	call	_lp_filter	;wreg free
  7066  0111E0                     l17929:
  7067                           
  7068                           ;main.c: 430:      V.calib = 1;
  7069  0111E0  0E01               	movlw	1
  7070  0111E2  0102               	movlb	2	; () banked
  7071  0111E4  6FB0               	movwf	(_V+169)& (0+255),b	;volatile
  7072                           
  7073                           ; BSR set to: 2
  7074                           ;main.c: 431:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  7075                           ;stkvar	_inp_index @ sp[(-17)+11]
  7076  0111E6  0EFA               	movlw	-6
  7077  0111E8  50E3               	movf	plusw1,w,c
  7078  0111EA  6EE6               	movwf	postinc1,c
  7079  0111EC  0E00               	movlw	0
  7080  0111EE  6EE6               	movwf	postinc1,c
  7081                           
  7082                           ;stkvar	_i @ sp[(-19)+14]
  7083  0111F0  0EFB               	movlw	-5
  7084  0111F2  50E3               	movf	plusw1,w,c
  7085  0111F4  0D04               	mullw	4
  7086  0111F6  0EFF               	movlw	low _C
  7087  0111F8  24F3               	addwf	243,w,c
  7088  0111FA  6ED9               	movwf	fsr2l,c
  7089  0111FC  0E08               	movlw	high _C
  7090  0111FE  20F4               	addwfc	prodh,w,c
  7091  011200  6EDA               	movwf	fsr2h,c
  7092  011202  006F FF7B FFE6     	movff	postinc2,postinc1
  7093  011208  006F FF7B FFE6     	movff	postinc2,postinc1
  7094  01120E  006F FF7B FFE6     	movff	postinc2,postinc1
  7095  011214  006F FF7B FFE6     	movff	postinc2,postinc1
  7096                           
  7097                           ;stkvar	_i @ sp[(-23)+14]
  7098  01121A  0EF7               	movlw	-9
  7099  01121C  50E3               	movf	plusw1,w,c
  7100  01121E  6EE6               	movwf	postinc1,c
  7101  011220  EC2B  F016         	call	_get_raw_result	;wreg free
  7102  011224  0060  F0AB  FFE6   	movff	btemp,postinc1
  7103  01122A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7104  011230  0E35               	movlw	low STR_49
  7105  011232  6EE6               	movwf	postinc1,c
  7106  011234  0EFE               	movlw	high STR_49
  7107  011236  6EE6               	movwf	postinc1,c
  7108  011238  0E00               	movlw	0
  7109  01123A  6EE6               	movwf	postinc1,c
  7110  01123C  0E00               	movlw	0
  7111  01123E  6EE6               	movwf	postinc1,c
  7112  011240  EC13  F014         	call	_get_vterm_ptr	;wreg free
  7113  011244  0060  F0AB  FFE6   	movff	btemp,postinc1
  7114  01124A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7115  011250  0E0C               	movlw	12
  7116  011252  6EE6               	movwf	postinc1,c
  7117  011254  EC59  F0FF         	call	_sprintf	;wreg free
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;main.c: 432:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  7121                           ;stkvar	_inp_index @ sp[(-17)+11]
  7122  011258  0EFA               	movlw	-6
  7123  01125A  50E3               	movf	plusw1,w,c
  7124  01125C  6E34               	movwf	(btemp+10)^0,c
  7125  01125E  6A35               	clrf	(btemp+11)^0,c
  7126  011260  0E01               	movlw	1
  7127  011262  2634               	addwf	(btemp+10)^0,f,c
  7128  011264  0E00               	movlw	0
  7129  011266  2235               	addwfc	(btemp+11)^0,f,c
  7130  011268  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7131  01126E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7132                           
  7133                           ;stkvar	_j @ sp[(-19)+13]
  7134  011274  0EFA               	movlw	-6
  7135  011276  50E3               	movf	plusw1,w,c
  7136  011278  0D04               	mullw	4
  7137  01127A  0EFF               	movlw	low _C
  7138  01127C  24F3               	addwf	243,w,c
  7139  01127E  6ED9               	movwf	fsr2l,c
  7140  011280  0E08               	movlw	high _C
  7141  011282  20F4               	addwfc	prodh,w,c
  7142  011284  6EDA               	movwf	fsr2h,c
  7143  011286  006F FF7B FFE6     	movff	postinc2,postinc1
  7144  01128C  006F FF7B FFE6     	movff	postinc2,postinc1
  7145  011292  006F FF7B FFE6     	movff	postinc2,postinc1
  7146  011298  006F FF7B FFE6     	movff	postinc2,postinc1
  7147                           
  7148                           ;stkvar	_j @ sp[(-23)+13]
  7149  01129E  0EF6               	movlw	-10
  7150  0112A0  50E3               	movf	plusw1,w,c
  7151  0112A2  6EE6               	movwf	postinc1,c
  7152  0112A4  EC2B  F016         	call	_get_raw_result	;wreg free
  7153  0112A8  0060  F0AB  FFE6   	movff	btemp,postinc1
  7154  0112AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7155  0112B4  0E35               	movlw	low STR_49
  7156  0112B6  6EE6               	movwf	postinc1,c
  7157  0112B8  0EFE               	movlw	high STR_49
  7158  0112BA  6EE6               	movwf	postinc1,c
  7159  0112BC  0E00               	movlw	0
  7160  0112BE  6EE6               	movwf	postinc1,c
  7161  0112C0  0E01               	movlw	1
  7162  0112C2  6EE6               	movwf	postinc1,c
  7163  0112C4  EC13  F014         	call	_get_vterm_ptr	;wreg free
  7164  0112C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  7165  0112CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7166  0112D4  0E0C               	movlw	12
  7167  0112D6  6EE6               	movwf	postinc1,c
  7168  0112D8  EC59  F0FF         	call	_sprintf	;wreg free
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;main.c: 433:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  7172                           ;stkvar	_inp_index @ sp[(-17)+11]
  7173  0112DC  0EFA               	movlw	-6
  7174  0112DE  50E3               	movf	plusw1,w,c
  7175  0112E0  6E34               	movwf	(btemp+10)^0,c
  7176  0112E2  6A35               	clrf	(btemp+11)^0,c
  7177  0112E4  0E02               	movlw	2
  7178  0112E6  2634               	addwf	(btemp+10)^0,f,c
  7179  0112E8  0E00               	movlw	0
  7180  0112EA  2235               	addwfc	(btemp+11)^0,f,c
  7181  0112EC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7182  0112F2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7183                           
  7184                           ;stkvar	_k @ sp[(-19)+12]
  7185  0112F8  0EF9               	movlw	-7
  7186  0112FA  50E3               	movf	plusw1,w,c
  7187  0112FC  0D04               	mullw	4
  7188  0112FE  0EFF               	movlw	low _C
  7189  011300  24F3               	addwf	243,w,c
  7190  011302  6ED9               	movwf	fsr2l,c
  7191  011304  0E08               	movlw	high _C
  7192  011306  20F4               	addwfc	prodh,w,c
  7193  011308  6EDA               	movwf	fsr2h,c
  7194  01130A  006F FF7B FFE6     	movff	postinc2,postinc1
  7195  011310  006F FF7B FFE6     	movff	postinc2,postinc1
  7196  011316  006F FF7B FFE6     	movff	postinc2,postinc1
  7197  01131C  006F FF7B FFE6     	movff	postinc2,postinc1
  7198                           
  7199                           ;stkvar	_k @ sp[(-23)+12]
  7200  011322  0EF5               	movlw	-11
  7201  011324  50E3               	movf	plusw1,w,c
  7202  011326  6EE6               	movwf	postinc1,c
  7203  011328  EC2B  F016         	call	_get_raw_result	;wreg free
  7204  01132C  0060  F0AB  FFE6   	movff	btemp,postinc1
  7205  011332  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7206  011338  0E35               	movlw	low STR_49
  7207  01133A  6EE6               	movwf	postinc1,c
  7208  01133C  0EFE               	movlw	high STR_49
  7209  01133E  6EE6               	movwf	postinc1,c
  7210  011340  0E00               	movlw	0
  7211  011342  6EE6               	movwf	postinc1,c
  7212  011344  0E02               	movlw	2
  7213  011346  6EE6               	movwf	postinc1,c
  7214  011348  EC13  F014         	call	_get_vterm_ptr	;wreg free
  7215  01134C  0060  F0AB  FFE6   	movff	btemp,postinc1
  7216  011352  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7217  011358  0E0C               	movlw	12
  7218  01135A  6EE6               	movwf	postinc1,c
  7219  01135C  EC59  F0FF         	call	_sprintf	;wreg free
  7220                           
  7221                           ;main.c: 434:      break;
  7222  011360  D016               	goto	l17941
  7223  011362                     l17939:
  7224  011362  0101               	movlb	1	; () banked
  7225  011364  519B               	movf	_H& (0+255),w,b
  7226  011366  6E34               	movwf	(btemp+10)^0,c
  7227  011368  6A35               	clrf	(btemp+11)^0,c
  7228                           
  7229                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7230                           ; Switch size 1, requested type "simple"
  7231                           ; Number of cases is 1, Range of values is 0 to 0
  7232                           ; switch strategies available:
  7233                           ; Name         Instructions Cycles
  7234                           ; simple_byte            4     3 (average)
  7235                           ;	Chosen strategy is simple_byte
  7236  01136A  5035               	movf	(btemp+11)^0,w,c
  7237  01136C  0A00               	xorlw	0	; case 0
  7238  01136E  A4D8               	btfss	status,2,c
  7239  011370  D00E               	goto	l17941
  7240                           
  7241                           ; BSR set to: 1
  7242                           ; Switch size 1, requested type "simple"
  7243                           ; Number of cases is 4, Range of values is 0 to 3
  7244                           ; switch strategies available:
  7245                           ; Name         Instructions Cycles
  7246                           ; simple_byte           13     7 (average)
  7247                           ;	Chosen strategy is simple_byte
  7248  011372  5034               	movf	(btemp+10)^0,w,c
  7249  011374  0A00               	xorlw	0	; case 0
  7250  011376  B4D8               	btfsc	status,2,c
  7251  011378  D4CE               	goto	l1499
  7252  01137A  0A01               	xorlw	1	; case 1
  7253  01137C  B4D8               	btfsc	status,2,c
  7254  01137E  EF88  F085         	goto	l1489
  7255  011382  0A03               	xorlw	3	; case 2
  7256  011384  B4D8               	btfsc	status,2,c
  7257  011386  D5DC               	goto	l1500
  7258  011388  0A01               	xorlw	1	; case 3
  7259  01138A  B4D8               	btfsc	status,2,c
  7260  01138C  D6F8               	goto	l17925
  7261  01138E                     l17941:
  7262                           
  7263                           ;main.c: 438:     clear_hid_pflags(&H);
  7264  01138E  0E9B               	movlw	low _H
  7265  011390  6EE6               	movwf	postinc1,c
  7266  011392  0E01               	movlw	high _H
  7267  011394  6EE6               	movwf	postinc1,c
  7268  011396  ECAB  F00D         	call	_clear_hid_pflags	;wreg free
  7269                           
  7270                           ;main.c: 440:    StartTimer(TMR_DISPLAY, 250);
  7271  01139A  0EFA               	movlw	250
  7272  01139C  6EE6               	movwf	postinc1,c
  7273  01139E  0E00               	movlw	0
  7274  0113A0  6EE6               	movwf	postinc1,c
  7275  0113A2  0E0A               	movlw	10
  7276  0113A4  6EE6               	movwf	postinc1,c
  7277  0113A6  EC09  F012         	call	_StartTimer	;wreg free
  7278                           
  7279                           ;main.c: 441:    V.enter = check_enter_button(&H);
  7280  0113AA  0E9B               	movlw	low _H
  7281  0113AC  6EE6               	movwf	postinc1,c
  7282  0113AE  0E01               	movlw	high _H
  7283  0113B0  6EE6               	movwf	postinc1,c
  7284  0113B2  EC9E  F00C         	call	_check_enter_button	;wreg free
  7285  0113B6  502A               	movf	btemp^0,w,c
  7286  0113B8  0102               	movlb	2	; () banked
  7287  0113BA  6FB1               	movwf	(_V+170)& (0+255),b	;volatile
  7288                           
  7289                           ; BSR set to: 2
  7290                           ;main.c: 442:    if (V.enter && (H.hid_display != HID_AUX)) {
  7291  0113BC  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7292  0113BE  B4D8               	btfsc	status,2,c
  7293  0113C0  D013               	goto	l17955
  7294                           
  7295                           ; BSR set to: 2
  7296  0113C2  0E03               	movlw	3
  7297  0113C4  0101               	movlb	1	; () banked
  7298  0113C6  199B               	xorwf	_H& (0+255),w,b
  7299  0113C8  B4D8               	btfsc	status,2,c
  7300  0113CA  D00E               	goto	l17955
  7301                           
  7302                           ; BSR set to: 1
  7303                           ;main.c: 443:     V.enter = 0;
  7304  0113CC  0102               	movlb	2	; () banked
  7305  0113CE  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7306                           
  7307                           ; BSR set to: 2
  7308                           ;main.c: 444:     V.screen = ~V.screen;
  7309  0113D0  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7310  0113D2  D002               	goto	u17450
  7311  0113D4  0E01               	movlw	1
  7312  0113D6  D001               	goto	u17456
  7313  0113D8                     u17450:
  7314  0113D8  0E00               	movlw	0
  7315  0113DA                     u17456:
  7316  0113DA  0AFF               	xorlw	255
  7317  0113DC  6E35               	movwf	(btemp+11)^0,c
  7318  0113DE  51A0               	movf	(_V+153)& (0+255),w,b	;volatile
  7319  0113E0  1835               	xorwf	(btemp+11)^0,w,c
  7320  0113E2  0BFE               	andlw	-2
  7321  0113E4  1835               	xorwf	(btemp+11)^0,w,c
  7322  0113E6  6FA0               	movwf	(_V+153)& (0+255),b	;volatile
  7323  0113E8                     l17955:
  7324                           
  7325                           ;main.c: 446:    set_vterm(V.screen);
  7326  0113E8  0102               	movlb	2	; () banked
  7327  0113EA  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7328  0113EC  D002               	goto	u17460
  7329  0113EE  0E01               	movlw	1
  7330  0113F0  D001               	goto	u17466
  7331  0113F2                     u17460:
  7332  0113F2  0E00               	movlw	0
  7333  0113F4                     u17466:
  7334  0113F4  6EE6               	movwf	postinc1,c
  7335  0113F6  EC9C  F016         	call	_set_vterm	;wreg free
  7336                           
  7337                           ;main.c: 447:    update_lcd(V.screen);
  7338  0113FA  0102               	movlb	2	; () banked
  7339  0113FC  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7340  0113FE  D002               	goto	u17470
  7341  011400  0E01               	movlw	1
  7342  011402  D001               	goto	u17476
  7343  011404                     u17470:
  7344  011404  0E00               	movlw	0
  7345  011406                     u17476:
  7346  011406  6EE6               	movwf	postinc1,c
  7347  011408  EC0B  F0F8         	call	_update_lcd	;wreg free
  7348                           
  7349                           ;main.c: 448:    display_history();
  7350  01140C  EC0C  F0DB         	call	_display_history	;wreg free
  7351                           
  7352                           ;main.c: 450:    wait_lcd_done();
  7353  011410  EC1A  F016         	call	_wait_lcd_done	;wreg free
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;main.c: 451:    set_dac_a(3.333);
  7357  011414  0EDF               	movlw	223
  7358  011416  6EE6               	movwf	postinc1,c
  7359  011418  0E4F               	movlw	79
  7360  01141A  6EE6               	movwf	postinc1,c
  7361  01141C  0E55               	movlw	85
  7362  01141E  6EE6               	movwf	postinc1,c
  7363  011420  0E40               	movlw	64
  7364  011422  6EE6               	movwf	postinc1,c
  7365  011424  EC66  F013         	call	_set_dac_a	;wreg free
  7366                           
  7367                           ;main.c: 452:    set_dac_b(6.666);
  7368  011428  0EDF               	movlw	223
  7369  01142A  6EE6               	movwf	postinc1,c
  7370  01142C  0E4F               	movlw	79
  7371  01142E  6EE6               	movwf	postinc1,c
  7372  011430  0ED5               	movlw	213
  7373  011432  6EE6               	movwf	postinc1,c
  7374  011434  0E40               	movlw	64
  7375  011436  6EE6               	movwf	postinc1,c
  7376  011438  EC4C  F013         	call	_set_dac_b	;wreg free
  7377                           
  7378                           ;main.c: 453:    set_dac();
  7379  01143C  EC45  F006         	call	_set_dac	;wreg free
  7380  011440                     l17969:
  7381                           
  7382                           ;main.c: 459:   check_help(V.flipper);
  7383  011440  0102               	movlb	2	; () banked
  7384  011442  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
  7385  011444  6EE6               	movwf	postinc1,c
  7386  011446  EC06  F0EC         	call	_check_help	;wreg free
  7387                           
  7388                           ;main.c: 461:   if (V.enter) {
  7389  01144A  0102               	movlb	2	; () banked
  7390  01144C  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7391  01144E  B4D8               	btfsc	status,2,c
  7392  011450  D062               	goto	l1505
  7393                           
  7394                           ; BSR set to: 2
  7395                           ;main.c: 462:    V.enter = 0;
  7396  011452  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7397                           
  7398                           ;main.c: 463:    V.calib = 0;
  7399  011454  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7400                           
  7401                           ; BSR set to: 2
  7402                           ;main.c: 464:    inp_index += 3;
  7403                           ;stkvar	_inp_index @ sp[(-17)+11]
  7404  011456  0EFA               	movlw	-6
  7405  011458  006F FF8C  F02A    	movff	plusw1,btemp
  7406  01145E  0E03               	movlw	3
  7407  011460  262A               	addwf	btemp^0,f,c
  7408  011462  0EFA               	movlw	-6
  7409  011464  0060  F0AB  FFE3   	movff	btemp,plusw1
  7410                           
  7411                           ;main.c: 465:    if (inp_index > 9)
  7412                           ;stkvar	_inp_index @ sp[(-17)+11]
  7413  01146A  0EFA               	movlw	-6
  7414  01146C  006F FF8C  F02A    	movff	plusw1,btemp
  7415  011472  0E09               	movlw	9
  7416  011474  642A               	cpfsgt	btemp^0,c
  7417  011476  D03A               	goto	l17997
  7418                           
  7419                           ; BSR set to: 2
  7420                           ;main.c: 466:     inp_index = 0;
  7421                           ;stkvar	_inp_index @ sp[(-17)+11]
  7422  011478  0EFA               	movlw	-6
  7423  01147A  6AE3               	clrf	plusw1,c
  7424  01147C  D037               	goto	l17997
  7425  01147E                     l17979:
  7426                           
  7427                           ; BSR set to: 2
  7428                           ;main.c: 469:     i = C_BATT;
  7429                           ;stkvar	_i @ sp[(-17)+14]
  7430  01147E  0EFD               	movlw	-3
  7431  011480  6AE3               	clrf	plusw1,c
  7432                           
  7433                           ; BSR set to: 2
  7434                           ;main.c: 470:     j = C_PV;
  7435                           ;stkvar	_j @ sp[(-17)+13]
  7436  011482  0EFC               	movlw	-4
  7437  011484  6AE3               	clrf	plusw1,c
  7438  011486  2AE3               	incf	plusw1,f,c
  7439                           
  7440                           ; BSR set to: 2
  7441                           ;main.c: 471:     k = V_CC;
  7442                           ;stkvar	_k @ sp[(-17)+12]
  7443  011488  0EFB               	movlw	-5
  7444  01148A  6AE3               	clrf	plusw1,c
  7445  01148C  82E3               	bsf	plusw1,1,c
  7446                           
  7447                           ;main.c: 472:     break;
  7448  01148E  D043               	goto	l1505
  7449  011490                     l17985:
  7450                           
  7451                           ; BSR set to: 2
  7452                           ;main.c: 474:     i = V_BAT;
  7453                           ;stkvar	_i @ sp[(-17)+14]
  7454  011490  0EFD               	movlw	-3
  7455  011492  6AE3               	clrf	plusw1,c
  7456  011494  84E3               	bsf	plusw1,2,c
  7457                           
  7458                           ;main.c: 475:     j = V_PV;
  7459                           ;stkvar	_j @ sp[(-17)+13]
  7460  011496  0EFC               	movlw	-4
  7461  011498  6AE3               	clrf	plusw1,c
  7462  01149A  80E3               	bsf	plusw1,0,c
  7463  01149C  84E3               	bsf	plusw1,2,c	;indir
  7464                           
  7465                           ;main.c: 476:     k = V_CBUS;
  7466                           ;stkvar	_k @ sp[(-17)+12]
  7467  01149E  0EFB               	movlw	-5
  7468  0114A0  6AE3               	clrf	plusw1,c
  7469  0114A2  82E3               	bsf	plusw1,1,c
  7470  0114A4  84E3               	bsf	plusw1,2,c	;indir
  7471                           
  7472                           ;main.c: 477:     break;
  7473  0114A6  D037               	goto	l1505
  7474  0114A8                     l17987:
  7475                           
  7476                           ; BSR set to: 2
  7477                           ;main.c: 479:     i = V_BBAT;
  7478                           ;stkvar	_i @ sp[(-17)+14]
  7479  0114A8  0EFD               	movlw	-3
  7480  0114AA  6AE3               	clrf	plusw1,c
  7481  0114AC  82E3               	bsf	plusw1,1,c
  7482  0114AE  86E3               	bsf	plusw1,3,c	;indir
  7483                           
  7484                           ; BSR set to: 2
  7485                           ;main.c: 480:     j = V_TEMP;
  7486  0114B0  0E0B               	movlw	11
  7487  0114B2  6E35               	movwf	(btemp+11)^0,c
  7488                           
  7489                           ;stkvar	_j @ sp[(-17)+13]
  7490  0114B4  0EFC               	movlw	-4
  7491  0114B6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7492                           
  7493                           ; BSR set to: 2
  7494                           ;main.c: 481:     k = V_INVERTER;
  7495                           ;stkvar	_k @ sp[(-17)+12]
  7496  0114BC  0EFB               	movlw	-5
  7497  0114BE  6AE3               	clrf	plusw1,c
  7498  0114C0  84E3               	bsf	plusw1,2,c
  7499  0114C2  86E3               	bsf	plusw1,3,c	;indir
  7500                           
  7501                           ;main.c: 482:     break;
  7502  0114C4  D028               	goto	l1505
  7503  0114C6                     l17993:
  7504                           
  7505                           ; BSR set to: 2
  7506                           ;main.c: 484:     i = V_LIGHT_SENSOR;
  7507  0114C6  0E0D               	movlw	13
  7508  0114C8  6E35               	movwf	(btemp+11)^0,c
  7509                           
  7510                           ;stkvar	_i @ sp[(-17)+14]
  7511  0114CA  0EFD               	movlw	-3
  7512  0114CC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7513                           
  7514                           ;main.c: 485:     j = V_LIGHT_SENSOR;
  7515  0114D2  0E0D               	movlw	13
  7516  0114D4  6E35               	movwf	(btemp+11)^0,c
  7517                           
  7518                           ;stkvar	_j @ sp[(-17)+13]
  7519  0114D6  0EFC               	movlw	-4
  7520  0114D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7521                           
  7522                           ;main.c: 486:     k = V_LIGHT_SENSOR;
  7523  0114DE  0E0D               	movlw	13
  7524  0114E0  6E35               	movwf	(btemp+11)^0,c
  7525                           
  7526                           ;stkvar	_k @ sp[(-17)+12]
  7527  0114E2  0EFB               	movlw	-5
  7528  0114E4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7529                           
  7530                           ;main.c: 487:     break;
  7531  0114EA  D015               	goto	l1505
  7532  0114EC                     l17997:
  7533                           
  7534                           ; BSR set to: 2
  7535                           ;stkvar	_inp_index @ sp[(-17)+11]
  7536  0114EC  0EFA               	movlw	-6
  7537  0114EE  50E3               	movf	plusw1,w,c
  7538  0114F0  6E34               	movwf	(btemp+10)^0,c
  7539  0114F2  6A35               	clrf	(btemp+11)^0,c
  7540                           
  7541                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7542                           ; Switch size 1, requested type "simple"
  7543                           ; Number of cases is 1, Range of values is 0 to 0
  7544                           ; switch strategies available:
  7545                           ; Name         Instructions Cycles
  7546                           ; simple_byte            4     3 (average)
  7547                           ;	Chosen strategy is simple_byte
  7548  0114F4  5035               	movf	(btemp+11)^0,w,c
  7549  0114F6  0A00               	xorlw	0	; case 0
  7550  0114F8  A4D8               	btfss	status,2,c
  7551  0114FA  D00D               	goto	l1505
  7552                           
  7553                           ; BSR set to: 2
  7554                           ; Switch size 1, requested type "simple"
  7555                           ; Number of cases is 4, Range of values is 0 to 9
  7556                           ; switch strategies available:
  7557                           ; Name         Instructions Cycles
  7558                           ; simple_byte           13     7 (average)
  7559                           ;	Chosen strategy is simple_byte
  7560  0114FC  5034               	movf	(btemp+10)^0,w,c
  7561  0114FE  0A00               	xorlw	0	; case 0
  7562  011500  B4D8               	btfsc	status,2,c
  7563  011502  D7BD               	goto	l17979
  7564  011504  0A03               	xorlw	3	; case 3
  7565  011506  B4D8               	btfsc	status,2,c
  7566  011508  D7C3               	goto	l17985
  7567  01150A  0A05               	xorlw	5	; case 6
  7568  01150C  B4D8               	btfsc	status,2,c
  7569  01150E  D7CC               	goto	l17987
  7570  011510  0A0F               	xorlw	15	; case 9
  7571  011512  B4D8               	btfsc	status,2,c
  7572  011514  D7D8               	goto	l17993
  7573  011516                     l1505:
  7574                           
  7575                           ; BSR set to: 2
  7576                           ;main.c: 496:   if (V.set_sequ) {
  7577  011516  A19F               	btfss	(_V+152)& (0+255),0,b	;volatile
  7578  011518  EF27  F084         	goto	l17845
  7579                           
  7580                           ; BSR set to: 2
  7581                           ;main.c: 497:    if (TimerDone(TMR_INFO)) {
  7582  01151C  0E07               	movlw	7
  7583  01151E  6EE6               	movwf	postinc1,c
  7584  011520  EC95  F014         	call	_TimerDone	;wreg free
  7585  011524  502A               	movf	btemp^0,w,c
  7586  011526  B4D8               	btfsc	status,2,c
  7587  011528  D00C               	goto	l18007
  7588                           
  7589                           ;main.c: 498:     V.set_sequ = 0;
  7590  01152A  0102               	movlb	2	; () banked
  7591  01152C  919F               	bcf	(_V+152)& (0+255),0,b	;volatile
  7592                           
  7593                           ; BSR set to: 2
  7594                           ;main.c: 499:     set_vterm(0);
  7595  01152E  0E00               	movlw	0
  7596  011530  6EE6               	movwf	postinc1,c
  7597  011532  EC9C  F016         	call	_set_vterm	;wreg free
  7598                           
  7599                           ;main.c: 500:     update_lcd(0);
  7600  011536  0E00               	movlw	0
  7601  011538  6EE6               	movwf	postinc1,c
  7602  01153A  EC0B  F0F8         	call	_update_lcd	;wreg free
  7603                           
  7604                           ;main.c: 501:    } else {
  7605  01153E  EF27  F084         	goto	l17845
  7606  011542                     l18007:
  7607                           
  7608                           ;main.c: 502:     set_vterm(2);
  7609  011542  0E02               	movlw	2
  7610  011544  6EE6               	movwf	postinc1,c
  7611  011546  EC9C  F016         	call	_set_vterm	;wreg free
  7612                           
  7613                           ;main.c: 503:     update_lcd(2);
  7614  01154A  0E02               	movlw	2
  7615  01154C  6EE6               	movwf	postinc1,c
  7616  01154E  EC0B  F0F8         	call	_update_lcd	;wreg free
  7617  011552  EF27  F084         	goto	l17845
  7618  011556                     __end_of_main:
  7619                           	opt callstack 0
  7620                           
  7621 ;; *************** function _update_hist_data *****************
  7622 ;; Defined at:
  7623 ;;		line 456 in file "daq.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  mode            1  [STACK] const _Bool 
  7626 ;;  hist            2  [STACK] PTR volatile struct hist
  7627 ;;		 -> C.hist(97), C(320), 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;		None
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  1  [STACK] _Bool 
  7632 ;; Registers used:
  7633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  7634 ;; Tracked objects:
  7635 ;;		On entry : 7/1
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7643 ;;Total ram usage:        0 bytes
  7644 ;; Hardware stack levels used:    1
  7645 ;; Hardware stack levels required when called:   15
  7646 ;; This function calls:
  7647 ;;		Nothing
  7648 ;; This function is called by:
  7649 ;;		_main
  7650 ;; This function uses a reentrant model
  7651 ;;
  7652                           
  7653                           	psect	text1
  7654  0017CE                     __ptext1:
  7655                           	opt callstack 0
  7656  0017CE                     _update_hist_data:
  7657                           	opt callstack 15
  7658                           
  7659                           ;daq.c: 456: _Bool update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 4
      +                          57: {;daq.c: 458:  if (hist == ((void*)0))
  7660                           ;stkvar	_hist @ sp[(0)+-3]
  7661                           
  7662                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7663                           ;incstack = 0
  7664  0017CE  0EFD               	movlw	-3
  7665  0017D0  006F FF8C  F02A    	movff	plusw1,btemp
  7666  0017D6  0EFE               	movlw	-2
  7667  0017D8  50E3               	movf	plusw1,w,c
  7668  0017DA  102A               	iorwf	btemp^0,w,c
  7669  0017DC  A4D8               	btfss	status,2,c
  7670  0017DE  D002               	goto	l14285
  7671  0017E0                     u13490:
  7672                           
  7673                           ;daq.c: 459:   return 0;
  7674  0017E0  0E00               	movlw	0
  7675  0017E2  D01A               	goto	L3
  7676  0017E4                     l14285:
  7677                           
  7678                           ;daq.c: 461:  if (mode) {
  7679                           ;stkvar	_mode @ sp[(0)+-1]
  7680  0017E4  0EFF               	movlw	-1
  7681  0017E6  50E3               	movf	plusw1,w,c
  7682  0017E8  B4D8               	btfsc	status,2,c
  7683  0017EA  D018               	goto	l14297
  7684                           
  7685                           ;daq.c: 462:   if (R.hist_save) {
  7686  0017EC  0101               	movlb	1	; () banked
  7687  0017EE  A197               	btfss	(_R+151)& (0+255),0,b	;volatile
  7688  0017F0  D7F7               	goto	u13490
  7689                           
  7690                           ; BSR set to: 1
  7691                           ;daq.c: 463:    R.H = *hist;
  7692                           ;stkvar	_hist @ sp[(0)+-3]
  7693  0017F2  0EFD               	movlw	-3
  7694  0017F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7695  0017FA  0EFE               	movlw	-2
  7696  0017FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7697  001802  EE00  F136         	lfsr	0,_R+54	;volatile
  7698  001806  0E60               	movlw	96
  7699  001808                     u13521:
  7700  001808  006F FF6F FFEB     	movff	plusw2,plusw0
  7701  00180E  06E8               	decf	wreg,f,c
  7702  001810  E2FB               	bc	u13521
  7703                           
  7704                           ; BSR set to: 1
  7705                           ;daq.c: 464:    if (R.hist_update) {
  7706  001812  A397               	btfss	(_R+151)& (0+255),1,b	;volatile
  7707  001814  D7E5               	goto	u13490
  7708                           
  7709                           ; BSR set to: 1
  7710                           ;daq.c: 465:     return 1;
  7711  001816  0E01               	movlw	1
  7712  001818                     L3:
  7713  001818  6E2A               	movwf	btemp^0,c
  7714  00181A  D013               	goto	l2107
  7715  00181C                     l14297:
  7716                           
  7717                           ;daq.c: 469:   *hist = R.H;
  7718  00181C  EE20  F136         	lfsr	2,_R+54	;volatile
  7719                           
  7720                           ;stkvar	_hist @ sp[(0)+-3]
  7721  001820  0EFD               	movlw	-3
  7722  001822  006F FF8F FFE9     	movff	plusw1,fsr0l
  7723  001828  0EFE               	movlw	-2
  7724  00182A  006F FF8F FFEA     	movff	plusw1,fsr0h
  7725  001830  0E60               	movlw	96
  7726  001832                     u13541:
  7727  001832  006F FF6F FFEB     	movff	plusw2,plusw0
  7728  001838  06E8               	decf	wreg,f,c
  7729  00183A  E2FB               	bc	u13541
  7730                           
  7731                           ;daq.c: 470:   R.hist_save = 1;
  7732  00183C  0101               	movlb	1	; () banked
  7733  00183E  8197               	bsf	(_R+151)& (0+255),0,b	;volatile
  7734  001840  D7CF               	goto	u13490
  7735  001842                     l2107:
  7736                           
  7737                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  7738  001842  52E5               	movf	postdec1,f,c
  7739  001844  52E5               	movf	postdec1,f,c
  7740  001846  52E5               	movf	postdec1,f,c
  7741  001848  0012               	return		;funcret
  7742  00184A                     __end_of_update_hist_data:
  7743                           	opt callstack 0
  7744                           
  7745 ;; *************** function _update_cal_data *****************
  7746 ;; Defined at:
  7747 ;;		line 437 in file "daq.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;		None
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;		None
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  1  [STACK] void 
  7754 ;; Registers used:
  7755 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/39
  7758 ;;		On exit  : 3F/1
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7765 ;;Total ram usage:        0 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:   15
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_main
  7772 ;; This function uses a reentrant model
  7773 ;;
  7774                           
  7775                           	psect	text2
  7776  001F7A                     __ptext2:
  7777                           	opt callstack 0
  7778  001F7A                     _update_cal_data:
  7779                           	opt callstack 15
  7780                           
  7781                           ;daq.c: 439:  R = r_cal;
  7782                           
  7783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7784                           ;incstack = 0
  7785  001F7A  EE21  F040         	lfsr	2,_r_cal
  7786  001F7E  EE00  F100         	lfsr	0,_R	;volatile
  7787  001F82  0E9A               	movlw	154
  7788  001F84                     u13461:
  7789  001F84  006F FF7B FFEE     	movff	postinc2,postinc0
  7790  001F8A  06E8               	decf	wreg,f,c
  7791  001F8C  E2FB               	bc	u13461
  7792  001F8E  0E9B               	movlw	155
  7793  001F90  5ED9               	subwf	fsr2l,f,c
  7794  001F92  5EE9               	subwf	fsr0l,f,c
  7795                           
  7796                           ;daq.c: 440:  if (!R.c_zero_cal) {
  7797  001F94  0101               	movlb	1	; () banked
  7798  001F96  B597               	btfsc	(_R+151)& (0+255),2,b	;volatile
  7799  001F98  D008               	goto	l14275
  7800                           
  7801                           ; BSR set to: 1
  7802                           ;daq.c: 441:   R.n_offset[0] = 3938;
  7803  001F9A  0E0F               	movlw	15
  7804  001F9C  6F27               	movwf	(_R+39)& (0+255),b	;volatile
  7805  001F9E  0E62               	movlw	98
  7806  001FA0  6F26               	movwf	(_R+38)& (0+255),b	;volatile
  7807                           
  7808                           ;daq.c: 442:   R.n_offset[1] = 4004;
  7809  001FA2  0E0F               	movlw	15
  7810  001FA4  6F29               	movwf	(_R+41)& (0+255),b	;volatile
  7811  001FA6  0EA4               	movlw	164
  7812  001FA8  6F28               	movwf	(_R+40)& (0+255),b	;volatile
  7813  001FAA                     l14275:
  7814                           
  7815                           ; BSR set to: 1
  7816                           ;daq.c: 446:  if (!R.c_scale_cal) {
  7817  001FAA  B797               	btfsc	(_R+151)& (0+255),3,b	;volatile
  7818  001FAC  0012               	return	
  7819                           
  7820                           ; BSR set to: 1
  7821                           ;daq.c: 447:   R.n_scalar[0] = 0.0862000;
  7822  001FAE  0EA0               	movlw	160
  7823  001FB0  6F2A               	movwf	(_R+42)& (0+255),b	;volatile
  7824  001FB2  0E89               	movlw	137
  7825  001FB4  6F2B               	movwf	(_R+43)& (0+255),b	;volatile
  7826  001FB6  0EB0               	movlw	176
  7827  001FB8  6F2C               	movwf	(_R+44)& (0+255),b	;volatile
  7828  001FBA  0E3D               	movlw	61
  7829  001FBC  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  7830                           
  7831                           ;daq.c: 448:   R.n_scalar[1] = 0.0361010;
  7832  001FBE  0EA4               	movlw	164
  7833  001FC0  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  7834  001FC2  0EDE               	movlw	222
  7835  001FC4  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
  7836  001FC6  0E13               	movlw	19
  7837  001FC8  6F30               	movwf	(_R+48)& (0+255),b	;volatile
  7838  001FCA  0E3D               	movlw	61
  7839  001FCC  6F31               	movwf	(_R+49)& (0+255),b	;volatile
  7840                           
  7841                           ; BSR set to: 1
  7842                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7843  001FCE  0012               	return		;funcret
  7844  001FD0                     __end_of_update_cal_data:
  7845                           	opt callstack 0
  7846                           
  7847 ;; *************** function _static_soc *****************
  7848 ;; Defined at:
  7849 ;;		line 118 in file "mbmc.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;		None
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;		None
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  1  [STACK] void 
  7856 ;; Registers used:
  7857 ;;		wreg, fsr2l, fsr2h
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/1
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7867 ;;Total ram usage:        0 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:   15
  7870 ;; This function calls:
  7871 ;;		Nothing
  7872 ;; This function is called by:
  7873 ;;		_main
  7874 ;; This function uses a reentrant model
  7875 ;;
  7876                           
  7877                           	psect	text3
  7878  001E6C                     __ptext3:
  7879                           	opt callstack 0
  7880  001E6C                     _static_soc:
  7881                           	opt callstack 15
  7882                           
  7883                           ;mbmc.c: 120:  C.runtime = 120;
  7884                           
  7885                           ; BSR set to: 1
  7886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7887                           ;incstack = 0
  7888  001E6C  0E78               	movlw	120
  7889  001E6E  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
  7890  001E74  0E00               	movlw	0
  7891  001E76  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
  7892                           
  7893                           ;mbmc.c: 121:  C.soc = 100;
  7894  001E7C  0E64               	movlw	100
  7895  001E7E  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
  7896  001E84  0E00               	movlw	0
  7897  001E86  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
  7898                           
  7899                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  7900  001E8C  EE22  F18B         	lfsr	2,_C+140	;volatile
  7901  001E90  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
  7902  001E96  006F FF78  F990    	movff	postinc2,_C+145	;volatile
  7903  001E9C  006F FF78  F991    	movff	postinc2,_C+146	;volatile
  7904  001EA2  006F FF74  F992    	movff	postdec2,_C+147	;volatile
  7905                           
  7906                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  7907  001EA8  EE22  F18F         	lfsr	2,_C+144	;volatile
  7908  001EAC  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  7909  001EB2  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  7910  001EB8  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  7911  001EBE  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  7912                           
  7913                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7914  001EC4  0012               	return		;funcret
  7915  001EC6                     __end_of_static_soc:
  7916                           	opt callstack 0
  7917                           
  7918 ;; *************** function _start_switch_handler *****************
  7919 ;; Defined at:
  7920 ;;		line 125 in file "dio.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;		None
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;		None
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  1  [STACK] void 
  7927 ;; Registers used:
  7928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 3F/39
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7938 ;;Total ram usage:        0 bytes
  7939 ;; Hardware stack levels used:    1
  7940 ;; Hardware stack levels required when called:   16
  7941 ;; This function calls:
  7942 ;;		_INT1_SetInterruptHandler
  7943 ;; This function is called by:
  7944 ;;		_main
  7945 ;; This function uses a reentrant model
  7946 ;;
  7947                           
  7948                           	psect	text4
  7949  002CBC                     __ptext4:
  7950                           	opt callstack 0
  7951  002CBC                     _start_switch_handler:
  7952                           	opt callstack 14
  7953                           
  7954                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  7955                           
  7956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7957                           ;incstack = 0
  7958  002CBC  0139               	movlb	57	; () banked
  7959  002CBE  9195               	bcf	149,0,b	;volatile
  7960                           
  7961                           ; BSR set to: 57
  7962                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  7963  002CC0  0E76               	movlw	low _switch_handler
  7964  002CC2  6EE6               	movwf	postinc1,c
  7965  002CC4  0EF5               	movlw	high _switch_handler
  7966  002CC6  6EE6               	movwf	postinc1,c
  7967  002CC8  0E01               	movlw	low (_switch_handler shr (0+16))
  7968  002CCA  6EE6               	movwf	postinc1,c
  7969  002CCC  EC21  F015         	call	_INT1_SetInterruptHandler	;wreg free
  7970                           
  7971                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  7972  002CD0  0E02               	movlw	2
  7973  002CD2  0101               	movlb	1	; () banked
  7974  002CD4  6FC7               	movwf	(_S+35)& (0+255),b	;volatile
  7975                           
  7976                           ; BSR set to: 1
  7977                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  7978  002CD6  0139               	movlb	57	; () banked
  7979  002CD8  8195               	bsf	149,0,b	;volatile
  7980                           
  7981                           ; BSR set to: 57
  7982                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7983  002CDA  0012               	return		;funcret
  7984  002CDC                     __end_of_start_switch_handler:
  7985                           	opt callstack 0
  7986                           
  7987 ;; *************** function _srand *****************
  7988 ;; Defined at:
  7989 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;  s               2  [STACK] unsigned int 
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;		None
  7994 ;; Return value:  Size  Location     Type
  7995 ;;                  1  [STACK] void 
  7996 ;; Registers used:
  7997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 3F/2
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8007 ;;Total ram usage:        0 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; Hardware stack levels required when called:   15
  8010 ;; This function calls:
  8011 ;;		Nothing
  8012 ;; This function is called by:
  8013 ;;		_main
  8014 ;; This function uses a reentrant model
  8015 ;;
  8016                           
  8017                           	psect	text5
  8018  002664                     __ptext5:
  8019                           	opt callstack 0
  8020  002664                     _srand:
  8021                           	opt callstack 15
  8022                           
  8023                           ;stkvar	_s @ sp[(0)+-2]
  8024                           
  8025                           ; BSR set to: 57
  8026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8027                           ;incstack = 0
  8028  002664  0EFE               	movlw	-2
  8029  002666  50E3               	movf	plusw1,w,c
  8030  002668  0FFF               	addlw	255
  8031  00266A  6E34               	movwf	(btemp+10)^0,c
  8032  00266C  0EFF               	movlw	-1
  8033  00266E  006F FF8C  F035    	movff	plusw1,btemp+11
  8034  002674  0EFF               	movlw	255
  8035  002676  2235               	addwfc	(btemp+11)^0,f,c
  8036  002678  0060  F0D0  F2DE   	movff	btemp+10,_seed
  8037  00267E  0060  F0D4  F2DF   	movff	btemp+11,_seed+1
  8038  002684  0102               	movlb	2	; () banked
  8039  002686  6BE0               	clrf	(_seed+2)& (0+255),b
  8040  002688  6BE1               	clrf	(_seed+3)& (0+255),b
  8041  00268A  6BE2               	clrf	(_seed+4)& (0+255),b
  8042  00268C  6BE3               	clrf	(_seed+5)& (0+255),b
  8043  00268E  6BE4               	clrf	(_seed+6)& (0+255),b
  8044  002690  6BE5               	clrf	(_seed+7)& (0+255),b
  8045                           
  8046                           ; BSR set to: 2
  8047                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  8048  002692  52E5               	movf	postdec1,f,c
  8049  002694  52E5               	movf	postdec1,f,c
  8050  002696  0012               	return		;funcret
  8051  002698                     __end_of_srand:
  8052                           	opt callstack 0
  8053                           
  8054 ;; *************** function _set_time *****************
  8055 ;; Defined at:
  8056 ;;		line 255 in file "mbmc.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;  t               8  [STACK] long long 
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;		None
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  1  [STACK] void 
  8063 ;; Registers used:
  8064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/1
  8067 ;;		On exit  : 3F/39
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8074 ;;Total ram usage:        0 bytes
  8075 ;; Hardware stack levels used:    1
  8076 ;; Hardware stack levels required when called:   15
  8077 ;; This function calls:
  8078 ;;		Nothing
  8079 ;; This function is called by:
  8080 ;;		_main
  8081 ;; This function uses a reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text6
  8085  0025F8                     __ptext6:
  8086                           	opt callstack 0
  8087  0025F8                     _set_time:
  8088                           	opt callstack 15
  8089                           
  8090                           ;mbmc.c: 255: void set_time(time_t t);mbmc.c: 256: {;mbmc.c: 257:  PIE8bits.TMR5IE = 0;
  8091                           
  8092                           ; BSR set to: 2
  8093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8094                           ;incstack = 0
  8095  0025F8  0139               	movlb	57	; () banked
  8096  0025FA  9D98               	bcf	152,6,b	;volatile
  8097                           
  8098                           ; BSR set to: 57
  8099                           ;mbmc.c: 258:  V.ticks=t;
  8100                           ;stkvar	_t @ sp[(0)+-8]
  8101  0025FC  50E1               	movf	fsr1l,w,c
  8102  0025FE  0FF8               	addlw	-8
  8103  002600  6ED9               	movwf	fsr2l,c
  8104  002602  50E2               	movf	fsr1h,w,c
  8105  002604  6EDA               	movwf	fsr2h,c
  8106  002606  0EFF               	movlw	255
  8107  002608  22DA               	addwfc	fsr2h,f,c
  8108  00260A  006F FF78  F288    	movff	postinc2,_V+129	;volatile
  8109  002610  006F FF78  F289    	movff	postinc2,_V+130	;volatile
  8110  002616  006F FF78  F28A    	movff	postinc2,_V+131	;volatile
  8111  00261C  006F FF78  F28B    	movff	postinc2,_V+132	;volatile
  8112                           
  8113                           ; BSR set to: 57
  8114                           ;mbmc.c: 259:  PIE8bits.TMR5IE = 1;
  8115  002622  8D98               	bsf	152,6,b	;volatile
  8116                           
  8117                           ; BSR set to: 57
  8118                           ; _set_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
  8119  002624  0EF8               	movlw	248
  8120  002626  26E1               	addwf	fsr1l,f,c
  8121  002628  0EFF               	movlw	255
  8122  00262A  22E2               	addwfc	fsr1h,f,c
  8123  00262C  0012               	return		;funcret
  8124  00262E                     __end_of_set_time:
  8125                           	opt callstack 0
  8126                           
  8127 ;; *************** function _set_hist_flag *****************
  8128 ;; Defined at:
  8129 ;;		line 475 in file "daq.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;		None
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;		None
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  1  [STACK] void 
  8136 ;; Registers used:
  8137 ;;		None
  8138 ;; Tracked objects:
  8139 ;;		On entry : 3F/39
  8140 ;;		On exit  : 3F/1
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8147 ;;Total ram usage:        0 bytes
  8148 ;; Hardware stack levels used:    1
  8149 ;; Hardware stack levels required when called:   15
  8150 ;; This function calls:
  8151 ;;		Nothing
  8152 ;; This function is called by:
  8153 ;;		_main
  8154 ;; This function uses a reentrant model
  8155 ;;
  8156                           
  8157                           	psect	text7
  8158  002F62                     __ptext7:
  8159                           	opt callstack 0
  8160  002F62                     _set_hist_flag:
  8161                           	opt callstack 15
  8162                           
  8163                           ;daq.c: 477:  R.hist_update=1;
  8164                           
  8165                           ; BSR set to: 57
  8166                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8167                           ;incstack = 0
  8168  002F62  0101               	movlb	1	; () banked
  8169  002F64  8397               	bsf	(_R+151)& (0+255),1,b	;volatile
  8170                           
  8171                           ; BSR set to: 1
  8172                           ; _set_hist_flag: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8173  002F66  0012               	return		;funcret
  8174  002F68                     __end_of_set_hist_flag:
  8175                           	opt callstack 0
  8176                           
  8177 ;; *************** function _set_dac_b *****************
  8178 ;; Defined at:
  8179 ;;		line 308 in file "daq.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;  voltage         4  [STACK] const float 
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;		None
  8184 ;; Return value:  Size  Location     Type
  8185 ;;                  2  [STACK] unsigned short 
  8186 ;; Registers used:
  8187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8188 ;; Tracked objects:
  8189 ;;		On entry : 0/0
  8190 ;;		On exit  : 0/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8197 ;;Total ram usage:        0 bytes
  8198 ;; Hardware stack levels used:    1
  8199 ;; Hardware stack levels required when called:   17
  8200 ;; This function calls:
  8201 ;;		_convert_dac_raw
  8202 ;; This function is called by:
  8203 ;;		_main
  8204 ;; This function uses a reentrant model
  8205 ;;
  8206                           
  8207                           	psect	text8
  8208  002698                     __ptext8:
  8209                           	opt callstack 0
  8210  002698                     _set_dac_b:
  8211                           	opt callstack 13
  8212                           
  8213                           ;daq.c: 308: uint16_t set_dac_b(const float voltage);daq.c: 309: {;daq.c: 310:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  8214                           ;stkvar	_voltage @ sp[(0)+-4]
  8215                           
  8216                           ; BSR set to: 1
  8217                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8218                           ;incstack = 0
  8219  002698  0EFC               	movlw	-4
  8220  00269A  006F FF8F FFE6     	movff	plusw1,postinc1
  8221  0026A0  006F FF8F FFE6     	movff	plusw1,postinc1
  8222  0026A6  006F FF8F FFE6     	movff	plusw1,postinc1
  8223  0026AC  006F FF8F FFE6     	movff	plusw1,postinc1
  8224  0026B2  ECB7  F0FD         	call	_convert_dac_raw	;wreg free
  8225  0026B6  0060  F0A8  F122   	movff	btemp,_R+34	;volatile
  8226  0026BC  0060  F0AC  F123   	movff	btemp+1,_R+35	;volatile
  8227                           
  8228                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8229                           
  8230                           ;daq.c: 311:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  8231  0026C2  52E5               	movf	postdec1,f,c
  8232  0026C4  52E5               	movf	postdec1,f,c
  8233  0026C6  52E5               	movf	postdec1,f,c
  8234  0026C8  52E5               	movf	postdec1,f,c
  8235  0026CA  0012               	return		;funcret
  8236  0026CC                     __end_of_set_dac_b:
  8237                           	opt callstack 0
  8238                           
  8239 ;; *************** function _set_dac_a *****************
  8240 ;; Defined at:
  8241 ;;		line 299 in file "daq.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  voltage         4  [STACK] const float 
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;		None
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  2  [STACK] unsigned short 
  8248 ;; Registers used:
  8249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8250 ;; Tracked objects:
  8251 ;;		On entry : 3F/0
  8252 ;;		On exit  : 0/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8259 ;;Total ram usage:        0 bytes
  8260 ;; Hardware stack levels used:    1
  8261 ;; Hardware stack levels required when called:   17
  8262 ;; This function calls:
  8263 ;;		_convert_dac_raw
  8264 ;; This function is called by:
  8265 ;;		_main
  8266 ;; This function uses a reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text9
  8270  0026CC                     __ptext9:
  8271                           	opt callstack 0
  8272  0026CC                     _set_dac_a:
  8273                           	opt callstack 13
  8274                           
  8275                           ;daq.c: 299: uint16_t set_dac_a(const float voltage);daq.c: 300: {;daq.c: 301:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  8276                           ;stkvar	_voltage @ sp[(0)+-4]
  8277                           
  8278                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8279                           ;incstack = 0
  8280  0026CC  0EFC               	movlw	-4
  8281  0026CE  006F FF8F FFE6     	movff	plusw1,postinc1
  8282  0026D4  006F FF8F FFE6     	movff	plusw1,postinc1
  8283  0026DA  006F FF8F FFE6     	movff	plusw1,postinc1
  8284  0026E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8285  0026E6  ECB7  F0FD         	call	_convert_dac_raw	;wreg free
  8286  0026EA  0060  F0A8  F120   	movff	btemp,_R+32	;volatile
  8287  0026F0  0060  F0AC  F121   	movff	btemp+1,_R+33	;volatile
  8288                           
  8289                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8290                           
  8291                           ;daq.c: 302:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  8292  0026F6  52E5               	movf	postdec1,f,c
  8293  0026F8  52E5               	movf	postdec1,f,c
  8294  0026FA  52E5               	movf	postdec1,f,c
  8295  0026FC  52E5               	movf	postdec1,f,c
  8296  0026FE  0012               	return		;funcret
  8297  002700                     __end_of_set_dac_a:
  8298                           	opt callstack 0
  8299                           
  8300 ;; *************** function _convert_dac_raw *****************
  8301 ;; Defined at:
  8302 ;;		line 281 in file "daq.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;  voltage         4  [STACK] float 
  8305 ;; Auto vars:     Size  Location     Type
  8306 ;;		None
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  2  [STACK] unsigned short 
  8309 ;; Registers used:
  8310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8311 ;; Tracked objects:
  8312 ;;		On entry : 0/0
  8313 ;;		On exit  : 0/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8320 ;;Total ram usage:        0 bytes
  8321 ;; Hardware stack levels used:    1
  8322 ;; Hardware stack levels required when called:   16
  8323 ;; This function calls:
  8324 ;;		___fldiv
  8325 ;;		___flge
  8326 ;;		___fltol
  8327 ;; This function is called by:
  8328 ;;		_set_dac_a
  8329 ;;		_set_dac_b
  8330 ;; This function uses a reentrant model
  8331 ;;
  8332                           
  8333                           	psect	text10
  8334  01FB6E                     __ptext10:
  8335                           	opt callstack 0
  8336  01FB6E                     _convert_dac_raw:
  8337                           	opt callstack 13
  8338                           
  8339                           ;daq.c: 281: static uint16_t convert_dac_raw(float voltage);daq.c: 282: {;daq.c: 286:  i
      +                          f (voltage < 0.001)
  8340                           
  8341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8342                           ;incstack = 0
  8343  01FB6E  0E6F               	movlw	111
  8344  01FB70  6EE6               	movwf	postinc1,c
  8345  01FB72  0E12               	movlw	18
  8346  01FB74  6EE6               	movwf	postinc1,c
  8347  01FB76  0E83               	movlw	131
  8348  01FB78  6EE6               	movwf	postinc1,c
  8349  01FB7A  0E3A               	movlw	58
  8350  01FB7C  6EE6               	movwf	postinc1,c
  8351                           
  8352                           ;stkvar	_voltage @ sp[(-4)+-4]
  8353  01FB7E  0EF8               	movlw	-8
  8354  01FB80  006F FF8F FFE6     	movff	plusw1,postinc1
  8355  01FB86  006F FF8F FFE6     	movff	plusw1,postinc1
  8356  01FB8C  006F FF8F FFE6     	movff	plusw1,postinc1
  8357  01FB92  006F FF8F FFE6     	movff	plusw1,postinc1
  8358  01FB98  ECA9  F0F6         	call	___flge	;wreg free
  8359  01FB9C  B02A               	btfsc	btemp& (0+255),0,c
  8360  01FB9E  D018               	goto	l13809
  8361                           
  8362                           ;daq.c: 287:   voltage = 0.001;
  8363  01FBA0  0E6F               	movlw	111
  8364  01FBA2  6E32               	movwf	(btemp+8)^0,c
  8365  01FBA4  0E12               	movlw	18
  8366  01FBA6  6E33               	movwf	(btemp+9)^0,c
  8367  01FBA8  0E83               	movlw	131
  8368  01FBAA  6E34               	movwf	(btemp+10)^0,c
  8369  01FBAC  0E3A               	movlw	58
  8370  01FBAE  6E35               	movwf	(btemp+11)^0,c
  8371                           
  8372                           ;stkvar	_voltage @ sp[(0)+-4]
  8373  01FBB0  0EFC               	movlw	-4
  8374  01FBB2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8375  01FBB8  0EFD               	movlw	-3
  8376  01FBBA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8377  01FBC0  0EFE               	movlw	-2
  8378  01FBC2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8379  01FBC8  0EFF               	movlw	-1
  8380  01FBCA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8381  01FBD0                     l13809:
  8382                           
  8383                           ;daq.c: 288:  if (voltage > 10.0)
  8384                           ;stkvar	_voltage @ sp[(0)+-4]
  8385  01FBD0  0EFC               	movlw	-4
  8386  01FBD2  006F FF8F FFE6     	movff	plusw1,postinc1
  8387  01FBD8  006F FF8F FFE6     	movff	plusw1,postinc1
  8388  01FBDE  006F FF8F FFE6     	movff	plusw1,postinc1
  8389  01FBE4  006F FF8F FFE6     	movff	plusw1,postinc1
  8390  01FBEA  0E00               	movlw	0
  8391  01FBEC  6EE6               	movwf	postinc1,c
  8392  01FBEE  0E00               	movlw	0
  8393  01FBF0  6EE6               	movwf	postinc1,c
  8394  01FBF2  0E20               	movlw	32
  8395  01FBF4  6EE6               	movwf	postinc1,c
  8396  01FBF6  0E41               	movlw	65
  8397  01FBF8  6EE6               	movwf	postinc1,c
  8398  01FBFA  ECA9  F0F6         	call	___flge	;wreg free
  8399  01FBFE  B02A               	btfsc	btemp& (0+255),0,c
  8400  01FC00  D018               	goto	l13813
  8401                           
  8402                           ;daq.c: 289:   voltage = 10.0;
  8403  01FC02  0E00               	movlw	0
  8404  01FC04  6E32               	movwf	(btemp+8)^0,c
  8405  01FC06  0E00               	movlw	0
  8406  01FC08  6E33               	movwf	(btemp+9)^0,c
  8407  01FC0A  0E20               	movlw	32
  8408  01FC0C  6E34               	movwf	(btemp+10)^0,c
  8409  01FC0E  0E41               	movlw	65
  8410  01FC10  6E35               	movwf	(btemp+11)^0,c
  8411                           
  8412                           ;stkvar	_voltage @ sp[(0)+-4]
  8413  01FC12  0EFC               	movlw	-4
  8414  01FC14  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8415  01FC1A  0EFD               	movlw	-3
  8416  01FC1C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8417  01FC22  0EFE               	movlw	-2
  8418  01FC24  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8419  01FC2A  0EFF               	movlw	-1
  8420  01FC2C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8421  01FC32                     l13813:
  8422                           
  8423                           ;daq.c: 293:  return(uint16_t) (voltage / 0.002442);
  8424  01FC32  0EF6               	movlw	246
  8425  01FC34  6EE6               	movwf	postinc1,c
  8426  01FC36  0E09               	movlw	9
  8427  01FC38  6EE6               	movwf	postinc1,c
  8428  01FC3A  0E20               	movlw	32
  8429  01FC3C  6EE6               	movwf	postinc1,c
  8430  01FC3E  0E3B               	movlw	59
  8431  01FC40  6EE6               	movwf	postinc1,c
  8432                           
  8433                           ;stkvar	_voltage @ sp[(-4)+-4]
  8434  01FC42  0EF8               	movlw	-8
  8435  01FC44  006F FF8F FFE6     	movff	plusw1,postinc1
  8436  01FC4A  006F FF8F FFE6     	movff	plusw1,postinc1
  8437  01FC50  006F FF8F FFE6     	movff	plusw1,postinc1
  8438  01FC56  006F FF8F FFE6     	movff	plusw1,postinc1
  8439  01FC5C  EC78  F0C3         	call	___fldiv	;wreg free
  8440  01FC60  0060  F0AB  FFE6   	movff	btemp,postinc1
  8441  01FC66  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  8442  01FC6C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  8443  01FC72  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  8444  01FC78  EC3D  F0F5         	call	___fltol	;wreg free
  8445                           
  8446                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  8447  01FC7C  52E5               	movf	postdec1,f,c
  8448  01FC7E  52E5               	movf	postdec1,f,c
  8449  01FC80  52E5               	movf	postdec1,f,c
  8450  01FC82  52E5               	movf	postdec1,f,c
  8451  01FC84  0012               	return		;funcret
  8452  01FC86                     __end_of_convert_dac_raw:
  8453                           	opt callstack 0
  8454                           
  8455 ;; *************** function _set_dac *****************
  8456 ;; Defined at:
  8457 ;;		line 257 in file "daq.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;		None
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;		None
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  1  [STACK] void 
  8464 ;; Registers used:
  8465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8475 ;;Total ram usage:        0 bytes
  8476 ;; Hardware stack levels used:    1
  8477 ;; Hardware stack levels required when called:   16
  8478 ;; This function calls:
  8479 ;;		_SPI1_Exchange8bit
  8480 ;;		_dac_spi_control
  8481 ;; This function is called by:
  8482 ;;		_main
  8483 ;; This function uses a reentrant model
  8484 ;;
  8485                           
  8486                           	psect	text11
  8487  000C8A                     __ptext11:
  8488                           	opt callstack 0
  8489  000C8A                     _set_dac:
  8490                           	opt callstack 14
  8491                           
  8492                           ;daq.c: 259:  while (!SPI1STATUSbits.TXBE);
  8493                           
  8494                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8495                           ;incstack = 0
  8496  000C8A  013D               	movlb	61	; () banked
  8497  000C8C  AB17               	btfss	23,5,b	;volatile
  8498  000C8E  D7FD               	goto	_set_dac
  8499                           
  8500                           ; BSR set to: 61
  8501                           
  8502                           ;daq.c: 260:  do { LATCbits.LATC2 = 1; } while(0);
  8503  000C90  84BC               	bsf	188,2,c	;volatile
  8504                           
  8505                           ; BSR set to: 61
  8506                           
  8507                           ;daq.c: 261:  do { LATCbits.LATC0 = 1; } while(0);
  8508  000C92  80BC               	bsf	188,0,c	;volatile
  8509                           
  8510                           ; BSR set to: 61
  8511                           ;daq.c: 262:  dac_spi_control(1);
  8512  000C94  0E01               	movlw	1
  8513  000C96  6EE6               	movwf	postinc1,c
  8514  000C98  EC25  F00C         	call	_dac_spi_control	;wreg free
  8515                           
  8516                           ;daq.c: 263:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  8517  000C9C  C120  F124         	movff	_R+32,_R+36	;volatile
  8518                           
  8519                           ;daq.c: 264:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  8520  000CA0  EE20  F120         	lfsr	2,_R+32	;volatile
  8521  000CA4  006F FF78  F034    	movff	postinc2,btemp+10
  8522  000CAA  006F FF74  F035    	movff	postdec2,btemp+11
  8523  000CB0  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8524  000CB6  6A35               	clrf	(btemp+11)^0,c
  8525  000CB8  0E0F               	movlw	15
  8526  000CBA  1634               	andwf	(btemp+10)^0,f,c
  8527  000CBC  0101               	movlb	1	; () banked
  8528  000CBE  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8529  000CC0  1834               	xorwf	(btemp+10)^0,w,c
  8530  000CC2  0BF0               	andlw	-16
  8531  000CC4  1834               	xorwf	(btemp+10)^0,w,c
  8532  000CC6  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8533                           
  8534                           ; BSR set to: 1
  8535                           ;daq.c: 265:  R.max5322_cmd.map.cont = 0b0100;
  8536  000CC8  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8537  000CCA  0B0F               	andlw	-241
  8538  000CCC  0940               	iorlw	64
  8539  000CCE  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8540                           
  8541                           ; BSR set to: 1
  8542  000CD0  90BF               	bcf	191,0,c	;volatile
  8543                           
  8544                           ; BSR set to: 1
  8545                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8546  000CD2  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8547  000CD4  6EE6               	movwf	postinc1,c
  8548  000CD6  EC7E  F016         	call	_SPI1_Exchange8bit	;wreg free
  8549                           
  8550                           ; BSR set to: 57
  8551                           ;daq.c: 268:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8552  000CDA  0101               	movlb	1	; () banked
  8553  000CDC  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8554  000CDE  6EE6               	movwf	postinc1,c
  8555  000CE0  EC7E  F016         	call	_SPI1_Exchange8bit	;wreg free
  8556                           
  8557                           ; BSR set to: 57
  8558  000CE4  80BF               	bsf	191,0,c	;volatile
  8559                           
  8560                           ; BSR set to: 57
  8561                           ;daq.c: 270:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  8562  000CE6  C122  F124         	movff	_R+34,_R+36	;volatile
  8563                           
  8564                           ; BSR set to: 57
  8565                           ;daq.c: 271:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  8566  000CEA  EE20  F122         	lfsr	2,_R+34	;volatile
  8567  000CEE  006F FF78  F034    	movff	postinc2,btemp+10
  8568  000CF4  006F FF74  F035    	movff	postdec2,btemp+11
  8569  000CFA  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8570  000D00  6A35               	clrf	(btemp+11)^0,c
  8571  000D02  0E0F               	movlw	15
  8572  000D04  1634               	andwf	(btemp+10)^0,f,c
  8573  000D06  0101               	movlb	1	; () banked
  8574  000D08  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8575  000D0A  1834               	xorwf	(btemp+10)^0,w,c
  8576  000D0C  0BF0               	andlw	-16
  8577  000D0E  1834               	xorwf	(btemp+10)^0,w,c
  8578  000D10  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8579                           
  8580                           ; BSR set to: 1
  8581                           ;daq.c: 272:  R.max5322_cmd.map.cont = 0b0101;
  8582  000D12  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8583  000D14  0B0F               	andlw	-241
  8584  000D16  0950               	iorlw	80
  8585  000D18  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8586                           
  8587                           ; BSR set to: 1
  8588  000D1A  90BF               	bcf	191,0,c	;volatile
  8589                           
  8590                           ; BSR set to: 1
  8591                           ;daq.c: 274:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8592  000D1C  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8593  000D1E  6EE6               	movwf	postinc1,c
  8594  000D20  EC7E  F016         	call	_SPI1_Exchange8bit	;wreg free
  8595                           
  8596                           ; BSR set to: 57
  8597                           ;daq.c: 275:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8598  000D24  0101               	movlb	1	; () banked
  8599  000D26  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8600  000D28  6EE6               	movwf	postinc1,c
  8601  000D2A  EC7E  F016         	call	_SPI1_Exchange8bit	;wreg free
  8602  000D2E                     l2044:
  8603  000D2E  013D               	movlb	61	; () banked
  8604  000D30  AB17               	btfss	23,5,b	;volatile
  8605  000D32  D7FD               	goto	l2044
  8606                           
  8607                           ; BSR set to: 61
  8608                           
  8609                           ;daq.c: 277:  do { LATFbits.LATF0 = 1; } while(0);
  8610  000D34  80BF               	bsf	191,0,c	;volatile
  8611                           
  8612                           ; BSR set to: 61
  8613                           ;daq.c: 278:  dac_spi_control(0);
  8614  000D36  0E00               	movlw	0
  8615  000D38  6EE6               	movwf	postinc1,c
  8616  000D3A  EC25  F00C         	call	_dac_spi_control	;wreg free
  8617                           
  8618                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  8619  000D3E  0012               	return		;funcret
  8620  000D40                     __end_of_set_dac:
  8621                           	opt callstack 0
  8622                           
  8623 ;; *************** function _dac_spi_control *****************
  8624 ;; Defined at:
  8625 ;;		line 209 in file "daq.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;  set             1  [STACK] _Bool 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;		None
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  1  [STACK] void 
  8632 ;; Registers used:
  8633 ;;		wreg, fsr1l, fsr1h, status,2
  8634 ;; Tracked objects:
  8635 ;;		On entry : 3F/3D
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8643 ;;Total ram usage:        0 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:   15
  8646 ;; This function calls:
  8647 ;;		Nothing
  8648 ;; This function is called by:
  8649 ;;		_set_dac
  8650 ;; This function uses a reentrant model
  8651 ;;
  8652                           
  8653                           	psect	text12
  8654  00184A                     __ptext12:
  8655                           	opt callstack 0
  8656  00184A                     _dac_spi_control:
  8657                           	opt callstack 14
  8658                           
  8659                           ;daq.c: 209: void dac_spi_control(_Bool set);daq.c: 210: {;daq.c: 211:  static _Bool ini
      +                          t = 0;;daq.c: 212:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 214:  if (set) {
  8660                           ;stkvar	_set @ sp[(0)+-1]
  8661                           
  8662                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8663                           ;incstack = 0
  8664  00184A  0EFF               	movlw	-1
  8665  00184C  50E3               	movf	plusw1,w,c
  8666  00184E  B4D8               	btfsc	status,2,c
  8667  001850  D022               	goto	l13801
  8668                           
  8669                           ;daq.c: 215:   SPI1CON0bits.EN = 0;
  8670  001852  013D               	movlb	61	; () banked
  8671  001854  9F14               	bcf	20,7,b	;volatile
  8672                           
  8673                           ; BSR set to: 61
  8674                           ;daq.c: 216:   if (!init) {
  8675  001856  5052               	movf	dac_spi_control@init^0,w,c
  8676  001858  A4D8               	btfss	status,2,c
  8677  00185A  D011               	goto	l13789
  8678                           
  8679                           ; BSR set to: 61
  8680                           ;daq.c: 217:    init = 1;
  8681  00185C  0E01               	movlw	1
  8682  00185E  6E52               	movwf	dac_spi_control@init^0,c
  8683                           
  8684                           ; BSR set to: 61
  8685                           ;daq.c: 218:    S0 = SPI1CON0;
  8686  001860  006F F450  F0CB    	movff	15636,dac_spi_control@S0	;volatile
  8687                           
  8688                           ; BSR set to: 61
  8689                           ;daq.c: 219:    S1 = SPI1CON1;
  8690  001866  006F F454  F0CA    	movff	15637,dac_spi_control@S1	;volatile
  8691                           
  8692                           ; BSR set to: 61
  8693                           ;daq.c: 220:    S2 = SPI1CON2;
  8694  00186C  006F F458  F0C9    	movff	15638,dac_spi_control@S2	;volatile
  8695                           
  8696                           ; BSR set to: 61
  8697                           ;daq.c: 221:    SC = SPI1CLK;
  8698  001872  006F F470  F0C8    	movff	15644,dac_spi_control@SC	;volatile
  8699                           
  8700                           ; BSR set to: 61
  8701                           ;daq.c: 222:    SB = SPI1BAUD;
  8702  001878  006F F464  F0C7    	movff	15641,dac_spi_control@SB	;volatile
  8703  00187E                     l13789:
  8704                           
  8705                           ; BSR set to: 61
  8706                           ;daq.c: 228:   SPI1CON1 = 0x00;
  8707  00187E  6B15               	clrf	21,b	;volatile
  8708                           
  8709                           ; BSR set to: 61
  8710                           ;daq.c: 229:   SPI1CON1bits.CKE = 1;
  8711  001880  8D15               	bsf	21,6,b	;volatile
  8712                           
  8713                           ; BSR set to: 61
  8714                           ;daq.c: 230:   SPI1CON1bits.CKP = 0;
  8715  001882  9B15               	bcf	21,5,b	;volatile
  8716                           
  8717                           ; BSR set to: 61
  8718                           ;daq.c: 231:   SPI1CON1bits.SMP = 0;
  8719  001884  9F15               	bcf	21,7,b	;volatile
  8720                           
  8721                           ;daq.c: 233:   SPI1CON2 = 0x03;
  8722  001886  0E03               	movlw	3
  8723  001888  6F16               	movwf	22,b	;volatile
  8724                           
  8725                           ;daq.c: 235:   SPI1BAUD = 0x0f;
  8726  00188A  0E0F               	movlw	15
  8727  00188C  6F19               	movwf	25,b	;volatile
  8728                           
  8729                           ; BSR set to: 61
  8730                           ;daq.c: 237:   SPI1CLK = 0x00;
  8731  00188E  6B1C               	clrf	28,b	;volatile
  8732                           
  8733                           ;daq.c: 239:   SPI1CON0 = 0x83;
  8734  001890  0E83               	movlw	131
  8735  001892  6F14               	movwf	20,b	;volatile
  8736  001894  D014               	goto	L4
  8737  001896                     l13801:
  8738                           
  8739                           ;daq.c: 242:   if (init) {
  8740  001896  5052               	movf	dac_spi_control@init^0,w,c
  8741  001898  B4D8               	btfsc	status,2,c
  8742  00189A  D012               	goto	l2028
  8743                           
  8744                           ;daq.c: 246:    SPI1CON0bits.EN = 0;
  8745  00189C  013D               	movlb	61	; () banked
  8746  00189E  9F14               	bcf	20,7,b	;volatile
  8747                           
  8748                           ;daq.c: 247:    SPI1CON1 = S1;
  8749  0018A0  0060  F32B  FD15   	movff	dac_spi_control@S1,15637	;volatile
  8750                           
  8751                           ;daq.c: 248:    SPI1CON2 = S2;
  8752  0018A6  0060  F327  FD16   	movff	dac_spi_control@S2,15638	;volatile
  8753                           
  8754                           ;daq.c: 249:    SPI1CLK = SC;
  8755  0018AC  0060  F323  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  8756                           
  8757                           ;daq.c: 250:    SPI1BAUD = SB;
  8758  0018B2  0060  F31F  FD19   	movff	dac_spi_control@SB,15641	;volatile
  8759                           
  8760                           ;daq.c: 251:    SPI1CON0 = S0;
  8761  0018B8  0060  F32F  FD14   	movff	dac_spi_control@S0,15636	;volatile
  8762  0018BE                     L4:
  8763                           
  8764                           ;daq.c: 252:    SPI1CON0bits.EN = 1;
  8765  0018BE  8F14               	bsf	20,7,b	;volatile
  8766  0018C0                     l2028:
  8767                           
  8768                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  8769  0018C0  52E5               	movf	postdec1,f,c
  8770  0018C2  0012               	return		;funcret
  8771  0018C4                     __end_of_dac_spi_control:
  8772                           	opt callstack 0
  8773                           
  8774 ;; *************** function _read_cal_data *****************
  8775 ;; Defined at:
  8776 ;;		line 370 in file "daq.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;		None
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;  x               2  [STACK] unsigned short 
  8781 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  8782 ;;		 -> r_cal(155), 
  8783 ;;  y               2  [STACK] unsigned short 
  8784 ;;  crcVal_save     1  [STACK] unsigned char 
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  1  [STACK] _Bool 
  8787 ;; Registers used:
  8788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/39
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8798 ;;Total ram usage:        0 bytes
  8799 ;; Hardware stack levels used:    1
  8800 ;; Hardware stack levels required when called:   17
  8801 ;; This function calls:
  8802 ;;		_CRC_8BitDataWrite
  8803 ;;		_CRC_CalculatedResultGet
  8804 ;;		_CRC_Initialize
  8805 ;;		_CRC_IsBusy
  8806 ;;		_CRC_Start
  8807 ;;		_DATAEE_ReadByte
  8808 ;; This function is called by:
  8809 ;;		_main
  8810 ;; This function uses a reentrant model
  8811 ;;
  8812                           
  8813                           	psect	text13
  8814  01DC22                     __ptext13:
  8815                           	opt callstack 0
  8816  01DC22                     _read_cal_data:
  8817                           	opt callstack 0
  8818                           
  8819                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8820  01DC22  0E07               	movlw	7
  8821  01DC24  26E1               	addwf	fsr1l,f,c
  8822  01DC26  0E00               	movlw	0
  8823  01DC28  22E2               	addwfc	fsr1h,f,c
  8824                           
  8825                           ;daq.c: 372:  uint16_t x = 0, y;
  8826                           ;stkvar	_x @ sp[(-7)+0]
  8827                           
  8828                           ;incstack = 0
  8829  01DC2A  0EF9               	movlw	-7
  8830  01DC2C  6AE3               	clrf	plusw1,c
  8831  01DC2E  0EFA               	movlw	-6
  8832  01DC30  6AE3               	clrf	plusw1,c
  8833                           
  8834                           ;daq.c: 373:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 375:  y = sizeof(r_cal);
  8835  01DC32  0E9B               	movlw	155
  8836  01DC34  6E34               	movwf	(btemp+10)^0,c
  8837  01DC36  0E00               	movlw	0
  8838  01DC38  6E35               	movwf	(btemp+11)^0,c
  8839                           
  8840                           ;stkvar	_y @ sp[(-7)+4]
  8841  01DC3A  0EFD               	movlw	-3
  8842  01DC3C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8843  01DC42  0EFE               	movlw	-2
  8844  01DC44  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8845                           
  8846                           ;daq.c: 376:  r_cal_ptr = (uint8_t*) & r_cal;
  8847                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8848  01DC4A  0E04               	movlw	high _r_cal
  8849  01DC4C  6E2A               	movwf	btemp^0,c
  8850  01DC4E  0EFC               	movlw	-4
  8851  01DC50  0060  F0AB  FFE3   	movff	btemp,plusw1
  8852  01DC56  0E40               	movlw	low _r_cal
  8853  01DC58  6E2A               	movwf	btemp^0,c
  8854  01DC5A  0EFB               	movlw	-5
  8855  01DC5C  0060  F0AB  FFE3   	movff	btemp,plusw1
  8856                           
  8857                           ;daq.c: 378:  CRC_Initialize();
  8858  01DC62  EC55  F00A         	call	_CRC_Initialize	;wreg free
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;daq.c: 381:  CRC_Start();
  8862  01DC66  ECB4  F017         	call	_CRC_Start	;wreg free
  8863  01DC6A                     l14235:
  8864                           
  8865                           ;daq.c: 384:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  8866                           ;stkvar	_x @ sp[(-7)+0]
  8867  01DC6A  0EF9               	movlw	-7
  8868  01DC6C  006F FF8F FFE6     	movff	plusw1,postinc1
  8869  01DC72  006F FF8F FFE6     	movff	plusw1,postinc1
  8870  01DC78  EC9A  F013         	call	_DATAEE_ReadByte	;wreg free
  8871                           
  8872                           ;stkvar	_x @ sp[(-7)+0]
  8873  01DC7C  0EF9               	movlw	-7
  8874  01DC7E  006F FF8C  F034    	movff	plusw1,btemp+10
  8875  01DC84  0EFA               	movlw	-6
  8876  01DC86  006F FF8C  F035    	movff	plusw1,btemp+11
  8877                           
  8878                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8879  01DC8C  0EFB               	movlw	-5
  8880  01DC8E  006F FF8C  F032    	movff	plusw1,btemp+8
  8881  01DC94  0EFC               	movlw	-4
  8882  01DC96  006F FF8C  F033    	movff	plusw1,btemp+9
  8883  01DC9C  5034               	movf	(btemp+10)^0,w,c
  8884  01DC9E  2432               	addwf	(btemp+8)^0,w,c
  8885  01DCA0  6ED9               	movwf	fsr2l,c
  8886  01DCA2  5035               	movf	(btemp+11)^0,w,c
  8887  01DCA4  2033               	addwfc	(btemp+9)^0,w,c
  8888  01DCA6  6EDA               	movwf	fsr2h,c
  8889  01DCA8  0060  F0AB  FFDF   	movff	btemp,indf2
  8890                           
  8891                           ;daq.c: 385:  } while (++x < y);
  8892                           ;stkvar	_y @ sp[(-7)+4]
  8893  01DCAE  0EFD               	movlw	-3
  8894  01DCB0  006F FF8C  F034    	movff	plusw1,btemp+10
  8895  01DCB6  0EFE               	movlw	-2
  8896  01DCB8  006F FF8C  F035    	movff	plusw1,btemp+11
  8897                           
  8898                           ;stkvar	_x @ sp[(-7)+0]
  8899  01DCBE  0EF9               	movlw	-7
  8900  01DCC0  50E3               	movf	plusw1,w,c
  8901  01DCC2  0F01               	addlw	1
  8902  01DCC4  6E2A               	movwf	btemp^0,c
  8903  01DCC6  0EF9               	movlw	-7
  8904  01DCC8  0060  F0AB  FFE3   	movff	btemp,plusw1
  8905  01DCCE  6A2A               	clrf	btemp^0,c
  8906  01DCD0  0EFA               	movlw	-6
  8907  01DCD2  50E3               	movf	plusw1,w,c
  8908  01DCD4  202A               	addwfc	btemp^0,w,c
  8909  01DCD6  6E2A               	movwf	btemp^0,c
  8910  01DCD8  0EFA               	movlw	-6
  8911  01DCDA  0060  F0AB  FFE3   	movff	btemp,plusw1
  8912  01DCE0  0EF9               	movlw	-7
  8913  01DCE2  006F FF8C  F032    	movff	plusw1,btemp+8
  8914  01DCE8  0EFA               	movlw	-6
  8915  01DCEA  006F FF8C  F033    	movff	plusw1,btemp+9
  8916  01DCF0  5034               	movf	(btemp+10)^0,w,c
  8917  01DCF2  5C32               	subwf	(btemp+8)^0,w,c
  8918  01DCF4  5035               	movf	(btemp+11)^0,w,c
  8919  01DCF6  5833               	subwfb	(btemp+9)^0,w,c
  8920  01DCF8  A0D8               	btfss	status,0,c
  8921  01DCFA  D7B7               	goto	l14235
  8922                           
  8923                           ;daq.c: 386:  crcVal_save = r_cal.crc;
  8924                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8925  01DCFC  0EFF               	movlw	-1
  8926  01DCFE  0061  F36B  FFE3   	movff	_r_cal+154,plusw1
  8927                           
  8928                           ;daq.c: 388:  if (r_cal.checkmark == 0x1957) {
  8929  01DD04  0E57               	movlw	87
  8930  01DD06  0104               	movlb	4	; () banked
  8931  01DD08  19D8               	xorwf	(_r_cal+152)& (0+255),w,b
  8932  01DD0A  E163               	bnz	l14255
  8933  01DD0C  0E19               	movlw	25
  8934  01DD0E  19D9               	xorwf	(_r_cal+153)& (0+255),w,b
  8935  01DD10  A4D8               	btfss	status,2,c
  8936  01DD12  D05F               	goto	u13450
  8937                           
  8938                           ; BSR set to: 4
  8939                           ;daq.c: 389:   r_cal.crc = 0x42;
  8940  01DD14  0E42               	movlw	66
  8941  01DD16  6FDA               	movwf	(_r_cal+154)& (0+255),b
  8942                           
  8943                           ; BSR set to: 4
  8944                           ;daq.c: 390:   x = 0;
  8945                           ;stkvar	_x @ sp[(-7)+0]
  8946  01DD18  0EF9               	movlw	-7
  8947  01DD1A  6AE3               	clrf	plusw1,c
  8948  01DD1C  0EFA               	movlw	-6
  8949  01DD1E  6AE3               	clrf	plusw1,c
  8950  01DD20                     l14247:
  8951                           
  8952                           ;daq.c: 393:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8953                           ;stkvar	_x @ sp[(-7)+0]
  8954  01DD20  0EF9               	movlw	-7
  8955  01DD22  006F FF8C  F034    	movff	plusw1,btemp+10
  8956  01DD28  0EFA               	movlw	-6
  8957  01DD2A  006F FF8C  F035    	movff	plusw1,btemp+11
  8958                           
  8959                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8960  01DD30  0EFB               	movlw	-5
  8961  01DD32  006F FF8C  F032    	movff	plusw1,btemp+8
  8962  01DD38  0EFC               	movlw	-4
  8963  01DD3A  006F FF8C  F033    	movff	plusw1,btemp+9
  8964  01DD40  5034               	movf	(btemp+10)^0,w,c
  8965  01DD42  2432               	addwf	(btemp+8)^0,w,c
  8966  01DD44  6ED9               	movwf	fsr2l,c
  8967  01DD46  5035               	movf	(btemp+11)^0,w,c
  8968  01DD48  2033               	addwfc	(btemp+9)^0,w,c
  8969  01DD4A  6EDA               	movwf	fsr2h,c
  8970  01DD4C  50DF               	movf	indf2,w,c
  8971  01DD4E  6EE6               	movwf	postinc1,c
  8972  01DD50  EC23  F017         	call	_CRC_8BitDataWrite	;wreg free
  8973  01DD54                     l14249:
  8974  01DD54  EC45  F017         	call	_CRC_IsBusy	;wreg free
  8975  01DD58  502A               	movf	btemp^0,w,c
  8976  01DD5A  A4D8               	btfss	status,2,c
  8977  01DD5C  D7FB               	goto	l14249
  8978                           
  8979                           ;daq.c: 395:   } while (++x < y);
  8980                           ;stkvar	_y @ sp[(-7)+4]
  8981  01DD5E  0EFD               	movlw	-3
  8982  01DD60  006F FF8C  F034    	movff	plusw1,btemp+10
  8983  01DD66  0EFE               	movlw	-2
  8984  01DD68  006F FF8C  F035    	movff	plusw1,btemp+11
  8985                           
  8986                           ;stkvar	_x @ sp[(-7)+0]
  8987  01DD6E  0EF9               	movlw	-7
  8988  01DD70  50E3               	movf	plusw1,w,c
  8989  01DD72  0F01               	addlw	1
  8990  01DD74  6E2A               	movwf	btemp^0,c
  8991  01DD76  0EF9               	movlw	-7
  8992  01DD78  0060  F0AB  FFE3   	movff	btemp,plusw1
  8993  01DD7E  6A2A               	clrf	btemp^0,c
  8994  01DD80  0EFA               	movlw	-6
  8995  01DD82  50E3               	movf	plusw1,w,c
  8996  01DD84  202A               	addwfc	btemp^0,w,c
  8997  01DD86  6E2A               	movwf	btemp^0,c
  8998  01DD88  0EFA               	movlw	-6
  8999  01DD8A  0060  F0AB  FFE3   	movff	btemp,plusw1
  9000  01DD90  0EF9               	movlw	-7
  9001  01DD92  006F FF8C  F032    	movff	plusw1,btemp+8
  9002  01DD98  0EFA               	movlw	-6
  9003  01DD9A  006F FF8C  F033    	movff	plusw1,btemp+9
  9004  01DDA0  5034               	movf	(btemp+10)^0,w,c
  9005  01DDA2  5C32               	subwf	(btemp+8)^0,w,c
  9006  01DDA4  5035               	movf	(btemp+11)^0,w,c
  9007  01DDA6  5833               	subwfb	(btemp+9)^0,w,c
  9008  01DDA8  A0D8               	btfss	status,0,c
  9009  01DDAA  D7BA               	goto	l14247
  9010                           
  9011                           ;daq.c: 396:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  9012  01DDAC  0E00               	movlw	0
  9013  01DDAE  6EE6               	movwf	postinc1,c
  9014  01DDB0  0E00               	movlw	0
  9015  01DDB2  6EE6               	movwf	postinc1,c
  9016  01DDB4  0E00               	movlw	0
  9017  01DDB6  6EE6               	movwf	postinc1,c
  9018  01DDB8  EC84  F0F4         	call	_CRC_CalculatedResultGet	;wreg free
  9019                           
  9020                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  9021  01DDBC  0EFF               	movlw	-1
  9022  01DDBE  50E3               	movf	plusw1,w,c
  9023  01DDC0  6E34               	movwf	(btemp+10)^0,c
  9024  01DDC2  6A35               	clrf	(btemp+11)^0,c
  9025  01DDC4  5034               	movf	(btemp+10)^0,w,c
  9026  01DDC6  182A               	xorwf	btemp^0,w,c
  9027  01DDC8  E104               	bnz	u13450
  9028  01DDCA  5035               	movf	(btemp+11)^0,w,c
  9029  01DDCC  182B               	xorwf	(btemp+1)^0,w,c
  9030  01DDCE  B4D8               	btfsc	status,2,c
  9031  01DDD0  D002               	goto	l14263
  9032  01DDD2                     u13450:
  9033  01DDD2                     l14255:
  9034                           
  9035                           ;daq.c: 397:    return 0;
  9036  01DDD2  0E00               	movlw	0
  9037  01DDD4  D005               	goto	L5
  9038  01DDD6                     l14263:
  9039                           
  9040                           ;daq.c: 401:  r_cal.crc = crcVal_save;
  9041                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  9042  01DDD6  0EFF               	movlw	-1
  9043  01DDD8  006F FF8C  F4DA    	movff	plusw1,_r_cal+154
  9044                           
  9045                           ;daq.c: 402:  return 1;
  9046  01DDDE  0E01               	movlw	1
  9047  01DDE0                     L5:
  9048  01DDE0  6E2A               	movwf	btemp^0,c
  9049                           
  9050                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9051  01DDE2  0EF9               	movlw	249
  9052  01DDE4  26E1               	addwf	fsr1l,f,c
  9053  01DDE6  0EFF               	movlw	255
  9054  01DDE8  22E2               	addwfc	fsr1h,f,c
  9055  01DDEA  0012               	return		;funcret
  9056  01DDEC                     __end_of_read_cal_data:
  9057                           	opt callstack 0
  9058                           
  9059 ;; *************** function _DATAEE_ReadByte *****************
  9060 ;; Defined at:
  9061 ;;		line 194 in file "mcc_generated_files/memory.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  bAdd            2  [STACK] unsigned short 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;		None
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  1  [STACK] unsigned char 
  9068 ;; Registers used:
  9069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/39
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9079 ;;Total ram usage:        0 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; Hardware stack levels required when called:   15
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_read_cal_data
  9086 ;; This function uses a reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text14
  9090  002734                     __ptext14:
  9091                           	opt callstack 0
  9092  002734                     _DATAEE_ReadByte:
  9093                           	opt callstack 14
  9094                           
  9095                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  9096                           ;stkvar	_bAdd @ sp[(0)+-2]
  9097                           
  9098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9099                           ;incstack = 0
  9100  002734  0EFF               	movlw	255
  9101  002736  24E1               	addwf	fsr1l,w,c
  9102  002738  6ED9               	movwf	fsr2l,c
  9103  00273A  0EFF               	movlw	255
  9104  00273C  20E2               	addwfc	fsr1h,w,c
  9105  00273E  6EDA               	movwf	fsr2h,c
  9106  002740  50DF               	movf	indf2,w,c
  9107  002742  0B03               	andlw	3
  9108  002744  0139               	movlb	57	; () banked
  9109  002746  6FE1               	movwf	225,b	;volatile
  9110                           
  9111                           ; BSR set to: 57
  9112                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  9113                           ;stkvar	_bAdd @ sp[(0)+-2]
  9114  002748  0EFE               	movlw	-2
  9115  00274A  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  9116                           
  9117                           ; BSR set to: 57
  9118                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  9119  002750  0E3F               	movlw	-193
  9120  002752  17E5               	andwf	229,f,b	;volsfr
  9121                           
  9122                           ; BSR set to: 57
  9123                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  9124  002754  81E5               	bsf	229,0,b	;volsfr
  9125                           
  9126                           ; BSR set to: 57
  9127                           ;mcc_generated_files/memory.c: 200:     __nop();
  9128  002756  F000               	nop	
  9129                           
  9130                           ;mcc_generated_files/memory.c: 201:     __nop();
  9131  002758  F000               	nop	
  9132                           
  9133                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  9134  00275A  006E F78C  F02A    	movff	14819,btemp	;volatile
  9135                           
  9136                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  9137  002760  52E5               	movf	postdec1,f,c
  9138  002762  52E5               	movf	postdec1,f,c
  9139  002764  0012               	return		;funcret
  9140  002766                     __end_of_DATAEE_ReadByte:
  9141                           	opt callstack 0
  9142                           
  9143 ;; *************** function _load_hist_data *****************
  9144 ;; Defined at:
  9145 ;;		line 224 in file "mbmc.c"
  9146 ;; Parameters:    Size  Location     Type
  9147 ;;		None
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;  esr_rescale     2  [STACK] short 
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  1  [STACK] void 
  9152 ;; Registers used:
  9153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  9154 ;; Tracked objects:
  9155 ;;		On entry : 3F/1
  9156 ;;		On exit  : 3F/39
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9163 ;;Total ram usage:        0 bytes
  9164 ;; Hardware stack levels used:    1
  9165 ;; Hardware stack levels required when called:   16
  9166 ;; This function calls:
  9167 ;;		___fldiv
  9168 ;;		___flmul
  9169 ;;		___fltol
  9170 ;;		_start_bsoc
  9171 ;;		_stop_bsoc
  9172 ;;		_time
  9173 ;; This function is called by:
  9174 ;;		_main
  9175 ;; This function uses a reentrant model
  9176 ;;
  9177                           
  9178                           	psect	text15
  9179  01C87C                     __ptext15:
  9180                           	opt callstack 0
  9181  01C87C                     _load_hist_data:
  9182                           	opt callstack 0
  9183                           
  9184                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9185  01C87C  52E6               	movf	postinc1,f,c
  9186  01C87E  52E6               	movf	postinc1,f,c
  9187                           
  9188                           ;mbmc.c: 226:  int16_t esr_rescale;;mbmc.c: 228:  stop_bsoc();
  9189                           
  9190                           ;incstack = 0
  9191  01C880  ECC0  F017         	call	_stop_bsoc	;wreg free
  9192                           
  9193                           ; BSR set to: 57
  9194                           ;mbmc.c: 229:  esr_rescale = (int16_t) (C.esr * 1000.0);
  9195  01C884  0E00               	movlw	0
  9196  01C886  6EE6               	movwf	postinc1,c
  9197  01C888  0E00               	movlw	0
  9198  01C88A  6EE6               	movwf	postinc1,c
  9199  01C88C  0E7A               	movlw	122
  9200  01C88E  6EE6               	movwf	postinc1,c
  9201  01C890  0E44               	movlw	68
  9202  01C892  6EE6               	movwf	postinc1,c
  9203  01C894  EE22  F187         	lfsr	2,_C+136	;volatile
  9204  01C898  006F FF7B FFE6     	movff	postinc2,postinc1
  9205  01C89E  006F FF7B FFE6     	movff	postinc2,postinc1
  9206  01C8A4  006F FF7B FFE6     	movff	postinc2,postinc1
  9207  01C8AA  006F FF7B FFE6     	movff	postinc2,postinc1
  9208  01C8B0  EC27  F0B8         	call	___flmul	;wreg free
  9209  01C8B4  0060  F0AB  FFE6   	movff	btemp,postinc1
  9210  01C8BA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9211  01C8C0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9212  01C8C6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9213  01C8CC  EC3D  F0F5         	call	___fltol	;wreg free
  9214  01C8D0  0060  F0A8  F034   	movff	btemp,btemp+10
  9215  01C8D6  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9216                           
  9217                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9218  01C8DC  0EFE               	movlw	-2
  9219  01C8DE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  9220  01C8E4  0EFF               	movlw	-1
  9221  01C8E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9222                           
  9223                           ;mbmc.c: 230:  C.hist[0].updates++;
  9224  01C8EC  EE22  F1D9         	lfsr	2,_C+218	;volatile
  9225  01C8F0  2ADE               	incf	postinc2,f,c
  9226  01C8F2  0E00               	movlw	0
  9227  01C8F4  22DE               	addwfc	postinc2,f,c
  9228  01C8F6  22DE               	addwfc	postinc2,f,c
  9229  01C8F8  22DE               	addwfc	postinc2,f,c
  9230                           
  9231                           ;mbmc.c: 231:  C.hist[0].h[12] += (int16_t) (C.pvkw / 10.0);
  9232  01C8FA  0E00               	movlw	0
  9233  01C8FC  6EE6               	movwf	postinc1,c
  9234  01C8FE  0E00               	movlw	0
  9235  01C900  6EE6               	movwf	postinc1,c
  9236  01C902  0E20               	movlw	32
  9237  01C904  6EE6               	movwf	postinc1,c
  9238  01C906  0E41               	movlw	65
  9239  01C908  6EE6               	movwf	postinc1,c
  9240  01C90A  EE22  F1A7         	lfsr	2,_C+168	;volatile
  9241  01C90E  006F FF7B FFE6     	movff	postinc2,postinc1
  9242  01C914  006F FF7B FFE6     	movff	postinc2,postinc1
  9243  01C91A  006F FF7B FFE6     	movff	postinc2,postinc1
  9244  01C920  006F FF7B FFE6     	movff	postinc2,postinc1
  9245  01C926  EC78  F0C3         	call	___fldiv	;wreg free
  9246  01C92A  0060  F0AB  FFE6   	movff	btemp,postinc1
  9247  01C930  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9248  01C936  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9249  01C93C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9250  01C942  EC3D  F0F5         	call	___fltol	;wreg free
  9251  01C946  0060  F0A8  F034   	movff	btemp,btemp+10
  9252  01C94C  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9253  01C952  EE22  F1F5         	lfsr	2,_C+246	;volatile
  9254  01C956  5034               	movf	(btemp+10)^0,w,c
  9255  01C958  26DE               	addwf	postinc2,f,c
  9256  01C95A  5035               	movf	(btemp+11)^0,w,c
  9257  01C95C  22DD               	addwfc	postdec2,f,c
  9258                           
  9259                           ;mbmc.c: 232:  C.hist[0].h[11]++;
  9260  01C95E  EE22  F1F3         	lfsr	2,_C+244	;volatile
  9261  01C962  2ADE               	incf	postinc2,f,c
  9262  01C964  0E00               	movlw	0
  9263  01C966  22DD               	addwfc	postdec2,f,c
  9264                           
  9265                           ;mbmc.c: 233:  C.hist[10].h[10] = esr_rescale;
  9266                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9267  01C968  50E1               	movf	fsr1l,w,c
  9268  01C96A  0FFE               	addlw	-2
  9269  01C96C  6ED9               	movwf	fsr2l,c
  9270  01C96E  50E2               	movf	fsr1h,w,c
  9271  01C970  6EDA               	movwf	fsr2h,c
  9272  01C972  0EFF               	movlw	255
  9273  01C974  22DA               	addwfc	fsr2h,f,c
  9274  01C976  006F FF78  FDBB    	movff	postinc2,_C+1212	;volatile
  9275  01C97C  006F FF74  FDBC    	movff	postdec2,_C+1213	;volatile
  9276                           
  9277                           ;mbmc.c: 234:  C.hist[10].h[9] = esr_rescale;
  9278                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9279  01C982  50E1               	movf	fsr1l,w,c
  9280  01C984  0FFE               	addlw	-2
  9281  01C986  6ED9               	movwf	fsr2l,c
  9282  01C988  50E2               	movf	fsr1h,w,c
  9283  01C98A  6EDA               	movwf	fsr2h,c
  9284  01C98C  0EFF               	movlw	255
  9285  01C98E  22DA               	addwfc	fsr2h,f,c
  9286  01C990  006F FF78  FDB9    	movff	postinc2,_C+1210	;volatile
  9287  01C996  006F FF74  FDBA    	movff	postdec2,_C+1211	;volatile
  9288                           
  9289                           ;mbmc.c: 235:  C.hist[0].h[6] = C.dynamic_ah;
  9290  01C99C  EE22  F18F         	lfsr	2,_C+144	;volatile
  9291  01C9A0  006F FF7B FFE6     	movff	postinc2,postinc1
  9292  01C9A6  006F FF7B FFE6     	movff	postinc2,postinc1
  9293  01C9AC  006F FF7B FFE6     	movff	postinc2,postinc1
  9294  01C9B2  006F FF7B FFE6     	movff	postinc2,postinc1
  9295  01C9B8  EC3D  F0F5         	call	___fltol	;wreg free
  9296  01C9BC  0060  F0A8  F034   	movff	btemp,btemp+10
  9297  01C9C2  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9298  01C9C8  0060  F0D0  F9E9   	movff	btemp+10,_C+234	;volatile
  9299  01C9CE  0060  F0D4  F9EA   	movff	btemp+11,_C+235	;volatile
  9300                           
  9301                           ;mbmc.c: 236:  C.hist[0].h[0] = C.dynamic_ah_adj;
  9302  01C9D4  EE22  F19B         	lfsr	2,_C+156	;volatile
  9303  01C9D8  006F FF7B FFE6     	movff	postinc2,postinc1
  9304  01C9DE  006F FF7B FFE6     	movff	postinc2,postinc1
  9305  01C9E4  006F FF7B FFE6     	movff	postinc2,postinc1
  9306  01C9EA  006F FF7B FFE6     	movff	postinc2,postinc1
  9307  01C9F0  EC3D  F0F5         	call	___fltol	;wreg free
  9308  01C9F4  0060  F0A8  F034   	movff	btemp,btemp+10
  9309  01C9FA  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9310  01CA00  0060  F0D0  F9DD   	movff	btemp+10,_C+222	;volatile
  9311  01CA06  0060  F0D4  F9DE   	movff	btemp+11,_C+223	;volatile
  9312                           
  9313                           ;mbmc.c: 237:  C.hist[0].pclock = time(((void*)0));
  9314  01CA0C  0E00               	movlw	0
  9315  01CA0E  6EE6               	movwf	postinc1,c
  9316  01CA10  0E00               	movlw	0
  9317  01CA12  6EE6               	movwf	postinc1,c
  9318  01CA14  EC07  F00F         	call	_time	;wreg free
  9319  01CA18  52E5               	movf	postdec1,f,c
  9320  01CA1A  006F FF9C  F041    	movff	indf1,btemp+23
  9321  01CA20  52E5               	movf	postdec1,f,c
  9322  01CA22  006F FF9C  F040    	movff	indf1,btemp+22
  9323  01CA28  52E5               	movf	postdec1,f,c
  9324  01CA2A  006F FF9C  F03F    	movff	indf1,btemp+21
  9325  01CA30  52E5               	movf	postdec1,f,c
  9326  01CA32  006F FF9C  F03E    	movff	indf1,btemp+20
  9327  01CA38  52E5               	movf	postdec1,f,c
  9328  01CA3A  006F FF9C  F03D    	movff	indf1,btemp+19
  9329  01CA40  52E5               	movf	postdec1,f,c
  9330  01CA42  006F FF9C  F03C    	movff	indf1,btemp+18
  9331  01CA48  52E5               	movf	postdec1,f,c
  9332  01CA4A  006F FF9C  F03B    	movff	indf1,btemp+17
  9333  01CA50  52E5               	movf	postdec1,f,c
  9334  01CA52  006F FF9C  F03A    	movff	indf1,btemp+16
  9335  01CA58  EE22  F1B9         	lfsr	2,_C+186	;volatile
  9336  01CA5C  0060  F0EB  FFDE   	movff	btemp+16,postinc2
  9337  01CA62  0060  F0EF  FFDE   	movff	btemp+17,postinc2
  9338  01CA68  0060  F0F3  FFDE   	movff	btemp+18,postinc2
  9339  01CA6E  0060  F0F7  FFDE   	movff	btemp+19,postinc2
  9340  01CA74  0060  F0FB  FFDE   	movff	btemp+20,postinc2
  9341  01CA7A  0060  F0FF  FFDE   	movff	btemp+21,postinc2
  9342  01CA80  0060  F103  FFDE   	movff	btemp+22,postinc2
  9343  01CA86  0060  F107  FFDE   	movff	btemp+23,postinc2
  9344                           
  9345                           ; BSR set to: 57
  9346                           ;mbmc.c: 238:  C.dynamic_ah = 0.0;
  9347  01CA8C  0E00               	movlw	0
  9348  01CA8E  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
  9349  01CA94  0E00               	movlw	0
  9350  01CA96  006F FFA0  F990    	movff	wreg,_C+145	;volatile
  9351  01CA9C  0E00               	movlw	0
  9352  01CA9E  006F FFA0  F991    	movff	wreg,_C+146	;volatile
  9353  01CAA4  0E00               	movlw	0
  9354  01CAA6  006F FFA0  F992    	movff	wreg,_C+147	;volatile
  9355                           
  9356                           ; BSR set to: 57
  9357                           ;mbmc.c: 239:  C.dynamic_ah_adj = 0.0;
  9358  01CAAC  0E00               	movlw	0
  9359  01CAAE  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
  9360  01CAB4  0E00               	movlw	0
  9361  01CAB6  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
  9362  01CABC  0E00               	movlw	0
  9363  01CABE  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
  9364  01CAC4  0E00               	movlw	0
  9365  01CAC6  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
  9366                           
  9367                           ; BSR set to: 57
  9368                           ;mbmc.c: 240:  start_bsoc();
  9369  01CACC  EC3C  F016         	call	_start_bsoc	;wreg free
  9370                           
  9371                           ; BSR set to: 57
  9372                           ; _load_hist_data: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9373  01CAD0  52E5               	movf	postdec1,f,c
  9374  01CAD2  52E5               	movf	postdec1,f,c
  9375  01CAD4  0012               	return		;funcret
  9376  01CAD6                     __end_of_load_hist_data:
  9377                           	opt callstack 0
  9378                           
  9379 ;; *************** function _init_port_dma *****************
  9380 ;; Defined at:
  9381 ;;		line 104 in file "eadog.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;		None
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;		None
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  1  [STACK] void 
  9388 ;; Registers used:
  9389 ;;		wreg, status,2
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/2
  9392 ;;		On exit  : 3F/3B
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9399 ;;Total ram usage:        0 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; Hardware stack levels required when called:   15
  9402 ;; This function calls:
  9403 ;;		Nothing
  9404 ;; This function is called by:
  9405 ;;		_main
  9406 ;; This function uses a reentrant model
  9407 ;;
  9408                           
  9409                           	psect	text16
  9410  002766                     __ptext16:
  9411                           	opt callstack 0
  9412  002766                     _init_port_dma:
  9413                           	opt callstack 15
  9414                           
  9415                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  9416                           
  9417                           ; BSR set to: 57
  9418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9419                           ;incstack = 0
  9420  002766  0E3F               	movlw	-193
  9421  002768  013B               	movlb	59	; () banked
  9422  00276A  17DD               	andwf	221,f,b	;volatile
  9423                           
  9424                           ; BSR set to: 59
  9425                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  9426  00276C  9BDD               	bcf	221,5,b	;volatile
  9427                           
  9428                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  9429  00276E  51DD               	movf	221,w,b	;volatile
  9430  002770  0BF9               	andlw	-7
  9431  002772  0902               	iorlw	2
  9432  002774  6FDD               	movwf	221,b	;volatile
  9433                           
  9434                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  9435  002776  0EE7               	movlw	-25
  9436  002778  17DD               	andwf	221,f,b	;volatile
  9437                           
  9438                           ; BSR set to: 59
  9439                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  9440  00277A  81DD               	bsf	221,0,b	;volatile
  9441                           
  9442                           ; BSR set to: 59
  9443                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  9444  00277C  9DDC               	bcf	220,6,b	;volatile
  9445                           
  9446                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  9447  00277E  0E3D               	movlw	61
  9448  002780  6FD1               	movwf	209,b	;volatile
  9449  002782  0EEA               	movlw	234
  9450  002784  6FD0               	movwf	208,b	;volatile
  9451                           
  9452                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  9453  002786  0EFF               	movlw	low _port_data
  9454  002788  6FD9               	movwf	217,b	;volatile
  9455  00278A  0E06               	movlw	high _port_data
  9456  00278C  6FDA               	movwf	218,b	;volatile
  9457  00278E  0E00               	movlw	low (_port_data shr (0+16))
  9458  002790  6FDB               	movwf	219,b	;volatile
  9459                           
  9460                           ; BSR set to: 59
  9461                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  9462  002792  9BDC               	bcf	220,5,b	;volatile
  9463                           
  9464                           ; BSR set to: 59
  9465                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9466  002794  0012               	return		;funcret
  9467  002796                     __end_of_init_port_dma:
  9468                           	opt callstack 0
  9469                           
  9470 ;; *************** function _init_display *****************
  9471 ;; Defined at:
  9472 ;;		line 38 in file "eadog.c"
  9473 ;; Parameters:    Size  Location     Type
  9474 ;;		None
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;		None
  9477 ;; Return value:  Size  Location     Type
  9478 ;;                  1  [STACK] void 
  9479 ;; Registers used:
  9480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9481 ;; Tracked objects:
  9482 ;;		On entry : 3F/3B
  9483 ;;		On exit  : 3F/3D
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9490 ;;Total ram usage:        0 bytes
  9491 ;; Hardware stack levels used:    1
  9492 ;; Hardware stack levels required when called:   17
  9493 ;; This function calls:
  9494 ;;		_ringBufS_init
  9495 ;;		_send_lcd_cmd
  9496 ;;		_send_lcd_cmd_long
  9497 ;;		_send_lcd_data
  9498 ;;		_wdtdelay
  9499 ;; This function is called by:
  9500 ;;		_main
  9501 ;; This function uses a reentrant model
  9502 ;;
  9503                           
  9504                           	psect	text17
  9505  000578                     __ptext17:
  9506                           	opt callstack 0
  9507  000578                     _init_display:
  9508                           	opt callstack 13
  9509                           
  9510                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  9511                           
  9512                           ; BSR set to: 59
  9513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9514                           ;incstack = 0
  9515  000578  0E43               	movlw	low _ring_buf1
  9516  00057A  0100               	movlb	0	; () banked
  9517  00057C  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  9518  00057E  0E05               	movlw	high _ring_buf1
  9519  000580  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  9520                           
  9521                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  9522  000582  0E00               	movlw	low _ring_buf2
  9523  000584  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  9524  000586  0E05               	movlw	high _ring_buf2
  9525  000588  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  9529  00058A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9530  000590  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9531  000596  EC81  F014         	call	_ringBufS_init	;wreg free
  9532                           
  9533                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  9534  00059A  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  9535  0005A0  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  9536  0005A6  EC81  F014         	call	_ringBufS_init	;wreg free
  9537                           
  9538                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  9539  0005AA  84BE               	bsf	190,2,c	;volatile
  9540                           
  9541                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  9542  0005AC  013D               	movlb	61	; () banked
  9543  0005AE  9F14               	bcf	20,7,b	;volatile
  9544                           
  9545                           ; BSR set to: 61
  9546                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  9547  0005B0  0E20               	movlw	32
  9548  0005B2  6F15               	movwf	21,b	;volatile
  9549                           
  9550                           ; BSR set to: 61
  9551                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  9552  0005B4  0E03               	movlw	3
  9553  0005B6  6F16               	movwf	22,b	;volatile
  9554                           
  9555                           ; BSR set to: 61
  9556                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  9557  0005B8  0E04               	movlw	4
  9558  0005BA  6F19               	movwf	25,b	;volatile
  9559                           
  9560                           ; BSR set to: 61
  9561                           ;eadog.c: 55:  SPI1CLK = 0x02;
  9562  0005BC  0E02               	movlw	2
  9563  0005BE  6F1C               	movwf	28,b	;volatile
  9564                           
  9565                           ; BSR set to: 61
  9566                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  9567  0005C0  0E83               	movlw	131
  9568  0005C2  6F14               	movwf	20,b	;volatile
  9569                           
  9570                           ; BSR set to: 61
  9571                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  9572  0005C4  8F14               	bsf	20,7,b	;volatile
  9573                           
  9574                           ; BSR set to: 61
  9575                           ;eadog.c: 60:  wdtdelay(350000);
  9576  0005C6  0E30               	movlw	48
  9577  0005C8  6EE6               	movwf	postinc1,c
  9578  0005CA  0E57               	movlw	87
  9579  0005CC  6EE6               	movwf	postinc1,c
  9580  0005CE  0E05               	movlw	5
  9581  0005D0  6EE6               	movwf	postinc1,c
  9582  0005D2  0E00               	movlw	0
  9583  0005D4  6EE6               	movwf	postinc1,c
  9584  0005D6  EC63  F00F         	call	_wdtdelay	;wreg free
  9585                           
  9586                           ; BSR set to: 0
  9587                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  9588  0005DA  0E46               	movlw	70
  9589  0005DC  6EE6               	movwf	postinc1,c
  9590  0005DE  ECC9  F011         	call	_send_lcd_cmd_long	;wreg free
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  9594  0005E2  0E41               	movlw	65
  9595  0005E4  6EE6               	movwf	postinc1,c
  9596  0005E6  ECE9  F011         	call	_send_lcd_cmd	;wreg free
  9597                           
  9598                           ; BSR set to: 0
  9599                           ;eadog.c: 63:  wdtdelay(80);
  9600  0005EA  0E50               	movlw	80
  9601  0005EC  6EE6               	movwf	postinc1,c
  9602  0005EE  0E00               	movlw	0
  9603  0005F0  6EE6               	movwf	postinc1,c
  9604  0005F2  0E00               	movlw	0
  9605  0005F4  6EE6               	movwf	postinc1,c
  9606  0005F6  0E00               	movlw	0
  9607  0005F8  6EE6               	movwf	postinc1,c
  9608  0005FA  EC63  F00F         	call	_wdtdelay	;wreg free
  9609                           
  9610                           ; BSR set to: 0
  9611                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  9612  0005FE  0E53               	movlw	83
  9613  000600  6EE6               	movwf	postinc1,c
  9614  000602  ECE9  F011         	call	_send_lcd_cmd	;wreg free
  9615                           
  9616                           ; BSR set to: 0
  9617                           ;eadog.c: 65:  send_lcd_data(2);
  9618  000606  0E02               	movlw	2
  9619  000608  6EE6               	movwf	postinc1,c
  9620  00060A  ECAE  F015         	call	_send_lcd_data	;wreg free
  9621                           
  9622                           ; BSR set to: 0
  9623                           ;eadog.c: 66:  wdtdelay(80);
  9624  00060E  0E50               	movlw	80
  9625  000610  6EE6               	movwf	postinc1,c
  9626  000612  0E00               	movlw	0
  9627  000614  6EE6               	movwf	postinc1,c
  9628  000616  0E00               	movlw	0
  9629  000618  6EE6               	movwf	postinc1,c
  9630  00061A  0E00               	movlw	0
  9631  00061C  6EE6               	movwf	postinc1,c
  9632  00061E  EC63  F00F         	call	_wdtdelay	;wreg free
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  9636  000622  0E51               	movlw	81
  9637  000624  6EE6               	movwf	postinc1,c
  9638  000626  ECC9  F011         	call	_send_lcd_cmd_long	;wreg free
  9639                           
  9640                           ; BSR set to: 0
  9641                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  9642  00062A  013D               	movlb	61	; () banked
  9643  00062C  9F14               	bcf	20,7,b	;volatile
  9644                           
  9645                           ; BSR set to: 61
  9646                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  9647  00062E  0E02               	movlw	2
  9648  000630  6F16               	movwf	22,b	;volatile
  9649                           
  9650                           ; BSR set to: 61
  9651                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  9652  000632  8F14               	bsf	20,7,b	;volatile
  9653                           
  9654                           ; BSR set to: 61
  9655                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  9656  000634  931A               	bcf	26,1,b	;volatile
  9657                           
  9658                           ; BSR set to: 61
  9659                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  9660  000636  0E3F               	movlw	-193
  9661  000638  013B               	movlb	59	; () banked
  9662  00063A  17FD               	andwf	253,f,b	;volatile
  9663                           
  9664                           ; BSR set to: 59
  9665                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  9666  00063C  9BFD               	bcf	253,5,b	;volatile
  9667                           
  9668                           ; BSR set to: 59
  9669                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  9670  00063E  51FD               	movf	253,w,b	;volatile
  9671  000640  0BF9               	andlw	-7
  9672  000642  0902               	iorlw	2
  9673  000644  6FFD               	movwf	253,b	;volatile
  9674                           
  9675                           ; BSR set to: 59
  9676                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  9677  000646  0EE7               	movlw	-25
  9678  000648  17FD               	andwf	253,f,b	;volatile
  9679                           
  9680                           ; BSR set to: 59
  9681                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  9682  00064A  81FD               	bsf	253,0,b	;volatile
  9683                           
  9684                           ; BSR set to: 59
  9685                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  9686  00064C  0E43               	movlw	low _ring_buf1
  9687  00064E  6FF9               	movwf	249,b	;volatile
  9688  000650  0E05               	movlw	high _ring_buf1
  9689  000652  6FFA               	movwf	250,b	;volatile
  9690  000654  0E00               	movlw	low (_ring_buf1 shr (0+16))
  9691  000656  6FFB               	movwf	251,b	;volatile
  9692                           
  9693                           ; BSR set to: 59
  9694                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  9695  000658  9BFC               	bcf	252,5,b	;volatile
  9696                           
  9697                           ; BSR set to: 59
  9698                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  9699  00065A  013D               	movlb	61	; () banked
  9700  00065C  831A               	bsf	26,1,b	;volatile
  9701                           
  9702                           ; BSR set to: 61
  9703                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  9704  00065E  94BE               	bcf	190,2,c	;volatile
  9705                           
  9706                           ; BSR set to: 61
  9707                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9708  000660  0012               	return		;funcret
  9709  000662                     __end_of_init_display:
  9710                           	opt callstack 0
  9711                           
  9712 ;; *************** function _send_lcd_data *****************
  9713 ;; Defined at:
  9714 ;;		line 123 in file "eadog.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;  data            1  [STACK] const unsigned char 
  9717 ;; Auto vars:     Size  Location     Type
  9718 ;;		None
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  1  [STACK] void 
  9721 ;; Registers used:
  9722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9723 ;; Tracked objects:
  9724 ;;		On entry : 3F/0
  9725 ;;		On exit  : 3F/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9732 ;;Total ram usage:        0 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; Hardware stack levels required when called:   16
  9735 ;; This function calls:
  9736 ;;		_SPI1_Exchange8bit
  9737 ;;		_wdtdelay
  9738 ;; This function is called by:
  9739 ;;		_init_display
  9740 ;; This function uses a reentrant model
  9741 ;;
  9742                           
  9743                           	psect	text18
  9744  002B5C                     __ptext18:
  9745                           	opt callstack 0
  9746  002B5C                     _send_lcd_data:
  9747                           	opt callstack 13
  9748                           
  9749                           ; BSR set to: 61
  9750                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9751                           ;incstack = 0
  9752                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  9753  002B5C  94BC               	bcf	188,2,c	;volatile
  9754                           
  9755                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  9756                           ;stkvar	_data @ sp[(0)+-1]
  9757  002B5E  0EFF               	movlw	-1
  9758  002B60  50E3               	movf	plusw1,w,c
  9759  002B62  6EE6               	movwf	postinc1,c
  9760  002B64  EC7E  F016         	call	_SPI1_Exchange8bit	;wreg free
  9761                           
  9762                           ; BSR set to: 57
  9763                           ;eadog.c: 127:  wdtdelay(8);
  9764  002B68  0E08               	movlw	8
  9765  002B6A  6EE6               	movwf	postinc1,c
  9766  002B6C  0E00               	movlw	0
  9767  002B6E  6EE6               	movwf	postinc1,c
  9768  002B70  0E00               	movlw	0
  9769  002B72  6EE6               	movwf	postinc1,c
  9770  002B74  0E00               	movlw	0
  9771  002B76  6EE6               	movwf	postinc1,c
  9772  002B78  EC63  F00F         	call	_wdtdelay	;wreg free
  9773                           
  9774                           ; BSR set to: 0
  9775                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  9776  002B7C  52E5               	movf	postdec1,f,c
  9777  002B7E  0012               	return		;funcret
  9778  002B80                     __end_of_send_lcd_data:
  9779                           	opt callstack 0
  9780                           
  9781 ;; *************** function _send_lcd_cmd_long *****************
  9782 ;; Defined at:
  9783 ;;		line 139 in file "eadog.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;  cmd             1  [STACK] const unsigned char 
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;		None
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  1  [STACK] void 
  9790 ;; Registers used:
  9791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9792 ;; Tracked objects:
  9793 ;;		On entry : 3F/0
  9794 ;;		On exit  : 3F/0
  9795 ;;		Unchanged: 0/0
  9796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9801 ;;Total ram usage:        0 bytes
  9802 ;; Hardware stack levels used:    1
  9803 ;; Hardware stack levels required when called:   16
  9804 ;; This function calls:
  9805 ;;		_SPI1_Exchange8bit
  9806 ;;		_wdtdelay
  9807 ;; This function is called by:
  9808 ;;		_init_display
  9809 ;; This function uses a reentrant model
  9810 ;;
  9811                           
  9812                           	psect	text19
  9813  002392                     __ptext19:
  9814                           	opt callstack 0
  9815  002392                     _send_lcd_cmd_long:
  9816                           	opt callstack 13
  9817                           
  9818                           ; BSR set to: 0
  9819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9820                           ;incstack = 0
  9821                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  9822  002392  94BC               	bcf	188,2,c	;volatile
  9823                           
  9824                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  9825  002394  0EFE               	movlw	254
  9826  002396  6EE6               	movwf	postinc1,c
  9827  002398  EC7E  F016         	call	_SPI1_Exchange8bit	;wreg free
  9828                           
  9829                           ; BSR set to: 57
  9830                           ;eadog.c: 143:  wdtdelay(8);
  9831  00239C  0E08               	movlw	8
  9832  00239E  6EE6               	movwf	postinc1,c
  9833  0023A0  0E00               	movlw	0
  9834  0023A2  6EE6               	movwf	postinc1,c
  9835  0023A4  0E00               	movlw	0
  9836  0023A6  6EE6               	movwf	postinc1,c
  9837  0023A8  0E00               	movlw	0
  9838  0023AA  6EE6               	movwf	postinc1,c
  9839  0023AC  EC63  F00F         	call	_wdtdelay	;wreg free
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  9843                           ;stkvar	_cmd @ sp[(0)+-1]
  9844  0023B0  0EFF               	movlw	-1
  9845  0023B2  50E3               	movf	plusw1,w,c
  9846  0023B4  6EE6               	movwf	postinc1,c
  9847  0023B6  EC7E  F016         	call	_SPI1_Exchange8bit	;wreg free
  9848                           
  9849                           ;eadog.c: 145:  wdtdelay(800);
  9850  0023BA  0E20               	movlw	32
  9851  0023BC  6EE6               	movwf	postinc1,c
  9852  0023BE  0E03               	movlw	3
  9853  0023C0  6EE6               	movwf	postinc1,c
  9854  0023C2  0E00               	movlw	0
  9855  0023C4  6EE6               	movwf	postinc1,c
  9856  0023C6  0E00               	movlw	0
  9857  0023C8  6EE6               	movwf	postinc1,c
  9858  0023CA  EC63  F00F         	call	_wdtdelay	;wreg free
  9859                           
  9860                           ; BSR set to: 0
  9861                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9862  0023CE  52E5               	movf	postdec1,f,c
  9863  0023D0  0012               	return		;funcret
  9864  0023D2                     __end_of_send_lcd_cmd_long:
  9865                           	opt callstack 0
  9866                           
  9867 ;; *************** function _send_lcd_cmd *****************
  9868 ;; Defined at:
  9869 ;;		line 130 in file "eadog.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;  cmd             1  [STACK] const unsigned char 
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;		None
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  1  [STACK] void 
  9876 ;; Registers used:
  9877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9878 ;; Tracked objects:
  9879 ;;		On entry : 3F/0
  9880 ;;		On exit  : 3F/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9887 ;;Total ram usage:        0 bytes
  9888 ;; Hardware stack levels used:    1
  9889 ;; Hardware stack levels required when called:   16
  9890 ;; This function calls:
  9891 ;;		_SPI1_Exchange8bit
  9892 ;;		_wdtdelay
  9893 ;; This function is called by:
  9894 ;;		_init_display
  9895 ;; This function uses a reentrant model
  9896 ;;
  9897                           
  9898                           	psect	text20
  9899  0023D2                     __ptext20:
  9900                           	opt callstack 0
  9901  0023D2                     _send_lcd_cmd:
  9902                           	opt callstack 13
  9903                           
  9904                           ; BSR set to: 0
  9905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9906                           ;incstack = 0
  9907                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  9908  0023D2  94BC               	bcf	188,2,c	;volatile
  9909                           
  9910                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  9911  0023D4  0EFE               	movlw	254
  9912  0023D6  6EE6               	movwf	postinc1,c
  9913  0023D8  EC7E  F016         	call	_SPI1_Exchange8bit	;wreg free
  9914                           
  9915                           ; BSR set to: 57
  9916                           ;eadog.c: 134:  wdtdelay(8);
  9917  0023DC  0E08               	movlw	8
  9918  0023DE  6EE6               	movwf	postinc1,c
  9919  0023E0  0E00               	movlw	0
  9920  0023E2  6EE6               	movwf	postinc1,c
  9921  0023E4  0E00               	movlw	0
  9922  0023E6  6EE6               	movwf	postinc1,c
  9923  0023E8  0E00               	movlw	0
  9924  0023EA  6EE6               	movwf	postinc1,c
  9925  0023EC  EC63  F00F         	call	_wdtdelay	;wreg free
  9926                           
  9927                           ; BSR set to: 0
  9928                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  9929                           ;stkvar	_cmd @ sp[(0)+-1]
  9930  0023F0  0EFF               	movlw	-1
  9931  0023F2  50E3               	movf	plusw1,w,c
  9932  0023F4  6EE6               	movwf	postinc1,c
  9933  0023F6  EC7E  F016         	call	_SPI1_Exchange8bit	;wreg free
  9934                           
  9935                           ;eadog.c: 136:  wdtdelay(8);
  9936  0023FA  0E08               	movlw	8
  9937  0023FC  6EE6               	movwf	postinc1,c
  9938  0023FE  0E00               	movlw	0
  9939  002400  6EE6               	movwf	postinc1,c
  9940  002402  0E00               	movlw	0
  9941  002404  6EE6               	movwf	postinc1,c
  9942  002406  0E00               	movlw	0
  9943  002408  6EE6               	movwf	postinc1,c
  9944  00240A  EC63  F00F         	call	_wdtdelay	;wreg free
  9945                           
  9946                           ; BSR set to: 0
  9947                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  9948  00240E  52E5               	movf	postdec1,f,c
  9949  002410  0012               	return		;funcret
  9950  002412                     __end_of_send_lcd_cmd:
  9951                           	opt callstack 0
  9952                           
  9953 ;; *************** function _SPI1_Exchange8bit *****************
  9954 ;; Defined at:
  9955 ;;		line 79 in file "mcc_generated_files/spi1.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;  data            1  [STACK] unsigned char 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;		None
  9960 ;; Return value:  Size  Location     Type
  9961 ;;                  1  [STACK] unsigned char 
  9962 ;; Registers used:
  9963 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/1
  9966 ;;		On exit  : 3F/39
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9973 ;;Total ram usage:        0 bytes
  9974 ;; Hardware stack levels used:    1
  9975 ;; Hardware stack levels required when called:   15
  9976 ;; This function calls:
  9977 ;;		Nothing
  9978 ;; This function is called by:
  9979 ;;		_send_lcd_data
  9980 ;;		_send_lcd_cmd
  9981 ;;		_send_lcd_cmd_long
  9982 ;;		_set_dac
  9983 ;; This function uses a reentrant model
  9984 ;;
  9985                           
  9986                           	psect	text21
  9987  002CFC                     __ptext21:
  9988                           	opt callstack 0
  9989  002CFC                     _SPI1_Exchange8bit:
  9990                           	opt callstack 14
  9991                           
  9992                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  9993                           
  9994                           ; BSR set to: 0
  9995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9996                           ;incstack = 0
  9997  002CFC  0E01               	movlw	1
  9998  002CFE  013D               	movlb	61	; () banked
  9999  002D00  6F12               	movwf	18,b	;volatile
 10000                           
 10001                           ; BSR set to: 61
 10002                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
 10003                           ;stkvar	_data @ sp[(0)+-1]
 10004  002D02  0EFF               	movlw	-1
 10005  002D04  006F FF8F FD11     	movff	plusw1,15633	;volatile
 10006  002D0A                     l809:
 10007                           
 10008                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
 10009  002D0A  0139               	movlb	57	; () banked
 10010  002D0C  A9A2               	btfss	162,4,b	;volatile
 10011  002D0E  D7FD               	goto	l809
 10012                           
 10013                           ; BSR set to: 57
 10014                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
 10015  002D10  006F F440  F02A    	movff	15632,btemp	;volatile
 10016                           
 10017                           ; BSR set to: 57
 10018                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 10019  002D16  52E5               	movf	postdec1,f,c
 10020  002D18  0012               	return		;funcret
 10021  002D1A                     __end_of_SPI1_Exchange8bit:
 10022                           	opt callstack 0
 10023                           
 10024 ;; *************** function _ringBufS_init *****************
 10025 ;; Defined at:
 10026 ;;		line 22 in file "ringbufs.c"
 10027 ;; Parameters:    Size  Location     Type
 10028 ;;  _this           2  [STACK] PTR volatile struct ring
 10029 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10030 ;; Auto vars:     Size  Location     Type
 10031 ;;		None
 10032 ;; Return value:  Size  Location     Type
 10033 ;;                  1  [STACK] void 
 10034 ;; Registers used:
 10035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10036 ;; Tracked objects:
 10037 ;;		On entry : 0/0
 10038 ;;		On exit  : 0/0
 10039 ;;		Unchanged: 0/0
 10040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10045 ;;Total ram usage:        0 bytes
 10046 ;; Hardware stack levels used:    1
 10047 ;; Hardware stack levels required when called:   16
 10048 ;; This function calls:
 10049 ;;		_memset
 10050 ;; This function is called by:
 10051 ;;		_init_display
 10052 ;; This function uses a reentrant model
 10053 ;;
 10054                           
 10055                           	psect	text22
 10056  002902                     __ptext22:
 10057                           	opt callstack 0
 10058  002902                     _ringBufS_init:
 10059                           	opt callstack 13
 10060                           
 10061                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
 10062                           
 10063                           ; BSR set to: 57
 10064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10065                           ;incstack = 0
 10066  002902  0E43               	movlw	67
 10067  002904  6EE6               	movwf	postinc1,c
 10068  002906  0E00               	movlw	0
 10069  002908  6EE6               	movwf	postinc1,c
 10070  00290A  0E00               	movlw	0
 10071  00290C  6EE6               	movwf	postinc1,c
 10072  00290E  0E00               	movlw	0
 10073  002910  6EE6               	movwf	postinc1,c
 10074                           
 10075                           ;stkvar	__this @ sp[(-4)+-2]
 10076  002912  0EFA               	movlw	-6
 10077  002914  006F FF8F FFE6     	movff	plusw1,postinc1
 10078  00291A  006F FF8F FFE6     	movff	plusw1,postinc1
 10079  002920  EC96  F0D9         	call	_memset	;wreg free
 10080                           
 10081                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10082  002924  52E5               	movf	postdec1,f,c
 10083  002926  52E5               	movf	postdec1,f,c
 10084  002928  0012               	return		;funcret
 10085  00292A                     __end_of_ringBufS_init:
 10086                           	opt callstack 0
 10087                           
 10088 ;; *************** function _init_bsoc *****************
 10089 ;; Defined at:
 10090 ;;		line 110 in file "bsoc.c"
 10091 ;; Parameters:    Size  Location     Type
 10092 ;;		None
 10093 ;; Auto vars:     Size  Location     Type
 10094 ;;		None
 10095 ;; Return value:  Size  Location     Type
 10096 ;;                  1  [STACK] void 
 10097 ;; Registers used:
 10098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10099 ;; Tracked objects:
 10100 ;;		On entry : 0/1
 10101 ;;		On exit  : 0/0
 10102 ;;		Unchanged: 0/0
 10103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10108 ;;Total ram usage:        0 bytes
 10109 ;; Hardware stack levels used:    1
 10110 ;; Hardware stack levels required when called:   18
 10111 ;; This function calls:
 10112 ;;		_TMR3_SetInterruptHandler
 10113 ;;		_Volts_to_SOC
 10114 ;;		___fldiv
 10115 ;;		___flmul
 10116 ;;		___fltol
 10117 ;;		___xxtofl
 10118 ;;		_conv_raw_result
 10119 ;; This function is called by:
 10120 ;;		_main
 10121 ;; This function uses a reentrant model
 10122 ;;
 10123                           
 10124                           	psect	text23
 10125  01CAD6                     __ptext23:
 10126                           	opt callstack 0
 10127  01CAD6                     _init_bsoc:
 10128                           	opt callstack 12
 10129                           
 10130                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
 10131                           
 10132                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10133                           ;incstack = 0
 10134  01CAD6  0E00               	movlw	0
 10135  01CAD8  6EE6               	movwf	postinc1,c
 10136  01CADA  0E00               	movlw	0
 10137  01CADC  6EE6               	movwf	postinc1,c
 10138  01CADE  0E7A               	movlw	122
 10139  01CAE0  6EE6               	movwf	postinc1,c
 10140  01CAE2  0E44               	movlw	68
 10141  01CAE4  6EE6               	movwf	postinc1,c
 10142  01CAE6  0E00               	movlw	0
 10143  01CAE8  6EE6               	movwf	postinc1,c
 10144  01CAEA  0E04               	movlw	4
 10145  01CAEC  6EE6               	movwf	postinc1,c
 10146  01CAEE  ECC0  F0C8         	call	_conv_raw_result	;wreg free
 10147  01CAF2  0060  F0AB  FFE6   	movff	btemp,postinc1
 10148  01CAF8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10149  01CAFE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10150  01CB04  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10151  01CB0A  EC3D  F0F5         	call	___fltol	;wreg free
 10152  01CB0E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10153  01CB14  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10154  01CB1A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10155  01CB20  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10156  01CB26  0E00               	movlw	0
 10157  01CB28  6EE6               	movwf	postinc1,c
 10158  01CB2A  EC0F  F0ED         	call	___xxtofl	;wreg free
 10159  01CB2E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10160  01CB34  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10161  01CB3A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10162  01CB40  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10163  01CB46  EC27  F0B8         	call	___flmul	;wreg free
 10164  01CB4A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10165  01CB50  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10166  01CB56  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10167  01CB5C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10168  01CB62  EC3D  F0F5         	call	___fltol	;wreg free
 10169  01CB66  0060  F0AB  FFE6   	movff	btemp,postinc1
 10170  01CB6C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10171  01CB72  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10172  01CB78  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10173  01CB7E  EC8C  F005         	call	_Volts_to_SOC	;wreg free
 10174  01CB82  0060  F0A8  F9B5   	movff	btemp,_C+182	;volatile
 10175  01CB88  0060  F0AC  F9B6   	movff	btemp+1,_C+183	;volatile
 10176                           
 10177                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
 10178  01CB8E  EE22  F18B         	lfsr	2,_C+140	;volatile
 10179  01CB92  006F FF7B FFE6     	movff	postinc2,postinc1
 10180  01CB98  006F FF7B FFE6     	movff	postinc2,postinc1
 10181  01CB9E  006F FF7B FFE6     	movff	postinc2,postinc1
 10182  01CBA4  006F FF7B FFE6     	movff	postinc2,postinc1
 10183  01CBAA  0E00               	movlw	0
 10184  01CBAC  6EE6               	movwf	postinc1,c
 10185  01CBAE  0E00               	movlw	0
 10186  01CBB0  6EE6               	movwf	postinc1,c
 10187  01CBB2  0EC8               	movlw	200
 10188  01CBB4  6EE6               	movwf	postinc1,c
 10189  01CBB6  0E42               	movlw	66
 10190  01CBB8  6EE6               	movwf	postinc1,c
 10191  01CBBA  0E00               	movlw	0
 10192  01CBBC  6EE6               	movwf	postinc1,c
 10193  01CBBE  0E00               	movlw	0
 10194  01CBC0  6EE6               	movwf	postinc1,c
 10195  01CBC2  0E7A               	movlw	122
 10196  01CBC4  6EE6               	movwf	postinc1,c
 10197  01CBC6  0E44               	movlw	68
 10198  01CBC8  6EE6               	movwf	postinc1,c
 10199  01CBCA  0E00               	movlw	0
 10200  01CBCC  6EE6               	movwf	postinc1,c
 10201  01CBCE  0E04               	movlw	4
 10202  01CBD0  6EE6               	movwf	postinc1,c
 10203  01CBD2  ECC0  F0C8         	call	_conv_raw_result	;wreg free
 10204  01CBD6  0060  F0AB  FFE6   	movff	btemp,postinc1
 10205  01CBDC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10206  01CBE2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10207  01CBE8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10208  01CBEE  EC3D  F0F5         	call	___fltol	;wreg free
 10209  01CBF2  0060  F0AB  FFE6   	movff	btemp,postinc1
 10210  01CBF8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10211  01CBFE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10212  01CC04  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10213  01CC0A  0E00               	movlw	0
 10214  01CC0C  6EE6               	movwf	postinc1,c
 10215  01CC0E  EC0F  F0ED         	call	___xxtofl	;wreg free
 10216  01CC12  0060  F0AB  FFE6   	movff	btemp,postinc1
 10217  01CC18  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10218  01CC1E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10219  01CC24  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10220  01CC2A  EC27  F0B8         	call	___flmul	;wreg free
 10221  01CC2E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10222  01CC34  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10223  01CC3A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10224  01CC40  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10225  01CC46  EC3D  F0F5         	call	___fltol	;wreg free
 10226  01CC4A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10227  01CC50  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10228  01CC56  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10229  01CC5C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10230  01CC62  EC8C  F005         	call	_Volts_to_SOC	;wreg free
 10231  01CC66  0060  F0A8  F034   	movff	btemp,btemp+10
 10232  01CC6C  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10233  01CC72  5034               	movf	(btemp+10)^0,w,c
 10234  01CC74  6E2E               	movwf	(btemp+4)^0,c
 10235  01CC76  5035               	movf	(btemp+11)^0,w,c
 10236  01CC78  6E2F               	movwf	(btemp+5)^0,c
 10237  01CC7A  6A30               	clrf	(btemp+6)^0,c
 10238  01CC7C  6A31               	clrf	(btemp+7)^0,c
 10239  01CC7E  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 10240  01CC84  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 10241  01CC8A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 10242  01CC90  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 10243  01CC96  0E00               	movlw	0
 10244  01CC98  6EE6               	movwf	postinc1,c
 10245  01CC9A  EC0F  F0ED         	call	___xxtofl	;wreg free
 10246  01CC9E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10247  01CCA4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10248  01CCAA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10249  01CCB0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10250  01CCB6  EC78  F0C3         	call	___fldiv	;wreg free
 10251  01CCBA  0060  F0AB  FFE6   	movff	btemp,postinc1
 10252  01CCC0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10253  01CCC6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10254  01CCCC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10255  01CCD2  EC27  F0B8         	call	___flmul	;wreg free
 10256  01CCD6  0060  F0A8  F98F   	movff	btemp,_C+144	;volatile
 10257  01CCDC  0060  F0AC  F990   	movff	btemp+1,_C+145	;volatile
 10258  01CCE2  0060  F0B0  F991   	movff	btemp+2,_C+146	;volatile
 10259  01CCE8  0060  F0B4  F992   	movff	btemp+3,_C+147	;volatile
 10260                           
 10261                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
 10262  01CCEE  EE22  F18F         	lfsr	2,_C+144	;volatile
 10263  01CCF2  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 10264  01CCF8  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 10265  01CCFE  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 10266  01CD04  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 10267                           
 10268                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
 10269  01CD0A  0ECC               	movlw	low _calc_bsoc
 10270  01CD0C  6EE6               	movwf	postinc1,c
 10271  01CD0E  0E53               	movlw	high _calc_bsoc
 10272  01CD10  6EE6               	movwf	postinc1,c
 10273  01CD12  0E01               	movlw	low (_calc_bsoc shr (0+16))
 10274  01CD14  6EE6               	movwf	postinc1,c
 10275  01CD16  EC0D  F015         	call	_TMR3_SetInterruptHandler	;wreg free
 10276                           
 10277                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10278  01CD1A  0012               	return		;funcret
 10279  01CD1C                     __end_of_init_bsoc:
 10280                           	opt callstack 0
 10281                           
 10282 ;; *************** function _Volts_to_SOC *****************
 10283 ;; Defined at:
 10284 ;;		line 175 in file "bsoc.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;  cvoltage        4  [STACK] const unsigned long 
 10287 ;; Auto vars:     Size  Location     Type
 10288 ;;  soc             2  [STACK] unsigned short 
 10289 ;;  slot            1  [STACK] unsigned char 
 10290 ;; Return value:  Size  Location     Type
 10291 ;;                  2  [STACK] unsigned short 
 10292 ;; Registers used:
 10293 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10294 ;; Tracked objects:
 10295 ;;		On entry : 0/1
 10296 ;;		On exit  : 0/0
 10297 ;;		Unchanged: 0/0
 10298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10303 ;;Total ram usage:        0 bytes
 10304 ;; Hardware stack levels used:    1
 10305 ;; Hardware stack levels required when called:   15
 10306 ;; This function calls:
 10307 ;;		Nothing
 10308 ;; This function is called by:
 10309 ;;		_init_bsoc
 10310 ;; This function uses a reentrant model
 10311 ;;
 10312                           
 10313                           	psect	text24
 10314  000B18                     __ptext24:
 10315                           	opt callstack 0
 10316  000B18                     _Volts_to_SOC:
 10317                           	opt callstack 0
 10318                           
 10319                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10320  000B18  52E6               	movf	postinc1,f,c
 10321  000B1A  52E6               	movf	postinc1,f,c
 10322  000B1C  52E6               	movf	postinc1,f,c
 10323                           
 10324                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
 10325                           ;stkvar	_soc @ sp[(-3)+0]
 10326                           
 10327                           ;incstack = 0
 10328  000B1E  0EFD               	movlw	-3
 10329  000B20  6AE3               	clrf	plusw1,c
 10330  000B22  0EFE               	movlw	-2
 10331  000B24  6AE3               	clrf	plusw1,c
 10332                           
 10333                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
 10334                           ;stkvar	_slot @ sp[(-3)+2]
 10335  000B26  0EFF               	movlw	-1
 10336  000B28  6AE3               	clrf	plusw1,c
 10337  000B2A                     l13977:
 10338                           
 10339                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
 10340                           ;stkvar	_cvoltage @ sp[(-3)+-4]
 10341                           ;stkvar	_slot @ sp[(-3)+2]
 10342  000B2A  0EFF               	movlw	-1
 10343  000B2C  50E3               	movf	plusw1,w,c
 10344  000B2E  0D08               	mullw	8
 10345  000B30  0E17               	movlw	low _BVSOC_TABLE
 10346  000B32  24F3               	addwf	243,w,c
 10347  000B34  6EF6               	movwf	tblptrl,c
 10348  000B36  0EF7               	movlw	high _BVSOC_TABLE
 10349  000B38  20F4               	addwfc	244,w,c
 10350  000B3A  6EF7               	movwf	tblptrh,c
 10351  000B3C                     	if	1	;There are 3 active tblptr bytes
 10352  000B3C  6AF8               	clrf	tblptru,c
 10353  000B3E  0E00               	movlw	low (__mediumconst shr (0+16))
 10354  000B40  22F8               	addwfc	tblptru,f,c
 10355  000B42                     	endif
 10356  000B42  0EF9               	movlw	-7
 10357  000B44  50E3               	movf	plusw1,w,c
 10358  000B46  0009               	tblrd		*+
 10359  000B48  5CF5               	subwf	tablat,w,c
 10360  000B4A  0EFA               	movlw	-6
 10361  000B4C  50E3               	movf	plusw1,w,c
 10362  000B4E  0009               	tblrd		*+
 10363  000B50  58F5               	subwfb	tablat,w,c
 10364  000B52  0EFB               	movlw	-5
 10365  000B54  50E3               	movf	plusw1,w,c
 10366  000B56  0009               	tblrd		*+
 10367  000B58  58F5               	subwfb	tablat,w,c
 10368  000B5A  0EFC               	movlw	-4
 10369  000B5C  50E3               	movf	plusw1,w,c
 10370  000B5E  0009               	tblrd		*+
 10371  000B60  58F5               	subwfb	tablat,w,c
 10372  000B62  B0D8               	btfsc	status,0,c
 10373  000B64  D020               	goto	l13981
 10374                           
 10375                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
 10376                           ;stkvar	_slot @ sp[(-3)+2]
 10377  000B66  0EFF               	movlw	-1
 10378  000B68  50E3               	movf	plusw1,w,c
 10379  000B6A  0D08               	mullw	8
 10380  000B6C  0E04               	movlw	4
 10381  000B6E  26F3               	addwf	243,f,c
 10382  000B70  0E00               	movlw	0
 10383  000B72  22F4               	addwfc	244,f,c
 10384  000B74  0E17               	movlw	low _BVSOC_TABLE
 10385  000B76  24F3               	addwf	243,w,c
 10386  000B78  6EF6               	movwf	tblptrl,c
 10387  000B7A  0EF7               	movlw	high _BVSOC_TABLE
 10388  000B7C  20F4               	addwfc	244,w,c
 10389  000B7E  6EF7               	movwf	tblptrh,c
 10390  000B80                     	if	1	;There are 3 active tblptr bytes
 10391  000B80  6AF8               	clrf	tblptru,c
 10392  000B82  0E00               	movlw	low (__mediumconst shr (0+16))
 10393  000B84  22F8               	addwfc	tblptru,f,c
 10394  000B86                     	endif
 10395  000B86  0009               	tblrd		*+
 10396  000B88  006F FFD4  F034    	movff	tablat,btemp+10
 10397  000B8E  0009               	tblrd		*+
 10398  000B90  006F FFD4  F035    	movff	tablat,btemp+11
 10399                           
 10400                           ;stkvar	_soc @ sp[(-3)+0]
 10401  000B96  0EFD               	movlw	-3
 10402  000B98  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 10403  000B9E  0EFE               	movlw	-2
 10404  000BA0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 10405  000BA6                     l13981:
 10406                           
 10407                           ;bsoc.c: 187:  }
 10408                           ;stkvar	_slot @ sp[(-3)+2]
 10409  000BA6  0EFF               	movlw	-1
 10410  000BA8  2AE3               	incf	plusw1,f,c
 10411                           
 10412                           ;stkvar	_slot @ sp[(-3)+2]
 10413  000BAA  0EFF               	movlw	-1
 10414  000BAC  006F FF8C  F02A    	movff	plusw1,btemp
 10415  000BB2  0E19               	movlw	25
 10416  000BB4  642A               	cpfsgt	btemp^0,c
 10417  000BB6  D7B9               	goto	l13977
 10418                           
 10419                           ;bsoc.c: 188:  return soc;
 10420                           ;stkvar	_soc @ sp[(-3)+0]
 10421  000BB8  0EFD               	movlw	-3
 10422  000BBA  006F FF8C  F02A    	movff	plusw1,btemp
 10423  000BC0  0EFE               	movlw	-2
 10424  000BC2  006F FF8C  F02B    	movff	plusw1,btemp+1
 10425                           
 10426                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
 10427  000BC8  0EF9               	movlw	249
 10428  000BCA  26E1               	addwf	fsr1l,f,c
 10429  000BCC  0EFF               	movlw	255
 10430  000BCE  22E2               	addwfc	fsr1h,f,c
 10431  000BD0  0012               	return		;funcret
 10432  000BD2                     __end_of_Volts_to_SOC:
 10433                           	opt callstack 0
 10434                           
 10435 ;; *************** function _hid_display *****************
 10436 ;; Defined at:
 10437 ;;		line 22 in file "hid.c"
 10438 ;; Parameters:    Size  Location     Type
 10439 ;;  h               2  [STACK] PTR struct H_data
 10440 ;;		 -> H(9), 
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;		None
 10443 ;; Return value:  Size  Location     Type
 10444 ;;                  2  [STACK] PTR struct H_data
 10445 ;; Registers used:
 10446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
 10447 ;; Tracked objects:
 10448 ;;		On entry : 0/39
 10449 ;;		On exit  : 0/0
 10450 ;;		Unchanged: 0/0
 10451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10456 ;;Total ram usage:        0 bytes
 10457 ;; Hardware stack levels used:    1
 10458 ;; Hardware stack levels required when called:   17
 10459 ;; This function calls:
 10460 ;;		_hid_input
 10461 ;; This function is called by:
 10462 ;;		_main
 10463 ;; This function uses a reentrant model
 10464 ;;
 10465                           
 10466                           	psect	text25
 10467  01D5F0                     __ptext25:
 10468                           	opt callstack 0
 10469  01D5F0                     _hid_display:
 10470                           	opt callstack 13
 10471                           
 10472                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
 10473                           ;stkvar	_h @ sp[(0)+-2]
 10474                           
 10475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10476                           ;incstack = 0
 10477  01D5F0  0EFE               	movlw	-2
 10478  01D5F2  006F FF8F FFE6     	movff	plusw1,postinc1
 10479  01D5F8  006F FF8F FFE6     	movff	plusw1,postinc1
 10480  01D5FE  ECFC  F0FB         	call	_hid_input	;wreg free
 10481                           
 10482                           ;hid.c: 26:  switch (h->h_state) {
 10483  01D602  D0E6               	goto	l17547
 10484  01D604                     l17521:
 10485                           
 10486                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
 10487                           ;stkvar	_h @ sp[(0)+-2]
 10488  01D604  0EFE               	movlw	-2
 10489  01D606  006F FF8C  F034    	movff	plusw1,btemp+10
 10490  01D60C  0EFF               	movlw	-1
 10491  01D60E  006F FF8C  F035    	movff	plusw1,btemp+11
 10492  01D614  0E01               	movlw	1
 10493  01D616  2434               	addwf	(btemp+10)^0,w,c
 10494  01D618  6ED9               	movwf	fsr2l,c
 10495  01D61A  0E00               	movlw	0
 10496  01D61C  2035               	addwfc	(btemp+11)^0,w,c
 10497  01D61E  6EDA               	movwf	fsr2h,c
 10498  01D620  0E01               	movlw	1
 10499  01D622  6EDF               	movwf	indf2,c
 10500                           
 10501                           ;hid.c: 29:   h->hid_display = HID_MAIN;
 10502                           ;stkvar	_h @ sp[(0)+-2]
 10503  01D624  0EFE               	movlw	-2
 10504  01D626  006F FF8F FFD9     	movff	plusw1,fsr2l
 10505  01D62C  0EFF               	movlw	-1
 10506  01D62E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10507  01D634  0E00               	movlw	0
 10508  01D636  6EDF               	movwf	indf2,c
 10509                           
 10510                           ;hid.c: 30:   h->wait_enter = 1;
 10511                           ;stkvar	_h @ sp[(0)+-2]
 10512  01D638  0EFE               	movlw	-2
 10513  01D63A  006F FF8C  F034    	movff	plusw1,btemp+10
 10514  01D640  0EFF               	movlw	-1
 10515  01D642  006F FF8C  F035    	movff	plusw1,btemp+11
 10516  01D648  0E04               	movlw	4
 10517  01D64A  2434               	addwf	(btemp+10)^0,w,c
 10518  01D64C  6ED9               	movwf	fsr2l,c
 10519  01D64E  0E00               	movlw	0
 10520  01D650  2035               	addwfc	(btemp+11)^0,w,c
 10521  01D652  6EDA               	movwf	fsr2h,c
 10522  01D654  0E01               	movlw	1
 10523  01D656  6EDF               	movwf	indf2,c
 10524                           
 10525                           ;hid.c: 31:   h->wait_select = 1;
 10526                           ;stkvar	_h @ sp[(0)+-2]
 10527  01D658  0EFE               	movlw	-2
 10528  01D65A  006F FF8C  F034    	movff	plusw1,btemp+10
 10529  01D660  0EFF               	movlw	-1
 10530  01D662  006F FF8C  F035    	movff	plusw1,btemp+11
 10531  01D668  0E02               	movlw	2
 10532  01D66A  2434               	addwf	(btemp+10)^0,w,c
 10533  01D66C  6ED9               	movwf	fsr2l,c
 10534  01D66E  0E00               	movlw	0
 10535  01D670  2035               	addwfc	(btemp+11)^0,w,c
 10536  01D672  6EDA               	movwf	fsr2h,c
 10537  01D674  0E01               	movlw	1
 10538  01D676  6EDF               	movwf	indf2,c
 10539                           
 10540                           ;hid.c: 32:   h->wait_calib = 1;
 10541                           ;stkvar	_h @ sp[(0)+-2]
 10542  01D678  0EFE               	movlw	-2
 10543  01D67A  006F FF8C  F034    	movff	plusw1,btemp+10
 10544  01D680  0EFF               	movlw	-1
 10545  01D682  006F FF8C  F035    	movff	plusw1,btemp+11
 10546  01D688  0E06               	movlw	6
 10547  01D68A  2434               	addwf	(btemp+10)^0,w,c
 10548  01D68C  6ED9               	movwf	fsr2l,c
 10549  01D68E  0E00               	movlw	0
 10550  01D690  2035               	addwfc	(btemp+11)^0,w,c
 10551  01D692  6EDA               	movwf	fsr2h,c
 10552  01D694  0E01               	movlw	1
 10553  01D696  6EDF               	movwf	indf2,c
 10554                           
 10555                           ;hid.c: 33:   h->select_p = SW_OFF;
 10556                           ;stkvar	_h @ sp[(0)+-2]
 10557  01D698  0EFE               	movlw	-2
 10558  01D69A  006F FF8C  F034    	movff	plusw1,btemp+10
 10559  01D6A0  0EFF               	movlw	-1
 10560  01D6A2  006F FF8C  F035    	movff	plusw1,btemp+11
 10561  01D6A8  0E03               	movlw	3
 10562  01D6AA  2434               	addwf	(btemp+10)^0,w,c
 10563  01D6AC  6ED9               	movwf	fsr2l,c
 10564  01D6AE  0E00               	movlw	0
 10565  01D6B0  2035               	addwfc	(btemp+11)^0,w,c
 10566  01D6B2  6EDA               	movwf	fsr2h,c
 10567  01D6B4  0E00               	movlw	0
 10568  01D6B6  6EDF               	movwf	indf2,c
 10569                           
 10570                           ;hid.c: 34:   h->enter_p = SW_OFF;
 10571                           ;stkvar	_h @ sp[(0)+-2]
 10572  01D6B8  0EFE               	movlw	-2
 10573  01D6BA  006F FF8C  F034    	movff	plusw1,btemp+10
 10574  01D6C0  0EFF               	movlw	-1
 10575  01D6C2  006F FF8C  F035    	movff	plusw1,btemp+11
 10576  01D6C8  0E05               	movlw	5
 10577  01D6CA  2434               	addwf	(btemp+10)^0,w,c
 10578  01D6CC  6ED9               	movwf	fsr2l,c
 10579  01D6CE  0E00               	movlw	0
 10580  01D6D0  2035               	addwfc	(btemp+11)^0,w,c
 10581  01D6D2  6EDA               	movwf	fsr2h,c
 10582  01D6D4  0E00               	movlw	0
 10583  01D6D6  6EDF               	movwf	indf2,c
 10584                           
 10585                           ;hid.c: 35:   h->calib_p = SW_OFF;
 10586                           ;stkvar	_h @ sp[(0)+-2]
 10587  01D6D8  0EFE               	movlw	-2
 10588  01D6DA  006F FF8C  F034    	movff	plusw1,btemp+10
 10589  01D6E0  0EFF               	movlw	-1
 10590  01D6E2  006F FF8C  F035    	movff	plusw1,btemp+11
 10591  01D6E8  0E07               	movlw	7
 10592  01D6EA  2434               	addwf	(btemp+10)^0,w,c
 10593  01D6EC  6ED9               	movwf	fsr2l,c
 10594  01D6EE  0E00               	movlw	0
 10595  01D6F0  2035               	addwfc	(btemp+11)^0,w,c
 10596  01D6F2  6EDA               	movwf	fsr2h,c
 10597  01D6F4  0E00               	movlw	0
 10598  01D6F6  D06A               	goto	L6
 10599  01D6F8                     l17537:
 10600                           
 10601                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
 10602                           ;stkvar	_h @ sp[(0)+-2]
 10603  01D6F8  0EFE               	movlw	-2
 10604  01D6FA  006F FF8C  F034    	movff	plusw1,btemp+10
 10605  01D700  0EFF               	movlw	-1
 10606  01D702  006F FF8C  F035    	movff	plusw1,btemp+11
 10607  01D708  0E02               	movlw	2
 10608  01D70A  2434               	addwf	(btemp+10)^0,w,c
 10609  01D70C  6ED9               	movwf	fsr2l,c
 10610  01D70E  0E00               	movlw	0
 10611  01D710  2035               	addwfc	(btemp+11)^0,w,c
 10612  01D712  6EDA               	movwf	fsr2h,c
 10613  01D714  50DF               	movf	indf2,w,c
 10614  01D716  A4D8               	btfss	status,2,c
 10615  01D718  D076               	goto	l2301
 10616                           
 10617                           ;stkvar	_h @ sp[(0)+-2]
 10618  01D71A  0EFE               	movlw	-2
 10619  01D71C  006F FF8C  F034    	movff	plusw1,btemp+10
 10620  01D722  0EFF               	movlw	-1
 10621  01D724  006F FF8C  F035    	movff	plusw1,btemp+11
 10622  01D72A  0E03               	movlw	3
 10623  01D72C  2434               	addwf	(btemp+10)^0,w,c
 10624  01D72E  6ED9               	movwf	fsr2l,c
 10625  01D730  0E00               	movlw	0
 10626  01D732  2035               	addwfc	(btemp+11)^0,w,c
 10627  01D734  6EDA               	movwf	fsr2h,c
 10628  01D736  50DF               	movf	indf2,w,c
 10629  01D738  A4D8               	btfss	status,2,c
 10630  01D73A  D065               	goto	l2301
 10631                           
 10632                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
 10633                           ;stkvar	_h @ sp[(0)+-2]
 10634  01D73C  0EFE               	movlw	-2
 10635  01D73E  006F FF8C  F034    	movff	plusw1,btemp+10
 10636  01D744  0EFF               	movlw	-1
 10637  01D746  006F FF8C  F035    	movff	plusw1,btemp+11
 10638  01D74C  0E08               	movlw	8
 10639  01D74E  2434               	addwf	(btemp+10)^0,w,c
 10640  01D750  6ED9               	movwf	fsr2l,c
 10641  01D752  0E00               	movlw	0
 10642  01D754  2035               	addwfc	(btemp+11)^0,w,c
 10643  01D756  6EDA               	movwf	fsr2h,c
 10644                           
 10645                           ;stkvar	_h @ sp[(0)+-2]
 10646  01D758  0EFE               	movlw	-2
 10647  01D75A  006F FF8C  F034    	movff	plusw1,btemp+10
 10648  01D760  0EFF               	movlw	-1
 10649  01D762  006F FF8C  F035    	movff	plusw1,btemp+11
 10650  01D768  0E08               	movlw	8
 10651  01D76A  2434               	addwf	(btemp+10)^0,w,c
 10652  01D76C  6EE9               	movwf	fsr0l,c
 10653  01D76E  0E00               	movlw	0
 10654  01D770  2035               	addwfc	(btemp+11)^0,w,c
 10655  01D772  6EEA               	movwf	fsr0h,c
 10656  01D774  2AEF               	incf	indf0,f,c
 10657  01D776  50EF               	movf	indf0,w,c
 10658  01D778  0B03               	andlw	3
 10659  01D77A  6EDF               	movwf	indf2,c
 10660                           
 10661                           ;hid.c: 41:    h->hid_display = h->sequence;
 10662                           ;stkvar	_h @ sp[(0)+-2]
 10663  01D77C  0EFE               	movlw	-2
 10664  01D77E  006F FF8C  F034    	movff	plusw1,btemp+10
 10665  01D784  0EFF               	movlw	-1
 10666  01D786  006F FF8C  F035    	movff	plusw1,btemp+11
 10667  01D78C  0E08               	movlw	8
 10668  01D78E  2434               	addwf	(btemp+10)^0,w,c
 10669  01D790  6ED9               	movwf	fsr2l,c
 10670  01D792  0E00               	movlw	0
 10671  01D794  2035               	addwfc	(btemp+11)^0,w,c
 10672  01D796  6EDA               	movwf	fsr2h,c
 10673                           
 10674                           ;stkvar	_h @ sp[(0)+-2]
 10675  01D798  0EFE               	movlw	-2
 10676  01D79A  006F FF8F FFE9     	movff	plusw1,fsr0l
 10677  01D7A0  0EFF               	movlw	-1
 10678  01D7A2  006F FF8F FFEA     	movff	plusw1,fsr0h
 10679  01D7A8  006F FF7F FFEF     	movff	indf2,indf0
 10680                           
 10681                           ;hid.c: 42:    h->wait_select = 1;
 10682                           ;stkvar	_h @ sp[(0)+-2]
 10683  01D7AE  0EFE               	movlw	-2
 10684  01D7B0  006F FF8C  F034    	movff	plusw1,btemp+10
 10685  01D7B6  0EFF               	movlw	-1
 10686  01D7B8  006F FF8C  F035    	movff	plusw1,btemp+11
 10687  01D7BE  0E02               	movlw	2
 10688  01D7C0  2434               	addwf	(btemp+10)^0,w,c
 10689  01D7C2  6ED9               	movwf	fsr2l,c
 10690  01D7C4  0E00               	movlw	0
 10691  01D7C6  2035               	addwfc	(btemp+11)^0,w,c
 10692  01D7C8  6EDA               	movwf	fsr2h,c
 10693  01D7CA  0E01               	movlw	1
 10694  01D7CC                     L6:
 10695  01D7CC  6EDF               	movwf	indf2,c
 10696  01D7CE  D01B               	goto	l2301
 10697  01D7D0                     l17547:
 10698                           
 10699                           ;stkvar	_h @ sp[(0)+-2]
 10700  01D7D0  0EFE               	movlw	-2
 10701  01D7D2  006F FF8C  F034    	movff	plusw1,btemp+10
 10702  01D7D8  0EFF               	movlw	-1
 10703  01D7DA  006F FF8C  F035    	movff	plusw1,btemp+11
 10704  01D7E0  0E01               	movlw	1
 10705  01D7E2  2434               	addwf	(btemp+10)^0,w,c
 10706  01D7E4  6ED9               	movwf	fsr2l,c
 10707  01D7E6  0E00               	movlw	0
 10708  01D7E8  2035               	addwfc	(btemp+11)^0,w,c
 10709  01D7EA  6EDA               	movwf	fsr2h,c
 10710  01D7EC  50DF               	movf	indf2,w,c
 10711  01D7EE  6E34               	movwf	(btemp+10)^0,c
 10712  01D7F0  6A35               	clrf	(btemp+11)^0,c
 10713                           
 10714                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10715                           ; Switch size 1, requested type "simple"
 10716                           ; Number of cases is 1, Range of values is 0 to 0
 10717                           ; switch strategies available:
 10718                           ; Name         Instructions Cycles
 10719                           ; simple_byte            4     3 (average)
 10720                           ;	Chosen strategy is simple_byte
 10721  01D7F2  5035               	movf	(btemp+11)^0,w,c
 10722  01D7F4  0A00               	xorlw	0	; case 0
 10723  01D7F6  A4D8               	btfss	status,2,c
 10724  01D7F8  D77F               	goto	l17537
 10725                           
 10726                           ; Switch size 1, requested type "simple"
 10727                           ; Number of cases is 2, Range of values is 0 to 1
 10728                           ; switch strategies available:
 10729                           ; Name         Instructions Cycles
 10730                           ; simple_byte            7     4 (average)
 10731                           ;	Chosen strategy is simple_byte
 10732  01D7FA  5034               	movf	(btemp+10)^0,w,c
 10733  01D7FC  0A00               	xorlw	0	; case 0
 10734  01D7FE  B4D8               	btfsc	status,2,c
 10735  01D800  D701               	goto	l17521
 10736  01D802  0A01               	xorlw	1	; case 1
 10737  01D804  D779               	goto	l17537
 10738  01D806                     l2301:
 10739                           
 10740                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 10741  01D806  52E5               	movf	postdec1,f,c
 10742  01D808  52E5               	movf	postdec1,f,c
 10743  01D80A  0012               	return		;funcret
 10744  01D80C                     __end_of_hid_display:
 10745                           	opt callstack 0
 10746                           
 10747 ;; *************** function _hid_input *****************
 10748 ;; Defined at:
 10749 ;;		line 3 in file "hid.c"
 10750 ;; Parameters:    Size  Location     Type
 10751 ;;  h               2  [STACK] PTR struct H_data
 10752 ;;		 -> H(9), 
 10753 ;; Auto vars:     Size  Location     Type
 10754 ;;		None
 10755 ;; Return value:  Size  Location     Type
 10756 ;;                  2  [STACK] PTR struct H_data
 10757 ;; Registers used:
 10758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10759 ;; Tracked objects:
 10760 ;;		On entry : 0/39
 10761 ;;		On exit  : 0/0
 10762 ;;		Unchanged: 0/0
 10763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10768 ;;Total ram usage:        0 bytes
 10769 ;; Hardware stack levels used:    1
 10770 ;; Hardware stack levels required when called:   16
 10771 ;; This function calls:
 10772 ;;		_get_switch
 10773 ;; This function is called by:
 10774 ;;		_hid_display
 10775 ;; This function uses a reentrant model
 10776 ;;
 10777                           
 10778                           	psect	text26
 10779  01F7F8                     __ptext26:
 10780                           	opt callstack 0
 10781  01F7F8                     _hid_input:
 10782                           	opt callstack 13
 10783                           
 10784                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
 10785                           
 10786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10787                           ;incstack = 0
 10788  01F7F8  0E02               	movlw	2
 10789  01F7FA  6EE6               	movwf	postinc1,c
 10790  01F7FC  EC2A  F014         	call	_get_switch	;wreg free
 10791  01F800  502A               	movf	btemp^0,w,c
 10792  01F802  B4D8               	btfsc	status,2,c
 10793  01F804  D02C               	goto	l17205
 10794                           
 10795                           ;hid.c: 6:   h->wait_select = 0;
 10796                           ;stkvar	_h @ sp[(0)+-2]
 10797  01F806  0EFE               	movlw	-2
 10798  01F808  006F FF8C  F034    	movff	plusw1,btemp+10
 10799  01F80E  0EFF               	movlw	-1
 10800  01F810  006F FF8C  F035    	movff	plusw1,btemp+11
 10801  01F816  0E02               	movlw	2
 10802  01F818  2434               	addwf	(btemp+10)^0,w,c
 10803  01F81A  6ED9               	movwf	fsr2l,c
 10804  01F81C  0E00               	movlw	0
 10805  01F81E  2035               	addwfc	(btemp+11)^0,w,c
 10806  01F820  6EDA               	movwf	fsr2h,c
 10807  01F822  0E00               	movlw	0
 10808  01F824  6EDF               	movwf	indf2,c
 10809                           
 10810                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
 10811  01F826  0E02               	movlw	2
 10812  01F828  6EE6               	movwf	postinc1,c
 10813  01F82A  EC2A  F014         	call	_get_switch	;wreg free
 10814  01F82E  502A               	movf	btemp^0,w,c
 10815  01F830  B4D8               	btfsc	status,2,c
 10816  01F832  D003               	goto	u16710
 10817  01F834  6A35               	clrf	(btemp+11)^0,c
 10818  01F836  2A35               	incf	(btemp+11)^0,f,c
 10819  01F838  D001               	goto	u16728
 10820  01F83A                     u16710:
 10821  01F83A  6A35               	clrf	(btemp+11)^0,c
 10822  01F83C                     u16728:
 10823                           
 10824                           ;stkvar	_h @ sp[(0)+-2]
 10825  01F83C  0EFE               	movlw	-2
 10826  01F83E  006F FF8C  F032    	movff	plusw1,btemp+8
 10827  01F844  0EFF               	movlw	-1
 10828  01F846  006F FF8C  F033    	movff	plusw1,btemp+9
 10829  01F84C  0E03               	movlw	3
 10830  01F84E  2432               	addwf	(btemp+8)^0,w,c
 10831  01F850  6ED9               	movwf	fsr2l,c
 10832  01F852  0E00               	movlw	0
 10833  01F854  2033               	addwfc	(btemp+9)^0,w,c
 10834  01F856  6EDA               	movwf	fsr2h,c
 10835  01F858  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10836  01F85E                     l17205:
 10837                           
 10838                           ;hid.c: 10:  if (get_switch(SENTER)) {
 10839  01F85E  0E03               	movlw	3
 10840  01F860  6EE6               	movwf	postinc1,c
 10841  01F862  EC2A  F014         	call	_get_switch	;wreg free
 10842  01F866  502A               	movf	btemp^0,w,c
 10843  01F868  B4D8               	btfsc	status,2,c
 10844  01F86A  D02C               	goto	l17211
 10845                           
 10846                           ;hid.c: 11:   h->wait_enter = 0;
 10847                           ;stkvar	_h @ sp[(0)+-2]
 10848  01F86C  0EFE               	movlw	-2
 10849  01F86E  006F FF8C  F034    	movff	plusw1,btemp+10
 10850  01F874  0EFF               	movlw	-1
 10851  01F876  006F FF8C  F035    	movff	plusw1,btemp+11
 10852  01F87C  0E04               	movlw	4
 10853  01F87E  2434               	addwf	(btemp+10)^0,w,c
 10854  01F880  6ED9               	movwf	fsr2l,c
 10855  01F882  0E00               	movlw	0
 10856  01F884  2035               	addwfc	(btemp+11)^0,w,c
 10857  01F886  6EDA               	movwf	fsr2h,c
 10858  01F888  0E00               	movlw	0
 10859  01F88A  6EDF               	movwf	indf2,c
 10860                           
 10861                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
 10862  01F88C  0E03               	movlw	3
 10863  01F88E  6EE6               	movwf	postinc1,c
 10864  01F890  EC2A  F014         	call	_get_switch	;wreg free
 10865  01F894  502A               	movf	btemp^0,w,c
 10866  01F896  B4D8               	btfsc	status,2,c
 10867  01F898  D003               	goto	u16740
 10868  01F89A  6A35               	clrf	(btemp+11)^0,c
 10869  01F89C  2A35               	incf	(btemp+11)^0,f,c
 10870  01F89E  D001               	goto	u16758
 10871  01F8A0                     u16740:
 10872  01F8A0  6A35               	clrf	(btemp+11)^0,c
 10873  01F8A2                     u16758:
 10874                           
 10875                           ;stkvar	_h @ sp[(0)+-2]
 10876  01F8A2  0EFE               	movlw	-2
 10877  01F8A4  006F FF8C  F032    	movff	plusw1,btemp+8
 10878  01F8AA  0EFF               	movlw	-1
 10879  01F8AC  006F FF8C  F033    	movff	plusw1,btemp+9
 10880  01F8B2  0E05               	movlw	5
 10881  01F8B4  2432               	addwf	(btemp+8)^0,w,c
 10882  01F8B6  6ED9               	movwf	fsr2l,c
 10883  01F8B8  0E00               	movlw	0
 10884  01F8BA  2033               	addwfc	(btemp+9)^0,w,c
 10885  01F8BC  6EDA               	movwf	fsr2h,c
 10886  01F8BE  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10887  01F8C4                     l17211:
 10888                           
 10889                           ;hid.c: 15:  if (get_switch(SCALIB)) {
 10890  01F8C4  0E04               	movlw	4
 10891  01F8C6  6EE6               	movwf	postinc1,c
 10892  01F8C8  EC2A  F014         	call	_get_switch	;wreg free
 10893  01F8CC  502A               	movf	btemp^0,w,c
 10894  01F8CE  B4D8               	btfsc	status,2,c
 10895  01F8D0  D02C               	goto	l2292
 10896                           
 10897                           ;hid.c: 16:   h->wait_calib = 0;
 10898                           ;stkvar	_h @ sp[(0)+-2]
 10899  01F8D2  0EFE               	movlw	-2
 10900  01F8D4  006F FF8C  F034    	movff	plusw1,btemp+10
 10901  01F8DA  0EFF               	movlw	-1
 10902  01F8DC  006F FF8C  F035    	movff	plusw1,btemp+11
 10903  01F8E2  0E06               	movlw	6
 10904  01F8E4  2434               	addwf	(btemp+10)^0,w,c
 10905  01F8E6  6ED9               	movwf	fsr2l,c
 10906  01F8E8  0E00               	movlw	0
 10907  01F8EA  2035               	addwfc	(btemp+11)^0,w,c
 10908  01F8EC  6EDA               	movwf	fsr2h,c
 10909  01F8EE  0E00               	movlw	0
 10910  01F8F0  6EDF               	movwf	indf2,c
 10911                           
 10912                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
 10913  01F8F2  0E04               	movlw	4
 10914  01F8F4  6EE6               	movwf	postinc1,c
 10915  01F8F6  EC2A  F014         	call	_get_switch	;wreg free
 10916  01F8FA  502A               	movf	btemp^0,w,c
 10917  01F8FC  B4D8               	btfsc	status,2,c
 10918  01F8FE  D003               	goto	u16770
 10919  01F900  6A35               	clrf	(btemp+11)^0,c
 10920  01F902  2A35               	incf	(btemp+11)^0,f,c
 10921  01F904  D001               	goto	u16788
 10922  01F906                     u16770:
 10923  01F906  6A35               	clrf	(btemp+11)^0,c
 10924  01F908                     u16788:
 10925                           
 10926                           ;stkvar	_h @ sp[(0)+-2]
 10927  01F908  0EFE               	movlw	-2
 10928  01F90A  006F FF8C  F032    	movff	plusw1,btemp+8
 10929  01F910  0EFF               	movlw	-1
 10930  01F912  006F FF8C  F033    	movff	plusw1,btemp+9
 10931  01F918  0E07               	movlw	7
 10932  01F91A  2432               	addwf	(btemp+8)^0,w,c
 10933  01F91C  6ED9               	movwf	fsr2l,c
 10934  01F91E  0E00               	movlw	0
 10935  01F920  2033               	addwfc	(btemp+9)^0,w,c
 10936  01F922  6EDA               	movwf	fsr2h,c
 10937  01F924  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10938  01F92A                     l2292:
 10939                           
 10940                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 10941  01F92A  52E5               	movf	postdec1,f,c
 10942  01F92C  52E5               	movf	postdec1,f,c
 10943  01F92E  0012               	return		;funcret
 10944  01F930                     __end_of_hid_input:
 10945                           	opt callstack 0
 10946                           
 10947 ;; *************** function _esr_check *****************
 10948 ;; Defined at:
 10949 ;;		line 197 in file "bsoc.c"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;  fsm             1  [STACK] const unsigned char 
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;		None
 10954 ;; Return value:  Size  Location     Type
 10955 ;;                  4  [STACK] float 
 10956 ;; Registers used:
 10957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 0/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10967 ;;Total ram usage:        0 bytes
 10968 ;; Hardware stack levels used:    1
 10969 ;; Hardware stack levels required when called:   18
 10970 ;; This function calls:
 10971 ;;		_StartTimer
 10972 ;;		_TimerDone
 10973 ;;		___fldiv
 10974 ;;		___flsub
 10975 ;;		_conv_raw_result
 10976 ;;		_fabsf
 10977 ;;		_set_load_relay_one
 10978 ;;		_set_load_relay_two
 10979 ;;		_update_adc_result
 10980 ;; This function is called by:
 10981 ;;		_main
 10982 ;; This function uses a reentrant model
 10983 ;;
 10984                           
 10985                           	psect	text27
 10986  01B8F2                     __ptext27:
 10987                           	opt callstack 0
 10988  01B8F2                     _esr_check:
 10989                           	opt callstack 12
 10990                           
 10991                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
 10992                           ;stkvar	_fsm @ sp[(0)+-1]
 10993                           
 10994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10995                           ;incstack = 0
 10996  01B8F2  0EFF               	movlw	-1
 10997  01B8F4  50E3               	movf	plusw1,w,c
 10998  01B8F6  B4D8               	btfsc	status,2,c
 10999  01B8F8  D149               	goto	l14405
 11000                           
 11001                           ;bsoc.c: 202:   esr_state = 0;
 11002  01B8FA  0100               	movlb	0	; () banked
 11003  01B8FC  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11004                           
 11005                           ; BSR set to: 0
 11006                           ;bsoc.c: 203:   return -10.0;
 11007  01B8FE  0E00               	movlw	0
 11008  01B900  6E2A               	movwf	btemp^0,c
 11009  01B902  0E00               	movlw	0
 11010  01B904  6E2B               	movwf	(btemp+1)^0,c
 11011  01B906  0E20               	movlw	32
 11012  01B908  6E2C               	movwf	(btemp+2)^0,c
 11013  01B90A  0EC1               	movlw	193
 11014  01B90C  D15B               	goto	L7
 11015  01B90E                     l14337:
 11016                           
 11017                           ; BSR set to: 0
 11018                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
 11019  01B90E  0E10               	movlw	16
 11020  01B910  6EE6               	movwf	postinc1,c
 11021  01B912  0E27               	movlw	39
 11022  01B914  6EE6               	movwf	postinc1,c
 11023  01B916  0E0C               	movlw	12
 11024  01B918  6EE6               	movwf	postinc1,c
 11025  01B91A  EC09  F012         	call	_StartTimer	;wreg free
 11026  01B91E                     l14339:
 11027                           
 11028                           ;bsoc.c: 209:   esr_state++;
 11029  01B91E  0100               	movlb	0	; () banked
 11030  01B920  2BC6               	incf	esr_check@esr_state& (0+255),f,b
 11031                           
 11032                           ;bsoc.c: 210:   break;
 11033  01B922  D149               	goto	l14407
 11034  01B924                     l14341:
 11035                           
 11036                           ; BSR set to: 0
 11037                           ;bsoc.c: 215:   set_load_relay_one(0);
 11038  01B924  0E00               	movlw	0
 11039  01B926  6EE6               	movwf	postinc1,c
 11040  01B928  EC3D  F017         	call	_set_load_relay_one	;wreg free
 11041                           
 11042                           ;bsoc.c: 216:   set_load_relay_two(0);
 11043  01B92C  0E00               	movlw	0
 11044  01B92E  6EE6               	movwf	postinc1,c
 11045  01B930  EC35  F017         	call	_set_load_relay_two	;wreg free
 11046                           
 11047                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
 11048  01B934  0E0C               	movlw	12
 11049  01B936  6EE6               	movwf	postinc1,c
 11050  01B938  EC95  F014         	call	_TimerDone	;wreg free
 11051  01B93C  502A               	movf	btemp^0,w,c
 11052  01B93E  B4D8               	btfsc	status,2,c
 11053  01B940  D009               	goto	l14347
 11054                           
 11055                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
 11056  01B942  0E10               	movlw	16
 11057  01B944  6EE6               	movwf	postinc1,c
 11058  01B946  0E27               	movlw	39
 11059  01B948  6EE6               	movwf	postinc1,c
 11060  01B94A  0E0C               	movlw	12
 11061  01B94C  6EE6               	movwf	postinc1,c
 11062  01B94E  EC09  F012         	call	_StartTimer	;wreg free
 11063                           
 11064                           ;bsoc.c: 219:   } else {
 11065  01B952  D006               	goto	l14351
 11066  01B954                     l14347:
 11067                           
 11068                           ;bsoc.c: 220:    return -2.0;
 11069  01B954  0E00               	movlw	0
 11070  01B956  6E2A               	movwf	btemp^0,c
 11071  01B958  0E00               	movlw	0
 11072  01B95A  6E2B               	movwf	(btemp+1)^0,c
 11073  01B95C  0E00               	movlw	0
 11074  01B95E  D066               	goto	L9
 11075  01B960                     l14351:
 11076                           
 11077                           ;bsoc.c: 225:   update_adc_result();
 11078  01B960  ECA7  F012         	call	_update_adc_result	;wreg free
 11079                           
 11080                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
 11081  01B964  0E00               	movlw	0
 11082  01B966  6EE6               	movwf	postinc1,c
 11083  01B968  0E04               	movlw	4
 11084  01B96A  6EE6               	movwf	postinc1,c
 11085  01B96C  ECC0  F0C8         	call	_conv_raw_result	;wreg free
 11086  01B970  0060  F0A8  FA21   	movff	btemp,_C+290	;volatile
 11087  01B976  0060  F0AC  FA22   	movff	btemp+1,_C+291	;volatile
 11088  01B97C  0060  F0B0  FA23   	movff	btemp+2,_C+292	;volatile
 11089  01B982  0060  F0B4  FA24   	movff	btemp+3,_C+293	;volatile
 11090  01B988  D7CA               	goto	l14339
 11091  01B98A                     l14357:
 11092                           
 11093                           ; BSR set to: 0
 11094                           ;bsoc.c: 230:   set_load_relay_one(1);
 11095  01B98A  0E01               	movlw	1
 11096  01B98C  6EE6               	movwf	postinc1,c
 11097  01B98E  EC3D  F017         	call	_set_load_relay_one	;wreg free
 11098                           
 11099                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 11100  01B992  0E0C               	movlw	12
 11101  01B994  6EE6               	movwf	postinc1,c
 11102  01B996  EC95  F014         	call	_TimerDone	;wreg free
 11103  01B99A  502A               	movf	btemp^0,w,c
 11104  01B99C  B4D8               	btfsc	status,2,c
 11105  01B99E  D009               	goto	l14363
 11106                           
 11107                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 11108  01B9A0  0E10               	movlw	16
 11109  01B9A2  6EE6               	movwf	postinc1,c
 11110  01B9A4  0E27               	movlw	39
 11111  01B9A6  6EE6               	movwf	postinc1,c
 11112  01B9A8  0E0C               	movlw	12
 11113  01B9AA  6EE6               	movwf	postinc1,c
 11114  01B9AC  EC09  F012         	call	_StartTimer	;wreg free
 11115                           
 11116                           ;bsoc.c: 233:   } else {
 11117  01B9B0  D006               	goto	l14367
 11118  01B9B2                     l14363:
 11119                           
 11120                           ;bsoc.c: 234:    return -3.0;
 11121  01B9B2  0E00               	movlw	0
 11122  01B9B4  6E2A               	movwf	btemp^0,c
 11123  01B9B6  0E00               	movlw	0
 11124  01B9B8  6E2B               	movwf	(btemp+1)^0,c
 11125  01B9BA  0E40               	movlw	64
 11126  01B9BC  D037               	goto	L9
 11127  01B9BE                     l14367:
 11128                           
 11129                           ;bsoc.c: 237:   update_adc_result();
 11130  01B9BE  ECA7  F012         	call	_update_adc_result	;wreg free
 11131                           
 11132                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 11133  01B9C2  0E00               	movlw	0
 11134  01B9C4  6EE6               	movwf	postinc1,c
 11135  01B9C6  0E04               	movlw	4
 11136  01B9C8  6EE6               	movwf	postinc1,c
 11137  01B9CA  ECC0  F0C8         	call	_conv_raw_result	;wreg free
 11138  01B9CE  0060  F0A8  FA25   	movff	btemp,_C+294	;volatile
 11139  01B9D4  0060  F0AC  FA26   	movff	btemp+1,_C+295	;volatile
 11140  01B9DA  0060  F0B0  FA27   	movff	btemp+2,_C+296	;volatile
 11141  01B9E0  0060  F0B4  FA28   	movff	btemp+3,_C+297	;volatile
 11142                           
 11143                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 11144  01B9E6  0E00               	movlw	0
 11145  01B9E8  6EE6               	movwf	postinc1,c
 11146  01B9EA  0E00               	movlw	0
 11147  01B9EC  6EE6               	movwf	postinc1,c
 11148  01B9EE  ECC0  F0C8         	call	_conv_raw_result	;wreg free
 11149  01B9F2  0060  F0A8  FA19   	movff	btemp,_C+282	;volatile
 11150  01B9F8  0060  F0AC  FA1A   	movff	btemp+1,_C+283	;volatile
 11151  01B9FE  0060  F0B0  FA1B   	movff	btemp+2,_C+284	;volatile
 11152  01BA04  0060  F0B4  FA1C   	movff	btemp+3,_C+285	;volatile
 11153  01BA0A  D789               	goto	l14339
 11154  01BA0C                     l14375:
 11155                           
 11156                           ; BSR set to: 0
 11157                           ;bsoc.c: 243:   set_load_relay_two(1);
 11158  01BA0C  0E01               	movlw	1
 11159  01BA0E  6EE6               	movwf	postinc1,c
 11160  01BA10  EC35  F017         	call	_set_load_relay_two	;wreg free
 11161                           
 11162                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 11163  01BA14  0E0C               	movlw	12
 11164  01BA16  6EE6               	movwf	postinc1,c
 11165  01BA18  EC95  F014         	call	_TimerDone	;wreg free
 11166  01BA1C  502A               	movf	btemp^0,w,c
 11167  01BA1E  A4D8               	btfss	status,2,c
 11168  01BA20  D008               	goto	l14383
 11169                           
 11170                           ;bsoc.c: 245:    return -4.0;
 11171  01BA22  0E00               	movlw	0
 11172  01BA24  6E2A               	movwf	btemp^0,c
 11173  01BA26  0E00               	movlw	0
 11174  01BA28  6E2B               	movwf	(btemp+1)^0,c
 11175  01BA2A  0E80               	movlw	128
 11176  01BA2C                     L9:
 11177  01BA2C  6E2C               	movwf	(btemp+2)^0,c
 11178  01BA2E  0EC0               	movlw	192
 11179  01BA30  D0C9               	goto	L7
 11180  01BA32                     l14383:
 11181                           
 11182                           ;bsoc.c: 247:   update_adc_result();
 11183  01BA32  ECA7  F012         	call	_update_adc_result	;wreg free
 11184                           
 11185                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 11186  01BA36  0E00               	movlw	0
 11187  01BA38  6EE6               	movwf	postinc1,c
 11188  01BA3A  0E04               	movlw	4
 11189  01BA3C  6EE6               	movwf	postinc1,c
 11190  01BA3E  ECC0  F0C8         	call	_conv_raw_result	;wreg free
 11191  01BA42  0060  F0A8  FA29   	movff	btemp,_C+298	;volatile
 11192  01BA48  0060  F0AC  FA2A   	movff	btemp+1,_C+299	;volatile
 11193  01BA4E  0060  F0B0  FA2B   	movff	btemp+2,_C+300	;volatile
 11194  01BA54  0060  F0B4  FA2C   	movff	btemp+3,_C+301	;volatile
 11195                           
 11196                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 11197  01BA5A  0E00               	movlw	0
 11198  01BA5C  6EE6               	movwf	postinc1,c
 11199  01BA5E  0E00               	movlw	0
 11200  01BA60  6EE6               	movwf	postinc1,c
 11201  01BA62  ECC0  F0C8         	call	_conv_raw_result	;wreg free
 11202  01BA66  0060  F0A8  FA1D   	movff	btemp,_C+286	;volatile
 11203  01BA6C  0060  F0AC  FA1E   	movff	btemp+1,_C+287	;volatile
 11204  01BA72  0060  F0B0  FA1F   	movff	btemp+2,_C+288	;volatile
 11205  01BA78  0060  F0B4  FA20   	movff	btemp+3,_C+289	;volatile
 11206                           
 11207                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 11208  01BA7E  EE22  F21D         	lfsr	2,_C+286	;volatile
 11209  01BA82  006F FF7B FFE6     	movff	postinc2,postinc1
 11210  01BA88  006F FF7B FFE6     	movff	postinc2,postinc1
 11211  01BA8E  006F FF7B FFE6     	movff	postinc2,postinc1
 11212  01BA94  006F FF7B FFE6     	movff	postinc2,postinc1
 11213  01BA9A  EE22  F219         	lfsr	2,_C+282	;volatile
 11214  01BA9E  006F FF7B FFE6     	movff	postinc2,postinc1
 11215  01BAA4  006F FF7B FFE6     	movff	postinc2,postinc1
 11216  01BAAA  006F FF7B FFE6     	movff	postinc2,postinc1
 11217  01BAB0  006F FF7B FFE6     	movff	postinc2,postinc1
 11218  01BAB6  EC85  F011         	call	___flsub	;wreg free
 11219  01BABA  0060  F0AB  FFE6   	movff	btemp,postinc1
 11220  01BAC0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11221  01BAC6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11222  01BACC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11223  01BAD2  EE22  F229         	lfsr	2,_C+298	;volatile
 11224  01BAD6  006F FF7B FFE6     	movff	postinc2,postinc1
 11225  01BADC  006F FF7B FFE6     	movff	postinc2,postinc1
 11226  01BAE2  006F FF7B FFE6     	movff	postinc2,postinc1
 11227  01BAE8  006F FF7B FFE6     	movff	postinc2,postinc1
 11228  01BAEE  EE22  F225         	lfsr	2,_C+294	;volatile
 11229  01BAF2  006F FF7B FFE6     	movff	postinc2,postinc1
 11230  01BAF8  006F FF7B FFE6     	movff	postinc2,postinc1
 11231  01BAFE  006F FF7B FFE6     	movff	postinc2,postinc1
 11232  01BB04  006F FF7B FFE6     	movff	postinc2,postinc1
 11233  01BB0A  EC85  F011         	call	___flsub	;wreg free
 11234  01BB0E  0060  F0AB  FFE6   	movff	btemp,postinc1
 11235  01BB14  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11236  01BB1A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11237  01BB20  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11238  01BB26  EC78  F0C3         	call	___fldiv	;wreg free
 11239  01BB2A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11240  01BB30  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11241  01BB36  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11242  01BB3C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11243  01BB42  ECA0  F006         	call	_fabsf	;wreg free
 11244  01BB46  0060  F0A8  F987   	movff	btemp,_C+136	;volatile
 11245  01BB4C  0060  F0AC  F988   	movff	btemp+1,_C+137	;volatile
 11246  01BB52  0060  F0B0  F989   	movff	btemp+2,_C+138	;volatile
 11247  01BB58  0060  F0B4  F98A   	movff	btemp+3,_C+139	;volatile
 11248                           
 11249                           ;bsoc.c: 252:   set_load_relay_one(0);
 11250  01BB5E  0E00               	movlw	0
 11251  01BB60  6EE6               	movwf	postinc1,c
 11252  01BB62  EC3D  F017         	call	_set_load_relay_one	;wreg free
 11253                           
 11254                           ;bsoc.c: 253:   set_load_relay_two(0);
 11255  01BB66  0E00               	movlw	0
 11256  01BB68  6EE6               	movwf	postinc1,c
 11257  01BB6A  EC35  F017         	call	_set_load_relay_two	;wreg free
 11258                           
 11259                           ;bsoc.c: 254:   esr_state = 0;
 11260  01BB6E  0100               	movlb	0	; () banked
 11261  01BB70  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11262                           
 11263                           ; BSR set to: 0
 11264                           ;bsoc.c: 255:   return C.esr;
 11265  01BB72  0062  F61C  F02A   	movff	_C+136,btemp	;volatile
 11266  01BB78  0062  F620  F02B   	movff	_C+137,btemp+1	;volatile
 11267  01BB7E  0062  F624  F02C   	movff	_C+138,btemp+2	;volatile
 11268  01BB84  0062  F628  F02D   	movff	_C+139,btemp+3	;volatile
 11269  01BB8A  D01D               	goto	l2417
 11270  01BB8C                     l14405:
 11271  01BB8C  0100               	movlb	0	; () banked
 11272  01BB8E  51C6               	movf	esr_check@esr_state& (0+255),w,b
 11273  01BB90  6E34               	movwf	(btemp+10)^0,c
 11274  01BB92  6A35               	clrf	(btemp+11)^0,c
 11275                           
 11276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11277                           ; Switch size 1, requested type "simple"
 11278                           ; Number of cases is 1, Range of values is 0 to 0
 11279                           ; switch strategies available:
 11280                           ; Name         Instructions Cycles
 11281                           ; simple_byte            4     3 (average)
 11282                           ;	Chosen strategy is simple_byte
 11283  01BB94  5035               	movf	(btemp+11)^0,w,c
 11284  01BB96  0A00               	xorlw	0	; case 0
 11285  01BB98  A4D8               	btfss	status,2,c
 11286  01BB9A  D00D               	goto	l14407
 11287                           
 11288                           ; BSR set to: 0
 11289                           ; Switch size 1, requested type "simple"
 11290                           ; Number of cases is 4, Range of values is 0 to 3
 11291                           ; switch strategies available:
 11292                           ; Name         Instructions Cycles
 11293                           ; simple_byte           13     7 (average)
 11294                           ;	Chosen strategy is simple_byte
 11295  01BB9C  5034               	movf	(btemp+10)^0,w,c
 11296  01BB9E  0A00               	xorlw	0	; case 0
 11297  01BBA0  B4D8               	btfsc	status,2,c
 11298  01BBA2  D6B5               	goto	l14337
 11299  01BBA4  0A01               	xorlw	1	; case 1
 11300  01BBA6  B4D8               	btfsc	status,2,c
 11301  01BBA8  D6BD               	goto	l14341
 11302  01BBAA  0A03               	xorlw	3	; case 2
 11303  01BBAC  B4D8               	btfsc	status,2,c
 11304  01BBAE  D6ED               	goto	l14357
 11305  01BBB0  0A01               	xorlw	1	; case 3
 11306  01BBB2  B4D8               	btfsc	status,2,c
 11307  01BBB4  D72B               	goto	l14375
 11308  01BBB6                     l14407:
 11309                           
 11310                           ; BSR set to: 0
 11311                           ;bsoc.c: 260:  return -1.0;
 11312  01BBB6  0E00               	movlw	0
 11313  01BBB8  6E2A               	movwf	btemp^0,c
 11314  01BBBA  0E00               	movlw	0
 11315  01BBBC  6E2B               	movwf	(btemp+1)^0,c
 11316  01BBBE  0E80               	movlw	128
 11317  01BBC0  6E2C               	movwf	(btemp+2)^0,c
 11318  01BBC2  0EBF               	movlw	191
 11319  01BBC4                     L7:
 11320  01BBC4  6E2D               	movwf	(btemp+3)^0,c
 11321  01BBC6                     l2417:
 11322                           
 11323                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 11324  01BBC6  52E5               	movf	postdec1,f,c
 11325  01BBC8  0012               	return		;funcret
 11326  01BBCA                     __end_of_esr_check:
 11327                           	opt callstack 0
 11328                           
 11329 ;; *************** function _update_adc_result *****************
 11330 ;; Defined at:
 11331 ;;		line 111 in file "daq.c"
 11332 ;; Parameters:    Size  Location     Type
 11333 ;;		None
 11334 ;; Auto vars:     Size  Location     Type
 11335 ;;		None
 11336 ;; Return value:  Size  Location     Type
 11337 ;;                  1  [STACK] _Bool 
 11338 ;; Registers used:
 11339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 11340 ;; Tracked objects:
 11341 ;;		On entry : 0/0
 11342 ;;		On exit  : 0/0
 11343 ;;		Unchanged: 0/0
 11344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11349 ;;Total ram usage:        0 bytes
 11350 ;; Hardware stack levels used:    1
 11351 ;; Hardware stack levels required when called:   17
 11352 ;; This function calls:
 11353 ;;		_StartTimer
 11354 ;;		_TimerDone
 11355 ;;		_check_adc_scan
 11356 ;;		_clear_adc_scan
 11357 ;;		_start_adc_scan
 11358 ;; This function is called by:
 11359 ;;		_esr_check
 11360 ;; This function uses a reentrant model
 11361 ;;
 11362                           
 11363                           	psect	text28
 11364  00254E                     __ptext28:
 11365                           	opt callstack 0
 11366  00254E                     _update_adc_result:
 11367                           	opt callstack 12
 11368                           
 11369                           ;daq.c: 113:  if (R.done) {
 11370                           
 11371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11372                           ;incstack = 0
 11373  00254E  0101               	movlb	1	; () banked
 11374  002550  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 11375  002552  B4D8               	btfsc	status,2,c
 11376  002554  0012               	return	
 11377                           
 11378                           ; BSR set to: 1
 11379                           ;daq.c: 114:   clear_adc_scan();
 11380  002556  ECB7  F017         	call	_clear_adc_scan	;wreg free
 11381                           
 11382                           ; BSR set to: 1
 11383                           ;daq.c: 115:   start_adc_scan();
 11384  00255A  EC43  F00E         	call	_start_adc_scan	;wreg free
 11385                           
 11386                           ;daq.c: 116:   StartTimer(TMR_ADC, 200);
 11387  00255E  0EC8               	movlw	200
 11388  002560  6EE6               	movwf	postinc1,c
 11389  002562  0E00               	movlw	0
 11390  002564  6EE6               	movwf	postinc1,c
 11391  002566  0E01               	movlw	1
 11392  002568  6EE6               	movwf	postinc1,c
 11393  00256A  EC09  F012         	call	_StartTimer	;wreg free
 11394  00256E                     l13765:
 11395  00256E  0E01               	movlw	1
 11396  002570  6EE6               	movwf	postinc1,c
 11397  002572  EC95  F014         	call	_TimerDone	;wreg free
 11398  002576  502A               	movf	btemp^0,w,c
 11399  002578  A4D8               	btfss	status,2,c
 11400  00257A  0012               	return	
 11401  00257C  EC9D  F017         	call	_check_adc_scan	;wreg free
 11402  002580  502A               	movf	btemp^0,w,c
 11403  002582  A4D8               	btfss	status,2,c
 11404  002584  0012               	return	
 11405  002586  D7F3               	goto	l13765
 11406  002588                     __end_of_update_adc_result:
 11407                           	opt callstack 0
 11408                           
 11409 ;; *************** function _check_adc_scan *****************
 11410 ;; Defined at:
 11411 ;;		line 95 in file "daq.c"
 11412 ;; Parameters:    Size  Location     Type
 11413 ;;		None
 11414 ;; Auto vars:     Size  Location     Type
 11415 ;;		None
 11416 ;; Return value:  Size  Location     Type
 11417 ;;                  1  [STACK] _Bool 
 11418 ;; Registers used:
 11419 ;;		btemp
 11420 ;; Tracked objects:
 11421 ;;		On entry : 0/2
 11422 ;;		On exit  : 0/0
 11423 ;;		Unchanged: 0/0
 11424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11429 ;;Total ram usage:        0 bytes
 11430 ;; Hardware stack levels used:    1
 11431 ;; Hardware stack levels required when called:   15
 11432 ;; This function calls:
 11433 ;;		Nothing
 11434 ;; This function is called by:
 11435 ;;		_main
 11436 ;;		_update_adc_result
 11437 ;; This function uses a reentrant model
 11438 ;;
 11439                           
 11440                           	psect	text29
 11441  002F3A                     __ptext29:
 11442                           	opt callstack 0
 11443  002F3A                     _check_adc_scan:
 11444                           	opt callstack 13
 11445                           
 11446                           ;daq.c: 97:  return R.done;
 11447                           
 11448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11449                           ;incstack = 0
 11450  002F3A  0060  F4D4  F02A   	movff	_R+53,btemp	;volatile
 11451                           
 11452                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11453  002F40  0012               	return		;funcret
 11454  002F42                     __end_of_check_adc_scan:
 11455                           	opt callstack 0
 11456                           
 11457 ;; *************** function _set_load_relay_two *****************
 11458 ;; Defined at:
 11459 ;;		line 131 in file "mbmc.c"
 11460 ;; Parameters:    Size  Location     Type
 11461 ;;  mode            1  [STACK] const _Bool 
 11462 ;; Auto vars:     Size  Location     Type
 11463 ;;		None
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  1  [STACK] void 
 11466 ;; Registers used:
 11467 ;;		wreg, fsr1l, fsr1h
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11477 ;;Total ram usage:        0 bytes
 11478 ;; Hardware stack levels used:    1
 11479 ;; Hardware stack levels required when called:   15
 11480 ;; This function calls:
 11481 ;;		Nothing
 11482 ;; This function is called by:
 11483 ;;		_main
 11484 ;;		_esr_check
 11485 ;; This function uses a reentrant model
 11486 ;;
 11487                           
 11488                           	psect	text30
 11489  002E6A                     __ptext30:
 11490                           	opt callstack 0
 11491  002E6A                     _set_load_relay_two:
 11492                           	opt callstack 15
 11493                           
 11494                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 11495                           ;stkvar	_mode @ sp[(0)+-1]
 11496                           
 11497                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11498                           ;incstack = 0
 11499  002E6A  0EFF               	movlw	-1
 11500  002E6C  B0E3               	btfsc	plusw1,0,c
 11501  002E6E  D002               	bra	u12585
 11502  002E70  9ABD               	bcf	189,5,c	;volatile
 11503  002E72  D001               	bra	u12586
 11504  002E74                     u12585:
 11505  002E74  8ABD               	bsf	189,5,c	;volatile
 11506  002E76                     u12586:
 11507                           
 11508                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11509  002E76  52E5               	movf	postdec1,f,c
 11510  002E78  0012               	return		;funcret
 11511  002E7A                     __end_of_set_load_relay_two:
 11512                           	opt callstack 0
 11513                           
 11514 ;; *************** function _set_load_relay_one *****************
 11515 ;; Defined at:
 11516 ;;		line 126 in file "mbmc.c"
 11517 ;; Parameters:    Size  Location     Type
 11518 ;;  mode            1  [STACK] const _Bool 
 11519 ;; Auto vars:     Size  Location     Type
 11520 ;;		None
 11521 ;; Return value:  Size  Location     Type
 11522 ;;                  1  [STACK] void 
 11523 ;; Registers used:
 11524 ;;		wreg, fsr1l, fsr1h
 11525 ;; Tracked objects:
 11526 ;;		On entry : 0/0
 11527 ;;		On exit  : 0/0
 11528 ;;		Unchanged: 0/0
 11529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11534 ;;Total ram usage:        0 bytes
 11535 ;; Hardware stack levels used:    1
 11536 ;; Hardware stack levels required when called:   15
 11537 ;; This function calls:
 11538 ;;		Nothing
 11539 ;; This function is called by:
 11540 ;;		_main
 11541 ;;		_esr_check
 11542 ;; This function uses a reentrant model
 11543 ;;
 11544                           
 11545                           	psect	text31
 11546  002E7A                     __ptext31:
 11547                           	opt callstack 0
 11548  002E7A                     _set_load_relay_one:
 11549                           	opt callstack 15
 11550                           
 11551                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 11552                           ;stkvar	_mode @ sp[(0)+-1]
 11553                           
 11554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11555                           ;incstack = 0
 11556  002E7A  0EFF               	movlw	-1
 11557  002E7C  B0E3               	btfsc	plusw1,0,c
 11558  002E7E  D002               	bra	u12575
 11559  002E80  98BD               	bcf	189,4,c	;volatile
 11560  002E82  D001               	bra	u12576
 11561  002E84                     u12575:
 11562  002E84  88BD               	bsf	189,4,c	;volatile
 11563  002E86                     u12576:
 11564                           
 11565                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11566  002E86  52E5               	movf	postdec1,f,c
 11567  002E88  0012               	return		;funcret
 11568  002E8A                     __end_of_set_load_relay_one:
 11569                           	opt callstack 0
 11570                           
 11571 ;; *************** function _eaDogM_WriteCommand *****************
 11572 ;; Defined at:
 11573 ;;		line 384 in file "eadog.c"
 11574 ;; Parameters:    Size  Location     Type
 11575 ;;  cmd             1  [STACK] const unsigned char 
 11576 ;; Auto vars:     Size  Location     Type
 11577 ;;		None
 11578 ;; Return value:  Size  Location     Type
 11579 ;;                  1  [STACK] void 
 11580 ;; Registers used:
 11581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 11582 ;; Tracked objects:
 11583 ;;		On entry : 3F/3D
 11584 ;;		On exit  : 3F/0
 11585 ;;		Unchanged: 0/0
 11586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11591 ;;Total ram usage:        0 bytes
 11592 ;; Hardware stack levels used:    1
 11593 ;; Hardware stack levels required when called:   19
 11594 ;; This function calls:
 11595 ;;		_send_lcd_cmd_dma
 11596 ;; This function is called by:
 11597 ;;		_main
 11598 ;; This function uses a reentrant model
 11599 ;;
 11600                           
 11601                           	psect	text32
 11602  002EBA                     __ptext32:
 11603                           	opt callstack 0
 11604  002EBA                     _eaDogM_WriteCommand:
 11605                           	opt callstack 11
 11606                           
 11607                           ;eadog.c: 384: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 385: {;eadog.c: 386:
      +                            send_lcd_cmd_dma(cmd);
 11608                           ;stkvar	_cmd @ sp[(0)+-1]
 11609                           
 11610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11611                           ;incstack = 0
 11612  002EBA  0EFF               	movlw	-1
 11613  002EBC  50E3               	movf	plusw1,w,c
 11614  002EBE  6EE6               	movwf	postinc1,c
 11615  002EC0  EC8D  F016         	call	_send_lcd_cmd_dma	;wreg free
 11616                           
 11617                           ; BSR set to: 0
 11618                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 11619  002EC4  52E5               	movf	postdec1,f,c
 11620  002EC6  0012               	return		;funcret
 11621  002EC8                     __end_of_eaDogM_WriteCommand:
 11622                           	opt callstack 0
 11623                           
 11624 ;; *************** function _display_history *****************
 11625 ;; Defined at:
 11626 ;;		line 617 in file "main.c"
 11627 ;; Parameters:    Size  Location     Type
 11628 ;;		None
 11629 ;; Auto vars:     Size  Location     Type
 11630 ;;		None
 11631 ;; Return value:  Size  Location     Type
 11632 ;;                  1  [STACK] _Bool 
 11633 ;; Registers used:
 11634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11635 ;; Tracked objects:
 11636 ;;		On entry : 0/2
 11637 ;;		On exit  : 0/0
 11638 ;;		Unchanged: 0/0
 11639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11644 ;;Total ram usage:        0 bytes
 11645 ;; Hardware stack levels used:    1
 11646 ;; Hardware stack levels required when called:   27
 11647 ;; This function calls:
 11648 ;;		_WaitMs
 11649 ;;		_asctime
 11650 ;;		_get_switch
 11651 ;;		_get_vterm_ptr
 11652 ;;		_localtime
 11653 ;;		_sprintf
 11654 ;;		_time
 11655 ;;		_update_lcd
 11656 ;; This function is called by:
 11657 ;;		_main
 11658 ;; This function uses a reentrant model
 11659 ;;
 11660                           
 11661                           	psect	text33
 11662  01B618                     __ptext33:
 11663                           	opt callstack 0
 11664  01B618                     _display_history:
 11665                           	opt callstack 3
 11666                           
 11667                           ;main.c: 619:  static uint8_t bwait = 0;;main.c: 621:  if (get_switch(SCALIB) && (++bwai
      +                          t > 5)) {
 11668                           
 11669                           ; BSR set to: 0
 11670                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11671                           ;incstack = 0
 11672  01B618  0E04               	movlw	4
 11673  01B61A  6EE6               	movwf	postinc1,c
 11674  01B61C  EC2A  F014         	call	_get_switch	;wreg free
 11675  01B620  502A               	movf	btemp^0,w,c
 11676  01B622  B4D8               	btfsc	status,2,c
 11677  01B624  D15E               	goto	l17595
 11678  01B626  2A53               	incf	display_history@bwait^0,f,c
 11679  01B628  0E05               	movlw	5
 11680  01B62A  6453               	cpfsgt	display_history@bwait^0,c
 11681  01B62C  D15A               	goto	l17595
 11682                           
 11683                           ;main.c: 622:   pclock = time(((void*)0));
 11684  01B62E  0E00               	movlw	0
 11685  01B630  6EE6               	movwf	postinc1,c
 11686  01B632  0E00               	movlw	0
 11687  01B634  6EE6               	movwf	postinc1,c
 11688  01B636  EC07  F00F         	call	_time	;wreg free
 11689  01B63A  52E5               	movf	postdec1,f,c
 11690  01B63C  006F FF9C  F041    	movff	indf1,btemp+23
 11691  01B642  52E5               	movf	postdec1,f,c
 11692  01B644  006F FF9C  F040    	movff	indf1,btemp+22
 11693  01B64A  52E5               	movf	postdec1,f,c
 11694  01B64C  006F FF9C  F03F    	movff	indf1,btemp+21
 11695  01B652  52E5               	movf	postdec1,f,c
 11696  01B654  006F FF9C  F03E    	movff	indf1,btemp+20
 11697  01B65A  52E5               	movf	postdec1,f,c
 11698  01B65C  006F FF9C  F03D    	movff	indf1,btemp+19
 11699  01B662  52E5               	movf	postdec1,f,c
 11700  01B664  006F FF9C  F03C    	movff	indf1,btemp+18
 11701  01B66A  52E5               	movf	postdec1,f,c
 11702  01B66C  006F FF9C  F03B    	movff	indf1,btemp+17
 11703  01B672  52E5               	movf	postdec1,f,c
 11704  01B674  006F FF9C  F03A    	movff	indf1,btemp+16
 11705  01B67A  0060  F0E8  F0DA   	movff	btemp+16,_pclock
 11706  01B680  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
 11707  01B686  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
 11708  01B68C  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
 11709  01B692  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
 11710  01B698  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
 11711  01B69E  0060  F100  F0E0   	movff	btemp+22,_pclock+6
 11712  01B6A4  0060  F104  F0E1   	movff	btemp+23,_pclock+7
 11713                           
 11714                           ; BSR set to: 57
 11715                           ;main.c: 623:   t_mbmc = localtime(&pclock);
 11716  01B6AA  0EDA               	movlw	_pclock& (0+255)
 11717  01B6AC  6EE6               	movwf	postinc1,c
 11718  01B6AE  ECED  F016         	call	_localtime	;wreg free
 11719  01B6B2  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
 11720  01B6B8  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
 11721                           
 11722                           ;main.c: 624:   sprintf(get_vterm_ptr(0, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          0], C.hist[0].h[1], C.hist[0].h[2], C.hist[0].h[3]);
 11723  01B6BE  EE22  F1E3         	lfsr	2,_C+228	;volatile
 11724  01B6C2  006F FF78  F034    	movff	postinc2,btemp+10
 11725  01B6C8  006F FF74  F035    	movff	postdec2,btemp+11
 11726  01B6CE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11727  01B6D4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11728  01B6DA  EE22  F1E1         	lfsr	2,_C+226	;volatile
 11729  01B6DE  006F FF78  F034    	movff	postinc2,btemp+10
 11730  01B6E4  006F FF74  F035    	movff	postdec2,btemp+11
 11731  01B6EA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11732  01B6F0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11733  01B6F6  EE22  F1DF         	lfsr	2,_C+224	;volatile
 11734  01B6FA  006F FF78  F034    	movff	postinc2,btemp+10
 11735  01B700  006F FF74  F035    	movff	postdec2,btemp+11
 11736  01B706  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11737  01B70C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11738  01B712  EE22  F1DD         	lfsr	2,_C+222	;volatile
 11739  01B716  006F FF78  F034    	movff	postinc2,btemp+10
 11740  01B71C  006F FF74  F035    	movff	postdec2,btemp+11
 11741  01B722  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11742  01B728  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11743  01B72E  0E25               	movlw	low STR_78
 11744  01B730  6EE6               	movwf	postinc1,c
 11745  01B732  0EFA               	movlw	high STR_78
 11746  01B734  6EE6               	movwf	postinc1,c
 11747  01B736  0E00               	movlw	0
 11748  01B738  6EE6               	movwf	postinc1,c
 11749  01B73A  0E00               	movlw	0
 11750  01B73C  6EE6               	movwf	postinc1,c
 11751  01B73E  EC13  F014         	call	_get_vterm_ptr	;wreg free
 11752  01B742  0060  F0AB  FFE6   	movff	btemp,postinc1
 11753  01B748  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11754  01B74E  0E0C               	movlw	12
 11755  01B750  6EE6               	movwf	postinc1,c
 11756  01B752  EC59  F0FF         	call	_sprintf	;wreg free
 11757                           
 11758                           ; BSR set to: 0
 11759                           ;main.c: 625:   sprintf(get_vterm_ptr(1, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          4], C.hist[0].h[5], C.hist[0].h[6], C.hist[0].h[7]);
 11760  01B756  EE22  F1EB         	lfsr	2,_C+236	;volatile
 11761  01B75A  006F FF78  F034    	movff	postinc2,btemp+10
 11762  01B760  006F FF74  F035    	movff	postdec2,btemp+11
 11763  01B766  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11764  01B76C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11765  01B772  EE22  F1E9         	lfsr	2,_C+234	;volatile
 11766  01B776  006F FF78  F034    	movff	postinc2,btemp+10
 11767  01B77C  006F FF74  F035    	movff	postdec2,btemp+11
 11768  01B782  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11769  01B788  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11770  01B78E  EE22  F1E7         	lfsr	2,_C+232	;volatile
 11771  01B792  006F FF78  F034    	movff	postinc2,btemp+10
 11772  01B798  006F FF74  F035    	movff	postdec2,btemp+11
 11773  01B79E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11774  01B7A4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11775  01B7AA  EE22  F1E5         	lfsr	2,_C+230	;volatile
 11776  01B7AE  006F FF78  F034    	movff	postinc2,btemp+10
 11777  01B7B4  006F FF74  F035    	movff	postdec2,btemp+11
 11778  01B7BA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11779  01B7C0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11780  01B7C6  0E25               	movlw	low STR_78
 11781  01B7C8  6EE6               	movwf	postinc1,c
 11782  01B7CA  0EFA               	movlw	high STR_78
 11783  01B7CC  6EE6               	movwf	postinc1,c
 11784  01B7CE  0E00               	movlw	0
 11785  01B7D0  6EE6               	movwf	postinc1,c
 11786  01B7D2  0E01               	movlw	1
 11787  01B7D4  6EE6               	movwf	postinc1,c
 11788  01B7D6  EC13  F014         	call	_get_vterm_ptr	;wreg free
 11789  01B7DA  0060  F0AB  FFE6   	movff	btemp,postinc1
 11790  01B7E0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11791  01B7E6  0E0C               	movlw	12
 11792  01B7E8  6EE6               	movwf	postinc1,c
 11793  01B7EA  EC59  F0FF         	call	_sprintf	;wreg free
 11794                           
 11795                           ; BSR set to: 0
 11796                           ;main.c: 626:   sprintf(get_vterm_ptr(2, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          8], C.hist[0].h[9], C.hist[0].h[10], C.hist[0].h[12]);
 11797  01B7EE  EE22  F1F5         	lfsr	2,_C+246	;volatile
 11798  01B7F2  006F FF78  F034    	movff	postinc2,btemp+10
 11799  01B7F8  006F FF74  F035    	movff	postdec2,btemp+11
 11800  01B7FE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11801  01B804  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11802  01B80A  EE22  F1F1         	lfsr	2,_C+242	;volatile
 11803  01B80E  006F FF78  F034    	movff	postinc2,btemp+10
 11804  01B814  006F FF74  F035    	movff	postdec2,btemp+11
 11805  01B81A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11806  01B820  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11807  01B826  EE22  F1EF         	lfsr	2,_C+240	;volatile
 11808  01B82A  006F FF78  F034    	movff	postinc2,btemp+10
 11809  01B830  006F FF74  F035    	movff	postdec2,btemp+11
 11810  01B836  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11811  01B83C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11812  01B842  EE22  F1ED         	lfsr	2,_C+238	;volatile
 11813  01B846  006F FF78  F034    	movff	postinc2,btemp+10
 11814  01B84C  006F FF74  F035    	movff	postdec2,btemp+11
 11815  01B852  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11816  01B858  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11817  01B85E  0E25               	movlw	low STR_78
 11818  01B860  6EE6               	movwf	postinc1,c
 11819  01B862  0EFA               	movlw	high STR_78
 11820  01B864  6EE6               	movwf	postinc1,c
 11821  01B866  0E00               	movlw	0
 11822  01B868  6EE6               	movwf	postinc1,c
 11823  01B86A  0E02               	movlw	2
 11824  01B86C  6EE6               	movwf	postinc1,c
 11825  01B86E  EC13  F014         	call	_get_vterm_ptr	;wreg free
 11826  01B872  0060  F0AB  FFE6   	movff	btemp,postinc1
 11827  01B878  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11828  01B87E  0E0C               	movlw	12
 11829  01B880  6EE6               	movwf	postinc1,c
 11830  01B882  EC59  F0FF         	call	_sprintf	;wreg free
 11831                           
 11832                           ; BSR set to: 0
 11833                           ;main.c: 627:   sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
 11834  01B886  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
 11835  01B88C  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
 11836  01B892  EC35  F0C6         	call	_asctime	;wreg free
 11837  01B896  0060  F0AB  FFE6   	movff	btemp,postinc1
 11838  01B89C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11839  01B8A2  0E63               	movlw	low (STR_85+5)
 11840  01B8A4  6EE6               	movwf	postinc1,c
 11841  01B8A6  0EFF               	movlw	high (STR_85+5)
 11842  01B8A8  6EE6               	movwf	postinc1,c
 11843  01B8AA  0E00               	movlw	0
 11844  01B8AC  6EE6               	movwf	postinc1,c
 11845  01B8AE  0E03               	movlw	3
 11846  01B8B0  6EE6               	movwf	postinc1,c
 11847  01B8B2  EC13  F014         	call	_get_vterm_ptr	;wreg free
 11848  01B8B6  0060  F0AB  FFE6   	movff	btemp,postinc1
 11849  01B8BC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11850  01B8C2  0E06               	movlw	6
 11851  01B8C4  6EE6               	movwf	postinc1,c
 11852  01B8C6  EC59  F0FF         	call	_sprintf	;wreg free
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;main.c: 628:   update_lcd(0);
 11856  01B8CA  0E00               	movlw	0
 11857  01B8CC  6EE6               	movwf	postinc1,c
 11858  01B8CE  EC0B  F0F8         	call	_update_lcd	;wreg free
 11859                           
 11860                           ;main.c: 629:   WaitMs(2000);
 11861  01B8D2  0ED0               	movlw	208
 11862  01B8D4  6EE6               	movwf	postinc1,c
 11863  01B8D6  0E07               	movlw	7
 11864  01B8D8  6EE6               	movwf	postinc1,c
 11865  01B8DA  EC17  F013         	call	_WaitMs	;wreg free
 11866  01B8DE                     l17589:
 11867                           
 11868                           ;main.c: 630:   bwait = 0;
 11869  01B8DE  6A53               	clrf	display_history@bwait^0,c
 11870  01B8E0  0012               	return	
 11871  01B8E2                     l17595:
 11872                           
 11873                           ;main.c: 633:   if (!get_switch(SCALIB))
 11874  01B8E2  0E04               	movlw	4
 11875  01B8E4  6EE6               	movwf	postinc1,c
 11876  01B8E6  EC2A  F014         	call	_get_switch	;wreg free
 11877  01B8EA  502A               	movf	btemp^0,w,c
 11878  01B8EC  A4D8               	btfss	status,2,c
 11879  01B8EE  0012               	return	
 11880  01B8F0  D7F6               	goto	l17589
 11881  01B8F2                     __end_of_display_history:
 11882                           	opt callstack 0
 11883                           
 11884 ;; *************** function _time *****************
 11885 ;; Defined at:
 11886 ;;		line 243 in file "mbmc.c"
 11887 ;; Parameters:    Size  Location     Type
 11888 ;;  t               2  [STACK] PTR long long 
 11889 ;;		 -> time@current_time(8), NULL(0), 
 11890 ;; Auto vars:     Size  Location     Type
 11891 ;;		None
 11892 ;; Return value:  Size  Location     Type
 11893 ;;                  8  [STACK] long long 
 11894 ;; Registers used:
 11895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 11896 ;; Tracked objects:
 11897 ;;		On entry : 0/2
 11898 ;;		On exit  : 3F/39
 11899 ;;		Unchanged: 0/0
 11900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11905 ;;Total ram usage:        0 bytes
 11906 ;; Hardware stack levels used:    1
 11907 ;; Hardware stack levels required when called:   15
 11908 ;; This function calls:
 11909 ;;		Nothing
 11910 ;; This function is called by:
 11911 ;;		_main
 11912 ;;		_display_history
 11913 ;;		_check_day_time
 11914 ;;		_load_hist_data
 11915 ;; This function uses a reentrant model
 11916 ;;
 11917                           
 11918                           	psect	text34
 11919  001E0E                     __ptext34:
 11920                           	opt callstack 0
 11921  001E0E                     _time:
 11922                           	opt callstack 0
 11923                           
 11924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 8 argfudge = 6
 11925  001E0E  0E06               	movlw	6
 11926  001E10  26E1               	addwf	fsr1l,f,c
 11927  001E12  0E00               	movlw	0
 11928  001E14  22E2               	addwfc	fsr1h,f,c
 11929                           
 11930                           ;mbmc.c: 243: time_t time(time_t * t);mbmc.c: 244: {;mbmc.c: 245:  static time_t current
      +                          _time;;mbmc.c: 246:  PIE8bits.TMR5IE = 0;
 11931                           
 11932                           ;incstack = 0
 11933 ;; hardware stack exceeded
 11934  001E16  0139               	movlb	57	; () banked
 11935  001E18  9D98               	bcf	152,6,b	;volatile
 11936                           
 11937                           ; BSR set to: 57
 11938                           ;mbmc.c: 247:  current_time = V.ticks;
 11939  001E1A  0102               	movlb	2	; () banked
 11940  001E1C  5188               	movf	(_V+129)& (0+255),w,b	;volatile
 11941  001E1E  0100               	movlb	0	; () banked
 11942  001E20  6FD2               	movwf	time@current_time& (0+255),b
 11943  001E22  0102               	movlb	2	; () banked
 11944  001E24  5189               	movf	(_V+130)& (0+255),w,b	;volatile
 11945  001E26  0100               	movlb	0	; () banked
 11946  001E28  6FD3               	movwf	(time@current_time+1)& (0+255),b
 11947  001E2A  0102               	movlb	2	; () banked
 11948  001E2C  518A               	movf	(_V+131)& (0+255),w,b	;volatile
 11949  001E2E  0100               	movlb	0	; () banked
 11950  001E30  6FD4               	movwf	(time@current_time+2)& (0+255),b
 11951  001E32  0102               	movlb	2	; () banked
 11952  001E34  518B               	movf	(_V+132)& (0+255),w,b	;volatile
 11953  001E36  0100               	movlb	0	; () banked
 11954  001E38  6FD5               	movwf	(time@current_time+3)& (0+255),b
 11955  001E3A  6BD6               	clrf	(time@current_time+4)& (0+255),b
 11956  001E3C  6BD7               	clrf	(time@current_time+5)& (0+255),b
 11957  001E3E  6BD8               	clrf	(time@current_time+6)& (0+255),b
 11958  001E40  6BD9               	clrf	(time@current_time+7)& (0+255),b
 11959                           
 11960                           ; BSR set to: 0
 11961                           ;mbmc.c: 248:  PIE8bits.TMR5IE = 1;
 11962  001E42  0139               	movlb	57	; () banked
 11963  001E44  8D98               	bsf	152,6,b	;volatile
 11964                           
 11965                           ; BSR set to: 57
 11966                           ;mbmc.c: 249:  if (t) {
 11967                           ;stkvar	_t @ sp[(0)+-8]
 11968  001E46  0EF8               	movlw	-8
 11969  001E48  006F FF8C  F02A    	movff	plusw1,btemp
 11970  001E4E  0EF9               	movlw	-7
 11971  001E50  50E3               	movf	plusw1,w,c
 11972  001E52  102A               	iorwf	btemp^0,w,c
 11973                           
 11974                           ; BSR set to: 57
 11975                           ;mbmc.c: 252:  return current_time;
 11976                           
 11977                           ; BSR set to: 57
 11978  001E54  EE20  F0D2         	lfsr	2,time@current_time
 11979                           
 11980                           ;stkvar	?_time @ sp[(0)+-8]
 11981  001E58  0E08               	movlw	8
 11982  001E5A  6E2A               	movwf	btemp^0,c
 11983  001E5C  0EF8               	movlw	-8
 11984  001E5E                     us1180999:
 11985  001E5E  006F FF7B FFE3     	movff	postinc2,plusw1
 11986  001E64  28E8               	incf	wreg,w,c
 11987  001E66  2E2A               	decfsz	btemp^0,f,c
 11988  001E68  D7FA               	bra	us1180999
 11989                           
 11990                           ; BSR set to: 57
 11991                           ; _time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize 
      +                          = 8, vargsize = 0
 11992  001E6A  0012               	return		;funcret
 11993  001E6C                     __end_of_time:
 11994                           	opt callstack 0
 11995                           
 11996 ;; *************** function _localtime *****************
 11997 ;; Defined at:
 11998 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime.c"
 11999 ;; Parameters:    Size  Location     Type
 12000 ;;  t               1  [STACK] PTR const long long 
 12001 ;;		 -> pclock(8), 
 12002 ;; Auto vars:     Size  Location     Type
 12003 ;;		None
 12004 ;; Return value:  Size  Location     Type
 12005 ;;                  2  [STACK] PTR struct tm
 12006 ;; Registers used:
 12007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12008 ;; Tracked objects:
 12009 ;;		On entry : 3F/39
 12010 ;;		On exit  : 0/0
 12011 ;;		Unchanged: 0/0
 12012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12017 ;;Total ram usage:        0 bytes
 12018 ;; Hardware stack levels used:    1
 12019 ;; Hardware stack levels required when called:   21
 12020 ;; This function calls:
 12021 ;;		___localtime_r
 12022 ;; This function is called by:
 12023 ;;		_main
 12024 ;;		_display_history
 12025 ;; This function uses a reentrant model
 12026 ;;
 12027                           
 12028                           	psect	text35
 12029  002DDA                     __ptext35:
 12030                           	opt callstack 0
 12031  002DDA                     _localtime:
 12032                           	opt callstack 9
 12033                           
 12034                           ; BSR set to: 57
 12035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12036                           ;incstack = 0
 12037  002DDA  0EDF               	movlw	low localtime@tm
 12038  002DDC  6EE6               	movwf	postinc1,c
 12039  002DDE  0E03               	movlw	high localtime@tm
 12040  002DE0  6EE6               	movwf	postinc1,c
 12041                           
 12042                           ;stkvar	_t @ sp[(-2)+-1]
 12043  002DE2  0EFD               	movlw	-3
 12044  002DE4  50E3               	movf	plusw1,w,c
 12045  002DE6  6EE6               	movwf	postinc1,c
 12046  002DE8  EC8E  F0E6         	call	___localtime_r	;wreg free
 12047                           
 12048                           ; _localtime: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 12049  002DEC  52E5               	movf	postdec1,f,c
 12050  002DEE  0012               	return		;funcret
 12051  002DF0                     __end_of_localtime:
 12052                           	opt callstack 0
 12053                           
 12054 ;; *************** function ___localtime_r *****************
 12055 ;; Defined at:
 12056 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime_r.c"
 12057 ;; Parameters:    Size  Location     Type
 12058 ;;  t               1  [STACK] PTR const long long 
 12059 ;;		 -> pclock(8), 
 12060 ;;  tm              2  [STACK] PTR struct tm
 12061 ;;		 -> localtime@tm(24), 
 12062 ;; Auto vars:     Size  Location     Type
 12063 ;;		None
 12064 ;; Return value:  Size  Location     Type
 12065 ;;                  2  [STACK] PTR struct tm
 12066 ;; Registers used:
 12067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12068 ;; Tracked objects:
 12069 ;;		On entry : 0/39
 12070 ;;		On exit  : 0/0
 12071 ;;		Unchanged: 0/0
 12072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12077 ;;Total ram usage:        0 bytes
 12078 ;; Hardware stack levels used:    1
 12079 ;; Hardware stack levels required when called:   20
 12080 ;; This function calls:
 12081 ;;		___secs_to_tm
 12082 ;;		___secs_to_zone
 12083 ;; This function is called by:
 12084 ;;		_localtime
 12085 ;; This function uses a reentrant model
 12086 ;;
 12087                           
 12088                           	psect	text36
 12089  01CD1C                     __ptext36:
 12090                           	opt callstack 0
 12091  01CD1C                     ___localtime_r:
 12092                           	opt callstack 9
 12093                           
 12094                           ;stkvar	_t @ sp[(0)+-1]
 12095                           
 12096                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12097                           ;incstack = 0
 12098  01CD1C  0EFF               	movlw	-1
 12099  01CD1E  50E3               	movf	plusw1,w,c
 12100  01CD20  6ED9               	movwf	fsr2l,c
 12101  01CD22  6ADA               	clrf	fsr2h,c
 12102  01CD24  0E07               	movlw	7
 12103  01CD26  AEDB               	btfss	plusw2,7,c
 12104  01CD28  D010               	goto	u16620
 12105  01CD2A  52DE               	movf	postinc2,f,c
 12106  01CD2C  52DE               	movf	postinc2,f,c
 12107  01CD2E  0E80               	movlw	128
 12108  01CD30  5CDE               	subwf	postinc2,w,c
 12109  01CD32  0EBD               	movlw	189
 12110  01CD34  58DE               	subwfb	postinc2,w,c
 12111  01CD36  0E0E               	movlw	14
 12112  01CD38  58DE               	subwfb	postinc2,w,c
 12113  01CD3A  0EFF               	movlw	255
 12114  01CD3C  58DE               	subwfb	postinc2,w,c
 12115  01CD3E  0EFF               	movlw	255
 12116  01CD40  58DE               	subwfb	postinc2,w,c
 12117  01CD42  0EFF               	movlw	255
 12118  01CD44  58DE               	subwfb	postinc2,w,c
 12119  01CD46  A0D8               	btfss	status,0,c
 12120  01CD48  D01B               	goto	u16630
 12121  01CD4A                     u16620:
 12122                           
 12123                           ;stkvar	_t @ sp[(0)+-1]
 12124  01CD4A  0EFF               	movlw	-1
 12125  01CD4C  50E3               	movf	plusw1,w,c
 12126  01CD4E  6ED9               	movwf	fsr2l,c
 12127  01CD50  6ADA               	clrf	fsr2h,c
 12128  01CD52  0E07               	movlw	7
 12129  01CD54  BEDB               	btfsc	plusw2,7,c
 12130  01CD56  D019               	goto	l17059
 12131  01CD58  0E07               	movlw	7
 12132  01CD5A  50DB               	movf	plusw2,w,c
 12133  01CD5C  E111               	bnz	u16630
 12134  01CD5E  0E06               	movlw	6
 12135  01CD60  50DB               	movf	plusw2,w,c
 12136  01CD62  E10E               	bnz	u16630
 12137  01CD64  0E05               	movlw	5
 12138  01CD66  50DB               	movf	plusw2,w,c
 12139  01CD68  E10B               	bnz	u16630
 12140  01CD6A  04DE               	decf	postinc2,w,c
 12141  01CD6C  0E7B               	movlw	123
 12142  01CD6E  58DE               	subwfb	postinc2,w,c
 12143  01CD70  0E9D               	movlw	157
 12144  01CD72  58DE               	subwfb	postinc2,w,c
 12145  01CD74  0E40               	movlw	64
 12146  01CD76  58DE               	subwfb	postinc2,w,c
 12147  01CD78  0EF1               	movlw	241
 12148  01CD7A  58DE               	subwfb	postinc2,w,c
 12149  01CD7C  A0D8               	btfss	status,0,c
 12150  01CD7E  D005               	goto	l17059
 12151  01CD80                     u16630:
 12152  01CD80  0E00               	movlw	0
 12153  01CD82  6E2A               	movwf	btemp^0,c
 12154  01CD84  0E00               	movlw	0
 12155  01CD86  6E2B               	movwf	(btemp+1)^0,c
 12156  01CD88  D0E7               	goto	l3526
 12157  01CD8A                     l17059:
 12158                           
 12159                           ;stkvar	_tm @ sp[(0)+-3]
 12160  01CD8A  0EFD               	movlw	-3
 12161  01CD8C  50E3               	movf	plusw1,w,c
 12162  01CD8E  0F16               	addlw	22
 12163  01CD90  6E34               	movwf	(btemp+10)^0,c
 12164  01CD92  0EFE               	movlw	-2
 12165  01CD94  006F FF8C  F035    	movff	plusw1,btemp+11
 12166  01CD9A  0E00               	movlw	0
 12167  01CD9C  2235               	addwfc	(btemp+11)^0,f,c
 12168  01CD9E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12169  01CDA4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12170  01CDAA  0E00               	movlw	0
 12171  01CDAC  6EE6               	movwf	postinc1,c
 12172  01CDAE  0E00               	movlw	0
 12173  01CDB0  6EE6               	movwf	postinc1,c
 12174                           
 12175                           ;stkvar	_tm @ sp[(-4)+-3]
 12176  01CDB2  0EF9               	movlw	-7
 12177  01CDB4  50E3               	movf	plusw1,w,c
 12178  01CDB6  0F12               	addlw	18
 12179  01CDB8  6E34               	movwf	(btemp+10)^0,c
 12180  01CDBA  0EFA               	movlw	-6
 12181  01CDBC  006F FF8C  F035    	movff	plusw1,btemp+11
 12182  01CDC2  0E00               	movlw	0
 12183  01CDC4  2235               	addwfc	(btemp+11)^0,f,c
 12184  01CDC6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12185  01CDCC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12186                           
 12187                           ;stkvar	_tm @ sp[(-6)+-3]
 12188  01CDD2  0EF7               	movlw	-9
 12189  01CDD4  50E3               	movf	plusw1,w,c
 12190  01CDD6  0F10               	addlw	16
 12191  01CDD8  6E34               	movwf	(btemp+10)^0,c
 12192  01CDDA  0EF8               	movlw	-8
 12193  01CDDC  006F FF8C  F035    	movff	plusw1,btemp+11
 12194  01CDE2  0E00               	movlw	0
 12195  01CDE4  2235               	addwfc	(btemp+11)^0,f,c
 12196  01CDE6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12197  01CDEC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12198  01CDF2  0E00               	movlw	0
 12199  01CDF4  6EE6               	movwf	postinc1,c
 12200  01CDF6  0E00               	movlw	0
 12201  01CDF8  6EE6               	movwf	postinc1,c
 12202                           
 12203                           ;stkvar	_t @ sp[(-10)+-1]
 12204  01CDFA  0EF5               	movlw	-11
 12205  01CDFC  50E3               	movf	plusw1,w,c
 12206  01CDFE  6ED9               	movwf	fsr2l,c
 12207  01CE00  6ADA               	clrf	fsr2h,c
 12208  01CE02  006F FF7B FFE6     	movff	postinc2,postinc1
 12209  01CE08  006F FF7B FFE6     	movff	postinc2,postinc1
 12210  01CE0E  006F FF7B FFE6     	movff	postinc2,postinc1
 12211  01CE14  006F FF7B FFE6     	movff	postinc2,postinc1
 12212  01CE1A  006F FF7B FFE6     	movff	postinc2,postinc1
 12213  01CE20  006F FF7B FFE6     	movff	postinc2,postinc1
 12214  01CE26  006F FF7B FFE6     	movff	postinc2,postinc1
 12215  01CE2C  006F FF7B FFE6     	movff	postinc2,postinc1
 12216  01CE32  ECD6  F0B3         	call	___secs_to_zone	;wreg free
 12217                           
 12218                           ;stkvar	_tm @ sp[(0)+-3]
 12219  01CE36  0EFD               	movlw	-3
 12220  01CE38  006F FF8F FFE6     	movff	plusw1,postinc1
 12221  01CE3E  006F FF8F FFE6     	movff	plusw1,postinc1
 12222                           
 12223                           ;stkvar	_t @ sp[(-2)+-1]
 12224  01CE44  0EFD               	movlw	-3
 12225  01CE46  50E3               	movf	plusw1,w,c
 12226  01CE48  6ED9               	movwf	fsr2l,c
 12227  01CE4A  6ADA               	clrf	fsr2h,c
 12228  01CE4C  006F FF78  F03A    	movff	postinc2,btemp+16
 12229  01CE52  006F FF78  F03B    	movff	postinc2,btemp+17
 12230  01CE58  006F FF78  F03C    	movff	postinc2,btemp+18
 12231  01CE5E  006F FF78  F03D    	movff	postinc2,btemp+19
 12232  01CE64  006F FF78  F03E    	movff	postinc2,btemp+20
 12233  01CE6A  006F FF78  F03F    	movff	postinc2,btemp+21
 12234  01CE70  006F FF78  F040    	movff	postinc2,btemp+22
 12235  01CE76  006F FF78  F041    	movff	postinc2,btemp+23
 12236                           
 12237                           ;stkvar	_tm @ sp[(-2)+-3]
 12238  01CE7C  0EFB               	movlw	-5
 12239  01CE7E  006F FF8C  F034    	movff	plusw1,btemp+10
 12240  01CE84  0EFC               	movlw	-4
 12241  01CE86  006F FF8C  F035    	movff	plusw1,btemp+11
 12242  01CE8C  0E12               	movlw	18
 12243  01CE8E  2434               	addwf	(btemp+10)^0,w,c
 12244  01CE90  6ED9               	movwf	fsr2l,c
 12245  01CE92  0E00               	movlw	0
 12246  01CE94  2035               	addwfc	(btemp+11)^0,w,c
 12247  01CE96  6EDA               	movwf	fsr2h,c
 12248  01CE98  006F FF78  F032    	movff	postinc2,btemp+8
 12249  01CE9E  006F FF78  F033    	movff	postinc2,btemp+9
 12250  01CEA4  006F FF78  F034    	movff	postinc2,btemp+10
 12251  01CEAA  006F FF78  F035    	movff	postinc2,btemp+11
 12252  01CEB0  0060  F0C8  F042   	movff	btemp+8,btemp+24
 12253  01CEB6  0060  F0CC  F043   	movff	btemp+9,btemp+25
 12254  01CEBC  0060  F0D0  F044   	movff	btemp+10,btemp+26
 12255  01CEC2  0060  F0D4  F045   	movff	btemp+11,btemp+27
 12256  01CEC8  6A46               	clrf	(btemp+28)^0,c
 12257  01CECA  BE45               	btfsc	(btemp+27)^0,7,c
 12258  01CECC  6846               	setf	(btemp+28)^0,c
 12259  01CECE  0060  F118  F047   	movff	btemp+28,btemp+29
 12260  01CED4  0060  F118  F048   	movff	btemp+28,btemp+30
 12261  01CEDA  0060  F118  F049   	movff	btemp+28,btemp+31
 12262  01CEE0  503A               	movf	(btemp+16)^0,w,c
 12263  01CEE2  2442               	addwf	(btemp+24)^0,w,c
 12264  01CEE4  6E32               	movwf	(btemp+8)^0,c
 12265  01CEE6  503B               	movf	(btemp+17)^0,w,c
 12266  01CEE8  2043               	addwfc	(btemp+25)^0,w,c
 12267  01CEEA  6E33               	movwf	(btemp+9)^0,c
 12268  01CEEC  503C               	movf	(btemp+18)^0,w,c
 12269  01CEEE  2044               	addwfc	(btemp+26)^0,w,c
 12270  01CEF0  6E34               	movwf	(btemp+10)^0,c
 12271  01CEF2  503D               	movf	(btemp+19)^0,w,c
 12272  01CEF4  2045               	addwfc	(btemp+27)^0,w,c
 12273  01CEF6  6E35               	movwf	(btemp+11)^0,c
 12274  01CEF8  503E               	movf	(btemp+20)^0,w,c
 12275  01CEFA  2046               	addwfc	(btemp+28)^0,w,c
 12276  01CEFC  6E36               	movwf	(btemp+12)^0,c
 12277  01CEFE  503F               	movf	(btemp+21)^0,w,c
 12278  01CF00  2047               	addwfc	(btemp+29)^0,w,c
 12279  01CF02  6E37               	movwf	(btemp+13)^0,c
 12280  01CF04  5040               	movf	(btemp+22)^0,w,c
 12281  01CF06  2048               	addwfc	(btemp+30)^0,w,c
 12282  01CF08  6E38               	movwf	(btemp+14)^0,c
 12283  01CF0A  5041               	movf	(btemp+23)^0,w,c
 12284  01CF0C  2049               	addwfc	(btemp+31)^0,w,c
 12285  01CF0E  6E39               	movwf	(btemp+15)^0,c
 12286  01CF10  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 12287  01CF16  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 12288  01CF1C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12289  01CF22  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12290  01CF28  0060  F0DB  FFE6   	movff	btemp+12,postinc1
 12291  01CF2E  0060  F0DF  FFE6   	movff	btemp+13,postinc1
 12292  01CF34  0060  F0E3  FFE6   	movff	btemp+14,postinc1
 12293  01CF3A  0060  F0E7  FFE6   	movff	btemp+15,postinc1
 12294  01CF40  ECCD  F093         	call	___secs_to_tm	;wreg free
 12295  01CF44  BE2D               	btfsc	(btemp+3)^0,7,c
 12296  01CF46  D71C               	goto	u16630
 12297                           
 12298                           ;stkvar	_tm @ sp[(0)+-3]
 12299  01CF48  0EFD               	movlw	-3
 12300  01CF4A  006F FF8C  F02A    	movff	plusw1,btemp
 12301  01CF50  0EFE               	movlw	-2
 12302  01CF52  006F FF8C  F02B    	movff	plusw1,btemp+1
 12303  01CF58                     l3526:
 12304                           
 12305                           ; ___localtime_r: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3,
      +                           argsize = 3, vargsize = 0
 12306  01CF58  52E5               	movf	postdec1,f,c
 12307  01CF5A  52E5               	movf	postdec1,f,c
 12308  01CF5C  52E5               	movf	postdec1,f,c
 12309  01CF5E  0012               	return		;funcret
 12310  01CF60                     __end_of___localtime_r:
 12311                           	opt callstack 0
 12312                           
 12313 ;; *************** function ___secs_to_zone *****************
 12314 ;; Defined at:
 12315 ;;		line 249 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12316 ;; Parameters:    Size  Location     Type
 12317 ;;  t               8  [STACK] long long 
 12318 ;;  local           2  [STACK] int 
 12319 ;;  isdst           2  [STACK] PTR int 
 12320 ;;		 -> localtime@tm(24), 
 12321 ;;  offset          2  [STACK] PTR long 
 12322 ;;		 -> localtime@tm(24), 
 12323 ;;  oppoff          2  [STACK] PTR long 
 12324 ;;		 -> NULL(0), 
 12325 ;;  zonename        2  [STACK] PTR PTR const unsigned c
 12326 ;;		 -> localtime@tm(24), 
 12327 ;; Auto vars:     Size  Location     Type
 12328 ;;  alt             2  [STACK] unsigned int 
 12329 ;;  i               2    0        unsigned int 
 12330 ;;  y               8  [STACK] long long 
 12331 ;;  t1              8  [STACK] long long 
 12332 ;;  t0              8  [STACK] long long 
 12333 ;; Return value:  Size  Location     Type
 12334 ;;                  1  [STACK] void 
 12335 ;; Registers used:
 12336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12337 ;; Tracked objects:
 12338 ;;		On entry : 0/39
 12339 ;;		On exit  : 0/0
 12340 ;;		Unchanged: 0/0
 12341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12346 ;;Total ram usage:        0 bytes
 12347 ;; Hardware stack levels used:    1
 12348 ;; Hardware stack levels required when called:   19
 12349 ;; This function calls:
 12350 ;;		___aodiv
 12351 ;;		___year_to_secs
 12352 ;;		_do_tzset
 12353 ;;		_rule_to_secs
 12354 ;;		_scan_trans
 12355 ;;		_zi_read32
 12356 ;; This function is called by:
 12357 ;;		___localtime_r
 12358 ;; This function uses a reentrant model
 12359 ;;
 12360                           
 12361                           	psect	text37
 12362  0167AC                     __ptext37:
 12363                           	opt callstack 0
 12364  0167AC                     ___secs_to_zone:
 12365                           	opt callstack 0
 12366                           
 12367                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 18 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12368  0167AC  0E18               	movlw	24
 12369  0167AE  26E1               	addwf	fsr1l,f,c
 12370  0167B0  0E00               	movlw	0
 12371  0167B2  22E2               	addwfc	fsr1h,f,c
 12372                           
 12373                           ;incstack = 0
 12374  0167B4  EC44  F0DF         	call	_do_tzset	;wreg free
 12375  0167B8  0100               	movlb	0	; () banked
 12376  0167BA  51B8               	movf	___daylight& (0+255),w,b
 12377  0167BC  11B9               	iorwf	(___daylight+1)& (0+255),w,b
 12378  0167BE  B4D8               	btfsc	status,2,c
 12379  0167C0  D356               	goto	u16410
 12380                           
 12381                           ; BSR set to: 0
 12382  0167C2  0E58               	movlw	88
 12383  0167C4  6EE6               	movwf	postinc1,c
 12384  0167C6  0E85               	movlw	133
 12385  0167C8  6EE6               	movwf	postinc1,c
 12386  0167CA  0EE1               	movlw	225
 12387  0167CC  6EE6               	movwf	postinc1,c
 12388  0167CE  0E01               	movlw	1
 12389  0167D0  6EE6               	movwf	postinc1,c
 12390  0167D2  0E00               	movlw	0
 12391  0167D4  6EE6               	movwf	postinc1,c
 12392  0167D6  0E00               	movlw	0
 12393  0167D8  6EE6               	movwf	postinc1,c
 12394  0167DA  0E00               	movlw	0
 12395  0167DC  6EE6               	movwf	postinc1,c
 12396  0167DE  0E00               	movlw	0
 12397  0167E0  6EE6               	movwf	postinc1,c
 12398                           
 12399                           ;stkvar	_t @ sp[(-32)+-8]
 12400  0167E2  50E1               	movf	fsr1l,w,c
 12401  0167E4  0FD8               	addlw	-40
 12402  0167E6  6ED9               	movwf	fsr2l,c
 12403  0167E8  50E2               	movf	fsr1h,w,c
 12404  0167EA  6EDA               	movwf	fsr2h,c
 12405  0167EC  0EFF               	movlw	255
 12406  0167EE  22DA               	addwfc	fsr2h,f,c
 12407  0167F0  006F FF7B FFE6     	movff	postinc2,postinc1
 12408  0167F6  006F FF7B FFE6     	movff	postinc2,postinc1
 12409  0167FC  006F FF7B FFE6     	movff	postinc2,postinc1
 12410  016802  006F FF7B FFE6     	movff	postinc2,postinc1
 12411  016808  006F FF7B FFE6     	movff	postinc2,postinc1
 12412  01680E  006F FF7B FFE6     	movff	postinc2,postinc1
 12413  016814  006F FF7B FFE6     	movff	postinc2,postinc1
 12414  01681A  006F FF7B FFE6     	movff	postinc2,postinc1
 12415  016820  ECC4  F0E1         	call	___aodiv	;wreg free
 12416  016824  52E5               	movf	postdec1,f,c
 12417  016826  006F FF9C  F041    	movff	indf1,btemp+23
 12418  01682C  52E5               	movf	postdec1,f,c
 12419  01682E  006F FF9C  F040    	movff	indf1,btemp+22
 12420  016834  52E5               	movf	postdec1,f,c
 12421  016836  006F FF9C  F03F    	movff	indf1,btemp+21
 12422  01683C  52E5               	movf	postdec1,f,c
 12423  01683E  006F FF9C  F03E    	movff	indf1,btemp+20
 12424  016844  52E5               	movf	postdec1,f,c
 12425  016846  006F FF9C  F03D    	movff	indf1,btemp+19
 12426  01684C  52E5               	movf	postdec1,f,c
 12427  01684E  006F FF9C  F03C    	movff	indf1,btemp+18
 12428  016854  52E5               	movf	postdec1,f,c
 12429  016856  006F FF9C  F03B    	movff	indf1,btemp+17
 12430  01685C  52E5               	movf	postdec1,f,c
 12431  01685E  006F FF9C  F03A    	movff	indf1,btemp+16
 12432  016864  0EF8               	movlw	248
 12433  016866  26E1               	addwf	fsr1l,f,c
 12434  016868  0EFF               	movlw	255
 12435  01686A  22E2               	addwfc	fsr1h,f,c
 12436  01686C  0E46               	movlw	70
 12437  01686E  243A               	addwf	(btemp+16)^0,w,c
 12438  016870  6E42               	movwf	(btemp+24)^0,c
 12439  016872  0E00               	movlw	0
 12440  016874  203B               	addwfc	(btemp+17)^0,w,c
 12441  016876  6E43               	movwf	(btemp+25)^0,c
 12442  016878  0E00               	movlw	0
 12443  01687A  203C               	addwfc	(btemp+18)^0,w,c
 12444  01687C  6E44               	movwf	(btemp+26)^0,c
 12445  01687E  0E00               	movlw	0
 12446  016880  203D               	addwfc	(btemp+19)^0,w,c
 12447  016882  6E45               	movwf	(btemp+27)^0,c
 12448  016884  0E00               	movlw	0
 12449  016886  203E               	addwfc	(btemp+20)^0,w,c
 12450  016888  6E46               	movwf	(btemp+28)^0,c
 12451  01688A  0E00               	movlw	0
 12452  01688C  203F               	addwfc	(btemp+21)^0,w,c
 12453  01688E  6E47               	movwf	(btemp+29)^0,c
 12454  016890  0E00               	movlw	0
 12455  016892  2040               	addwfc	(btemp+22)^0,w,c
 12456  016894  6E48               	movwf	(btemp+30)^0,c
 12457  016896  0E00               	movlw	0
 12458  016898  2041               	addwfc	(btemp+23)^0,w,c
 12459  01689A  6E49               	movwf	(btemp+31)^0,c
 12460                           
 12461                           ;stkvar	_y @ sp[(-24)+0]
 12462  01689C  0EE8               	movlw	-24
 12463  01689E  0060  F10B  FFE3   	movff	btemp+24,plusw1
 12464  0168A4  0EE9               	movlw	-23
 12465  0168A6  0060  F10F  FFE3   	movff	btemp+25,plusw1
 12466  0168AC  0EEA               	movlw	-22
 12467  0168AE  0060  F113  FFE3   	movff	btemp+26,plusw1
 12468  0168B4  0EEB               	movlw	-21
 12469  0168B6  0060  F117  FFE3   	movff	btemp+27,plusw1
 12470  0168BC  0EEC               	movlw	-20
 12471  0168BE  0060  F11B  FFE3   	movff	btemp+28,plusw1
 12472  0168C4  0EED               	movlw	-19
 12473  0168C6  0060  F11F  FFE3   	movff	btemp+29,plusw1
 12474  0168CC  0EEE               	movlw	-18
 12475  0168CE  0060  F123  FFE3   	movff	btemp+30,plusw1
 12476  0168D4  0EEF               	movlw	-17
 12477  0168D6  0060  F127  FFE3   	movff	btemp+31,plusw1
 12478  0168DC  D010               	goto	l16829
 12479  0168DE                     l16827:
 12480                           
 12481                           ;stkvar	_y @ sp[(-24)+0]
 12482  0168DE  50E1               	movf	fsr1l,w,c
 12483  0168E0  0FE8               	addlw	-24
 12484  0168E2  6ED9               	movwf	fsr2l,c
 12485  0168E4  50E2               	movf	fsr1h,w,c
 12486  0168E6  6EDA               	movwf	fsr2h,c
 12487  0168E8  0EFF               	movlw	255
 12488  0168EA  22DA               	addwfc	fsr2h,f,c
 12489  0168EC  06DE               	decf	postinc2,f,c
 12490  0168EE  0E00               	movlw	0
 12491  0168F0  5ADE               	subwfb	postinc2,f,c
 12492  0168F2  5ADE               	subwfb	postinc2,f,c
 12493  0168F4  5ADE               	subwfb	postinc2,f,c
 12494  0168F6  5ADE               	subwfb	postinc2,f,c
 12495  0168F8  5ADE               	subwfb	postinc2,f,c
 12496  0168FA  5ADE               	subwfb	postinc2,f,c
 12497  0168FC  5ADE               	subwfb	postinc2,f,c
 12498  0168FE                     l16829:
 12499  0168FE  0E00               	movlw	0
 12500  016900  6EE6               	movwf	postinc1,c
 12501  016902  0E00               	movlw	0
 12502  016904  6EE6               	movwf	postinc1,c
 12503                           
 12504                           ;stkvar	_y @ sp[(-26)+0]
 12505  016906  50E1               	movf	fsr1l,w,c
 12506  016908  0FE6               	addlw	-26
 12507  01690A  6ED9               	movwf	fsr2l,c
 12508  01690C  50E2               	movf	fsr1h,w,c
 12509  01690E  6EDA               	movwf	fsr2h,c
 12510  016910  0EFF               	movlw	255
 12511  016912  22DA               	addwfc	fsr2h,f,c
 12512  016914  006F FF7B FFE6     	movff	postinc2,postinc1
 12513  01691A  006F FF7B FFE6     	movff	postinc2,postinc1
 12514  016920  006F FF7B FFE6     	movff	postinc2,postinc1
 12515  016926  006F FF7B FFE6     	movff	postinc2,postinc1
 12516  01692C  006F FF7B FFE6     	movff	postinc2,postinc1
 12517  016932  006F FF7B FFE6     	movff	postinc2,postinc1
 12518  016938  006F FF7B FFE6     	movff	postinc2,postinc1
 12519  01693E  006F FF7B FFE6     	movff	postinc2,postinc1
 12520  016944  EC1D  F0AF         	call	___year_to_secs	;wreg free
 12521  016948  52E5               	movf	postdec1,f,c
 12522  01694A  006F FF9C  F041    	movff	indf1,btemp+23
 12523  016950  52E5               	movf	postdec1,f,c
 12524  016952  006F FF9C  F040    	movff	indf1,btemp+22
 12525  016958  52E5               	movf	postdec1,f,c
 12526  01695A  006F FF9C  F03F    	movff	indf1,btemp+21
 12527  016960  52E5               	movf	postdec1,f,c
 12528  016962  006F FF9C  F03E    	movff	indf1,btemp+20
 12529  016968  52E5               	movf	postdec1,f,c
 12530  01696A  006F FF9C  F03D    	movff	indf1,btemp+19
 12531  016970  52E5               	movf	postdec1,f,c
 12532  016972  006F FF9C  F03C    	movff	indf1,btemp+18
 12533  016978  52E5               	movf	postdec1,f,c
 12534  01697A  006F FF9C  F03B    	movff	indf1,btemp+17
 12535  016980  52E5               	movf	postdec1,f,c
 12536  016982  006F FF9C  F03A    	movff	indf1,btemp+16
 12537  016988  52E5               	movf	postdec1,f,c
 12538  01698A  52E5               	movf	postdec1,f,c
 12539                           
 12540                           ;stkvar	_t @ sp[(-24)+-8]
 12541  01698C  0EE0               	movlw	-32
 12542  01698E  006F FF8C  F02A    	movff	plusw1,btemp
 12543  016994  503A               	movf	(btemp+16)^0,w,c
 12544  016996  5C2A               	subwf	btemp^0,w,c
 12545  016998  0EE1               	movlw	-31
 12546  01699A  006F FF8C  F02A    	movff	plusw1,btemp
 12547  0169A0  503B               	movf	(btemp+17)^0,w,c
 12548  0169A2  582A               	subwfb	btemp^0,w,c
 12549  0169A4  0EE2               	movlw	-30
 12550  0169A6  006F FF8C  F02A    	movff	plusw1,btemp
 12551  0169AC  503C               	movf	(btemp+18)^0,w,c
 12552  0169AE  582A               	subwfb	btemp^0,w,c
 12553  0169B0  0EE3               	movlw	-29
 12554  0169B2  006F FF8C  F02A    	movff	plusw1,btemp
 12555  0169B8  503D               	movf	(btemp+19)^0,w,c
 12556  0169BA  582A               	subwfb	btemp^0,w,c
 12557  0169BC  0EE4               	movlw	-28
 12558  0169BE  006F FF8C  F02A    	movff	plusw1,btemp
 12559  0169C4  503E               	movf	(btemp+20)^0,w,c
 12560  0169C6  582A               	subwfb	btemp^0,w,c
 12561  0169C8  0EE5               	movlw	-27
 12562  0169CA  006F FF8C  F02A    	movff	plusw1,btemp
 12563  0169D0  503F               	movf	(btemp+21)^0,w,c
 12564  0169D2  582A               	subwfb	btemp^0,w,c
 12565  0169D4  0EE6               	movlw	-26
 12566  0169D6  006F FF8C  F02A    	movff	plusw1,btemp
 12567  0169DC  5040               	movf	(btemp+22)^0,w,c
 12568  0169DE  582A               	subwfb	btemp^0,w,c
 12569  0169E0  0EE7               	movlw	-25
 12570  0169E2  50E3               	movf	plusw1,w,c
 12571  0169E4  0A80               	xorlw	128
 12572  0169E6  6E2A               	movwf	btemp^0,c
 12573  0169E8  5041               	movf	(btemp+23)^0,w,c
 12574  0169EA  0A80               	xorlw	128
 12575  0169EC  582A               	subwfb	btemp^0,w,c
 12576  0169EE  B0D8               	btfsc	status,0,c
 12577  0169F0  D011               	goto	l16833
 12578  0169F2  D775               	goto	l16827
 12579  0169F4                     l16831:
 12580                           
 12581                           ;stkvar	_y @ sp[(-24)+0]
 12582  0169F4  50E1               	movf	fsr1l,w,c
 12583  0169F6  0FE8               	addlw	-24
 12584  0169F8  6ED9               	movwf	fsr2l,c
 12585  0169FA  50E2               	movf	fsr1h,w,c
 12586  0169FC  6EDA               	movwf	fsr2h,c
 12587  0169FE  0EFF               	movlw	255
 12588  016A00  22DA               	addwfc	fsr2h,f,c
 12589  016A02  2ADE               	incf	postinc2,f,c
 12590  016A04  0E00               	movlw	0
 12591  016A06  22DE               	addwfc	postinc2,f,c
 12592  016A08  22DE               	addwfc	postinc2,f,c
 12593  016A0A  22DE               	addwfc	postinc2,f,c
 12594  016A0C  22DE               	addwfc	postinc2,f,c
 12595  016A0E  22DE               	addwfc	postinc2,f,c
 12596  016A10  22DE               	addwfc	postinc2,f,c
 12597  016A12  22DE               	addwfc	postinc2,f,c
 12598  016A14                     l16833:
 12599                           
 12600                           ;stkvar	_t @ sp[(-24)+-8]
 12601  016A14  0E00               	movlw	0
 12602  016A16  6EE6               	movwf	postinc1,c
 12603  016A18  0E00               	movlw	0
 12604  016A1A  6EE6               	movwf	postinc1,c
 12605                           
 12606                           ;stkvar	_y @ sp[(-26)+0]
 12607  016A1C  0EE6               	movlw	-26
 12608  016A1E  50E3               	movf	plusw1,w,c
 12609  016A20  0F01               	addlw	1
 12610  016A22  6E3A               	movwf	(btemp+16)^0,c
 12611  016A24  0EE7               	movlw	-25
 12612  016A26  006F FF8C  F03B    	movff	plusw1,btemp+17
 12613  016A2C  0E00               	movlw	0
 12614  016A2E  223B               	addwfc	(btemp+17)^0,f,c
 12615  016A30  0EE8               	movlw	-24
 12616  016A32  006F FF8C  F03C    	movff	plusw1,btemp+18
 12617  016A38  0E00               	movlw	0
 12618  016A3A  223C               	addwfc	(btemp+18)^0,f,c
 12619  016A3C  0EE9               	movlw	-23
 12620  016A3E  006F FF8C  F03D    	movff	plusw1,btemp+19
 12621  016A44  0E00               	movlw	0
 12622  016A46  223D               	addwfc	(btemp+19)^0,f,c
 12623  016A48  0EEA               	movlw	-22
 12624  016A4A  006F FF8C  F03E    	movff	plusw1,btemp+20
 12625  016A50  0E00               	movlw	0
 12626  016A52  223E               	addwfc	(btemp+20)^0,f,c
 12627  016A54  0EEB               	movlw	-21
 12628  016A56  006F FF8C  F03F    	movff	plusw1,btemp+21
 12629  016A5C  0E00               	movlw	0
 12630  016A5E  223F               	addwfc	(btemp+21)^0,f,c
 12631  016A60  0EEC               	movlw	-20
 12632  016A62  006F FF8C  F040    	movff	plusw1,btemp+22
 12633  016A68  0E00               	movlw	0
 12634  016A6A  2240               	addwfc	(btemp+22)^0,f,c
 12635  016A6C  0EED               	movlw	-19
 12636  016A6E  006F FF8C  F041    	movff	plusw1,btemp+23
 12637  016A74  0E00               	movlw	0
 12638  016A76  2241               	addwfc	(btemp+23)^0,f,c
 12639  016A78  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 12640  016A7E  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 12641  016A84  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 12642  016A8A  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 12643  016A90  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 12644  016A96  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 12645  016A9C  0060  F103  FFE6   	movff	btemp+22,postinc1
 12646  016AA2  0060  F107  FFE6   	movff	btemp+23,postinc1
 12647  016AA8  EC1D  F0AF         	call	___year_to_secs	;wreg free
 12648  016AAC  52E5               	movf	postdec1,f,c
 12649  016AAE  006F FF9C  F041    	movff	indf1,btemp+23
 12650  016AB4  52E5               	movf	postdec1,f,c
 12651  016AB6  006F FF9C  F040    	movff	indf1,btemp+22
 12652  016ABC  52E5               	movf	postdec1,f,c
 12653  016ABE  006F FF9C  F03F    	movff	indf1,btemp+21
 12654  016AC4  52E5               	movf	postdec1,f,c
 12655  016AC6  006F FF9C  F03E    	movff	indf1,btemp+20
 12656  016ACC  52E5               	movf	postdec1,f,c
 12657  016ACE  006F FF9C  F03D    	movff	indf1,btemp+19
 12658  016AD4  52E5               	movf	postdec1,f,c
 12659  016AD6  006F FF9C  F03C    	movff	indf1,btemp+18
 12660  016ADC  52E5               	movf	postdec1,f,c
 12661  016ADE  006F FF9C  F03B    	movff	indf1,btemp+17
 12662  016AE4  52E5               	movf	postdec1,f,c
 12663  016AE6  006F FF9C  F03A    	movff	indf1,btemp+16
 12664  016AEC  52E5               	movf	postdec1,f,c
 12665  016AEE  52E5               	movf	postdec1,f,c
 12666  016AF0  0EE0               	movlw	-32
 12667  016AF2  50E3               	movf	plusw1,w,c
 12668  016AF4  5C3A               	subwf	(btemp+16)^0,w,c
 12669  016AF6  0EE1               	movlw	-31
 12670  016AF8  50E3               	movf	plusw1,w,c
 12671  016AFA  583B               	subwfb	(btemp+17)^0,w,c
 12672  016AFC  0EE2               	movlw	-30
 12673  016AFE  50E3               	movf	plusw1,w,c
 12674  016B00  583C               	subwfb	(btemp+18)^0,w,c
 12675  016B02  0EE3               	movlw	-29
 12676  016B04  50E3               	movf	plusw1,w,c
 12677  016B06  583D               	subwfb	(btemp+19)^0,w,c
 12678  016B08  0EE4               	movlw	-28
 12679  016B0A  50E3               	movf	plusw1,w,c
 12680  016B0C  583E               	subwfb	(btemp+20)^0,w,c
 12681  016B0E  0EE5               	movlw	-27
 12682  016B10  50E3               	movf	plusw1,w,c
 12683  016B12  583F               	subwfb	(btemp+21)^0,w,c
 12684  016B14  0EE6               	movlw	-26
 12685  016B16  50E3               	movf	plusw1,w,c
 12686  016B18  5840               	subwfb	(btemp+22)^0,w,c
 12687  016B1A  5041               	movf	(btemp+23)^0,w,c
 12688  016B1C  0A80               	xorlw	128
 12689  016B1E  6E2A               	movwf	btemp^0,c
 12690  016B20  0EE7               	movlw	-25
 12691  016B22  50E3               	movf	plusw1,w,c
 12692  016B24  0A80               	xorlw	128
 12693  016B26  582A               	subwfb	btemp^0,w,c
 12694  016B28  A0D8               	btfss	status,0,c
 12695  016B2A  D764               	goto	l16831
 12696                           
 12697                           ;stkvar	_y @ sp[(-24)+0]
 12698  016B2C  0EE8               	movlw	-24
 12699  016B2E  006F FF8F FFE6     	movff	plusw1,postinc1
 12700  016B34  006F FF8F FFE6     	movff	plusw1,postinc1
 12701  016B3A  0EE5               	movlw	low _r0
 12702  016B3C  6EE6               	movwf	postinc1,c
 12703  016B3E  0E01               	movlw	high _r0
 12704  016B40  6EE6               	movwf	postinc1,c
 12705  016B42  EC1A  F0C0         	call	_rule_to_secs	;wreg free
 12706  016B46  52E5               	movf	postdec1,f,c
 12707  016B48  006F FF9C  F041    	movff	indf1,btemp+23
 12708  016B4E  52E5               	movf	postdec1,f,c
 12709  016B50  006F FF9C  F040    	movff	indf1,btemp+22
 12710  016B56  52E5               	movf	postdec1,f,c
 12711  016B58  006F FF9C  F03F    	movff	indf1,btemp+21
 12712  016B5E  52E5               	movf	postdec1,f,c
 12713  016B60  006F FF9C  F03E    	movff	indf1,btemp+20
 12714  016B66  52E5               	movf	postdec1,f,c
 12715  016B68  006F FF9C  F03D    	movff	indf1,btemp+19
 12716  016B6E  52E5               	movf	postdec1,f,c
 12717  016B70  006F FF9C  F03C    	movff	indf1,btemp+18
 12718  016B76  52E5               	movf	postdec1,f,c
 12719  016B78  006F FF9C  F03B    	movff	indf1,btemp+17
 12720  016B7E  52E5               	movf	postdec1,f,c
 12721  016B80  006F FF9C  F03A    	movff	indf1,btemp+16
 12722                           
 12723                           ;stkvar	_t0 @ sp[(-24)+16]
 12724  016B86  0EF8               	movlw	-8
 12725  016B88  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12726  016B8E  0EF9               	movlw	-7
 12727  016B90  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12728  016B96  0EFA               	movlw	-6
 12729  016B98  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12730  016B9E  0EFB               	movlw	-5
 12731  016BA0  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12732  016BA6  0EFC               	movlw	-4
 12733  016BA8  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12734  016BAE  0EFD               	movlw	-3
 12735  016BB0  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12736  016BB6  0EFE               	movlw	-2
 12737  016BB8  0060  F103  FFE3   	movff	btemp+22,plusw1
 12738  016BBE  0EFF               	movlw	-1
 12739  016BC0  0060  F107  FFE3   	movff	btemp+23,plusw1
 12740                           
 12741                           ;stkvar	_y @ sp[(-24)+0]
 12742  016BC6  0EE8               	movlw	-24
 12743  016BC8  006F FF8F FFE6     	movff	plusw1,postinc1
 12744  016BCE  006F FF8F FFE6     	movff	plusw1,postinc1
 12745  016BD4  0EDB               	movlw	low _r1
 12746  016BD6  6EE6               	movwf	postinc1,c
 12747  016BD8  0E01               	movlw	high _r1
 12748  016BDA  6EE6               	movwf	postinc1,c
 12749  016BDC  EC1A  F0C0         	call	_rule_to_secs	;wreg free
 12750  016BE0  52E5               	movf	postdec1,f,c
 12751  016BE2  006F FF9C  F041    	movff	indf1,btemp+23
 12752  016BE8  52E5               	movf	postdec1,f,c
 12753  016BEA  006F FF9C  F040    	movff	indf1,btemp+22
 12754  016BF0  52E5               	movf	postdec1,f,c
 12755  016BF2  006F FF9C  F03F    	movff	indf1,btemp+21
 12756  016BF8  52E5               	movf	postdec1,f,c
 12757  016BFA  006F FF9C  F03E    	movff	indf1,btemp+20
 12758  016C00  52E5               	movf	postdec1,f,c
 12759  016C02  006F FF9C  F03D    	movff	indf1,btemp+19
 12760  016C08  52E5               	movf	postdec1,f,c
 12761  016C0A  006F FF9C  F03C    	movff	indf1,btemp+18
 12762  016C10  52E5               	movf	postdec1,f,c
 12763  016C12  006F FF9C  F03B    	movff	indf1,btemp+17
 12764  016C18  52E5               	movf	postdec1,f,c
 12765  016C1A  006F FF9C  F03A    	movff	indf1,btemp+16
 12766                           
 12767                           ;stkvar	_t1 @ sp[(-24)+8]
 12768  016C20  0EF0               	movlw	-16
 12769  016C22  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12770  016C28  0EF1               	movlw	-15
 12771  016C2A  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12772  016C30  0EF2               	movlw	-14
 12773  016C32  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12774  016C38  0EF3               	movlw	-13
 12775  016C3A  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12776  016C40  0EF4               	movlw	-12
 12777  016C42  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12778  016C48  0EF5               	movlw	-11
 12779  016C4A  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12780  016C50  0EF6               	movlw	-10
 12781  016C52  0060  F103  FFE3   	movff	btemp+22,plusw1
 12782  016C58  0EF7               	movlw	-9
 12783  016C5A  0060  F107  FFE3   	movff	btemp+23,plusw1
 12784                           
 12785                           ;stkvar	_local @ sp[(-24)+-10]
 12786  016C60  0EDE               	movlw	-34
 12787  016C62  006F FF8C  F02A    	movff	plusw1,btemp
 12788  016C68  0EDF               	movlw	-33
 12789  016C6A  50E3               	movf	plusw1,w,c
 12790  016C6C  102A               	iorwf	btemp^0,w,c
 12791  016C6E  A4D8               	btfss	status,2,c
 12792  016C70  D044               	goto	l16843
 12793  016C72  0060  F1C0  F03A   	movff	___timezone,btemp+16
 12794  016C78  0060  F1C4  F03B   	movff	___timezone+1,btemp+17
 12795  016C7E  0060  F1C8  F03C   	movff	___timezone+2,btemp+18
 12796  016C84  0060  F1CC  F03D   	movff	___timezone+3,btemp+19
 12797  016C8A  6A3E               	clrf	(btemp+20)^0,c
 12798  016C8C  BE3D               	btfsc	(btemp+19)^0,7,c
 12799  016C8E  683E               	setf	(btemp+20)^0,c
 12800  016C90  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 12801  016C96  0060  F0F8  F040   	movff	btemp+20,btemp+22
 12802  016C9C  0060  F0F8  F041   	movff	btemp+20,btemp+23
 12803                           
 12804                           ;stkvar	_t0 @ sp[(-24)+16]
 12805  016CA2  50E1               	movf	fsr1l,w,c
 12806  016CA4  0FF8               	addlw	-8
 12807  016CA6  6ED9               	movwf	fsr2l,c
 12808  016CA8  50E2               	movf	fsr1h,w,c
 12809  016CAA  6EDA               	movwf	fsr2h,c
 12810  016CAC  0EFF               	movlw	255
 12811  016CAE  22DA               	addwfc	fsr2h,f,c
 12812  016CB0  503A               	movf	(btemp+16)^0,w,c
 12813  016CB2  26DE               	addwf	postinc2,f,c
 12814  016CB4  503B               	movf	(btemp+17)^0,w,c
 12815  016CB6  22DE               	addwfc	postinc2,f,c
 12816  016CB8  503C               	movf	(btemp+18)^0,w,c
 12817  016CBA  22DE               	addwfc	postinc2,f,c
 12818  016CBC  503D               	movf	(btemp+19)^0,w,c
 12819  016CBE  22DE               	addwfc	postinc2,f,c
 12820  016CC0  503E               	movf	(btemp+20)^0,w,c
 12821  016CC2  22DE               	addwfc	postinc2,f,c
 12822  016CC4  503F               	movf	(btemp+21)^0,w,c
 12823  016CC6  22DE               	addwfc	postinc2,f,c
 12824  016CC8  5040               	movf	(btemp+22)^0,w,c
 12825  016CCA  22DE               	addwfc	postinc2,f,c
 12826  016CCC  5041               	movf	(btemp+23)^0,w,c
 12827  016CCE  22DE               	addwfc	postinc2,f,c
 12828                           
 12829                           ;stkvar	_t1 @ sp[(-24)+8]
 12830  016CD0  50E1               	movf	fsr1l,w,c
 12831  016CD2  0FF0               	addlw	-16
 12832  016CD4  6ED9               	movwf	fsr2l,c
 12833  016CD6  50E2               	movf	fsr1h,w,c
 12834  016CD8  6EDA               	movwf	fsr2h,c
 12835  016CDA  0EFF               	movlw	255
 12836  016CDC  22DA               	addwfc	fsr2h,f,c
 12837  016CDE  0100               	movlb	0	; () banked
 12838  016CE0  51B6               	movf	_dst_off& (0+255),w,b
 12839  016CE2  26DE               	addwf	postinc2,f,c
 12840  016CE4  51B7               	movf	(_dst_off+1)& (0+255),w,b
 12841  016CE6  22DE               	addwfc	postinc2,f,c
 12842  016CE8  0E00               	movlw	0
 12843  016CEA  BFB7               	btfsc	(_dst_off+1)& (0+255),7,b
 12844  016CEC  0EFF               	movlw	255
 12845  016CEE  22DE               	addwfc	postinc2,f,c
 12846  016CF0  22DE               	addwfc	postinc2,f,c
 12847  016CF2  22DE               	addwfc	postinc2,f,c
 12848  016CF4  22DE               	addwfc	postinc2,f,c
 12849  016CF6  22DE               	addwfc	postinc2,f,c
 12850  016CF8  22DE               	addwfc	postinc2,f,c
 12851  016CFA                     l16843:
 12852                           
 12853                           ;stkvar	_t1 @ sp[(-24)+8]
 12854                           ;stkvar	_t0 @ sp[(-24)+16]
 12855  016CFA  50E1               	movf	fsr1l,w,c
 12856  016CFC  0FF8               	addlw	-8
 12857  016CFE  6ED9               	movwf	fsr2l,c
 12858  016D00  50E2               	movf	fsr1h,w,c
 12859  016D02  6EDA               	movwf	fsr2h,c
 12860  016D04  0EFF               	movlw	255
 12861  016D06  22DA               	addwfc	fsr2h,f,c
 12862  016D08  0EF0               	movlw	-16
 12863  016D0A  50E3               	movf	plusw1,w,c
 12864  016D0C  5CDE               	subwf	postinc2,w,c
 12865  016D0E  0EF1               	movlw	-15
 12866  016D10  50E3               	movf	plusw1,w,c
 12867  016D12  58DE               	subwfb	postinc2,w,c
 12868  016D14  0EF2               	movlw	-14
 12869  016D16  50E3               	movf	plusw1,w,c
 12870  016D18  58DE               	subwfb	postinc2,w,c
 12871  016D1A  0EF3               	movlw	-13
 12872  016D1C  50E3               	movf	plusw1,w,c
 12873  016D1E  58DE               	subwfb	postinc2,w,c
 12874  016D20  0EF4               	movlw	-12
 12875  016D22  50E3               	movf	plusw1,w,c
 12876  016D24  58DE               	subwfb	postinc2,w,c
 12877  016D26  0EF5               	movlw	-11
 12878  016D28  50E3               	movf	plusw1,w,c
 12879  016D2A  58DE               	subwfb	postinc2,w,c
 12880  016D2C  0EF6               	movlw	-10
 12881  016D2E  50E3               	movf	plusw1,w,c
 12882  016D30  58DE               	subwfb	postinc2,w,c
 12883  016D32  50DE               	movf	postinc2,w,c
 12884  016D34  0A80               	xorlw	128
 12885  016D36  6E2A               	movwf	btemp^0,c
 12886  016D38  0EF7               	movlw	-9
 12887  016D3A  50E3               	movf	plusw1,w,c
 12888  016D3C  0A80               	xorlw	128
 12889  016D3E  582A               	subwfb	btemp^0,w,c
 12890  016D40  B0D8               	btfsc	status,0,c
 12891  016D42  D04B               	goto	l16853
 12892                           
 12893                           ;stkvar	_t0 @ sp[(-24)+16]
 12894                           ;stkvar	_t @ sp[(-24)+-8]
 12895  016D44  50E1               	movf	fsr1l,w,c
 12896  016D46  0FE0               	addlw	-32
 12897  016D48  6ED9               	movwf	fsr2l,c
 12898  016D4A  50E2               	movf	fsr1h,w,c
 12899  016D4C  6EDA               	movwf	fsr2h,c
 12900  016D4E  0EFF               	movlw	255
 12901  016D50  22DA               	addwfc	fsr2h,f,c
 12902  016D52  0EF8               	movlw	-8
 12903  016D54  50E3               	movf	plusw1,w,c
 12904  016D56  5CDE               	subwf	postinc2,w,c
 12905  016D58  0EF9               	movlw	-7
 12906  016D5A  50E3               	movf	plusw1,w,c
 12907  016D5C  58DE               	subwfb	postinc2,w,c
 12908  016D5E  0EFA               	movlw	-6
 12909  016D60  50E3               	movf	plusw1,w,c
 12910  016D62  58DE               	subwfb	postinc2,w,c
 12911  016D64  0EFB               	movlw	-5
 12912  016D66  50E3               	movf	plusw1,w,c
 12913  016D68  58DE               	subwfb	postinc2,w,c
 12914  016D6A  0EFC               	movlw	-4
 12915  016D6C  50E3               	movf	plusw1,w,c
 12916  016D6E  58DE               	subwfb	postinc2,w,c
 12917  016D70  0EFD               	movlw	-3
 12918  016D72  50E3               	movf	plusw1,w,c
 12919  016D74  58DE               	subwfb	postinc2,w,c
 12920  016D76  0EFE               	movlw	-2
 12921  016D78  50E3               	movf	plusw1,w,c
 12922  016D7A  58DE               	subwfb	postinc2,w,c
 12923  016D7C  50DE               	movf	postinc2,w,c
 12924  016D7E  0A80               	xorlw	128
 12925  016D80  6E2A               	movwf	btemp^0,c
 12926  016D82  0EFF               	movlw	-1
 12927  016D84  50E3               	movf	plusw1,w,c
 12928  016D86  0A80               	xorlw	128
 12929  016D88  582A               	subwfb	btemp^0,w,c
 12930  016D8A  A0D8               	btfss	status,0,c
 12931  016D8C  D070               	goto	u16410
 12932                           
 12933                           ;stkvar	_t1 @ sp[(-24)+8]
 12934                           ;stkvar	_t @ sp[(-24)+-8]
 12935  016D8E  50E1               	movf	fsr1l,w,c
 12936  016D90  0FE0               	addlw	-32
 12937  016D92  6ED9               	movwf	fsr2l,c
 12938  016D94  50E2               	movf	fsr1h,w,c
 12939  016D96  6EDA               	movwf	fsr2h,c
 12940  016D98  0EFF               	movlw	255
 12941  016D9A  22DA               	addwfc	fsr2h,f,c
 12942  016D9C  0EF0               	movlw	-16
 12943  016D9E  50E3               	movf	plusw1,w,c
 12944  016DA0  5CDE               	subwf	postinc2,w,c
 12945  016DA2  0EF1               	movlw	-15
 12946  016DA4  50E3               	movf	plusw1,w,c
 12947  016DA6  58DE               	subwfb	postinc2,w,c
 12948  016DA8  0EF2               	movlw	-14
 12949  016DAA  50E3               	movf	plusw1,w,c
 12950  016DAC  58DE               	subwfb	postinc2,w,c
 12951  016DAE  0EF3               	movlw	-13
 12952  016DB0  50E3               	movf	plusw1,w,c
 12953  016DB2  58DE               	subwfb	postinc2,w,c
 12954  016DB4  0EF4               	movlw	-12
 12955  016DB6  50E3               	movf	plusw1,w,c
 12956  016DB8  58DE               	subwfb	postinc2,w,c
 12957  016DBA  0EF5               	movlw	-11
 12958  016DBC  50E3               	movf	plusw1,w,c
 12959  016DBE  58DE               	subwfb	postinc2,w,c
 12960  016DC0  0EF6               	movlw	-10
 12961  016DC2  50E3               	movf	plusw1,w,c
 12962  016DC4  58DE               	subwfb	postinc2,w,c
 12963  016DC6  50DE               	movf	postinc2,w,c
 12964  016DC8  0A80               	xorlw	128
 12965  016DCA  6E2A               	movwf	btemp^0,c
 12966  016DCC  0EF7               	movlw	-9
 12967  016DCE  50E3               	movf	plusw1,w,c
 12968  016DD0  0A80               	xorlw	128
 12969  016DD2  582A               	subwfb	btemp^0,w,c
 12970  016DD4  A0D8               	btfss	status,0,c
 12971  016DD6  D0C1               	goto	l16871
 12972  016DD8  D04A               	goto	u16410
 12973  016DDA                     l16853:
 12974                           
 12975                           ;stkvar	_t1 @ sp[(-24)+8]
 12976                           ;stkvar	_t @ sp[(-24)+-8]
 12977  016DDA  50E1               	movf	fsr1l,w,c
 12978  016DDC  0FE0               	addlw	-32
 12979  016DDE  6ED9               	movwf	fsr2l,c
 12980  016DE0  50E2               	movf	fsr1h,w,c
 12981  016DE2  6EDA               	movwf	fsr2h,c
 12982  016DE4  0EFF               	movlw	255
 12983  016DE6  22DA               	addwfc	fsr2h,f,c
 12984  016DE8  0EF0               	movlw	-16
 12985  016DEA  50E3               	movf	plusw1,w,c
 12986  016DEC  5CDE               	subwf	postinc2,w,c
 12987  016DEE  0EF1               	movlw	-15
 12988  016DF0  50E3               	movf	plusw1,w,c
 12989  016DF2  58DE               	subwfb	postinc2,w,c
 12990  016DF4  0EF2               	movlw	-14
 12991  016DF6  50E3               	movf	plusw1,w,c
 12992  016DF8  58DE               	subwfb	postinc2,w,c
 12993  016DFA  0EF3               	movlw	-13
 12994  016DFC  50E3               	movf	plusw1,w,c
 12995  016DFE  58DE               	subwfb	postinc2,w,c
 12996  016E00  0EF4               	movlw	-12
 12997  016E02  50E3               	movf	plusw1,w,c
 12998  016E04  58DE               	subwfb	postinc2,w,c
 12999  016E06  0EF5               	movlw	-11
 13000  016E08  50E3               	movf	plusw1,w,c
 13001  016E0A  58DE               	subwfb	postinc2,w,c
 13002  016E0C  0EF6               	movlw	-10
 13003  016E0E  50E3               	movf	plusw1,w,c
 13004  016E10  58DE               	subwfb	postinc2,w,c
 13005  016E12  50DE               	movf	postinc2,w,c
 13006  016E14  0A80               	xorlw	128
 13007  016E16  6E2A               	movwf	btemp^0,c
 13008  016E18  0EF7               	movlw	-9
 13009  016E1A  50E3               	movf	plusw1,w,c
 13010  016E1C  0A80               	xorlw	128
 13011  016E1E  582A               	subwfb	btemp^0,w,c
 13012  016E20  A0D8               	btfss	status,0,c
 13013  016E22  D09B               	goto	l16871
 13014                           
 13015                           ;stkvar	_t0 @ sp[(-24)+16]
 13016                           ;stkvar	_t @ sp[(-24)+-8]
 13017  016E24  50E1               	movf	fsr1l,w,c
 13018  016E26  0FE0               	addlw	-32
 13019  016E28  6ED9               	movwf	fsr2l,c
 13020  016E2A  50E2               	movf	fsr1h,w,c
 13021  016E2C  6EDA               	movwf	fsr2h,c
 13022  016E2E  0EFF               	movlw	255
 13023  016E30  22DA               	addwfc	fsr2h,f,c
 13024  016E32  0EF8               	movlw	-8
 13025  016E34  50E3               	movf	plusw1,w,c
 13026  016E36  5CDE               	subwf	postinc2,w,c
 13027  016E38  0EF9               	movlw	-7
 13028  016E3A  50E3               	movf	plusw1,w,c
 13029  016E3C  58DE               	subwfb	postinc2,w,c
 13030  016E3E  0EFA               	movlw	-6
 13031  016E40  50E3               	movf	plusw1,w,c
 13032  016E42  58DE               	subwfb	postinc2,w,c
 13033  016E44  0EFB               	movlw	-5
 13034  016E46  50E3               	movf	plusw1,w,c
 13035  016E48  58DE               	subwfb	postinc2,w,c
 13036  016E4A  0EFC               	movlw	-4
 13037  016E4C  50E3               	movf	plusw1,w,c
 13038  016E4E  58DE               	subwfb	postinc2,w,c
 13039  016E50  0EFD               	movlw	-3
 13040  016E52  50E3               	movf	plusw1,w,c
 13041  016E54  58DE               	subwfb	postinc2,w,c
 13042  016E56  0EFE               	movlw	-2
 13043  016E58  50E3               	movf	plusw1,w,c
 13044  016E5A  58DE               	subwfb	postinc2,w,c
 13045  016E5C  50DE               	movf	postinc2,w,c
 13046  016E5E  0A80               	xorlw	128
 13047  016E60  6E2A               	movwf	btemp^0,c
 13048  016E62  0EFF               	movlw	-1
 13049  016E64  50E3               	movf	plusw1,w,c
 13050  016E66  0A80               	xorlw	128
 13051  016E68  582A               	subwfb	btemp^0,w,c
 13052  016E6A  B0D8               	btfsc	status,0,c
 13053  016E6C  D076               	goto	l16871
 13054  016E6E                     u16410:
 13055                           
 13056                           ;stkvar	_isdst @ sp[(-24)+-12]
 13057  016E6E  0EDC               	movlw	-36
 13058  016E70  006F FF8F FFD9     	movff	plusw1,fsr2l
 13059  016E76  0EDD               	movlw	-35
 13060  016E78  006F FF8F FFDA     	movff	plusw1,fsr2h
 13061  016E7E  0E00               	movlw	0
 13062  016E80  6EDE               	movwf	postinc2,c
 13063  016E82  0E00               	movlw	0
 13064  016E84  6EDD               	movwf	postdec2,c
 13065  016E86  0060  F1C0  F032   	movff	___timezone,btemp+8
 13066  016E8C  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13067  016E92  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13068  016E98  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13069  016E9E  1E32               	comf	(btemp+8)^0,f,c
 13070  016EA0  1E33               	comf	(btemp+9)^0,f,c
 13071  016EA2  1E34               	comf	(btemp+10)^0,f,c
 13072  016EA4  1E35               	comf	(btemp+11)^0,f,c
 13073  016EA6  2A32               	incf	(btemp+8)^0,f,c
 13074  016EA8  0E00               	movlw	0
 13075  016EAA  2233               	addwfc	(btemp+9)^0,f,c
 13076  016EAC  2234               	addwfc	(btemp+10)^0,f,c
 13077  016EAE  2235               	addwfc	(btemp+11)^0,f,c
 13078                           
 13079                           ;stkvar	_offset @ sp[(-24)+-14]
 13080  016EB0  0EDA               	movlw	-38
 13081  016EB2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13082  016EB8  0EDB               	movlw	-37
 13083  016EBA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13084  016EC0  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13085  016EC6  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13086  016ECC  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13087  016ED2  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13088                           
 13089                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13090  016ED8  0ED8               	movlw	-40
 13091  016EDA  006F FF8C  F02A    	movff	plusw1,btemp
 13092  016EE0  0ED9               	movlw	-39
 13093  016EE2  50E3               	movf	plusw1,w,c
 13094  016EE4  102A               	iorwf	btemp^0,w,c
 13095  016EE6  B4D8               	btfsc	status,2,c
 13096  016EE8  D029               	goto	l16867
 13097  016EEA  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13098  016EF0  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13099  016EF6  1E34               	comf	(btemp+10)^0,f,c
 13100  016EF8  1E35               	comf	(btemp+11)^0,f,c
 13101  016EFA  4A34               	infsnz	(btemp+10)^0,f,c
 13102  016EFC  2A35               	incf	(btemp+11)^0,f,c
 13103  016EFE  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13104  016F04  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13105  016F0A  0E00               	movlw	0
 13106  016F0C  BE2F               	btfsc	(btemp+5)^0,7,c
 13107  016F0E  0EFF               	movlw	255
 13108  016F10  6E30               	movwf	(btemp+6)^0,c
 13109  016F12  6E31               	movwf	(btemp+7)^0,c
 13110                           
 13111                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13112  016F14  0ED8               	movlw	-40
 13113  016F16  006F FF8F FFD9     	movff	plusw1,fsr2l
 13114  016F1C  0ED9               	movlw	-39
 13115  016F1E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13116  016F24  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13117  016F2A  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13118  016F30  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13119  016F36  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13120  016F3C                     l16867:
 13121                           
 13122                           ;stkvar	_zonename @ sp[(-24)+-18]
 13123  016F3C  0ED6               	movlw	-42
 13124  016F3E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13125  016F44  0ED7               	movlw	-41
 13126  016F46  006F FF8F FFDA     	movff	plusw1,fsr2h
 13127  016F4C  0060  F1B3  FFDE   	movff	___tzname,postinc2
 13128  016F52  0060  F1B7  FFDD   	movff	___tzname+1,postdec2
 13129  016F58  D075               	goto	l4038
 13130  016F5A                     l16871:
 13131                           
 13132                           ;stkvar	_isdst @ sp[(-24)+-12]
 13133  016F5A  0EDC               	movlw	-36
 13134  016F5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13135  016F62  0EDD               	movlw	-35
 13136  016F64  006F FF8F FFDA     	movff	plusw1,fsr2h
 13137  016F6A  0E01               	movlw	1
 13138  016F6C  6EDE               	movwf	postinc2,c
 13139  016F6E  0E00               	movlw	0
 13140  016F70  6EDD               	movwf	postdec2,c
 13141  016F72  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13142  016F78  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13143  016F7E  1E34               	comf	(btemp+10)^0,f,c
 13144  016F80  1E35               	comf	(btemp+11)^0,f,c
 13145  016F82  4A34               	infsnz	(btemp+10)^0,f,c
 13146  016F84  2A35               	incf	(btemp+11)^0,f,c
 13147  016F86  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13148  016F8C  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13149  016F92  0E00               	movlw	0
 13150  016F94  BE2F               	btfsc	(btemp+5)^0,7,c
 13151  016F96  0EFF               	movlw	255
 13152  016F98  6E30               	movwf	(btemp+6)^0,c
 13153  016F9A  6E31               	movwf	(btemp+7)^0,c
 13154                           
 13155                           ;stkvar	_offset @ sp[(-24)+-14]
 13156  016F9C  0EDA               	movlw	-38
 13157  016F9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13158  016FA4  0EDB               	movlw	-37
 13159  016FA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13160  016FAC  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13161  016FB2  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13162  016FB8  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13163  016FBE  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13164                           
 13165                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13166  016FC4  0ED8               	movlw	-40
 13167  016FC6  006F FF8C  F02A    	movff	plusw1,btemp
 13168  016FCC  0ED9               	movlw	-39
 13169  016FCE  50E3               	movf	plusw1,w,c
 13170  016FD0  102A               	iorwf	btemp^0,w,c
 13171  016FD2  B4D8               	btfsc	status,2,c
 13172  016FD4  D029               	goto	l16879
 13173  016FD6  0060  F1C0  F032   	movff	___timezone,btemp+8
 13174  016FDC  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13175  016FE2  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13176  016FE8  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13177  016FEE  1E32               	comf	(btemp+8)^0,f,c
 13178  016FF0  1E33               	comf	(btemp+9)^0,f,c
 13179  016FF2  1E34               	comf	(btemp+10)^0,f,c
 13180  016FF4  1E35               	comf	(btemp+11)^0,f,c
 13181  016FF6  2A32               	incf	(btemp+8)^0,f,c
 13182  016FF8  0E00               	movlw	0
 13183  016FFA  2233               	addwfc	(btemp+9)^0,f,c
 13184  016FFC  2234               	addwfc	(btemp+10)^0,f,c
 13185  016FFE  2235               	addwfc	(btemp+11)^0,f,c
 13186                           
 13187                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13188  017000  0ED8               	movlw	-40
 13189  017002  006F FF8F FFD9     	movff	plusw1,fsr2l
 13190  017008  0ED9               	movlw	-39
 13191  01700A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13192  017010  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13193  017016  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13194  01701C  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13195  017022  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13196  017028                     l16879:
 13197                           
 13198                           ;stkvar	_zonename @ sp[(-24)+-18]
 13199  017028  0ED6               	movlw	-42
 13200  01702A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13201  017030  0ED7               	movlw	-41
 13202  017032  006F FF8F FFDA     	movff	plusw1,fsr2h
 13203  017038  0060  F1BB  FFDE   	movff	___tzname+2,postinc2
 13204  01703E  0060  F1BF  FFDD   	movff	___tzname+3,postdec2
 13205  017044                     l4038:
 13206                           
 13207                           ; ___secs_to_zone: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          18, argsize = 18, vargsize = 0
 13208  017044  0ED6               	movlw	214
 13209  017046  26E1               	addwf	fsr1l,f,c
 13210  017048  0EFF               	movlw	255
 13211  01704A  22E2               	addwfc	fsr1h,f,c
 13212  01704C  0012               	return		;funcret
 13213  01704E                     __end_of___secs_to_zone:
 13214                           	opt callstack 0
 13215                           
 13216 ;; *************** function _scan_trans *****************
 13217 ;; Defined at:
 13218 ;;		line 145 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13219 ;; Parameters:    Size  Location     Type
 13220 ;;  t               8  [STACK] long long 
 13221 ;;  local           2  [STACK] int 
 13222 ;;  alt             2  [STACK] PTR unsigned int 
 13223 ;;		 -> alt(2), 
 13224 ;; Auto vars:     Size  Location     Type
 13225 ;;  x               8    0        unsigned long long 
 13226 ;;  a               2    0        unsigned int 
 13227 ;;  scale           2    0        int 
 13228 ;;  n               2    0        unsigned int 
 13229 ;;  m               2    0        unsigned int 
 13230 ;;  off             2    0        int 
 13231 ;; Return value:  Size  Location     Type
 13232 ;;                  2  [STACK] unsigned int 
 13233 ;; Registers used:
 13234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 13235 ;; Tracked objects:
 13236 ;;		On entry : 0/0
 13237 ;;		On exit  : 0/0
 13238 ;;		Unchanged: 0/0
 13239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13244 ;;Total ram usage:        0 bytes
 13245 ;; Hardware stack levels used:    1
 13246 ;; Hardware stack levels required when called:   16
 13247 ;; This function calls:
 13248 ;;		_zi_read32
 13249 ;; This function is called by:
 13250 ;;		___secs_to_zone
 13251 ;; This function uses a reentrant model
 13252 ;;
 13253                           
 13254                           	psect	text38
 13255  002512                     __ptext38:
 13256                           	opt callstack 0
 13257  002512                     _scan_trans:
 13258                           	opt callstack 11
 13259                           
 13260                           ;stkvar	_alt @ sp[(0)+-12]
 13261                           
 13262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 12 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 13263                           ;incstack = 0
 13264  002512  0EF4               	movlw	-12
 13265  002514  006F FF8C  F02A    	movff	plusw1,btemp
 13266  00251A  0EF5               	movlw	-11
 13267  00251C  50E3               	movf	plusw1,w,c
 13268  00251E  102A               	iorwf	btemp^0,w,c
 13269  002520  B4D8               	btfsc	status,2,c
 13270  002522  D00C               	goto	l16607
 13271                           
 13272                           ;stkvar	_alt @ sp[(0)+-12]
 13273  002524  0EF4               	movlw	-12
 13274  002526  006F FF8F FFD9     	movff	plusw1,fsr2l
 13275  00252C  0EF5               	movlw	-11
 13276  00252E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13277  002534  0E00               	movlw	0
 13278  002536  6EDE               	movwf	postinc2,c
 13279  002538  0E00               	movlw	0
 13280  00253A  6EDD               	movwf	postdec2,c
 13281  00253C                     l16607:
 13282  00253C  0E00               	movlw	0
 13283  00253E  6E2A               	movwf	btemp^0,c
 13284  002540  0E00               	movlw	0
 13285  002542  6E2B               	movwf	(btemp+1)^0,c
 13286                           
 13287                           ; _scan_trans: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, a
      +                          rgsize = 12, vargsize = 0
 13288  002544  0EF4               	movlw	244
 13289  002546  26E1               	addwf	fsr1l,f,c
 13290  002548  0EFF               	movlw	255
 13291  00254A  22E2               	addwfc	fsr1h,f,c
 13292  00254C  0012               	return		;funcret
 13293  00254E                     __end_of_scan_trans:
 13294                           	opt callstack 0
 13295                           
 13296 ;; *************** function _zi_read32 *****************
 13297 ;; Defined at:
 13298 ;;		line 100 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13299 ;; Parameters:    Size  Location     Type
 13300 ;;  z               2  [STACK] PTR const unsigned char 
 13301 ;;		 -> NULL(0), 
 13302 ;; Auto vars:     Size  Location     Type
 13303 ;;		None
 13304 ;; Return value:  Size  Location     Type
 13305 ;;                  4  [STACK] unsigned long 
 13306 ;; Registers used:
 13307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13308 ;; Tracked objects:
 13309 ;;		On entry : 0/0
 13310 ;;		On exit  : 0/0
 13311 ;;		Unchanged: 0/0
 13312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13317 ;;Total ram usage:        0 bytes
 13318 ;; Hardware stack levels used:    1
 13319 ;; Hardware stack levels required when called:   15
 13320 ;; This function calls:
 13321 ;;		Nothing
 13322 ;; This function is called by:
 13323 ;;		_scan_trans
 13324 ;;		___secs_to_zone
 13325 ;; This function uses a reentrant model
 13326 ;;
 13327                           
 13328                           	psect	text39
 13329  0001AE                     __ptext39:
 13330                           	opt callstack 0
 13331  0001AE                     _zi_read32:
 13332                           	opt callstack 12
 13333                           
 13334                           ;stkvar	_z @ sp[(0)+-2]
 13335                           
 13336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13337                           ;incstack = 0
 13338  0001AE  0EFE               	movlw	-2
 13339  0001B0  006F FF8C  F034    	movff	plusw1,btemp+10
 13340  0001B6  0EFF               	movlw	-1
 13341  0001B8  006F FF8C  F035    	movff	plusw1,btemp+11
 13342  0001BE  0E02               	movlw	2
 13343  0001C0  2434               	addwf	(btemp+10)^0,w,c
 13344  0001C2  6ED9               	movwf	fsr2l,c
 13345  0001C4  0E00               	movlw	0
 13346  0001C6  2035               	addwfc	(btemp+11)^0,w,c
 13347  0001C8  6EDA               	movwf	fsr2h,c
 13348  0001CA  50DF               	movf	indf2,w,c
 13349  0001CC  6E35               	movwf	(btemp+11)^0,c
 13350  0001CE  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 13351  0001D4  6A2F               	clrf	(btemp+5)^0,c
 13352  0001D6  6A30               	clrf	(btemp+6)^0,c
 13353  0001D8  6A31               	clrf	(btemp+7)^0,c
 13354  0001DA  0060  F0C0  F031   	movff	btemp+6,btemp+7
 13355  0001E0  0060  F0BC  F030   	movff	btemp+5,btemp+6
 13356  0001E6  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 13357  0001EC  6A2E               	clrf	(btemp+4)^0,c
 13358                           
 13359                           ;stkvar	_z @ sp[(0)+-2]
 13360  0001EE  0EFE               	movlw	-2
 13361  0001F0  006F FF8C  F034    	movff	plusw1,btemp+10
 13362  0001F6  0EFF               	movlw	-1
 13363  0001F8  006F FF8C  F035    	movff	plusw1,btemp+11
 13364  0001FE  0E01               	movlw	1
 13365  000200  2434               	addwf	(btemp+10)^0,w,c
 13366  000202  6ED9               	movwf	fsr2l,c
 13367  000204  0E00               	movlw	0
 13368  000206  2035               	addwfc	(btemp+11)^0,w,c
 13369  000208  6EDA               	movwf	fsr2h,c
 13370  00020A  50DF               	movf	indf2,w,c
 13371  00020C  6E35               	movwf	(btemp+11)^0,c
 13372  00020E  0060  F0D4  F02A   	movff	btemp+11,btemp
 13373  000214  6A2B               	clrf	(btemp+1)^0,c
 13374  000216  6A2C               	clrf	(btemp+2)^0,c
 13375  000218  6A2D               	clrf	(btemp+3)^0,c
 13376  00021A  0060  F0AC  F02D   	movff	btemp+1,btemp+3
 13377  000220  0060  F0A8  F02C   	movff	btemp,btemp+2
 13378  000226  6A2B               	clrf	(btemp+1)^0,c
 13379  000228  6A2A               	clrf	btemp^0,c
 13380                           
 13381                           ;stkvar	_z @ sp[(0)+-2]
 13382  00022A  0EFE               	movlw	-2
 13383  00022C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13384  000232  0EFF               	movlw	-1
 13385  000234  006F FF8F FFDA     	movff	plusw1,fsr2h
 13386  00023A  50DF               	movf	indf2,w,c
 13387  00023C  6E32               	movwf	(btemp+8)^0,c
 13388  00023E  6A33               	clrf	(btemp+9)^0,c
 13389  000240  6A34               	clrf	(btemp+10)^0,c
 13390  000242  6A35               	clrf	(btemp+11)^0,c
 13391  000244  0060  F0C8  F035   	movff	btemp+8,btemp+11
 13392  00024A  6A34               	clrf	(btemp+10)^0,c
 13393  00024C  6A33               	clrf	(btemp+9)^0,c
 13394  00024E  6A32               	clrf	(btemp+8)^0,c
 13395  000250  502A               	movf	btemp^0,w,c
 13396  000252  1232               	iorwf	(btemp+8)^0,f,c
 13397  000254  502B               	movf	(btemp+1)^0,w,c
 13398  000256  1233               	iorwf	(btemp+9)^0,f,c
 13399  000258  502C               	movf	(btemp+2)^0,w,c
 13400  00025A  1234               	iorwf	(btemp+10)^0,f,c
 13401  00025C  502D               	movf	(btemp+3)^0,w,c
 13402  00025E  1235               	iorwf	(btemp+11)^0,f,c
 13403  000260  502E               	movf	(btemp+4)^0,w,c
 13404  000262  1232               	iorwf	(btemp+8)^0,f,c
 13405  000264  502F               	movf	(btemp+5)^0,w,c
 13406  000266  1233               	iorwf	(btemp+9)^0,f,c
 13407  000268  5030               	movf	(btemp+6)^0,w,c
 13408  00026A  1234               	iorwf	(btemp+10)^0,f,c
 13409  00026C  5031               	movf	(btemp+7)^0,w,c
 13410  00026E  1235               	iorwf	(btemp+11)^0,f,c
 13411                           
 13412                           ;stkvar	_z @ sp[(0)+-2]
 13413  000270  0EFE               	movlw	-2
 13414  000272  006F FF8C  F030    	movff	plusw1,btemp+6
 13415  000278  0EFF               	movlw	-1
 13416  00027A  006F FF8C  F031    	movff	plusw1,btemp+7
 13417  000280  0E03               	movlw	3
 13418  000282  2430               	addwf	(btemp+6)^0,w,c
 13419  000284  6ED9               	movwf	fsr2l,c
 13420  000286  0E00               	movlw	0
 13421  000288  2031               	addwfc	(btemp+7)^0,w,c
 13422  00028A  6EDA               	movwf	fsr2h,c
 13423  00028C  50DF               	movf	indf2,w,c
 13424  00028E  1032               	iorwf	(btemp+8)^0,w,c
 13425  000290  6E2A               	movwf	btemp^0,c
 13426  000292  5033               	movf	(btemp+9)^0,w,c
 13427  000294  6E2B               	movwf	(btemp+1)^0,c
 13428  000296  5034               	movf	(btemp+10)^0,w,c
 13429  000298  6E2C               	movwf	(btemp+2)^0,c
 13430  00029A  5035               	movf	(btemp+11)^0,w,c
 13431  00029C  6E2D               	movwf	(btemp+3)^0,c
 13432                           
 13433                           ; _zi_read32: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 13434  00029E  52E5               	movf	postdec1,f,c
 13435  0002A0  52E5               	movf	postdec1,f,c
 13436  0002A2  0012               	return		;funcret
 13437  0002A4                     __end_of_zi_read32:
 13438                           	opt callstack 0
 13439                           
 13440 ;; *************** function _rule_to_secs *****************
 13441 ;; Defined at:
 13442 ;;		line 218 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13443 ;; Parameters:    Size  Location     Type
 13444 ;;  rule            2  [STACK] PTR const int 
 13445 ;;		 -> r1(10), r0(10), 
 13446 ;;  year            2  [STACK] int 
 13447 ;; Auto vars:     Size  Location     Type
 13448 ;;  days            2  [STACK] int 
 13449 ;;  wday            2  [STACK] int 
 13450 ;;  t               8  [STACK] long long 
 13451 ;;  is_leap         2  [STACK] int 
 13452 ;;  n               2  [STACK] int 
 13453 ;;  x               2  [STACK] int 
 13454 ;;  m               2  [STACK] int 
 13455 ;;  d               2  [STACK] int 
 13456 ;; Return value:  Size  Location     Type
 13457 ;;                  8  [STACK] long long 
 13458 ;; Registers used:
 13459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 13460 ;; Tracked objects:
 13461 ;;		On entry : 0/0
 13462 ;;		On exit  : 0/0
 13463 ;;		Unchanged: 0/0
 13464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13469 ;;Total ram usage:        0 bytes
 13470 ;; Hardware stack levels used:    1
 13471 ;; Hardware stack levels required when called:   17
 13472 ;; This function calls:
 13473 ;;		___aldiv
 13474 ;;		___aomod
 13475 ;;		___lmul
 13476 ;;		___month_to_secs
 13477 ;;		___year_to_secs
 13478 ;;		_days_in_month
 13479 ;; This function is called by:
 13480 ;;		___secs_to_zone
 13481 ;; This function uses a reentrant model
 13482 ;;
 13483                           
 13484                           	psect	text40
 13485  018034                     __ptext40:
 13486                           	opt callstack 0
 13487  018034                     _rule_to_secs:
 13488                           	opt callstack 0
 13489                           
 13490                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 8 argfudge = 4
 13491  018034  0E1A               	movlw	26
 13492  018036  26E1               	addwf	fsr1l,f,c
 13493  018038  0E00               	movlw	0
 13494  01803A  22E2               	addwfc	fsr1h,f,c
 13495                           
 13496                           ;stkvar	_is_leap @ sp[(-22)+12]
 13497                           
 13498                           ;incstack = 0
 13499  01803C  0EF6               	movlw	246
 13500  01803E  24E1               	addwf	fsr1l,w,c
 13501  018040  6E2A               	movwf	btemp^0,c
 13502  018042  0EFF               	movlw	255
 13503  018044  20E2               	addwfc	fsr1h,w,c
 13504  018046  6E2B               	movwf	(btemp+1)^0,c
 13505  018048  0060  F0AB  FFE6   	movff	btemp,postinc1
 13506  01804E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 13507                           
 13508                           ;stkvar	_year @ sp[(-24)+-8]
 13509  018054  0EE0               	movlw	-32
 13510  018056  006F FF8C  F03A    	movff	plusw1,btemp+16
 13511  01805C  0EE1               	movlw	-31
 13512  01805E  006F FF8C  F03B    	movff	plusw1,btemp+17
 13513  018064  6A3C               	clrf	(btemp+18)^0,c
 13514  018066  BE3B               	btfsc	(btemp+17)^0,7,c
 13515  018068  683C               	setf	(btemp+18)^0,c
 13516  01806A  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 13517  018070  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 13518  018076  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 13519  01807C  0060  F0F0  F040   	movff	btemp+18,btemp+22
 13520  018082  0060  F0F0  F041   	movff	btemp+18,btemp+23
 13521  018088  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13522  01808E  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13523  018094  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13524  01809A  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13525  0180A0  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13526  0180A6  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13527  0180AC  0060  F103  FFE6   	movff	btemp+22,postinc1
 13528  0180B2  0060  F107  FFE6   	movff	btemp+23,postinc1
 13529  0180B8  EC1D  F0AF         	call	___year_to_secs	;wreg free
 13530  0180BC  52E5               	movf	postdec1,f,c
 13531  0180BE  006F FF9C  F041    	movff	indf1,btemp+23
 13532  0180C4  52E5               	movf	postdec1,f,c
 13533  0180C6  006F FF9C  F040    	movff	indf1,btemp+22
 13534  0180CC  52E5               	movf	postdec1,f,c
 13535  0180CE  006F FF9C  F03F    	movff	indf1,btemp+21
 13536  0180D4  52E5               	movf	postdec1,f,c
 13537  0180D6  006F FF9C  F03E    	movff	indf1,btemp+20
 13538  0180DC  52E5               	movf	postdec1,f,c
 13539  0180DE  006F FF9C  F03D    	movff	indf1,btemp+19
 13540  0180E4  52E5               	movf	postdec1,f,c
 13541  0180E6  006F FF9C  F03C    	movff	indf1,btemp+18
 13542  0180EC  52E5               	movf	postdec1,f,c
 13543  0180EE  006F FF9C  F03B    	movff	indf1,btemp+17
 13544  0180F4  52E5               	movf	postdec1,f,c
 13545  0180F6  006F FF9C  F03A    	movff	indf1,btemp+16
 13546  0180FC  52E5               	movf	postdec1,f,c
 13547  0180FE  52E5               	movf	postdec1,f,c
 13548                           
 13549                           ;stkvar	_t @ sp[(-22)+4]
 13550  018100  0EEE               	movlw	-18
 13551  018102  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 13552  018108  0EEF               	movlw	-17
 13553  01810A  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 13554  018110  0EF0               	movlw	-16
 13555  018112  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 13556  018118  0EF1               	movlw	-15
 13557  01811A  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 13558  018120  0EF2               	movlw	-14
 13559  018122  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 13560  018128  0EF3               	movlw	-13
 13561  01812A  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 13562  018130  0EF4               	movlw	-12
 13563  018132  0060  F103  FFE3   	movff	btemp+22,plusw1
 13564  018138  0EF5               	movlw	-11
 13565  01813A  0060  F107  FFE3   	movff	btemp+23,plusw1
 13566                           
 13567                           ;stkvar	_rule @ sp[(-22)+-6]
 13568  018140  0EE4               	movlw	-28
 13569  018142  006F FF8F FFD9     	movff	plusw1,fsr2l
 13570  018148  0EE5               	movlw	-27
 13571  01814A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13572  018150  0E4D               	movlw	77
 13573  018152  18DE               	xorwf	postinc2,w,c
 13574  018154  10DE               	iorwf	postinc2,w,c
 13575  018156  B4D8               	btfsc	status,2,c
 13576  018158  D074               	goto	l16723
 13577                           
 13578                           ;stkvar	_rule @ sp[(-22)+-6]
 13579  01815A  0EE4               	movlw	-28
 13580  01815C  006F FF8C  F034    	movff	plusw1,btemp+10
 13581  018162  0EE5               	movlw	-27
 13582  018164  006F FF8C  F035    	movff	plusw1,btemp+11
 13583  01816A  0E02               	movlw	2
 13584  01816C  2434               	addwf	(btemp+10)^0,w,c
 13585  01816E  6ED9               	movwf	fsr2l,c
 13586  018170  0E00               	movlw	0
 13587  018172  2035               	addwfc	(btemp+11)^0,w,c
 13588  018174  6EDA               	movwf	fsr2h,c
 13589  018176  006F FF78  F034    	movff	postinc2,btemp+10
 13590  01817C  006F FF74  F035    	movff	postdec2,btemp+11
 13591                           
 13592                           ;stkvar	_x @ sp[(-22)+16]
 13593  018182  0EFA               	movlw	-6
 13594  018184  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13595  01818A  0EFB               	movlw	-5
 13596  01818C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13597                           
 13598                           ;stkvar	_rule @ sp[(-22)+-6]
 13599  018192  0EE4               	movlw	-28
 13600  018194  006F FF8F FFD9     	movff	plusw1,fsr2l
 13601  01819A  0EE5               	movlw	-27
 13602  01819C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13603  0181A2  0E4A               	movlw	74
 13604  0181A4  18DE               	xorwf	postinc2,w,c
 13605  0181A6  10DE               	iorwf	postinc2,w,c
 13606  0181A8  A4D8               	btfss	status,2,c
 13607  0181AA  D021               	goto	l16721
 13608                           
 13609                           ;stkvar	_x @ sp[(-22)+16]
 13610  0181AC  0EFB               	movlw	-5
 13611  0181AE  BEE3               	btfsc	plusw1,7,c
 13612  0181B0  D014               	goto	u16240
 13613  0181B2  0EFB               	movlw	-5
 13614  0181B4  50E3               	movf	plusw1,w,c
 13615  0181B6  E108               	bnz	u16230
 13616  0181B8  0EFA               	movlw	-6
 13617  0181BA  006F FF8C  F02A    	movff	plusw1,btemp
 13618  0181C0  0E3C               	movlw	60
 13619  0181C2  5E2A               	subwf	btemp^0,f,c
 13620  0181C4  A0D8               	btfss	status,0,c
 13621  0181C6  D009               	goto	u16240
 13622  0181C8                     u16230:
 13623                           
 13624                           ;stkvar	_is_leap @ sp[(-22)+12]
 13625  0181C8  0EF6               	movlw	-10
 13626  0181CA  006F FF8C  F02A    	movff	plusw1,btemp
 13627  0181D0  0EF7               	movlw	-9
 13628  0181D2  50E3               	movf	plusw1,w,c
 13629  0181D4  102A               	iorwf	btemp^0,w,c
 13630  0181D6  A4D8               	btfss	status,2,c
 13631  0181D8  D00A               	goto	l16721
 13632  0181DA                     u16240:
 13633                           
 13634                           ;stkvar	_x @ sp[(-22)+16]
 13635  0181DA  50E1               	movf	fsr1l,w,c
 13636  0181DC  0FFA               	addlw	-6
 13637  0181DE  6ED9               	movwf	fsr2l,c
 13638  0181E0  50E2               	movf	fsr1h,w,c
 13639  0181E2  6EDA               	movwf	fsr2h,c
 13640  0181E4  0EFF               	movlw	255
 13641  0181E6  22DA               	addwfc	fsr2h,f,c
 13642  0181E8  06DE               	decf	postinc2,f,c
 13643  0181EA  0E00               	movlw	0
 13644  0181EC  5ADD               	subwfb	postdec2,f,c
 13645  0181EE                     l16721:
 13646  0181EE  0E80               	movlw	128
 13647  0181F0  6EE6               	movwf	postinc1,c
 13648  0181F2  0E51               	movlw	81
 13649  0181F4  6EE6               	movwf	postinc1,c
 13650  0181F6  0E01               	movlw	1
 13651  0181F8  6EE6               	movwf	postinc1,c
 13652  0181FA  0E00               	movlw	0
 13653  0181FC  6EE6               	movwf	postinc1,c
 13654                           
 13655                           ;stkvar	_x @ sp[(-26)+16]
 13656  0181FE  0EF6               	movlw	-10
 13657  018200  006F FF8C  F034    	movff	plusw1,btemp+10
 13658  018206  0EF7               	movlw	-9
 13659  018208  006F FF8C  F035    	movff	plusw1,btemp+11
 13660  01820E  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13661  018214  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13662  01821A  0E00               	movlw	0
 13663  01821C  BE2F               	btfsc	(btemp+5)^0,7,c
 13664  01821E  0EFF               	movlw	255
 13665  018220  6E30               	movwf	(btemp+6)^0,c
 13666  018222  6E31               	movwf	(btemp+7)^0,c
 13667  018224  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13668  01822A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13669  018230  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13670  018236  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13671  01823C  EC31  F003         	call	___lmul	;wreg free
 13672  018240  D1EC               	goto	L10
 13673  018242                     l16723:
 13674                           
 13675                           ;stkvar	_rule @ sp[(-22)+-6]
 13676  018242  0EE4               	movlw	-28
 13677  018244  006F FF8C  F034    	movff	plusw1,btemp+10
 13678  01824A  0EE5               	movlw	-27
 13679  01824C  006F FF8C  F035    	movff	plusw1,btemp+11
 13680  018252  0E02               	movlw	2
 13681  018254  2434               	addwf	(btemp+10)^0,w,c
 13682  018256  6ED9               	movwf	fsr2l,c
 13683  018258  0E00               	movlw	0
 13684  01825A  2035               	addwfc	(btemp+11)^0,w,c
 13685  01825C  6EDA               	movwf	fsr2h,c
 13686  01825E  006F FF78  F034    	movff	postinc2,btemp+10
 13687  018264  006F FF74  F035    	movff	postdec2,btemp+11
 13688                           
 13689                           ;stkvar	_m @ sp[(-22)+18]
 13690  01826A  0EFC               	movlw	-4
 13691  01826C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13692  018272  0EFD               	movlw	-3
 13693  018274  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13694                           
 13695                           ;stkvar	_rule @ sp[(-22)+-6]
 13696  01827A  0EE4               	movlw	-28
 13697  01827C  006F FF8C  F034    	movff	plusw1,btemp+10
 13698  018282  0EE5               	movlw	-27
 13699  018284  006F FF8C  F035    	movff	plusw1,btemp+11
 13700  01828A  0E04               	movlw	4
 13701  01828C  2434               	addwf	(btemp+10)^0,w,c
 13702  01828E  6ED9               	movwf	fsr2l,c
 13703  018290  0E00               	movlw	0
 13704  018292  2035               	addwfc	(btemp+11)^0,w,c
 13705  018294  6EDA               	movwf	fsr2h,c
 13706  018296  006F FF78  F034    	movff	postinc2,btemp+10
 13707  01829C  006F FF74  F035    	movff	postdec2,btemp+11
 13708                           
 13709                           ;stkvar	_n @ sp[(-22)+14]
 13710  0182A2  0EF8               	movlw	-8
 13711  0182A4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13712  0182AA  0EF9               	movlw	-7
 13713  0182AC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13714                           
 13715                           ;stkvar	_rule @ sp[(-22)+-6]
 13716  0182B2  0EE4               	movlw	-28
 13717  0182B4  006F FF8C  F034    	movff	plusw1,btemp+10
 13718  0182BA  0EE5               	movlw	-27
 13719  0182BC  006F FF8C  F035    	movff	plusw1,btemp+11
 13720  0182C2  0E06               	movlw	6
 13721  0182C4  2434               	addwf	(btemp+10)^0,w,c
 13722  0182C6  6ED9               	movwf	fsr2l,c
 13723  0182C8  0E00               	movlw	0
 13724  0182CA  2035               	addwfc	(btemp+11)^0,w,c
 13725  0182CC  6EDA               	movwf	fsr2h,c
 13726  0182CE  006F FF78  F034    	movff	postinc2,btemp+10
 13727  0182D4  006F FF74  F035    	movff	postdec2,btemp+11
 13728                           
 13729                           ;stkvar	_d @ sp[(-22)+20]
 13730  0182DA  0EFE               	movlw	-2
 13731  0182DC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13732  0182E2  0EFF               	movlw	-1
 13733  0182E4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13734                           
 13735                           ;stkvar	_is_leap @ sp[(-22)+12]
 13736  0182EA  0EF6               	movlw	-10
 13737  0182EC  006F FF8F FFE6     	movff	plusw1,postinc1
 13738  0182F2  006F FF8F FFE6     	movff	plusw1,postinc1
 13739                           
 13740                           ;stkvar	_m @ sp[(-24)+18]
 13741  0182F8  0EFA               	movlw	-6
 13742  0182FA  50E3               	movf	plusw1,w,c
 13743  0182FC  0FFF               	addlw	255
 13744  0182FE  6E34               	movwf	(btemp+10)^0,c
 13745  018300  0EFB               	movlw	-5
 13746  018302  006F FF8C  F035    	movff	plusw1,btemp+11
 13747  018308  0EFF               	movlw	255
 13748  01830A  2235               	addwfc	(btemp+11)^0,f,c
 13749  01830C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13750  018312  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13751  018318  EC46  F002         	call	___month_to_secs	;wreg free
 13752  01831C  0060  F0A8  F03A   	movff	btemp,btemp+16
 13753  018322  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13754  018328  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13755  01832E  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 13756  018334  6A3E               	clrf	(btemp+20)^0,c
 13757  018336  BE3D               	btfsc	(btemp+19)^0,7,c
 13758  018338  683E               	setf	(btemp+20)^0,c
 13759  01833A  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13760  018340  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13761  018346  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13762                           
 13763                           ;stkvar	_t @ sp[(-22)+4]
 13764  01834C  50E1               	movf	fsr1l,w,c
 13765  01834E  0FEE               	addlw	-18
 13766  018350  6ED9               	movwf	fsr2l,c
 13767  018352  50E2               	movf	fsr1h,w,c
 13768  018354  6EDA               	movwf	fsr2h,c
 13769  018356  0EFF               	movlw	255
 13770  018358  22DA               	addwfc	fsr2h,f,c
 13771  01835A  503A               	movf	(btemp+16)^0,w,c
 13772  01835C  26DE               	addwf	postinc2,f,c
 13773  01835E  503B               	movf	(btemp+17)^0,w,c
 13774  018360  22DE               	addwfc	postinc2,f,c
 13775  018362  503C               	movf	(btemp+18)^0,w,c
 13776  018364  22DE               	addwfc	postinc2,f,c
 13777  018366  503D               	movf	(btemp+19)^0,w,c
 13778  018368  22DE               	addwfc	postinc2,f,c
 13779  01836A  503E               	movf	(btemp+20)^0,w,c
 13780  01836C  22DE               	addwfc	postinc2,f,c
 13781  01836E  503F               	movf	(btemp+21)^0,w,c
 13782  018370  22DE               	addwfc	postinc2,f,c
 13783  018372  5040               	movf	(btemp+22)^0,w,c
 13784  018374  22DE               	addwfc	postinc2,f,c
 13785  018376  5041               	movf	(btemp+23)^0,w,c
 13786  018378  22DE               	addwfc	postinc2,f,c
 13787  01837A  0E80               	movlw	128
 13788  01837C  6EE6               	movwf	postinc1,c
 13789  01837E  0E51               	movlw	81
 13790  018380  6EE6               	movwf	postinc1,c
 13791  018382  0E01               	movlw	1
 13792  018384  6EE6               	movwf	postinc1,c
 13793  018386  0E00               	movlw	0
 13794  018388  6EE6               	movwf	postinc1,c
 13795  01838A  0E80               	movlw	128
 13796  01838C  6EE6               	movwf	postinc1,c
 13797  01838E  0E3A               	movlw	58
 13798  018390  6EE6               	movwf	postinc1,c
 13799  018392  0E09               	movlw	9
 13800  018394  6EE6               	movwf	postinc1,c
 13801  018396  0E00               	movlw	0
 13802  018398  6EE6               	movwf	postinc1,c
 13803  01839A  0E00               	movlw	0
 13804  01839C  6EE6               	movwf	postinc1,c
 13805  01839E  0E00               	movlw	0
 13806  0183A0  6EE6               	movwf	postinc1,c
 13807  0183A2  0E00               	movlw	0
 13808  0183A4  6EE6               	movwf	postinc1,c
 13809  0183A6  0E00               	movlw	0
 13810  0183A8  6EE6               	movwf	postinc1,c
 13811                           
 13812                           ;stkvar	_t @ sp[(-34)+4]
 13813  0183AA  0EE2               	movlw	-30
 13814  0183AC  50E3               	movf	plusw1,w,c
 13815  0183AE  0F00               	addlw	0
 13816  0183B0  6E3A               	movwf	(btemp+16)^0,c
 13817  0183B2  0EE3               	movlw	-29
 13818  0183B4  006F FF8C  F03B    	movff	plusw1,btemp+17
 13819  0183BA  0E46               	movlw	70
 13820  0183BC  223B               	addwfc	(btemp+17)^0,f,c
 13821  0183BE  0EE4               	movlw	-28
 13822  0183C0  006F FF8C  F03C    	movff	plusw1,btemp+18
 13823  0183C6  0E05               	movlw	5
 13824  0183C8  223C               	addwfc	(btemp+18)^0,f,c
 13825  0183CA  0EE5               	movlw	-27
 13826  0183CC  006F FF8C  F03D    	movff	plusw1,btemp+19
 13827  0183D2  0E00               	movlw	0
 13828  0183D4  223D               	addwfc	(btemp+19)^0,f,c
 13829  0183D6  0EE6               	movlw	-26
 13830  0183D8  006F FF8C  F03E    	movff	plusw1,btemp+20
 13831  0183DE  0E00               	movlw	0
 13832  0183E0  223E               	addwfc	(btemp+20)^0,f,c
 13833  0183E2  0EE7               	movlw	-25
 13834  0183E4  006F FF8C  F03F    	movff	plusw1,btemp+21
 13835  0183EA  0E00               	movlw	0
 13836  0183EC  223F               	addwfc	(btemp+21)^0,f,c
 13837  0183EE  0EE8               	movlw	-24
 13838  0183F0  006F FF8C  F040    	movff	plusw1,btemp+22
 13839  0183F6  0E00               	movlw	0
 13840  0183F8  2240               	addwfc	(btemp+22)^0,f,c
 13841  0183FA  0EE9               	movlw	-23
 13842  0183FC  006F FF8C  F041    	movff	plusw1,btemp+23
 13843  018402  0E00               	movlw	0
 13844  018404  2241               	addwfc	(btemp+23)^0,f,c
 13845  018406  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13846  01840C  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13847  018412  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13848  018418  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13849  01841E  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13850  018424  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13851  01842A  0060  F103  FFE6   	movff	btemp+22,postinc1
 13852  018430  0060  F107  FFE6   	movff	btemp+23,postinc1
 13853  018436  ECB0  F0E7         	call	___aomod	;wreg free
 13854  01843A  52E5               	movf	postdec1,f,c
 13855  01843C  006F FF9C  F041    	movff	indf1,btemp+23
 13856  018442  52E5               	movf	postdec1,f,c
 13857  018444  006F FF9C  F040    	movff	indf1,btemp+22
 13858  01844A  52E5               	movf	postdec1,f,c
 13859  01844C  006F FF9C  F03F    	movff	indf1,btemp+21
 13860  018452  52E5               	movf	postdec1,f,c
 13861  018454  006F FF9C  F03E    	movff	indf1,btemp+20
 13862  01845A  52E5               	movf	postdec1,f,c
 13863  01845C  006F FF9C  F03D    	movff	indf1,btemp+19
 13864  018462  52E5               	movf	postdec1,f,c
 13865  018464  006F FF9C  F03C    	movff	indf1,btemp+18
 13866  01846A  52E5               	movf	postdec1,f,c
 13867  01846C  006F FF9C  F03B    	movff	indf1,btemp+17
 13868  018472  52E5               	movf	postdec1,f,c
 13869  018474  006F FF9C  F03A    	movff	indf1,btemp+16
 13870  01847A  0EF8               	movlw	248
 13871  01847C  26E1               	addwf	fsr1l,f,c
 13872  01847E  0EFF               	movlw	255
 13873  018480  22E2               	addwfc	fsr1h,f,c
 13874  018482  0060  F0E8  F034   	movff	btemp+16,btemp+10
 13875  018488  0060  F0EC  F035   	movff	btemp+17,btemp+11
 13876  01848E  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13877  018494  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13878  01849A  0E00               	movlw	0
 13879  01849C  BE2F               	btfsc	(btemp+5)^0,7,c
 13880  01849E  0EFF               	movlw	255
 13881  0184A0  6E30               	movwf	(btemp+6)^0,c
 13882  0184A2  6E31               	movwf	(btemp+7)^0,c
 13883  0184A4  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13884  0184AA  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13885  0184B0  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13886  0184B6  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13887  0184BC  EC70  F0F1         	call	___aldiv	;wreg free
 13888  0184C0  0060  F0A8  F034   	movff	btemp,btemp+10
 13889  0184C6  0060  F0AC  F035   	movff	btemp+1,btemp+11
 13890                           
 13891                           ;stkvar	_wday @ sp[(-22)+2]
 13892  0184CC  0EEC               	movlw	-20
 13893  0184CE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13894  0184D4  0EED               	movlw	-19
 13895  0184D6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13896                           
 13897                           ;stkvar	_wday @ sp[(-22)+2]
 13898                           ;stkvar	_d @ sp[(-22)+20]
 13899  0184DC  0EFE               	movlw	-2
 13900  0184DE  006F FF8C  F034    	movff	plusw1,btemp+10
 13901  0184E4  0EFF               	movlw	-1
 13902  0184E6  006F FF8C  F035    	movff	plusw1,btemp+11
 13903  0184EC  0EEC               	movlw	-20
 13904  0184EE  50E3               	movf	plusw1,w,c
 13905  0184F0  5E34               	subwf	(btemp+10)^0,f,c
 13906  0184F2  0EED               	movlw	-19
 13907  0184F4  50E3               	movf	plusw1,w,c
 13908  0184F6  5A35               	subwfb	(btemp+11)^0,f,c
 13909                           
 13910                           ;stkvar	_days @ sp[(-22)+0]
 13911  0184F8  0EEA               	movlw	-22
 13912  0184FA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13913  018500  0EEB               	movlw	-21
 13914  018502  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13915                           
 13916                           ;stkvar	_days @ sp[(-22)+0]
 13917  018508  0EEB               	movlw	-21
 13918  01850A  AEE3               	btfss	plusw1,7,c
 13919  01850C  D011               	goto	l4030
 13920                           
 13921                           ;stkvar	_days @ sp[(-22)+0]
 13922  01850E  0EEA               	movlw	-22
 13923  018510  50E3               	movf	plusw1,w,c
 13924  018512  0F07               	addlw	7
 13925  018514  6E2A               	movwf	btemp^0,c
 13926  018516  0EEA               	movlw	-22
 13927  018518  0060  F0AB  FFE3   	movff	btemp,plusw1
 13928  01851E  6A2A               	clrf	btemp^0,c
 13929  018520  0EEB               	movlw	-21
 13930  018522  50E3               	movf	plusw1,w,c
 13931  018524  202A               	addwfc	btemp^0,w,c
 13932  018526  6E2A               	movwf	btemp^0,c
 13933  018528  0EEB               	movlw	-21
 13934  01852A  0060  F0AB  FFE3   	movff	btemp,plusw1
 13935  018530                     l4030:
 13936                           
 13937                           ;stkvar	_n @ sp[(-22)+14]
 13938  018530  0EF8               	movlw	-8
 13939  018532  006F FF8C  F02A    	movff	plusw1,btemp
 13940  018538  0E05               	movlw	5
 13941  01853A  182A               	xorwf	btemp^0,w,c
 13942  01853C  E134               	bnz	l16739
 13943  01853E  0EF9               	movlw	-7
 13944  018540  50E3               	movf	plusw1,w,c
 13945  018542  A4D8               	btfss	status,2,c
 13946  018544  D030               	goto	l16739
 13947                           
 13948                           ;stkvar	_is_leap @ sp[(-22)+12]
 13949  018546  0EF6               	movlw	-10
 13950  018548  006F FF8F FFE6     	movff	plusw1,postinc1
 13951  01854E  006F FF8F FFE6     	movff	plusw1,postinc1
 13952                           
 13953                           ;stkvar	_m @ sp[(-24)+18]
 13954  018554  0EFA               	movlw	-6
 13955  018556  006F FF8F FFE6     	movff	plusw1,postinc1
 13956  01855C  006F FF8F FFE6     	movff	plusw1,postinc1
 13957  018562  EC11  F00E         	call	_days_in_month	;wreg free
 13958                           
 13959                           ;stkvar	_days @ sp[(-22)+0]
 13960  018566  0EEA               	movlw	-22
 13961  018568  50E3               	movf	plusw1,w,c
 13962  01856A  0F1C               	addlw	28
 13963  01856C  6E34               	movwf	(btemp+10)^0,c
 13964  01856E  0EEB               	movlw	-21
 13965  018570  006F FF8C  F035    	movff	plusw1,btemp+11
 13966  018576  0E00               	movlw	0
 13967  018578  2235               	addwfc	(btemp+11)^0,f,c
 13968  01857A  502A               	movf	btemp^0,w,c
 13969  01857C  5C34               	subwf	(btemp+10)^0,w,c
 13970  01857E  5035               	movf	(btemp+11)^0,w,c
 13971  018580  0A80               	xorlw	128
 13972  018582  6E2C               	movwf	(btemp+2)^0,c
 13973  018584  502B               	movf	(btemp+1)^0,w,c
 13974  018586  0A80               	xorlw	128
 13975  018588  582C               	subwfb	(btemp+2)^0,w,c
 13976  01858A  A0D8               	btfss	status,0,c
 13977  01858C  D00C               	goto	l16739
 13978  01858E  0E04               	movlw	4
 13979  018590  6E34               	movwf	(btemp+10)^0,c
 13980  018592  0E00               	movlw	0
 13981  018594  6E35               	movwf	(btemp+11)^0,c
 13982                           
 13983                           ;stkvar	_n @ sp[(-22)+14]
 13984  018596  0EF8               	movlw	-8
 13985  018598  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13986  01859E  0EF9               	movlw	-7
 13987  0185A0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13988  0185A6                     l16739:
 13989  0185A6  0E80               	movlw	128
 13990  0185A8  6EE6               	movwf	postinc1,c
 13991  0185AA  0E51               	movlw	81
 13992  0185AC  6EE6               	movwf	postinc1,c
 13993  0185AE  0E01               	movlw	1
 13994  0185B0  6EE6               	movwf	postinc1,c
 13995  0185B2  0E00               	movlw	0
 13996  0185B4  6EE6               	movwf	postinc1,c
 13997                           
 13998                           ;stkvar	_days @ sp[(-26)+0]
 13999                           ;stkvar	_n @ sp[(-26)+14]
 14000  0185B6  0EF4               	movlw	-12
 14001  0185B8  006F FF8C  F034    	movff	plusw1,btemp+10
 14002  0185BE  0EF5               	movlw	-11
 14003  0185C0  006F FF8C  F035    	movff	plusw1,btemp+11
 14004  0185C6  0E07               	movlw	7
 14005  0185C8  0234               	mulwf	(btemp+10)^0,c
 14006  0185CA  006F FFCC  F032    	movff	prodl,btemp+8
 14007  0185D0  006F FFD0  F033    	movff	prodh,btemp+9
 14008  0185D6  0235               	mulwf	(btemp+11)^0,c
 14009  0185D8  50F3               	movf	prodl,w,c
 14010  0185DA  2633               	addwf	(btemp+9)^0,f,c
 14011  0185DC  0EE6               	movlw	-26
 14012  0185DE  50E3               	movf	plusw1,w,c
 14013  0185E0  2632               	addwf	(btemp+8)^0,f,c
 14014  0185E2  0EE7               	movlw	-25
 14015  0185E4  50E3               	movf	plusw1,w,c
 14016  0185E6  2233               	addwfc	(btemp+9)^0,f,c
 14017  0185E8  0EF9               	movlw	249
 14018  0185EA  2432               	addwf	(btemp+8)^0,w,c
 14019  0185EC  6E2E               	movwf	(btemp+4)^0,c
 14020  0185EE  0EFF               	movlw	255
 14021  0185F0  2033               	addwfc	(btemp+9)^0,w,c
 14022  0185F2  6E2F               	movwf	(btemp+5)^0,c
 14023  0185F4  6A30               	clrf	(btemp+6)^0,c
 14024  0185F6  BE2F               	btfsc	(btemp+5)^0,7,c
 14025  0185F8  0630               	decf	(btemp+6)^0,f,c
 14026  0185FA  5030               	movf	(btemp+6)^0,w,c
 14027  0185FC  6E31               	movwf	(btemp+7)^0,c
 14028  0185FE  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14029  018604  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14030  01860A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14031  018610  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14032  018616  EC31  F003         	call	___lmul	;wreg free
 14033  01861A                     L10:
 14034  01861A  0060  F0A8  F03A   	movff	btemp,btemp+16
 14035  018620  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 14036  018626  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 14037  01862C  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 14038  018632  6A3E               	clrf	(btemp+20)^0,c
 14039  018634  BE3D               	btfsc	(btemp+19)^0,7,c
 14040  018636  683E               	setf	(btemp+20)^0,c
 14041  018638  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14042  01863E  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14043  018644  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14044                           
 14045                           ;stkvar	_t @ sp[(-22)+4]
 14046  01864A  50E1               	movf	fsr1l,w,c
 14047  01864C  0FEE               	addlw	-18
 14048  01864E  6ED9               	movwf	fsr2l,c
 14049  018650  50E2               	movf	fsr1h,w,c
 14050  018652  6EDA               	movwf	fsr2h,c
 14051  018654  0EFF               	movlw	255
 14052  018656  22DA               	addwfc	fsr2h,f,c
 14053  018658  503A               	movf	(btemp+16)^0,w,c
 14054  01865A  26DE               	addwf	postinc2,f,c
 14055  01865C  503B               	movf	(btemp+17)^0,w,c
 14056  01865E  22DE               	addwfc	postinc2,f,c
 14057  018660  503C               	movf	(btemp+18)^0,w,c
 14058  018662  22DE               	addwfc	postinc2,f,c
 14059  018664  503D               	movf	(btemp+19)^0,w,c
 14060  018666  22DE               	addwfc	postinc2,f,c
 14061  018668  503E               	movf	(btemp+20)^0,w,c
 14062  01866A  22DE               	addwfc	postinc2,f,c
 14063  01866C  503F               	movf	(btemp+21)^0,w,c
 14064  01866E  22DE               	addwfc	postinc2,f,c
 14065  018670  5040               	movf	(btemp+22)^0,w,c
 14066  018672  22DE               	addwfc	postinc2,f,c
 14067  018674  5041               	movf	(btemp+23)^0,w,c
 14068  018676  22DE               	addwfc	postinc2,f,c
 14069                           
 14070                           ;stkvar	_rule @ sp[(-22)+-6]
 14071  018678  0EE4               	movlw	-28
 14072  01867A  006F FF8C  F034    	movff	plusw1,btemp+10
 14073  018680  0EE5               	movlw	-27
 14074  018682  006F FF8C  F035    	movff	plusw1,btemp+11
 14075  018688  0E08               	movlw	8
 14076  01868A  2434               	addwf	(btemp+10)^0,w,c
 14077  01868C  6ED9               	movwf	fsr2l,c
 14078  01868E  0E00               	movlw	0
 14079  018690  2035               	addwfc	(btemp+11)^0,w,c
 14080  018692  6EDA               	movwf	fsr2h,c
 14081  018694  006F FF78  F034    	movff	postinc2,btemp+10
 14082  01869A  006F FF74  F035    	movff	postdec2,btemp+11
 14083                           
 14084                           ;stkvar	_t @ sp[(-22)+4]
 14085  0186A0  50E1               	movf	fsr1l,w,c
 14086  0186A2  0FEE               	addlw	-18
 14087  0186A4  6ED9               	movwf	fsr2l,c
 14088  0186A6  50E2               	movf	fsr1h,w,c
 14089  0186A8  6EDA               	movwf	fsr2h,c
 14090  0186AA  0EFF               	movlw	255
 14091  0186AC  22DA               	addwfc	fsr2h,f,c
 14092  0186AE  5034               	movf	(btemp+10)^0,w,c
 14093  0186B0  26DE               	addwf	postinc2,f,c
 14094  0186B2  5035               	movf	(btemp+11)^0,w,c
 14095  0186B4  22DE               	addwfc	postinc2,f,c
 14096  0186B6  0E00               	movlw	0
 14097  0186B8  BE35               	btfsc	(btemp+11)^0,7,c
 14098  0186BA  0EFF               	movlw	255
 14099  0186BC  22DE               	addwfc	postinc2,f,c
 14100  0186BE  22DE               	addwfc	postinc2,f,c
 14101  0186C0  22DE               	addwfc	postinc2,f,c
 14102  0186C2  22DE               	addwfc	postinc2,f,c
 14103  0186C4  22DE               	addwfc	postinc2,f,c
 14104  0186C6  22DE               	addwfc	postinc2,f,c
 14105                           
 14106                           ;stkvar	_t @ sp[(-22)+4]
 14107  0186C8  0EEE               	movlw	238
 14108  0186CA  24E1               	addwf	fsr1l,w,c
 14109  0186CC  6ED9               	movwf	fsr2l,c
 14110  0186CE  0EFF               	movlw	255
 14111  0186D0  20E2               	addwfc	fsr1h,w,c
 14112  0186D2  6EDA               	movwf	fsr2h,c
 14113                           
 14114                           ;stkvar	?_rule_to_secs @ sp[(-22)+-8]
 14115  0186D4  0E08               	movlw	8
 14116  0186D6  6E2A               	movwf	btemp^0,c
 14117  0186D8  0EE2               	movlw	-30
 14118  0186DA                     us1628999:
 14119  0186DA  006F FF7B FFE3     	movff	postinc2,plusw1
 14120  0186E0  28E8               	incf	wreg,w,c
 14121  0186E2  2E2A               	decfsz	btemp^0,f,c
 14122  0186E4  D7FA               	bra	us1628999
 14123                           
 14124                           ; _rule_to_secs: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 14125  0186E6  0EEA               	movlw	234
 14126  0186E8  26E1               	addwf	fsr1l,f,c
 14127  0186EA  0EFF               	movlw	255
 14128  0186EC  22E2               	addwfc	fsr1h,f,c
 14129  0186EE  0012               	return		;funcret
 14130  0186F0                     __end_of_rule_to_secs:
 14131                           	opt callstack 0
 14132                           
 14133 ;; *************** function _days_in_month *****************
 14134 ;; Defined at:
 14135 ;;		line 210 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14136 ;; Parameters:    Size  Location     Type
 14137 ;;  m               2  [STACK] int 
 14138 ;;  is_leap         2  [STACK] int 
 14139 ;; Auto vars:     Size  Location     Type
 14140 ;;		None
 14141 ;; Return value:  Size  Location     Type
 14142 ;;                  2  [STACK] int 
 14143 ;; Registers used:
 14144 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14145 ;; Tracked objects:
 14146 ;;		On entry : 0/0
 14147 ;;		On exit  : 0/0
 14148 ;;		Unchanged: 0/0
 14149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14154 ;;Total ram usage:        0 bytes
 14155 ;; Hardware stack levels used:    1
 14156 ;; Hardware stack levels required when called:   15
 14157 ;; This function calls:
 14158 ;;		Nothing
 14159 ;; This function is called by:
 14160 ;;		_rule_to_secs
 14161 ;; This function uses a reentrant model
 14162 ;;
 14163                           
 14164                           	psect	text41
 14165  001C22                     __ptext41:
 14166                           	opt callstack 0
 14167  001C22                     _days_in_month:
 14168                           	opt callstack 11
 14169                           
 14170                           ;stkvar	_m @ sp[(0)+-2]
 14171                           
 14172                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14173                           ;incstack = 0
 14174  001C22  0EFE               	movlw	-2
 14175  001C24  006F FF8C  F02A    	movff	plusw1,btemp
 14176  001C2A  0E02               	movlw	2
 14177  001C2C  182A               	xorwf	btemp^0,w,c
 14178  001C2E  E10D               	bnz	l11719
 14179  001C30  0EFF               	movlw	-1
 14180  001C32  50E3               	movf	plusw1,w,c
 14181  001C34  A4D8               	btfss	status,2,c
 14182  001C36  D009               	goto	l11719
 14183                           
 14184                           ;stkvar	_is_leap @ sp[(0)+-4]
 14185  001C38  0EFC               	movlw	-4
 14186  001C3A  50E3               	movf	plusw1,w,c
 14187  001C3C  0F1C               	addlw	28
 14188  001C3E  6E2A               	movwf	btemp^0,c
 14189  001C40  0EFD               	movlw	-3
 14190  001C42  006F FF8C  F02B    	movff	plusw1,btemp+1
 14191  001C48  D017               	goto	L11
 14192  001C4A                     l11719:
 14193  001C4A  0EFF               	movlw	255
 14194  001C4C  6E35               	movwf	(btemp+11)^0,c
 14195                           
 14196                           ;stkvar	_m @ sp[(0)+-2]
 14197  001C4E  0EFE               	movlw	-2
 14198  001C50  50E3               	movf	plusw1,w,c
 14199  001C52  2435               	addwf	(btemp+11)^0,w,c
 14200  001C54  6E34               	movwf	(btemp+10)^0,c
 14201  001C56  0ED5               	movlw	213
 14202  001C58  6E2A               	movwf	btemp^0,c
 14203  001C5A  0E0A               	movlw	10
 14204  001C5C  6E2B               	movwf	(btemp+1)^0,c
 14205  001C5E  2A34               	incf	(btemp+10)^0,f,c
 14206  001C60  D003               	goto	u10794
 14207  001C62                     u10795:
 14208  001C62  342B               	rlcf	(btemp+1)^0,w,c
 14209  001C64  322B               	rrcf	(btemp+1)^0,f,c
 14210  001C66  322A               	rrcf	btemp^0,f,c
 14211  001C68                     u10794:
 14212  001C68  2E34               	decfsz	(btemp+10)^0,f,c
 14213  001C6A  D7FB               	goto	u10795
 14214  001C6C  0E01               	movlw	1
 14215  001C6E  162A               	andwf	btemp^0,f,c
 14216  001C70  0E00               	movlw	0
 14217  001C72  162B               	andwf	(btemp+1)^0,f,c
 14218  001C74  0E1E               	movlw	30
 14219  001C76  262A               	addwf	btemp^0,f,c
 14220  001C78                     L11:
 14221  001C78  0E00               	movlw	0
 14222  001C7A  222B               	addwfc	(btemp+1)^0,f,c
 14223                           
 14224                           ; _days_in_month: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14225  001C7C  52E5               	movf	postdec1,f,c
 14226  001C7E  52E5               	movf	postdec1,f,c
 14227  001C80  52E5               	movf	postdec1,f,c
 14228  001C82  52E5               	movf	postdec1,f,c
 14229  001C84  0012               	return		;funcret
 14230  001C86                     __end_of_days_in_month:
 14231                           	opt callstack 0
 14232                           
 14233 ;; *************** function ___year_to_secs *****************
 14234 ;; Defined at:
 14235 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__year_to_secs.c"
 14236 ;; Parameters:    Size  Location     Type
 14237 ;;  year            8  [STACK] long long 
 14238 ;;  is_leap         2  [STACK] PTR int 
 14239 ;;		 -> F5(2), is_leap(2), NULL(0), 
 14240 ;; Auto vars:     Size  Location     Type
 14241 ;;  y               2  [STACK] int 
 14242 ;;  leaps           2  [STACK] int 
 14243 ;;  rem             2  [STACK] int 
 14244 ;;  5               2  [STACK] int 
 14245 ;;  centuries       2  [STACK] int 
 14246 ;;  leaps           2  [STACK] int 
 14247 ;;  cycles          2  [STACK] int 
 14248 ;; Return value:  Size  Location     Type
 14249 ;;                  8  [STACK] long long 
 14250 ;; Registers used:
 14251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, prodl, prodh
 14252 ;; Tracked objects:
 14253 ;;		On entry : 0/0
 14254 ;;		On exit  : 0/0
 14255 ;;		Unchanged: 0/0
 14256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14261 ;;Total ram usage:        0 bytes
 14262 ;; Hardware stack levels used:    1
 14263 ;; Hardware stack levels required when called:   16
 14264 ;; This function calls:
 14265 ;;		___aodiv
 14266 ;;		___aomod
 14267 ;;		___lmul
 14268 ;;		___omul
 14269 ;; This function is called by:
 14270 ;;		_rule_to_secs
 14271 ;;		___secs_to_zone
 14272 ;; This function uses a reentrant model
 14273 ;;
 14274                           
 14275                           	psect	text42
 14276  015E3A                     __ptext42:
 14277                           	opt callstack 0
 14278  015E3A                     ___year_to_secs:
 14279                           	opt callstack 0
 14280                           
 14281                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 14282  015E3A  0E0E               	movlw	14
 14283  015E3C  26E1               	addwf	fsr1l,f,c
 14284  015E3E  0E00               	movlw	0
 14285  015E40  22E2               	addwfc	fsr1h,f,c
 14286                           
 14287                           ;stkvar	_year @ sp[(-14)+-8]
 14288                           
 14289                           ;incstack = 0
 14290  015E42  0EEA               	movlw	-22
 14291  015E44  50E3               	movf	plusw1,w,c
 14292  015E46  0FFE               	addlw	254
 14293  015E48  6E3A               	movwf	(btemp+16)^0,c
 14294  015E4A  0EEB               	movlw	-21
 14295  015E4C  006F FF8C  F03B    	movff	plusw1,btemp+17
 14296  015E52  0EFF               	movlw	255
 14297  015E54  223B               	addwfc	(btemp+17)^0,f,c
 14298  015E56  0EEC               	movlw	-20
 14299  015E58  006F FF8C  F03C    	movff	plusw1,btemp+18
 14300  015E5E  0EFF               	movlw	255
 14301  015E60  223C               	addwfc	(btemp+18)^0,f,c
 14302  015E62  0EED               	movlw	-19
 14303  015E64  006F FF8C  F03D    	movff	plusw1,btemp+19
 14304  015E6A  0EFF               	movlw	255
 14305  015E6C  223D               	addwfc	(btemp+19)^0,f,c
 14306  015E6E  0EEE               	movlw	-18
 14307  015E70  006F FF8C  F03E    	movff	plusw1,btemp+20
 14308  015E76  0EFF               	movlw	255
 14309  015E78  223E               	addwfc	(btemp+20)^0,f,c
 14310  015E7A  0EEF               	movlw	-17
 14311  015E7C  006F FF8C  F03F    	movff	plusw1,btemp+21
 14312  015E82  0EFF               	movlw	255
 14313  015E84  223F               	addwfc	(btemp+21)^0,f,c
 14314  015E86  0EF0               	movlw	-16
 14315  015E88  006F FF8C  F040    	movff	plusw1,btemp+22
 14316  015E8E  0EFF               	movlw	255
 14317  015E90  2240               	addwfc	(btemp+22)^0,f,c
 14318  015E92  0EF1               	movlw	-15
 14319  015E94  006F FF8C  F041    	movff	plusw1,btemp+23
 14320  015E9A  0EFF               	movlw	255
 14321  015E9C  2241               	addwfc	(btemp+23)^0,f,c
 14322  015E9E  5041               	movf	(btemp+23)^0,w,c
 14323  015EA0  1040               	iorwf	(btemp+22)^0,w,c
 14324  015EA2  103F               	iorwf	(btemp+21)^0,w,c
 14325  015EA4  103E               	iorwf	(btemp+20)^0,w,c
 14326  015EA6  103D               	iorwf	(btemp+19)^0,w,c
 14327  015EA8  103C               	iorwf	(btemp+18)^0,w,c
 14328  015EAA  103B               	iorwf	(btemp+17)^0,w,c
 14329  015EAC  E103               	bnz	u10801
 14330  015EAE  0E89               	movlw	137
 14331  015EB0  5C3A               	subwf	(btemp+16)^0,w,c
 14332  015EB2  B0D8               	btfsc	status,0,c
 14333  015EB4                     u10801:
 14334  015EB4  D0E7               	goto	l11745
 14335                           
 14336                           ;stkvar	_year @ sp[(-14)+-8]
 14337                           ;stkvar	_y @ sp[(-14)+0]
 14338  015EB6  0EEA               	movlw	-22
 14339  015EB8  006F FF8C  F02A    	movff	plusw1,btemp
 14340  015EBE  0EF2               	movlw	-14
 14341  015EC0  0060  F0AB  FFE3   	movff	btemp,plusw1
 14342  015EC6  0EEB               	movlw	-21
 14343  015EC8  006F FF8C  F02A    	movff	plusw1,btemp
 14344  015ECE  0EF3               	movlw	-13
 14345  015ED0  0060  F0AB  FFE3   	movff	btemp,plusw1
 14346                           
 14347                           ;stkvar	_y @ sp[(-14)+0]
 14348  015ED6  0EF2               	movlw	-14
 14349  015ED8  50E3               	movf	plusw1,w,c
 14350  015EDA  0FBC               	addlw	188
 14351  015EDC  6E34               	movwf	(btemp+10)^0,c
 14352  015EDE  0EF3               	movlw	-13
 14353  015EE0  006F FF8C  F035    	movff	plusw1,btemp+11
 14354  015EE6  0EFF               	movlw	255
 14355  015EE8  2235               	addwfc	(btemp+11)^0,f,c
 14356  015EEA  3435               	rlcf	(btemp+11)^0,w,c
 14357  015EEC  3235               	rrcf	(btemp+11)^0,f,c
 14358  015EEE  3234               	rrcf	(btemp+10)^0,f,c
 14359  015EF0  3435               	rlcf	(btemp+11)^0,w,c
 14360  015EF2  3235               	rrcf	(btemp+11)^0,f,c
 14361  015EF4  3234               	rrcf	(btemp+10)^0,f,c
 14362                           
 14363                           ;stkvar	_leaps @ sp[(-14)+2]
 14364  015EF6  0EF4               	movlw	-12
 14365  015EF8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14366  015EFE  0EF5               	movlw	-11
 14367  015F00  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14368  015F06  0EBC               	movlw	188
 14369  015F08  6E35               	movwf	(btemp+11)^0,c
 14370                           
 14371                           ;stkvar	_y @ sp[(-14)+0]
 14372  015F0A  0EF2               	movlw	-14
 14373  015F0C  50E3               	movf	plusw1,w,c
 14374  015F0E  2435               	addwf	(btemp+11)^0,w,c
 14375  015F10  6E34               	movwf	(btemp+10)^0,c
 14376  015F12  0E03               	movlw	3
 14377  015F14  1634               	andwf	(btemp+10)^0,f,c
 14378  015F16  A4D8               	btfss	status,2,c
 14379  015F18  D01D               	goto	l11737
 14380                           
 14381                           ;stkvar	_leaps @ sp[(-14)+2]
 14382  015F1A  50E1               	movf	fsr1l,w,c
 14383  015F1C  0FF4               	addlw	-12
 14384  015F1E  6ED9               	movwf	fsr2l,c
 14385  015F20  50E2               	movf	fsr1h,w,c
 14386  015F22  6EDA               	movwf	fsr2h,c
 14387  015F24  0EFF               	movlw	255
 14388  015F26  22DA               	addwfc	fsr2h,f,c
 14389  015F28  06DE               	decf	postinc2,f,c
 14390  015F2A  0E00               	movlw	0
 14391  015F2C  5ADD               	subwfb	postdec2,f,c
 14392                           
 14393                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14394  015F2E  0EE8               	movlw	-24
 14395  015F30  006F FF8C  F02A    	movff	plusw1,btemp
 14396  015F36  0EE9               	movlw	-23
 14397  015F38  50E3               	movf	plusw1,w,c
 14398  015F3A  102A               	iorwf	btemp^0,w,c
 14399  015F3C  B4D8               	btfsc	status,2,c
 14400  015F3E  D01F               	goto	l11741
 14401                           
 14402                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14403  015F40  0EE8               	movlw	-24
 14404  015F42  006F FF8F FFD9     	movff	plusw1,fsr2l
 14405  015F48  0EE9               	movlw	-23
 14406  015F4A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14407  015F50  0E01               	movlw	1
 14408  015F52  D012               	goto	L12
 14409  015F54                     l11737:
 14410                           
 14411                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14412  015F54  0EE8               	movlw	-24
 14413  015F56  006F FF8C  F02A    	movff	plusw1,btemp
 14414  015F5C  0EE9               	movlw	-23
 14415  015F5E  50E3               	movf	plusw1,w,c
 14416  015F60  102A               	iorwf	btemp^0,w,c
 14417  015F62  B4D8               	btfsc	status,2,c
 14418  015F64  D00C               	goto	l11741
 14419                           
 14420                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14421  015F66  0EE8               	movlw	-24
 14422  015F68  006F FF8F FFD9     	movff	plusw1,fsr2l
 14423  015F6E  0EE9               	movlw	-23
 14424  015F70  006F FF8F FFDA     	movff	plusw1,fsr2h
 14425  015F76  0E00               	movlw	0
 14426  015F78                     L12:
 14427  015F78  6EDE               	movwf	postinc2,c
 14428  015F7A  0E00               	movlw	0
 14429  015F7C  6EDD               	movwf	postdec2,c
 14430  015F7E                     l11741:
 14431  015F7E  0E80               	movlw	128
 14432  015F80  6EE6               	movwf	postinc1,c
 14433  015F82  0E33               	movlw	51
 14434  015F84  6EE6               	movwf	postinc1,c
 14435  015F86  0EE1               	movlw	225
 14436  015F88  6EE6               	movwf	postinc1,c
 14437  015F8A  0E01               	movlw	1
 14438  015F8C  6EE6               	movwf	postinc1,c
 14439                           
 14440                           ;stkvar	_y @ sp[(-18)+0]
 14441  015F8E  0EEE               	movlw	-18
 14442  015F90  006F FF8C  F034    	movff	plusw1,btemp+10
 14443  015F96  0EEF               	movlw	-17
 14444  015F98  006F FF8C  F035    	movff	plusw1,btemp+11
 14445  015F9E  0EBA               	movlw	186
 14446  015FA0  2434               	addwf	(btemp+10)^0,w,c
 14447  015FA2  6E2E               	movwf	(btemp+4)^0,c
 14448  015FA4  0EFF               	movlw	255
 14449  015FA6  2035               	addwfc	(btemp+11)^0,w,c
 14450  015FA8  6E2F               	movwf	(btemp+5)^0,c
 14451  015FAA  6A30               	clrf	(btemp+6)^0,c
 14452  015FAC  BE2F               	btfsc	(btemp+5)^0,7,c
 14453  015FAE  0630               	decf	(btemp+6)^0,f,c
 14454  015FB0  5030               	movf	(btemp+6)^0,w,c
 14455  015FB2  6E31               	movwf	(btemp+7)^0,c
 14456  015FB4  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14457  015FBA  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14458  015FC0  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14459  015FC6  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14460  015FCC  EC31  F003         	call	___lmul	;wreg free
 14461  015FD0  0060  F0A8  F032   	movff	btemp,btemp+8
 14462  015FD6  0060  F0AC  F033   	movff	btemp+1,btemp+9
 14463  015FDC  0060  F0B0  F034   	movff	btemp+2,btemp+10
 14464  015FE2  0060  F0B4  F035   	movff	btemp+3,btemp+11
 14465  015FE8  0E80               	movlw	128
 14466  015FEA  6EE6               	movwf	postinc1,c
 14467  015FEC  0E51               	movlw	81
 14468  015FEE  6EE6               	movwf	postinc1,c
 14469  015FF0  0E01               	movlw	1
 14470  015FF2  6EE6               	movwf	postinc1,c
 14471  015FF4  0E00               	movlw	0
 14472  015FF6  6EE6               	movwf	postinc1,c
 14473                           
 14474                           ;stkvar	_leaps @ sp[(-18)+2]
 14475  015FF8  0EF0               	movlw	-16
 14476  015FFA  006F FF8C  F030    	movff	plusw1,btemp+6
 14477  016000  0EF1               	movlw	-15
 14478  016002  006F FF8C  F031    	movff	plusw1,btemp+7
 14479  016008  0060  F0C0  F02A   	movff	btemp+6,btemp
 14480  01600E  0060  F0C4  F02B   	movff	btemp+7,btemp+1
 14481  016014  0E00               	movlw	0
 14482  016016  BE2B               	btfsc	(btemp+1)^0,7,c
 14483  016018  0EFF               	movlw	255
 14484  01601A  6E2C               	movwf	(btemp+2)^0,c
 14485  01601C  6E2D               	movwf	(btemp+3)^0,c
 14486  01601E  0060  F0AB  FFE6   	movff	btemp,postinc1
 14487  016024  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14488  01602A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 14489  016030  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 14490  016036  EC31  F003         	call	___lmul	;wreg free
 14491  01603A  502A               	movf	btemp^0,w,c
 14492  01603C  2432               	addwf	(btemp+8)^0,w,c
 14493  01603E  6E2E               	movwf	(btemp+4)^0,c
 14494  016040  502B               	movf	(btemp+1)^0,w,c
 14495  016042  2033               	addwfc	(btemp+9)^0,w,c
 14496  016044  6E2F               	movwf	(btemp+5)^0,c
 14497  016046  502C               	movf	(btemp+2)^0,w,c
 14498  016048  2034               	addwfc	(btemp+10)^0,w,c
 14499  01604A  6E30               	movwf	(btemp+6)^0,c
 14500  01604C  502D               	movf	(btemp+3)^0,w,c
 14501  01604E  2035               	addwfc	(btemp+11)^0,w,c
 14502  016050  6E31               	movwf	(btemp+7)^0,c
 14503  016052  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 14504  016058  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 14505  01605E  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 14506  016064  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 14507  01606A  6A3E               	clrf	(btemp+20)^0,c
 14508  01606C  BE3D               	btfsc	(btemp+19)^0,7,c
 14509  01606E  683E               	setf	(btemp+20)^0,c
 14510  016070  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14511  016076  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14512  01607C  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14513  016082  D36F               	goto	L13
 14514  016084                     l11745:
 14515                           
 14516                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14517  016084  0EE8               	movlw	-24
 14518  016086  006F FF8C  F02A    	movff	plusw1,btemp
 14519  01608C  0EE9               	movlw	-23
 14520  01608E  50E3               	movf	plusw1,w,c
 14521  016090  102A               	iorwf	btemp^0,w,c
 14522  016092  A4D8               	btfss	status,2,c
 14523  016094  D012               	goto	l11751
 14524                           
 14525                           ;stkvar	F5 @ sp[(-14)+6]
 14526  016096  0EF8               	movlw	-8
 14527  016098  6AE3               	clrf	plusw1,c
 14528  01609A  0EF9               	movlw	-7
 14529  01609C  6AE3               	clrf	plusw1,c
 14530                           
 14531                           ;stkvar	F5 @ sp[(-14)+6]
 14532  01609E  0EF8               	movlw	248
 14533  0160A0  24E1               	addwf	fsr1l,w,c
 14534  0160A2  6E34               	movwf	(btemp+10)^0,c
 14535  0160A4  0EFF               	movlw	255
 14536  0160A6  20E2               	addwfc	fsr1h,w,c
 14537  0160A8  6E35               	movwf	(btemp+11)^0,c
 14538                           
 14539                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14540  0160AA  0EE9               	movlw	-23
 14541  0160AC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14542  0160B2  0EE8               	movlw	-24
 14543  0160B4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14544  0160BA                     l11751:
 14545  0160BA  0E90               	movlw	144
 14546  0160BC  6EE6               	movwf	postinc1,c
 14547  0160BE  0E01               	movlw	1
 14548  0160C0  6EE6               	movwf	postinc1,c
 14549  0160C2  0E00               	movlw	0
 14550  0160C4  6EE6               	movwf	postinc1,c
 14551  0160C6  0E00               	movlw	0
 14552  0160C8  6EE6               	movwf	postinc1,c
 14553  0160CA  0E00               	movlw	0
 14554  0160CC  6EE6               	movwf	postinc1,c
 14555  0160CE  0E00               	movlw	0
 14556  0160D0  6EE6               	movwf	postinc1,c
 14557  0160D2  0E00               	movlw	0
 14558  0160D4  6EE6               	movwf	postinc1,c
 14559  0160D6  0E00               	movlw	0
 14560  0160D8  6EE6               	movwf	postinc1,c
 14561                           
 14562                           ;stkvar	_year @ sp[(-22)+-8]
 14563  0160DA  0EE2               	movlw	-30
 14564  0160DC  50E3               	movf	plusw1,w,c
 14565  0160DE  0F9C               	addlw	156
 14566  0160E0  6E3A               	movwf	(btemp+16)^0,c
 14567  0160E2  0EE3               	movlw	-29
 14568  0160E4  006F FF8C  F03B    	movff	plusw1,btemp+17
 14569  0160EA  0EFF               	movlw	255
 14570  0160EC  223B               	addwfc	(btemp+17)^0,f,c
 14571  0160EE  0EE4               	movlw	-28
 14572  0160F0  006F FF8C  F03C    	movff	plusw1,btemp+18
 14573  0160F6  0EFF               	movlw	255
 14574  0160F8  223C               	addwfc	(btemp+18)^0,f,c
 14575  0160FA  0EE5               	movlw	-27
 14576  0160FC  006F FF8C  F03D    	movff	plusw1,btemp+19
 14577  016102  0EFF               	movlw	255
 14578  016104  223D               	addwfc	(btemp+19)^0,f,c
 14579  016106  0EE6               	movlw	-26
 14580  016108  006F FF8C  F03E    	movff	plusw1,btemp+20
 14581  01610E  0EFF               	movlw	255
 14582  016110  223E               	addwfc	(btemp+20)^0,f,c
 14583  016112  0EE7               	movlw	-25
 14584  016114  006F FF8C  F03F    	movff	plusw1,btemp+21
 14585  01611A  0EFF               	movlw	255
 14586  01611C  223F               	addwfc	(btemp+21)^0,f,c
 14587  01611E  0EE8               	movlw	-24
 14588  016120  006F FF8C  F040    	movff	plusw1,btemp+22
 14589  016126  0EFF               	movlw	255
 14590  016128  2240               	addwfc	(btemp+22)^0,f,c
 14591  01612A  0EE9               	movlw	-23
 14592  01612C  006F FF8C  F041    	movff	plusw1,btemp+23
 14593  016132  0EFF               	movlw	255
 14594  016134  2241               	addwfc	(btemp+23)^0,f,c
 14595  016136  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14596  01613C  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14597  016142  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14598  016148  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14599  01614E  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14600  016154  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14601  01615A  0060  F103  FFE6   	movff	btemp+22,postinc1
 14602  016160  0060  F107  FFE6   	movff	btemp+23,postinc1
 14603  016166  ECC4  F0E1         	call	___aodiv	;wreg free
 14604  01616A  52E5               	movf	postdec1,f,c
 14605  01616C  006F FF9C  F041    	movff	indf1,btemp+23
 14606  016172  52E5               	movf	postdec1,f,c
 14607  016174  006F FF9C  F040    	movff	indf1,btemp+22
 14608  01617A  52E5               	movf	postdec1,f,c
 14609  01617C  006F FF9C  F03F    	movff	indf1,btemp+21
 14610  016182  52E5               	movf	postdec1,f,c
 14611  016184  006F FF9C  F03E    	movff	indf1,btemp+20
 14612  01618A  52E5               	movf	postdec1,f,c
 14613  01618C  006F FF9C  F03D    	movff	indf1,btemp+19
 14614  016192  52E5               	movf	postdec1,f,c
 14615  016194  006F FF9C  F03C    	movff	indf1,btemp+18
 14616  01619A  52E5               	movf	postdec1,f,c
 14617  01619C  006F FF9C  F03B    	movff	indf1,btemp+17
 14618  0161A2  52E5               	movf	postdec1,f,c
 14619  0161A4  006F FF9C  F03A    	movff	indf1,btemp+16
 14620  0161AA  0EF8               	movlw	248
 14621  0161AC  26E1               	addwf	fsr1l,f,c
 14622  0161AE  0EFF               	movlw	255
 14623  0161B0  22E2               	addwfc	fsr1h,f,c
 14624  0161B2  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14625  0161B8  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14626                           
 14627                           ;stkvar	_cycles @ sp[(-14)+12]
 14628  0161BE  0EFE               	movlw	-2
 14629  0161C0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14630  0161C6  0EFF               	movlw	-1
 14631  0161C8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14632  0161CE  0E90               	movlw	144
 14633  0161D0  6EE6               	movwf	postinc1,c
 14634  0161D2  0E01               	movlw	1
 14635  0161D4  6EE6               	movwf	postinc1,c
 14636  0161D6  0E00               	movlw	0
 14637  0161D8  6EE6               	movwf	postinc1,c
 14638  0161DA  0E00               	movlw	0
 14639  0161DC  6EE6               	movwf	postinc1,c
 14640  0161DE  0E00               	movlw	0
 14641  0161E0  6EE6               	movwf	postinc1,c
 14642  0161E2  0E00               	movlw	0
 14643  0161E4  6EE6               	movwf	postinc1,c
 14644  0161E6  0E00               	movlw	0
 14645  0161E8  6EE6               	movwf	postinc1,c
 14646  0161EA  0E00               	movlw	0
 14647  0161EC  6EE6               	movwf	postinc1,c
 14648                           
 14649                           ;stkvar	_year @ sp[(-22)+-8]
 14650  0161EE  0EE2               	movlw	-30
 14651  0161F0  50E3               	movf	plusw1,w,c
 14652  0161F2  0F9C               	addlw	156
 14653  0161F4  6E3A               	movwf	(btemp+16)^0,c
 14654  0161F6  0EE3               	movlw	-29
 14655  0161F8  006F FF8C  F03B    	movff	plusw1,btemp+17
 14656  0161FE  0EFF               	movlw	255
 14657  016200  223B               	addwfc	(btemp+17)^0,f,c
 14658  016202  0EE4               	movlw	-28
 14659  016204  006F FF8C  F03C    	movff	plusw1,btemp+18
 14660  01620A  0EFF               	movlw	255
 14661  01620C  223C               	addwfc	(btemp+18)^0,f,c
 14662  01620E  0EE5               	movlw	-27
 14663  016210  006F FF8C  F03D    	movff	plusw1,btemp+19
 14664  016216  0EFF               	movlw	255
 14665  016218  223D               	addwfc	(btemp+19)^0,f,c
 14666  01621A  0EE6               	movlw	-26
 14667  01621C  006F FF8C  F03E    	movff	plusw1,btemp+20
 14668  016222  0EFF               	movlw	255
 14669  016224  223E               	addwfc	(btemp+20)^0,f,c
 14670  016226  0EE7               	movlw	-25
 14671  016228  006F FF8C  F03F    	movff	plusw1,btemp+21
 14672  01622E  0EFF               	movlw	255
 14673  016230  223F               	addwfc	(btemp+21)^0,f,c
 14674  016232  0EE8               	movlw	-24
 14675  016234  006F FF8C  F040    	movff	plusw1,btemp+22
 14676  01623A  0EFF               	movlw	255
 14677  01623C  2240               	addwfc	(btemp+22)^0,f,c
 14678  01623E  0EE9               	movlw	-23
 14679  016240  006F FF8C  F041    	movff	plusw1,btemp+23
 14680  016246  0EFF               	movlw	255
 14681  016248  2241               	addwfc	(btemp+23)^0,f,c
 14682  01624A  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14683  016250  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14684  016256  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14685  01625C  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14686  016262  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14687  016268  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14688  01626E  0060  F103  FFE6   	movff	btemp+22,postinc1
 14689  016274  0060  F107  FFE6   	movff	btemp+23,postinc1
 14690  01627A  ECB0  F0E7         	call	___aomod	;wreg free
 14691  01627E  52E5               	movf	postdec1,f,c
 14692  016280  006F FF9C  F041    	movff	indf1,btemp+23
 14693  016286  52E5               	movf	postdec1,f,c
 14694  016288  006F FF9C  F040    	movff	indf1,btemp+22
 14695  01628E  52E5               	movf	postdec1,f,c
 14696  016290  006F FF9C  F03F    	movff	indf1,btemp+21
 14697  016296  52E5               	movf	postdec1,f,c
 14698  016298  006F FF9C  F03E    	movff	indf1,btemp+20
 14699  01629E  52E5               	movf	postdec1,f,c
 14700  0162A0  006F FF9C  F03D    	movff	indf1,btemp+19
 14701  0162A6  52E5               	movf	postdec1,f,c
 14702  0162A8  006F FF9C  F03C    	movff	indf1,btemp+18
 14703  0162AE  52E5               	movf	postdec1,f,c
 14704  0162B0  006F FF9C  F03B    	movff	indf1,btemp+17
 14705  0162B6  52E5               	movf	postdec1,f,c
 14706  0162B8  006F FF9C  F03A    	movff	indf1,btemp+16
 14707  0162BE  0EF8               	movlw	248
 14708  0162C0  26E1               	addwf	fsr1l,f,c
 14709  0162C2  0EFF               	movlw	255
 14710  0162C4  22E2               	addwfc	fsr1h,f,c
 14711  0162C6  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14712  0162CC  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14713                           
 14714                           ;stkvar	_rem @ sp[(-14)+4]
 14715  0162D2  0EF6               	movlw	-10
 14716  0162D4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14717  0162DA  0EF7               	movlw	-9
 14718  0162DC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14719                           
 14720                           ;stkvar	_rem @ sp[(-14)+4]
 14721  0162E2  0EF7               	movlw	-9
 14722  0162E4  AEE3               	btfss	plusw1,7,c
 14723  0162E6  D015               	goto	l11761
 14724                           
 14725                           ;stkvar	_cycles @ sp[(-14)+12]
 14726  0162E8  50E1               	movf	fsr1l,w,c
 14727  0162EA  0FFE               	addlw	-2
 14728  0162EC  6ED9               	movwf	fsr2l,c
 14729  0162EE  50E2               	movf	fsr1h,w,c
 14730  0162F0  6EDA               	movwf	fsr2h,c
 14731  0162F2  0EFF               	movlw	255
 14732  0162F4  22DA               	addwfc	fsr2h,f,c
 14733  0162F6  06DE               	decf	postinc2,f,c
 14734  0162F8  0E00               	movlw	0
 14735  0162FA  5ADD               	subwfb	postdec2,f,c
 14736                           
 14737                           ;stkvar	_rem @ sp[(-14)+4]
 14738  0162FC  50E1               	movf	fsr1l,w,c
 14739  0162FE  0FF6               	addlw	-10
 14740  016300  6ED9               	movwf	fsr2l,c
 14741  016302  50E2               	movf	fsr1h,w,c
 14742  016304  6EDA               	movwf	fsr2h,c
 14743  016306  0EFF               	movlw	255
 14744  016308  22DA               	addwfc	fsr2h,f,c
 14745  01630A  0E90               	movlw	144
 14746  01630C  26DE               	addwf	postinc2,f,c
 14747  01630E  0E01               	movlw	1
 14748  016310  22DD               	addwfc	postdec2,f,c
 14749  016312                     l11761:
 14750                           
 14751                           ;stkvar	_rem @ sp[(-14)+4]
 14752  016312  0EF6               	movlw	-10
 14753  016314  006F FF8C  F02A    	movff	plusw1,btemp
 14754  01631A  0EF7               	movlw	-9
 14755  01631C  50E3               	movf	plusw1,w,c
 14756  01631E  102A               	iorwf	btemp^0,w,c
 14757  016320  A4D8               	btfss	status,2,c
 14758  016322  D015               	goto	l11769
 14759                           
 14760                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14761  016324  0EE8               	movlw	-24
 14762  016326  006F FF8F FFD9     	movff	plusw1,fsr2l
 14763  01632C  0EE9               	movlw	-23
 14764  01632E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14765  016334  0E01               	movlw	1
 14766  016336  6EDE               	movwf	postinc2,c
 14767  016338  0E00               	movlw	0
 14768  01633A  6EDD               	movwf	postdec2,c
 14769                           
 14770                           ;stkvar	_centuries @ sp[(-14)+8]
 14771  01633C  0EFA               	movlw	-6
 14772  01633E  6AE3               	clrf	plusw1,c
 14773  016340  0EFB               	movlw	-5
 14774  016342  6AE3               	clrf	plusw1,c
 14775  016344                     l11767:
 14776                           
 14777                           ;stkvar	_leaps @ sp[(-14)+10]
 14778  016344  0EFC               	movlw	-4
 14779  016346  6AE3               	clrf	plusw1,c
 14780  016348  0EFD               	movlw	-3
 14781  01634A  6AE3               	clrf	plusw1,c
 14782  01634C  D0D6               	goto	l11801
 14783  01634E                     l11769:
 14784                           
 14785                           ;stkvar	_rem @ sp[(-14)+4]
 14786  01634E  0EF7               	movlw	-9
 14787  016350  BEE3               	btfsc	plusw1,7,c
 14788  016352  D04A               	goto	l11781
 14789  016354  0EF7               	movlw	-9
 14790  016356  50E3               	movf	plusw1,w,c
 14791  016358  E108               	bnz	u10870
 14792  01635A  0EF6               	movlw	-10
 14793  01635C  006F FF8C  F02A    	movff	plusw1,btemp
 14794  016362  0EC8               	movlw	200
 14795  016364  5E2A               	subwf	btemp^0,f,c
 14796  016366  A0D8               	btfss	status,0,c
 14797  016368  D03F               	goto	l11781
 14798  01636A                     u10870:
 14799                           
 14800                           ;stkvar	_rem @ sp[(-14)+4]
 14801  01636A  0EF7               	movlw	-9
 14802  01636C  BEE3               	btfsc	plusw1,7,c
 14803  01636E  D025               	goto	l11777
 14804  016370  0EF6               	movlw	-10
 14805  016372  006F FF8C  F02A    	movff	plusw1,btemp
 14806  016378  0E2C               	movlw	44
 14807  01637A  5E2A               	subwf	btemp^0,f,c
 14808  01637C  0EF7               	movlw	-9
 14809  01637E  006F FF8C  F02A    	movff	plusw1,btemp
 14810  016384  0E01               	movlw	1
 14811  016386  5A2A               	subwfb	btemp^0,f,c
 14812  016388  A0D8               	btfss	status,0,c
 14813  01638A  D017               	goto	l11777
 14814  01638C  0E03               	movlw	3
 14815  01638E  6E34               	movwf	(btemp+10)^0,c
 14816  016390  0E00               	movlw	0
 14817  016392  6E35               	movwf	(btemp+11)^0,c
 14818                           
 14819                           ;stkvar	_centuries @ sp[(-14)+8]
 14820  016394  0EFA               	movlw	-6
 14821  016396  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14822  01639C  0EFB               	movlw	-5
 14823  01639E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14824                           
 14825                           ;stkvar	_rem @ sp[(-14)+4]
 14826  0163A4  50E1               	movf	fsr1l,w,c
 14827  0163A6  0FF6               	addlw	-10
 14828  0163A8  6ED9               	movwf	fsr2l,c
 14829  0163AA  50E2               	movf	fsr1h,w,c
 14830  0163AC  6EDA               	movwf	fsr2h,c
 14831  0163AE  0EFF               	movlw	255
 14832  0163B0  22DA               	addwfc	fsr2h,f,c
 14833  0163B2  0ED4               	movlw	212
 14834  0163B4  26DE               	addwf	postinc2,f,c
 14835  0163B6  0EFE               	movlw	254
 14836  0163B8  D015               	goto	L14
 14837  0163BA                     l11777:
 14838  0163BA  0E02               	movlw	2
 14839  0163BC  6E34               	movwf	(btemp+10)^0,c
 14840  0163BE  0E00               	movlw	0
 14841  0163C0  6E35               	movwf	(btemp+11)^0,c
 14842                           
 14843                           ;stkvar	_centuries @ sp[(-14)+8]
 14844  0163C2  0EFA               	movlw	-6
 14845  0163C4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14846  0163CA  0EFB               	movlw	-5
 14847  0163CC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14848                           
 14849                           ;stkvar	_rem @ sp[(-14)+4]
 14850  0163D2  50E1               	movf	fsr1l,w,c
 14851  0163D4  0FF6               	addlw	-10
 14852  0163D6  6ED9               	movwf	fsr2l,c
 14853  0163D8  50E2               	movf	fsr1h,w,c
 14854  0163DA  6EDA               	movwf	fsr2h,c
 14855  0163DC  0EFF               	movlw	255
 14856  0163DE  22DA               	addwfc	fsr2h,f,c
 14857  0163E0  0E38               	movlw	56
 14858  0163E2  D024               	goto	L15
 14859  0163E4                     L14:
 14860  0163E4  22DD               	addwfc	postdec2,f,c
 14861  0163E6  D029               	goto	l11789
 14862  0163E8                     l11781:
 14863                           
 14864                           ;stkvar	_rem @ sp[(-14)+4]
 14865  0163E8  0EF7               	movlw	-9
 14866  0163EA  BEE3               	btfsc	plusw1,7,c
 14867  0163EC  D022               	goto	l11787
 14868  0163EE  0EF7               	movlw	-9
 14869  0163F0  50E3               	movf	plusw1,w,c
 14870  0163F2  E108               	bnz	u10890
 14871  0163F4  0EF6               	movlw	-10
 14872  0163F6  006F FF8C  F02A    	movff	plusw1,btemp
 14873  0163FC  0E64               	movlw	100
 14874  0163FE  5E2A               	subwf	btemp^0,f,c
 14875  016400  A0D8               	btfss	status,0,c
 14876  016402  D017               	goto	l11787
 14877  016404                     u10890:
 14878  016404  0E01               	movlw	1
 14879  016406  6E34               	movwf	(btemp+10)^0,c
 14880  016408  0E00               	movlw	0
 14881  01640A  6E35               	movwf	(btemp+11)^0,c
 14882                           
 14883                           ;stkvar	_centuries @ sp[(-14)+8]
 14884  01640C  0EFA               	movlw	-6
 14885  01640E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14886  016414  0EFB               	movlw	-5
 14887  016416  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14888                           
 14889                           ;stkvar	_rem @ sp[(-14)+4]
 14890  01641C  50E1               	movf	fsr1l,w,c
 14891  01641E  0FF6               	addlw	-10
 14892  016420  6ED9               	movwf	fsr2l,c
 14893  016422  50E2               	movf	fsr1h,w,c
 14894  016424  6EDA               	movwf	fsr2h,c
 14895  016426  0EFF               	movlw	255
 14896  016428  22DA               	addwfc	fsr2h,f,c
 14897  01642A  0E9C               	movlw	156
 14898  01642C                     L15:
 14899  01642C  26DE               	addwf	postinc2,f,c
 14900  01642E  0EFF               	movlw	255
 14901  016430  D7D9               	goto	L14
 14902  016432                     l11787:
 14903                           
 14904                           ;stkvar	_centuries @ sp[(-14)+8]
 14905  016432  0EFA               	movlw	-6
 14906  016434  6AE3               	clrf	plusw1,c
 14907  016436  0EFB               	movlw	-5
 14908  016438  6AE3               	clrf	plusw1,c
 14909  01643A                     l11789:
 14910                           
 14911                           ;stkvar	_rem @ sp[(-14)+4]
 14912  01643A  0EF6               	movlw	-10
 14913  01643C  006F FF8C  F02A    	movff	plusw1,btemp
 14914  016442  0EF7               	movlw	-9
 14915  016444  50E3               	movf	plusw1,w,c
 14916  016446  102A               	iorwf	btemp^0,w,c
 14917  016448  A4D8               	btfss	status,2,c
 14918  01644A  D00D               	goto	l11795
 14919                           
 14920                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14921  01644C  0EE8               	movlw	-24
 14922  01644E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14923  016454  0EE9               	movlw	-23
 14924  016456  006F FF8F FFDA     	movff	plusw1,fsr2h
 14925  01645C  0E00               	movlw	0
 14926  01645E  6EDE               	movwf	postinc2,c
 14927  016460  0E00               	movlw	0
 14928  016462  6EDD               	movwf	postdec2,c
 14929  016464  D76F               	goto	l11767
 14930  016466                     l11795:
 14931                           
 14932                           ;stkvar	_rem @ sp[(-14)+4]
 14933  016466  0EF6               	movlw	-10
 14934  016468  006F FF8C  F034    	movff	plusw1,btemp+10
 14935  01646E  0EF7               	movlw	-9
 14936  016470  006F FF8C  F035    	movff	plusw1,btemp+11
 14937  016476  90D8               	bcf	status,0,c
 14938  016478  3235               	rrcf	(btemp+11)^0,f,c
 14939  01647A  3234               	rrcf	(btemp+10)^0,f,c
 14940  01647C  90D8               	bcf	status,0,c
 14941  01647E  3235               	rrcf	(btemp+11)^0,f,c
 14942  016480  3234               	rrcf	(btemp+10)^0,f,c
 14943                           
 14944                           ;stkvar	_leaps @ sp[(-14)+10]
 14945  016482  0EFC               	movlw	-4
 14946  016484  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14947  01648A  0EFD               	movlw	-3
 14948  01648C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14949  016492  0E03               	movlw	3
 14950  016494  6E34               	movwf	(btemp+10)^0,c
 14951  016496  0E00               	movlw	0
 14952  016498  6E35               	movwf	(btemp+11)^0,c
 14953                           
 14954                           ;stkvar	_rem @ sp[(-14)+4]
 14955  01649A  0EF6               	movlw	-10
 14956  01649C  006F FF8C  F02A    	movff	plusw1,btemp
 14957  0164A2  5034               	movf	(btemp+10)^0,w,c
 14958  0164A4  162A               	andwf	btemp^0,f,c
 14959  0164A6  0EF6               	movlw	-10
 14960  0164A8  0060  F0AB  FFE3   	movff	btemp,plusw1
 14961  0164AE  0EF7               	movlw	-9
 14962  0164B0  006F FF8C  F02A    	movff	plusw1,btemp
 14963  0164B6  5035               	movf	(btemp+11)^0,w,c
 14964  0164B8  162A               	andwf	btemp^0,f,c
 14965  0164BA  0EF7               	movlw	-9
 14966  0164BC  0060  F0AB  FFE3   	movff	btemp,plusw1
 14967                           
 14968                           ;stkvar	_rem @ sp[(-14)+4]
 14969  0164C2  0EF6               	movlw	-10
 14970  0164C4  006F FF8C  F02A    	movff	plusw1,btemp
 14971  0164CA  0EF7               	movlw	-9
 14972  0164CC  50E3               	movf	plusw1,w,c
 14973  0164CE  102A               	iorwf	btemp^0,w,c
 14974  0164D0  A4D8               	btfss	status,2,c
 14975  0164D2  D002               	goto	u10910
 14976  0164D4  0E01               	movlw	1
 14977  0164D6  D001               	goto	u10920
 14978  0164D8                     u10910:
 14979  0164D8  0E00               	movlw	0
 14980  0164DA                     u10920:
 14981  0164DA  6E34               	movwf	(btemp+10)^0,c
 14982  0164DC  6A35               	clrf	(btemp+11)^0,c
 14983                           
 14984                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14985  0164DE  0EE8               	movlw	-24
 14986  0164E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 14987  0164E6  0EE9               	movlw	-23
 14988  0164E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 14989  0164EE  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 14990  0164F4  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 14991  0164FA                     l11801:
 14992                           
 14993                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14994  0164FA  0EE8               	movlw	-24
 14995  0164FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 14996  016502  0EE9               	movlw	-23
 14997  016504  006F FF8F FFDA     	movff	plusw1,fsr2h
 14998  01650A  006F FF78  F034    	movff	postinc2,btemp+10
 14999  016510  006F FF74  F035    	movff	postdec2,btemp+11
 15000                           
 15001                           ;stkvar	_centuries @ sp[(-14)+8]
 15002  016516  0EFA               	movlw	-6
 15003  016518  006F FF8C  F032    	movff	plusw1,btemp+8
 15004  01651E  0EFB               	movlw	-5
 15005  016520  006F FF8C  F033    	movff	plusw1,btemp+9
 15006  016526  0E18               	movlw	24
 15007  016528  0232               	mulwf	(btemp+8)^0,c
 15008  01652A  006F FFCC  F030    	movff	prodl,btemp+6
 15009  016530  006F FFD0  F031    	movff	prodh,btemp+7
 15010  016536  0233               	mulwf	(btemp+9)^0,c
 15011  016538  50F3               	movf	prodl,w,c
 15012  01653A  2631               	addwf	(btemp+7)^0,f,c
 15013                           
 15014                           ;stkvar	_cycles @ sp[(-14)+12]
 15015  01653C  0EFE               	movlw	-2
 15016  01653E  006F FF8C  F032    	movff	plusw1,btemp+8
 15017  016544  0EFF               	movlw	-1
 15018  016546  006F FF8C  F033    	movff	plusw1,btemp+9
 15019  01654C  0E61               	movlw	97
 15020  01654E  0232               	mulwf	(btemp+8)^0,c
 15021  016550  006F FFCC  F02E    	movff	prodl,btemp+4
 15022  016556  006F FFD0  F02F    	movff	prodh,btemp+5
 15023  01655C  0233               	mulwf	(btemp+9)^0,c
 15024  01655E  50F3               	movf	prodl,w,c
 15025  016560  262F               	addwf	(btemp+5)^0,f,c
 15026  016562  5030               	movf	(btemp+6)^0,w,c
 15027  016564  262E               	addwf	(btemp+4)^0,f,c
 15028  016566  5031               	movf	(btemp+7)^0,w,c
 15029  016568  222F               	addwfc	(btemp+5)^0,f,c
 15030  01656A  5034               	movf	(btemp+10)^0,w,c
 15031  01656C  5E2E               	subwf	(btemp+4)^0,f,c
 15032  01656E  5035               	movf	(btemp+11)^0,w,c
 15033  016570  5A2F               	subwfb	(btemp+5)^0,f,c
 15034                           
 15035                           ;stkvar	_leaps @ sp[(-14)+10]
 15036  016572  50E1               	movf	fsr1l,w,c
 15037  016574  0FFC               	addlw	-4
 15038  016576  6ED9               	movwf	fsr2l,c
 15039  016578  50E2               	movf	fsr1h,w,c
 15040  01657A  6EDA               	movwf	fsr2h,c
 15041  01657C  0EFF               	movlw	255
 15042  01657E  22DA               	addwfc	fsr2h,f,c
 15043  016580  502E               	movf	(btemp+4)^0,w,c
 15044  016582  26DE               	addwf	postinc2,f,c
 15045  016584  502F               	movf	(btemp+5)^0,w,c
 15046  016586  22DD               	addwfc	postdec2,f,c
 15047  016588  0E80               	movlw	128
 15048  01658A  6EE6               	movwf	postinc1,c
 15049  01658C  0E51               	movlw	81
 15050  01658E  6EE6               	movwf	postinc1,c
 15051  016590  0E01               	movlw	1
 15052  016592  6EE6               	movwf	postinc1,c
 15053  016594  0E00               	movlw	0
 15054  016596  6EE6               	movwf	postinc1,c
 15055  016598  0E00               	movlw	0
 15056  01659A  6EE6               	movwf	postinc1,c
 15057  01659C  0E00               	movlw	0
 15058  01659E  6EE6               	movwf	postinc1,c
 15059  0165A0  0E00               	movlw	0
 15060  0165A2  6EE6               	movwf	postinc1,c
 15061  0165A4  0E00               	movlw	0
 15062  0165A6  6EE6               	movwf	postinc1,c
 15063                           
 15064                           ;stkvar	_leaps @ sp[(-22)+10]
 15065  0165A8  0EF4               	movlw	-12
 15066  0165AA  006F FF8C  F03A    	movff	plusw1,btemp+16
 15067  0165B0  0EF5               	movlw	-11
 15068  0165B2  006F FF8C  F03B    	movff	plusw1,btemp+17
 15069  0165B8  6A3C               	clrf	(btemp+18)^0,c
 15070  0165BA  BE3B               	btfsc	(btemp+17)^0,7,c
 15071  0165BC  683C               	setf	(btemp+18)^0,c
 15072  0165BE  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 15073  0165C4  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 15074  0165CA  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 15075  0165D0  0060  F0F0  F040   	movff	btemp+18,btemp+22
 15076  0165D6  0060  F0F0  F041   	movff	btemp+18,btemp+23
 15077  0165DC  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 15078  0165E2  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 15079  0165E8  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 15080  0165EE  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 15081  0165F4  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 15082  0165FA  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 15083  016600  0060  F103  FFE6   	movff	btemp+22,postinc1
 15084  016606  0060  F107  FFE6   	movff	btemp+23,postinc1
 15085  01660C  ECBB  F0F8         	call	___omul	;wreg free
 15086  016610  52E5               	movf	postdec1,f,c
 15087  016612  006F FF9C  F041    	movff	indf1,btemp+23
 15088  016618  52E5               	movf	postdec1,f,c
 15089  01661A  006F FF9C  F040    	movff	indf1,btemp+22
 15090  016620  52E5               	movf	postdec1,f,c
 15091  016622  006F FF9C  F03F    	movff	indf1,btemp+21
 15092  016628  52E5               	movf	postdec1,f,c
 15093  01662A  006F FF9C  F03E    	movff	indf1,btemp+20
 15094  016630  52E5               	movf	postdec1,f,c
 15095  016632  006F FF9C  F03D    	movff	indf1,btemp+19
 15096  016638  52E5               	movf	postdec1,f,c
 15097  01663A  006F FF9C  F03C    	movff	indf1,btemp+18
 15098  016640  52E5               	movf	postdec1,f,c
 15099  016642  006F FF9C  F03B    	movff	indf1,btemp+17
 15100  016648  52E5               	movf	postdec1,f,c
 15101  01664A  006F FF9C  F03A    	movff	indf1,btemp+16
 15102  016650  0EF8               	movlw	248
 15103  016652  26E1               	addwf	fsr1l,f,c
 15104  016654  0EFF               	movlw	255
 15105  016656  22E2               	addwfc	fsr1h,f,c
 15106  016658  0E80               	movlw	128
 15107  01665A  6EE6               	movwf	postinc1,c
 15108  01665C  0E33               	movlw	51
 15109  01665E  6EE6               	movwf	postinc1,c
 15110  016660  0EE1               	movlw	225
 15111  016662  6EE6               	movwf	postinc1,c
 15112  016664  0E01               	movlw	1
 15113  016666  6EE6               	movwf	postinc1,c
 15114  016668  0E00               	movlw	0
 15115  01666A  6EE6               	movwf	postinc1,c
 15116  01666C  0E00               	movlw	0
 15117  01666E  6EE6               	movwf	postinc1,c
 15118  016670  0E00               	movlw	0
 15119  016672  6EE6               	movwf	postinc1,c
 15120  016674  0E00               	movlw	0
 15121  016676  6EE6               	movwf	postinc1,c
 15122                           
 15123                           ;stkvar	_year @ sp[(-22)+-8]
 15124  016678  50E1               	movf	fsr1l,w,c
 15125  01667A  0FE2               	addlw	-30
 15126  01667C  6ED9               	movwf	fsr2l,c
 15127  01667E  50E2               	movf	fsr1h,w,c
 15128  016680  6EDA               	movwf	fsr2h,c
 15129  016682  0EFF               	movlw	255
 15130  016684  22DA               	addwfc	fsr2h,f,c
 15131  016686  006F FF7B FFE6     	movff	postinc2,postinc1
 15132  01668C  006F FF7B FFE6     	movff	postinc2,postinc1
 15133  016692  006F FF7B FFE6     	movff	postinc2,postinc1
 15134  016698  006F FF7B FFE6     	movff	postinc2,postinc1
 15135  01669E  006F FF7B FFE6     	movff	postinc2,postinc1
 15136  0166A4  006F FF7B FFE6     	movff	postinc2,postinc1
 15137  0166AA  006F FF7B FFE6     	movff	postinc2,postinc1
 15138  0166B0  006F FF7B FFE6     	movff	postinc2,postinc1
 15139  0166B6  ECBB  F0F8         	call	___omul	;wreg free
 15140  0166BA  52E5               	movf	postdec1,f,c
 15141  0166BC  006F FF9C  F049    	movff	indf1,btemp+31
 15142  0166C2  52E5               	movf	postdec1,f,c
 15143  0166C4  006F FF9C  F048    	movff	indf1,btemp+30
 15144  0166CA  52E5               	movf	postdec1,f,c
 15145  0166CC  006F FF9C  F047    	movff	indf1,btemp+29
 15146  0166D2  52E5               	movf	postdec1,f,c
 15147  0166D4  006F FF9C  F046    	movff	indf1,btemp+28
 15148  0166DA  52E5               	movf	postdec1,f,c
 15149  0166DC  006F FF9C  F045    	movff	indf1,btemp+27
 15150  0166E2  52E5               	movf	postdec1,f,c
 15151  0166E4  006F FF9C  F044    	movff	indf1,btemp+26
 15152  0166EA  52E5               	movf	postdec1,f,c
 15153  0166EC  006F FF9C  F043    	movff	indf1,btemp+25
 15154  0166F2  52E5               	movf	postdec1,f,c
 15155  0166F4  006F FF9C  F042    	movff	indf1,btemp+24
 15156  0166FA  0EF8               	movlw	248
 15157  0166FC  26E1               	addwf	fsr1l,f,c
 15158  0166FE  0EFF               	movlw	255
 15159  016700  22E2               	addwfc	fsr1h,f,c
 15160  016702  503A               	movf	(btemp+16)^0,w,c
 15161  016704  2442               	addwf	(btemp+24)^0,w,c
 15162  016706  6E32               	movwf	(btemp+8)^0,c
 15163  016708  503B               	movf	(btemp+17)^0,w,c
 15164  01670A  2043               	addwfc	(btemp+25)^0,w,c
 15165  01670C  6E33               	movwf	(btemp+9)^0,c
 15166  01670E  503C               	movf	(btemp+18)^0,w,c
 15167  016710  2044               	addwfc	(btemp+26)^0,w,c
 15168  016712  6E34               	movwf	(btemp+10)^0,c
 15169  016714  503D               	movf	(btemp+19)^0,w,c
 15170  016716  2045               	addwfc	(btemp+27)^0,w,c
 15171  016718  6E35               	movwf	(btemp+11)^0,c
 15172  01671A  503E               	movf	(btemp+20)^0,w,c
 15173  01671C  2046               	addwfc	(btemp+28)^0,w,c
 15174  01671E  6E36               	movwf	(btemp+12)^0,c
 15175  016720  503F               	movf	(btemp+21)^0,w,c
 15176  016722  2047               	addwfc	(btemp+29)^0,w,c
 15177  016724  6E37               	movwf	(btemp+13)^0,c
 15178  016726  5040               	movf	(btemp+22)^0,w,c
 15179  016728  2048               	addwfc	(btemp+30)^0,w,c
 15180  01672A  6E38               	movwf	(btemp+14)^0,c
 15181  01672C  5041               	movf	(btemp+23)^0,w,c
 15182  01672E  2049               	addwfc	(btemp+31)^0,w,c
 15183  016730  6E39               	movwf	(btemp+15)^0,c
 15184  016732  0E00               	movlw	0
 15185  016734  2432               	addwf	(btemp+8)^0,w,c
 15186  016736  6E3A               	movwf	(btemp+16)^0,c
 15187  016738  0E77               	movlw	119
 15188  01673A  2033               	addwfc	(btemp+9)^0,w,c
 15189  01673C  6E3B               	movwf	(btemp+17)^0,c
 15190  01673E  0E76               	movlw	118
 15191  016740  2034               	addwfc	(btemp+10)^0,w,c
 15192  016742  6E3C               	movwf	(btemp+18)^0,c
 15193  016744  0E7C               	movlw	124
 15194  016746  2035               	addwfc	(btemp+11)^0,w,c
 15195  016748  6E3D               	movwf	(btemp+19)^0,c
 15196  01674A  0EFF               	movlw	255
 15197  01674C  2036               	addwfc	(btemp+12)^0,w,c
 15198  01674E  6E3E               	movwf	(btemp+20)^0,c
 15199  016750  0EFF               	movlw	255
 15200  016752  2037               	addwfc	(btemp+13)^0,w,c
 15201  016754  6E3F               	movwf	(btemp+21)^0,c
 15202  016756  0EFF               	movlw	255
 15203  016758  2038               	addwfc	(btemp+14)^0,w,c
 15204  01675A  6E40               	movwf	(btemp+22)^0,c
 15205  01675C  0EFF               	movlw	255
 15206  01675E  2039               	addwfc	(btemp+15)^0,w,c
 15207  016760  6E41               	movwf	(btemp+23)^0,c
 15208  016762                     L13:
 15209                           
 15210                           ;stkvar	?___year_to_secs @ sp[(-14)+-8]
 15211  016762  0EEA               	movlw	-22
 15212  016764  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 15213  01676A  0EEB               	movlw	-21
 15214  01676C  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 15215  016772  0EEC               	movlw	-20
 15216  016774  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 15217  01677A  0EED               	movlw	-19
 15218  01677C  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 15219  016782  0EEE               	movlw	-18
 15220  016784  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 15221  01678A  0EEF               	movlw	-17
 15222  01678C  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 15223  016792  0EF0               	movlw	-16
 15224  016794  0060  F103  FFE3   	movff	btemp+22,plusw1
 15225  01679A  0EF1               	movlw	-15
 15226  01679C  0060  F107  FFE3   	movff	btemp+23,plusw1
 15227                           
 15228                           ; ___year_to_secs: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          10, argsize = 10, vargsize = 0
 15229  0167A2  0EF2               	movlw	242
 15230  0167A4  26E1               	addwf	fsr1l,f,c
 15231  0167A6  0EFF               	movlw	255
 15232  0167A8  22E2               	addwfc	fsr1h,f,c
 15233  0167AA  0012               	return		;funcret
 15234  0167AC                     __end_of___year_to_secs:
 15235                           	opt callstack 0
 15236                           
 15237 ;; *************** function ___month_to_secs *****************
 15238 ;; Defined at:
 15239 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__month_to_secs.c"
 15240 ;; Parameters:    Size  Location     Type
 15241 ;;  month           2  [STACK] int 
 15242 ;;  is_leap         2  [STACK] int 
 15243 ;; Auto vars:     Size  Location     Type
 15244 ;;  t               4  [STACK] long 
 15245 ;; Return value:  Size  Location     Type
 15246 ;;                  4  [STACK] long 
 15247 ;; Registers used:
 15248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl
 15249 ;; Tracked objects:
 15250 ;;		On entry : 0/0
 15251 ;;		On exit  : 0/0
 15252 ;;		Unchanged: 0/0
 15253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15258 ;;Total ram usage:        0 bytes
 15259 ;; Hardware stack levels used:    1
 15260 ;; Hardware stack levels required when called:   15
 15261 ;; This function calls:
 15262 ;;		Nothing
 15263 ;; This function is called by:
 15264 ;;		_rule_to_secs
 15265 ;; This function uses a reentrant model
 15266 ;;
 15267                           
 15268                           	psect	text43
 15269  00048C                     __ptext43:
 15270                           	opt callstack 0
 15271  00048C                     ___month_to_secs:
 15272                           	opt callstack 0
 15273                           
 15274                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15275  00048C  52E6               	movf	postinc1,f,c
 15276  00048E  52E6               	movf	postinc1,f,c
 15277  000490  52E6               	movf	postinc1,f,c
 15278  000492  52E6               	movf	postinc1,f,c
 15279                           
 15280                           ;stkvar	_month @ sp[(-4)+-2]
 15281                           
 15282                           ;incstack = 0
 15283  000494  0EFA               	movlw	-6
 15284  000496  006F FF8C  F034    	movff	plusw1,btemp+10
 15285  00049C  0EFB               	movlw	-5
 15286  00049E  006F FF8C  F035    	movff	plusw1,btemp+11
 15287  0004A4  90D8               	bcf	status,0,c
 15288  0004A6  3634               	rlcf	(btemp+10)^0,f,c
 15289  0004A8  3635               	rlcf	(btemp+11)^0,f,c
 15290  0004AA  90D8               	bcf	status,0,c
 15291  0004AC  3634               	rlcf	(btemp+10)^0,f,c
 15292  0004AE  3635               	rlcf	(btemp+11)^0,f,c
 15293  0004B0  0EE7               	movlw	low ___month_to_secs@secs_through_month
 15294  0004B2  2434               	addwf	(btemp+10)^0,w,c
 15295  0004B4  6EF6               	movwf	tblptrl,c
 15296  0004B6  0EF7               	movlw	high ___month_to_secs@secs_through_month
 15297  0004B8  2035               	addwfc	(btemp+11)^0,w,c
 15298  0004BA  6EF7               	movwf	tblptrh,c
 15299  0004BC                     	if	1	;There are 3 active tblptr bytes
 15300  0004BC  6AF8               	clrf	tblptru,c
 15301  0004BE  0E00               	movlw	low (__mediumconst shr (0+16))
 15302  0004C0  22F8               	addwfc	tblptru,f,c
 15303  0004C2                     	endif
 15304  0004C2  0009               	tblrd		*+
 15305  0004C4  006F FFD4  F032    	movff	tablat,btemp+8
 15306  0004CA  0009               	tblrd		*+
 15307  0004CC  006F FFD4  F033    	movff	tablat,btemp+9
 15308  0004D2  0009               	tblrd		*+
 15309  0004D4  006F FFD4  F034    	movff	tablat,btemp+10
 15310  0004DA  0009               	tblrd		*+
 15311  0004DC  006F FFD4  F035    	movff	tablat,btemp+11
 15312                           
 15313                           ;stkvar	_t @ sp[(-4)+0]
 15314  0004E2  0EFC               	movlw	-4
 15315  0004E4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 15316  0004EA  0EFD               	movlw	-3
 15317  0004EC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 15318  0004F2  0EFE               	movlw	-2
 15319  0004F4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15320  0004FA  0EFF               	movlw	-1
 15321  0004FC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15322                           
 15323                           ;stkvar	_is_leap @ sp[(-4)+-4]
 15324  000502  0EF8               	movlw	-8
 15325  000504  006F FF8C  F02A    	movff	plusw1,btemp
 15326  00050A  0EF9               	movlw	-7
 15327  00050C  50E3               	movf	plusw1,w,c
 15328  00050E  102A               	iorwf	btemp^0,w,c
 15329  000510  B4D8               	btfsc	status,2,c
 15330  000512  D01D               	goto	l11815
 15331                           
 15332                           ;stkvar	_month @ sp[(-4)+-2]
 15333  000514  0EFB               	movlw	-5
 15334  000516  BEE3               	btfsc	plusw1,7,c
 15335  000518  D01A               	goto	l11815
 15336  00051A  0EFB               	movlw	-5
 15337  00051C  50E3               	movf	plusw1,w,c
 15338  00051E  E108               	bnz	u10940
 15339  000520  0EFA               	movlw	-6
 15340  000522  006F FF8C  F02A    	movff	plusw1,btemp
 15341  000528  0E02               	movlw	2
 15342  00052A  5E2A               	subwf	btemp^0,f,c
 15343  00052C  A0D8               	btfss	status,0,c
 15344  00052E  D00F               	goto	l11815
 15345  000530                     u10940:
 15346                           
 15347                           ;stkvar	_t @ sp[(-4)+0]
 15348  000530  50E1               	movf	fsr1l,w,c
 15349  000532  0FFC               	addlw	-4
 15350  000534  6ED9               	movwf	fsr2l,c
 15351  000536  50E2               	movf	fsr1h,w,c
 15352  000538  6EDA               	movwf	fsr2h,c
 15353  00053A  0EFF               	movlw	255
 15354  00053C  22DA               	addwfc	fsr2h,f,c
 15355  00053E  0E80               	movlw	128
 15356  000540  26DE               	addwf	postinc2,f,c
 15357  000542  0E51               	movlw	81
 15358  000544  22DE               	addwfc	postinc2,f,c
 15359  000546  0E01               	movlw	1
 15360  000548  22DE               	addwfc	postinc2,f,c
 15361  00054A  0E00               	movlw	0
 15362  00054C  22DE               	addwfc	postinc2,f,c
 15363  00054E                     l11815:
 15364                           
 15365                           ;stkvar	_t @ sp[(-4)+0]
 15366  00054E  0EFC               	movlw	-4
 15367  000550  006F FF8C  F02A    	movff	plusw1,btemp
 15368  000556  0EFD               	movlw	-3
 15369  000558  006F FF8C  F02B    	movff	plusw1,btemp+1
 15370  00055E  0EFE               	movlw	-2
 15371  000560  006F FF8C  F02C    	movff	plusw1,btemp+2
 15372  000566  0EFF               	movlw	-1
 15373  000568  006F FF8C  F02D    	movff	plusw1,btemp+3
 15374                           
 15375                           ; ___month_to_secs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
 15376  00056E  0EF8               	movlw	248
 15377  000570  26E1               	addwf	fsr1l,f,c
 15378  000572  0EFF               	movlw	255
 15379  000574  22E2               	addwfc	fsr1h,f,c
 15380  000576  0012               	return		;funcret
 15381  000578                     __end_of___month_to_secs:
 15382                           	opt callstack 0
 15383                           
 15384 ;; *************** function _do_tzset *****************
 15385 ;; Defined at:
 15386 ;;		line 118 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15387 ;; Parameters:    Size  Location     Type
 15388 ;;		None
 15389 ;; Auto vars:     Size  Location     Type
 15390 ;;  s               2  [STACK] PTR const unsigned char 
 15391 ;;		 -> __gmt(4), 
 15392 ;; Return value:  Size  Location     Type
 15393 ;;                  1  [STACK] void 
 15394 ;; Registers used:
 15395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15396 ;; Tracked objects:
 15397 ;;		On entry : 0/39
 15398 ;;		On exit  : 0/0
 15399 ;;		Unchanged: 0/0
 15400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15405 ;;Total ram usage:        0 bytes
 15406 ;; Hardware stack levels used:    1
 15407 ;; Hardware stack levels required when called:   18
 15408 ;; This function calls:
 15409 ;;		_getname
 15410 ;;		_getoff
 15411 ;;		_getrule
 15412 ;; This function is called by:
 15413 ;;		___secs_to_zone
 15414 ;; This function uses a reentrant model
 15415 ;;
 15416                           
 15417                           	psect	text44
 15418  01BE88                     __ptext44:
 15419                           	opt callstack 0
 15420  01BE88                     _do_tzset:
 15421                           	opt callstack 0
 15422                           
 15423                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15424  01BE88  52E6               	movf	postinc1,f,c
 15425  01BE8A  52E6               	movf	postinc1,f,c
 15426                           
 15427                           ;stkvar	_s @ sp[(-2)+0]
 15428                           
 15429                           ;incstack = 0
 15430  01BE8C  0EF9               	movlw	high ___gmt
 15431  01BE8E  6E2A               	movwf	btemp^0,c
 15432  01BE90  0EFF               	movlw	-1
 15433  01BE92  0060  F0AB  FFE3   	movff	btemp,plusw1
 15434  01BE98  0E53               	movlw	low ___gmt
 15435  01BE9A  6E2A               	movwf	btemp^0,c
 15436  01BE9C  0EFE               	movlw	-2
 15437  01BE9E  0060  F0AB  FFE3   	movff	btemp,plusw1
 15438                           
 15439                           ;stkvar	_s @ sp[(-2)+0]
 15440  01BEA4  0EFE               	movlw	254
 15441  01BEA6  24E1               	addwf	fsr1l,w,c
 15442  01BEA8  6E2A               	movwf	btemp^0,c
 15443  01BEAA  0EFF               	movlw	255
 15444  01BEAC  20E2               	addwfc	fsr1h,w,c
 15445  01BEAE  6E2B               	movwf	(btemp+1)^0,c
 15446  01BEB0  0060  F0AB  FFE6   	movff	btemp,postinc1
 15447  01BEB6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15448  01BEBC  0EF6               	movlw	low _std_name
 15449  01BEBE  6EE6               	movwf	postinc1,c
 15450  01BEC0  0E01               	movlw	high _std_name
 15451  01BEC2  6EE6               	movwf	postinc1,c
 15452  01BEC4  EC18  F0D8         	call	_getname	;wreg free
 15453  01BEC8  0EF6               	movlw	low _std_name
 15454  01BECA  0100               	movlb	0	; () banked
 15455  01BECC  6F6C               	movwf	___tzname& (0+255),b
 15456  01BECE  0E01               	movlw	high _std_name
 15457  01BED0  6F6D               	movwf	(___tzname+1)& (0+255),b
 15458                           
 15459                           ; BSR set to: 0
 15460                           ;stkvar	_s @ sp[(-2)+0]
 15461  01BED2  0EFE               	movlw	254
 15462  01BED4  24E1               	addwf	fsr1l,w,c
 15463  01BED6  6E2A               	movwf	btemp^0,c
 15464  01BED8  0EFF               	movlw	255
 15465  01BEDA  20E2               	addwfc	fsr1h,w,c
 15466  01BEDC  6E2B               	movwf	(btemp+1)^0,c
 15467  01BEDE  0060  F0AB  FFE6   	movff	btemp,postinc1
 15468  01BEE4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15469  01BEEA  ECD0  F0E8         	call	_getoff	;wreg free
 15470  01BEEE  0060  F0A8  F070   	movff	btemp,___timezone
 15471  01BEF4  0060  F0AC  F071   	movff	btemp+1,___timezone+1
 15472  01BEFA  0100               	movlb	0	; () banked
 15473  01BEFC  0E00               	movlw	0
 15474  01BEFE  BF71               	btfsc	(___timezone+1)& (0+255),7,b
 15475  01BF00  0EFF               	movlw	-1
 15476  01BF02  6F72               	movwf	(___timezone+2)& (0+255),b
 15477  01BF04  6F73               	movwf	(___timezone+3)& (0+255),b
 15478                           
 15479                           ; BSR set to: 0
 15480                           ;stkvar	_s @ sp[(-2)+0]
 15481  01BF06  0EFE               	movlw	254
 15482  01BF08  24E1               	addwf	fsr1l,w,c
 15483  01BF0A  6E2A               	movwf	btemp^0,c
 15484  01BF0C  0EFF               	movlw	255
 15485  01BF0E  20E2               	addwfc	fsr1h,w,c
 15486  01BF10  6E2B               	movwf	(btemp+1)^0,c
 15487  01BF12  0060  F0AB  FFE6   	movff	btemp,postinc1
 15488  01BF18  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15489  01BF1E  0EEF               	movlw	low _dst_name
 15490  01BF20  6EE6               	movwf	postinc1,c
 15491  01BF22  0E01               	movlw	high _dst_name
 15492  01BF24  6EE6               	movwf	postinc1,c
 15493  01BF26  EC18  F0D8         	call	_getname	;wreg free
 15494  01BF2A  0EEF               	movlw	low _dst_name
 15495  01BF2C  0100               	movlb	0	; () banked
 15496  01BF2E  6F6E               	movwf	(___tzname+2)& (0+255),b
 15497  01BF30  0E01               	movlw	high _dst_name
 15498  01BF32  6F6F               	movwf	(___tzname+3)& (0+255),b
 15499                           
 15500                           ; BSR set to: 0
 15501  01BF34  0101               	movlb	1	; () banked
 15502  01BF36  51EF               	movf	_dst_name& (0+255),w,b
 15503  01BF38  B4D8               	btfsc	status,2,c
 15504  01BF3A  D070               	goto	l3978
 15505                           
 15506                           ; BSR set to: 1
 15507  01BF3C  0E00               	movlw	0
 15508  01BF3E  0100               	movlb	0	; () banked
 15509  01BF40  6FB9               	movwf	(___daylight+1)& (0+255),b
 15510  01BF42  0E01               	movlw	1
 15511  01BF44  6FB8               	movwf	___daylight& (0+255),b
 15512                           
 15513                           ; BSR set to: 0
 15514                           ;stkvar	_s @ sp[(-2)+0]
 15515  01BF46  50E1               	movf	fsr1l,w,c
 15516  01BF48  0FFE               	addlw	-2
 15517  01BF4A  6ED9               	movwf	fsr2l,c
 15518  01BF4C  50E2               	movf	fsr1h,w,c
 15519  01BF4E  6EDA               	movwf	fsr2h,c
 15520  01BF50  0EFF               	movlw	255
 15521  01BF52  22DA               	addwfc	fsr2h,f,c
 15522  01BF54  006F FF7B FFF6     	movff	postinc2,tblptrl
 15523  01BF5A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15524  01BF60                     	if	0	;tblptru may be non-zero
 15525  01BF60                     	endif
 15526  01BF60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15527  01BF60  0E00               	movlw	low (__mediumconst shr (0+16))
 15528  01BF62  6EF8               	movwf	tblptru,c
 15529  01BF64                     	endif
 15530  01BF64  0008               	tblrd		*
 15531  01BF66  50F5               	movf	tablat,w,c
 15532  01BF68  0A2B               	xorlw	43
 15533  01BF6A  B4D8               	btfsc	status,2,c
 15534  01BF6C  D035               	goto	u16170
 15535                           
 15536                           ; BSR set to: 0
 15537                           ;stkvar	_s @ sp[(-2)+0]
 15538  01BF6E  50E1               	movf	fsr1l,w,c
 15539  01BF70  0FFE               	addlw	-2
 15540  01BF72  6ED9               	movwf	fsr2l,c
 15541  01BF74  50E2               	movf	fsr1h,w,c
 15542  01BF76  6EDA               	movwf	fsr2h,c
 15543  01BF78  0EFF               	movlw	255
 15544  01BF7A  22DA               	addwfc	fsr2h,f,c
 15545  01BF7C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15546  01BF82  006F FF77 FFF7     	movff	postdec2,tblptrh
 15547  01BF88                     	if	0	;tblptru may be non-zero
 15548  01BF88                     	endif
 15549  01BF88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15550  01BF88  0E00               	movlw	low (__mediumconst shr (0+16))
 15551  01BF8A  6EF8               	movwf	tblptru,c
 15552  01BF8C                     	endif
 15553  01BF8C  0008               	tblrd		*
 15554  01BF8E  50F5               	movf	tablat,w,c
 15555  01BF90  0A2D               	xorlw	45
 15556  01BF92  B4D8               	btfsc	status,2,c
 15557  01BF94  D021               	goto	u16170
 15558                           
 15559                           ; BSR set to: 0
 15560  01BF96  0ED0               	movlw	208
 15561  01BF98  6E34               	movwf	(btemp+10)^0,c
 15562  01BF9A  0EFF               	movlw	255
 15563  01BF9C  6E35               	movwf	(btemp+11)^0,c
 15564                           
 15565                           ;stkvar	_s @ sp[(-2)+0]
 15566  01BF9E  50E1               	movf	fsr1l,w,c
 15567  01BFA0  0FFE               	addlw	-2
 15568  01BFA2  6ED9               	movwf	fsr2l,c
 15569  01BFA4  50E2               	movf	fsr1h,w,c
 15570  01BFA6  6EDA               	movwf	fsr2h,c
 15571  01BFA8  0EFF               	movlw	255
 15572  01BFAA  22DA               	addwfc	fsr2h,f,c
 15573  01BFAC  006F FF7B FFF6     	movff	postinc2,tblptrl
 15574  01BFB2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15575  01BFB8                     	if	0	;tblptru may be non-zero
 15576  01BFB8                     	endif
 15577  01BFB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15578  01BFB8  0E00               	movlw	low (__mediumconst shr (0+16))
 15579  01BFBA  6EF8               	movwf	tblptru,c
 15580  01BFBC                     	endif
 15581  01BFBC  0008               	tblrd		*
 15582  01BFBE  50F5               	movf	tablat,w,c
 15583  01BFC0  6E32               	movwf	(btemp+8)^0,c
 15584  01BFC2  6A33               	clrf	(btemp+9)^0,c
 15585  01BFC4  5034               	movf	(btemp+10)^0,w,c
 15586  01BFC6  2632               	addwf	(btemp+8)^0,f,c
 15587  01BFC8  5035               	movf	(btemp+11)^0,w,c
 15588  01BFCA  2233               	addwfc	(btemp+9)^0,f,c
 15589  01BFCC  5033               	movf	(btemp+9)^0,w,c
 15590  01BFCE  E119               	bnz	l16579
 15591  01BFD0  0E0A               	movlw	10
 15592  01BFD2  5C32               	subwf	(btemp+8)^0,w,c
 15593  01BFD4  B0D8               	btfsc	status,0,c
 15594  01BFD6  D015               	goto	l16579
 15595  01BFD8                     u16170:
 15596                           
 15597                           ; BSR set to: 0
 15598                           ;stkvar	_s @ sp[(-2)+0]
 15599  01BFD8  0EFE               	movlw	254
 15600  01BFDA  24E1               	addwf	fsr1l,w,c
 15601  01BFDC  6E2A               	movwf	btemp^0,c
 15602  01BFDE  0EFF               	movlw	255
 15603  01BFE0  20E2               	addwfc	fsr1h,w,c
 15604  01BFE2  6E2B               	movwf	(btemp+1)^0,c
 15605  01BFE4  0060  F0AB  FFE6   	movff	btemp,postinc1
 15606  01BFEA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15607  01BFF0  ECD0  F0E8         	call	_getoff	;wreg free
 15608  01BFF4  0060  F0A8  F0B6   	movff	btemp,_dst_off
 15609  01BFFA  0060  F0AC  F0B7   	movff	btemp+1,_dst_off+1
 15610  01C000  D012               	goto	l16581
 15611  01C002                     l16579:
 15612                           
 15613                           ; BSR set to: 0
 15614  01C002  0060  F1C0  F034   	movff	___timezone,btemp+10
 15615  01C008  0060  F1C4  F035   	movff	___timezone+1,btemp+11
 15616  01C00E  0EF0               	movlw	240
 15617  01C010  2434               	addwf	(btemp+10)^0,w,c
 15618  01C012  6FB6               	movwf	_dst_off& (0+255),b
 15619  01C014  0EF1               	movlw	241
 15620  01C016  2035               	addwfc	(btemp+11)^0,w,c
 15621  01C018  6FB7               	movwf	(_dst_off+1)& (0+255),b
 15622  01C01A  D005               	goto	l16581
 15623  01C01C                     l3978:
 15624                           
 15625                           ; BSR set to: 1
 15626  01C01C  0100               	movlb	0	; () banked
 15627  01C01E  6BB8               	clrf	___daylight& (0+255),b
 15628  01C020  6BB9               	clrf	(___daylight+1)& (0+255),b
 15629  01C022  6BB6               	clrf	_dst_off& (0+255),b
 15630  01C024  6BB7               	clrf	(_dst_off+1)& (0+255),b
 15631  01C026                     l16581:
 15632                           
 15633                           ;stkvar	_s @ sp[(-2)+0]
 15634  01C026  50E1               	movf	fsr1l,w,c
 15635  01C028  0FFE               	addlw	-2
 15636  01C02A  6ED9               	movwf	fsr2l,c
 15637  01C02C  50E2               	movf	fsr1h,w,c
 15638  01C02E  6EDA               	movwf	fsr2h,c
 15639  01C030  0EFF               	movlw	255
 15640  01C032  22DA               	addwfc	fsr2h,f,c
 15641  01C034  006F FF7B FFF6     	movff	postinc2,tblptrl
 15642  01C03A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15643  01C040                     	if	0	;tblptru may be non-zero
 15644  01C040                     	endif
 15645  01C040                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15646  01C040  0E00               	movlw	low (__mediumconst shr (0+16))
 15647  01C042  6EF8               	movwf	tblptru,c
 15648  01C044                     	endif
 15649  01C044  0008               	tblrd		*
 15650  01C046  50F5               	movf	tablat,w,c
 15651  01C048  0A2C               	xorlw	44
 15652  01C04A  A4D8               	btfss	status,2,c
 15653  01C04C  D023               	goto	l16587
 15654                           
 15655                           ;stkvar	_s @ sp[(-2)+0]
 15656  01C04E  0EFE               	movlw	-2
 15657  01C050  50E3               	movf	plusw1,w,c
 15658  01C052  0F01               	addlw	1
 15659  01C054  6E2A               	movwf	btemp^0,c
 15660  01C056  0EFE               	movlw	-2
 15661  01C058  0060  F0AB  FFE3   	movff	btemp,plusw1
 15662  01C05E  6A2A               	clrf	btemp^0,c
 15663  01C060  0EFF               	movlw	-1
 15664  01C062  50E3               	movf	plusw1,w,c
 15665  01C064  202A               	addwfc	btemp^0,w,c
 15666  01C066  6E2A               	movwf	btemp^0,c
 15667  01C068  0EFF               	movlw	-1
 15668  01C06A  0060  F0AB  FFE3   	movff	btemp,plusw1
 15669  01C070  0EE5               	movlw	low _r0
 15670  01C072  6EE6               	movwf	postinc1,c
 15671  01C074  0E01               	movlw	high _r0
 15672  01C076  6EE6               	movwf	postinc1,c
 15673                           
 15674                           ;stkvar	_s @ sp[(-4)+0]
 15675  01C078  0EFC               	movlw	252
 15676  01C07A  24E1               	addwf	fsr1l,w,c
 15677  01C07C  6E2A               	movwf	btemp^0,c
 15678  01C07E  0EFF               	movlw	255
 15679  01C080  20E2               	addwfc	fsr1h,w,c
 15680  01C082  6E2B               	movwf	(btemp+1)^0,c
 15681  01C084  0060  F0AB  FFE6   	movff	btemp,postinc1
 15682  01C08A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15683  01C090  EC84  F0E0         	call	_getrule	;wreg free
 15684  01C094                     l16587:
 15685                           
 15686                           ;stkvar	_s @ sp[(-2)+0]
 15687  01C094  50E1               	movf	fsr1l,w,c
 15688  01C096  0FFE               	addlw	-2
 15689  01C098  6ED9               	movwf	fsr2l,c
 15690  01C09A  50E2               	movf	fsr1h,w,c
 15691  01C09C  6EDA               	movwf	fsr2h,c
 15692  01C09E  0EFF               	movlw	255
 15693  01C0A0  22DA               	addwfc	fsr2h,f,c
 15694  01C0A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 15695  01C0A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 15696  01C0AE                     	if	0	;tblptru may be non-zero
 15697  01C0AE                     	endif
 15698  01C0AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15699  01C0AE  0E00               	movlw	low (__mediumconst shr (0+16))
 15700  01C0B0  6EF8               	movwf	tblptru,c
 15701  01C0B2                     	endif
 15702  01C0B2  0008               	tblrd		*
 15703  01C0B4  50F5               	movf	tablat,w,c
 15704  01C0B6  0A2C               	xorlw	44
 15705  01C0B8  A4D8               	btfss	status,2,c
 15706  01C0BA  D023               	goto	l3986
 15707                           
 15708                           ;stkvar	_s @ sp[(-2)+0]
 15709  01C0BC  0EFE               	movlw	-2
 15710  01C0BE  50E3               	movf	plusw1,w,c
 15711  01C0C0  0F01               	addlw	1
 15712  01C0C2  6E2A               	movwf	btemp^0,c
 15713  01C0C4  0EFE               	movlw	-2
 15714  01C0C6  0060  F0AB  FFE3   	movff	btemp,plusw1
 15715  01C0CC  6A2A               	clrf	btemp^0,c
 15716  01C0CE  0EFF               	movlw	-1
 15717  01C0D0  50E3               	movf	plusw1,w,c
 15718  01C0D2  202A               	addwfc	btemp^0,w,c
 15719  01C0D4  6E2A               	movwf	btemp^0,c
 15720  01C0D6  0EFF               	movlw	-1
 15721  01C0D8  0060  F0AB  FFE3   	movff	btemp,plusw1
 15722  01C0DE  0EDB               	movlw	low _r1
 15723  01C0E0  6EE6               	movwf	postinc1,c
 15724  01C0E2  0E01               	movlw	high _r1
 15725  01C0E4  6EE6               	movwf	postinc1,c
 15726                           
 15727                           ;stkvar	_s @ sp[(-4)+0]
 15728  01C0E6  0EFC               	movlw	252
 15729  01C0E8  24E1               	addwf	fsr1l,w,c
 15730  01C0EA  6E2A               	movwf	btemp^0,c
 15731  01C0EC  0EFF               	movlw	255
 15732  01C0EE  20E2               	addwfc	fsr1h,w,c
 15733  01C0F0  6E2B               	movwf	(btemp+1)^0,c
 15734  01C0F2  0060  F0AB  FFE6   	movff	btemp,postinc1
 15735  01C0F8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15736  01C0FE  EC84  F0E0         	call	_getrule	;wreg free
 15737  01C102                     l3986:
 15738                           
 15739                           ; _do_tzset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 15740  01C102  52E5               	movf	postdec1,f,c
 15741  01C104  52E5               	movf	postdec1,f,c
 15742  01C106  0012               	return		;funcret
 15743  01C108                     __end_of_do_tzset:
 15744                           	opt callstack 0
 15745                           
 15746 ;; *************** function _getrule *****************
 15747 ;; Defined at:
 15748 ;;		line 60 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15749 ;; Parameters:    Size  Location     Type
 15750 ;;  p               2  [STACK] PTR PTR const unsigned c
 15751 ;;		 -> s(2), 
 15752 ;;  rule            2  [STACK] PTR int 
 15753 ;;		 -> r1(10), r0(10), 
 15754 ;; Auto vars:     Size  Location     Type
 15755 ;;  r               2  [STACK] int 
 15756 ;; Return value:  Size  Location     Type
 15757 ;;                  1  [STACK] void 
 15758 ;; Registers used:
 15759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15760 ;; Tracked objects:
 15761 ;;		On entry : 0/0
 15762 ;;		On exit  : 0/0
 15763 ;;		Unchanged: 0/0
 15764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15769 ;;Total ram usage:        0 bytes
 15770 ;; Hardware stack levels used:    1
 15771 ;; Hardware stack levels required when called:   17
 15772 ;; This function calls:
 15773 ;;		_getint
 15774 ;;		_getoff
 15775 ;; This function is called by:
 15776 ;;		_do_tzset
 15777 ;; This function uses a reentrant model
 15778 ;;
 15779                           
 15780                           	psect	text45
 15781  01C108                     __ptext45:
 15782                           	opt callstack 0
 15783  01C108                     _getrule:
 15784                           	opt callstack 0
 15785                           
 15786                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15787  01C108  52E6               	movf	postinc1,f,c
 15788  01C10A  52E6               	movf	postinc1,f,c
 15789                           
 15790                           ;stkvar	_p @ sp[(-2)+-2]
 15791                           
 15792                           ;incstack = 0
 15793  01C10C  0EFC               	movlw	-4
 15794  01C10E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15795  01C114  0EFD               	movlw	-3
 15796  01C116  006F FF8F FFDA     	movff	plusw1,fsr2h
 15797  01C11C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15798  01C122  006F FF77 FFF7     	movff	postdec2,tblptrh
 15799  01C128                     	if	0	;tblptru may be non-zero
 15800  01C128                     	endif
 15801  01C128                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15802  01C128  0E00               	movlw	low (__mediumconst shr (0+16))
 15803  01C12A  6EF8               	movwf	tblptru,c
 15804  01C12C                     	endif
 15805  01C12C  0008               	tblrd		*
 15806  01C12E  50F5               	movf	tablat,w,c
 15807  01C130  6E34               	movwf	(btemp+10)^0,c
 15808  01C132  6A35               	clrf	(btemp+11)^0,c
 15809                           
 15810                           ;stkvar	_rule @ sp[(-2)+-4]
 15811  01C134  0EFA               	movlw	-6
 15812  01C136  006F FF8F FFD9     	movff	plusw1,fsr2l
 15813  01C13C  0EFB               	movlw	-5
 15814  01C13E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15815  01C144  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15816  01C14A  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15817  01C150  006F FF78  F034    	movff	postinc2,btemp+10
 15818  01C156  006F FF74  F035    	movff	postdec2,btemp+11
 15819                           
 15820                           ;stkvar	_r @ sp[(-2)+0]
 15821  01C15C  0EFE               	movlw	-2
 15822  01C15E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15823  01C164  0EFF               	movlw	-1
 15824  01C166  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15825                           
 15826                           ;stkvar	_r @ sp[(-2)+0]
 15827  01C16C  0EFE               	movlw	-2
 15828  01C16E  006F FF8C  F02A    	movff	plusw1,btemp
 15829  01C174  0E4D               	movlw	77
 15830  01C176  182A               	xorwf	btemp^0,w,c
 15831  01C178  E104               	bnz	u15750
 15832  01C17A  0EFF               	movlw	-1
 15833  01C17C  50E3               	movf	plusw1,w,c
 15834  01C17E  B4D8               	btfsc	status,2,c
 15835  01C180  D036               	goto	l16277
 15836  01C182                     u15750:
 15837                           
 15838                           ;stkvar	_r @ sp[(-2)+0]
 15839  01C182  0EFE               	movlw	-2
 15840  01C184  006F FF8C  F02A    	movff	plusw1,btemp
 15841  01C18A  0E4A               	movlw	74
 15842  01C18C  182A               	xorwf	btemp^0,w,c
 15843  01C18E  E110               	bnz	l16273
 15844  01C190  0EFF               	movlw	-1
 15845  01C192  50E3               	movf	plusw1,w,c
 15846  01C194  A4D8               	btfss	status,2,c
 15847  01C196  D00C               	goto	l16273
 15848                           
 15849                           ;stkvar	_p @ sp[(-2)+-2]
 15850  01C198  0EFC               	movlw	-4
 15851  01C19A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15852  01C1A0  0EFD               	movlw	-3
 15853  01C1A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15854  01C1A8  2ADE               	incf	postinc2,f,c
 15855  01C1AA  0E00               	movlw	0
 15856  01C1AC  22DD               	addwfc	postdec2,f,c
 15857  01C1AE  D00C               	goto	l16275
 15858  01C1B0                     l16273:
 15859                           
 15860                           ;stkvar	_rule @ sp[(-2)+-4]
 15861  01C1B0  0EFA               	movlw	-6
 15862  01C1B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 15863  01C1B8  0EFB               	movlw	-5
 15864  01C1BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 15865  01C1C0  0E00               	movlw	0
 15866  01C1C2  6EDE               	movwf	postinc2,c
 15867  01C1C4  0E00               	movlw	0
 15868  01C1C6  6EDD               	movwf	postdec2,c
 15869  01C1C8                     l16275:
 15870                           
 15871                           ;stkvar	_p @ sp[(-2)+-2]
 15872  01C1C8  0EFC               	movlw	-4
 15873  01C1CA  006F FF8F FFE6     	movff	plusw1,postinc1
 15874  01C1D0  006F FF8F FFE6     	movff	plusw1,postinc1
 15875  01C1D6  ECCD  F001         	call	_getint	;wreg free
 15876                           
 15877                           ;stkvar	_rule @ sp[(-2)+-4]
 15878  01C1DA  0EFA               	movlw	-6
 15879  01C1DC  006F FF8C  F034    	movff	plusw1,btemp+10
 15880  01C1E2  0EFB               	movlw	-5
 15881  01C1E4  006F FF8C  F035    	movff	plusw1,btemp+11
 15882  01C1EA  0E02               	movlw	2
 15883  01C1EC  D06D               	goto	L16
 15884  01C1EE                     l16277:
 15885                           
 15886                           ;stkvar	_p @ sp[(-2)+-2]
 15887  01C1EE  0EFC               	movlw	-4
 15888  01C1F0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15889  01C1F6  0EFD               	movlw	-3
 15890  01C1F8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15891  01C1FE  2ADE               	incf	postinc2,f,c
 15892  01C200  0E00               	movlw	0
 15893  01C202  22DD               	addwfc	postdec2,f,c
 15894                           
 15895                           ;stkvar	_p @ sp[(-2)+-2]
 15896  01C204  0EFC               	movlw	-4
 15897  01C206  006F FF8F FFE6     	movff	plusw1,postinc1
 15898  01C20C  006F FF8F FFE6     	movff	plusw1,postinc1
 15899  01C212  ECCD  F001         	call	_getint	;wreg free
 15900                           
 15901                           ;stkvar	_rule @ sp[(-2)+-4]
 15902  01C216  0EFA               	movlw	-6
 15903  01C218  006F FF8C  F034    	movff	plusw1,btemp+10
 15904  01C21E  0EFB               	movlw	-5
 15905  01C220  006F FF8C  F035    	movff	plusw1,btemp+11
 15906  01C226  0E02               	movlw	2
 15907  01C228  2434               	addwf	(btemp+10)^0,w,c
 15908  01C22A  6ED9               	movwf	fsr2l,c
 15909  01C22C  0E00               	movlw	0
 15910  01C22E  2035               	addwfc	(btemp+11)^0,w,c
 15911  01C230  6EDA               	movwf	fsr2h,c
 15912  01C232  0060  F0AB  FFDE   	movff	btemp,postinc2
 15913  01C238  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15914                           
 15915                           ;stkvar	_p @ sp[(-2)+-2]
 15916  01C23E  0EFC               	movlw	-4
 15917  01C240  006F FF8F FFD9     	movff	plusw1,fsr2l
 15918  01C246  0EFD               	movlw	-3
 15919  01C248  006F FF8F FFDA     	movff	plusw1,fsr2h
 15920  01C24E  2ADE               	incf	postinc2,f,c
 15921  01C250  0E00               	movlw	0
 15922  01C252  22DD               	addwfc	postdec2,f,c
 15923                           
 15924                           ;stkvar	_p @ sp[(-2)+-2]
 15925  01C254  0EFC               	movlw	-4
 15926  01C256  006F FF8F FFE6     	movff	plusw1,postinc1
 15927  01C25C  006F FF8F FFE6     	movff	plusw1,postinc1
 15928  01C262  ECCD  F001         	call	_getint	;wreg free
 15929                           
 15930                           ;stkvar	_rule @ sp[(-2)+-4]
 15931  01C266  0EFA               	movlw	-6
 15932  01C268  006F FF8C  F034    	movff	plusw1,btemp+10
 15933  01C26E  0EFB               	movlw	-5
 15934  01C270  006F FF8C  F035    	movff	plusw1,btemp+11
 15935  01C276  0E04               	movlw	4
 15936  01C278  2434               	addwf	(btemp+10)^0,w,c
 15937  01C27A  6ED9               	movwf	fsr2l,c
 15938  01C27C  0E00               	movlw	0
 15939  01C27E  2035               	addwfc	(btemp+11)^0,w,c
 15940  01C280  6EDA               	movwf	fsr2h,c
 15941  01C282  0060  F0AB  FFDE   	movff	btemp,postinc2
 15942  01C288  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15943                           
 15944                           ;stkvar	_p @ sp[(-2)+-2]
 15945  01C28E  0EFC               	movlw	-4
 15946  01C290  006F FF8F FFD9     	movff	plusw1,fsr2l
 15947  01C296  0EFD               	movlw	-3
 15948  01C298  006F FF8F FFDA     	movff	plusw1,fsr2h
 15949  01C29E  2ADE               	incf	postinc2,f,c
 15950  01C2A0  0E00               	movlw	0
 15951  01C2A2  22DD               	addwfc	postdec2,f,c
 15952                           
 15953                           ;stkvar	_p @ sp[(-2)+-2]
 15954  01C2A4  0EFC               	movlw	-4
 15955  01C2A6  006F FF8F FFE6     	movff	plusw1,postinc1
 15956  01C2AC  006F FF8F FFE6     	movff	plusw1,postinc1
 15957  01C2B2  ECCD  F001         	call	_getint	;wreg free
 15958                           
 15959                           ;stkvar	_rule @ sp[(-2)+-4]
 15960  01C2B6  0EFA               	movlw	-6
 15961  01C2B8  006F FF8C  F034    	movff	plusw1,btemp+10
 15962  01C2BE  0EFB               	movlw	-5
 15963  01C2C0  006F FF8C  F035    	movff	plusw1,btemp+11
 15964  01C2C6  0E06               	movlw	6
 15965  01C2C8                     L16:
 15966  01C2C8  2434               	addwf	(btemp+10)^0,w,c
 15967  01C2CA  6ED9               	movwf	fsr2l,c
 15968  01C2CC  0E00               	movlw	0
 15969  01C2CE  2035               	addwfc	(btemp+11)^0,w,c
 15970  01C2D0  6EDA               	movwf	fsr2h,c
 15971  01C2D2  0060  F0AB  FFDE   	movff	btemp,postinc2
 15972  01C2D8  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15973                           
 15974                           ;stkvar	_p @ sp[(-2)+-2]
 15975  01C2DE  0EFC               	movlw	-4
 15976  01C2E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15977  01C2E6  0EFD               	movlw	-3
 15978  01C2E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15979  01C2EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 15980  01C2F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 15981  01C2FA                     	if	0	;tblptru may be non-zero
 15982  01C2FA                     	endif
 15983  01C2FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15984  01C2FA  0E00               	movlw	low (__mediumconst shr (0+16))
 15985  01C2FC  6EF8               	movwf	tblptru,c
 15986  01C2FE                     	endif
 15987  01C2FE  0008               	tblrd		*
 15988  01C300  50F5               	movf	tablat,w,c
 15989  01C302  0A2F               	xorlw	47
 15990  01C304  A4D8               	btfss	status,2,c
 15991  01C306  D029               	goto	l16293
 15992                           
 15993                           ;stkvar	_p @ sp[(-2)+-2]
 15994  01C308  0EFC               	movlw	-4
 15995  01C30A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15996  01C310  0EFD               	movlw	-3
 15997  01C312  006F FF8F FFDA     	movff	plusw1,fsr2h
 15998  01C318  2ADE               	incf	postinc2,f,c
 15999  01C31A  0E00               	movlw	0
 16000  01C31C  22DD               	addwfc	postdec2,f,c
 16001                           
 16002                           ;stkvar	_p @ sp[(-2)+-2]
 16003  01C31E  0EFC               	movlw	-4
 16004  01C320  006F FF8F FFE6     	movff	plusw1,postinc1
 16005  01C326  006F FF8F FFE6     	movff	plusw1,postinc1
 16006  01C32C  ECD0  F0E8         	call	_getoff	;wreg free
 16007                           
 16008                           ;stkvar	_rule @ sp[(-2)+-4]
 16009  01C330  0EFA               	movlw	-6
 16010  01C332  006F FF8C  F034    	movff	plusw1,btemp+10
 16011  01C338  0EFB               	movlw	-5
 16012  01C33A  006F FF8C  F035    	movff	plusw1,btemp+11
 16013  01C340  0E08               	movlw	8
 16014  01C342  2434               	addwf	(btemp+10)^0,w,c
 16015  01C344  6ED9               	movwf	fsr2l,c
 16016  01C346  0E00               	movlw	0
 16017  01C348  2035               	addwfc	(btemp+11)^0,w,c
 16018  01C34A  6EDA               	movwf	fsr2h,c
 16019  01C34C  0060  F0AB  FFDE   	movff	btemp,postinc2
 16020  01C352  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16021  01C358  D012               	goto	l3951
 16022  01C35A                     l16293:
 16023                           
 16024                           ;stkvar	_rule @ sp[(-2)+-4]
 16025  01C35A  0EFA               	movlw	-6
 16026  01C35C  006F FF8C  F034    	movff	plusw1,btemp+10
 16027  01C362  0EFB               	movlw	-5
 16028  01C364  006F FF8C  F035    	movff	plusw1,btemp+11
 16029  01C36A  0E08               	movlw	8
 16030  01C36C  2434               	addwf	(btemp+10)^0,w,c
 16031  01C36E  6ED9               	movwf	fsr2l,c
 16032  01C370  0E00               	movlw	0
 16033  01C372  2035               	addwfc	(btemp+11)^0,w,c
 16034  01C374  6EDA               	movwf	fsr2h,c
 16035  01C376  0E20               	movlw	32
 16036  01C378  6EDE               	movwf	postinc2,c
 16037  01C37A  0E1C               	movlw	28
 16038  01C37C  6EDD               	movwf	postdec2,c
 16039  01C37E                     l3951:
 16040                           
 16041                           ; _getrule: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16042  01C37E  0EFA               	movlw	250
 16043  01C380  26E1               	addwf	fsr1l,f,c
 16044  01C382  0EFF               	movlw	255
 16045  01C384  22E2               	addwfc	fsr1h,f,c
 16046  01C386  0012               	return		;funcret
 16047  01C388                     __end_of_getrule:
 16048                           	opt callstack 0
 16049                           
 16050 ;; *************** function _getoff *****************
 16051 ;; Defined at:
 16052 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16053 ;; Parameters:    Size  Location     Type
 16054 ;;  p               2  [STACK] PTR PTR const unsigned c
 16055 ;;		 -> s(2), 
 16056 ;; Auto vars:     Size  Location     Type
 16057 ;;  off             2  [STACK] int 
 16058 ;;  neg             2  [STACK] int 
 16059 ;; Return value:  Size  Location     Type
 16060 ;;                  2  [STACK] int 
 16061 ;; Registers used:
 16062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16063 ;; Tracked objects:
 16064 ;;		On entry : 0/0
 16065 ;;		On exit  : 0/0
 16066 ;;		Unchanged: 0/0
 16067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16072 ;;Total ram usage:        0 bytes
 16073 ;; Hardware stack levels used:    1
 16074 ;; Hardware stack levels required when called:   16
 16075 ;; This function calls:
 16076 ;;		_getint
 16077 ;; This function is called by:
 16078 ;;		_getrule
 16079 ;;		_do_tzset
 16080 ;; This function uses a reentrant model
 16081 ;;
 16082                           
 16083                           	psect	text46
 16084  01D1A0                     __ptext46:
 16085                           	opt callstack 0
 16086  01D1A0                     _getoff:
 16087                           	opt callstack 0
 16088                           
 16089                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16090  01D1A0  52E6               	movf	postinc1,f,c
 16091  01D1A2  52E6               	movf	postinc1,f,c
 16092  01D1A4  52E6               	movf	postinc1,f,c
 16093  01D1A6  52E6               	movf	postinc1,f,c
 16094                           
 16095                           ;stkvar	_neg @ sp[(-4)+2]
 16096                           
 16097                           ;incstack = 0
 16098  01D1A8  0EFE               	movlw	-2
 16099  01D1AA  6AE3               	clrf	plusw1,c
 16100  01D1AC  0EFF               	movlw	-1
 16101  01D1AE  6AE3               	clrf	plusw1,c
 16102                           
 16103                           ;stkvar	_p @ sp[(-4)+-2]
 16104  01D1B0  0EFA               	movlw	-6
 16105  01D1B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16106  01D1B8  0EFB               	movlw	-5
 16107  01D1BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16108  01D1C0  006F FF7B FFF6     	movff	postinc2,tblptrl
 16109  01D1C6  006F FF77 FFF7     	movff	postdec2,tblptrh
 16110  01D1CC                     	if	0	;tblptru may be non-zero
 16111  01D1CC                     	endif
 16112  01D1CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16113  01D1CC  0E00               	movlw	low (__mediumconst shr (0+16))
 16114  01D1CE  6EF8               	movwf	tblptru,c
 16115  01D1D0                     	endif
 16116  01D1D0  0008               	tblrd		*
 16117  01D1D2  50F5               	movf	tablat,w,c
 16118  01D1D4  0A2D               	xorlw	45
 16119  01D1D6  A4D8               	btfss	status,2,c
 16120  01D1D8  D018               	goto	l10941
 16121                           
 16122                           ;stkvar	_p @ sp[(-4)+-2]
 16123  01D1DA  0EFA               	movlw	-6
 16124  01D1DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 16125  01D1E2  0EFB               	movlw	-5
 16126  01D1E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 16127  01D1EA  2ADE               	incf	postinc2,f,c
 16128  01D1EC  0E00               	movlw	0
 16129  01D1EE  22DD               	addwfc	postdec2,f,c
 16130  01D1F0  0E01               	movlw	1
 16131  01D1F2  6E34               	movwf	(btemp+10)^0,c
 16132  01D1F4  0E00               	movlw	0
 16133  01D1F6  6E35               	movwf	(btemp+11)^0,c
 16134                           
 16135                           ;stkvar	_neg @ sp[(-4)+2]
 16136  01D1F8  0EFE               	movlw	-2
 16137  01D1FA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16138  01D200  0EFF               	movlw	-1
 16139  01D202  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16140  01D208  D020               	goto	l10945
 16141  01D20A                     l10941:
 16142                           
 16143                           ;stkvar	_p @ sp[(-4)+-2]
 16144  01D20A  0EFA               	movlw	-6
 16145  01D20C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16146  01D212  0EFB               	movlw	-5
 16147  01D214  006F FF8F FFDA     	movff	plusw1,fsr2h
 16148  01D21A  006F FF7B FFF6     	movff	postinc2,tblptrl
 16149  01D220  006F FF77 FFF7     	movff	postdec2,tblptrh
 16150  01D226                     	if	0	;tblptru may be non-zero
 16151  01D226                     	endif
 16152  01D226                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16153  01D226  0E00               	movlw	low (__mediumconst shr (0+16))
 16154  01D228  6EF8               	movwf	tblptru,c
 16155  01D22A                     	endif
 16156  01D22A  0008               	tblrd		*
 16157  01D22C  50F5               	movf	tablat,w,c
 16158  01D22E  0A2B               	xorlw	43
 16159  01D230  A4D8               	btfss	status,2,c
 16160  01D232  D00B               	goto	l10945
 16161                           
 16162                           ;stkvar	_p @ sp[(-4)+-2]
 16163  01D234  0EFA               	movlw	-6
 16164  01D236  006F FF8F FFD9     	movff	plusw1,fsr2l
 16165  01D23C  0EFB               	movlw	-5
 16166  01D23E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16167  01D244  2ADE               	incf	postinc2,f,c
 16168  01D246  0E00               	movlw	0
 16169  01D248  22DD               	addwfc	postdec2,f,c
 16170  01D24A                     l10945:
 16171                           
 16172                           ;stkvar	_p @ sp[(-4)+-2]
 16173  01D24A  0EFA               	movlw	-6
 16174  01D24C  006F FF8F FFE6     	movff	plusw1,postinc1
 16175  01D252  006F FF8F FFE6     	movff	plusw1,postinc1
 16176  01D258  ECCD  F001         	call	_getint	;wreg free
 16177  01D25C  0060  F0A8  F034   	movff	btemp,btemp+10
 16178  01D262  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16179  01D268  0E10               	movlw	16
 16180  01D26A  0234               	mulwf	(btemp+10)^0,c
 16181  01D26C  006F FFCC  F032    	movff	prodl,btemp+8
 16182  01D272  006F FFD0  F033    	movff	prodh,btemp+9
 16183  01D278  0235               	mulwf	(btemp+11)^0,c
 16184  01D27A  50F3               	movf	prodl,w,c
 16185  01D27C  2633               	addwf	(btemp+9)^0,f,c
 16186  01D27E  0E0E               	movlw	14
 16187  01D280  0234               	mulwf	(btemp+10)^0,c
 16188  01D282  50F3               	movf	prodl,w,c
 16189  01D284  2633               	addwf	(btemp+9)^0,f,c
 16190                           
 16191                           ;stkvar	_off @ sp[(-4)+0]
 16192  01D286  0EFC               	movlw	-4
 16193  01D288  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 16194  01D28E  0EFD               	movlw	-3
 16195  01D290  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 16196                           
 16197                           ;stkvar	_p @ sp[(-4)+-2]
 16198  01D296  0EFA               	movlw	-6
 16199  01D298  006F FF8F FFD9     	movff	plusw1,fsr2l
 16200  01D29E  0EFB               	movlw	-5
 16201  01D2A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16202  01D2A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 16203  01D2AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 16204  01D2B2                     	if	0	;tblptru may be non-zero
 16205  01D2B2                     	endif
 16206  01D2B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16207  01D2B2  0E00               	movlw	low (__mediumconst shr (0+16))
 16208  01D2B4  6EF8               	movwf	tblptru,c
 16209  01D2B6                     	endif
 16210  01D2B6  0008               	tblrd		*
 16211  01D2B8  50F5               	movf	tablat,w,c
 16212  01D2BA  0A3A               	xorlw	58
 16213  01D2BC  A4D8               	btfss	status,2,c
 16214  01D2BE  D064               	goto	l10959
 16215                           
 16216                           ;stkvar	_p @ sp[(-4)+-2]
 16217  01D2C0  0EFA               	movlw	-6
 16218  01D2C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16219  01D2C8  0EFB               	movlw	-5
 16220  01D2CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16221  01D2D0  2ADE               	incf	postinc2,f,c
 16222  01D2D2  0E00               	movlw	0
 16223  01D2D4  22DD               	addwfc	postdec2,f,c
 16224                           
 16225                           ;stkvar	_p @ sp[(-4)+-2]
 16226  01D2D6  0EFA               	movlw	-6
 16227  01D2D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16228  01D2DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16229  01D2E4  ECCD  F001         	call	_getint	;wreg free
 16230  01D2E8  0060  F0A8  F034   	movff	btemp,btemp+10
 16231  01D2EE  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16232  01D2F4  0E3C               	movlw	60
 16233  01D2F6  0234               	mulwf	(btemp+10)^0,c
 16234  01D2F8  006F FFCC  F032    	movff	prodl,btemp+8
 16235  01D2FE  006F FFD0  F033    	movff	prodh,btemp+9
 16236  01D304  0235               	mulwf	(btemp+11)^0,c
 16237  01D306  50F3               	movf	prodl,w,c
 16238  01D308  2633               	addwf	(btemp+9)^0,f,c
 16239                           
 16240                           ;stkvar	_off @ sp[(-4)+0]
 16241  01D30A  50E1               	movf	fsr1l,w,c
 16242  01D30C  0FFC               	addlw	-4
 16243  01D30E  6ED9               	movwf	fsr2l,c
 16244  01D310  50E2               	movf	fsr1h,w,c
 16245  01D312  6EDA               	movwf	fsr2h,c
 16246  01D314  0EFF               	movlw	255
 16247  01D316  22DA               	addwfc	fsr2h,f,c
 16248  01D318  5032               	movf	(btemp+8)^0,w,c
 16249  01D31A  26DE               	addwf	postinc2,f,c
 16250  01D31C  5033               	movf	(btemp+9)^0,w,c
 16251  01D31E  22DD               	addwfc	postdec2,f,c
 16252                           
 16253                           ;stkvar	_p @ sp[(-4)+-2]
 16254  01D320  0EFA               	movlw	-6
 16255  01D322  006F FF8F FFD9     	movff	plusw1,fsr2l
 16256  01D328  0EFB               	movlw	-5
 16257  01D32A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16258  01D330  006F FF7B FFF6     	movff	postinc2,tblptrl
 16259  01D336  006F FF77 FFF7     	movff	postdec2,tblptrh
 16260  01D33C                     	if	0	;tblptru may be non-zero
 16261  01D33C                     	endif
 16262  01D33C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16263  01D33C  0E00               	movlw	low (__mediumconst shr (0+16))
 16264  01D33E  6EF8               	movwf	tblptru,c
 16265  01D340                     	endif
 16266  01D340  0008               	tblrd		*
 16267  01D342  50F5               	movf	tablat,w,c
 16268  01D344  0A3A               	xorlw	58
 16269  01D346  A4D8               	btfss	status,2,c
 16270  01D348  D01F               	goto	l10959
 16271                           
 16272                           ;stkvar	_p @ sp[(-4)+-2]
 16273  01D34A  0EFA               	movlw	-6
 16274  01D34C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16275  01D352  0EFB               	movlw	-5
 16276  01D354  006F FF8F FFDA     	movff	plusw1,fsr2h
 16277  01D35A  2ADE               	incf	postinc2,f,c
 16278  01D35C  0E00               	movlw	0
 16279  01D35E  22DD               	addwfc	postdec2,f,c
 16280                           
 16281                           ;stkvar	_p @ sp[(-4)+-2]
 16282  01D360  0EFA               	movlw	-6
 16283  01D362  006F FF8F FFE6     	movff	plusw1,postinc1
 16284  01D368  006F FF8F FFE6     	movff	plusw1,postinc1
 16285  01D36E  ECCD  F001         	call	_getint	;wreg free
 16286                           
 16287                           ;stkvar	_off @ sp[(-4)+0]
 16288  01D372  50E1               	movf	fsr1l,w,c
 16289  01D374  0FFC               	addlw	-4
 16290  01D376  6ED9               	movwf	fsr2l,c
 16291  01D378  50E2               	movf	fsr1h,w,c
 16292  01D37A  6EDA               	movwf	fsr2h,c
 16293  01D37C  0EFF               	movlw	255
 16294  01D37E  22DA               	addwfc	fsr2h,f,c
 16295  01D380  502A               	movf	btemp^0,w,c
 16296  01D382  26DE               	addwf	postinc2,f,c
 16297  01D384  502B               	movf	(btemp+1)^0,w,c
 16298  01D386  22DD               	addwfc	postdec2,f,c
 16299  01D388                     l10959:
 16300                           
 16301                           ;stkvar	_neg @ sp[(-4)+2]
 16302  01D388  0EFE               	movlw	-2
 16303  01D38A  006F FF8C  F02A    	movff	plusw1,btemp
 16304  01D390  0EFF               	movlw	-1
 16305  01D392  50E3               	movf	plusw1,w,c
 16306  01D394  102A               	iorwf	btemp^0,w,c
 16307  01D396  A4D8               	btfss	status,2,c
 16308  01D398  D009               	goto	l10963
 16309                           
 16310                           ;stkvar	_off @ sp[(-4)+0]
 16311  01D39A  0EFC               	movlw	-4
 16312  01D39C  006F FF8C  F02A    	movff	plusw1,btemp
 16313  01D3A2  0EFD               	movlw	-3
 16314  01D3A4  006F FF8C  F02B    	movff	plusw1,btemp+1
 16315  01D3AA  D00D               	goto	l3942
 16316  01D3AC                     l10963:
 16317                           
 16318                           ;stkvar	_off @ sp[(-4)+0]
 16319  01D3AC  0EFC               	movlw	-4
 16320  01D3AE  006F FF8C  F02A    	movff	plusw1,btemp
 16321  01D3B4  1E2A               	comf	btemp^0,f,c
 16322  01D3B6  0EFD               	movlw	-3
 16323  01D3B8  006F FF8C  F02B    	movff	plusw1,btemp+1
 16324  01D3BE  1E2B               	comf	(btemp+1)^0,f,c
 16325  01D3C0  2A2A               	incf	btemp^0,f,c
 16326  01D3C2  B4D8               	btfsc	status,2,c
 16327  01D3C4  2A2B               	incf	(btemp+1)^0,f,c
 16328  01D3C6                     l3942:
 16329                           
 16330                           ; _getoff: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16331  01D3C6  0EFA               	movlw	250
 16332  01D3C8  26E1               	addwf	fsr1l,f,c
 16333  01D3CA  0EFF               	movlw	255
 16334  01D3CC  22E2               	addwfc	fsr1h,f,c
 16335  01D3CE  0012               	return		;funcret
 16336  01D3D0                     __end_of_getoff:
 16337                           	opt callstack 0
 16338                           
 16339 ;; *************** function _getint *****************
 16340 ;; Defined at:
 16341 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16342 ;; Parameters:    Size  Location     Type
 16343 ;;  p               2  [STACK] PTR PTR const unsigned c
 16344 ;;		 -> s(2), 
 16345 ;; Auto vars:     Size  Location     Type
 16346 ;;  x               2  [STACK] unsigned int 
 16347 ;; Return value:  Size  Location     Type
 16348 ;;                  2  [STACK] int 
 16349 ;; Registers used:
 16350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16351 ;; Tracked objects:
 16352 ;;		On entry : 0/0
 16353 ;;		On exit  : 0/0
 16354 ;;		Unchanged: 0/0
 16355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16360 ;;Total ram usage:        0 bytes
 16361 ;; Hardware stack levels used:    1
 16362 ;; Hardware stack levels required when called:   15
 16363 ;; This function calls:
 16364 ;;		Nothing
 16365 ;; This function is called by:
 16366 ;;		_getoff
 16367 ;;		_getrule
 16368 ;; This function uses a reentrant model
 16369 ;;
 16370                           
 16371                           	psect	text47
 16372  00039A                     __ptext47:
 16373                           	opt callstack 0
 16374  00039A                     _getint:
 16375                           	opt callstack 0
 16376                           
 16377                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16378  00039A  52E6               	movf	postinc1,f,c
 16379  00039C  52E6               	movf	postinc1,f,c
 16380                           
 16381                           ;stkvar	_x @ sp[(-2)+0]
 16382                           
 16383                           ;incstack = 0
 16384  00039E  0EFE               	movlw	-2
 16385  0003A0  6AE3               	clrf	plusw1,c
 16386  0003A2  0EFF               	movlw	-1
 16387  0003A4  6AE3               	clrf	plusw1,c
 16388  0003A6  D043               	goto	l10097
 16389  0003A8                     l10093:
 16390  0003A8  0ED0               	movlw	208
 16391  0003AA  6E34               	movwf	(btemp+10)^0,c
 16392  0003AC  0EFF               	movlw	255
 16393  0003AE  6E35               	movwf	(btemp+11)^0,c
 16394                           
 16395                           ;stkvar	_x @ sp[(-2)+0]
 16396  0003B0  0EFE               	movlw	-2
 16397  0003B2  006F FF8C  F032    	movff	plusw1,btemp+8
 16398  0003B8  0EFF               	movlw	-1
 16399  0003BA  006F FF8C  F033    	movff	plusw1,btemp+9
 16400  0003C0  0E0A               	movlw	10
 16401  0003C2  0232               	mulwf	(btemp+8)^0,c
 16402  0003C4  006F FFCC  F030    	movff	prodl,btemp+6
 16403  0003CA  006F FFD0  F031    	movff	prodh,btemp+7
 16404  0003D0  0233               	mulwf	(btemp+9)^0,c
 16405  0003D2  50F3               	movf	prodl,w,c
 16406  0003D4  2631               	addwf	(btemp+7)^0,f,c
 16407                           
 16408                           ;stkvar	_p @ sp[(-2)+-2]
 16409  0003D6  0EFC               	movlw	-4
 16410  0003D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16411  0003DE  0EFD               	movlw	-3
 16412  0003E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16413  0003E6  006F FF7B FFF6     	movff	postinc2,tblptrl
 16414  0003EC  006F FF77 FFF7     	movff	postdec2,tblptrh
 16415  0003F2                     	if	0	;tblptru may be non-zero
 16416  0003F2                     	endif
 16417  0003F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16418  0003F2  0E00               	movlw	low (__mediumconst shr (0+16))
 16419  0003F4  6EF8               	movwf	tblptru,c
 16420  0003F6                     	endif
 16421  0003F6  0008               	tblrd		*
 16422  0003F8  50F5               	movf	tablat,w,c
 16423  0003FA  2630               	addwf	(btemp+6)^0,f,c
 16424  0003FC  0E00               	movlw	0
 16425  0003FE  2231               	addwfc	(btemp+7)^0,f,c
 16426  000400  5034               	movf	(btemp+10)^0,w,c
 16427  000402  2630               	addwf	(btemp+6)^0,f,c
 16428  000404  5035               	movf	(btemp+11)^0,w,c
 16429  000406  2231               	addwfc	(btemp+7)^0,f,c
 16430                           
 16431                           ;stkvar	_x @ sp[(-2)+0]
 16432  000408  0EFE               	movlw	-2
 16433  00040A  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 16434  000410  0EFF               	movlw	-1
 16435  000412  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 16436                           
 16437                           ;stkvar	_p @ sp[(-2)+-2]
 16438  000418  0EFC               	movlw	-4
 16439  00041A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16440  000420  0EFD               	movlw	-3
 16441  000422  006F FF8F FFDA     	movff	plusw1,fsr2h
 16442  000428  2ADE               	incf	postinc2,f,c
 16443  00042A  0E00               	movlw	0
 16444  00042C  22DD               	addwfc	postdec2,f,c
 16445  00042E                     l10097:
 16446  00042E  0ED0               	movlw	208
 16447  000430  6E34               	movwf	(btemp+10)^0,c
 16448  000432  0EFF               	movlw	255
 16449  000434  6E35               	movwf	(btemp+11)^0,c
 16450                           
 16451                           ;stkvar	_p @ sp[(-2)+-2]
 16452  000436  0EFC               	movlw	-4
 16453  000438  006F FF8F FFD9     	movff	plusw1,fsr2l
 16454  00043E  0EFD               	movlw	-3
 16455  000440  006F FF8F FFDA     	movff	plusw1,fsr2h
 16456  000446  006F FF7B FFF6     	movff	postinc2,tblptrl
 16457  00044C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16458  000452                     	if	0	;tblptru may be non-zero
 16459  000452                     	endif
 16460  000452                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16461  000452  0E00               	movlw	low (__mediumconst shr (0+16))
 16462  000454  6EF8               	movwf	tblptru,c
 16463  000456                     	endif
 16464  000456  0008               	tblrd		*
 16465  000458  50F5               	movf	tablat,w,c
 16466  00045A  6E32               	movwf	(btemp+8)^0,c
 16467  00045C  6A33               	clrf	(btemp+9)^0,c
 16468  00045E  5034               	movf	(btemp+10)^0,w,c
 16469  000460  2632               	addwf	(btemp+8)^0,f,c
 16470  000462  5035               	movf	(btemp+11)^0,w,c
 16471  000464  2233               	addwfc	(btemp+9)^0,f,c
 16472  000466  5033               	movf	(btemp+9)^0,w,c
 16473  000468  E104               	bnz	u7720
 16474  00046A  0E0A               	movlw	10
 16475  00046C  5C32               	subwf	(btemp+8)^0,w,c
 16476  00046E  A0D8               	btfss	status,0,c
 16477  000470  D79B               	goto	l10093
 16478  000472                     u7720:
 16479                           
 16480                           ;stkvar	_x @ sp[(-2)+0]
 16481  000472  0EFE               	movlw	-2
 16482  000474  006F FF8C  F02A    	movff	plusw1,btemp
 16483  00047A  0EFF               	movlw	-1
 16484  00047C  006F FF8C  F02B    	movff	plusw1,btemp+1
 16485                           
 16486                           ; _getint: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16487  000482  52E5               	movf	postdec1,f,c
 16488  000484  52E5               	movf	postdec1,f,c
 16489  000486  52E5               	movf	postdec1,f,c
 16490  000488  52E5               	movf	postdec1,f,c
 16491  00048A  0012               	return		;funcret
 16492  00048C                     __end_of_getint:
 16493                           	opt callstack 0
 16494                           
 16495 ;; *************** function _getname *****************
 16496 ;; Defined at:
 16497 ;;		line 82 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16498 ;; Parameters:    Size  Location     Type
 16499 ;;  d               2  [STACK] PTR unsigned char 
 16500 ;;		 -> dst_name(7), std_name(7), 
 16501 ;;  p               2  [STACK] PTR PTR const unsigned c
 16502 ;;		 -> s(2), 
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;  i               2  [STACK] int 
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  1  [STACK] void 
 16507 ;; Registers used:
 16508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11,
      + tblptrl, tblptrh, tblptru
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/39
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16518 ;;Total ram usage:        0 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; Hardware stack levels required when called:   15
 16521 ;; This function calls:
 16522 ;;		Nothing
 16523 ;; This function is called by:
 16524 ;;		_do_tzset
 16525 ;; This function uses a reentrant model
 16526 ;;
 16527                           
 16528                           	psect	text48
 16529  01B030                     __ptext48:
 16530                           	opt callstack 0
 16531  01B030                     _getname:
 16532                           	opt callstack 0
 16533                           
 16534                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16535  01B030  52E6               	movf	postinc1,f,c
 16536  01B032  52E6               	movf	postinc1,f,c
 16537                           
 16538                           ;stkvar	_p @ sp[(-2)+-4]
 16539                           
 16540                           ;incstack = 0
 16541  01B034  0EFA               	movlw	-6
 16542  01B036  006F FF8F FFD9     	movff	plusw1,fsr2l
 16543  01B03C  0EFB               	movlw	-5
 16544  01B03E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16545  01B044  006F FF7B FFF6     	movff	postinc2,tblptrl
 16546  01B04A  006F FF77 FFF7     	movff	postdec2,tblptrh
 16547  01B050                     	if	0	;tblptru may be non-zero
 16548  01B050                     	endif
 16549  01B050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16550  01B050  0E00               	movlw	low (__mediumconst shr (0+16))
 16551  01B052  6EF8               	movwf	tblptru,c
 16552  01B054                     	endif
 16553  01B054  0008               	tblrd		*
 16554  01B056  50F5               	movf	tablat,w,c
 16555  01B058  0A3C               	xorlw	60
 16556  01B05A  A4D8               	btfss	status,2,c
 16557  01B05C  D09E               	goto	l16311
 16558                           
 16559                           ;stkvar	_p @ sp[(-2)+-4]
 16560  01B05E  0EFA               	movlw	-6
 16561  01B060  006F FF8F FFD9     	movff	plusw1,fsr2l
 16562  01B066  0EFB               	movlw	-5
 16563  01B068  006F FF8F FFDA     	movff	plusw1,fsr2h
 16564  01B06E  2ADE               	incf	postinc2,f,c
 16565  01B070  0E00               	movlw	0
 16566  01B072  22DD               	addwfc	postdec2,f,c
 16567                           
 16568                           ;stkvar	_i @ sp[(-2)+0]
 16569  01B074  0EFE               	movlw	-2
 16570  01B076  6AE3               	clrf	plusw1,c
 16571  01B078  0EFF               	movlw	-1
 16572  01B07A  6AE3               	clrf	plusw1,c
 16573  01B07C  D04D               	goto	l16305
 16574  01B07E                     l16301:
 16575                           
 16576                           ;stkvar	_i @ sp[(-2)+0]
 16577  01B07E  0EFE               	movlw	-2
 16578  01B080  006F FF8C  F034    	movff	plusw1,btemp+10
 16579  01B086  0EFF               	movlw	-1
 16580  01B088  006F FF8C  F035    	movff	plusw1,btemp+11
 16581                           
 16582                           ;stkvar	_p @ sp[(-2)+-4]
 16583  01B08E  0EFA               	movlw	-6
 16584  01B090  006F FF8F FFD9     	movff	plusw1,fsr2l
 16585  01B096  0EFB               	movlw	-5
 16586  01B098  006F FF8F FFDA     	movff	plusw1,fsr2h
 16587  01B09E  006F FF78  F032    	movff	postinc2,btemp+8
 16588  01B0A4  006F FF74  F033    	movff	postdec2,btemp+9
 16589  01B0AA  5034               	movf	(btemp+10)^0,w,c
 16590  01B0AC  2632               	addwf	(btemp+8)^0,f,c
 16591  01B0AE  5035               	movf	(btemp+11)^0,w,c
 16592  01B0B0  2233               	addwfc	(btemp+9)^0,f,c
 16593  01B0B2  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16594  01B0B8  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16595  01B0BE                     	if	0	;tblptru may be non-zero
 16596  01B0BE                     	endif
 16597  01B0BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16598  01B0BE  0E00               	movlw	low (__mediumconst shr (0+16))
 16599  01B0C0  6EF8               	movwf	tblptru,c
 16600  01B0C2                     	endif
 16601                           
 16602                           ;stkvar	_i @ sp[(-2)+0]
 16603  01B0C2  0EFE               	movlw	-2
 16604  01B0C4  006F FF8C  F034    	movff	plusw1,btemp+10
 16605  01B0CA  0EFF               	movlw	-1
 16606  01B0CC  006F FF8C  F035    	movff	plusw1,btemp+11
 16607                           
 16608                           ;stkvar	_d @ sp[(-2)+-2]
 16609  01B0D2  0EFC               	movlw	-4
 16610  01B0D4  006F FF8C  F032    	movff	plusw1,btemp+8
 16611  01B0DA  0EFD               	movlw	-3
 16612  01B0DC  006F FF8C  F033    	movff	plusw1,btemp+9
 16613  01B0E2  5034               	movf	(btemp+10)^0,w,c
 16614  01B0E4  2432               	addwf	(btemp+8)^0,w,c
 16615  01B0E6  6ED9               	movwf	fsr2l,c
 16616  01B0E8  5035               	movf	(btemp+11)^0,w,c
 16617  01B0EA  2033               	addwfc	(btemp+9)^0,w,c
 16618  01B0EC  6EDA               	movwf	fsr2h,c
 16619  01B0EE  0008               	tblrd		*
 16620  01B0F0  006F FFD7 FFDF     	movff	tablat,indf2
 16621                           
 16622                           ;stkvar	_i @ sp[(-2)+0]
 16623  01B0F6  0EFE               	movlw	-2
 16624  01B0F8  50E3               	movf	plusw1,w,c
 16625  01B0FA  0F01               	addlw	1
 16626  01B0FC  6E2A               	movwf	btemp^0,c
 16627  01B0FE  0EFE               	movlw	-2
 16628  01B100  0060  F0AB  FFE3   	movff	btemp,plusw1
 16629  01B106  6A2A               	clrf	btemp^0,c
 16630  01B108  0EFF               	movlw	-1
 16631  01B10A  50E3               	movf	plusw1,w,c
 16632  01B10C  202A               	addwfc	btemp^0,w,c
 16633  01B10E  6E2A               	movwf	btemp^0,c
 16634  01B110  0EFF               	movlw	-1
 16635  01B112  0060  F0AB  FFE3   	movff	btemp,plusw1
 16636  01B118                     l16305:
 16637                           
 16638                           ;stkvar	_i @ sp[(-2)+0]
 16639  01B118  0EFE               	movlw	-2
 16640  01B11A  006F FF8C  F034    	movff	plusw1,btemp+10
 16641  01B120  0EFF               	movlw	-1
 16642  01B122  006F FF8C  F035    	movff	plusw1,btemp+11
 16643                           
 16644                           ;stkvar	_p @ sp[(-2)+-4]
 16645  01B128  0EFA               	movlw	-6
 16646  01B12A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16647  01B130  0EFB               	movlw	-5
 16648  01B132  006F FF8F FFDA     	movff	plusw1,fsr2h
 16649  01B138  006F FF78  F032    	movff	postinc2,btemp+8
 16650  01B13E  006F FF74  F033    	movff	postdec2,btemp+9
 16651  01B144  5034               	movf	(btemp+10)^0,w,c
 16652  01B146  2632               	addwf	(btemp+8)^0,f,c
 16653  01B148  5035               	movf	(btemp+11)^0,w,c
 16654  01B14A  2233               	addwfc	(btemp+9)^0,f,c
 16655  01B14C  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16656  01B152  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16657  01B158                     	if	0	;tblptru may be non-zero
 16658  01B158                     	endif
 16659  01B158                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16660  01B158  0E00               	movlw	low (__mediumconst shr (0+16))
 16661  01B15A  6EF8               	movwf	tblptru,c
 16662  01B15C                     	endif
 16663  01B15C  0008               	tblrd		*
 16664  01B15E  50F5               	movf	tablat,w,c
 16665  01B160  0A3E               	xorlw	62
 16666  01B162  B4D8               	btfsc	status,2,c
 16667  01B164  D00E               	goto	u15800
 16668                           
 16669                           ;stkvar	_i @ sp[(-2)+0]
 16670  01B166  0EFF               	movlw	-1
 16671  01B168  BEE3               	btfsc	plusw1,7,c
 16672  01B16A  D789               	goto	l16301
 16673  01B16C  0EFF               	movlw	-1
 16674  01B16E  50E3               	movf	plusw1,w,c
 16675  01B170  E108               	bnz	u15800
 16676  01B172  0EFE               	movlw	-2
 16677  01B174  006F FF8C  F02A    	movff	plusw1,btemp
 16678  01B17A  0E06               	movlw	6
 16679  01B17C  5E2A               	subwf	btemp^0,f,c
 16680  01B17E  A0D8               	btfss	status,0,c
 16681  01B180  D77E               	goto	l16301
 16682  01B182                     u15800:
 16683                           
 16684                           ;stkvar	_p @ sp[(-2)+-4]
 16685  01B182  0EFA               	movlw	-6
 16686  01B184  006F FF8F FFD9     	movff	plusw1,fsr2l
 16687  01B18A  0EFB               	movlw	-5
 16688  01B18C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16689  01B192  2ADE               	incf	postinc2,f,c
 16690  01B194  0E00               	movlw	0
 16691  01B196  22DD               	addwfc	postdec2,f,c
 16692  01B198  D098               	goto	u15820
 16693  01B19A                     l16311:
 16694                           
 16695                           ;stkvar	_i @ sp[(-2)+0]
 16696  01B19A  0EFE               	movlw	-2
 16697  01B19C  6AE3               	clrf	plusw1,c
 16698  01B19E  0EFF               	movlw	-1
 16699  01B1A0  6AE3               	clrf	plusw1,c
 16700  01B1A2  D04D               	goto	l16317
 16701  01B1A4                     l16313:
 16702                           
 16703                           ;stkvar	_i @ sp[(-2)+0]
 16704  01B1A4  0EFE               	movlw	-2
 16705  01B1A6  006F FF8C  F034    	movff	plusw1,btemp+10
 16706  01B1AC  0EFF               	movlw	-1
 16707  01B1AE  006F FF8C  F035    	movff	plusw1,btemp+11
 16708                           
 16709                           ;stkvar	_p @ sp[(-2)+-4]
 16710  01B1B4  0EFA               	movlw	-6
 16711  01B1B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16712  01B1BC  0EFB               	movlw	-5
 16713  01B1BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16714  01B1C4  006F FF78  F032    	movff	postinc2,btemp+8
 16715  01B1CA  006F FF74  F033    	movff	postdec2,btemp+9
 16716  01B1D0  5034               	movf	(btemp+10)^0,w,c
 16717  01B1D2  2632               	addwf	(btemp+8)^0,f,c
 16718  01B1D4  5035               	movf	(btemp+11)^0,w,c
 16719  01B1D6  2233               	addwfc	(btemp+9)^0,f,c
 16720  01B1D8  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16721  01B1DE  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16722  01B1E4                     	if	0	;tblptru may be non-zero
 16723  01B1E4                     	endif
 16724  01B1E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16725  01B1E4  0E00               	movlw	low (__mediumconst shr (0+16))
 16726  01B1E6  6EF8               	movwf	tblptru,c
 16727  01B1E8                     	endif
 16728                           
 16729                           ;stkvar	_i @ sp[(-2)+0]
 16730  01B1E8  0EFE               	movlw	-2
 16731  01B1EA  006F FF8C  F034    	movff	plusw1,btemp+10
 16732  01B1F0  0EFF               	movlw	-1
 16733  01B1F2  006F FF8C  F035    	movff	plusw1,btemp+11
 16734                           
 16735                           ;stkvar	_d @ sp[(-2)+-2]
 16736  01B1F8  0EFC               	movlw	-4
 16737  01B1FA  006F FF8C  F032    	movff	plusw1,btemp+8
 16738  01B200  0EFD               	movlw	-3
 16739  01B202  006F FF8C  F033    	movff	plusw1,btemp+9
 16740  01B208  5034               	movf	(btemp+10)^0,w,c
 16741  01B20A  2432               	addwf	(btemp+8)^0,w,c
 16742  01B20C  6ED9               	movwf	fsr2l,c
 16743  01B20E  5035               	movf	(btemp+11)^0,w,c
 16744  01B210  2033               	addwfc	(btemp+9)^0,w,c
 16745  01B212  6EDA               	movwf	fsr2h,c
 16746  01B214  0008               	tblrd		*
 16747  01B216  006F FFD7 FFDF     	movff	tablat,indf2
 16748                           
 16749                           ;stkvar	_i @ sp[(-2)+0]
 16750  01B21C  0EFE               	movlw	-2
 16751  01B21E  50E3               	movf	plusw1,w,c
 16752  01B220  0F01               	addlw	1
 16753  01B222  6E2A               	movwf	btemp^0,c
 16754  01B224  0EFE               	movlw	-2
 16755  01B226  0060  F0AB  FFE3   	movff	btemp,plusw1
 16756  01B22C  6A2A               	clrf	btemp^0,c
 16757  01B22E  0EFF               	movlw	-1
 16758  01B230  50E3               	movf	plusw1,w,c
 16759  01B232  202A               	addwfc	btemp^0,w,c
 16760  01B234  6E2A               	movwf	btemp^0,c
 16761  01B236  0EFF               	movlw	-1
 16762  01B238  0060  F0AB  FFE3   	movff	btemp,plusw1
 16763  01B23E                     l16317:
 16764  01B23E  0E9F               	movlw	159
 16765  01B240  6E34               	movwf	(btemp+10)^0,c
 16766  01B242  0EFF               	movlw	255
 16767  01B244  6E35               	movwf	(btemp+11)^0,c
 16768                           
 16769                           ;stkvar	_i @ sp[(-2)+0]
 16770  01B246  0EFE               	movlw	-2
 16771  01B248  006F FF8C  F032    	movff	plusw1,btemp+8
 16772  01B24E  0EFF               	movlw	-1
 16773  01B250  006F FF8C  F033    	movff	plusw1,btemp+9
 16774                           
 16775                           ;stkvar	_p @ sp[(-2)+-4]
 16776  01B256  0EFA               	movlw	-6
 16777  01B258  006F FF8F FFD9     	movff	plusw1,fsr2l
 16778  01B25E  0EFB               	movlw	-5
 16779  01B260  006F FF8F FFDA     	movff	plusw1,fsr2h
 16780  01B266  006F FF78  F030    	movff	postinc2,btemp+6
 16781  01B26C  006F FF74  F031    	movff	postdec2,btemp+7
 16782  01B272  5032               	movf	(btemp+8)^0,w,c
 16783  01B274  2630               	addwf	(btemp+6)^0,f,c
 16784  01B276  5033               	movf	(btemp+9)^0,w,c
 16785  01B278  2231               	addwfc	(btemp+7)^0,f,c
 16786  01B27A  0060  F0C3  FFF6   	movff	btemp+6,tblptrl
 16787  01B280  0060  F0C7  FFF7   	movff	btemp+7,tblptrh
 16788  01B286                     	if	0	;tblptru may be non-zero
 16789  01B286                     	endif
 16790  01B286                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16791  01B286  0E00               	movlw	low (__mediumconst shr (0+16))
 16792  01B288  6EF8               	movwf	tblptru,c
 16793  01B28A                     	endif
 16794  01B28A  0008               	tblrd		*
 16795  01B28C  50F5               	movf	tablat,w,c
 16796  01B28E  6E32               	movwf	(btemp+8)^0,c
 16797  01B290  6A33               	clrf	(btemp+9)^0,c
 16798  01B292  0E20               	movlw	32
 16799  01B294  1232               	iorwf	(btemp+8)^0,f,c
 16800  01B296  0E00               	movlw	0
 16801  01B298  1233               	iorwf	(btemp+9)^0,f,c
 16802  01B29A  5034               	movf	(btemp+10)^0,w,c
 16803  01B29C  2632               	addwf	(btemp+8)^0,f,c
 16804  01B29E  5035               	movf	(btemp+11)^0,w,c
 16805  01B2A0  2233               	addwfc	(btemp+9)^0,f,c
 16806  01B2A2  5033               	movf	(btemp+9)^0,w,c
 16807  01B2A4  E112               	bnz	l16321
 16808  01B2A6  0E1A               	movlw	26
 16809  01B2A8  5C32               	subwf	(btemp+8)^0,w,c
 16810  01B2AA  B0D8               	btfsc	status,0,c
 16811  01B2AC  D00E               	goto	u15820
 16812                           
 16813                           ;stkvar	_i @ sp[(-2)+0]
 16814  01B2AE  0EFF               	movlw	-1
 16815  01B2B0  BEE3               	btfsc	plusw1,7,c
 16816  01B2B2  D778               	goto	l16313
 16817  01B2B4  0EFF               	movlw	-1
 16818  01B2B6  50E3               	movf	plusw1,w,c
 16819  01B2B8  E108               	bnz	u15820
 16820  01B2BA  0EFE               	movlw	-2
 16821  01B2BC  006F FF8C  F02A    	movff	plusw1,btemp
 16822  01B2C2  0E06               	movlw	6
 16823  01B2C4  5E2A               	subwf	btemp^0,f,c
 16824  01B2C6  A0D8               	btfss	status,0,c
 16825  01B2C8  D76D               	goto	l16313
 16826  01B2CA                     u15820:
 16827  01B2CA                     l16321:
 16828                           
 16829                           ;stkvar	_i @ sp[(-2)+0]
 16830  01B2CA  0EFE               	movlw	-2
 16831  01B2CC  006F FF8C  F034    	movff	plusw1,btemp+10
 16832  01B2D2  0EFF               	movlw	-1
 16833  01B2D4  006F FF8C  F035    	movff	plusw1,btemp+11
 16834                           
 16835                           ;stkvar	_p @ sp[(-2)+-4]
 16836  01B2DA  0EFA               	movlw	-6
 16837  01B2DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 16838  01B2E2  0EFB               	movlw	-5
 16839  01B2E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 16840  01B2EA  5034               	movf	(btemp+10)^0,w,c
 16841  01B2EC  26DE               	addwf	postinc2,f,c
 16842  01B2EE  5035               	movf	(btemp+11)^0,w,c
 16843  01B2F0  22DD               	addwfc	postdec2,f,c
 16844                           
 16845                           ;stkvar	_i @ sp[(-2)+0]
 16846  01B2F2  0EFE               	movlw	-2
 16847  01B2F4  006F FF8C  F034    	movff	plusw1,btemp+10
 16848  01B2FA  0EFF               	movlw	-1
 16849  01B2FC  006F FF8C  F035    	movff	plusw1,btemp+11
 16850                           
 16851                           ;stkvar	_d @ sp[(-2)+-2]
 16852  01B302  0EFC               	movlw	-4
 16853  01B304  006F FF8C  F032    	movff	plusw1,btemp+8
 16854  01B30A  0EFD               	movlw	-3
 16855  01B30C  006F FF8C  F033    	movff	plusw1,btemp+9
 16856  01B312  5034               	movf	(btemp+10)^0,w,c
 16857  01B314  2432               	addwf	(btemp+8)^0,w,c
 16858  01B316  6ED9               	movwf	fsr2l,c
 16859  01B318  5035               	movf	(btemp+11)^0,w,c
 16860  01B31A  2033               	addwfc	(btemp+9)^0,w,c
 16861  01B31C  6EDA               	movwf	fsr2h,c
 16862  01B31E  0E00               	movlw	0
 16863  01B320  6EDF               	movwf	indf2,c
 16864                           
 16865                           ; _getname: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16866  01B322  0EFA               	movlw	250
 16867  01B324  26E1               	addwf	fsr1l,f,c
 16868  01B326  0EFF               	movlw	255
 16869  01B328  22E2               	addwfc	fsr1h,f,c
 16870  01B32A  0012               	return		;funcret
 16871  01B32C                     __end_of_getname:
 16872                           	opt callstack 0
 16873                           
 16874 ;; *************** function ___secs_to_tm *****************
 16875 ;; Defined at:
 16876 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__secs_to_tm.c"
 16877 ;; Parameters:    Size  Location     Type
 16878 ;;  t               8  [STACK] long long 
 16879 ;;  tm              2  [STACK] PTR struct tm
 16880 ;;		 -> localtime@tm(24), 
 16881 ;; Auto vars:     Size  Location     Type
 16882 ;;  years           8  [STACK] long long 
 16883 ;;  days            8  [STACK] long long 
 16884 ;;  secs            8  [STACK] long long 
 16885 ;;  remdays         4  [STACK] long 
 16886 ;;  q_cycles        4  [STACK] long 
 16887 ;;  c_cycles        4  [STACK] long 
 16888 ;;  remyears        4  [STACK] long 
 16889 ;;  remsecs         4  [STACK] long 
 16890 ;;  qc_cycles       4  [STACK] long 
 16891 ;;  months          2  [STACK] int 
 16892 ;;  leap            2  [STACK] int 
 16893 ;;  yday            2  [STACK] int 
 16894 ;;  wday            2  [STACK] int 
 16895 ;; Return value:  Size  Location     Type
 16896 ;;                  4  [STACK] long 
 16897 ;; Registers used:
 16898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru
 16899 ;; Tracked objects:
 16900 ;;		On entry : 0/39
 16901 ;;		On exit  : 0/0
 16902 ;;		Unchanged: 0/0
 16903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16908 ;;Total ram usage:        0 bytes
 16909 ;; Hardware stack levels used:    1
 16910 ;; Hardware stack levels required when called:   16
 16911 ;; This function calls:
 16912 ;;		___aldiv
 16913 ;;		___almod
 16914 ;;		___aodiv
 16915 ;;		___aomod
 16916 ;;		___lmul
 16917 ;;		___omul
 16918 ;; This function is called by:
 16919 ;;		___localtime_r
 16920 ;; This function uses a reentrant model
 16921 ;;
 16922                           
 16923                           	psect	text49
 16924  01279A                     __ptext49:
 16925                           	opt callstack 0
 16926  01279A                     ___secs_to_tm:
 16927                           	opt callstack 0
 16928                           
 16929                           ; autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16930  01279A  0E39               	movlw	57
 16931  01279C  26E1               	addwf	fsr1l,f,c
 16932  01279E  0E00               	movlw	0
 16933  0127A0  22E2               	addwfc	fsr1h,f,c
 16934                           
 16935                           ;stkvar	_t @ sp[(-57)+-8]
 16936                           
 16937                           ;incstack = 0
 16938  0127A2  0EC6               	movlw	-58
 16939  0127A4  AEE3               	btfss	plusw1,7,c
 16940  0127A6  D026               	goto	u16440
 16941  0127A8  0EC1               	movlw	-63
 16942  0127AA  006F FF8C  F02A    	movff	plusw1,btemp
 16943  0127B0  0E80               	movlw	128
 16944  0127B2  5E2A               	subwf	btemp^0,f,c
 16945  0127B4  0EC2               	movlw	-62
 16946  0127B6  006F FF8C  F02A    	movff	plusw1,btemp
 16947  0127BC  0EBD               	movlw	189
 16948  0127BE  5A2A               	subwfb	btemp^0,f,c
 16949  0127C0  0EC3               	movlw	-61
 16950  0127C2  006F FF8C  F02A    	movff	plusw1,btemp
 16951  0127C8  0E0E               	movlw	14
 16952  0127CA  5A2A               	subwfb	btemp^0,f,c
 16953  0127CC  0EC4               	movlw	-60
 16954  0127CE  006F FF8C  F02A    	movff	plusw1,btemp
 16955  0127D4  0EFF               	movlw	255
 16956  0127D6  5A2A               	subwfb	btemp^0,f,c
 16957  0127D8  0EC5               	movlw	-59
 16958  0127DA  006F FF8C  F02A    	movff	plusw1,btemp
 16959  0127E0  0EFF               	movlw	255
 16960  0127E2  5A2A               	subwfb	btemp^0,f,c
 16961  0127E4  0EC6               	movlw	-58
 16962  0127E6  006F FF8C  F02A    	movff	plusw1,btemp
 16963  0127EC  0EFF               	movlw	255
 16964  0127EE  5A2A               	subwfb	btemp^0,f,c
 16965  0127F0  A0D8               	btfss	status,0,c
 16966  0127F2  D028               	goto	u16450
 16967  0127F4                     u16440:
 16968                           
 16969                           ;stkvar	_t @ sp[(-57)+-8]
 16970  0127F4  0EC6               	movlw	-58
 16971  0127F6  BEE3               	btfsc	plusw1,7,c
 16972  0127F8  D02F               	goto	l16889
 16973  0127FA  0EC6               	movlw	-58
 16974  0127FC  50E3               	movf	plusw1,w,c
 16975  0127FE  E122               	bnz	u16450
 16976  012800  0EC5               	movlw	-59
 16977  012802  50E3               	movf	plusw1,w,c
 16978  012804  E11F               	bnz	u16450
 16979  012806  0EC4               	movlw	-60
 16980  012808  50E3               	movf	plusw1,w,c
 16981  01280A  E11C               	bnz	u16450
 16982  01280C  0EBF               	movlw	-65
 16983  01280E  04E3               	decf	plusw1,w,c
 16984  012810  0EC0               	movlw	-64
 16985  012812  006F FF8C  F02A    	movff	plusw1,btemp
 16986  012818  0E7B               	movlw	123
 16987  01281A  5A2A               	subwfb	btemp^0,f,c
 16988  01281C  0EC1               	movlw	-63
 16989  01281E  006F FF8C  F02A    	movff	plusw1,btemp
 16990  012824  0E9D               	movlw	157
 16991  012826  5A2A               	subwfb	btemp^0,f,c
 16992  012828  0EC2               	movlw	-62
 16993  01282A  006F FF8C  F02A    	movff	plusw1,btemp
 16994  012830  0E40               	movlw	64
 16995  012832  5A2A               	subwfb	btemp^0,f,c
 16996  012834  0EC3               	movlw	-61
 16997  012836  006F FF8C  F02A    	movff	plusw1,btemp
 16998  01283C  0EF1               	movlw	241
 16999  01283E  5A2A               	subwfb	btemp^0,f,c
 17000  012840  A0D8               	btfss	status,0,c
 17001  012842  D00A               	goto	l16889
 17002  012844                     u16450:
 17003  012844  0EFF               	movlw	255
 17004  012846  6E2A               	movwf	btemp^0,c
 17005  012848  0EFF               	movlw	255
 17006  01284A  6E2B               	movwf	(btemp+1)^0,c
 17007  01284C  0EFF               	movlw	255
 17008  01284E  6E2C               	movwf	(btemp+2)^0,c
 17009  012850  0EFF               	movlw	255
 17010  012852  6E2D               	movwf	(btemp+3)^0,c
 17011  012854  EF31  F09C         	goto	l3858
 17012  012858                     l16889:
 17013                           
 17014                           ;stkvar	_t @ sp[(-57)+-8]
 17015  012858  0EBF               	movlw	-65
 17016  01285A  50E3               	movf	plusw1,w,c
 17017  01285C  0F80               	addlw	128
 17018  01285E  6E3A               	movwf	(btemp+16)^0,c
 17019  012860  0EC0               	movlw	-64
 17020  012862  006F FF8C  F03B    	movff	plusw1,btemp+17
 17021  012868  0EA2               	movlw	162
 17022  01286A  223B               	addwfc	(btemp+17)^0,f,c
 17023  01286C  0EC1               	movlw	-63
 17024  01286E  006F FF8C  F03C    	movff	plusw1,btemp+18
 17025  012874  0E43               	movlw	67
 17026  012876  223C               	addwfc	(btemp+18)^0,f,c
 17027  012878  0EC2               	movlw	-62
 17028  01287A  006F FF8C  F03D    	movff	plusw1,btemp+19
 17029  012880  0EC7               	movlw	199
 17030  012882  223D               	addwfc	(btemp+19)^0,f,c
 17031  012884  0EC3               	movlw	-61
 17032  012886  006F FF8C  F03E    	movff	plusw1,btemp+20
 17033  01288C  0EFF               	movlw	255
 17034  01288E  223E               	addwfc	(btemp+20)^0,f,c
 17035  012890  0EC4               	movlw	-60
 17036  012892  006F FF8C  F03F    	movff	plusw1,btemp+21
 17037  012898  0EFF               	movlw	255
 17038  01289A  223F               	addwfc	(btemp+21)^0,f,c
 17039  01289C  0EC5               	movlw	-59
 17040  01289E  006F FF8C  F040    	movff	plusw1,btemp+22
 17041  0128A4  0EFF               	movlw	255
 17042  0128A6  2240               	addwfc	(btemp+22)^0,f,c
 17043  0128A8  0EC6               	movlw	-58
 17044  0128AA  006F FF8C  F041    	movff	plusw1,btemp+23
 17045  0128B0  0EFF               	movlw	255
 17046  0128B2  2241               	addwfc	(btemp+23)^0,f,c
 17047                           
 17048                           ;stkvar	_secs @ sp[(-57)+17]
 17049  0128B4  0ED8               	movlw	-40
 17050  0128B6  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17051  0128BC  0ED9               	movlw	-39
 17052  0128BE  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17053  0128C4  0EDA               	movlw	-38
 17054  0128C6  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17055  0128CC  0EDB               	movlw	-37
 17056  0128CE  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17057  0128D4  0EDC               	movlw	-36
 17058  0128D6  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17059  0128DC  0EDD               	movlw	-35
 17060  0128DE  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17061  0128E4  0EDE               	movlw	-34
 17062  0128E6  0060  F103  FFE3   	movff	btemp+22,plusw1
 17063  0128EC  0EDF               	movlw	-33
 17064  0128EE  0060  F107  FFE3   	movff	btemp+23,plusw1
 17065  0128F4  0E80               	movlw	128
 17066  0128F6  6EE6               	movwf	postinc1,c
 17067  0128F8  0E51               	movlw	81
 17068  0128FA  6EE6               	movwf	postinc1,c
 17069  0128FC  0E01               	movlw	1
 17070  0128FE  6EE6               	movwf	postinc1,c
 17071  012900  0E00               	movlw	0
 17072  012902  6EE6               	movwf	postinc1,c
 17073  012904  0E00               	movlw	0
 17074  012906  6EE6               	movwf	postinc1,c
 17075  012908  0E00               	movlw	0
 17076  01290A  6EE6               	movwf	postinc1,c
 17077  01290C  0E00               	movlw	0
 17078  01290E  6EE6               	movwf	postinc1,c
 17079  012910  0E00               	movlw	0
 17080  012912  6EE6               	movwf	postinc1,c
 17081                           
 17082                           ;stkvar	_secs @ sp[(-65)+17]
 17083  012914  50E1               	movf	fsr1l,w,c
 17084  012916  0FD0               	addlw	-48
 17085  012918  6ED9               	movwf	fsr2l,c
 17086  01291A  50E2               	movf	fsr1h,w,c
 17087  01291C  6EDA               	movwf	fsr2h,c
 17088  01291E  0EFF               	movlw	255
 17089  012920  22DA               	addwfc	fsr2h,f,c
 17090  012922  006F FF7B FFE6     	movff	postinc2,postinc1
 17091  012928  006F FF7B FFE6     	movff	postinc2,postinc1
 17092  01292E  006F FF7B FFE6     	movff	postinc2,postinc1
 17093  012934  006F FF7B FFE6     	movff	postinc2,postinc1
 17094  01293A  006F FF7B FFE6     	movff	postinc2,postinc1
 17095  012940  006F FF7B FFE6     	movff	postinc2,postinc1
 17096  012946  006F FF7B FFE6     	movff	postinc2,postinc1
 17097  01294C  006F FF7B FFE6     	movff	postinc2,postinc1
 17098  012952  ECC4  F0E1         	call	___aodiv	;wreg free
 17099  012956  52E5               	movf	postdec1,f,c
 17100  012958  006F FF9C  F041    	movff	indf1,btemp+23
 17101  01295E  52E5               	movf	postdec1,f,c
 17102  012960  006F FF9C  F040    	movff	indf1,btemp+22
 17103  012966  52E5               	movf	postdec1,f,c
 17104  012968  006F FF9C  F03F    	movff	indf1,btemp+21
 17105  01296E  52E5               	movf	postdec1,f,c
 17106  012970  006F FF9C  F03E    	movff	indf1,btemp+20
 17107  012976  52E5               	movf	postdec1,f,c
 17108  012978  006F FF9C  F03D    	movff	indf1,btemp+19
 17109  01297E  52E5               	movf	postdec1,f,c
 17110  012980  006F FF9C  F03C    	movff	indf1,btemp+18
 17111  012986  52E5               	movf	postdec1,f,c
 17112  012988  006F FF9C  F03B    	movff	indf1,btemp+17
 17113  01298E  52E5               	movf	postdec1,f,c
 17114  012990  006F FF9C  F03A    	movff	indf1,btemp+16
 17115  012996  0EF8               	movlw	248
 17116  012998  26E1               	addwf	fsr1l,f,c
 17117  01299A  0EFF               	movlw	255
 17118  01299C  22E2               	addwfc	fsr1h,f,c
 17119                           
 17120                           ;stkvar	_days @ sp[(-57)+9]
 17121  01299E  0ED0               	movlw	-48
 17122  0129A0  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17123  0129A6  0ED1               	movlw	-47
 17124  0129A8  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17125  0129AE  0ED2               	movlw	-46
 17126  0129B0  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17127  0129B6  0ED3               	movlw	-45
 17128  0129B8  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17129  0129BE  0ED4               	movlw	-44
 17130  0129C0  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17131  0129C6  0ED5               	movlw	-43
 17132  0129C8  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17133  0129CE  0ED6               	movlw	-42
 17134  0129D0  0060  F103  FFE3   	movff	btemp+22,plusw1
 17135  0129D6  0ED7               	movlw	-41
 17136  0129D8  0060  F107  FFE3   	movff	btemp+23,plusw1
 17137  0129DE  0E80               	movlw	128
 17138  0129E0  6EE6               	movwf	postinc1,c
 17139  0129E2  0E51               	movlw	81
 17140  0129E4  6EE6               	movwf	postinc1,c
 17141  0129E6  0E01               	movlw	1
 17142  0129E8  6EE6               	movwf	postinc1,c
 17143  0129EA  0E00               	movlw	0
 17144  0129EC  6EE6               	movwf	postinc1,c
 17145  0129EE  0E00               	movlw	0
 17146  0129F0  6EE6               	movwf	postinc1,c
 17147  0129F2  0E00               	movlw	0
 17148  0129F4  6EE6               	movwf	postinc1,c
 17149  0129F6  0E00               	movlw	0
 17150  0129F8  6EE6               	movwf	postinc1,c
 17151  0129FA  0E00               	movlw	0
 17152  0129FC  6EE6               	movwf	postinc1,c
 17153                           
 17154                           ;stkvar	_secs @ sp[(-65)+17]
 17155  0129FE  50E1               	movf	fsr1l,w,c
 17156  012A00  0FD0               	addlw	-48
 17157  012A02  6ED9               	movwf	fsr2l,c
 17158  012A04  50E2               	movf	fsr1h,w,c
 17159  012A06  6EDA               	movwf	fsr2h,c
 17160  012A08  0EFF               	movlw	255
 17161  012A0A  22DA               	addwfc	fsr2h,f,c
 17162  012A0C  006F FF7B FFE6     	movff	postinc2,postinc1
 17163  012A12  006F FF7B FFE6     	movff	postinc2,postinc1
 17164  012A18  006F FF7B FFE6     	movff	postinc2,postinc1
 17165  012A1E  006F FF7B FFE6     	movff	postinc2,postinc1
 17166  012A24  006F FF7B FFE6     	movff	postinc2,postinc1
 17167  012A2A  006F FF7B FFE6     	movff	postinc2,postinc1
 17168  012A30  006F FF7B FFE6     	movff	postinc2,postinc1
 17169  012A36  006F FF7B FFE6     	movff	postinc2,postinc1
 17170  012A3C  ECB0  F0E7         	call	___aomod	;wreg free
 17171  012A40  52E5               	movf	postdec1,f,c
 17172  012A42  006F FF9C  F041    	movff	indf1,btemp+23
 17173  012A48  52E5               	movf	postdec1,f,c
 17174  012A4A  006F FF9C  F040    	movff	indf1,btemp+22
 17175  012A50  52E5               	movf	postdec1,f,c
 17176  012A52  006F FF9C  F03F    	movff	indf1,btemp+21
 17177  012A58  52E5               	movf	postdec1,f,c
 17178  012A5A  006F FF9C  F03E    	movff	indf1,btemp+20
 17179  012A60  52E5               	movf	postdec1,f,c
 17180  012A62  006F FF9C  F03D    	movff	indf1,btemp+19
 17181  012A68  52E5               	movf	postdec1,f,c
 17182  012A6A  006F FF9C  F03C    	movff	indf1,btemp+18
 17183  012A70  52E5               	movf	postdec1,f,c
 17184  012A72  006F FF9C  F03B    	movff	indf1,btemp+17
 17185  012A78  52E5               	movf	postdec1,f,c
 17186  012A7A  006F FF9C  F03A    	movff	indf1,btemp+16
 17187  012A80  0EF8               	movlw	248
 17188  012A82  26E1               	addwf	fsr1l,f,c
 17189  012A84  0EFF               	movlw	255
 17190  012A86  22E2               	addwfc	fsr1h,f,c
 17191  012A88  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17192  012A8E  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17193  012A94  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17194  012A9A  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17195                           
 17196                           ;stkvar	_remsecs @ sp[(-57)+41]
 17197  012AA0  0EF0               	movlw	-16
 17198  012AA2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17199  012AA8  0EF1               	movlw	-15
 17200  012AAA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17201  012AB0  0EF2               	movlw	-14
 17202  012AB2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17203  012AB8  0EF3               	movlw	-13
 17204  012ABA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17205                           
 17206                           ;stkvar	_remsecs @ sp[(-57)+41]
 17207  012AC0  0EF3               	movlw	-13
 17208  012AC2  AEE3               	btfss	plusw1,7,c
 17209  012AC4  D01F               	goto	l16901
 17210                           
 17211                           ;stkvar	_remsecs @ sp[(-57)+41]
 17212  012AC6  50E1               	movf	fsr1l,w,c
 17213  012AC8  0FF0               	addlw	-16
 17214  012ACA  6ED9               	movwf	fsr2l,c
 17215  012ACC  50E2               	movf	fsr1h,w,c
 17216  012ACE  6EDA               	movwf	fsr2h,c
 17217  012AD0  0EFF               	movlw	255
 17218  012AD2  22DA               	addwfc	fsr2h,f,c
 17219  012AD4  0E80               	movlw	128
 17220  012AD6  26DE               	addwf	postinc2,f,c
 17221  012AD8  0E51               	movlw	81
 17222  012ADA  22DE               	addwfc	postinc2,f,c
 17223  012ADC  0E01               	movlw	1
 17224  012ADE  22DE               	addwfc	postinc2,f,c
 17225  012AE0  0E00               	movlw	0
 17226  012AE2  22DE               	addwfc	postinc2,f,c
 17227                           
 17228                           ;stkvar	_days @ sp[(-57)+9]
 17229  012AE4  50E1               	movf	fsr1l,w,c
 17230  012AE6  0FD0               	addlw	-48
 17231  012AE8  6ED9               	movwf	fsr2l,c
 17232  012AEA  50E2               	movf	fsr1h,w,c
 17233  012AEC  6EDA               	movwf	fsr2h,c
 17234  012AEE  0EFF               	movlw	255
 17235  012AF0  22DA               	addwfc	fsr2h,f,c
 17236  012AF2  06DE               	decf	postinc2,f,c
 17237  012AF4  0E00               	movlw	0
 17238  012AF6  5ADE               	subwfb	postinc2,f,c
 17239  012AF8  5ADE               	subwfb	postinc2,f,c
 17240  012AFA  5ADE               	subwfb	postinc2,f,c
 17241  012AFC  5ADE               	subwfb	postinc2,f,c
 17242  012AFE  5ADE               	subwfb	postinc2,f,c
 17243  012B00  5ADE               	subwfb	postinc2,f,c
 17244  012B02  5ADE               	subwfb	postinc2,f,c
 17245  012B04                     l16901:
 17246  012B04  0E07               	movlw	7
 17247  012B06  6EE6               	movwf	postinc1,c
 17248  012B08  0E00               	movlw	0
 17249  012B0A  6EE6               	movwf	postinc1,c
 17250  012B0C  0E00               	movlw	0
 17251  012B0E  6EE6               	movwf	postinc1,c
 17252  012B10  0E00               	movlw	0
 17253  012B12  6EE6               	movwf	postinc1,c
 17254  012B14  0E00               	movlw	0
 17255  012B16  6EE6               	movwf	postinc1,c
 17256  012B18  0E00               	movlw	0
 17257  012B1A  6EE6               	movwf	postinc1,c
 17258  012B1C  0E00               	movlw	0
 17259  012B1E  6EE6               	movwf	postinc1,c
 17260  012B20  0E00               	movlw	0
 17261  012B22  6EE6               	movwf	postinc1,c
 17262                           
 17263                           ;stkvar	_days @ sp[(-65)+9]
 17264  012B24  0EC8               	movlw	-56
 17265  012B26  50E3               	movf	plusw1,w,c
 17266  012B28  0F03               	addlw	3
 17267  012B2A  6E3A               	movwf	(btemp+16)^0,c
 17268  012B2C  0EC9               	movlw	-55
 17269  012B2E  006F FF8C  F03B    	movff	plusw1,btemp+17
 17270  012B34  0E00               	movlw	0
 17271  012B36  223B               	addwfc	(btemp+17)^0,f,c
 17272  012B38  0ECA               	movlw	-54
 17273  012B3A  006F FF8C  F03C    	movff	plusw1,btemp+18
 17274  012B40  0E00               	movlw	0
 17275  012B42  223C               	addwfc	(btemp+18)^0,f,c
 17276  012B44  0ECB               	movlw	-53
 17277  012B46  006F FF8C  F03D    	movff	plusw1,btemp+19
 17278  012B4C  0E00               	movlw	0
 17279  012B4E  223D               	addwfc	(btemp+19)^0,f,c
 17280  012B50  0ECC               	movlw	-52
 17281  012B52  006F FF8C  F03E    	movff	plusw1,btemp+20
 17282  012B58  0E00               	movlw	0
 17283  012B5A  223E               	addwfc	(btemp+20)^0,f,c
 17284  012B5C  0ECD               	movlw	-51
 17285  012B5E  006F FF8C  F03F    	movff	plusw1,btemp+21
 17286  012B64  0E00               	movlw	0
 17287  012B66  223F               	addwfc	(btemp+21)^0,f,c
 17288  012B68  0ECE               	movlw	-50
 17289  012B6A  006F FF8C  F040    	movff	plusw1,btemp+22
 17290  012B70  0E00               	movlw	0
 17291  012B72  2240               	addwfc	(btemp+22)^0,f,c
 17292  012B74  0ECF               	movlw	-49
 17293  012B76  006F FF8C  F041    	movff	plusw1,btemp+23
 17294  012B7C  0E00               	movlw	0
 17295  012B7E  2241               	addwfc	(btemp+23)^0,f,c
 17296  012B80  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 17297  012B86  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 17298  012B8C  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 17299  012B92  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 17300  012B98  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 17301  012B9E  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 17302  012BA4  0060  F103  FFE6   	movff	btemp+22,postinc1
 17303  012BAA  0060  F107  FFE6   	movff	btemp+23,postinc1
 17304  012BB0  ECB0  F0E7         	call	___aomod	;wreg free
 17305  012BB4  52E5               	movf	postdec1,f,c
 17306  012BB6  006F FF9C  F041    	movff	indf1,btemp+23
 17307  012BBC  52E5               	movf	postdec1,f,c
 17308  012BBE  006F FF9C  F040    	movff	indf1,btemp+22
 17309  012BC4  52E5               	movf	postdec1,f,c
 17310  012BC6  006F FF9C  F03F    	movff	indf1,btemp+21
 17311  012BCC  52E5               	movf	postdec1,f,c
 17312  012BCE  006F FF9C  F03E    	movff	indf1,btemp+20
 17313  012BD4  52E5               	movf	postdec1,f,c
 17314  012BD6  006F FF9C  F03D    	movff	indf1,btemp+19
 17315  012BDC  52E5               	movf	postdec1,f,c
 17316  012BDE  006F FF9C  F03C    	movff	indf1,btemp+18
 17317  012BE4  52E5               	movf	postdec1,f,c
 17318  012BE6  006F FF9C  F03B    	movff	indf1,btemp+17
 17319  012BEC  52E5               	movf	postdec1,f,c
 17320  012BEE  006F FF9C  F03A    	movff	indf1,btemp+16
 17321  012BF4  0EF8               	movlw	248
 17322  012BF6  26E1               	addwf	fsr1l,f,c
 17323  012BF8  0EFF               	movlw	255
 17324  012BFA  22E2               	addwfc	fsr1h,f,c
 17325  012BFC  0060  F0E8  F034   	movff	btemp+16,btemp+10
 17326  012C02  0060  F0EC  F035   	movff	btemp+17,btemp+11
 17327                           
 17328                           ;stkvar	_wday @ sp[(-57)+55]
 17329  012C08  0EFE               	movlw	-2
 17330  012C0A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17331  012C10  0EFF               	movlw	-1
 17332  012C12  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17333                           
 17334                           ;stkvar	_wday @ sp[(-57)+55]
 17335  012C18  0EFF               	movlw	-1
 17336  012C1A  AEE3               	btfss	plusw1,7,c
 17337  012C1C  D011               	goto	l16907
 17338                           
 17339                           ;stkvar	_wday @ sp[(-57)+55]
 17340  012C1E  0EFE               	movlw	-2
 17341  012C20  50E3               	movf	plusw1,w,c
 17342  012C22  0F07               	addlw	7
 17343  012C24  6E2A               	movwf	btemp^0,c
 17344  012C26  0EFE               	movlw	-2
 17345  012C28  0060  F0AB  FFE3   	movff	btemp,plusw1
 17346  012C2E  6A2A               	clrf	btemp^0,c
 17347  012C30  0EFF               	movlw	-1
 17348  012C32  50E3               	movf	plusw1,w,c
 17349  012C34  202A               	addwfc	btemp^0,w,c
 17350  012C36  6E2A               	movwf	btemp^0,c
 17351  012C38  0EFF               	movlw	-1
 17352  012C3A  0060  F0AB  FFE3   	movff	btemp,plusw1
 17353  012C40                     l16907:
 17354  012C40  0EB1               	movlw	177
 17355  012C42  6EE6               	movwf	postinc1,c
 17356  012C44  0E3A               	movlw	58
 17357  012C46  6EE6               	movwf	postinc1,c
 17358  012C48  0E02               	movlw	2
 17359  012C4A  6EE6               	movwf	postinc1,c
 17360  012C4C  0E00               	movlw	0
 17361  012C4E  6EE6               	movwf	postinc1,c
 17362  012C50  0E00               	movlw	0
 17363  012C52  6EE6               	movwf	postinc1,c
 17364  012C54  0E00               	movlw	0
 17365  012C56  6EE6               	movwf	postinc1,c
 17366  012C58  0E00               	movlw	0
 17367  012C5A  6EE6               	movwf	postinc1,c
 17368  012C5C  0E00               	movlw	0
 17369  012C5E  6EE6               	movwf	postinc1,c
 17370                           
 17371                           ;stkvar	_days @ sp[(-65)+9]
 17372  012C60  50E1               	movf	fsr1l,w,c
 17373  012C62  0FC8               	addlw	-56
 17374  012C64  6ED9               	movwf	fsr2l,c
 17375  012C66  50E2               	movf	fsr1h,w,c
 17376  012C68  6EDA               	movwf	fsr2h,c
 17377  012C6A  0EFF               	movlw	255
 17378  012C6C  22DA               	addwfc	fsr2h,f,c
 17379  012C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 17380  012C74  006F FF7B FFE6     	movff	postinc2,postinc1
 17381  012C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 17382  012C80  006F FF7B FFE6     	movff	postinc2,postinc1
 17383  012C86  006F FF7B FFE6     	movff	postinc2,postinc1
 17384  012C8C  006F FF7B FFE6     	movff	postinc2,postinc1
 17385  012C92  006F FF7B FFE6     	movff	postinc2,postinc1
 17386  012C98  006F FF7B FFE6     	movff	postinc2,postinc1
 17387  012C9E  ECC4  F0E1         	call	___aodiv	;wreg free
 17388  012CA2  52E5               	movf	postdec1,f,c
 17389  012CA4  006F FF9C  F041    	movff	indf1,btemp+23
 17390  012CAA  52E5               	movf	postdec1,f,c
 17391  012CAC  006F FF9C  F040    	movff	indf1,btemp+22
 17392  012CB2  52E5               	movf	postdec1,f,c
 17393  012CB4  006F FF9C  F03F    	movff	indf1,btemp+21
 17394  012CBA  52E5               	movf	postdec1,f,c
 17395  012CBC  006F FF9C  F03E    	movff	indf1,btemp+20
 17396  012CC2  52E5               	movf	postdec1,f,c
 17397  012CC4  006F FF9C  F03D    	movff	indf1,btemp+19
 17398  012CCA  52E5               	movf	postdec1,f,c
 17399  012CCC  006F FF9C  F03C    	movff	indf1,btemp+18
 17400  012CD2  52E5               	movf	postdec1,f,c
 17401  012CD4  006F FF9C  F03B    	movff	indf1,btemp+17
 17402  012CDA  52E5               	movf	postdec1,f,c
 17403  012CDC  006F FF9C  F03A    	movff	indf1,btemp+16
 17404  012CE2  0EF8               	movlw	248
 17405  012CE4  26E1               	addwf	fsr1l,f,c
 17406  012CE6  0EFF               	movlw	255
 17407  012CE8  22E2               	addwfc	fsr1h,f,c
 17408  012CEA  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17409  012CF0  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17410  012CF6  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17411  012CFC  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17412                           
 17413                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17414  012D02  0EF4               	movlw	-12
 17415  012D04  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17416  012D0A  0EF5               	movlw	-11
 17417  012D0C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17418  012D12  0EF6               	movlw	-10
 17419  012D14  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17420  012D1A  0EF7               	movlw	-9
 17421  012D1C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17422  012D22  0EB1               	movlw	177
 17423  012D24  6EE6               	movwf	postinc1,c
 17424  012D26  0E3A               	movlw	58
 17425  012D28  6EE6               	movwf	postinc1,c
 17426  012D2A  0E02               	movlw	2
 17427  012D2C  6EE6               	movwf	postinc1,c
 17428  012D2E  0E00               	movlw	0
 17429  012D30  6EE6               	movwf	postinc1,c
 17430  012D32  0E00               	movlw	0
 17431  012D34  6EE6               	movwf	postinc1,c
 17432  012D36  0E00               	movlw	0
 17433  012D38  6EE6               	movwf	postinc1,c
 17434  012D3A  0E00               	movlw	0
 17435  012D3C  6EE6               	movwf	postinc1,c
 17436  012D3E  0E00               	movlw	0
 17437  012D40  6EE6               	movwf	postinc1,c
 17438                           
 17439                           ;stkvar	_days @ sp[(-65)+9]
 17440  012D42  50E1               	movf	fsr1l,w,c
 17441  012D44  0FC8               	addlw	-56
 17442  012D46  6ED9               	movwf	fsr2l,c
 17443  012D48  50E2               	movf	fsr1h,w,c
 17444  012D4A  6EDA               	movwf	fsr2h,c
 17445  012D4C  0EFF               	movlw	255
 17446  012D4E  22DA               	addwfc	fsr2h,f,c
 17447  012D50  006F FF7B FFE6     	movff	postinc2,postinc1
 17448  012D56  006F FF7B FFE6     	movff	postinc2,postinc1
 17449  012D5C  006F FF7B FFE6     	movff	postinc2,postinc1
 17450  012D62  006F FF7B FFE6     	movff	postinc2,postinc1
 17451  012D68  006F FF7B FFE6     	movff	postinc2,postinc1
 17452  012D6E  006F FF7B FFE6     	movff	postinc2,postinc1
 17453  012D74  006F FF7B FFE6     	movff	postinc2,postinc1
 17454  012D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 17455  012D80  ECB0  F0E7         	call	___aomod	;wreg free
 17456  012D84  52E5               	movf	postdec1,f,c
 17457  012D86  006F FF9C  F041    	movff	indf1,btemp+23
 17458  012D8C  52E5               	movf	postdec1,f,c
 17459  012D8E  006F FF9C  F040    	movff	indf1,btemp+22
 17460  012D94  52E5               	movf	postdec1,f,c
 17461  012D96  006F FF9C  F03F    	movff	indf1,btemp+21
 17462  012D9C  52E5               	movf	postdec1,f,c
 17463  012D9E  006F FF9C  F03E    	movff	indf1,btemp+20
 17464  012DA4  52E5               	movf	postdec1,f,c
 17465  012DA6  006F FF9C  F03D    	movff	indf1,btemp+19
 17466  012DAC  52E5               	movf	postdec1,f,c
 17467  012DAE  006F FF9C  F03C    	movff	indf1,btemp+18
 17468  012DB4  52E5               	movf	postdec1,f,c
 17469  012DB6  006F FF9C  F03B    	movff	indf1,btemp+17
 17470  012DBC  52E5               	movf	postdec1,f,c
 17471  012DBE  006F FF9C  F03A    	movff	indf1,btemp+16
 17472  012DC4  0EF8               	movlw	248
 17473  012DC6  26E1               	addwf	fsr1l,f,c
 17474  012DC8  0EFF               	movlw	255
 17475  012DCA  22E2               	addwfc	fsr1h,f,c
 17476  012DCC  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17477  012DD2  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17478  012DD8  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17479  012DDE  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17480                           
 17481                           ;stkvar	_remdays @ sp[(-57)+25]
 17482  012DE4  0EE0               	movlw	-32
 17483  012DE6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17484  012DEC  0EE1               	movlw	-31
 17485  012DEE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17486  012DF4  0EE2               	movlw	-30
 17487  012DF6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17488  012DFC  0EE3               	movlw	-29
 17489  012DFE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17490                           
 17491                           ;stkvar	_remdays @ sp[(-57)+25]
 17492  012E04  0EE3               	movlw	-29
 17493  012E06  AEE3               	btfss	plusw1,7,c
 17494  012E08  D01B               	goto	l16915
 17495                           
 17496                           ;stkvar	_remdays @ sp[(-57)+25]
 17497  012E0A  50E1               	movf	fsr1l,w,c
 17498  012E0C  0FE0               	addlw	-32
 17499  012E0E  6ED9               	movwf	fsr2l,c
 17500  012E10  50E2               	movf	fsr1h,w,c
 17501  012E12  6EDA               	movwf	fsr2h,c
 17502  012E14  0EFF               	movlw	255
 17503  012E16  22DA               	addwfc	fsr2h,f,c
 17504  012E18  0EB1               	movlw	177
 17505  012E1A  26DE               	addwf	postinc2,f,c
 17506  012E1C  0E3A               	movlw	58
 17507  012E1E  22DE               	addwfc	postinc2,f,c
 17508  012E20  0E02               	movlw	2
 17509  012E22  22DE               	addwfc	postinc2,f,c
 17510  012E24  0E00               	movlw	0
 17511  012E26  22DE               	addwfc	postinc2,f,c
 17512                           
 17513                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17514  012E28  50E1               	movf	fsr1l,w,c
 17515  012E2A  0FF4               	addlw	-12
 17516  012E2C  6ED9               	movwf	fsr2l,c
 17517  012E2E  50E2               	movf	fsr1h,w,c
 17518  012E30  6EDA               	movwf	fsr2h,c
 17519  012E32  0EFF               	movlw	255
 17520  012E34  22DA               	addwfc	fsr2h,f,c
 17521  012E36  06DE               	decf	postinc2,f,c
 17522  012E38  0E00               	movlw	0
 17523  012E3A  5ADE               	subwfb	postinc2,f,c
 17524  012E3C  5ADE               	subwfb	postinc2,f,c
 17525  012E3E  5ADE               	subwfb	postinc2,f,c
 17526  012E40                     l16915:
 17527  012E40  0EAC               	movlw	172
 17528  012E42  6EE6               	movwf	postinc1,c
 17529  012E44  0E8E               	movlw	142
 17530  012E46  6EE6               	movwf	postinc1,c
 17531  012E48  0E00               	movlw	0
 17532  012E4A  6EE6               	movwf	postinc1,c
 17533  012E4C  0E00               	movlw	0
 17534  012E4E  6EE6               	movwf	postinc1,c
 17535                           
 17536                           ;stkvar	_remdays @ sp[(-61)+25]
 17537  012E50  0EDC               	movlw	-36
 17538  012E52  006F FF8F FFE6     	movff	plusw1,postinc1
 17539  012E58  006F FF8F FFE6     	movff	plusw1,postinc1
 17540  012E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 17541  012E64  006F FF8F FFE6     	movff	plusw1,postinc1
 17542  012E6A  EC70  F0F1         	call	___aldiv	;wreg free
 17543                           
 17544                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17545  012E6E  0EE8               	movlw	-24
 17546  012E70  0060  F0AB  FFE3   	movff	btemp,plusw1
 17547  012E76  0EE9               	movlw	-23
 17548  012E78  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17549  012E7E  0EEA               	movlw	-22
 17550  012E80  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17551  012E86  0EEB               	movlw	-21
 17552  012E88  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17553                           
 17554                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17555  012E8E  0EE8               	movlw	-24
 17556  012E90  006F FF8C  F02A    	movff	plusw1,btemp
 17557  012E96  0E04               	movlw	4
 17558  012E98  182A               	xorwf	btemp^0,w,c
 17559  012E9A  E116               	bnz	l16921
 17560  012E9C  0EE9               	movlw	-23
 17561  012E9E  50E3               	movf	plusw1,w,c
 17562  012EA0  E113               	bnz	l16921
 17563  012EA2  0EEA               	movlw	-22
 17564  012EA4  50E3               	movf	plusw1,w,c
 17565  012EA6  E110               	bnz	l16921
 17566  012EA8  0EEB               	movlw	-21
 17567  012EAA  50E3               	movf	plusw1,w,c
 17568  012EAC  A4D8               	btfss	status,2,c
 17569  012EAE  D00C               	goto	l16921
 17570                           
 17571                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17572  012EB0  50E1               	movf	fsr1l,w,c
 17573  012EB2  0FE8               	addlw	-24
 17574  012EB4  6ED9               	movwf	fsr2l,c
 17575  012EB6  50E2               	movf	fsr1h,w,c
 17576  012EB8  6EDA               	movwf	fsr2h,c
 17577  012EBA  0EFF               	movlw	255
 17578  012EBC  22DA               	addwfc	fsr2h,f,c
 17579  012EBE  06DE               	decf	postinc2,f,c
 17580  012EC0  0E00               	movlw	0
 17581  012EC2  5ADE               	subwfb	postinc2,f,c
 17582  012EC4  5ADE               	subwfb	postinc2,f,c
 17583  012EC6  5ADE               	subwfb	postinc2,f,c
 17584  012EC8                     l16921:
 17585  012EC8  0EAC               	movlw	172
 17586  012ECA  6EE6               	movwf	postinc1,c
 17587  012ECC  0E8E               	movlw	142
 17588  012ECE  6EE6               	movwf	postinc1,c
 17589  012ED0  0E00               	movlw	0
 17590  012ED2  6EE6               	movwf	postinc1,c
 17591  012ED4  0E00               	movlw	0
 17592  012ED6  6EE6               	movwf	postinc1,c
 17593                           
 17594                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17595  012ED8  0EE4               	movlw	-28
 17596  012EDA  006F FF8F FFE6     	movff	plusw1,postinc1
 17597  012EE0  006F FF8F FFE6     	movff	plusw1,postinc1
 17598  012EE6  006F FF8F FFE6     	movff	plusw1,postinc1
 17599  012EEC  006F FF8F FFE6     	movff	plusw1,postinc1
 17600  012EF2  EC31  F003         	call	___lmul	;wreg free
 17601                           
 17602                           ;stkvar	_remdays @ sp[(-57)+25]
 17603  012EF6  50E1               	movf	fsr1l,w,c
 17604  012EF8  0FE0               	addlw	-32
 17605  012EFA  6ED9               	movwf	fsr2l,c
 17606  012EFC  50E2               	movf	fsr1h,w,c
 17607  012EFE  6EDA               	movwf	fsr2h,c
 17608  012F00  0EFF               	movlw	255
 17609  012F02  22DA               	addwfc	fsr2h,f,c
 17610  012F04  502A               	movf	btemp^0,w,c
 17611  012F06  5EDE               	subwf	postinc2,f,c
 17612  012F08  502B               	movf	(btemp+1)^0,w,c
 17613  012F0A  5ADE               	subwfb	postinc2,f,c
 17614  012F0C  502C               	movf	(btemp+2)^0,w,c
 17615  012F0E  5ADE               	subwfb	postinc2,f,c
 17616  012F10  502D               	movf	(btemp+3)^0,w,c
 17617  012F12  5ADE               	subwfb	postinc2,f,c
 17618  012F14  0EB5               	movlw	181
 17619  012F16  6EE6               	movwf	postinc1,c
 17620  012F18  0E05               	movlw	5
 17621  012F1A  6EE6               	movwf	postinc1,c
 17622  012F1C  0E00               	movlw	0
 17623  012F1E  6EE6               	movwf	postinc1,c
 17624  012F20  0E00               	movlw	0
 17625  012F22  6EE6               	movwf	postinc1,c
 17626                           
 17627                           ;stkvar	_remdays @ sp[(-61)+25]
 17628  012F24  0EDC               	movlw	-36
 17629  012F26  006F FF8F FFE6     	movff	plusw1,postinc1
 17630  012F2C  006F FF8F FFE6     	movff	plusw1,postinc1
 17631  012F32  006F FF8F FFE6     	movff	plusw1,postinc1
 17632  012F38  006F FF8F FFE6     	movff	plusw1,postinc1
 17633  012F3E  EC70  F0F1         	call	___aldiv	;wreg free
 17634                           
 17635                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17636  012F42  0EE4               	movlw	-28
 17637  012F44  0060  F0AB  FFE3   	movff	btemp,plusw1
 17638  012F4A  0EE5               	movlw	-27
 17639  012F4C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17640  012F52  0EE6               	movlw	-26
 17641  012F54  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17642  012F5A  0EE7               	movlw	-25
 17643  012F5C  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17644                           
 17645                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17646  012F62  0EE4               	movlw	-28
 17647  012F64  006F FF8C  F02A    	movff	plusw1,btemp
 17648  012F6A  0E19               	movlw	25
 17649  012F6C  182A               	xorwf	btemp^0,w,c
 17650  012F6E  E116               	bnz	l16929
 17651  012F70  0EE5               	movlw	-27
 17652  012F72  50E3               	movf	plusw1,w,c
 17653  012F74  E113               	bnz	l16929
 17654  012F76  0EE6               	movlw	-26
 17655  012F78  50E3               	movf	plusw1,w,c
 17656  012F7A  E110               	bnz	l16929
 17657  012F7C  0EE7               	movlw	-25
 17658  012F7E  50E3               	movf	plusw1,w,c
 17659  012F80  A4D8               	btfss	status,2,c
 17660  012F82  D00C               	goto	l16929
 17661                           
 17662                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17663  012F84  50E1               	movf	fsr1l,w,c
 17664  012F86  0FE4               	addlw	-28
 17665  012F88  6ED9               	movwf	fsr2l,c
 17666  012F8A  50E2               	movf	fsr1h,w,c
 17667  012F8C  6EDA               	movwf	fsr2h,c
 17668  012F8E  0EFF               	movlw	255
 17669  012F90  22DA               	addwfc	fsr2h,f,c
 17670  012F92  06DE               	decf	postinc2,f,c
 17671  012F94  0E00               	movlw	0
 17672  012F96  5ADE               	subwfb	postinc2,f,c
 17673  012F98  5ADE               	subwfb	postinc2,f,c
 17674  012F9A  5ADE               	subwfb	postinc2,f,c
 17675  012F9C                     l16929:
 17676  012F9C  0EB5               	movlw	181
 17677  012F9E  6EE6               	movwf	postinc1,c
 17678  012FA0  0E05               	movlw	5
 17679  012FA2  6EE6               	movwf	postinc1,c
 17680  012FA4  0E00               	movlw	0
 17681  012FA6  6EE6               	movwf	postinc1,c
 17682  012FA8  0E00               	movlw	0
 17683  012FAA  6EE6               	movwf	postinc1,c
 17684                           
 17685                           ;stkvar	_q_cycles @ sp[(-61)+29]
 17686  012FAC  0EE0               	movlw	-32
 17687  012FAE  006F FF8F FFE6     	movff	plusw1,postinc1
 17688  012FB4  006F FF8F FFE6     	movff	plusw1,postinc1
 17689  012FBA  006F FF8F FFE6     	movff	plusw1,postinc1
 17690  012FC0  006F FF8F FFE6     	movff	plusw1,postinc1
 17691  012FC6  EC31  F003         	call	___lmul	;wreg free
 17692                           
 17693                           ;stkvar	_remdays @ sp[(-57)+25]
 17694  012FCA  50E1               	movf	fsr1l,w,c
 17695  012FCC  0FE0               	addlw	-32
 17696  012FCE  6ED9               	movwf	fsr2l,c
 17697  012FD0  50E2               	movf	fsr1h,w,c
 17698  012FD2  6EDA               	movwf	fsr2h,c
 17699  012FD4  0EFF               	movlw	255
 17700  012FD6  22DA               	addwfc	fsr2h,f,c
 17701  012FD8  502A               	movf	btemp^0,w,c
 17702  012FDA  5EDE               	subwf	postinc2,f,c
 17703  012FDC  502B               	movf	(btemp+1)^0,w,c
 17704  012FDE  5ADE               	subwfb	postinc2,f,c
 17705  012FE0  502C               	movf	(btemp+2)^0,w,c
 17706  012FE2  5ADE               	subwfb	postinc2,f,c
 17707  012FE4  502D               	movf	(btemp+3)^0,w,c
 17708  012FE6  5ADE               	subwfb	postinc2,f,c
 17709  012FE8  0E6D               	movlw	109
 17710  012FEA  6EE6               	movwf	postinc1,c
 17711  012FEC  0E01               	movlw	1
 17712  012FEE  6EE6               	movwf	postinc1,c
 17713  012FF0  0E00               	movlw	0
 17714  012FF2  6EE6               	movwf	postinc1,c
 17715  012FF4  0E00               	movlw	0
 17716  012FF6  6EE6               	movwf	postinc1,c
 17717                           
 17718                           ;stkvar	_remdays @ sp[(-61)+25]
 17719  012FF8  0EDC               	movlw	-36
 17720  012FFA  006F FF8F FFE6     	movff	plusw1,postinc1
 17721  013000  006F FF8F FFE6     	movff	plusw1,postinc1
 17722  013006  006F FF8F FFE6     	movff	plusw1,postinc1
 17723  01300C  006F FF8F FFE6     	movff	plusw1,postinc1
 17724  013012  EC70  F0F1         	call	___aldiv	;wreg free
 17725                           
 17726                           ;stkvar	_remyears @ sp[(-57)+37]
 17727  013016  0EEC               	movlw	-20
 17728  013018  0060  F0AB  FFE3   	movff	btemp,plusw1
 17729  01301E  0EED               	movlw	-19
 17730  013020  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17731  013026  0EEE               	movlw	-18
 17732  013028  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17733  01302E  0EEF               	movlw	-17
 17734  013030  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17735                           
 17736                           ;stkvar	_remyears @ sp[(-57)+37]
 17737  013036  0EEC               	movlw	-20
 17738  013038  006F FF8C  F02A    	movff	plusw1,btemp
 17739  01303E  0E04               	movlw	4
 17740  013040  182A               	xorwf	btemp^0,w,c
 17741  013042  E116               	bnz	l16937
 17742  013044  0EED               	movlw	-19
 17743  013046  50E3               	movf	plusw1,w,c
 17744  013048  E113               	bnz	l16937
 17745  01304A  0EEE               	movlw	-18
 17746  01304C  50E3               	movf	plusw1,w,c
 17747  01304E  E110               	bnz	l16937
 17748  013050  0EEF               	movlw	-17
 17749  013052  50E3               	movf	plusw1,w,c
 17750  013054  A4D8               	btfss	status,2,c
 17751  013056  D00C               	goto	l16937
 17752                           
 17753                           ;stkvar	_remyears @ sp[(-57)+37]
 17754  013058  50E1               	movf	fsr1l,w,c
 17755  01305A  0FEC               	addlw	-20
 17756  01305C  6ED9               	movwf	fsr2l,c
 17757  01305E  50E2               	movf	fsr1h,w,c
 17758  013060  6EDA               	movwf	fsr2h,c
 17759  013062  0EFF               	movlw	255
 17760  013064  22DA               	addwfc	fsr2h,f,c
 17761  013066  06DE               	decf	postinc2,f,c
 17762  013068  0E00               	movlw	0
 17763  01306A  5ADE               	subwfb	postinc2,f,c
 17764  01306C  5ADE               	subwfb	postinc2,f,c
 17765  01306E  5ADE               	subwfb	postinc2,f,c
 17766  013070                     l16937:
 17767  013070  0E6D               	movlw	109
 17768  013072  6EE6               	movwf	postinc1,c
 17769  013074  0E01               	movlw	1
 17770  013076  6EE6               	movwf	postinc1,c
 17771  013078  0E00               	movlw	0
 17772  01307A  6EE6               	movwf	postinc1,c
 17773  01307C  0E00               	movlw	0
 17774  01307E  6EE6               	movwf	postinc1,c
 17775                           
 17776                           ;stkvar	_remyears @ sp[(-61)+37]
 17777  013080  0EE8               	movlw	-24
 17778  013082  006F FF8F FFE6     	movff	plusw1,postinc1
 17779  013088  006F FF8F FFE6     	movff	plusw1,postinc1
 17780  01308E  006F FF8F FFE6     	movff	plusw1,postinc1
 17781  013094  006F FF8F FFE6     	movff	plusw1,postinc1
 17782  01309A  EC31  F003         	call	___lmul	;wreg free
 17783                           
 17784                           ;stkvar	_remdays @ sp[(-57)+25]
 17785  01309E  50E1               	movf	fsr1l,w,c
 17786  0130A0  0FE0               	addlw	-32
 17787  0130A2  6ED9               	movwf	fsr2l,c
 17788  0130A4  50E2               	movf	fsr1h,w,c
 17789  0130A6  6EDA               	movwf	fsr2h,c
 17790  0130A8  0EFF               	movlw	255
 17791  0130AA  22DA               	addwfc	fsr2h,f,c
 17792  0130AC  502A               	movf	btemp^0,w,c
 17793  0130AE  5EDE               	subwf	postinc2,f,c
 17794  0130B0  502B               	movf	(btemp+1)^0,w,c
 17795  0130B2  5ADE               	subwfb	postinc2,f,c
 17796  0130B4  502C               	movf	(btemp+2)^0,w,c
 17797  0130B6  5ADE               	subwfb	postinc2,f,c
 17798  0130B8  502D               	movf	(btemp+3)^0,w,c
 17799  0130BA  5ADE               	subwfb	postinc2,f,c
 17800                           
 17801                           ;stkvar	___secs_to_tm$7650 @ sp[(-57)+0]
 17802  0130BC  0EC7               	movlw	-57
 17803  0130BE  6AE3               	clrf	plusw1,c
 17804                           
 17805                           ;stkvar	_remyears @ sp[(-57)+37]
 17806  0130C0  0EEC               	movlw	-20
 17807  0130C2  50E3               	movf	plusw1,w,c
 17808  0130C4  E127               	bnz	l16949
 17809  0130C6  0EED               	movlw	-19
 17810  0130C8  50E3               	movf	plusw1,w,c
 17811  0130CA  E124               	bnz	l16949
 17812  0130CC  0EEE               	movlw	-18
 17813  0130CE  50E3               	movf	plusw1,w,c
 17814  0130D0  E121               	bnz	l16949
 17815  0130D2  0EEF               	movlw	-17
 17816  0130D4  50E3               	movf	plusw1,w,c
 17817  0130D6  A4D8               	btfss	status,2,c
 17818  0130D8  D01D               	goto	l16949
 17819                           
 17820                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17821  0130DA  0EE4               	movlw	-28
 17822  0130DC  50E3               	movf	plusw1,w,c
 17823  0130DE  E117               	bnz	l16947
 17824  0130E0  0EE5               	movlw	-27
 17825  0130E2  50E3               	movf	plusw1,w,c
 17826  0130E4  E114               	bnz	l16947
 17827  0130E6  0EE6               	movlw	-26
 17828  0130E8  50E3               	movf	plusw1,w,c
 17829  0130EA  E111               	bnz	l16947
 17830  0130EC  0EE7               	movlw	-25
 17831  0130EE  50E3               	movf	plusw1,w,c
 17832  0130F0  A4D8               	btfss	status,2,c
 17833  0130F2  D00D               	goto	u16540
 17834                           
 17835                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17836  0130F4  0EE8               	movlw	-24
 17837  0130F6  50E3               	movf	plusw1,w,c
 17838  0130F8  E10D               	bnz	l16949
 17839  0130FA  0EE9               	movlw	-23
 17840  0130FC  50E3               	movf	plusw1,w,c
 17841  0130FE  E10A               	bnz	l16949
 17842  013100  0EEA               	movlw	-22
 17843  013102  50E3               	movf	plusw1,w,c
 17844  013104  E107               	bnz	l16949
 17845  013106  0EEB               	movlw	-21
 17846  013108  50E3               	movf	plusw1,w,c
 17847  01310A  A4D8               	btfss	status,2,c
 17848  01310C  D003               	goto	l16949
 17849  01310E                     u16540:
 17850  01310E                     l16947:
 17851                           
 17852                           ;stkvar	___secs_to_tm$7650 @ sp[(-57)+0]
 17853  01310E  0EC7               	movlw	-57
 17854  013110  6AE3               	clrf	plusw1,c
 17855  013112  2AE3               	incf	plusw1,f,c
 17856  013114                     l16949:
 17857                           
 17858                           ;stkvar	___secs_to_tm$7650 @ sp[(-57)+0]
 17859  013114  0EC7               	movlw	-57
 17860  013116  50E3               	movf	plusw1,w,c
 17861  013118  6E34               	movwf	(btemp+10)^0,c
 17862  01311A  6A35               	clrf	(btemp+11)^0,c
 17863                           
 17864                           ;stkvar	_leap @ sp[(-57)+51]
 17865  01311C  0EFA               	movlw	-6
 17866  01311E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17867  013124  0EFB               	movlw	-5
 17868  013126  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17869                           
 17870                           ;stkvar	_remdays @ sp[(-57)+25]
 17871                           ;stkvar	_leap @ sp[(-57)+51]
 17872  01312C  0EFA               	movlw	-6
 17873  01312E  006F FF8C  F034    	movff	plusw1,btemp+10
 17874  013134  0EFB               	movlw	-5
 17875  013136  006F FF8C  F035    	movff	plusw1,btemp+11
 17876  01313C  0EE0               	movlw	-32
 17877  01313E  50E3               	movf	plusw1,w,c
 17878  013140  2634               	addwf	(btemp+10)^0,f,c
 17879  013142  0EE1               	movlw	-31
 17880  013144  50E3               	movf	plusw1,w,c
 17881  013146  2235               	addwfc	(btemp+11)^0,f,c
 17882  013148  0E3B               	movlw	59
 17883  01314A  2634               	addwf	(btemp+10)^0,f,c
 17884  01314C  0E00               	movlw	0
 17885  01314E  2235               	addwfc	(btemp+11)^0,f,c
 17886                           
 17887                           ;stkvar	_yday @ sp[(-57)+53]
 17888  013150  0EFC               	movlw	-4
 17889  013152  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17890  013158  0EFD               	movlw	-3
 17891  01315A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17892                           
 17893                           ;stkvar	_leap @ sp[(-57)+51]
 17894  013160  0EFA               	movlw	-6
 17895  013162  50E3               	movf	plusw1,w,c
 17896  013164  0F6D               	addlw	109
 17897  013166  6E34               	movwf	(btemp+10)^0,c
 17898  013168  0EFB               	movlw	-5
 17899  01316A  006F FF8C  F035    	movff	plusw1,btemp+11
 17900  013170  0E01               	movlw	1
 17901  013172  2235               	addwfc	(btemp+11)^0,f,c
 17902                           
 17903                           ;stkvar	_yday @ sp[(-57)+53]
 17904  013174  0EFC               	movlw	-4
 17905  013176  006F FF8C  F02A    	movff	plusw1,btemp
 17906  01317C  5034               	movf	(btemp+10)^0,w,c
 17907  01317E  5C2A               	subwf	btemp^0,w,c
 17908  013180  0EFD               	movlw	-3
 17909  013182  50E3               	movf	plusw1,w,c
 17910  013184  0A80               	xorlw	128
 17911  013186  6E2A               	movwf	btemp^0,c
 17912  013188  5035               	movf	(btemp+11)^0,w,c
 17913  01318A  0A80               	xorlw	128
 17914  01318C  582A               	subwfb	btemp^0,w,c
 17915  01318E  A0D8               	btfss	status,0,c
 17916  013190  D01E               	goto	l16957
 17917                           
 17918                           ;stkvar	_leap @ sp[(-57)+51]
 17919  013192  0EFA               	movlw	-6
 17920  013194  50E3               	movf	plusw1,w,c
 17921  013196  0F6D               	addlw	109
 17922  013198  6E34               	movwf	(btemp+10)^0,c
 17923  01319A  0EFB               	movlw	-5
 17924  01319C  006F FF8C  F035    	movff	plusw1,btemp+11
 17925  0131A2  0E01               	movlw	1
 17926  0131A4  2235               	addwfc	(btemp+11)^0,f,c
 17927                           
 17928                           ;stkvar	_yday @ sp[(-57)+53]
 17929  0131A6  0EFC               	movlw	-4
 17930  0131A8  006F FF8C  F02A    	movff	plusw1,btemp
 17931  0131AE  5034               	movf	(btemp+10)^0,w,c
 17932  0131B0  5E2A               	subwf	btemp^0,f,c
 17933  0131B2  0EFC               	movlw	-4
 17934  0131B4  0060  F0AB  FFE3   	movff	btemp,plusw1
 17935  0131BA  0EFD               	movlw	-3
 17936  0131BC  006F FF8C  F02A    	movff	plusw1,btemp
 17937  0131C2  5035               	movf	(btemp+11)^0,w,c
 17938  0131C4  5A2A               	subwfb	btemp^0,f,c
 17939  0131C6  0EFD               	movlw	-3
 17940  0131C8  0060  F0AB  FFE3   	movff	btemp,plusw1
 17941  0131CE                     l16957:
 17942                           
 17943                           ;stkvar	_remyears @ sp[(-57)+37]
 17944                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17945  0131CE  0EE4               	movlw	-28
 17946  0131D0  006F FF8C  F032    	movff	plusw1,btemp+8
 17947  0131D6  0EE5               	movlw	-27
 17948  0131D8  006F FF8C  F033    	movff	plusw1,btemp+9
 17949  0131DE  0EE6               	movlw	-26
 17950  0131E0  006F FF8C  F034    	movff	plusw1,btemp+10
 17951  0131E6  0EE7               	movlw	-25
 17952  0131E8  006F FF8C  F035    	movff	plusw1,btemp+11
 17953  0131EE  0E02               	movlw	2
 17954  0131F0                     u16565:
 17955  0131F0  90D8               	bcf	status,0,c
 17956  0131F2  3632               	rlcf	(btemp+8)^0,f,c
 17957  0131F4  3633               	rlcf	(btemp+9)^0,f,c
 17958  0131F6  3634               	rlcf	(btemp+10)^0,f,c
 17959  0131F8  3635               	rlcf	(btemp+11)^0,f,c
 17960  0131FA  2EE8               	decfsz	wreg,f,c
 17961  0131FC  D7F9               	goto	u16565
 17962  0131FE  0E64               	movlw	100
 17963  013200  6EE6               	movwf	postinc1,c
 17964  013202  0E00               	movlw	0
 17965  013204  6EE6               	movwf	postinc1,c
 17966  013206  0E00               	movlw	0
 17967  013208  6EE6               	movwf	postinc1,c
 17968  01320A  0E00               	movlw	0
 17969  01320C  6EE6               	movwf	postinc1,c
 17970                           
 17971                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17972  01320E  0EE4               	movlw	-28
 17973  013210  006F FF8F FFE6     	movff	plusw1,postinc1
 17974  013216  006F FF8F FFE6     	movff	plusw1,postinc1
 17975  01321C  006F FF8F FFE6     	movff	plusw1,postinc1
 17976  013222  006F FF8F FFE6     	movff	plusw1,postinc1
 17977  013228  EC31  F003         	call	___lmul	;wreg free
 17978  01322C  5032               	movf	(btemp+8)^0,w,c
 17979  01322E  242A               	addwf	btemp^0,w,c
 17980  013230  6E2E               	movwf	(btemp+4)^0,c
 17981  013232  5033               	movf	(btemp+9)^0,w,c
 17982  013234  202B               	addwfc	(btemp+1)^0,w,c
 17983  013236  6E2F               	movwf	(btemp+5)^0,c
 17984  013238  5034               	movf	(btemp+10)^0,w,c
 17985  01323A  202C               	addwfc	(btemp+2)^0,w,c
 17986  01323C  6E30               	movwf	(btemp+6)^0,c
 17987  01323E  5035               	movf	(btemp+11)^0,w,c
 17988  013240  202D               	addwfc	(btemp+3)^0,w,c
 17989  013242  6E31               	movwf	(btemp+7)^0,c
 17990  013244  0EEC               	movlw	-20
 17991  013246  50E3               	movf	plusw1,w,c
 17992  013248  262E               	addwf	(btemp+4)^0,f,c
 17993  01324A  0EED               	movlw	-19
 17994  01324C  50E3               	movf	plusw1,w,c
 17995  01324E  222F               	addwfc	(btemp+5)^0,f,c
 17996  013250  0EEE               	movlw	-18
 17997  013252  50E3               	movf	plusw1,w,c
 17998  013254  2230               	addwfc	(btemp+6)^0,f,c
 17999  013256  0EEF               	movlw	-17
 18000  013258  50E3               	movf	plusw1,w,c
 18001  01325A  2231               	addwfc	(btemp+7)^0,f,c
 18002  01325C  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 18003  013262  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 18004  013268  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 18005  01326E  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 18006  013274  6A3E               	clrf	(btemp+20)^0,c
 18007  013276  BE3D               	btfsc	(btemp+19)^0,7,c
 18008  013278  683E               	setf	(btemp+20)^0,c
 18009  01327A  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 18010  013280  0060  F0F8  F040   	movff	btemp+20,btemp+22
 18011  013286  0060  F0F8  F041   	movff	btemp+20,btemp+23
 18012  01328C  0E90               	movlw	144
 18013  01328E  6EE6               	movwf	postinc1,c
 18014  013290  0E01               	movlw	1
 18015  013292  6EE6               	movwf	postinc1,c
 18016  013294  0E00               	movlw	0
 18017  013296  6EE6               	movwf	postinc1,c
 18018  013298  0E00               	movlw	0
 18019  01329A  6EE6               	movwf	postinc1,c
 18020  01329C  0E00               	movlw	0
 18021  01329E  6EE6               	movwf	postinc1,c
 18022  0132A0  0E00               	movlw	0
 18023  0132A2  6EE6               	movwf	postinc1,c
 18024  0132A4  0E00               	movlw	0
 18025  0132A6  6EE6               	movwf	postinc1,c
 18026  0132A8  0E00               	movlw	0
 18027  0132AA  6EE6               	movwf	postinc1,c
 18028                           
 18029                           ;stkvar	_qc_cycles @ sp[(-65)+45]
 18030  0132AC  0EEC               	movlw	-20
 18031  0132AE  006F FF8C  F042    	movff	plusw1,btemp+24
 18032  0132B4  0EED               	movlw	-19
 18033  0132B6  006F FF8C  F043    	movff	plusw1,btemp+25
 18034  0132BC  0EEE               	movlw	-18
 18035  0132BE  006F FF8C  F044    	movff	plusw1,btemp+26
 18036  0132C4  0EEF               	movlw	-17
 18037  0132C6  006F FF8C  F045    	movff	plusw1,btemp+27
 18038  0132CC  6A46               	clrf	(btemp+28)^0,c
 18039  0132CE  BE45               	btfsc	(btemp+27)^0,7,c
 18040  0132D0  6846               	setf	(btemp+28)^0,c
 18041  0132D2  0060  F118  F047   	movff	btemp+28,btemp+29
 18042  0132D8  0060  F118  F048   	movff	btemp+28,btemp+30
 18043  0132DE  0060  F118  F049   	movff	btemp+28,btemp+31
 18044  0132E4  0060  F10B  FFE6   	movff	btemp+24,postinc1
 18045  0132EA  0060  F10F  FFE6   	movff	btemp+25,postinc1
 18046  0132F0  0060  F113  FFE6   	movff	btemp+26,postinc1
 18047  0132F6  0060  F117  FFE6   	movff	btemp+27,postinc1
 18048  0132FC  0060  F11B  FFE6   	movff	btemp+28,postinc1
 18049  013302  0060  F11F  FFE6   	movff	btemp+29,postinc1
 18050  013308  0060  F123  FFE6   	movff	btemp+30,postinc1
 18051  01330E  0060  F127  FFE6   	movff	btemp+31,postinc1
 18052  013314  ECBB  F0F8         	call	___omul	;wreg free
 18053  013318  52E5               	movf	postdec1,f,c
 18054  01331A  006F FF9C  F049    	movff	indf1,btemp+31
 18055  013320  52E5               	movf	postdec1,f,c
 18056  013322  006F FF9C  F048    	movff	indf1,btemp+30
 18057  013328  52E5               	movf	postdec1,f,c
 18058  01332A  006F FF9C  F047    	movff	indf1,btemp+29
 18059  013330  52E5               	movf	postdec1,f,c
 18060  013332  006F FF9C  F046    	movff	indf1,btemp+28
 18061  013338  52E5               	movf	postdec1,f,c
 18062  01333A  006F FF9C  F045    	movff	indf1,btemp+27
 18063  013340  52E5               	movf	postdec1,f,c
 18064  013342  006F FF9C  F044    	movff	indf1,btemp+26
 18065  013348  52E5               	movf	postdec1,f,c
 18066  01334A  006F FF9C  F043    	movff	indf1,btemp+25
 18067  013350  52E5               	movf	postdec1,f,c
 18068  013352  006F FF9C  F042    	movff	indf1,btemp+24
 18069  013358  0EF8               	movlw	248
 18070  01335A  26E1               	addwf	fsr1l,f,c
 18071  01335C  0EFF               	movlw	255
 18072  01335E  22E2               	addwfc	fsr1h,f,c
 18073  013360  503A               	movf	(btemp+16)^0,w,c
 18074  013362  2442               	addwf	(btemp+24)^0,w,c
 18075  013364  6E32               	movwf	(btemp+8)^0,c
 18076  013366  503B               	movf	(btemp+17)^0,w,c
 18077  013368  2043               	addwfc	(btemp+25)^0,w,c
 18078  01336A  6E33               	movwf	(btemp+9)^0,c
 18079  01336C  503C               	movf	(btemp+18)^0,w,c
 18080  01336E  2044               	addwfc	(btemp+26)^0,w,c
 18081  013370  6E34               	movwf	(btemp+10)^0,c
 18082  013372  503D               	movf	(btemp+19)^0,w,c
 18083  013374  2045               	addwfc	(btemp+27)^0,w,c
 18084  013376  6E35               	movwf	(btemp+11)^0,c
 18085  013378  503E               	movf	(btemp+20)^0,w,c
 18086  01337A  2046               	addwfc	(btemp+28)^0,w,c
 18087  01337C  6E36               	movwf	(btemp+12)^0,c
 18088  01337E  503F               	movf	(btemp+21)^0,w,c
 18089  013380  2047               	addwfc	(btemp+29)^0,w,c
 18090  013382  6E37               	movwf	(btemp+13)^0,c
 18091  013384  5040               	movf	(btemp+22)^0,w,c
 18092  013386  2048               	addwfc	(btemp+30)^0,w,c
 18093  013388  6E38               	movwf	(btemp+14)^0,c
 18094  01338A  5041               	movf	(btemp+23)^0,w,c
 18095  01338C  2049               	addwfc	(btemp+31)^0,w,c
 18096  01338E  6E39               	movwf	(btemp+15)^0,c
 18097                           
 18098                           ;stkvar	_years @ sp[(-57)+1]
 18099  013390  0EC8               	movlw	-56
 18100  013392  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 18101  013398  0EC9               	movlw	-55
 18102  01339A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 18103  0133A0  0ECA               	movlw	-54
 18104  0133A2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18105  0133A8  0ECB               	movlw	-53
 18106  0133AA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18107  0133B0  0ECC               	movlw	-52
 18108  0133B2  0060  F0DB  FFE3   	movff	btemp+12,plusw1
 18109  0133B8  0ECD               	movlw	-51
 18110  0133BA  0060  F0DF  FFE3   	movff	btemp+13,plusw1
 18111  0133C0  0ECE               	movlw	-50
 18112  0133C2  0060  F0E3  FFE3   	movff	btemp+14,plusw1
 18113  0133C8  0ECF               	movlw	-49
 18114  0133CA  0060  F0E7  FFE3   	movff	btemp+15,plusw1
 18115                           
 18116                           ;stkvar	_months @ sp[(-57)+49]
 18117  0133D0  0EF8               	movlw	-8
 18118  0133D2  6AE3               	clrf	plusw1,c
 18119  0133D4  0EF9               	movlw	-7
 18120  0133D6  6AE3               	clrf	plusw1,c
 18121  0133D8  D030               	goto	l16965
 18122  0133DA                     l16961:
 18123                           
 18124                           ;stkvar	_remdays @ sp[(-57)+25]
 18125  0133DA  50E1               	movf	fsr1l,w,c
 18126  0133DC  0FE0               	addlw	-32
 18127  0133DE  6ED9               	movwf	fsr2l,c
 18128  0133E0  50E2               	movf	fsr1h,w,c
 18129  0133E2  6EDA               	movwf	fsr2h,c
 18130  0133E4  0EFF               	movlw	255
 18131  0133E6  22DA               	addwfc	fsr2h,f,c
 18132                           
 18133                           ;stkvar	_months @ sp[(-57)+49]
 18134  0133E8  0EF8               	movlw	-8
 18135  0133EA  006F FF8C  F034    	movff	plusw1,btemp+10
 18136  0133F0  0EF9               	movlw	-7
 18137  0133F2  006F FF8C  F035    	movff	plusw1,btemp+11
 18138  0133F8  0E17               	movlw	low ___secs_to_tm@days_in_month
 18139  0133FA  2434               	addwf	(btemp+10)^0,w,c
 18140  0133FC  6EF6               	movwf	tblptrl,c
 18141  0133FE  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18142  013400  2035               	addwfc	(btemp+11)^0,w,c
 18143  013402  6EF7               	movwf	tblptrh,c
 18144  013404                     	if	1	;There are 3 active tblptr bytes
 18145  013404  6AF8               	clrf	tblptru,c
 18146  013406  0E00               	movlw	low (__mediumconst shr (0+16))
 18147  013408  22F8               	addwfc	tblptru,f,c
 18148  01340A                     	endif
 18149  01340A  0008               	tblrd		*
 18150  01340C  50F5               	movf	tablat,w,c
 18151  01340E  5EDE               	subwf	postinc2,f,c
 18152  013410  0E00               	movlw	0
 18153  013412  5ADE               	subwfb	postinc2,f,c
 18154  013414  5ADE               	subwfb	postinc2,f,c
 18155  013416  5ADE               	subwfb	postinc2,f,c
 18156                           
 18157                           ;stkvar	_months @ sp[(-57)+49]
 18158  013418  0EF8               	movlw	-8
 18159  01341A  50E3               	movf	plusw1,w,c
 18160  01341C  0F01               	addlw	1
 18161  01341E  6E2A               	movwf	btemp^0,c
 18162  013420  0EF8               	movlw	-8
 18163  013422  0060  F0AB  FFE3   	movff	btemp,plusw1
 18164  013428  6A2A               	clrf	btemp^0,c
 18165  01342A  0EF9               	movlw	-7
 18166  01342C  50E3               	movf	plusw1,w,c
 18167  01342E  202A               	addwfc	btemp^0,w,c
 18168  013430  6E2A               	movwf	btemp^0,c
 18169  013432  0EF9               	movlw	-7
 18170  013434  0060  F0AB  FFE3   	movff	btemp,plusw1
 18171  01343A                     l16965:
 18172                           
 18173                           ;stkvar	_months @ sp[(-57)+49]
 18174  01343A  0EF8               	movlw	-8
 18175  01343C  006F FF8C  F034    	movff	plusw1,btemp+10
 18176  013442  0EF9               	movlw	-7
 18177  013444  006F FF8C  F035    	movff	plusw1,btemp+11
 18178  01344A  0E17               	movlw	low ___secs_to_tm@days_in_month
 18179  01344C  2434               	addwf	(btemp+10)^0,w,c
 18180  01344E  6EF6               	movwf	tblptrl,c
 18181  013450  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18182  013452  2035               	addwfc	(btemp+11)^0,w,c
 18183  013454  6EF7               	movwf	tblptrh,c
 18184  013456                     	if	1	;There are 3 active tblptr bytes
 18185  013456  6AF8               	clrf	tblptru,c
 18186  013458  0E00               	movlw	low (__mediumconst shr (0+16))
 18187  01345A  22F8               	addwfc	tblptru,f,c
 18188  01345C                     	endif
 18189  01345C  0008               	tblrd		*
 18190  01345E  006F FFD4  F035    	movff	tablat,btemp+11
 18191  013464  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 18192  01346A  6A2F               	clrf	(btemp+5)^0,c
 18193  01346C  6A30               	clrf	(btemp+6)^0,c
 18194  01346E  6A31               	clrf	(btemp+7)^0,c
 18195                           
 18196                           ;stkvar	_remdays @ sp[(-57)+25]
 18197  013470  0EE0               	movlw	-32
 18198  013472  006F FF8C  F02A    	movff	plusw1,btemp
 18199  013478  502E               	movf	(btemp+4)^0,w,c
 18200  01347A  5C2A               	subwf	btemp^0,w,c
 18201  01347C  0EE1               	movlw	-31
 18202  01347E  006F FF8C  F02A    	movff	plusw1,btemp
 18203  013484  502F               	movf	(btemp+5)^0,w,c
 18204  013486  582A               	subwfb	btemp^0,w,c
 18205  013488  0EE2               	movlw	-30
 18206  01348A  006F FF8C  F02A    	movff	plusw1,btemp
 18207  013490  5030               	movf	(btemp+6)^0,w,c
 18208  013492  582A               	subwfb	btemp^0,w,c
 18209  013494  0EE3               	movlw	-29
 18210  013496  50E3               	movf	plusw1,w,c
 18211  013498  0A80               	xorlw	128
 18212  01349A  6E2A               	movwf	btemp^0,c
 18213  01349C  5031               	movf	(btemp+7)^0,w,c
 18214  01349E  0A80               	xorlw	128
 18215  0134A0  582A               	subwfb	btemp^0,w,c
 18216  0134A2  B0D8               	btfsc	status,0,c
 18217  0134A4  D79A               	goto	l16961
 18218                           
 18219                           ;stkvar	_months @ sp[(-57)+49]
 18220  0134A6  0EF9               	movlw	-7
 18221  0134A8  BEE3               	btfsc	plusw1,7,c
 18222  0134AA  D026               	goto	l16973
 18223  0134AC  0EF9               	movlw	-7
 18224  0134AE  50E3               	movf	plusw1,w,c
 18225  0134B0  E108               	bnz	u16580
 18226  0134B2  0EF8               	movlw	-8
 18227  0134B4  006F FF8C  F02A    	movff	plusw1,btemp
 18228  0134BA  0E0A               	movlw	10
 18229  0134BC  5E2A               	subwf	btemp^0,f,c
 18230  0134BE  A0D8               	btfss	status,0,c
 18231  0134C0  D01B               	goto	l16973
 18232  0134C2                     u16580:
 18233                           
 18234                           ;stkvar	_months @ sp[(-57)+49]
 18235  0134C2  50E1               	movf	fsr1l,w,c
 18236  0134C4  0FF8               	addlw	-8
 18237  0134C6  6ED9               	movwf	fsr2l,c
 18238  0134C8  50E2               	movf	fsr1h,w,c
 18239  0134CA  6EDA               	movwf	fsr2h,c
 18240  0134CC  0EFF               	movlw	255
 18241  0134CE  22DA               	addwfc	fsr2h,f,c
 18242  0134D0  0EF4               	movlw	244
 18243  0134D2  26DE               	addwf	postinc2,f,c
 18244  0134D4  0EFF               	movlw	255
 18245  0134D6  22DD               	addwfc	postdec2,f,c
 18246                           
 18247                           ;stkvar	_years @ sp[(-57)+1]
 18248  0134D8  50E1               	movf	fsr1l,w,c
 18249  0134DA  0FC8               	addlw	-56
 18250  0134DC  6ED9               	movwf	fsr2l,c
 18251  0134DE  50E2               	movf	fsr1h,w,c
 18252  0134E0  6EDA               	movwf	fsr2h,c
 18253  0134E2  0EFF               	movlw	255
 18254  0134E4  22DA               	addwfc	fsr2h,f,c
 18255  0134E6  2ADE               	incf	postinc2,f,c
 18256  0134E8  0E00               	movlw	0
 18257  0134EA  22DE               	addwfc	postinc2,f,c
 18258  0134EC  22DE               	addwfc	postinc2,f,c
 18259  0134EE  22DE               	addwfc	postinc2,f,c
 18260  0134F0  22DE               	addwfc	postinc2,f,c
 18261  0134F2  22DE               	addwfc	postinc2,f,c
 18262  0134F4  22DE               	addwfc	postinc2,f,c
 18263  0134F6  22DE               	addwfc	postinc2,f,c
 18264  0134F8                     l16973:
 18265                           
 18266                           ;stkvar	_years @ sp[(-57)+1]
 18267  0134F8  0EC8               	movlw	-56
 18268  0134FA  50E3               	movf	plusw1,w,c
 18269  0134FC  0F64               	addlw	100
 18270  0134FE  6E3A               	movwf	(btemp+16)^0,c
 18271  013500  0EC9               	movlw	-55
 18272  013502  006F FF8C  F03B    	movff	plusw1,btemp+17
 18273  013508  0E00               	movlw	0
 18274  01350A  223B               	addwfc	(btemp+17)^0,f,c
 18275  01350C  0ECA               	movlw	-54
 18276  01350E  006F FF8C  F03C    	movff	plusw1,btemp+18
 18277  013514  0E00               	movlw	0
 18278  013516  223C               	addwfc	(btemp+18)^0,f,c
 18279  013518  0ECB               	movlw	-53
 18280  01351A  006F FF8C  F03D    	movff	plusw1,btemp+19
 18281  013520  0E00               	movlw	0
 18282  013522  223D               	addwfc	(btemp+19)^0,f,c
 18283  013524  0ECC               	movlw	-52
 18284  013526  006F FF8C  F03E    	movff	plusw1,btemp+20
 18285  01352C  0E00               	movlw	0
 18286  01352E  223E               	addwfc	(btemp+20)^0,f,c
 18287  013530  0ECD               	movlw	-51
 18288  013532  006F FF8C  F03F    	movff	plusw1,btemp+21
 18289  013538  0E00               	movlw	0
 18290  01353A  223F               	addwfc	(btemp+21)^0,f,c
 18291  01353C  0ECE               	movlw	-50
 18292  01353E  006F FF8C  F040    	movff	plusw1,btemp+22
 18293  013544  0E00               	movlw	0
 18294  013546  2240               	addwfc	(btemp+22)^0,f,c
 18295  013548  0ECF               	movlw	-49
 18296  01354A  006F FF8C  F041    	movff	plusw1,btemp+23
 18297  013550  0E00               	movlw	0
 18298  013552  2241               	addwfc	(btemp+23)^0,f,c
 18299  013554  BE41               	btfsc	(btemp+23)^0,7,c
 18300  013556  D00C               	goto	u16590
 18301  013558  5041               	movf	(btemp+23)^0,w,c
 18302  01355A  1040               	iorwf	(btemp+22)^0,w,c
 18303  01355C  103F               	iorwf	(btemp+21)^0,w,c
 18304  01355E  103E               	iorwf	(btemp+20)^0,w,c
 18305  013560  103D               	iorwf	(btemp+19)^0,w,c
 18306  013562  103C               	iorwf	(btemp+18)^0,w,c
 18307  013564  E103               	bnz	u16591
 18308  013566  0E80               	movlw	128
 18309  013568  5C3B               	subwf	(btemp+17)^0,w,c
 18310  01356A  B0D8               	btfsc	status,0,c
 18311  01356C                     u16591:
 18312  01356C  EF22  F094         	goto	u16450
 18313  013570                     u16590:
 18314                           
 18315                           ;stkvar	_years @ sp[(-57)+1]
 18316  013570  0EC8               	movlw	-56
 18317  013572  50E3               	movf	plusw1,w,c
 18318  013574  0F64               	addlw	100
 18319  013576  6E3A               	movwf	(btemp+16)^0,c
 18320  013578  0EC9               	movlw	-55
 18321  01357A  006F FF8C  F03B    	movff	plusw1,btemp+17
 18322  013580  0E00               	movlw	0
 18323  013582  223B               	addwfc	(btemp+17)^0,f,c
 18324  013584  0ECA               	movlw	-54
 18325  013586  006F FF8C  F03C    	movff	plusw1,btemp+18
 18326  01358C  0E00               	movlw	0
 18327  01358E  223C               	addwfc	(btemp+18)^0,f,c
 18328  013590  0ECB               	movlw	-53
 18329  013592  006F FF8C  F03D    	movff	plusw1,btemp+19
 18330  013598  0E00               	movlw	0
 18331  01359A  223D               	addwfc	(btemp+19)^0,f,c
 18332  01359C  0ECC               	movlw	-52
 18333  01359E  006F FF8C  F03E    	movff	plusw1,btemp+20
 18334  0135A4  0E00               	movlw	0
 18335  0135A6  223E               	addwfc	(btemp+20)^0,f,c
 18336  0135A8  0ECD               	movlw	-51
 18337  0135AA  006F FF8C  F03F    	movff	plusw1,btemp+21
 18338  0135B0  0E00               	movlw	0
 18339  0135B2  223F               	addwfc	(btemp+21)^0,f,c
 18340  0135B4  0ECE               	movlw	-50
 18341  0135B6  006F FF8C  F040    	movff	plusw1,btemp+22
 18342  0135BC  0E00               	movlw	0
 18343  0135BE  2240               	addwfc	(btemp+22)^0,f,c
 18344  0135C0  0ECF               	movlw	-49
 18345  0135C2  006F FF8C  F041    	movff	plusw1,btemp+23
 18346  0135C8  0E00               	movlw	0
 18347  0135CA  2241               	addwfc	(btemp+23)^0,f,c
 18348  0135CC  AE41               	btfss	(btemp+23)^0,7,c
 18349  0135CE  D011               	goto	l16981
 18350  0135D0  0E80               	movlw	128
 18351  0135D2  5C3B               	subwf	(btemp+17)^0,w,c
 18352  0135D4  0EFF               	movlw	255
 18353  0135D6  583C               	subwfb	(btemp+18)^0,w,c
 18354  0135D8  0EFF               	movlw	255
 18355  0135DA  583D               	subwfb	(btemp+19)^0,w,c
 18356  0135DC  0EFF               	movlw	255
 18357  0135DE  583E               	subwfb	(btemp+20)^0,w,c
 18358  0135E0  0EFF               	movlw	255
 18359  0135E2  583F               	subwfb	(btemp+21)^0,w,c
 18360  0135E4  0EFF               	movlw	255
 18361  0135E6  5840               	subwfb	(btemp+22)^0,w,c
 18362  0135E8  0EFF               	movlw	255
 18363  0135EA  5841               	subwfb	(btemp+23)^0,w,c
 18364  0135EC  A0D8               	btfss	status,0,c
 18365  0135EE  EF22  F094         	goto	u16450
 18366  0135F2                     l16981:
 18367                           
 18368                           ;stkvar	_years @ sp[(-57)+1]
 18369  0135F2  0EC8               	movlw	-56
 18370  0135F4  50E3               	movf	plusw1,w,c
 18371  0135F6  0F64               	addlw	100
 18372  0135F8  6E34               	movwf	(btemp+10)^0,c
 18373  0135FA  0EC9               	movlw	-55
 18374  0135FC  006F FF8C  F035    	movff	plusw1,btemp+11
 18375  013602  0E00               	movlw	0
 18376  013604  2235               	addwfc	(btemp+11)^0,f,c
 18377                           
 18378                           ;stkvar	_tm @ sp[(-57)+-10]
 18379  013606  0EBD               	movlw	-67
 18380  013608  006F FF8C  F032    	movff	plusw1,btemp+8
 18381  01360E  0EBE               	movlw	-66
 18382  013610  006F FF8C  F033    	movff	plusw1,btemp+9
 18383  013616  0E0A               	movlw	10
 18384  013618  2432               	addwf	(btemp+8)^0,w,c
 18385  01361A  6ED9               	movwf	fsr2l,c
 18386  01361C  0E00               	movlw	0
 18387  01361E  2033               	addwfc	(btemp+9)^0,w,c
 18388  013620  6EDA               	movwf	fsr2h,c
 18389  013622  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18390  013628  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18391                           
 18392                           ;stkvar	_months @ sp[(-57)+49]
 18393  01362E  0EF8               	movlw	-8
 18394  013630  50E3               	movf	plusw1,w,c
 18395  013632  0F02               	addlw	2
 18396  013634  6E34               	movwf	(btemp+10)^0,c
 18397  013636  0EF9               	movlw	-7
 18398  013638  006F FF8C  F035    	movff	plusw1,btemp+11
 18399  01363E  0E00               	movlw	0
 18400  013640  2235               	addwfc	(btemp+11)^0,f,c
 18401                           
 18402                           ;stkvar	_tm @ sp[(-57)+-10]
 18403  013642  0EBD               	movlw	-67
 18404  013644  006F FF8C  F032    	movff	plusw1,btemp+8
 18405  01364A  0EBE               	movlw	-66
 18406  01364C  006F FF8C  F033    	movff	plusw1,btemp+9
 18407  013652  0E08               	movlw	8
 18408  013654  2432               	addwf	(btemp+8)^0,w,c
 18409  013656  6ED9               	movwf	fsr2l,c
 18410  013658  0E00               	movlw	0
 18411  01365A  2033               	addwfc	(btemp+9)^0,w,c
 18412  01365C  6EDA               	movwf	fsr2h,c
 18413  01365E  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18414  013664  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18415                           
 18416                           ;stkvar	_remdays @ sp[(-57)+25]
 18417  01366A  0EE0               	movlw	-32
 18418  01366C  50E3               	movf	plusw1,w,c
 18419  01366E  0F01               	addlw	1
 18420  013670  6E34               	movwf	(btemp+10)^0,c
 18421  013672  0EE1               	movlw	-31
 18422  013674  006F FF8C  F035    	movff	plusw1,btemp+11
 18423  01367A  0E00               	movlw	0
 18424  01367C  2235               	addwfc	(btemp+11)^0,f,c
 18425                           
 18426                           ;stkvar	_tm @ sp[(-57)+-10]
 18427  01367E  0EBD               	movlw	-67
 18428  013680  006F FF8C  F032    	movff	plusw1,btemp+8
 18429  013686  0EBE               	movlw	-66
 18430  013688  006F FF8C  F033    	movff	plusw1,btemp+9
 18431  01368E  0E06               	movlw	6
 18432  013690  2432               	addwf	(btemp+8)^0,w,c
 18433  013692  6ED9               	movwf	fsr2l,c
 18434  013694  0E00               	movlw	0
 18435  013696  2033               	addwfc	(btemp+9)^0,w,c
 18436  013698  6EDA               	movwf	fsr2h,c
 18437  01369A  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18438  0136A0  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18439                           
 18440                           ;stkvar	_wday @ sp[(-57)+55]
 18441  0136A6  50E1               	movf	fsr1l,w,c
 18442  0136A8  0FFE               	addlw	-2
 18443  0136AA  6ED9               	movwf	fsr2l,c
 18444  0136AC  50E2               	movf	fsr1h,w,c
 18445  0136AE  6EDA               	movwf	fsr2h,c
 18446  0136B0  0EFF               	movlw	255
 18447  0136B2  22DA               	addwfc	fsr2h,f,c
 18448                           
 18449                           ;stkvar	_tm @ sp[(-57)+-10]
 18450  0136B4  0EBD               	movlw	-67
 18451  0136B6  006F FF8C  F034    	movff	plusw1,btemp+10
 18452  0136BC  0EBE               	movlw	-66
 18453  0136BE  006F FF8C  F035    	movff	plusw1,btemp+11
 18454  0136C4  0E0C               	movlw	12
 18455  0136C6  2434               	addwf	(btemp+10)^0,w,c
 18456  0136C8  6EE9               	movwf	fsr0l,c
 18457  0136CA  0E00               	movlw	0
 18458  0136CC  2035               	addwfc	(btemp+11)^0,w,c
 18459  0136CE  6EEA               	movwf	fsr0h,c
 18460  0136D0  006F FF7B FFEE     	movff	postinc2,postinc0
 18461  0136D6  006F FF77 FFED     	movff	postdec2,postdec0
 18462                           
 18463                           ;stkvar	_yday @ sp[(-57)+53]
 18464  0136DC  50E1               	movf	fsr1l,w,c
 18465  0136DE  0FFC               	addlw	-4
 18466  0136E0  6ED9               	movwf	fsr2l,c
 18467  0136E2  50E2               	movf	fsr1h,w,c
 18468  0136E4  6EDA               	movwf	fsr2h,c
 18469  0136E6  0EFF               	movlw	255
 18470  0136E8  22DA               	addwfc	fsr2h,f,c
 18471                           
 18472                           ;stkvar	_tm @ sp[(-57)+-10]
 18473  0136EA  0EBD               	movlw	-67
 18474  0136EC  006F FF8C  F034    	movff	plusw1,btemp+10
 18475  0136F2  0EBE               	movlw	-66
 18476  0136F4  006F FF8C  F035    	movff	plusw1,btemp+11
 18477  0136FA  0E0E               	movlw	14
 18478  0136FC  2434               	addwf	(btemp+10)^0,w,c
 18479  0136FE  6EE9               	movwf	fsr0l,c
 18480  013700  0E00               	movlw	0
 18481  013702  2035               	addwfc	(btemp+11)^0,w,c
 18482  013704  6EEA               	movwf	fsr0h,c
 18483  013706  006F FF7B FFEE     	movff	postinc2,postinc0
 18484  01370C  006F FF77 FFED     	movff	postdec2,postdec0
 18485  013712  0E10               	movlw	16
 18486  013714  6EE6               	movwf	postinc1,c
 18487  013716  0E0E               	movlw	14
 18488  013718  6EE6               	movwf	postinc1,c
 18489  01371A  0E00               	movlw	0
 18490  01371C  6EE6               	movwf	postinc1,c
 18491  01371E  0E00               	movlw	0
 18492  013720  6EE6               	movwf	postinc1,c
 18493                           
 18494                           ;stkvar	_remsecs @ sp[(-61)+41]
 18495  013722  0EEC               	movlw	-20
 18496  013724  006F FF8F FFE6     	movff	plusw1,postinc1
 18497  01372A  006F FF8F FFE6     	movff	plusw1,postinc1
 18498  013730  006F FF8F FFE6     	movff	plusw1,postinc1
 18499  013736  006F FF8F FFE6     	movff	plusw1,postinc1
 18500  01373C  EC70  F0F1         	call	___aldiv	;wreg free
 18501  013740  0060  F0A8  F034   	movff	btemp,btemp+10
 18502  013746  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18503                           
 18504                           ;stkvar	_tm @ sp[(-57)+-10]
 18505  01374C  0EBD               	movlw	-67
 18506  01374E  006F FF8C  F032    	movff	plusw1,btemp+8
 18507  013754  0EBE               	movlw	-66
 18508  013756  006F FF8C  F033    	movff	plusw1,btemp+9
 18509  01375C  0E04               	movlw	4
 18510  01375E  2432               	addwf	(btemp+8)^0,w,c
 18511  013760  6ED9               	movwf	fsr2l,c
 18512  013762  0E00               	movlw	0
 18513  013764  2033               	addwfc	(btemp+9)^0,w,c
 18514  013766  6EDA               	movwf	fsr2h,c
 18515  013768  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18516  01376E  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18517  013774  0E3C               	movlw	60
 18518  013776  6EE6               	movwf	postinc1,c
 18519  013778  0E00               	movlw	0
 18520  01377A  6EE6               	movwf	postinc1,c
 18521  01377C  0E00               	movlw	0
 18522  01377E  6EE6               	movwf	postinc1,c
 18523  013780  0E00               	movlw	0
 18524  013782  6EE6               	movwf	postinc1,c
 18525  013784  0E3C               	movlw	60
 18526  013786  6EE6               	movwf	postinc1,c
 18527  013788  0E00               	movlw	0
 18528  01378A  6EE6               	movwf	postinc1,c
 18529  01378C  0E00               	movlw	0
 18530  01378E  6EE6               	movwf	postinc1,c
 18531  013790  0E00               	movlw	0
 18532  013792  6EE6               	movwf	postinc1,c
 18533                           
 18534                           ;stkvar	_remsecs @ sp[(-65)+41]
 18535  013794  0EE8               	movlw	-24
 18536  013796  006F FF8F FFE6     	movff	plusw1,postinc1
 18537  01379C  006F FF8F FFE6     	movff	plusw1,postinc1
 18538  0137A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18539  0137A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18540  0137AE  EC70  F0F1         	call	___aldiv	;wreg free
 18541  0137B2  0060  F0AB  FFE6   	movff	btemp,postinc1
 18542  0137B8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 18543  0137BE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 18544  0137C4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 18545  0137CA  ECF6  F0F5         	call	___almod	;wreg free
 18546  0137CE  0060  F0A8  F034   	movff	btemp,btemp+10
 18547  0137D4  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18548                           
 18549                           ;stkvar	_tm @ sp[(-57)+-10]
 18550  0137DA  0EBD               	movlw	-67
 18551  0137DC  006F FF8C  F032    	movff	plusw1,btemp+8
 18552  0137E2  0EBE               	movlw	-66
 18553  0137E4  006F FF8C  F033    	movff	plusw1,btemp+9
 18554  0137EA  0E02               	movlw	2
 18555  0137EC  2432               	addwf	(btemp+8)^0,w,c
 18556  0137EE  6ED9               	movwf	fsr2l,c
 18557  0137F0  0E00               	movlw	0
 18558  0137F2  2033               	addwfc	(btemp+9)^0,w,c
 18559  0137F4  6EDA               	movwf	fsr2h,c
 18560  0137F6  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18561  0137FC  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18562  013802  0E3C               	movlw	60
 18563  013804  6EE6               	movwf	postinc1,c
 18564  013806  0E00               	movlw	0
 18565  013808  6EE6               	movwf	postinc1,c
 18566  01380A  0E00               	movlw	0
 18567  01380C  6EE6               	movwf	postinc1,c
 18568  01380E  0E00               	movlw	0
 18569  013810  6EE6               	movwf	postinc1,c
 18570                           
 18571                           ;stkvar	_remsecs @ sp[(-61)+41]
 18572  013812  0EEC               	movlw	-20
 18573  013814  006F FF8F FFE6     	movff	plusw1,postinc1
 18574  01381A  006F FF8F FFE6     	movff	plusw1,postinc1
 18575  013820  006F FF8F FFE6     	movff	plusw1,postinc1
 18576  013826  006F FF8F FFE6     	movff	plusw1,postinc1
 18577  01382C  ECF6  F0F5         	call	___almod	;wreg free
 18578  013830  0060  F0A8  F034   	movff	btemp,btemp+10
 18579  013836  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18580                           
 18581                           ;stkvar	_tm @ sp[(-57)+-10]
 18582  01383C  0EBD               	movlw	-67
 18583  01383E  006F FF8F FFD9     	movff	plusw1,fsr2l
 18584  013844  0EBE               	movlw	-66
 18585  013846  006F FF8F FFDA     	movff	plusw1,fsr2h
 18586  01384C  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18587  013852  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18588  013858  0E00               	movlw	0
 18589  01385A  6E2A               	movwf	btemp^0,c
 18590  01385C  6A2B               	clrf	(btemp+1)^0,c
 18591  01385E  6A2C               	clrf	(btemp+2)^0,c
 18592  013860  6A2D               	clrf	(btemp+3)^0,c
 18593  013862                     l3858:
 18594                           
 18595                           ; ___secs_to_tm: autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10
      +                          , argsize = 10, vargsize = 0
 18596  013862  0EBD               	movlw	189
 18597  013864  26E1               	addwf	fsr1l,f,c
 18598  013866  0EFF               	movlw	255
 18599  013868  22E2               	addwfc	fsr1h,f,c
 18600  01386A  0012               	return		;funcret
 18601  01386C                     __end_of___secs_to_tm:
 18602                           	opt callstack 0
 18603                           
 18604 ;; *************** function ___omul *****************
 18605 ;; Defined at:
 18606 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 18607 ;; Parameters:    Size  Location     Type
 18608 ;;  multiplier      8  [STACK] unsigned long long 
 18609 ;;  multiplicand    8  [STACK] unsigned long long 
 18610 ;; Auto vars:     Size  Location     Type
 18611 ;;  product         8  [STACK] unsigned long long 
 18612 ;; Return value:  Size  Location     Type
 18613 ;;                  8  [STACK] unsigned long long 
 18614 ;; Registers used:
 18615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18616 ;; Tracked objects:
 18617 ;;		On entry : 0/0
 18618 ;;		On exit  : 0/0
 18619 ;;		Unchanged: 0/0
 18620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18625 ;;Total ram usage:        0 bytes
 18626 ;; Hardware stack levels used:    1
 18627 ;; Hardware stack levels required when called:   15
 18628 ;; This function calls:
 18629 ;;		Nothing
 18630 ;; This function is called by:
 18631 ;;		___secs_to_tm
 18632 ;;		___year_to_secs
 18633 ;; This function uses a reentrant model
 18634 ;;
 18635                           
 18636                           	psect	text50
 18637  01F176                     __ptext50:
 18638                           	opt callstack 0
 18639  01F176                     ___omul:
 18640                           	opt callstack 0
 18641                           
 18642                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18643  01F176  0E08               	movlw	8
 18644  01F178  26E1               	addwf	fsr1l,f,c
 18645  01F17A  0E00               	movlw	0
 18646  01F17C  22E2               	addwfc	fsr1h,f,c
 18647                           
 18648                           ;stkvar	_product @ sp[(-8)+0]
 18649                           
 18650                           ;incstack = 0
 18651  01F17E  0E07               	movlw	7
 18652  01F180  6E2A               	movwf	btemp^0,c
 18653  01F182  0EF8               	movlw	-8
 18654  01F184                     u8141:
 18655  01F184  6AE3               	clrf	plusw1,c
 18656  01F186  2AE8               	incf	wreg,f,c
 18657  01F188  062A               	decf	btemp^0,f,c
 18658  01F18A  E2FC               	bc	u8141
 18659  01F18C                     l10291:
 18660                           
 18661                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18662  01F18C  0EF0               	movlw	-16
 18663  01F18E  A0E3               	btfss	plusw1,0,c
 18664  01F190  D050               	goto	l10295
 18665                           
 18666                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18667                           ;stkvar	_product @ sp[(-8)+0]
 18668  01F192  0EF8               	movlw	-8
 18669  01F194  50E3               	movf	plusw1,w,c
 18670  01F196  6E2A               	movwf	btemp^0,c
 18671  01F198  0EE8               	movlw	-24
 18672  01F19A  50E3               	movf	plusw1,w,c
 18673  01F19C  262A               	addwf	btemp^0,f,c
 18674  01F19E  0EF8               	movlw	-8
 18675  01F1A0  0060  F0AB  FFE3   	movff	btemp,plusw1
 18676  01F1A6  0EF9               	movlw	-7
 18677  01F1A8  50E3               	movf	plusw1,w,c
 18678  01F1AA  6E2A               	movwf	btemp^0,c
 18679  01F1AC  0EE9               	movlw	-23
 18680  01F1AE  50E3               	movf	plusw1,w,c
 18681  01F1B0  222A               	addwfc	btemp^0,f,c
 18682  01F1B2  0EF9               	movlw	-7
 18683  01F1B4  0060  F0AB  FFE3   	movff	btemp,plusw1
 18684  01F1BA  0EFA               	movlw	-6
 18685  01F1BC  50E3               	movf	plusw1,w,c
 18686  01F1BE  6E2A               	movwf	btemp^0,c
 18687  01F1C0  0EEA               	movlw	-22
 18688  01F1C2  50E3               	movf	plusw1,w,c
 18689  01F1C4  222A               	addwfc	btemp^0,f,c
 18690  01F1C6  0EFA               	movlw	-6
 18691  01F1C8  0060  F0AB  FFE3   	movff	btemp,plusw1
 18692  01F1CE  0EFB               	movlw	-5
 18693  01F1D0  50E3               	movf	plusw1,w,c
 18694  01F1D2  6E2A               	movwf	btemp^0,c
 18695  01F1D4  0EEB               	movlw	-21
 18696  01F1D6  50E3               	movf	plusw1,w,c
 18697  01F1D8  222A               	addwfc	btemp^0,f,c
 18698  01F1DA  0EFB               	movlw	-5
 18699  01F1DC  0060  F0AB  FFE3   	movff	btemp,plusw1
 18700  01F1E2  0EFC               	movlw	-4
 18701  01F1E4  50E3               	movf	plusw1,w,c
 18702  01F1E6  6E2A               	movwf	btemp^0,c
 18703  01F1E8  0EEC               	movlw	-20
 18704  01F1EA  50E3               	movf	plusw1,w,c
 18705  01F1EC  222A               	addwfc	btemp^0,f,c
 18706  01F1EE  0EFC               	movlw	-4
 18707  01F1F0  0060  F0AB  FFE3   	movff	btemp,plusw1
 18708  01F1F6  0EFD               	movlw	-3
 18709  01F1F8  50E3               	movf	plusw1,w,c
 18710  01F1FA  6E2A               	movwf	btemp^0,c
 18711  01F1FC  0EED               	movlw	-19
 18712  01F1FE  50E3               	movf	plusw1,w,c
 18713  01F200  222A               	addwfc	btemp^0,f,c
 18714  01F202  0EFD               	movlw	-3
 18715  01F204  0060  F0AB  FFE3   	movff	btemp,plusw1
 18716  01F20A  0EFE               	movlw	-2
 18717  01F20C  50E3               	movf	plusw1,w,c
 18718  01F20E  6E2A               	movwf	btemp^0,c
 18719  01F210  0EEE               	movlw	-18
 18720  01F212  50E3               	movf	plusw1,w,c
 18721  01F214  222A               	addwfc	btemp^0,f,c
 18722  01F216  0EFE               	movlw	-2
 18723  01F218  0060  F0AB  FFE3   	movff	btemp,plusw1
 18724  01F21E  0EFF               	movlw	-1
 18725  01F220  50E3               	movf	plusw1,w,c
 18726  01F222  6E2A               	movwf	btemp^0,c
 18727  01F224  0EEF               	movlw	-17
 18728  01F226  50E3               	movf	plusw1,w,c
 18729  01F228  222A               	addwfc	btemp^0,f,c
 18730  01F22A  0EFF               	movlw	-1
 18731  01F22C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18732  01F232                     l10295:
 18733                           
 18734                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18735  01F232  90D8               	bcf	status,0,c
 18736  01F234  0EE8               	movlw	-24
 18737  01F236  36E3               	rlcf	plusw1,f,c
 18738  01F238  0EE9               	movlw	-23
 18739  01F23A  36E3               	rlcf	plusw1,f,c
 18740  01F23C  0EEA               	movlw	-22
 18741  01F23E  36E3               	rlcf	plusw1,f,c
 18742  01F240  0EEB               	movlw	-21
 18743  01F242  36E3               	rlcf	plusw1,f,c
 18744  01F244  0EEC               	movlw	-20
 18745  01F246  36E3               	rlcf	plusw1,f,c
 18746  01F248  0EED               	movlw	-19
 18747  01F24A  36E3               	rlcf	plusw1,f,c
 18748  01F24C  0EEE               	movlw	-18
 18749  01F24E  36E3               	rlcf	plusw1,f,c
 18750  01F250  0EEF               	movlw	-17
 18751  01F252  36E3               	rlcf	plusw1,f,c
 18752                           
 18753                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18754  01F254  90D8               	bcf	status,0,c
 18755  01F256  0EF7               	movlw	-9
 18756  01F258  32E3               	rrcf	plusw1,f,c
 18757  01F25A  0EF6               	movlw	-10
 18758  01F25C  32E3               	rrcf	plusw1,f,c
 18759  01F25E  0EF5               	movlw	-11
 18760  01F260  32E3               	rrcf	plusw1,f,c
 18761  01F262  0EF4               	movlw	-12
 18762  01F264  32E3               	rrcf	plusw1,f,c
 18763  01F266  0EF3               	movlw	-13
 18764  01F268  32E3               	rrcf	plusw1,f,c
 18765  01F26A  0EF2               	movlw	-14
 18766  01F26C  32E3               	rrcf	plusw1,f,c
 18767  01F26E  0EF1               	movlw	-15
 18768  01F270  32E3               	rrcf	plusw1,f,c
 18769  01F272  0EF0               	movlw	-16
 18770  01F274  32E3               	rrcf	plusw1,f,c
 18771                           
 18772                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18773  01F276  0EF0               	movlw	-16
 18774  01F278  50E3               	movf	plusw1,w,c
 18775  01F27A  E188               	bnz	l10291
 18776  01F27C  0EF1               	movlw	-15
 18777  01F27E  50E3               	movf	plusw1,w,c
 18778  01F280  E185               	bnz	l10291
 18779  01F282  0EF2               	movlw	-14
 18780  01F284  50E3               	movf	plusw1,w,c
 18781  01F286  E182               	bnz	l10291
 18782  01F288  0EF3               	movlw	-13
 18783  01F28A  50E3               	movf	plusw1,w,c
 18784  01F28C  E10C               	bnz	u8161
 18785  01F28E  0EF4               	movlw	-12
 18786  01F290  50E3               	movf	plusw1,w,c
 18787  01F292  E109               	bnz	u8161
 18788  01F294  0EF5               	movlw	-11
 18789  01F296  50E3               	movf	plusw1,w,c
 18790  01F298  E106               	bnz	u8161
 18791  01F29A  0EF6               	movlw	-10
 18792  01F29C  50E3               	movf	plusw1,w,c
 18793  01F29E  E103               	bnz	u8161
 18794  01F2A0  0EF7               	movlw	-9
 18795  01F2A2  50E3               	movf	plusw1,w,c
 18796  01F2A4  A4D8               	btfss	status,2,c
 18797  01F2A6                     u8161:
 18798  01F2A6  D772               	goto	l10291
 18799                           
 18800                           ;stkvar	_product @ sp[(-8)+0]
 18801  01F2A8  0EF8               	movlw	248
 18802  01F2AA  24E1               	addwf	fsr1l,w,c
 18803  01F2AC  6ED9               	movwf	fsr2l,c
 18804  01F2AE  0EFF               	movlw	255
 18805  01F2B0  20E2               	addwfc	fsr1h,w,c
 18806  01F2B2  6EDA               	movwf	fsr2h,c
 18807                           
 18808                           ;stkvar	?___omul @ sp[(-8)+-8]
 18809  01F2B4  0E08               	movlw	8
 18810  01F2B6  6E2A               	movwf	btemp^0,c
 18811  01F2B8  0EF0               	movlw	-16
 18812  01F2BA                     us817999:
 18813  01F2BA  006F FF7B FFE3     	movff	postinc2,plusw1
 18814  01F2C0  28E8               	incf	wreg,w,c
 18815  01F2C2  2E2A               	decfsz	btemp^0,f,c
 18816  01F2C4  D7FA               	bra	us817999
 18817                           
 18818                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
 18819  01F2C6  0EF8               	movlw	248
 18820  01F2C8  26E1               	addwf	fsr1l,f,c
 18821  01F2CA  0EFF               	movlw	255
 18822  01F2CC  22E2               	addwfc	fsr1h,f,c
 18823  01F2CE  0012               	return		;funcret
 18824  01F2D0                     __end_of___omul:
 18825                           	opt callstack 0
 18826                           
 18827 ;; *************** function ___lmul *****************
 18828 ;; Defined at:
 18829 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 18830 ;; Parameters:    Size  Location     Type
 18831 ;;  multiplier      4  [STACK] unsigned long 
 18832 ;;  multiplicand    4  [STACK] unsigned long 
 18833 ;; Auto vars:     Size  Location     Type
 18834 ;;  product         4  [STACK] unsigned long 
 18835 ;; Return value:  Size  Location     Type
 18836 ;;                  4  [STACK] unsigned long 
 18837 ;; Registers used:
 18838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18839 ;; Tracked objects:
 18840 ;;		On entry : 0/0
 18841 ;;		On exit  : 0/0
 18842 ;;		Unchanged: 0/0
 18843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18848 ;;Total ram usage:        0 bytes
 18849 ;; Hardware stack levels used:    1
 18850 ;; Hardware stack levels required when called:   15
 18851 ;; This function calls:
 18852 ;;		Nothing
 18853 ;; This function is called by:
 18854 ;;		___secs_to_tm
 18855 ;;		_rule_to_secs
 18856 ;;		___year_to_secs
 18857 ;; This function uses a reentrant model
 18858 ;;
 18859                           
 18860                           	psect	text51
 18861  000662                     __ptext51:
 18862                           	opt callstack 0
 18863  000662                     ___lmul:
 18864                           	opt callstack 0
 18865                           
 18866                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18867  000662  52E6               	movf	postinc1,f,c
 18868  000664  52E6               	movf	postinc1,f,c
 18869  000666  52E6               	movf	postinc1,f,c
 18870  000668  52E6               	movf	postinc1,f,c
 18871                           
 18872                           ;stkvar	_product @ sp[(-4)+0]
 18873                           
 18874                           ;incstack = 0
 18875  00066A  0EFC               	movlw	-4
 18876  00066C  6AE3               	clrf	plusw1,c
 18877  00066E  0EFD               	movlw	-3
 18878  000670  6AE3               	clrf	plusw1,c
 18879  000672  0EFE               	movlw	-2
 18880  000674  6AE3               	clrf	plusw1,c
 18881  000676  0EFF               	movlw	-1
 18882  000678  6AE3               	clrf	plusw1,c
 18883  00067A                     l2742:
 18884                           
 18885                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18886  00067A  0EF8               	movlw	-8
 18887  00067C  A0E3               	btfss	plusw1,0,c
 18888  00067E  D028               	goto	l10281
 18889                           
 18890                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18891                           ;stkvar	_product @ sp[(-4)+0]
 18892  000680  0EFC               	movlw	-4
 18893  000682  50E3               	movf	plusw1,w,c
 18894  000684  6E2A               	movwf	btemp^0,c
 18895  000686  0EF4               	movlw	-12
 18896  000688  50E3               	movf	plusw1,w,c
 18897  00068A  262A               	addwf	btemp^0,f,c
 18898  00068C  0EFC               	movlw	-4
 18899  00068E  0060  F0AB  FFE3   	movff	btemp,plusw1
 18900  000694  0EFD               	movlw	-3
 18901  000696  50E3               	movf	plusw1,w,c
 18902  000698  6E2A               	movwf	btemp^0,c
 18903  00069A  0EF5               	movlw	-11
 18904  00069C  50E3               	movf	plusw1,w,c
 18905  00069E  222A               	addwfc	btemp^0,f,c
 18906  0006A0  0EFD               	movlw	-3
 18907  0006A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 18908  0006A8  0EFE               	movlw	-2
 18909  0006AA  50E3               	movf	plusw1,w,c
 18910  0006AC  6E2A               	movwf	btemp^0,c
 18911  0006AE  0EF6               	movlw	-10
 18912  0006B0  50E3               	movf	plusw1,w,c
 18913  0006B2  222A               	addwfc	btemp^0,f,c
 18914  0006B4  0EFE               	movlw	-2
 18915  0006B6  0060  F0AB  FFE3   	movff	btemp,plusw1
 18916  0006BC  0EFF               	movlw	-1
 18917  0006BE  50E3               	movf	plusw1,w,c
 18918  0006C0  6E2A               	movwf	btemp^0,c
 18919  0006C2  0EF7               	movlw	-9
 18920  0006C4  50E3               	movf	plusw1,w,c
 18921  0006C6  222A               	addwfc	btemp^0,f,c
 18922  0006C8  0EFF               	movlw	-1
 18923  0006CA  0060  F0AB  FFE3   	movff	btemp,plusw1
 18924  0006D0                     l10281:
 18925                           
 18926                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18927  0006D0  90D8               	bcf	status,0,c
 18928  0006D2  0EF4               	movlw	-12
 18929  0006D4  36E3               	rlcf	plusw1,f,c
 18930  0006D6  0EF5               	movlw	-11
 18931  0006D8  36E3               	rlcf	plusw1,f,c
 18932  0006DA  0EF6               	movlw	-10
 18933  0006DC  36E3               	rlcf	plusw1,f,c
 18934  0006DE  0EF7               	movlw	-9
 18935  0006E0  36E3               	rlcf	plusw1,f,c
 18936                           
 18937                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18938  0006E2  90D8               	bcf	status,0,c
 18939  0006E4  0EFB               	movlw	-5
 18940  0006E6  32E3               	rrcf	plusw1,f,c
 18941  0006E8  0EFA               	movlw	-6
 18942  0006EA  32E3               	rrcf	plusw1,f,c
 18943  0006EC  0EF9               	movlw	-7
 18944  0006EE  32E3               	rrcf	plusw1,f,c
 18945  0006F0  0EF8               	movlw	-8
 18946  0006F2  32E3               	rrcf	plusw1,f,c
 18947                           
 18948                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18949  0006F4  0EF8               	movlw	-8
 18950  0006F6  50E3               	movf	plusw1,w,c
 18951  0006F8  E1C0               	bnz	l2742
 18952  0006FA  0EF9               	movlw	-7
 18953  0006FC  50E3               	movf	plusw1,w,c
 18954  0006FE  E1BD               	bnz	l2742
 18955  000700  0EFA               	movlw	-6
 18956  000702  50E3               	movf	plusw1,w,c
 18957  000704  E1BA               	bnz	l2742
 18958  000706  0EFB               	movlw	-5
 18959  000708  50E3               	movf	plusw1,w,c
 18960  00070A  A4D8               	btfss	status,2,c
 18961  00070C  D7B6               	goto	l2742
 18962                           
 18963                           ;stkvar	_product @ sp[(-4)+0]
 18964  00070E  0EFC               	movlw	-4
 18965  000710  006F FF8C  F02A    	movff	plusw1,btemp
 18966  000716  0EFD               	movlw	-3
 18967  000718  006F FF8C  F02B    	movff	plusw1,btemp+1
 18968  00071E  0EFE               	movlw	-2
 18969  000720  006F FF8C  F02C    	movff	plusw1,btemp+2
 18970  000726  0EFF               	movlw	-1
 18971  000728  006F FF8C  F02D    	movff	plusw1,btemp+3
 18972                           
 18973                           ; ___lmul: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18974  00072E  0EF4               	movlw	244
 18975  000730  26E1               	addwf	fsr1l,f,c
 18976  000732  0EFF               	movlw	255
 18977  000734  22E2               	addwfc	fsr1h,f,c
 18978  000736  0012               	return		;funcret
 18979  000738                     __end_of___lmul:
 18980                           	opt callstack 0
 18981                           
 18982 ;; *************** function ___almod *****************
 18983 ;; Defined at:
 18984 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/almod.c"
 18985 ;; Parameters:    Size  Location     Type
 18986 ;;  dividend        4  [STACK] long 
 18987 ;;  divisor         4  [STACK] long 
 18988 ;; Auto vars:     Size  Location     Type
 18989 ;;  sign            1  [STACK] unsigned char 
 18990 ;;  counter         1  [STACK] unsigned char 
 18991 ;; Return value:  Size  Location     Type
 18992 ;;                  4  [STACK] long 
 18993 ;; Registers used:
 18994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18995 ;; Tracked objects:
 18996 ;;		On entry : 0/39
 18997 ;;		On exit  : 0/0
 18998 ;;		Unchanged: 0/0
 18999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19004 ;;Total ram usage:        0 bytes
 19005 ;; Hardware stack levels used:    1
 19006 ;; Hardware stack levels required when called:   15
 19007 ;; This function calls:
 19008 ;;		Nothing
 19009 ;; This function is called by:
 19010 ;;		___secs_to_tm
 19011 ;; This function uses a reentrant model
 19012 ;;
 19013                           
 19014                           	psect	text52
 19015  01EBEC                     __ptext52:
 19016                           	opt callstack 0
 19017  01EBEC                     ___almod:
 19018                           	opt callstack 0
 19019                           
 19020                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19021  01EBEC  52E6               	movf	postinc1,f,c
 19022  01EBEE  52E6               	movf	postinc1,f,c
 19023                           
 19024                           ;stkvar	_sign @ sp[(-2)+0]
 19025                           
 19026                           ;incstack = 0
 19027  01EBF0  0EFE               	movlw	-2
 19028  01EBF2  6AE3               	clrf	plusw1,c
 19029                           
 19030                           ;stkvar	_dividend @ sp[(-2)+-4]
 19031  01EBF4  0EFD               	movlw	-3
 19032  01EBF6  AEE3               	btfss	plusw1,7,c
 19033  01EBF8  D014               	goto	l12071
 19034                           
 19035                           ;stkvar	_dividend @ sp[(-2)+-4]
 19036                           ;stkvar	_dividend @ sp[(-2)+-4]
 19037  01EBFA  0EFA               	movlw	-6
 19038  01EBFC  6CE3               	negf	plusw1,c
 19039  01EBFE  0EFB               	movlw	-5
 19040  01EC00  1EE3               	comf	plusw1,f,c
 19041  01EC02  0EFC               	movlw	-4
 19042  01EC04  1EE3               	comf	plusw1,f,c
 19043  01EC06  0EFD               	movlw	-3
 19044  01EC08  1EE3               	comf	plusw1,f,c
 19045  01EC0A  E308               	bnc	u11290
 19046  01EC0C  0EFB               	movlw	-5
 19047  01EC0E  2AE3               	incf	plusw1,f,c
 19048  01EC10  E305               	bnc	u11290
 19049  01EC12  0EFC               	movlw	-4
 19050  01EC14  2AE3               	incf	plusw1,f,c
 19051  01EC16  E302               	bnc	u11290
 19052  01EC18  0EFD               	movlw	-3
 19053  01EC1A  2AE3               	incf	plusw1,f,c
 19054  01EC1C                     u11290:
 19055                           
 19056                           ;stkvar	_sign @ sp[(-2)+0]
 19057  01EC1C  0EFE               	movlw	-2
 19058  01EC1E  6AE3               	clrf	plusw1,c
 19059  01EC20  2AE3               	incf	plusw1,f,c
 19060  01EC22                     l12071:
 19061                           
 19062                           ;stkvar	_divisor @ sp[(-2)+-8]
 19063  01EC22  0EF9               	movlw	-7
 19064  01EC24  AEE3               	btfss	plusw1,7,c
 19065  01EC26  D011               	goto	u11310
 19066                           
 19067                           ;stkvar	_divisor @ sp[(-2)+-8]
 19068                           ;stkvar	_divisor @ sp[(-2)+-8]
 19069  01EC28  0EF6               	movlw	-10
 19070  01EC2A  6CE3               	negf	plusw1,c
 19071  01EC2C  0EF7               	movlw	-9
 19072  01EC2E  1EE3               	comf	plusw1,f,c
 19073  01EC30  0EF8               	movlw	-8
 19074  01EC32  1EE3               	comf	plusw1,f,c
 19075  01EC34  0EF9               	movlw	-7
 19076  01EC36  1EE3               	comf	plusw1,f,c
 19077  01EC38  E308               	bnc	u11310
 19078  01EC3A  0EF7               	movlw	-9
 19079  01EC3C  2AE3               	incf	plusw1,f,c
 19080  01EC3E  E305               	bnc	u11310
 19081  01EC40  0EF8               	movlw	-8
 19082  01EC42  2AE3               	incf	plusw1,f,c
 19083  01EC44  E302               	bnc	u11310
 19084  01EC46  0EF9               	movlw	-7
 19085  01EC48  2AE3               	incf	plusw1,f,c
 19086  01EC4A                     u11310:
 19087                           
 19088                           ;stkvar	_divisor @ sp[(-2)+-8]
 19089  01EC4A  0EF6               	movlw	-10
 19090  01EC4C  50E3               	movf	plusw1,w,c
 19091  01EC4E  E10A               	bnz	u11320
 19092  01EC50  0EF7               	movlw	-9
 19093  01EC52  50E3               	movf	plusw1,w,c
 19094  01EC54  E107               	bnz	u11320
 19095  01EC56  0EF8               	movlw	-8
 19096  01EC58  50E3               	movf	plusw1,w,c
 19097  01EC5A  E104               	bnz	u11320
 19098  01EC5C  0EF9               	movlw	-7
 19099  01EC5E  50E3               	movf	plusw1,w,c
 19100  01EC60  B4D8               	btfsc	status,2,c
 19101  01EC62  D04D               	goto	u11350
 19102  01EC64                     u11320:
 19103                           
 19104                           ;stkvar	_counter @ sp[(-2)+1]
 19105  01EC64  0EFF               	movlw	-1
 19106  01EC66  6AE3               	clrf	plusw1,c
 19107  01EC68  D00A               	goto	L17
 19108  01EC6A                     l12079:
 19109                           
 19110                           ;stkvar	_divisor @ sp[(-2)+-8]
 19111  01EC6A  90D8               	bcf	status,0,c
 19112  01EC6C  0EF6               	movlw	-10
 19113  01EC6E  36E3               	rlcf	plusw1,f,c
 19114  01EC70  0EF7               	movlw	-9
 19115  01EC72  36E3               	rlcf	plusw1,f,c
 19116  01EC74  0EF8               	movlw	-8
 19117  01EC76  36E3               	rlcf	plusw1,f,c
 19118  01EC78  0EF9               	movlw	-7
 19119  01EC7A  36E3               	rlcf	plusw1,f,c
 19120                           
 19121                           ;stkvar	_counter @ sp[(-2)+1]
 19122  01EC7C  0EFF               	movlw	-1
 19123  01EC7E                     L17:
 19124  01EC7E  2AE3               	incf	plusw1,f,c
 19125                           
 19126                           ;stkvar	_divisor @ sp[(-2)+-8]
 19127  01EC80  0EF9               	movlw	-7
 19128  01EC82  AEE3               	btfss	plusw1,7,c
 19129  01EC84  D7F2               	goto	l12079
 19130  01EC86                     u11330:
 19131                           
 19132                           ;stkvar	_divisor @ sp[(-2)+-8]
 19133                           ;stkvar	_dividend @ sp[(-2)+-4]
 19134  01EC86  50E1               	movf	fsr1l,w,c
 19135  01EC88  0FFA               	addlw	-6
 19136  01EC8A  6ED9               	movwf	fsr2l,c
 19137  01EC8C  50E2               	movf	fsr1h,w,c
 19138  01EC8E  6EDA               	movwf	fsr2h,c
 19139  01EC90  0EFF               	movlw	255
 19140  01EC92  22DA               	addwfc	fsr2h,f,c
 19141  01EC94  0EF6               	movlw	-10
 19142  01EC96  50E3               	movf	plusw1,w,c
 19143  01EC98  5CDE               	subwf	postinc2,w,c
 19144  01EC9A  0EF7               	movlw	-9
 19145  01EC9C  50E3               	movf	plusw1,w,c
 19146  01EC9E  58DE               	subwfb	postinc2,w,c
 19147  01ECA0  0EF8               	movlw	-8
 19148  01ECA2  50E3               	movf	plusw1,w,c
 19149  01ECA4  58DE               	subwfb	postinc2,w,c
 19150  01ECA6  0EF9               	movlw	-7
 19151  01ECA8  50E3               	movf	plusw1,w,c
 19152  01ECAA  58DE               	subwfb	postinc2,w,c
 19153  01ECAC  A0D8               	btfss	status,0,c
 19154  01ECAE  D013               	goto	l12087
 19155                           
 19156                           ;stkvar	_divisor @ sp[(-2)+-8]
 19157                           ;stkvar	_dividend @ sp[(-2)+-4]
 19158  01ECB0  50E1               	movf	fsr1l,w,c
 19159  01ECB2  0FFA               	addlw	-6
 19160  01ECB4  6ED9               	movwf	fsr2l,c
 19161  01ECB6  50E2               	movf	fsr1h,w,c
 19162  01ECB8  6EDA               	movwf	fsr2h,c
 19163  01ECBA  0EFF               	movlw	255
 19164  01ECBC  22DA               	addwfc	fsr2h,f,c
 19165  01ECBE  0EF6               	movlw	-10
 19166  01ECC0  50E3               	movf	plusw1,w,c
 19167  01ECC2  5EDE               	subwf	postinc2,f,c
 19168  01ECC4  0EF7               	movlw	-9
 19169  01ECC6  50E3               	movf	plusw1,w,c
 19170  01ECC8  5ADE               	subwfb	postinc2,f,c
 19171  01ECCA  0EF8               	movlw	-8
 19172  01ECCC  50E3               	movf	plusw1,w,c
 19173  01ECCE  5ADE               	subwfb	postinc2,f,c
 19174  01ECD0  0EF9               	movlw	-7
 19175  01ECD2  50E3               	movf	plusw1,w,c
 19176  01ECD4  5ADE               	subwfb	postinc2,f,c
 19177  01ECD6                     l12087:
 19178                           
 19179                           ;stkvar	_divisor @ sp[(-2)+-8]
 19180  01ECD6  90D8               	bcf	status,0,c
 19181  01ECD8  0EF9               	movlw	-7
 19182  01ECDA  32E3               	rrcf	plusw1,f,c
 19183  01ECDC  0EF8               	movlw	-8
 19184  01ECDE  32E3               	rrcf	plusw1,f,c
 19185  01ECE0  0EF7               	movlw	-9
 19186  01ECE2  32E3               	rrcf	plusw1,f,c
 19187  01ECE4  0EF6               	movlw	-10
 19188  01ECE6  32E3               	rrcf	plusw1,f,c
 19189                           
 19190                           ;stkvar	_counter @ sp[(-2)+1]
 19191  01ECE8  0EFF               	movlw	-1
 19192  01ECEA  50E3               	movf	plusw1,w,c
 19193  01ECEC  6E2A               	movwf	btemp^0,c
 19194  01ECEE  0E01               	movlw	1
 19195  01ECF0  5E2A               	subwf	btemp^0,f,c
 19196  01ECF2  0EFF               	movlw	-1
 19197  01ECF4  0060  F0AB  FFE3   	movff	btemp,plusw1
 19198  01ECFA  A4D8               	btfss	status,2,c
 19199  01ECFC  D7C4               	goto	u11330
 19200  01ECFE                     u11350:
 19201                           
 19202                           ;stkvar	_sign @ sp[(-2)+0]
 19203  01ECFE  0EFE               	movlw	-2
 19204  01ED00  50E3               	movf	plusw1,w,c
 19205  01ED02  B4D8               	btfsc	status,2,c
 19206  01ED04  D011               	goto	u11370
 19207                           
 19208                           ;stkvar	_dividend @ sp[(-2)+-4]
 19209                           ;stkvar	_dividend @ sp[(-2)+-4]
 19210  01ED06  0EFA               	movlw	-6
 19211  01ED08  6CE3               	negf	plusw1,c
 19212  01ED0A  0EFB               	movlw	-5
 19213  01ED0C  1EE3               	comf	plusw1,f,c
 19214  01ED0E  0EFC               	movlw	-4
 19215  01ED10  1EE3               	comf	plusw1,f,c
 19216  01ED12  0EFD               	movlw	-3
 19217  01ED14  1EE3               	comf	plusw1,f,c
 19218  01ED16  E308               	bnc	u11370
 19219  01ED18  0EFB               	movlw	-5
 19220  01ED1A  2AE3               	incf	plusw1,f,c
 19221  01ED1C  E305               	bnc	u11370
 19222  01ED1E  0EFC               	movlw	-4
 19223  01ED20  2AE3               	incf	plusw1,f,c
 19224  01ED22  E302               	bnc	u11370
 19225  01ED24  0EFD               	movlw	-3
 19226  01ED26  2AE3               	incf	plusw1,f,c
 19227  01ED28                     u11370:
 19228                           
 19229                           ;stkvar	_dividend @ sp[(-2)+-4]
 19230  01ED28  0EFA               	movlw	-6
 19231  01ED2A  006F FF8C  F02A    	movff	plusw1,btemp
 19232  01ED30  0EFB               	movlw	-5
 19233  01ED32  006F FF8C  F02B    	movff	plusw1,btemp+1
 19234  01ED38  0EFC               	movlw	-4
 19235  01ED3A  006F FF8C  F02C    	movff	plusw1,btemp+2
 19236  01ED40  0EFD               	movlw	-3
 19237  01ED42  006F FF8C  F02D    	movff	plusw1,btemp+3
 19238                           
 19239                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19240  01ED48  0EF6               	movlw	246
 19241  01ED4A  26E1               	addwf	fsr1l,f,c
 19242  01ED4C  0EFF               	movlw	255
 19243  01ED4E  22E2               	addwfc	fsr1h,f,c
 19244  01ED50  0012               	return		;funcret
 19245  01ED52                     __end_of___almod:
 19246                           	opt callstack 0
 19247                           
 19248 ;; *************** function ___aldiv *****************
 19249 ;; Defined at:
 19250 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 19251 ;; Parameters:    Size  Location     Type
 19252 ;;  dividend        4  [STACK] long 
 19253 ;;  divisor         4  [STACK] long 
 19254 ;; Auto vars:     Size  Location     Type
 19255 ;;  quotient        4  [STACK] long 
 19256 ;;  sign            1  [STACK] unsigned char 
 19257 ;;  counter         1  [STACK] unsigned char 
 19258 ;; Return value:  Size  Location     Type
 19259 ;;                  4  [STACK] long 
 19260 ;; Registers used:
 19261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19262 ;; Tracked objects:
 19263 ;;		On entry : 0/0
 19264 ;;		On exit  : 0/0
 19265 ;;		Unchanged: 0/0
 19266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19271 ;;Total ram usage:        0 bytes
 19272 ;; Hardware stack levels used:    1
 19273 ;; Hardware stack levels required when called:   15
 19274 ;; This function calls:
 19275 ;;		Nothing
 19276 ;; This function is called by:
 19277 ;;		___secs_to_tm
 19278 ;;		_rule_to_secs
 19279 ;; This function uses a reentrant model
 19280 ;;
 19281                           
 19282                           	psect	text53
 19283  01E2E0                     __ptext53:
 19284                           	opt callstack 0
 19285  01E2E0                     ___aldiv:
 19286                           	opt callstack 0
 19287                           
 19288                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19289  01E2E0  0E06               	movlw	6
 19290  01E2E2  26E1               	addwf	fsr1l,f,c
 19291  01E2E4  0E00               	movlw	0
 19292  01E2E6  22E2               	addwfc	fsr1h,f,c
 19293                           
 19294                           ;stkvar	_sign @ sp[(-6)+4]
 19295                           
 19296                           ;incstack = 0
 19297  01E2E8  0EFE               	movlw	-2
 19298  01E2EA  6AE3               	clrf	plusw1,c
 19299                           
 19300                           ;stkvar	_divisor @ sp[(-6)+-8]
 19301  01E2EC  0EF5               	movlw	-11
 19302  01E2EE  AEE3               	btfss	plusw1,7,c
 19303  01E2F0  D014               	goto	l11611
 19304                           
 19305                           ;stkvar	_divisor @ sp[(-6)+-8]
 19306                           ;stkvar	_divisor @ sp[(-6)+-8]
 19307  01E2F2  0EF2               	movlw	-14
 19308  01E2F4  6CE3               	negf	plusw1,c
 19309  01E2F6  0EF3               	movlw	-13
 19310  01E2F8  1EE3               	comf	plusw1,f,c
 19311  01E2FA  0EF4               	movlw	-12
 19312  01E2FC  1EE3               	comf	plusw1,f,c
 19313  01E2FE  0EF5               	movlw	-11
 19314  01E300  1EE3               	comf	plusw1,f,c
 19315  01E302  E308               	bnc	u10610
 19316  01E304  0EF3               	movlw	-13
 19317  01E306  2AE3               	incf	plusw1,f,c
 19318  01E308  E305               	bnc	u10610
 19319  01E30A  0EF4               	movlw	-12
 19320  01E30C  2AE3               	incf	plusw1,f,c
 19321  01E30E  E302               	bnc	u10610
 19322  01E310  0EF5               	movlw	-11
 19323  01E312  2AE3               	incf	plusw1,f,c
 19324  01E314                     u10610:
 19325                           
 19326                           ;stkvar	_sign @ sp[(-6)+4]
 19327  01E314  0EFE               	movlw	-2
 19328  01E316  6AE3               	clrf	plusw1,c
 19329  01E318  2AE3               	incf	plusw1,f,c
 19330  01E31A                     l11611:
 19331                           
 19332                           ;stkvar	_dividend @ sp[(-6)+-4]
 19333  01E31A  0EF9               	movlw	-7
 19334  01E31C  AEE3               	btfss	plusw1,7,c
 19335  01E31E  D013               	goto	l11617
 19336                           
 19337                           ;stkvar	_dividend @ sp[(-6)+-4]
 19338                           ;stkvar	_dividend @ sp[(-6)+-4]
 19339  01E320  0EF6               	movlw	-10
 19340  01E322  6CE3               	negf	plusw1,c
 19341  01E324  0EF7               	movlw	-9
 19342  01E326  1EE3               	comf	plusw1,f,c
 19343  01E328  0EF8               	movlw	-8
 19344  01E32A  1EE3               	comf	plusw1,f,c
 19345  01E32C  0EF9               	movlw	-7
 19346  01E32E  1EE3               	comf	plusw1,f,c
 19347  01E330  E308               	bnc	u10630
 19348  01E332  0EF7               	movlw	-9
 19349  01E334  2AE3               	incf	plusw1,f,c
 19350  01E336  E305               	bnc	u10630
 19351  01E338  0EF8               	movlw	-8
 19352  01E33A  2AE3               	incf	plusw1,f,c
 19353  01E33C  E302               	bnc	u10630
 19354  01E33E  0EF9               	movlw	-7
 19355  01E340  2AE3               	incf	plusw1,f,c
 19356  01E342                     u10630:
 19357                           
 19358                           ;stkvar	_sign @ sp[(-6)+4]
 19359  01E342  0EFE               	movlw	-2
 19360  01E344  70E3               	btg	plusw1,0,c
 19361  01E346                     l11617:
 19362                           
 19363                           ;stkvar	_quotient @ sp[(-6)+0]
 19364  01E346  0EFA               	movlw	-6
 19365  01E348  6AE3               	clrf	plusw1,c
 19366  01E34A  0EFB               	movlw	-5
 19367  01E34C  6AE3               	clrf	plusw1,c
 19368  01E34E  0EFC               	movlw	-4
 19369  01E350  6AE3               	clrf	plusw1,c
 19370  01E352  0EFD               	movlw	-3
 19371  01E354  6AE3               	clrf	plusw1,c
 19372                           
 19373                           ;stkvar	_divisor @ sp[(-6)+-8]
 19374  01E356  0EF2               	movlw	-14
 19375  01E358  50E3               	movf	plusw1,w,c
 19376  01E35A  E10A               	bnz	u10640
 19377  01E35C  0EF3               	movlw	-13
 19378  01E35E  50E3               	movf	plusw1,w,c
 19379  01E360  E107               	bnz	u10640
 19380  01E362  0EF4               	movlw	-12
 19381  01E364  50E3               	movf	plusw1,w,c
 19382  01E366  E104               	bnz	u10640
 19383  01E368  0EF5               	movlw	-11
 19384  01E36A  50E3               	movf	plusw1,w,c
 19385  01E36C  B4D8               	btfsc	status,2,c
 19386  01E36E  D058               	goto	u10670
 19387  01E370                     u10640:
 19388                           
 19389                           ;stkvar	_counter @ sp[(-6)+5]
 19390  01E370  0EFF               	movlw	-1
 19391  01E372  6AE3               	clrf	plusw1,c
 19392  01E374  D00A               	goto	L18
 19393  01E376                     l11623:
 19394                           
 19395                           ;stkvar	_divisor @ sp[(-6)+-8]
 19396  01E376  90D8               	bcf	status,0,c
 19397  01E378  0EF2               	movlw	-14
 19398  01E37A  36E3               	rlcf	plusw1,f,c
 19399  01E37C  0EF3               	movlw	-13
 19400  01E37E  36E3               	rlcf	plusw1,f,c
 19401  01E380  0EF4               	movlw	-12
 19402  01E382  36E3               	rlcf	plusw1,f,c
 19403  01E384  0EF5               	movlw	-11
 19404  01E386  36E3               	rlcf	plusw1,f,c
 19405                           
 19406                           ;stkvar	_counter @ sp[(-6)+5]
 19407  01E388  0EFF               	movlw	-1
 19408  01E38A                     L18:
 19409  01E38A  2AE3               	incf	plusw1,f,c
 19410                           
 19411                           ;stkvar	_divisor @ sp[(-6)+-8]
 19412  01E38C  0EF5               	movlw	-11
 19413  01E38E  AEE3               	btfss	plusw1,7,c
 19414  01E390  D7F2               	goto	l11623
 19415  01E392                     u10650:
 19416                           
 19417                           ;stkvar	_quotient @ sp[(-6)+0]
 19418  01E392  90D8               	bcf	status,0,c
 19419  01E394  0EFA               	movlw	-6
 19420  01E396  36E3               	rlcf	plusw1,f,c
 19421  01E398  0EFB               	movlw	-5
 19422  01E39A  36E3               	rlcf	plusw1,f,c
 19423  01E39C  0EFC               	movlw	-4
 19424  01E39E  36E3               	rlcf	plusw1,f,c
 19425  01E3A0  0EFD               	movlw	-3
 19426  01E3A2  36E3               	rlcf	plusw1,f,c
 19427                           
 19428                           ;stkvar	_divisor @ sp[(-6)+-8]
 19429                           ;stkvar	_dividend @ sp[(-6)+-4]
 19430  01E3A4  50E1               	movf	fsr1l,w,c
 19431  01E3A6  0FF6               	addlw	-10
 19432  01E3A8  6ED9               	movwf	fsr2l,c
 19433  01E3AA  50E2               	movf	fsr1h,w,c
 19434  01E3AC  6EDA               	movwf	fsr2h,c
 19435  01E3AE  0EFF               	movlw	255
 19436  01E3B0  22DA               	addwfc	fsr2h,f,c
 19437  01E3B2  0EF2               	movlw	-14
 19438  01E3B4  50E3               	movf	plusw1,w,c
 19439  01E3B6  5CDE               	subwf	postinc2,w,c
 19440  01E3B8  0EF3               	movlw	-13
 19441  01E3BA  50E3               	movf	plusw1,w,c
 19442  01E3BC  58DE               	subwfb	postinc2,w,c
 19443  01E3BE  0EF4               	movlw	-12
 19444  01E3C0  50E3               	movf	plusw1,w,c
 19445  01E3C2  58DE               	subwfb	postinc2,w,c
 19446  01E3C4  0EF5               	movlw	-11
 19447  01E3C6  50E3               	movf	plusw1,w,c
 19448  01E3C8  58DE               	subwfb	postinc2,w,c
 19449  01E3CA  A0D8               	btfss	status,0,c
 19450  01E3CC  D015               	goto	l11635
 19451                           
 19452                           ;stkvar	_divisor @ sp[(-6)+-8]
 19453                           ;stkvar	_dividend @ sp[(-6)+-4]
 19454  01E3CE  50E1               	movf	fsr1l,w,c
 19455  01E3D0  0FF6               	addlw	-10
 19456  01E3D2  6ED9               	movwf	fsr2l,c
 19457  01E3D4  50E2               	movf	fsr1h,w,c
 19458  01E3D6  6EDA               	movwf	fsr2h,c
 19459  01E3D8  0EFF               	movlw	255
 19460  01E3DA  22DA               	addwfc	fsr2h,f,c
 19461  01E3DC  0EF2               	movlw	-14
 19462  01E3DE  50E3               	movf	plusw1,w,c
 19463  01E3E0  5EDE               	subwf	postinc2,f,c
 19464  01E3E2  0EF3               	movlw	-13
 19465  01E3E4  50E3               	movf	plusw1,w,c
 19466  01E3E6  5ADE               	subwfb	postinc2,f,c
 19467  01E3E8  0EF4               	movlw	-12
 19468  01E3EA  50E3               	movf	plusw1,w,c
 19469  01E3EC  5ADE               	subwfb	postinc2,f,c
 19470  01E3EE  0EF5               	movlw	-11
 19471  01E3F0  50E3               	movf	plusw1,w,c
 19472  01E3F2  5ADE               	subwfb	postinc2,f,c
 19473                           
 19474                           ;stkvar	_quotient @ sp[(-6)+0]
 19475  01E3F4  0EFA               	movlw	-6
 19476  01E3F6  80E3               	bsf	plusw1,0,c
 19477  01E3F8                     l11635:
 19478                           
 19479                           ;stkvar	_divisor @ sp[(-6)+-8]
 19480  01E3F8  90D8               	bcf	status,0,c
 19481  01E3FA  0EF5               	movlw	-11
 19482  01E3FC  32E3               	rrcf	plusw1,f,c
 19483  01E3FE  0EF4               	movlw	-12
 19484  01E400  32E3               	rrcf	plusw1,f,c
 19485  01E402  0EF3               	movlw	-13
 19486  01E404  32E3               	rrcf	plusw1,f,c
 19487  01E406  0EF2               	movlw	-14
 19488  01E408  32E3               	rrcf	plusw1,f,c
 19489                           
 19490                           ;stkvar	_counter @ sp[(-6)+5]
 19491  01E40A  0EFF               	movlw	-1
 19492  01E40C  50E3               	movf	plusw1,w,c
 19493  01E40E  6E2A               	movwf	btemp^0,c
 19494  01E410  0E01               	movlw	1
 19495  01E412  5E2A               	subwf	btemp^0,f,c
 19496  01E414  0EFF               	movlw	-1
 19497  01E416  0060  F0AB  FFE3   	movff	btemp,plusw1
 19498  01E41C  A4D8               	btfss	status,2,c
 19499  01E41E  D7B9               	goto	u10650
 19500  01E420                     u10670:
 19501                           
 19502                           ;stkvar	_sign @ sp[(-6)+4]
 19503  01E420  0EFE               	movlw	-2
 19504  01E422  50E3               	movf	plusw1,w,c
 19505  01E424  B4D8               	btfsc	status,2,c
 19506  01E426  D011               	goto	u10690
 19507                           
 19508                           ;stkvar	_quotient @ sp[(-6)+0]
 19509                           ;stkvar	_quotient @ sp[(-6)+0]
 19510  01E428  0EFA               	movlw	-6
 19511  01E42A  6CE3               	negf	plusw1,c
 19512  01E42C  0EFB               	movlw	-5
 19513  01E42E  1EE3               	comf	plusw1,f,c
 19514  01E430  0EFC               	movlw	-4
 19515  01E432  1EE3               	comf	plusw1,f,c
 19516  01E434  0EFD               	movlw	-3
 19517  01E436  1EE3               	comf	plusw1,f,c
 19518  01E438  E308               	bnc	u10690
 19519  01E43A  0EFB               	movlw	-5
 19520  01E43C  2AE3               	incf	plusw1,f,c
 19521  01E43E  E305               	bnc	u10690
 19522  01E440  0EFC               	movlw	-4
 19523  01E442  2AE3               	incf	plusw1,f,c
 19524  01E444  E302               	bnc	u10690
 19525  01E446  0EFD               	movlw	-3
 19526  01E448  2AE3               	incf	plusw1,f,c
 19527  01E44A                     u10690:
 19528                           
 19529                           ;stkvar	_quotient @ sp[(-6)+0]
 19530  01E44A  0EFA               	movlw	-6
 19531  01E44C  006F FF8C  F02A    	movff	plusw1,btemp
 19532  01E452  0EFB               	movlw	-5
 19533  01E454  006F FF8C  F02B    	movff	plusw1,btemp+1
 19534  01E45A  0EFC               	movlw	-4
 19535  01E45C  006F FF8C  F02C    	movff	plusw1,btemp+2
 19536  01E462  0EFD               	movlw	-3
 19537  01E464  006F FF8C  F02D    	movff	plusw1,btemp+3
 19538                           
 19539                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19540  01E46A  0EF2               	movlw	242
 19541  01E46C  26E1               	addwf	fsr1l,f,c
 19542  01E46E  0EFF               	movlw	255
 19543  01E470  22E2               	addwfc	fsr1h,f,c
 19544  01E472  0012               	return		;funcret
 19545  01E474                     __end_of___aldiv:
 19546                           	opt callstack 0
 19547                           
 19548 ;; *************** function _asctime *****************
 19549 ;; Defined at:
 19550 ;;		line 19 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19551 ;; Parameters:    Size  Location     Type
 19552 ;;  tim             2  [STACK] PTR const struct tm
 19553 ;;		 -> localtime@tm(24), NULL(0), 
 19554 ;; Auto vars:     Size  Location     Type
 19555 ;;  cp              2  [STACK] PTR unsigned char 
 19556 ;;		 -> asctime@buf(27), 
 19557 ;;  s               2  [STACK] PTR const unsigned char 
 19558 ;;		 -> STR_141(37), STR_140(22), 
 19559 ;; Return value:  Size  Location     Type
 19560 ;;                  2  [STACK] PTR unsigned char 
 19561 ;; Registers used:
 19562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19563 ;; Tracked objects:
 19564 ;;		On entry : 0/39
 19565 ;;		On exit  : 0/0
 19566 ;;		Unchanged: 0/0
 19567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19572 ;;Total ram usage:        0 bytes
 19573 ;; Hardware stack levels used:    1
 19574 ;; Hardware stack levels required when called:   17
 19575 ;; This function calls:
 19576 ;;		___awdiv
 19577 ;;		___awmod
 19578 ;;		_put2d
 19579 ;; This function is called by:
 19580 ;;		_main
 19581 ;;		_display_history
 19582 ;; This function uses a reentrant model
 19583 ;;
 19584                           
 19585                           	psect	text54
 19586  018C6A                     __ptext54:
 19587                           	opt callstack 0
 19588  018C6A                     _asctime:
 19589                           	opt callstack 0
 19590                           
 19591                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19592  018C6A  52E6               	movf	postinc1,f,c
 19593  018C6C  52E6               	movf	postinc1,f,c
 19594  018C6E  52E6               	movf	postinc1,f,c
 19595  018C70  52E6               	movf	postinc1,f,c
 19596                           
 19597                           ;stkvar	_tim @ sp[(-4)+-2]
 19598                           
 19599                           ;incstack = 0
 19600  018C72  0EFA               	movlw	-6
 19601  018C74  006F FF8C  F034    	movff	plusw1,btemp+10
 19602  018C7A  0EFB               	movlw	-5
 19603  018C7C  006F FF8C  F035    	movff	plusw1,btemp+11
 19604  018C82  0E0C               	movlw	12
 19605  018C84  2434               	addwf	(btemp+10)^0,w,c
 19606  018C86  6ED9               	movwf	fsr2l,c
 19607  018C88  0E00               	movlw	0
 19608  018C8A  2035               	addwfc	(btemp+11)^0,w,c
 19609  018C8C  6EDA               	movwf	fsr2h,c
 19610  018C8E  006F FF78  F034    	movff	postinc2,btemp+10
 19611  018C94  006F FF74  F035    	movff	postdec2,btemp+11
 19612  018C9A  0E03               	movlw	3
 19613  018C9C  0234               	mulwf	(btemp+10)^0,c
 19614  018C9E  006F FFCC  F032    	movff	prodl,btemp+8
 19615  018CA4  006F FFD0  F033    	movff	prodh,btemp+9
 19616  018CAA  0235               	mulwf	(btemp+11)^0,c
 19617  018CAC  50F3               	movf	prodl,w,c
 19618  018CAE  2633               	addwf	(btemp+9)^0,f,c
 19619  018CB0  0E93               	movlw	low STR_140
 19620  018CB2  6E34               	movwf	(btemp+10)^0,c
 19621  018CB4  0EFC               	movlw	high STR_140
 19622  018CB6  6E35               	movwf	(btemp+11)^0,c
 19623  018CB8  5032               	movf	(btemp+8)^0,w,c
 19624  018CBA  2634               	addwf	(btemp+10)^0,f,c
 19625  018CBC  5033               	movf	(btemp+9)^0,w,c
 19626  018CBE  2235               	addwfc	(btemp+11)^0,f,c
 19627                           
 19628                           ;stkvar	_s @ sp[(-4)+2]
 19629  018CC0  0EFF               	movlw	-1
 19630  018CC2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19631  018CC8  0EFE               	movlw	-2
 19632  018CCA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19633                           
 19634                           ;stkvar	_cp @ sp[(-4)+0]
 19635  018CD0  0E03               	movlw	high asctime@buf
 19636  018CD2  6E2A               	movwf	btemp^0,c
 19637  018CD4  0EFD               	movlw	-3
 19638  018CD6  0060  F0AB  FFE3   	movff	btemp,plusw1
 19639  018CDC  0EC4               	movlw	low asctime@buf
 19640  018CDE  6E2A               	movwf	btemp^0,c
 19641  018CE0  0EFC               	movlw	-4
 19642  018CE2  0060  F0AB  FFE3   	movff	btemp,plusw1
 19643                           
 19644                           ;stkvar	_s @ sp[(-4)+2]
 19645  018CE8  50E1               	movf	fsr1l,w,c
 19646  018CEA  0FFE               	addlw	-2
 19647  018CEC  6ED9               	movwf	fsr2l,c
 19648  018CEE  50E2               	movf	fsr1h,w,c
 19649  018CF0  6EDA               	movwf	fsr2h,c
 19650  018CF2  0EFF               	movlw	255
 19651  018CF4  22DA               	addwfc	fsr2h,f,c
 19652  018CF6  006F FF7B FFF6     	movff	postinc2,tblptrl
 19653  018CFC  006F FF77 FFF7     	movff	postdec2,tblptrh
 19654  018D02                     	if	0	;tblptru may be non-zero
 19655  018D02                     	endif
 19656  018D02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19657  018D02  0E00               	movlw	low (__mediumconst shr (0+16))
 19658  018D04  6EF8               	movwf	tblptru,c
 19659  018D06                     	endif
 19660                           
 19661                           ;stkvar	_cp @ sp[(-4)+0]
 19662  018D06  0EFC               	movlw	-4
 19663  018D08  006F FF8F FFD9     	movff	plusw1,fsr2l
 19664  018D0E  0EFD               	movlw	-3
 19665  018D10  006F FF8F FFDA     	movff	plusw1,fsr2h
 19666  018D16  0008               	tblrd		*
 19667  018D18  006F FFD7 FFDF     	movff	tablat,indf2
 19668                           
 19669                           ;stkvar	_s @ sp[(-4)+2]
 19670  018D1E  0EFE               	movlw	-2
 19671  018D20  50E3               	movf	plusw1,w,c
 19672  018D22  0F01               	addlw	1
 19673  018D24  6E2A               	movwf	btemp^0,c
 19674  018D26  0EFE               	movlw	-2
 19675  018D28  0060  F0AB  FFE3   	movff	btemp,plusw1
 19676  018D2E  6A2A               	clrf	btemp^0,c
 19677  018D30  0EFF               	movlw	-1
 19678  018D32  50E3               	movf	plusw1,w,c
 19679  018D34  202A               	addwfc	btemp^0,w,c
 19680  018D36  6E2A               	movwf	btemp^0,c
 19681  018D38  0EFF               	movlw	-1
 19682  018D3A  0060  F0AB  FFE3   	movff	btemp,plusw1
 19683                           
 19684                           ;stkvar	_cp @ sp[(-4)+0]
 19685  018D40  0EFC               	movlw	-4
 19686  018D42  50E3               	movf	plusw1,w,c
 19687  018D44  0F01               	addlw	1
 19688  018D46  6E2A               	movwf	btemp^0,c
 19689  018D48  0EFC               	movlw	-4
 19690  018D4A  0060  F0AB  FFE3   	movff	btemp,plusw1
 19691  018D50  6A2A               	clrf	btemp^0,c
 19692  018D52  0EFD               	movlw	-3
 19693  018D54  50E3               	movf	plusw1,w,c
 19694  018D56  202A               	addwfc	btemp^0,w,c
 19695  018D58  6E2A               	movwf	btemp^0,c
 19696  018D5A  0EFD               	movlw	-3
 19697  018D5C  0060  F0AB  FFE3   	movff	btemp,plusw1
 19698                           
 19699                           ;stkvar	_s @ sp[(-4)+2]
 19700  018D62  50E1               	movf	fsr1l,w,c
 19701  018D64  0FFE               	addlw	-2
 19702  018D66  6ED9               	movwf	fsr2l,c
 19703  018D68  50E2               	movf	fsr1h,w,c
 19704  018D6A  6EDA               	movwf	fsr2h,c
 19705  018D6C  0EFF               	movlw	255
 19706  018D6E  22DA               	addwfc	fsr2h,f,c
 19707  018D70  006F FF7B FFF6     	movff	postinc2,tblptrl
 19708  018D76  006F FF77 FFF7     	movff	postdec2,tblptrh
 19709  018D7C                     	if	0	;tblptru may be non-zero
 19710  018D7C                     	endif
 19711  018D7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19712  018D7C  0E00               	movlw	low (__mediumconst shr (0+16))
 19713  018D7E  6EF8               	movwf	tblptru,c
 19714  018D80                     	endif
 19715                           
 19716                           ;stkvar	_cp @ sp[(-4)+0]
 19717  018D80  0EFC               	movlw	-4
 19718  018D82  006F FF8F FFD9     	movff	plusw1,fsr2l
 19719  018D88  0EFD               	movlw	-3
 19720  018D8A  006F FF8F FFDA     	movff	plusw1,fsr2h
 19721  018D90  0008               	tblrd		*
 19722  018D92  006F FFD7 FFDF     	movff	tablat,indf2
 19723                           
 19724                           ;stkvar	_s @ sp[(-4)+2]
 19725  018D98  0EFE               	movlw	-2
 19726  018D9A  50E3               	movf	plusw1,w,c
 19727  018D9C  0F01               	addlw	1
 19728  018D9E  6E2A               	movwf	btemp^0,c
 19729  018DA0  0EFE               	movlw	-2
 19730  018DA2  0060  F0AB  FFE3   	movff	btemp,plusw1
 19731  018DA8  6A2A               	clrf	btemp^0,c
 19732  018DAA  0EFF               	movlw	-1
 19733  018DAC  50E3               	movf	plusw1,w,c
 19734  018DAE  202A               	addwfc	btemp^0,w,c
 19735  018DB0  6E2A               	movwf	btemp^0,c
 19736  018DB2  0EFF               	movlw	-1
 19737  018DB4  0060  F0AB  FFE3   	movff	btemp,plusw1
 19738                           
 19739                           ;stkvar	_cp @ sp[(-4)+0]
 19740  018DBA  0EFC               	movlw	-4
 19741  018DBC  50E3               	movf	plusw1,w,c
 19742  018DBE  0F01               	addlw	1
 19743  018DC0  6E2A               	movwf	btemp^0,c
 19744  018DC2  0EFC               	movlw	-4
 19745  018DC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 19746  018DCA  6A2A               	clrf	btemp^0,c
 19747  018DCC  0EFD               	movlw	-3
 19748  018DCE  50E3               	movf	plusw1,w,c
 19749  018DD0  202A               	addwfc	btemp^0,w,c
 19750  018DD2  6E2A               	movwf	btemp^0,c
 19751  018DD4  0EFD               	movlw	-3
 19752  018DD6  0060  F0AB  FFE3   	movff	btemp,plusw1
 19753                           
 19754                           ;stkvar	_s @ sp[(-4)+2]
 19755  018DDC  50E1               	movf	fsr1l,w,c
 19756  018DDE  0FFE               	addlw	-2
 19757  018DE0  6ED9               	movwf	fsr2l,c
 19758  018DE2  50E2               	movf	fsr1h,w,c
 19759  018DE4  6EDA               	movwf	fsr2h,c
 19760  018DE6  0EFF               	movlw	255
 19761  018DE8  22DA               	addwfc	fsr2h,f,c
 19762  018DEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 19763  018DF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 19764  018DF6                     	if	0	;tblptru may be non-zero
 19765  018DF6                     	endif
 19766  018DF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19767  018DF6  0E00               	movlw	low (__mediumconst shr (0+16))
 19768  018DF8  6EF8               	movwf	tblptru,c
 19769  018DFA                     	endif
 19770                           
 19771                           ;stkvar	_cp @ sp[(-4)+0]
 19772  018DFA  0EFC               	movlw	-4
 19773  018DFC  006F FF8F FFD9     	movff	plusw1,fsr2l
 19774  018E02  0EFD               	movlw	-3
 19775  018E04  006F FF8F FFDA     	movff	plusw1,fsr2h
 19776  018E0A  0008               	tblrd		*
 19777  018E0C  006F FFD7 FFDF     	movff	tablat,indf2
 19778                           
 19779                           ;stkvar	_cp @ sp[(-4)+0]
 19780  018E12  0EFC               	movlw	-4
 19781  018E14  50E3               	movf	plusw1,w,c
 19782  018E16  0F01               	addlw	1
 19783  018E18  6E2A               	movwf	btemp^0,c
 19784  018E1A  0EFC               	movlw	-4
 19785  018E1C  0060  F0AB  FFE3   	movff	btemp,plusw1
 19786  018E22  6A2A               	clrf	btemp^0,c
 19787  018E24  0EFD               	movlw	-3
 19788  018E26  50E3               	movf	plusw1,w,c
 19789  018E28  202A               	addwfc	btemp^0,w,c
 19790  018E2A  6E2A               	movwf	btemp^0,c
 19791  018E2C  0EFD               	movlw	-3
 19792  018E2E  0060  F0AB  FFE3   	movff	btemp,plusw1
 19793                           
 19794                           ;stkvar	_cp @ sp[(-4)+0]
 19795  018E34  0EFC               	movlw	-4
 19796  018E36  006F FF8F FFD9     	movff	plusw1,fsr2l
 19797  018E3C  0EFD               	movlw	-3
 19798  018E3E  006F FF8F FFDA     	movff	plusw1,fsr2h
 19799  018E44  0E20               	movlw	32
 19800  018E46  6EDF               	movwf	indf2,c
 19801                           
 19802                           ;stkvar	_cp @ sp[(-4)+0]
 19803  018E48  0EFC               	movlw	-4
 19804  018E4A  50E3               	movf	plusw1,w,c
 19805  018E4C  0F01               	addlw	1
 19806  018E4E  6E2A               	movwf	btemp^0,c
 19807  018E50  0EFC               	movlw	-4
 19808  018E52  0060  F0AB  FFE3   	movff	btemp,plusw1
 19809  018E58  6A2A               	clrf	btemp^0,c
 19810  018E5A  0EFD               	movlw	-3
 19811  018E5C  50E3               	movf	plusw1,w,c
 19812  018E5E  202A               	addwfc	btemp^0,w,c
 19813  018E60  6E2A               	movwf	btemp^0,c
 19814  018E62  0EFD               	movlw	-3
 19815  018E64  0060  F0AB  FFE3   	movff	btemp,plusw1
 19816                           
 19817                           ;stkvar	_tim @ sp[(-4)+-2]
 19818  018E6A  0EFA               	movlw	-6
 19819  018E6C  006F FF8C  F034    	movff	plusw1,btemp+10
 19820  018E72  0EFB               	movlw	-5
 19821  018E74  006F FF8C  F035    	movff	plusw1,btemp+11
 19822  018E7A  0E08               	movlw	8
 19823  018E7C  2434               	addwf	(btemp+10)^0,w,c
 19824  018E7E  6ED9               	movwf	fsr2l,c
 19825  018E80  0E00               	movlw	0
 19826  018E82  2035               	addwfc	(btemp+11)^0,w,c
 19827  018E84  6EDA               	movwf	fsr2h,c
 19828  018E86  006F FF78  F034    	movff	postinc2,btemp+10
 19829  018E8C  006F FF74  F035    	movff	postdec2,btemp+11
 19830  018E92  0E03               	movlw	3
 19831  018E94  0234               	mulwf	(btemp+10)^0,c
 19832  018E96  006F FFCC  F032    	movff	prodl,btemp+8
 19833  018E9C  006F FFD0  F033    	movff	prodh,btemp+9
 19834  018EA2  0235               	mulwf	(btemp+11)^0,c
 19835  018EA4  50F3               	movf	prodl,w,c
 19836  018EA6  2633               	addwf	(btemp+9)^0,f,c
 19837  018EA8  0EE2               	movlw	low STR_141
 19838  018EAA  6E34               	movwf	(btemp+10)^0,c
 19839  018EAC  0EF9               	movlw	high STR_141
 19840  018EAE  6E35               	movwf	(btemp+11)^0,c
 19841  018EB0  5032               	movf	(btemp+8)^0,w,c
 19842  018EB2  2634               	addwf	(btemp+10)^0,f,c
 19843  018EB4  5033               	movf	(btemp+9)^0,w,c
 19844  018EB6  2235               	addwfc	(btemp+11)^0,f,c
 19845                           
 19846                           ;stkvar	_s @ sp[(-4)+2]
 19847  018EB8  0EFF               	movlw	-1
 19848  018EBA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19849  018EC0  0EFE               	movlw	-2
 19850  018EC2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19851                           
 19852                           ;stkvar	_s @ sp[(-4)+2]
 19853  018EC8  50E1               	movf	fsr1l,w,c
 19854  018ECA  0FFE               	addlw	-2
 19855  018ECC  6ED9               	movwf	fsr2l,c
 19856  018ECE  50E2               	movf	fsr1h,w,c
 19857  018ED0  6EDA               	movwf	fsr2h,c
 19858  018ED2  0EFF               	movlw	255
 19859  018ED4  22DA               	addwfc	fsr2h,f,c
 19860  018ED6  006F FF7B FFF6     	movff	postinc2,tblptrl
 19861  018EDC  006F FF77 FFF7     	movff	postdec2,tblptrh
 19862  018EE2                     	if	0	;tblptru may be non-zero
 19863  018EE2                     	endif
 19864  018EE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19865  018EE2  0E00               	movlw	low (__mediumconst shr (0+16))
 19866  018EE4  6EF8               	movwf	tblptru,c
 19867  018EE6                     	endif
 19868                           
 19869                           ;stkvar	_cp @ sp[(-4)+0]
 19870  018EE6  0EFC               	movlw	-4
 19871  018EE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 19872  018EEE  0EFD               	movlw	-3
 19873  018EF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 19874  018EF6  0008               	tblrd		*
 19875  018EF8  006F FFD7 FFDF     	movff	tablat,indf2
 19876                           
 19877                           ;stkvar	_s @ sp[(-4)+2]
 19878  018EFE  0EFE               	movlw	-2
 19879  018F00  50E3               	movf	plusw1,w,c
 19880  018F02  0F01               	addlw	1
 19881  018F04  6E2A               	movwf	btemp^0,c
 19882  018F06  0EFE               	movlw	-2
 19883  018F08  0060  F0AB  FFE3   	movff	btemp,plusw1
 19884  018F0E  6A2A               	clrf	btemp^0,c
 19885  018F10  0EFF               	movlw	-1
 19886  018F12  50E3               	movf	plusw1,w,c
 19887  018F14  202A               	addwfc	btemp^0,w,c
 19888  018F16  6E2A               	movwf	btemp^0,c
 19889  018F18  0EFF               	movlw	-1
 19890  018F1A  0060  F0AB  FFE3   	movff	btemp,plusw1
 19891                           
 19892                           ;stkvar	_cp @ sp[(-4)+0]
 19893  018F20  0EFC               	movlw	-4
 19894  018F22  50E3               	movf	plusw1,w,c
 19895  018F24  0F01               	addlw	1
 19896  018F26  6E2A               	movwf	btemp^0,c
 19897  018F28  0EFC               	movlw	-4
 19898  018F2A  0060  F0AB  FFE3   	movff	btemp,plusw1
 19899  018F30  6A2A               	clrf	btemp^0,c
 19900  018F32  0EFD               	movlw	-3
 19901  018F34  50E3               	movf	plusw1,w,c
 19902  018F36  202A               	addwfc	btemp^0,w,c
 19903  018F38  6E2A               	movwf	btemp^0,c
 19904  018F3A  0EFD               	movlw	-3
 19905  018F3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 19906                           
 19907                           ;stkvar	_s @ sp[(-4)+2]
 19908  018F42  50E1               	movf	fsr1l,w,c
 19909  018F44  0FFE               	addlw	-2
 19910  018F46  6ED9               	movwf	fsr2l,c
 19911  018F48  50E2               	movf	fsr1h,w,c
 19912  018F4A  6EDA               	movwf	fsr2h,c
 19913  018F4C  0EFF               	movlw	255
 19914  018F4E  22DA               	addwfc	fsr2h,f,c
 19915  018F50  006F FF7B FFF6     	movff	postinc2,tblptrl
 19916  018F56  006F FF77 FFF7     	movff	postdec2,tblptrh
 19917  018F5C                     	if	0	;tblptru may be non-zero
 19918  018F5C                     	endif
 19919  018F5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19920  018F5C  0E00               	movlw	low (__mediumconst shr (0+16))
 19921  018F5E  6EF8               	movwf	tblptru,c
 19922  018F60                     	endif
 19923                           
 19924                           ;stkvar	_cp @ sp[(-4)+0]
 19925  018F60  0EFC               	movlw	-4
 19926  018F62  006F FF8F FFD9     	movff	plusw1,fsr2l
 19927  018F68  0EFD               	movlw	-3
 19928  018F6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 19929  018F70  0008               	tblrd		*
 19930  018F72  006F FFD7 FFDF     	movff	tablat,indf2
 19931                           
 19932                           ;stkvar	_s @ sp[(-4)+2]
 19933  018F78  0EFE               	movlw	-2
 19934  018F7A  50E3               	movf	plusw1,w,c
 19935  018F7C  0F01               	addlw	1
 19936  018F7E  6E2A               	movwf	btemp^0,c
 19937  018F80  0EFE               	movlw	-2
 19938  018F82  0060  F0AB  FFE3   	movff	btemp,plusw1
 19939  018F88  6A2A               	clrf	btemp^0,c
 19940  018F8A  0EFF               	movlw	-1
 19941  018F8C  50E3               	movf	plusw1,w,c
 19942  018F8E  202A               	addwfc	btemp^0,w,c
 19943  018F90  6E2A               	movwf	btemp^0,c
 19944  018F92  0EFF               	movlw	-1
 19945  018F94  0060  F0AB  FFE3   	movff	btemp,plusw1
 19946                           
 19947                           ;stkvar	_cp @ sp[(-4)+0]
 19948  018F9A  0EFC               	movlw	-4
 19949  018F9C  50E3               	movf	plusw1,w,c
 19950  018F9E  0F01               	addlw	1
 19951  018FA0  6E2A               	movwf	btemp^0,c
 19952  018FA2  0EFC               	movlw	-4
 19953  018FA4  0060  F0AB  FFE3   	movff	btemp,plusw1
 19954  018FAA  6A2A               	clrf	btemp^0,c
 19955  018FAC  0EFD               	movlw	-3
 19956  018FAE  50E3               	movf	plusw1,w,c
 19957  018FB0  202A               	addwfc	btemp^0,w,c
 19958  018FB2  6E2A               	movwf	btemp^0,c
 19959  018FB4  0EFD               	movlw	-3
 19960  018FB6  0060  F0AB  FFE3   	movff	btemp,plusw1
 19961                           
 19962                           ;stkvar	_s @ sp[(-4)+2]
 19963  018FBC  50E1               	movf	fsr1l,w,c
 19964  018FBE  0FFE               	addlw	-2
 19965  018FC0  6ED9               	movwf	fsr2l,c
 19966  018FC2  50E2               	movf	fsr1h,w,c
 19967  018FC4  6EDA               	movwf	fsr2h,c
 19968  018FC6  0EFF               	movlw	255
 19969  018FC8  22DA               	addwfc	fsr2h,f,c
 19970  018FCA  006F FF7B FFF6     	movff	postinc2,tblptrl
 19971  018FD0  006F FF77 FFF7     	movff	postdec2,tblptrh
 19972  018FD6                     	if	0	;tblptru may be non-zero
 19973  018FD6                     	endif
 19974  018FD6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19975  018FD6  0E00               	movlw	low (__mediumconst shr (0+16))
 19976  018FD8  6EF8               	movwf	tblptru,c
 19977  018FDA                     	endif
 19978                           
 19979                           ;stkvar	_cp @ sp[(-4)+0]
 19980  018FDA  0EFC               	movlw	-4
 19981  018FDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 19982  018FE2  0EFD               	movlw	-3
 19983  018FE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 19984  018FEA  0008               	tblrd		*
 19985  018FEC  006F FFD7 FFDF     	movff	tablat,indf2
 19986  018FF2  0E20               	movlw	32
 19987  018FF4  0103               	movlb	3	; () banked
 19988  018FF6  6FCB               	movwf	(asctime@buf+7)& (0+255),b
 19989                           
 19990                           ; BSR set to: 3
 19991  018FF8  0E20               	movlw	32
 19992  018FFA  6EE6               	movwf	postinc1,c
 19993  018FFC  0E20               	movlw	32
 19994  018FFE  6EE6               	movwf	postinc1,c
 19995                           
 19996                           ;stkvar	_tim @ sp[(-6)+-2]
 19997  019000  0EF8               	movlw	-8
 19998  019002  006F FF8C  F034    	movff	plusw1,btemp+10
 19999  019008  0EF9               	movlw	-7
 20000  01900A  006F FF8C  F035    	movff	plusw1,btemp+11
 20001  019010  0E06               	movlw	6
 20002  019012  2434               	addwf	(btemp+10)^0,w,c
 20003  019014  6ED9               	movwf	fsr2l,c
 20004  019016  0E00               	movlw	0
 20005  019018  2035               	addwfc	(btemp+11)^0,w,c
 20006  01901A  6EDA               	movwf	fsr2h,c
 20007  01901C  50DF               	movf	indf2,w,c
 20008  01901E  6EE6               	movwf	postinc1,c
 20009  019020  0ECE               	movlw	low (asctime@buf+10)
 20010  019022  6EE6               	movwf	postinc1,c
 20011  019024  0E03               	movlw	high (asctime@buf+10)
 20012  019026  6EE6               	movwf	postinc1,c
 20013  019028  EC2A  F0FD         	call	_put2d	;wreg free
 20014  01902C  0E3A               	movlw	58
 20015  01902E  6EE6               	movwf	postinc1,c
 20016  019030  0E30               	movlw	48
 20017  019032  6EE6               	movwf	postinc1,c
 20018                           
 20019                           ;stkvar	_tim @ sp[(-6)+-2]
 20020  019034  0EF8               	movlw	-8
 20021  019036  006F FF8C  F034    	movff	plusw1,btemp+10
 20022  01903C  0EF9               	movlw	-7
 20023  01903E  006F FF8C  F035    	movff	plusw1,btemp+11
 20024  019044  0E04               	movlw	4
 20025  019046  2434               	addwf	(btemp+10)^0,w,c
 20026  019048  6ED9               	movwf	fsr2l,c
 20027  01904A  0E00               	movlw	0
 20028  01904C  2035               	addwfc	(btemp+11)^0,w,c
 20029  01904E  6EDA               	movwf	fsr2h,c
 20030  019050  50DF               	movf	indf2,w,c
 20031  019052  6EE6               	movwf	postinc1,c
 20032  019054  0ED1               	movlw	low (asctime@buf+13)
 20033  019056  6EE6               	movwf	postinc1,c
 20034  019058  0E03               	movlw	high (asctime@buf+13)
 20035  01905A  6EE6               	movwf	postinc1,c
 20036  01905C  EC2A  F0FD         	call	_put2d	;wreg free
 20037  019060  0E3A               	movlw	58
 20038  019062  6EE6               	movwf	postinc1,c
 20039  019064  0E30               	movlw	48
 20040  019066  6EE6               	movwf	postinc1,c
 20041                           
 20042                           ;stkvar	_tim @ sp[(-6)+-2]
 20043  019068  0EF8               	movlw	-8
 20044  01906A  006F FF8C  F034    	movff	plusw1,btemp+10
 20045  019070  0EF9               	movlw	-7
 20046  019072  006F FF8C  F035    	movff	plusw1,btemp+11
 20047  019078  0E02               	movlw	2
 20048  01907A  2434               	addwf	(btemp+10)^0,w,c
 20049  01907C  6ED9               	movwf	fsr2l,c
 20050  01907E  0E00               	movlw	0
 20051  019080  2035               	addwfc	(btemp+11)^0,w,c
 20052  019082  6EDA               	movwf	fsr2h,c
 20053  019084  50DF               	movf	indf2,w,c
 20054  019086  6EE6               	movwf	postinc1,c
 20055  019088  0ED4               	movlw	low (asctime@buf+16)
 20056  01908A  6EE6               	movwf	postinc1,c
 20057  01908C  0E03               	movlw	high (asctime@buf+16)
 20058  01908E  6EE6               	movwf	postinc1,c
 20059  019090  EC2A  F0FD         	call	_put2d	;wreg free
 20060  019094  0E20               	movlw	32
 20061  019096  6EE6               	movwf	postinc1,c
 20062  019098  0E30               	movlw	48
 20063  01909A  6EE6               	movwf	postinc1,c
 20064                           
 20065                           ;stkvar	_tim @ sp[(-6)+-2]
 20066  01909C  0EF8               	movlw	-8
 20067  01909E  006F FF8F FFD9     	movff	plusw1,fsr2l
 20068  0190A4  0EF9               	movlw	-7
 20069  0190A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 20070  0190AC  50DF               	movf	indf2,w,c
 20071  0190AE  6EE6               	movwf	postinc1,c
 20072  0190B0  0ED7               	movlw	low (asctime@buf+19)
 20073  0190B2  6EE6               	movwf	postinc1,c
 20074  0190B4  0E03               	movlw	high (asctime@buf+19)
 20075  0190B6  6EE6               	movwf	postinc1,c
 20076  0190B8  EC2A  F0FD         	call	_put2d	;wreg free
 20077  0190BC  0E00               	movlw	0
 20078  0190BE  6EE6               	movwf	postinc1,c
 20079  0190C0  0E20               	movlw	32
 20080  0190C2  6EE6               	movwf	postinc1,c
 20081  0190C4  0E64               	movlw	100
 20082  0190C6  6EE6               	movwf	postinc1,c
 20083  0190C8  0E00               	movlw	0
 20084  0190CA  6EE6               	movwf	postinc1,c
 20085                           
 20086                           ;stkvar	_tim @ sp[(-8)+-2]
 20087  0190CC  0EF6               	movlw	-10
 20088  0190CE  006F FF8C  F034    	movff	plusw1,btemp+10
 20089  0190D4  0EF7               	movlw	-9
 20090  0190D6  006F FF8C  F035    	movff	plusw1,btemp+11
 20091  0190DC  0E0A               	movlw	10
 20092  0190DE  2434               	addwf	(btemp+10)^0,w,c
 20093  0190E0  6ED9               	movwf	fsr2l,c
 20094  0190E2  0E00               	movlw	0
 20095  0190E4  2035               	addwfc	(btemp+11)^0,w,c
 20096  0190E6  6EDA               	movwf	fsr2h,c
 20097  0190E8  006F FF78  F034    	movff	postinc2,btemp+10
 20098  0190EE  006F FF74  F035    	movff	postdec2,btemp+11
 20099  0190F4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20100  0190FA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20101  019100  EC14  F0FA         	call	___awdiv	;wreg free
 20102  019104  502A               	movf	btemp^0,w,c
 20103  019106  0F13               	addlw	19
 20104  019108  6EE6               	movwf	postinc1,c
 20105  01910A  0EDA               	movlw	low (asctime@buf+22)
 20106  01910C  6EE6               	movwf	postinc1,c
 20107  01910E  0E03               	movlw	high (asctime@buf+22)
 20108  019110  6EE6               	movwf	postinc1,c
 20109  019112  EC2A  F0FD         	call	_put2d	;wreg free
 20110  019116  0E0A               	movlw	10
 20111  019118  6EE6               	movwf	postinc1,c
 20112  01911A  0E30               	movlw	48
 20113  01911C  6EE6               	movwf	postinc1,c
 20114  01911E  0E64               	movlw	100
 20115  019120  6EE6               	movwf	postinc1,c
 20116  019122  0E00               	movlw	0
 20117  019124  6EE6               	movwf	postinc1,c
 20118                           
 20119                           ;stkvar	_tim @ sp[(-8)+-2]
 20120  019126  0EF6               	movlw	-10
 20121  019128  006F FF8C  F034    	movff	plusw1,btemp+10
 20122  01912E  0EF7               	movlw	-9
 20123  019130  006F FF8C  F035    	movff	plusw1,btemp+11
 20124  019136  0E0A               	movlw	10
 20125  019138  2434               	addwf	(btemp+10)^0,w,c
 20126  01913A  6ED9               	movwf	fsr2l,c
 20127  01913C  0E00               	movlw	0
 20128  01913E  2035               	addwfc	(btemp+11)^0,w,c
 20129  019140  6EDA               	movwf	fsr2h,c
 20130  019142  006F FF78  F034    	movff	postinc2,btemp+10
 20131  019148  006F FF74  F035    	movff	postdec2,btemp+11
 20132  01914E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20133  019154  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20134  01915A  EC43  F0FE         	call	___awmod	;wreg free
 20135  01915E  502A               	movf	btemp^0,w,c
 20136  019160  6EE6               	movwf	postinc1,c
 20137  019162  0EDC               	movlw	low (asctime@buf+24)
 20138  019164  6EE6               	movwf	postinc1,c
 20139  019166  0E03               	movlw	high (asctime@buf+24)
 20140  019168  6EE6               	movwf	postinc1,c
 20141  01916A  EC2A  F0FD         	call	_put2d	;wreg free
 20142  01916E  0EC4               	movlw	low asctime@buf
 20143  019170  6E2A               	movwf	btemp^0,c
 20144  019172  0E03               	movlw	high asctime@buf
 20145  019174  6E2B               	movwf	(btemp+1)^0,c
 20146                           
 20147                           ; _asctime: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20148  019176  0EFA               	movlw	250
 20149  019178  26E1               	addwf	fsr1l,f,c
 20150  01917A  0EFF               	movlw	255
 20151  01917C  22E2               	addwfc	fsr1h,f,c
 20152  01917E  0012               	return		;funcret
 20153  019180                     __end_of_asctime:
 20154                           	opt callstack 0
 20155                           
 20156 ;; *************** function _put2d *****************
 20157 ;; Defined at:
 20158 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 20159 ;; Parameters:    Size  Location     Type
 20160 ;;  cp              2  [STACK] PTR unsigned char 
 20161 ;;		 -> asctime@buf(27), 
 20162 ;;  i               1  [STACK] unsigned char 
 20163 ;;  cl              1  [STACK] unsigned char 
 20164 ;;  ct              1  [STACK] unsigned char 
 20165 ;; Auto vars:     Size  Location     Type
 20166 ;;		None
 20167 ;; Return value:  Size  Location     Type
 20168 ;;                  1  [STACK] void 
 20169 ;; Registers used:
 20170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20171 ;; Tracked objects:
 20172 ;;		On entry : 0/3
 20173 ;;		On exit  : 0/0
 20174 ;;		Unchanged: 0/0
 20175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20180 ;;Total ram usage:        0 bytes
 20181 ;; Hardware stack levels used:    1
 20182 ;; Hardware stack levels required when called:   16
 20183 ;; This function calls:
 20184 ;;		___awdiv
 20185 ;;		___lbmod
 20186 ;; This function is called by:
 20187 ;;		_asctime
 20188 ;; This function uses a reentrant model
 20189 ;;
 20190                           
 20191                           	psect	text55
 20192  01FA54                     __ptext55:
 20193                           	opt callstack 0
 20194  01FA54                     _put2d:
 20195                           	opt callstack 12
 20196                           
 20197                           ;stkvar	_ct @ sp[(0)+-5]
 20198                           ;stkvar	_cp @ sp[(0)+-2]
 20199                           
 20200                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20201                           ;incstack = 0
 20202  01FA54  0EFE               	movlw	-2
 20203  01FA56  006F FF8F FFD9     	movff	plusw1,fsr2l
 20204  01FA5C  0EFF               	movlw	-1
 20205  01FA5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 20206  01FA64  0EFB               	movlw	-5
 20207  01FA66  006F FF8F FFDF     	movff	plusw1,indf2
 20208  01FA6C  0E0A               	movlw	10
 20209  01FA6E  6EE6               	movwf	postinc1,c
 20210                           
 20211                           ;stkvar	_i @ sp[(-1)+-3]
 20212  01FA70  0EFC               	movlw	-4
 20213  01FA72  50E3               	movf	plusw1,w,c
 20214  01FA74  6EE6               	movwf	postinc1,c
 20215  01FA76  EC98  F008         	call	___lbmod	;wreg free
 20216  01FA7A  0E30               	movlw	48
 20217  01FA7C  262A               	addwf	btemp^0,f,c
 20218                           
 20219                           ;stkvar	_cp @ sp[(0)+-2]
 20220  01FA7E  0EFE               	movlw	-2
 20221  01FA80  006F FF8C  F02B    	movff	plusw1,btemp+1
 20222  01FA86  0E01               	movlw	1
 20223  01FA88  5E2B               	subwf	(btemp+1)^0,f,c
 20224  01FA8A  0EFE               	movlw	-2
 20225  01FA8C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20226  01FA92  0EFF               	movlw	-1
 20227  01FA94  006F FF8C  F02B    	movff	plusw1,btemp+1
 20228  01FA9A  0E00               	movlw	0
 20229  01FA9C  5A2B               	subwfb	(btemp+1)^0,f,c
 20230  01FA9E  0EFF               	movlw	-1
 20231  01FAA0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20232  01FAA6  0EFE               	movlw	-2
 20233  01FAA8  006F FF8F FFD9     	movff	plusw1,fsr2l
 20234  01FAAE  0EFF               	movlw	-1
 20235  01FAB0  006F FF8F FFDA     	movff	plusw1,fsr2h
 20236  01FAB6  0060  F0AB  FFDF   	movff	btemp,indf2
 20237  01FABC  0E0A               	movlw	10
 20238  01FABE  6EE6               	movwf	postinc1,c
 20239  01FAC0  0E00               	movlw	0
 20240  01FAC2  6EE6               	movwf	postinc1,c
 20241                           
 20242                           ;stkvar	_i @ sp[(-2)+-3]
 20243  01FAC4  0EFB               	movlw	-5
 20244  01FAC6  50E3               	movf	plusw1,w,c
 20245  01FAC8  6EE6               	movwf	postinc1,c
 20246  01FACA  0E00               	movlw	0
 20247  01FACC  6EE6               	movwf	postinc1,c
 20248  01FACE  EC14  F0FA         	call	___awdiv	;wreg free
 20249                           
 20250                           ;stkvar	_i @ sp[(0)+-3]
 20251  01FAD2  0EFD               	movlw	-3
 20252  01FAD4  0060  F0AB  FFE3   	movff	btemp,plusw1
 20253  01FADA  0EFD               	movlw	-3
 20254  01FADC  50E3               	movf	plusw1,w,c
 20255  01FADE  B4D8               	btfsc	status,2,c
 20256  01FAE0  D021               	goto	l17049
 20257                           
 20258                           ;stkvar	_cp @ sp[(0)+-2]
 20259  01FAE2  0EFE               	movlw	-2
 20260  01FAE4  006F FF8C  F02A    	movff	plusw1,btemp
 20261  01FAEA  0E01               	movlw	1
 20262  01FAEC  5E2A               	subwf	btemp^0,f,c
 20263  01FAEE  0EFE               	movlw	-2
 20264  01FAF0  0060  F0AB  FFE3   	movff	btemp,plusw1
 20265  01FAF6  0EFF               	movlw	-1
 20266  01FAF8  006F FF8C  F02A    	movff	plusw1,btemp
 20267  01FAFE  0E00               	movlw	0
 20268  01FB00  5A2A               	subwfb	btemp^0,f,c
 20269  01FB02  0EFF               	movlw	-1
 20270  01FB04  0060  F0AB  FFE3   	movff	btemp,plusw1
 20271  01FB0A  0EFE               	movlw	-2
 20272  01FB0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 20273  01FB12  0EFF               	movlw	-1
 20274  01FB14  006F FF8F FFDA     	movff	plusw1,fsr2h
 20275                           
 20276                           ;stkvar	_i @ sp[(0)+-3]
 20277  01FB1A  0EFD               	movlw	-3
 20278  01FB1C  50E3               	movf	plusw1,w,c
 20279  01FB1E  0F30               	addlw	48
 20280  01FB20  6EDF               	movwf	indf2,c
 20281  01FB22  D020               	goto	l3427
 20282  01FB24                     l17049:
 20283                           
 20284                           ;stkvar	_cl @ sp[(0)+-4]
 20285                           ;stkvar	_cp @ sp[(0)+-2]
 20286  01FB24  0EFE               	movlw	-2
 20287  01FB26  006F FF8C  F02A    	movff	plusw1,btemp
 20288  01FB2C  0E01               	movlw	1
 20289  01FB2E  5E2A               	subwf	btemp^0,f,c
 20290  01FB30  0EFE               	movlw	-2
 20291  01FB32  0060  F0AB  FFE3   	movff	btemp,plusw1
 20292  01FB38  0EFF               	movlw	-1
 20293  01FB3A  006F FF8C  F02A    	movff	plusw1,btemp
 20294  01FB40  0E00               	movlw	0
 20295  01FB42  5A2A               	subwfb	btemp^0,f,c
 20296  01FB44  0EFF               	movlw	-1
 20297  01FB46  0060  F0AB  FFE3   	movff	btemp,plusw1
 20298  01FB4C  0EFE               	movlw	-2
 20299  01FB4E  006F FF8F FFD9     	movff	plusw1,fsr2l
 20300  01FB54  0EFF               	movlw	-1
 20301  01FB56  006F FF8F FFDA     	movff	plusw1,fsr2h
 20302  01FB5C  0EFC               	movlw	-4
 20303  01FB5E  006F FF8F FFDF     	movff	plusw1,indf2
 20304  01FB64                     l3427:
 20305                           
 20306                           ; _put2d: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize
      +                           = 5, vargsize = 0
 20307  01FB64  0EFB               	movlw	251
 20308  01FB66  26E1               	addwf	fsr1l,f,c
 20309  01FB68  0EFF               	movlw	255
 20310  01FB6A  22E2               	addwfc	fsr1h,f,c
 20311  01FB6C  0012               	return		;funcret
 20312  01FB6E                     __end_of_put2d:
 20313                           	opt callstack 0
 20314                           
 20315 ;; *************** function ___lbmod *****************
 20316 ;; Defined at:
 20317 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 20318 ;; Parameters:    Size  Location     Type
 20319 ;;  dividend        1  [STACK] unsigned char 
 20320 ;;  divisor         1  [STACK] unsigned char 
 20321 ;; Auto vars:     Size  Location     Type
 20322 ;;  rem             1  [STACK] unsigned char 
 20323 ;;  counter         1  [STACK] unsigned char 
 20324 ;; Return value:  Size  Location     Type
 20325 ;;                  1  [STACK] unsigned char 
 20326 ;; Registers used:
 20327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 20328 ;; Tracked objects:
 20329 ;;		On entry : 0/3
 20330 ;;		On exit  : 0/0
 20331 ;;		Unchanged: 0/0
 20332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20337 ;;Total ram usage:        0 bytes
 20338 ;; Hardware stack levels used:    1
 20339 ;; Hardware stack levels required when called:   15
 20340 ;; This function calls:
 20341 ;;		Nothing
 20342 ;; This function is called by:
 20343 ;;		_put2d
 20344 ;; This function uses a reentrant model
 20345 ;;
 20346                           
 20347                           	psect	text56
 20348  001130                     __ptext56:
 20349                           	opt callstack 0
 20350  001130                     ___lbmod:
 20351                           	opt callstack 0
 20352                           
 20353                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20354  001130  52E6               	movf	postinc1,f,c
 20355  001132  52E6               	movf	postinc1,f,c
 20356                           
 20357                           ;stkvar	_counter @ sp[(-2)+1]
 20358                           
 20359                           ;incstack = 0
 20360  001134  0EFF               	movlw	-1
 20361  001136  6AE3               	clrf	plusw1,c
 20362  001138  86E3               	bsf	plusw1,3,c
 20363                           
 20364                           ;stkvar	_rem @ sp[(-2)+0]
 20365  00113A  0EFE               	movlw	-2
 20366  00113C  6AE3               	clrf	plusw1,c
 20367  00113E                     l16789:
 20368                           
 20369                           ;stkvar	_dividend @ sp[(-2)+-1]
 20370  00113E  0EFD               	movlw	-3
 20371  001140  006F FF8C  F035    	movff	plusw1,btemp+11
 20372                           
 20373                           ;stkvar	_rem @ sp[(-2)+0]
 20374  001146  0EFE               	movlw	-2
 20375  001148  006F FF8C  F034    	movff	plusw1,btemp+10
 20376  00114E  90D8               	bcf	status,0,c
 20377  001150  3435               	rlcf	(btemp+11)^0,w,c
 20378  001152  3434               	rlcf	(btemp+10)^0,w,c
 20379  001154  6E35               	movwf	(btemp+11)^0,c
 20380                           
 20381                           ;stkvar	_rem @ sp[(-2)+0]
 20382  001156  0EFE               	movlw	-2
 20383  001158  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20384                           
 20385                           ;stkvar	_dividend @ sp[(-2)+-1]
 20386  00115E  50E1               	movf	fsr1l,w,c
 20387  001160  0FFD               	addlw	-3
 20388  001162  6ED9               	movwf	fsr2l,c
 20389  001164  50E2               	movf	fsr1h,w,c
 20390  001166  6EDA               	movwf	fsr2h,c
 20391  001168  0EFF               	movlw	255
 20392  00116A  22DA               	addwfc	fsr2h,f,c
 20393  00116C  90D8               	bcf	status,0,c
 20394  00116E  36DF               	rlcf	indf2,f,c
 20395                           
 20396                           ;stkvar	_divisor @ sp[(-2)+-2]
 20397                           ;stkvar	_rem @ sp[(-2)+0]
 20398  001170  50E1               	movf	fsr1l,w,c
 20399  001172  0FFE               	addlw	-2
 20400  001174  6ED9               	movwf	fsr2l,c
 20401  001176  50E2               	movf	fsr1h,w,c
 20402  001178  6EDA               	movwf	fsr2h,c
 20403  00117A  0EFF               	movlw	255
 20404  00117C  22DA               	addwfc	fsr2h,f,c
 20405  00117E  0EFC               	movlw	-4
 20406  001180  50E3               	movf	plusw1,w,c
 20407  001182  5CDE               	subwf	postinc2,w,c
 20408  001184  A0D8               	btfss	status,0,c
 20409  001186  D00D               	goto	l16797
 20410                           
 20411                           ;stkvar	_divisor @ sp[(-2)+-2]
 20412  001188  0EFC               	movlw	-4
 20413  00118A  006F FF8C  F035    	movff	plusw1,btemp+11
 20414                           
 20415                           ;stkvar	_rem @ sp[(-2)+0]
 20416  001190  50E1               	movf	fsr1l,w,c
 20417  001192  0FFE               	addlw	-2
 20418  001194  6ED9               	movwf	fsr2l,c
 20419  001196  50E2               	movf	fsr1h,w,c
 20420  001198  6EDA               	movwf	fsr2h,c
 20421  00119A  0EFF               	movlw	255
 20422  00119C  22DA               	addwfc	fsr2h,f,c
 20423  00119E  5035               	movf	(btemp+11)^0,w,c
 20424  0011A0  5EDF               	subwf	indf2,f,c
 20425  0011A2                     l16797:
 20426                           
 20427                           ;stkvar	_counter @ sp[(-2)+1]
 20428  0011A2  0EFF               	movlw	-1
 20429  0011A4  50E3               	movf	plusw1,w,c
 20430  0011A6  6E2A               	movwf	btemp^0,c
 20431  0011A8  0E01               	movlw	1
 20432  0011AA  5E2A               	subwf	btemp^0,f,c
 20433  0011AC  0EFF               	movlw	-1
 20434  0011AE  0060  F0AB  FFE3   	movff	btemp,plusw1
 20435  0011B4  A4D8               	btfss	status,2,c
 20436  0011B6  D7C3               	goto	l16789
 20437                           
 20438                           ;stkvar	_rem @ sp[(-2)+0]
 20439  0011B8  0EFE               	movlw	-2
 20440  0011BA  006F FF8C  F02A    	movff	plusw1,btemp
 20441                           
 20442                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20443  0011C0  52E5               	movf	postdec1,f,c
 20444  0011C2  52E5               	movf	postdec1,f,c
 20445  0011C4  52E5               	movf	postdec1,f,c
 20446  0011C6  52E5               	movf	postdec1,f,c
 20447  0011C8  0012               	return		;funcret
 20448  0011CA                     __end_of___lbmod:
 20449                           	opt callstack 0
 20450                           
 20451 ;; *************** function _current_sensor_cal *****************
 20452 ;; Defined at:
 20453 ;;		line 509 in file "main.c"
 20454 ;; Parameters:    Size  Location     Type
 20455 ;;		None
 20456 ;; Auto vars:     Size  Location     Type
 20457 ;;  cp              4  [STACK] unsigned long 
 20458 ;;  cb              4  [STACK] unsigned long 
 20459 ;;  cpz             4  [STACK] unsigned long 
 20460 ;;  cbz             4  [STACK] unsigned long 
 20461 ;;  x               1  [STACK] unsigned char 
 20462 ;; Return value:  Size  Location     Type
 20463 ;;                  1  [STACK] _Bool 
 20464 ;; Registers used:
 20465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 20466 ;; Tracked objects:
 20467 ;;		On entry : 0/2
 20468 ;;		On exit  : 0/0
 20469 ;;		Unchanged: 0/0
 20470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20475 ;;Total ram usage:        0 bytes
 20476 ;; Hardware stack levels used:    1
 20477 ;; Hardware stack levels required when called:   27
 20478 ;; This function calls:
 20479 ;;		_WaitMs
 20480 ;;		___fldiv
 20481 ;;		___xxtofl
 20482 ;;		_cal_current_10A
 20483 ;;		_cal_current_zero
 20484 ;;		_clear_adc_scan
 20485 ;;		_clear_switch
 20486 ;;		_get_raw_result
 20487 ;;		_get_switch
 20488 ;;		_get_vterm_ptr
 20489 ;;		_spinners
 20490 ;;		_sprintf
 20491 ;;		_start_adc_scan
 20492 ;;		_update_lcd
 20493 ;;		_write_cal_data
 20494 ;; This function is called by:
 20495 ;;		_main
 20496 ;; This function uses a reentrant model
 20497 ;;
 20498                           
 20499                           	psect	text57
 20500  014818                     __ptext57:
 20501                           	opt callstack 0
 20502  014818                     _current_sensor_cal:
 20503                           	opt callstack 0
 20504                           
 20505                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20506  014818  0E11               	movlw	17
 20507  01481A  26E1               	addwf	fsr1l,f,c
 20508  01481C  0E00               	movlw	0
 20509  01481E  22E2               	addwfc	fsr1h,f,c
 20510                           
 20511                           ;main.c: 511:  uint8_t x = 0;
 20512                           ;stkvar	_x @ sp[(-17)+16]
 20513                           
 20514                           ;incstack = 0
 20515  014820  0EFF               	movlw	-1
 20516  014822  6AE3               	clrf	plusw1,c
 20517                           
 20518                           ;main.c: 512:  uint32_t cb = 0, cp = 0;
 20519                           ;stkvar	_cb @ sp[(-17)+4]
 20520  014824  0EF3               	movlw	-13
 20521  014826  6AE3               	clrf	plusw1,c
 20522  014828  0EF4               	movlw	-12
 20523  01482A  6AE3               	clrf	plusw1,c
 20524  01482C  0EF5               	movlw	-11
 20525  01482E  6AE3               	clrf	plusw1,c
 20526  014830  0EF6               	movlw	-10
 20527  014832  6AE3               	clrf	plusw1,c
 20528                           
 20529                           ;stkvar	_cp @ sp[(-17)+0]
 20530  014834  0EEF               	movlw	-17
 20531  014836  6AE3               	clrf	plusw1,c
 20532  014838  0EF0               	movlw	-16
 20533  01483A  6AE3               	clrf	plusw1,c
 20534  01483C  0EF1               	movlw	-15
 20535  01483E  6AE3               	clrf	plusw1,c
 20536  014840  0EF2               	movlw	-14
 20537  014842  6AE3               	clrf	plusw1,c
 20538                           
 20539                           ;main.c: 514:  sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 20540  014844  0E9B               	movlw	low STR_52
 20541  014846  6EE6               	movwf	postinc1,c
 20542  014848  0EFD               	movlw	high STR_52
 20543  01484A  6EE6               	movwf	postinc1,c
 20544  01484C  0E00               	movlw	0
 20545  01484E  6EE6               	movwf	postinc1,c
 20546  014850  0E00               	movlw	0
 20547  014852  6EE6               	movwf	postinc1,c
 20548  014854  EC13  F014         	call	_get_vterm_ptr	;wreg free
 20549  014858  0060  F0AB  FFE6   	movff	btemp,postinc1
 20550  01485E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20551  014864  0E04               	movlw	4
 20552  014866  6EE6               	movwf	postinc1,c
 20553  014868  EC59  F0FF         	call	_sprintf	;wreg free
 20554                           
 20555                           ; BSR set to: 0
 20556                           ;main.c: 515:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero          ");
 20557  01486C  0E59               	movlw	low STR_53
 20558  01486E  6EE6               	movwf	postinc1,c
 20559  014870  0EFD               	movlw	high STR_53
 20560  014872  6EE6               	movwf	postinc1,c
 20561  014874  0E00               	movlw	0
 20562  014876  6EE6               	movwf	postinc1,c
 20563  014878  0E01               	movlw	1
 20564  01487A  6EE6               	movwf	postinc1,c
 20565  01487C  EC13  F014         	call	_get_vterm_ptr	;wreg free
 20566  014880  0060  F0AB  FFE6   	movff	btemp,postinc1
 20567  014886  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20568  01488C  0E04               	movlw	4
 20569  01488E  6EE6               	movwf	postinc1,c
 20570  014890  EC59  F0FF         	call	_sprintf	;wreg free
 20571                           
 20572                           ; BSR set to: 0
 20573                           ;main.c: 516:  sprintf(get_vterm_ptr(2, 0), "Calibration          ");
 20574  014894  0E43               	movlw	low STR_54
 20575  014896  6EE6               	movwf	postinc1,c
 20576  014898  0EFD               	movlw	high STR_54
 20577  01489A  6EE6               	movwf	postinc1,c
 20578  01489C  0E00               	movlw	0
 20579  01489E  6EE6               	movwf	postinc1,c
 20580  0148A0  0E02               	movlw	2
 20581  0148A2  6EE6               	movwf	postinc1,c
 20582  0148A4  EC13  F014         	call	_get_vterm_ptr	;wreg free
 20583  0148A8  0060  F0AB  FFE6   	movff	btemp,postinc1
 20584  0148AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20585  0148B4  0E04               	movlw	4
 20586  0148B6  6EE6               	movwf	postinc1,c
 20587  0148B8  EC59  F0FF         	call	_sprintf	;wreg free
 20588                           
 20589                           ; BSR set to: 0
 20590                           ;main.c: 517:  update_lcd(0);
 20591  0148BC  0E00               	movlw	0
 20592  0148BE  6EE6               	movwf	postinc1,c
 20593  0148C0  EC0B  F0F8         	call	_update_lcd	;wreg free
 20594                           
 20595                           ;main.c: 518:  WaitMs(2000);
 20596  0148C4  0ED0               	movlw	208
 20597  0148C6  6EE6               	movwf	postinc1,c
 20598  0148C8  0E07               	movlw	7
 20599  0148CA  6EE6               	movwf	postinc1,c
 20600  0148CC  EC17  F013         	call	_WaitMs	;wreg free
 20601  0148D0                     l17385:
 20602                           
 20603                           ;main.c: 520:   if (++x > 64)
 20604                           ;stkvar	_x @ sp[(-17)+16]
 20605  0148D0  0EFF               	movlw	-1
 20606  0148D2  2AE3               	incf	plusw1,f,c
 20607  0148D4  0EFF               	movlw	-1
 20608  0148D6  006F FF8C  F02A    	movff	plusw1,btemp
 20609  0148DC  0E40               	movlw	64
 20610  0148DE  642A               	cpfsgt	btemp^0,c
 20611  0148E0  D002               	goto	l17389
 20612  0148E2  EFE1  F0A9         	goto	l1524
 20613  0148E6                     l17389:
 20614                           
 20615                           ;main.c: 522:   sprintf(get_vterm_ptr(2, 0), "Release button %c   ", spinners(4, 0));
 20616  0148E6  0E00               	movlw	0
 20617  0148E8  6EE6               	movwf	postinc1,c
 20618  0148EA  0E04               	movlw	4
 20619  0148EC  6EE6               	movwf	postinc1,c
 20620  0148EE  EC52  F001         	call	_spinners	;wreg free
 20621  0148F2  502A               	movf	btemp^0,w,c
 20622  0148F4  6EE6               	movwf	postinc1,c
 20623  0148F6  0E00               	movlw	0
 20624  0148F8  6EE6               	movwf	postinc1,c
 20625  0148FA  0E34               	movlw	low STR_55
 20626  0148FC  6EE6               	movwf	postinc1,c
 20627  0148FE  0EFF               	movlw	high STR_55
 20628  014900  6EE6               	movwf	postinc1,c
 20629  014902  0E00               	movlw	0
 20630  014904  6EE6               	movwf	postinc1,c
 20631  014906  0E02               	movlw	2
 20632  014908  6EE6               	movwf	postinc1,c
 20633  01490A  EC13  F014         	call	_get_vterm_ptr	;wreg free
 20634  01490E  0060  F0AB  FFE6   	movff	btemp,postinc1
 20635  014914  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20636  01491A  0E06               	movlw	6
 20637  01491C  6EE6               	movwf	postinc1,c
 20638  01491E  EC59  F0FF         	call	_sprintf	;wreg free
 20639                           
 20640                           ;main.c: 523:   update_lcd(0);
 20641  014922  0E00               	movlw	0
 20642  014924  6EE6               	movwf	postinc1,c
 20643  014926  EC0B  F0F8         	call	_update_lcd	;wreg free
 20644                           
 20645                           ;main.c: 524:   WaitMs(100);
 20646  01492A  0E64               	movlw	100
 20647  01492C  6EE6               	movwf	postinc1,c
 20648  01492E  0E00               	movlw	0
 20649  014930  6EE6               	movwf	postinc1,c
 20650  014932  EC17  F013         	call	_WaitMs	;wreg free
 20651                           
 20652                           ;main.c: 525:  } while (get_switch(SCALIB));
 20653  014936  0E04               	movlw	4
 20654  014938  6EE6               	movwf	postinc1,c
 20655  01493A  EC2A  F014         	call	_get_switch	;wreg free
 20656  01493E  502A               	movf	btemp^0,w,c
 20657  014940  A4D8               	btfss	status,2,c
 20658  014942  D7C6               	goto	l17385
 20659                           
 20660                           ;main.c: 527:  x = 0;
 20661                           ;stkvar	_x @ sp[(-17)+16]
 20662  014944  0EFF               	movlw	-1
 20663  014946  6AE3               	clrf	plusw1,c
 20664  014948                     l17397:
 20665                           
 20666                           ;main.c: 529:   cb += get_raw_result(C_BATT);
 20667  014948  0E00               	movlw	0
 20668  01494A  6EE6               	movwf	postinc1,c
 20669  01494C  EC2B  F016         	call	_get_raw_result	;wreg free
 20670                           
 20671                           ;stkvar	_cb @ sp[(-17)+4]
 20672  014950  50E1               	movf	fsr1l,w,c
 20673  014952  0FF3               	addlw	-13
 20674  014954  6ED9               	movwf	fsr2l,c
 20675  014956  50E2               	movf	fsr1h,w,c
 20676  014958  6EDA               	movwf	fsr2h,c
 20677  01495A  0EFF               	movlw	255
 20678  01495C  22DA               	addwfc	fsr2h,f,c
 20679  01495E  502A               	movf	btemp^0,w,c
 20680  014960  26DE               	addwf	postinc2,f,c
 20681  014962  502B               	movf	(btemp+1)^0,w,c
 20682  014964  22DE               	addwfc	postinc2,f,c
 20683  014966  0E00               	movlw	0
 20684  014968  22DE               	addwfc	postinc2,f,c
 20685  01496A  22DE               	addwfc	postinc2,f,c
 20686                           
 20687                           ;main.c: 530:   cp += get_raw_result(C_PV);
 20688  01496C  0E01               	movlw	1
 20689  01496E  6EE6               	movwf	postinc1,c
 20690  014970  EC2B  F016         	call	_get_raw_result	;wreg free
 20691                           
 20692                           ;stkvar	_cp @ sp[(-17)+0]
 20693  014974  50E1               	movf	fsr1l,w,c
 20694  014976  0FEF               	addlw	-17
 20695  014978  6ED9               	movwf	fsr2l,c
 20696  01497A  50E2               	movf	fsr1h,w,c
 20697  01497C  6EDA               	movwf	fsr2h,c
 20698  01497E  0EFF               	movlw	255
 20699  014980  22DA               	addwfc	fsr2h,f,c
 20700  014982  502A               	movf	btemp^0,w,c
 20701  014984  26DE               	addwf	postinc2,f,c
 20702  014986  502B               	movf	(btemp+1)^0,w,c
 20703  014988  22DE               	addwfc	postinc2,f,c
 20704  01498A  0E00               	movlw	0
 20705  01498C  22DE               	addwfc	postinc2,f,c
 20706  01498E  22DE               	addwfc	postinc2,f,c
 20707                           
 20708                           ;main.c: 531:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings      ");
 20709  014990  0EDD               	movlw	low STR_56
 20710  014992  6EE6               	movwf	postinc1,c
 20711  014994  0EFD               	movlw	high STR_56
 20712  014996  6EE6               	movwf	postinc1,c
 20713  014998  0E00               	movlw	0
 20714  01499A  6EE6               	movwf	postinc1,c
 20715  01499C  0E00               	movlw	0
 20716  01499E  6EE6               	movwf	postinc1,c
 20717  0149A0  EC13  F014         	call	_get_vterm_ptr	;wreg free
 20718  0149A4  0060  F0AB  FFE6   	movff	btemp,postinc1
 20719  0149AA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20720  0149B0  0E04               	movlw	4
 20721  0149B2  6EE6               	movwf	postinc1,c
 20722  0149B4  EC59  F0FF         	call	_sprintf	;wreg free
 20723                           
 20724                           ; BSR set to: 0
 20725                           ;main.c: 532:   sprintf(get_vterm_ptr(1, 0), " %d %d               ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 20726  0149B8  0E01               	movlw	1
 20727  0149BA  6EE6               	movwf	postinc1,c
 20728  0149BC  EC2B  F016         	call	_get_raw_result	;wreg free
 20729  0149C0  0060  F0AB  FFE6   	movff	btemp,postinc1
 20730  0149C6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20731  0149CC  0E00               	movlw	0
 20732  0149CE  6EE6               	movwf	postinc1,c
 20733  0149D0  EC2B  F016         	call	_get_raw_result	;wreg free
 20734  0149D4  0060  F0AB  FFE6   	movff	btemp,postinc1
 20735  0149DA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20736  0149E0  0EA9               	movlw	low STR_57
 20737  0149E2  6EE6               	movwf	postinc1,c
 20738  0149E4  0EFC               	movlw	high STR_57
 20739  0149E6  6EE6               	movwf	postinc1,c
 20740  0149E8  0E00               	movlw	0
 20741  0149EA  6EE6               	movwf	postinc1,c
 20742  0149EC  0E01               	movlw	1
 20743  0149EE  6EE6               	movwf	postinc1,c
 20744  0149F0  EC13  F014         	call	_get_vterm_ptr	;wreg free
 20745  0149F4  0060  F0AB  FFE6   	movff	btemp,postinc1
 20746  0149FA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20747  014A00  0E08               	movlw	8
 20748  014A02  6EE6               	movwf	postinc1,c
 20749  014A04  EC59  F0FF         	call	_sprintf	;wreg free
 20750                           
 20751                           ; BSR set to: 0
 20752                           ;main.c: 533:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d   ", x);
 20753                           ;stkvar	_x @ sp[(-17)+16]
 20754  014A08  0EFF               	movlw	-1
 20755  014A0A  50E3               	movf	plusw1,w,c
 20756  014A0C  6EE6               	movwf	postinc1,c
 20757  014A0E  0E00               	movlw	0
 20758  014A10  6EE6               	movwf	postinc1,c
 20759  014A12  0E4B               	movlw	low STR_58
 20760  014A14  6EE6               	movwf	postinc1,c
 20761  014A16  0EFE               	movlw	high STR_58
 20762  014A18  6EE6               	movwf	postinc1,c
 20763  014A1A  0E00               	movlw	0
 20764  014A1C  6EE6               	movwf	postinc1,c
 20765  014A1E  0E02               	movlw	2
 20766  014A20  6EE6               	movwf	postinc1,c
 20767  014A22  EC13  F014         	call	_get_vterm_ptr	;wreg free
 20768  014A26  0060  F0AB  FFE6   	movff	btemp,postinc1
 20769  014A2C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20770  014A32  0E06               	movlw	6
 20771  014A34  6EE6               	movwf	postinc1,c
 20772  014A36  EC59  F0FF         	call	_sprintf	;wreg free
 20773                           
 20774                           ; BSR set to: 0
 20775                           ;main.c: 534:   update_lcd(0);
 20776  014A3A  0E00               	movlw	0
 20777  014A3C  6EE6               	movwf	postinc1,c
 20778  014A3E  EC0B  F0F8         	call	_update_lcd	;wreg free
 20779                           
 20780                           ;main.c: 535:   clear_adc_scan();
 20781  014A42  ECB7  F017         	call	_clear_adc_scan	;wreg free
 20782                           
 20783                           ; BSR set to: 1
 20784                           ;main.c: 536:   start_adc_scan();
 20785  014A46  EC43  F00E         	call	_start_adc_scan	;wreg free
 20786                           
 20787                           ;main.c: 537:   WaitMs(100);
 20788  014A4A  0E64               	movlw	100
 20789  014A4C  6EE6               	movwf	postinc1,c
 20790  014A4E  0E00               	movlw	0
 20791  014A50  6EE6               	movwf	postinc1,c
 20792  014A52  EC17  F013         	call	_WaitMs	;wreg free
 20793                           
 20794                           ;main.c: 538:  } while (++x < 64);
 20795                           ;stkvar	_x @ sp[(-17)+16]
 20796  014A56  0EFF               	movlw	-1
 20797  014A58  2AE3               	incf	plusw1,f,c
 20798  014A5A  0EFF               	movlw	-1
 20799  014A5C  006F FF8C  F02A    	movff	plusw1,btemp
 20800  014A62  0E3F               	movlw	63
 20801  014A64  642A               	cpfsgt	btemp^0,c
 20802  014A66  D770               	goto	l17397
 20803                           
 20804                           ;main.c: 539:  cb = cb >> 6;
 20805  014A68  0E06               	movlw	6
 20806  014A6A  6E35               	movwf	(btemp+11)^0,c
 20807                           
 20808                           ;stkvar	_cb @ sp[(-17)+4]
 20809  014A6C  50E1               	movf	fsr1l,w,c
 20810  014A6E  0FF3               	addlw	-13
 20811  014A70  6ED9               	movwf	fsr2l,c
 20812  014A72  50E2               	movf	fsr1h,w,c
 20813  014A74  6EDA               	movwf	fsr2h,c
 20814  014A76  0EFF               	movlw	255
 20815  014A78  22DA               	addwfc	fsr2h,f,c
 20816  014A7A  2835               	incf	(btemp+11)^0,w,c
 20817  014A7C  52DE               	movf	postinc2,f,c
 20818  014A7E  D007               	goto	u16980
 20819  014A80                     u16985:
 20820  014A80  52DE               	movf	postinc2,f,c
 20821  014A82  52DE               	movf	postinc2,f,c
 20822  014A84  90D8               	bcf	status,0,c
 20823  014A86  32DD               	rrcf	postdec2,f,c
 20824  014A88  32DD               	rrcf	postdec2,f,c
 20825  014A8A  32DD               	rrcf	postdec2,f,c
 20826  014A8C  32DE               	rrcf	postinc2,f,c
 20827  014A8E                     u16980:
 20828  014A8E  2EE8               	decfsz	wreg,f,c
 20829  014A90  D7F7               	goto	u16985
 20830                           
 20831                           ;main.c: 540:  cp = cp >> 6;
 20832  014A92  0E06               	movlw	6
 20833  014A94  6E35               	movwf	(btemp+11)^0,c
 20834                           
 20835                           ;stkvar	_cp @ sp[(-17)+0]
 20836  014A96  50E1               	movf	fsr1l,w,c
 20837  014A98  0FEF               	addlw	-17
 20838  014A9A  6ED9               	movwf	fsr2l,c
 20839  014A9C  50E2               	movf	fsr1h,w,c
 20840  014A9E  6EDA               	movwf	fsr2h,c
 20841  014AA0  0EFF               	movlw	255
 20842  014AA2  22DA               	addwfc	fsr2h,f,c
 20843  014AA4  2835               	incf	(btemp+11)^0,w,c
 20844  014AA6  52DE               	movf	postinc2,f,c
 20845  014AA8  D007               	goto	u16990
 20846  014AAA                     u16995:
 20847  014AAA  52DE               	movf	postinc2,f,c
 20848  014AAC  52DE               	movf	postinc2,f,c
 20849  014AAE  90D8               	bcf	status,0,c
 20850  014AB0  32DD               	rrcf	postdec2,f,c
 20851  014AB2  32DD               	rrcf	postdec2,f,c
 20852  014AB4  32DD               	rrcf	postdec2,f,c
 20853  014AB6  32DE               	rrcf	postinc2,f,c
 20854  014AB8                     u16990:
 20855  014AB8  2EE8               	decfsz	wreg,f,c
 20856  014ABA  D7F7               	goto	u16995
 20857                           
 20858                           ;main.c: 542:  if (cal_current_zero(0, cb, cp)) {
 20859                           ;stkvar	_cp @ sp[(-17)+0]
 20860  014ABC  0EEF               	movlw	-17
 20861  014ABE  006F FF8F FFE6     	movff	plusw1,postinc1
 20862  014AC4  006F FF8F FFE6     	movff	plusw1,postinc1
 20863                           
 20864                           ;stkvar	_cb @ sp[(-19)+4]
 20865  014ACA  0EF1               	movlw	-15
 20866  014ACC  006F FF8F FFE6     	movff	plusw1,postinc1
 20867  014AD2  006F FF8F FFE6     	movff	plusw1,postinc1
 20868  014AD8  0E00               	movlw	0
 20869  014ADA  6EE6               	movwf	postinc1,c
 20870  014ADC  EC31  F009         	call	_cal_current_zero	;wreg free
 20871  014AE0  502A               	movf	btemp^0,w,c
 20872  014AE2  B4D8               	btfsc	status,2,c
 20873  014AE4  D075               	goto	l17435
 20874                           
 20875                           ;main.c: 543:   cal_current_zero(1, cb, cp);
 20876                           ;stkvar	_cp @ sp[(-17)+0]
 20877  014AE6  0EEF               	movlw	-17
 20878  014AE8  006F FF8F FFE6     	movff	plusw1,postinc1
 20879  014AEE  006F FF8F FFE6     	movff	plusw1,postinc1
 20880                           
 20881                           ;stkvar	_cb @ sp[(-19)+4]
 20882  014AF4  0EF1               	movlw	-15
 20883  014AF6  006F FF8F FFE6     	movff	plusw1,postinc1
 20884  014AFC  006F FF8F FFE6     	movff	plusw1,postinc1
 20885  014B02  0E01               	movlw	1
 20886  014B04  6EE6               	movwf	postinc1,c
 20887  014B06  EC31  F009         	call	_cal_current_zero	;wreg free
 20888                           
 20889                           ;main.c: 544:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 20890  014B0A  0E9B               	movlw	low STR_52
 20891  014B0C  6EE6               	movwf	postinc1,c
 20892  014B0E  0EFD               	movlw	high STR_52
 20893  014B10  6EE6               	movwf	postinc1,c
 20894  014B12  0E00               	movlw	0
 20895  014B14  6EE6               	movwf	postinc1,c
 20896  014B16  0E00               	movlw	0
 20897  014B18  6EE6               	movwf	postinc1,c
 20898  014B1A  EC13  F014         	call	_get_vterm_ptr	;wreg free
 20899  014B1E  0060  F0AB  FFE6   	movff	btemp,postinc1
 20900  014B24  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20901  014B2A  0E04               	movlw	4
 20902  014B2C  6EE6               	movwf	postinc1,c
 20903  014B2E  EC59  F0FF         	call	_sprintf	;wreg free
 20904                           
 20905                           ; BSR set to: 0
 20906                           ;main.c: 545:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", cb, cp);
 20907                           ;stkvar	_cp @ sp[(-17)+0]
 20908  014B32  0EEF               	movlw	-17
 20909  014B34  006F FF8F FFE6     	movff	plusw1,postinc1
 20910  014B3A  006F FF8F FFE6     	movff	plusw1,postinc1
 20911  014B40  006F FF8F FFE6     	movff	plusw1,postinc1
 20912  014B46  006F FF8F FFE6     	movff	plusw1,postinc1
 20913                           
 20914                           ;stkvar	_cb @ sp[(-21)+4]
 20915  014B4C  0EEF               	movlw	-17
 20916  014B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 20917  014B54  006F FF8F FFE6     	movff	plusw1,postinc1
 20918  014B5A  006F FF8F FFE6     	movff	plusw1,postinc1
 20919  014B60  006F FF8F FFE6     	movff	plusw1,postinc1
 20920  014B66  0ED5               	movlw	low STR_60
 20921  014B68  6EE6               	movwf	postinc1,c
 20922  014B6A  0EFC               	movlw	high STR_60
 20923  014B6C  6EE6               	movwf	postinc1,c
 20924  014B6E  0E00               	movlw	0
 20925  014B70  6EE6               	movwf	postinc1,c
 20926  014B72  0E01               	movlw	1
 20927  014B74  6EE6               	movwf	postinc1,c
 20928  014B76  EC13  F014         	call	_get_vterm_ptr	;wreg free
 20929  014B7A  0060  F0AB  FFE6   	movff	btemp,postinc1
 20930  014B80  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20931  014B86  0E0C               	movlw	12
 20932  014B88  6EE6               	movwf	postinc1,c
 20933  014B8A  EC59  F0FF         	call	_sprintf	;wreg free
 20934                           
 20935                           ; BSR set to: 0
 20936                           ;main.c: 546:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set         ");
 20937  014B8E  0E85               	movlw	low STR_61
 20938  014B90  6EE6               	movwf	postinc1,c
 20939  014B92  0EFD               	movlw	high STR_61
 20940  014B94  6EE6               	movwf	postinc1,c
 20941  014B96  0E00               	movlw	0
 20942  014B98  6EE6               	movwf	postinc1,c
 20943  014B9A  0E02               	movlw	2
 20944  014B9C  6EE6               	movwf	postinc1,c
 20945  014B9E  EC13  F014         	call	_get_vterm_ptr	;wreg free
 20946  014BA2  0060  F0AB  FFE6   	movff	btemp,postinc1
 20947  014BA8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20948  014BAE  0E04               	movlw	4
 20949  014BB0  6EE6               	movwf	postinc1,c
 20950  014BB2  EC59  F0FF         	call	_sprintf	;wreg free
 20951                           
 20952                           ; BSR set to: 0
 20953                           ;main.c: 547:   update_lcd(0);
 20954  014BB6  0E00               	movlw	0
 20955  014BB8  6EE6               	movwf	postinc1,c
 20956  014BBA  EC0B  F0F8         	call	_update_lcd	;wreg free
 20957                           
 20958                           ;main.c: 548:   WaitMs(2000);
 20959  014BBE  0ED0               	movlw	208
 20960  014BC0  6EE6               	movwf	postinc1,c
 20961  014BC2  0E07               	movlw	7
 20962  014BC4  6EE6               	movwf	postinc1,c
 20963  014BC6  EC17  F013         	call	_WaitMs	;wreg free
 20964                           
 20965                           ;main.c: 549:   write_cal_data();
 20966  014BCA  EC68  F0F9         	call	_write_cal_data	;wreg free
 20967                           
 20968                           ;main.c: 550:  } else {
 20969  014BCE  D05B               	goto	l17441
 20970  014BD0                     l17435:
 20971                           
 20972                           ;main.c: 551:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 20973  014BD0  0E9B               	movlw	low STR_52
 20974  014BD2  6EE6               	movwf	postinc1,c
 20975  014BD4  0EFD               	movlw	high STR_52
 20976  014BD6  6EE6               	movwf	postinc1,c
 20977  014BD8  0E00               	movlw	0
 20978  014BDA  6EE6               	movwf	postinc1,c
 20979  014BDC  0E00               	movlw	0
 20980  014BDE  6EE6               	movwf	postinc1,c
 20981  014BE0  EC13  F014         	call	_get_vterm_ptr	;wreg free
 20982  014BE4  0060  F0AB  FFE6   	movff	btemp,postinc1
 20983  014BEA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20984  014BF0  0E04               	movlw	4
 20985  014BF2  6EE6               	movwf	postinc1,c
 20986  014BF4  EC59  F0FF         	call	_sprintf	;wreg free
 20987                           
 20988                           ;main.c: 552:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 20989  014BF8  0E01               	movlw	1
 20990  014BFA  6EE6               	movwf	postinc1,c
 20991  014BFC  EC2B  F016         	call	_get_raw_result	;wreg free
 20992  014C00  0060  F0AB  FFE6   	movff	btemp,postinc1
 20993  014C06  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20994  014C0C  0E00               	movlw	0
 20995  014C0E  6EE6               	movwf	postinc1,c
 20996  014C10  EC2B  F016         	call	_get_raw_result	;wreg free
 20997  014C14  0060  F0AB  FFE6   	movff	btemp,postinc1
 20998  014C1A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20999  014C20  0ED5               	movlw	low STR_60
 21000  014C22  6EE6               	movwf	postinc1,c
 21001  014C24  0EFC               	movlw	high STR_60
 21002  014C26  6EE6               	movwf	postinc1,c
 21003  014C28  0E00               	movlw	0
 21004  014C2A  6EE6               	movwf	postinc1,c
 21005  014C2C  0E01               	movlw	1
 21006  014C2E  6EE6               	movwf	postinc1,c
 21007  014C30  EC13  F014         	call	_get_vterm_ptr	;wreg free
 21008  014C34  0060  F0AB  FFE6   	movff	btemp,postinc1
 21009  014C3A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21010  014C40  0E08               	movlw	8
 21011  014C42  6EE6               	movwf	postinc1,c
 21012  014C44  EC59  F0FF         	call	_sprintf	;wreg free
 21013                           
 21014                           ;main.c: 553:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range    ");
 21015  014C48  0E1F               	movlw	low STR_64
 21016  014C4A  6EE6               	movwf	postinc1,c
 21017  014C4C  0EFE               	movlw	high STR_64
 21018  014C4E  6EE6               	movwf	postinc1,c
 21019  014C50  0E00               	movlw	0
 21020  014C52  6EE6               	movwf	postinc1,c
 21021  014C54  0E02               	movlw	2
 21022  014C56  6EE6               	movwf	postinc1,c
 21023  014C58  EC13  F014         	call	_get_vterm_ptr	;wreg free
 21024  014C5C  0060  F0AB  FFE6   	movff	btemp,postinc1
 21025  014C62  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21026  014C68  0E04               	movlw	4
 21027  014C6A  6EE6               	movwf	postinc1,c
 21028  014C6C  EC59  F0FF         	call	_sprintf	;wreg free
 21029                           
 21030                           ;main.c: 554:   update_lcd(0);
 21031  014C70  0E00               	movlw	0
 21032  014C72  6EE6               	movwf	postinc1,c
 21033  014C74  EC0B  F0F8         	call	_update_lcd	;wreg free
 21034  014C78                     l17437:
 21035                           
 21036                           ;main.c: 555:   WaitMs(2000);
 21037  014C78  0ED0               	movlw	208
 21038  014C7A  6EE6               	movwf	postinc1,c
 21039  014C7C  0E07               	movlw	7
 21040  014C7E  6EE6               	movwf	postinc1,c
 21041  014C80  EC17  F013         	call	_WaitMs	;wreg free
 21042  014C84  D39E               	goto	l1524
 21043  014C86                     l17441:
 21044                           
 21045                           ;main.c: 560:  uint32_t cbz, cpz;;main.c: 562:  clear_switch(SCALIB);
 21046  014C86  0E04               	movlw	4
 21047  014C88  6EE6               	movwf	postinc1,c
 21048  014C8A  EC3A  F010         	call	_clear_switch	;wreg free
 21049                           
 21050                           ;main.c: 563:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 21051  014C8E  0E0A               	movlw	low STR_65
 21052  014C90  6EE6               	movwf	postinc1,c
 21053  014C92  0EFF               	movlw	high STR_65
 21054  014C94  6EE6               	movwf	postinc1,c
 21055  014C96  0E00               	movlw	0
 21056  014C98  6EE6               	movwf	postinc1,c
 21057  014C9A  0E00               	movlw	0
 21058  014C9C  6EE6               	movwf	postinc1,c
 21059  014C9E  EC13  F014         	call	_get_vterm_ptr	;wreg free
 21060  014CA2  0060  F0AB  FFE6   	movff	btemp,postinc1
 21061  014CA8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21062  014CAE  0E04               	movlw	4
 21063  014CB0  6EE6               	movwf	postinc1,c
 21064  014CB2  EC59  F0FF         	call	_sprintf	;wreg free
 21065                           
 21066                           ; BSR set to: 0
 21067                           ;main.c: 564:  sprintf(get_vterm_ptr(1, 0), "10 Amp Sensor       ");
 21068  014CB6  0EE0               	movlw	low STR_66
 21069  014CB8  6EE6               	movwf	postinc1,c
 21070  014CBA  0EFE               	movlw	high STR_66
 21071  014CBC  6EE6               	movwf	postinc1,c
 21072  014CBE  0E00               	movlw	0
 21073  014CC0  6EE6               	movwf	postinc1,c
 21074  014CC2  0E01               	movlw	1
 21075  014CC4  6EE6               	movwf	postinc1,c
 21076  014CC6  EC13  F014         	call	_get_vterm_ptr	;wreg free
 21077  014CCA  0060  F0AB  FFE6   	movff	btemp,postinc1
 21078  014CD0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21079  014CD6  0E04               	movlw	4
 21080  014CD8  6EE6               	movwf	postinc1,c
 21081  014CDA  EC59  F0FF         	call	_sprintf	;wreg free
 21082                           
 21083                           ; BSR set to: 0
 21084                           ;main.c: 565:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 21085  014CDE  0EB6               	movlw	low STR_67
 21086  014CE0  6EE6               	movwf	postinc1,c
 21087  014CE2  0EFE               	movlw	high STR_67
 21088  014CE4  6EE6               	movwf	postinc1,c
 21089  014CE6  0E00               	movlw	0
 21090  014CE8  6EE6               	movwf	postinc1,c
 21091  014CEA  0E02               	movlw	2
 21092  014CEC  6EE6               	movwf	postinc1,c
 21093  014CEE  EC13  F014         	call	_get_vterm_ptr	;wreg free
 21094  014CF2  0060  F0AB  FFE6   	movff	btemp,postinc1
 21095  014CF8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21096  014CFE  0E04               	movlw	4
 21097  014D00  6EE6               	movwf	postinc1,c
 21098  014D02  EC59  F0FF         	call	_sprintf	;wreg free
 21099                           
 21100                           ; BSR set to: 0
 21101                           ;main.c: 566:  update_lcd(0);
 21102  014D06  0E00               	movlw	0
 21103  014D08  6EE6               	movwf	postinc1,c
 21104  014D0A  EC0B  F0F8         	call	_update_lcd	;wreg free
 21105                           
 21106                           ;main.c: 567:  WaitMs(2000);
 21107  014D0E  0ED0               	movlw	208
 21108  014D10  6EE6               	movwf	postinc1,c
 21109  014D12  0E07               	movlw	7
 21110  014D14  6EE6               	movwf	postinc1,c
 21111  014D16  EC17  F013         	call	_WaitMs	;wreg free
 21112                           
 21113                           ;main.c: 568:  x = 0;
 21114                           ;stkvar	_x @ sp[(-17)+16]
 21115  014D1A  0EFF               	movlw	-1
 21116  014D1C  6AE3               	clrf	plusw1,c
 21117  014D1E                     l17455:
 21118                           
 21119                           ;main.c: 570:   if (++x > 64)
 21120                           ;stkvar	_x @ sp[(-17)+16]
 21121  014D1E  0EFF               	movlw	-1
 21122  014D20  2AE3               	incf	plusw1,f,c
 21123  014D22  0EFF               	movlw	-1
 21124  014D24  006F FF8C  F02A    	movff	plusw1,btemp
 21125  014D2A  0E40               	movlw	64
 21126  014D2C  642A               	cpfsgt	btemp^0,c
 21127  014D2E  D001               	goto	l17459
 21128  014D30  D348               	goto	l1524
 21129  014D32                     l17459:
 21130                           
 21131                           ;main.c: 572:   sprintf(get_vterm_ptr(2, 0), "Press button %c   ", spinners(4, 0));
 21132  014D32  0E00               	movlw	0
 21133  014D34  6EE6               	movwf	postinc1,c
 21134  014D36  0E04               	movlw	4
 21135  014D38  6EE6               	movwf	postinc1,c
 21136  014D3A  EC52  F001         	call	_spinners	;wreg free
 21137  014D3E  502A               	movf	btemp^0,w,c
 21138  014D40  6EE6               	movwf	postinc1,c
 21139  014D42  0E00               	movlw	0
 21140  014D44  6EE6               	movwf	postinc1,c
 21141  014D46  0E71               	movlw	low STR_68
 21142  014D48  6EE6               	movwf	postinc1,c
 21143  014D4A  0EFF               	movlw	high STR_68
 21144  014D4C  6EE6               	movwf	postinc1,c
 21145  014D4E  0E00               	movlw	0
 21146  014D50  6EE6               	movwf	postinc1,c
 21147  014D52  0E02               	movlw	2
 21148  014D54  6EE6               	movwf	postinc1,c
 21149  014D56  EC13  F014         	call	_get_vterm_ptr	;wreg free
 21150  014D5A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21151  014D60  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21152  014D66  0E06               	movlw	6
 21153  014D68  6EE6               	movwf	postinc1,c
 21154  014D6A  EC59  F0FF         	call	_sprintf	;wreg free
 21155                           
 21156                           ;main.c: 573:   update_lcd(0);
 21157  014D6E  0E00               	movlw	0
 21158  014D70  6EE6               	movwf	postinc1,c
 21159  014D72  EC0B  F0F8         	call	_update_lcd	;wreg free
 21160                           
 21161                           ;main.c: 574:   WaitMs(100);
 21162  014D76  0E64               	movlw	100
 21163  014D78  6EE6               	movwf	postinc1,c
 21164  014D7A  0E00               	movlw	0
 21165  014D7C  6EE6               	movwf	postinc1,c
 21166  014D7E  EC17  F013         	call	_WaitMs	;wreg free
 21167                           
 21168                           ;main.c: 575:  } while (!get_switch(SCALIB));
 21169  014D82  0E04               	movlw	4
 21170  014D84  6EE6               	movwf	postinc1,c
 21171  014D86  EC2A  F014         	call	_get_switch	;wreg free
 21172  014D8A  502A               	movf	btemp^0,w,c
 21173  014D8C  B4D8               	btfsc	status,2,c
 21174  014D8E  D7C7               	goto	l17455
 21175                           
 21176                           ;main.c: 577:  x = 0;
 21177                           ;stkvar	_x @ sp[(-17)+16]
 21178  014D90  0EFF               	movlw	-1
 21179  014D92  6AE3               	clrf	plusw1,c
 21180                           
 21181                           ;main.c: 578:  cbz = cb;
 21182                           ;stkvar	_cb @ sp[(-17)+4]
 21183  014D94  0EF3               	movlw	-13
 21184  014D96  006F FF8C  F032    	movff	plusw1,btemp+8
 21185  014D9C  0EF4               	movlw	-12
 21186  014D9E  006F FF8C  F033    	movff	plusw1,btemp+9
 21187  014DA4  0EF5               	movlw	-11
 21188  014DA6  006F FF8C  F034    	movff	plusw1,btemp+10
 21189  014DAC  0EF6               	movlw	-10
 21190  014DAE  006F FF8C  F035    	movff	plusw1,btemp+11
 21191                           
 21192                           ;stkvar	_cbz @ sp[(-17)+12]
 21193  014DB4  0EFB               	movlw	-5
 21194  014DB6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 21195  014DBC  0EFC               	movlw	-4
 21196  014DBE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 21197  014DC4  0EFD               	movlw	-3
 21198  014DC6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21199  014DCC  0EFE               	movlw	-2
 21200  014DCE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21201                           
 21202                           ;main.c: 579:  cpz = cp;
 21203                           ;stkvar	_cp @ sp[(-17)+0]
 21204  014DD4  0EEF               	movlw	-17
 21205  014DD6  006F FF8C  F032    	movff	plusw1,btemp+8
 21206  014DDC  0EF0               	movlw	-16
 21207  014DDE  006F FF8C  F033    	movff	plusw1,btemp+9
 21208  014DE4  0EF1               	movlw	-15
 21209  014DE6  006F FF8C  F034    	movff	plusw1,btemp+10
 21210  014DEC  0EF2               	movlw	-14
 21211  014DEE  006F FF8C  F035    	movff	plusw1,btemp+11
 21212                           
 21213                           ;stkvar	_cpz @ sp[(-17)+8]
 21214  014DF4  0EF7               	movlw	-9
 21215  014DF6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 21216  014DFC  0EF8               	movlw	-8
 21217  014DFE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 21218  014E04  0EF9               	movlw	-7
 21219  014E06  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21220  014E0C  0EFA               	movlw	-6
 21221  014E0E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21222                           
 21223                           ;main.c: 580:  cb = 0;
 21224                           ;stkvar	_cb @ sp[(-17)+4]
 21225  014E14  0EF3               	movlw	-13
 21226  014E16  6AE3               	clrf	plusw1,c
 21227  014E18  0EF4               	movlw	-12
 21228  014E1A  6AE3               	clrf	plusw1,c
 21229  014E1C  0EF5               	movlw	-11
 21230  014E1E  6AE3               	clrf	plusw1,c
 21231  014E20  0EF6               	movlw	-10
 21232  014E22  6AE3               	clrf	plusw1,c
 21233                           
 21234                           ;main.c: 581:  cp = 0;
 21235                           ;stkvar	_cp @ sp[(-17)+0]
 21236  014E24  0EEF               	movlw	-17
 21237  014E26  6AE3               	clrf	plusw1,c
 21238  014E28  0EF0               	movlw	-16
 21239  014E2A  6AE3               	clrf	plusw1,c
 21240  014E2C  0EF1               	movlw	-15
 21241  014E2E  6AE3               	clrf	plusw1,c
 21242  014E30  0EF2               	movlw	-14
 21243  014E32  6AE3               	clrf	plusw1,c
 21244  014E34                     l17475:
 21245                           
 21246                           ;main.c: 583:   cb += get_raw_result(C_BATT);
 21247  014E34  0E00               	movlw	0
 21248  014E36  6EE6               	movwf	postinc1,c
 21249  014E38  EC2B  F016         	call	_get_raw_result	;wreg free
 21250                           
 21251                           ;stkvar	_cb @ sp[(-17)+4]
 21252  014E3C  50E1               	movf	fsr1l,w,c
 21253  014E3E  0FF3               	addlw	-13
 21254  014E40  6ED9               	movwf	fsr2l,c
 21255  014E42  50E2               	movf	fsr1h,w,c
 21256  014E44  6EDA               	movwf	fsr2h,c
 21257  014E46  0EFF               	movlw	255
 21258  014E48  22DA               	addwfc	fsr2h,f,c
 21259  014E4A  502A               	movf	btemp^0,w,c
 21260  014E4C  26DE               	addwf	postinc2,f,c
 21261  014E4E  502B               	movf	(btemp+1)^0,w,c
 21262  014E50  22DE               	addwfc	postinc2,f,c
 21263  014E52  0E00               	movlw	0
 21264  014E54  22DE               	addwfc	postinc2,f,c
 21265  014E56  22DE               	addwfc	postinc2,f,c
 21266                           
 21267                           ;main.c: 584:   cp += get_raw_result(C_PV);
 21268  014E58  0E01               	movlw	1
 21269  014E5A  6EE6               	movwf	postinc1,c
 21270  014E5C  EC2B  F016         	call	_get_raw_result	;wreg free
 21271                           
 21272                           ;stkvar	_cp @ sp[(-17)+0]
 21273  014E60  50E1               	movf	fsr1l,w,c
 21274  014E62  0FEF               	addlw	-17
 21275  014E64  6ED9               	movwf	fsr2l,c
 21276  014E66  50E2               	movf	fsr1h,w,c
 21277  014E68  6EDA               	movwf	fsr2h,c
 21278  014E6A  0EFF               	movlw	255
 21279  014E6C  22DA               	addwfc	fsr2h,f,c
 21280  014E6E  502A               	movf	btemp^0,w,c
 21281  014E70  26DE               	addwf	postinc2,f,c
 21282  014E72  502B               	movf	(btemp+1)^0,w,c
 21283  014E74  22DE               	addwfc	postinc2,f,c
 21284  014E76  0E00               	movlw	0
 21285  014E78  22DE               	addwfc	postinc2,f,c
 21286  014E7A  22DE               	addwfc	postinc2,f,c
 21287                           
 21288                           ;main.c: 585:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings      ");
 21289  014E7C  0EDD               	movlw	low STR_56
 21290  014E7E  6EE6               	movwf	postinc1,c
 21291  014E80  0EFD               	movlw	high STR_56
 21292  014E82  6EE6               	movwf	postinc1,c
 21293  014E84  0E00               	movlw	0
 21294  014E86  6EE6               	movwf	postinc1,c
 21295  014E88  0E00               	movlw	0
 21296  014E8A  6EE6               	movwf	postinc1,c
 21297  014E8C  EC13  F014         	call	_get_vterm_ptr	;wreg free
 21298  014E90  0060  F0AB  FFE6   	movff	btemp,postinc1
 21299  014E96  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21300  014E9C  0E04               	movlw	4
 21301  014E9E  6EE6               	movwf	postinc1,c
 21302  014EA0  EC59  F0FF         	call	_sprintf	;wreg free
 21303                           
 21304                           ; BSR set to: 0
 21305                           ;main.c: 586:   sprintf(get_vterm_ptr(1, 0), " %d %d               ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 21306  014EA4  0E01               	movlw	1
 21307  014EA6  6EE6               	movwf	postinc1,c
 21308  014EA8  EC2B  F016         	call	_get_raw_result	;wreg free
 21309  014EAC  0060  F0AB  FFE6   	movff	btemp,postinc1
 21310  014EB2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21311  014EB8  0E00               	movlw	0
 21312  014EBA  6EE6               	movwf	postinc1,c
 21313  014EBC  EC2B  F016         	call	_get_raw_result	;wreg free
 21314  014EC0  0060  F0AB  FFE6   	movff	btemp,postinc1
 21315  014EC6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21316  014ECC  0EA9               	movlw	low STR_57
 21317  014ECE  6EE6               	movwf	postinc1,c
 21318  014ED0  0EFC               	movlw	high STR_57
 21319  014ED2  6EE6               	movwf	postinc1,c
 21320  014ED4  0E00               	movlw	0
 21321  014ED6  6EE6               	movwf	postinc1,c
 21322  014ED8  0E01               	movlw	1
 21323  014EDA  6EE6               	movwf	postinc1,c
 21324  014EDC  EC13  F014         	call	_get_vterm_ptr	;wreg free
 21325  014EE0  0060  F0AB  FFE6   	movff	btemp,postinc1
 21326  014EE6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21327  014EEC  0E08               	movlw	8
 21328  014EEE  6EE6               	movwf	postinc1,c
 21329  014EF0  EC59  F0FF         	call	_sprintf	;wreg free
 21330                           
 21331                           ; BSR set to: 0
 21332                           ;main.c: 587:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d   ", x);
 21333                           ;stkvar	_x @ sp[(-17)+16]
 21334  014EF4  0EFF               	movlw	-1
 21335  014EF6  50E3               	movf	plusw1,w,c
 21336  014EF8  6EE6               	movwf	postinc1,c
 21337  014EFA  0E00               	movlw	0
 21338  014EFC  6EE6               	movwf	postinc1,c
 21339  014EFE  0E4B               	movlw	low STR_58
 21340  014F00  6EE6               	movwf	postinc1,c
 21341  014F02  0EFE               	movlw	high STR_58
 21342  014F04  6EE6               	movwf	postinc1,c
 21343  014F06  0E00               	movlw	0
 21344  014F08  6EE6               	movwf	postinc1,c
 21345  014F0A  0E02               	movlw	2
 21346  014F0C  6EE6               	movwf	postinc1,c
 21347  014F0E  EC13  F014         	call	_get_vterm_ptr	;wreg free
 21348  014F12  0060  F0AB  FFE6   	movff	btemp,postinc1
 21349  014F18  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21350  014F1E  0E06               	movlw	6
 21351  014F20  6EE6               	movwf	postinc1,c
 21352  014F22  EC59  F0FF         	call	_sprintf	;wreg free
 21353                           
 21354                           ; BSR set to: 0
 21355                           ;main.c: 588:   update_lcd(0);
 21356  014F26  0E00               	movlw	0
 21357  014F28  6EE6               	movwf	postinc1,c
 21358  014F2A  EC0B  F0F8         	call	_update_lcd	;wreg free
 21359                           
 21360                           ;main.c: 589:   clear_adc_scan();
 21361  014F2E  ECB7  F017         	call	_clear_adc_scan	;wreg free
 21362                           
 21363                           ; BSR set to: 1
 21364                           ;main.c: 590:   start_adc_scan();
 21365  014F32  EC43  F00E         	call	_start_adc_scan	;wreg free
 21366                           
 21367                           ;main.c: 591:   WaitMs(100);
 21368  014F36  0E64               	movlw	100
 21369  014F38  6EE6               	movwf	postinc1,c
 21370  014F3A  0E00               	movlw	0
 21371  014F3C  6EE6               	movwf	postinc1,c
 21372  014F3E  EC17  F013         	call	_WaitMs	;wreg free
 21373                           
 21374                           ;main.c: 592:  } while (++x < 64);
 21375                           ;stkvar	_x @ sp[(-17)+16]
 21376  014F42  0EFF               	movlw	-1
 21377  014F44  2AE3               	incf	plusw1,f,c
 21378  014F46  0EFF               	movlw	-1
 21379  014F48  006F FF8C  F02A    	movff	plusw1,btemp
 21380  014F4E  0E3F               	movlw	63
 21381  014F50  642A               	cpfsgt	btemp^0,c
 21382  014F52  D770               	goto	l17475
 21383                           
 21384                           ;main.c: 593:  cb = cb >> 6;
 21385  014F54  0E06               	movlw	6
 21386  014F56  6E35               	movwf	(btemp+11)^0,c
 21387                           
 21388                           ;stkvar	_cb @ sp[(-17)+4]
 21389  014F58  50E1               	movf	fsr1l,w,c
 21390  014F5A  0FF3               	addlw	-13
 21391  014F5C  6ED9               	movwf	fsr2l,c
 21392  014F5E  50E2               	movf	fsr1h,w,c
 21393  014F60  6EDA               	movwf	fsr2h,c
 21394  014F62  0EFF               	movlw	255
 21395  014F64  22DA               	addwfc	fsr2h,f,c
 21396  014F66  2835               	incf	(btemp+11)^0,w,c
 21397  014F68  52DE               	movf	postinc2,f,c
 21398  014F6A  D007               	goto	u17040
 21399  014F6C                     u17045:
 21400  014F6C  52DE               	movf	postinc2,f,c
 21401  014F6E  52DE               	movf	postinc2,f,c
 21402  014F70  90D8               	bcf	status,0,c
 21403  014F72  32DD               	rrcf	postdec2,f,c
 21404  014F74  32DD               	rrcf	postdec2,f,c
 21405  014F76  32DD               	rrcf	postdec2,f,c
 21406  014F78  32DE               	rrcf	postinc2,f,c
 21407  014F7A                     u17040:
 21408  014F7A  2EE8               	decfsz	wreg,f,c
 21409  014F7C  D7F7               	goto	u17045
 21410                           
 21411                           ;main.c: 594:  cp = cp >> 6;
 21412  014F7E  0E06               	movlw	6
 21413  014F80  6E35               	movwf	(btemp+11)^0,c
 21414                           
 21415                           ;stkvar	_cp @ sp[(-17)+0]
 21416  014F82  50E1               	movf	fsr1l,w,c
 21417  014F84  0FEF               	addlw	-17
 21418  014F86  6ED9               	movwf	fsr2l,c
 21419  014F88  50E2               	movf	fsr1h,w,c
 21420  014F8A  6EDA               	movwf	fsr2h,c
 21421  014F8C  0EFF               	movlw	255
 21422  014F8E  22DA               	addwfc	fsr2h,f,c
 21423  014F90  2835               	incf	(btemp+11)^0,w,c
 21424  014F92  52DE               	movf	postinc2,f,c
 21425  014F94  D007               	goto	u17050
 21426  014F96                     u17055:
 21427  014F96  52DE               	movf	postinc2,f,c
 21428  014F98  52DE               	movf	postinc2,f,c
 21429  014F9A  90D8               	bcf	status,0,c
 21430  014F9C  32DD               	rrcf	postdec2,f,c
 21431  014F9E  32DD               	rrcf	postdec2,f,c
 21432  014FA0  32DD               	rrcf	postdec2,f,c
 21433  014FA2  32DE               	rrcf	postinc2,f,c
 21434  014FA4                     u17050:
 21435  014FA4  2EE8               	decfsz	wreg,f,c
 21436  014FA6  D7F7               	goto	u17055
 21437                           
 21438                           ;main.c: 596:  if (cal_current_10A(0, cb, cp, 0.0, 0.0)) {
 21439  014FA8  0E00               	movlw	0
 21440  014FAA  6EE6               	movwf	postinc1,c
 21441  014FAC  0E00               	movlw	0
 21442  014FAE  6EE6               	movwf	postinc1,c
 21443  014FB0  0E00               	movlw	0
 21444  014FB2  6EE6               	movwf	postinc1,c
 21445  014FB4  0E00               	movlw	0
 21446  014FB6  6EE6               	movwf	postinc1,c
 21447  014FB8  0E00               	movlw	0
 21448  014FBA  6EE6               	movwf	postinc1,c
 21449  014FBC  0E00               	movlw	0
 21450  014FBE  6EE6               	movwf	postinc1,c
 21451  014FC0  0E00               	movlw	0
 21452  014FC2  6EE6               	movwf	postinc1,c
 21453  014FC4  0E00               	movlw	0
 21454  014FC6  6EE6               	movwf	postinc1,c
 21455                           
 21456                           ;stkvar	_cp @ sp[(-25)+0]
 21457  014FC8  0EE7               	movlw	-25
 21458  014FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 21459  014FD0  006F FF8F FFE6     	movff	plusw1,postinc1
 21460                           
 21461                           ;stkvar	_cb @ sp[(-27)+4]
 21462  014FD6  0EE9               	movlw	-23
 21463  014FD8  006F FF8F FFE6     	movff	plusw1,postinc1
 21464  014FDE  006F FF8F FFE6     	movff	plusw1,postinc1
 21465  014FE4  0E00               	movlw	0
 21466  014FE6  6EE6               	movwf	postinc1,c
 21467  014FE8  ECCF  F004         	call	_cal_current_10A	;wreg free
 21468  014FEC  502A               	movf	btemp^0,w,c
 21469  014FEE  B4D8               	btfsc	status,2,c
 21470  014FF0  D193               	goto	l17513
 21471                           
 21472                           ;main.c: 597:   cal_current_10A(1, cb, cp, 10.0 / (float) (cb - cbz), 10.0 / (float) (cp
      +                           - cpz));
 21473                           ;stkvar	_cpz @ sp[(-17)+8]
 21474                           ;stkvar	_cp @ sp[(-17)+0]
 21475  014FF2  0EEF               	movlw	-17
 21476  014FF4  006F FF8C  F032    	movff	plusw1,btemp+8
 21477  014FFA  0EF0               	movlw	-16
 21478  014FFC  006F FF8C  F033    	movff	plusw1,btemp+9
 21479  015002  0EF1               	movlw	-15
 21480  015004  006F FF8C  F034    	movff	plusw1,btemp+10
 21481  01500A  0EF2               	movlw	-14
 21482  01500C  006F FF8C  F035    	movff	plusw1,btemp+11
 21483  015012  0EF7               	movlw	-9
 21484  015014  50E3               	movf	plusw1,w,c
 21485  015016  5E32               	subwf	(btemp+8)^0,f,c
 21486  015018  0EF8               	movlw	-8
 21487  01501A  50E3               	movf	plusw1,w,c
 21488  01501C  5A33               	subwfb	(btemp+9)^0,f,c
 21489  01501E  0EF9               	movlw	-7
 21490  015020  50E3               	movf	plusw1,w,c
 21491  015022  5A34               	subwfb	(btemp+10)^0,f,c
 21492  015024  0EFA               	movlw	-6
 21493  015026  50E3               	movf	plusw1,w,c
 21494  015028  5A35               	subwfb	(btemp+11)^0,f,c
 21495  01502A  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21496  015030  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21497  015036  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21498  01503C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21499  015042  0E00               	movlw	0
 21500  015044  6EE6               	movwf	postinc1,c
 21501  015046  EC0F  F0ED         	call	___xxtofl	;wreg free
 21502  01504A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21503  015050  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21504  015056  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21505  01505C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21506  015062  0E00               	movlw	0
 21507  015064  6EE6               	movwf	postinc1,c
 21508  015066  0E00               	movlw	0
 21509  015068  6EE6               	movwf	postinc1,c
 21510  01506A  0E20               	movlw	32
 21511  01506C  6EE6               	movwf	postinc1,c
 21512  01506E  0E41               	movlw	65
 21513  015070  6EE6               	movwf	postinc1,c
 21514  015072  EC78  F0C3         	call	___fldiv	;wreg free
 21515  015076  0060  F0AB  FFE6   	movff	btemp,postinc1
 21516  01507C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21517  015082  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21518  015088  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21519                           
 21520                           ;stkvar	_cbz @ sp[(-21)+12]
 21521                           ;stkvar	_cb @ sp[(-21)+4]
 21522  01508E  0EEF               	movlw	-17
 21523  015090  006F FF8C  F032    	movff	plusw1,btemp+8
 21524  015096  0EF0               	movlw	-16
 21525  015098  006F FF8C  F033    	movff	plusw1,btemp+9
 21526  01509E  0EF1               	movlw	-15
 21527  0150A0  006F FF8C  F034    	movff	plusw1,btemp+10
 21528  0150A6  0EF2               	movlw	-14
 21529  0150A8  006F FF8C  F035    	movff	plusw1,btemp+11
 21530  0150AE  0EF7               	movlw	-9
 21531  0150B0  50E3               	movf	plusw1,w,c
 21532  0150B2  5E32               	subwf	(btemp+8)^0,f,c
 21533  0150B4  0EF8               	movlw	-8
 21534  0150B6  50E3               	movf	plusw1,w,c
 21535  0150B8  5A33               	subwfb	(btemp+9)^0,f,c
 21536  0150BA  0EF9               	movlw	-7
 21537  0150BC  50E3               	movf	plusw1,w,c
 21538  0150BE  5A34               	subwfb	(btemp+10)^0,f,c
 21539  0150C0  0EFA               	movlw	-6
 21540  0150C2  50E3               	movf	plusw1,w,c
 21541  0150C4  5A35               	subwfb	(btemp+11)^0,f,c
 21542  0150C6  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21543  0150CC  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21544  0150D2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21545  0150D8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21546  0150DE  0E00               	movlw	0
 21547  0150E0  6EE6               	movwf	postinc1,c
 21548  0150E2  EC0F  F0ED         	call	___xxtofl	;wreg free
 21549  0150E6  0060  F0AB  FFE6   	movff	btemp,postinc1
 21550  0150EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21551  0150F2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21552  0150F8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21553  0150FE  0E00               	movlw	0
 21554  015100  6EE6               	movwf	postinc1,c
 21555  015102  0E00               	movlw	0
 21556  015104  6EE6               	movwf	postinc1,c
 21557  015106  0E20               	movlw	32
 21558  015108  6EE6               	movwf	postinc1,c
 21559  01510A  0E41               	movlw	65
 21560  01510C  6EE6               	movwf	postinc1,c
 21561  01510E  EC78  F0C3         	call	___fldiv	;wreg free
 21562  015112  0060  F0AB  FFE6   	movff	btemp,postinc1
 21563  015118  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21564  01511E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21565  015124  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21566                           
 21567                           ;stkvar	_cp @ sp[(-25)+0]
 21568  01512A  0EE7               	movlw	-25
 21569  01512C  006F FF8F FFE6     	movff	plusw1,postinc1
 21570  015132  006F FF8F FFE6     	movff	plusw1,postinc1
 21571                           
 21572                           ;stkvar	_cb @ sp[(-27)+4]
 21573  015138  0EE9               	movlw	-23
 21574  01513A  006F FF8F FFE6     	movff	plusw1,postinc1
 21575  015140  006F FF8F FFE6     	movff	plusw1,postinc1
 21576  015146  0E01               	movlw	1
 21577  015148  6EE6               	movwf	postinc1,c
 21578  01514A  ECCF  F004         	call	_cal_current_10A	;wreg free
 21579                           
 21580                           ;main.c: 598:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21581  01514E  0E9B               	movlw	low STR_52
 21582  015150  6EE6               	movwf	postinc1,c
 21583  015152  0EFD               	movlw	high STR_52
 21584  015154  6EE6               	movwf	postinc1,c
 21585  015156  0E00               	movlw	0
 21586  015158  6EE6               	movwf	postinc1,c
 21587  01515A  0E00               	movlw	0
 21588  01515C  6EE6               	movwf	postinc1,c
 21589  01515E  EC13  F014         	call	_get_vterm_ptr	;wreg free
 21590  015162  0060  F0AB  FFE6   	movff	btemp,postinc1
 21591  015168  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21592  01516E  0E04               	movlw	4
 21593  015170  6EE6               	movwf	postinc1,c
 21594  015172  EC59  F0FF         	call	_sprintf	;wreg free
 21595                           
 21596                           ; BSR set to: 0
 21597                           ;main.c: 599:   sprintf(get_vterm_ptr(1, 0), " %f %f               ", 10.0 / (float) (cb
      +                           - cbz), 10.0 / (float) (cp - cpz));
 21598                           ;stkvar	_cpz @ sp[(-17)+8]
 21599                           ;stkvar	_cp @ sp[(-17)+0]
 21600  015176  0EEF               	movlw	-17
 21601  015178  006F FF8C  F032    	movff	plusw1,btemp+8
 21602  01517E  0EF0               	movlw	-16
 21603  015180  006F FF8C  F033    	movff	plusw1,btemp+9
 21604  015186  0EF1               	movlw	-15
 21605  015188  006F FF8C  F034    	movff	plusw1,btemp+10
 21606  01518E  0EF2               	movlw	-14
 21607  015190  006F FF8C  F035    	movff	plusw1,btemp+11
 21608  015196  0EF7               	movlw	-9
 21609  015198  50E3               	movf	plusw1,w,c
 21610  01519A  5E32               	subwf	(btemp+8)^0,f,c
 21611  01519C  0EF8               	movlw	-8
 21612  01519E  50E3               	movf	plusw1,w,c
 21613  0151A0  5A33               	subwfb	(btemp+9)^0,f,c
 21614  0151A2  0EF9               	movlw	-7
 21615  0151A4  50E3               	movf	plusw1,w,c
 21616  0151A6  5A34               	subwfb	(btemp+10)^0,f,c
 21617  0151A8  0EFA               	movlw	-6
 21618  0151AA  50E3               	movf	plusw1,w,c
 21619  0151AC  5A35               	subwfb	(btemp+11)^0,f,c
 21620  0151AE  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21621  0151B4  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21622  0151BA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21623  0151C0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21624  0151C6  0E00               	movlw	0
 21625  0151C8  6EE6               	movwf	postinc1,c
 21626  0151CA  EC0F  F0ED         	call	___xxtofl	;wreg free
 21627  0151CE  0060  F0AB  FFE6   	movff	btemp,postinc1
 21628  0151D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21629  0151DA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21630  0151E0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21631  0151E6  0E00               	movlw	0
 21632  0151E8  6EE6               	movwf	postinc1,c
 21633  0151EA  0E00               	movlw	0
 21634  0151EC  6EE6               	movwf	postinc1,c
 21635  0151EE  0E20               	movlw	32
 21636  0151F0  6EE6               	movwf	postinc1,c
 21637  0151F2  0E41               	movlw	65
 21638  0151F4  6EE6               	movwf	postinc1,c
 21639  0151F6  EC78  F0C3         	call	___fldiv	;wreg free
 21640  0151FA  0060  F0AB  FFE6   	movff	btemp,postinc1
 21641  015200  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21642  015206  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21643  01520C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21644                           
 21645                           ;stkvar	_cbz @ sp[(-21)+12]
 21646                           ;stkvar	_cb @ sp[(-21)+4]
 21647  015212  0EEF               	movlw	-17
 21648  015214  006F FF8C  F032    	movff	plusw1,btemp+8
 21649  01521A  0EF0               	movlw	-16
 21650  01521C  006F FF8C  F033    	movff	plusw1,btemp+9
 21651  015222  0EF1               	movlw	-15
 21652  015224  006F FF8C  F034    	movff	plusw1,btemp+10
 21653  01522A  0EF2               	movlw	-14
 21654  01522C  006F FF8C  F035    	movff	plusw1,btemp+11
 21655  015232  0EF7               	movlw	-9
 21656  015234  50E3               	movf	plusw1,w,c
 21657  015236  5E32               	subwf	(btemp+8)^0,f,c
 21658  015238  0EF8               	movlw	-8
 21659  01523A  50E3               	movf	plusw1,w,c
 21660  01523C  5A33               	subwfb	(btemp+9)^0,f,c
 21661  01523E  0EF9               	movlw	-7
 21662  015240  50E3               	movf	plusw1,w,c
 21663  015242  5A34               	subwfb	(btemp+10)^0,f,c
 21664  015244  0EFA               	movlw	-6
 21665  015246  50E3               	movf	plusw1,w,c
 21666  015248  5A35               	subwfb	(btemp+11)^0,f,c
 21667  01524A  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21668  015250  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21669  015256  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21670  01525C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21671  015262  0E00               	movlw	0
 21672  015264  6EE6               	movwf	postinc1,c
 21673  015266  EC0F  F0ED         	call	___xxtofl	;wreg free
 21674  01526A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21675  015270  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21676  015276  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21677  01527C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21678  015282  0E00               	movlw	0
 21679  015284  6EE6               	movwf	postinc1,c
 21680  015286  0E00               	movlw	0
 21681  015288  6EE6               	movwf	postinc1,c
 21682  01528A  0E20               	movlw	32
 21683  01528C  6EE6               	movwf	postinc1,c
 21684  01528E  0E41               	movlw	65
 21685  015290  6EE6               	movwf	postinc1,c
 21686  015292  EC78  F0C3         	call	___fldiv	;wreg free
 21687  015296  0060  F0AB  FFE6   	movff	btemp,postinc1
 21688  01529C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21689  0152A2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21690  0152A8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21691  0152AE  0EBF               	movlw	low STR_73
 21692  0152B0  6EE6               	movwf	postinc1,c
 21693  0152B2  0EFC               	movlw	high STR_73
 21694  0152B4  6EE6               	movwf	postinc1,c
 21695  0152B6  0E00               	movlw	0
 21696  0152B8  6EE6               	movwf	postinc1,c
 21697  0152BA  0E01               	movlw	1
 21698  0152BC  6EE6               	movwf	postinc1,c
 21699  0152BE  EC13  F014         	call	_get_vterm_ptr	;wreg free
 21700  0152C2  0060  F0AB  FFE6   	movff	btemp,postinc1
 21701  0152C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21702  0152CE  0E0C               	movlw	12
 21703  0152D0  6EE6               	movwf	postinc1,c
 21704  0152D2  EC59  F0FF         	call	_sprintf	;wreg free
 21705                           
 21706                           ; BSR set to: 0
 21707                           ;main.c: 600:   sprintf(get_vterm_ptr(2, 0), "10A Cal Set          ");
 21708  0152D6  0E6F               	movlw	low STR_74
 21709  0152D8  6EE6               	movwf	postinc1,c
 21710  0152DA  0EFD               	movlw	high STR_74
 21711  0152DC  6EE6               	movwf	postinc1,c
 21712  0152DE  0E00               	movlw	0
 21713  0152E0  6EE6               	movwf	postinc1,c
 21714  0152E2  0E02               	movlw	2
 21715  0152E4  6EE6               	movwf	postinc1,c
 21716  0152E6  EC13  F014         	call	_get_vterm_ptr	;wreg free
 21717  0152EA  0060  F0AB  FFE6   	movff	btemp,postinc1
 21718  0152F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21719  0152F6  0E04               	movlw	4
 21720  0152F8  6EE6               	movwf	postinc1,c
 21721  0152FA  EC59  F0FF         	call	_sprintf	;wreg free
 21722                           
 21723                           ; BSR set to: 0
 21724                           ;main.c: 601:   update_lcd(0);
 21725  0152FE  0E00               	movlw	0
 21726  015300  6EE6               	movwf	postinc1,c
 21727  015302  EC0B  F0F8         	call	_update_lcd	;wreg free
 21728                           
 21729                           ;main.c: 602:   WaitMs(5000);
 21730  015306  0E88               	movlw	136
 21731  015308  6EE6               	movwf	postinc1,c
 21732  01530A  0E13               	movlw	19
 21733  01530C  6EE6               	movwf	postinc1,c
 21734  01530E  EC17  F013         	call	_WaitMs	;wreg free
 21735                           
 21736                           ;main.c: 603:   write_cal_data();
 21737  015312  EC68  F0F9         	call	_write_cal_data	;wreg free
 21738                           
 21739                           ;main.c: 604:  } else {
 21740  015316  D055               	goto	l1524
 21741  015318                     l17513:
 21742                           
 21743                           ;main.c: 605:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21744  015318  0E9B               	movlw	low STR_52
 21745  01531A  6EE6               	movwf	postinc1,c
 21746  01531C  0EFD               	movlw	high STR_52
 21747  01531E  6EE6               	movwf	postinc1,c
 21748  015320  0E00               	movlw	0
 21749  015322  6EE6               	movwf	postinc1,c
 21750  015324  0E00               	movlw	0
 21751  015326  6EE6               	movwf	postinc1,c
 21752  015328  EC13  F014         	call	_get_vterm_ptr	;wreg free
 21753  01532C  0060  F0AB  FFE6   	movff	btemp,postinc1
 21754  015332  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21755  015338  0E04               	movlw	4
 21756  01533A  6EE6               	movwf	postinc1,c
 21757  01533C  EC59  F0FF         	call	_sprintf	;wreg free
 21758                           
 21759                           ;main.c: 606:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 21760  015340  0E01               	movlw	1
 21761  015342  6EE6               	movwf	postinc1,c
 21762  015344  EC2B  F016         	call	_get_raw_result	;wreg free
 21763  015348  0060  F0AB  FFE6   	movff	btemp,postinc1
 21764  01534E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21765  015354  0E00               	movlw	0
 21766  015356  6EE6               	movwf	postinc1,c
 21767  015358  EC2B  F016         	call	_get_raw_result	;wreg free
 21768  01535C  0060  F0AB  FFE6   	movff	btemp,postinc1
 21769  015362  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21770  015368  0ED5               	movlw	low STR_60
 21771  01536A  6EE6               	movwf	postinc1,c
 21772  01536C  0EFC               	movlw	high STR_60
 21773  01536E  6EE6               	movwf	postinc1,c
 21774  015370  0E00               	movlw	0
 21775  015372  6EE6               	movwf	postinc1,c
 21776  015374  0E01               	movlw	1
 21777  015376  6EE6               	movwf	postinc1,c
 21778  015378  EC13  F014         	call	_get_vterm_ptr	;wreg free
 21779  01537C  0060  F0AB  FFE6   	movff	btemp,postinc1
 21780  015382  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21781  015388  0E08               	movlw	8
 21782  01538A  6EE6               	movwf	postinc1,c
 21783  01538C  EC59  F0FF         	call	_sprintf	;wreg free
 21784                           
 21785                           ;main.c: 607:   sprintf(get_vterm_ptr(2, 0), "10A Out Of Range     ");
 21786  015390  0EF3               	movlw	low STR_77
 21787  015392  6EE6               	movwf	postinc1,c
 21788  015394  0EFD               	movlw	high STR_77
 21789  015396  6EE6               	movwf	postinc1,c
 21790  015398  0E00               	movlw	0
 21791  01539A  6EE6               	movwf	postinc1,c
 21792  01539C  0E02               	movlw	2
 21793  01539E  6EE6               	movwf	postinc1,c
 21794  0153A0  EC13  F014         	call	_get_vterm_ptr	;wreg free
 21795  0153A4  0060  F0AB  FFE6   	movff	btemp,postinc1
 21796  0153AA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21797  0153B0  0E04               	movlw	4
 21798  0153B2  6EE6               	movwf	postinc1,c
 21799  0153B4  EC59  F0FF         	call	_sprintf	;wreg free
 21800                           
 21801                           ;main.c: 608:   update_lcd(0);
 21802  0153B8  0E00               	movlw	0
 21803  0153BA  6EE6               	movwf	postinc1,c
 21804  0153BC  EC0B  F0F8         	call	_update_lcd	;wreg free
 21805  0153C0  D45B               	goto	l17437
 21806  0153C2                     l1524:
 21807                           
 21808                           ; _current_sensor_cal: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 0, argsize = 0, vargsize = 0
 21809  0153C2  0EEF               	movlw	239
 21810  0153C4  26E1               	addwf	fsr1l,f,c
 21811  0153C6  0EFF               	movlw	255
 21812  0153C8  22E2               	addwfc	fsr1h,f,c
 21813  0153CA  0012               	return		;funcret
 21814  0153CC                     __end_of_current_sensor_cal:
 21815                           	opt callstack 0
 21816                           
 21817 ;; *************** function _write_cal_data *****************
 21818 ;; Defined at:
 21819 ;;		line 408 in file "daq.c"
 21820 ;; Parameters:    Size  Location     Type
 21821 ;;		None
 21822 ;; Auto vars:     Size  Location     Type
 21823 ;;  x               2  [STACK] unsigned short 
 21824 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 21825 ;;		 -> R(155), 
 21826 ;;  y               2  [STACK] unsigned short 
 21827 ;;  crcVal          1  [STACK] unsigned char 
 21828 ;; Return value:  Size  Location     Type
 21829 ;;                  1  [STACK] void 
 21830 ;; Registers used:
 21831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 21832 ;; Tracked objects:
 21833 ;;		On entry : 0/39
 21834 ;;		On exit  : 0/0
 21835 ;;		Unchanged: 0/0
 21836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21841 ;;Total ram usage:        0 bytes
 21842 ;; Hardware stack levels used:    1
 21843 ;; Hardware stack levels required when called:   17
 21844 ;; This function calls:
 21845 ;;		_CRC_8BitDataWrite
 21846 ;;		_CRC_CalculatedResultGet
 21847 ;;		_CRC_Initialize
 21848 ;;		_CRC_IsBusy
 21849 ;;		_CRC_Start
 21850 ;;		_DATAEE_WriteByte
 21851 ;; This function is called by:
 21852 ;;		_main
 21853 ;;		_current_sensor_cal
 21854 ;; This function uses a reentrant model
 21855 ;;
 21856                           
 21857                           	psect	text58
 21858  01F2D0                     __ptext58:
 21859                           	opt callstack 0
 21860  01F2D0                     _write_cal_data:
 21861                           	opt callstack 0
 21862                           
 21863                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21864  01F2D0  0E07               	movlw	7
 21865  01F2D2  26E1               	addwf	fsr1l,f,c
 21866  01F2D4  0E00               	movlw	0
 21867  01F2D6  22E2               	addwfc	fsr1h,f,c
 21868                           
 21869                           ;daq.c: 410:  uint16_t x = 0, y;
 21870                           ;stkvar	_x @ sp[(-7)+0]
 21871                           
 21872                           ;incstack = 0
 21873  01F2D8  0EF9               	movlw	-7
 21874  01F2DA  6AE3               	clrf	plusw1,c
 21875  01F2DC  0EFA               	movlw	-6
 21876  01F2DE  6AE3               	clrf	plusw1,c
 21877                           
 21878                           ;daq.c: 411:  uint8_t *r_cal_ptr, crcVal;;daq.c: 413:  y = sizeof(R);
 21879  01F2E0  0E9B               	movlw	155
 21880  01F2E2  6E34               	movwf	(btemp+10)^0,c
 21881  01F2E4  0E00               	movlw	0
 21882  01F2E6  6E35               	movwf	(btemp+11)^0,c
 21883                           
 21884                           ;stkvar	_y @ sp[(-7)+4]
 21885  01F2E8  0EFD               	movlw	-3
 21886  01F2EA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21887  01F2F0  0EFE               	movlw	-2
 21888  01F2F2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21889                           
 21890                           ;daq.c: 414:  R.crc = 0x42;
 21891  01F2F8  0E42               	movlw	66
 21892  01F2FA  0101               	movlb	1	; () banked
 21893  01F2FC  6F9A               	movwf	(_R+154)& (0+255),b	;volatile
 21894                           
 21895                           ; BSR set to: 1
 21896                           ;daq.c: 415:  r_cal_ptr = (uint8_t*) & R;
 21897                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21898  01F2FE  0E01               	movlw	high _R
 21899  01F300  6E2A               	movwf	btemp^0,c
 21900  01F302  0EFC               	movlw	-4
 21901  01F304  0060  F0AB  FFE3   	movff	btemp,plusw1
 21902  01F30A  0E00               	movlw	low _R
 21903  01F30C  6E2A               	movwf	btemp^0,c
 21904  01F30E  0EFB               	movlw	-5
 21905  01F310  0060  F0AB  FFE3   	movff	btemp,plusw1
 21906                           
 21907                           ; BSR set to: 1
 21908                           ;daq.c: 416:  R.checkmark = 0x1957;
 21909  01F316  0E19               	movlw	25
 21910  01F318  6F99               	movwf	(_R+153)& (0+255),b	;volatile
 21911  01F31A  0E57               	movlw	87
 21912  01F31C  6F98               	movwf	(_R+152)& (0+255),b	;volatile
 21913                           
 21914                           ; BSR set to: 1
 21915                           ;daq.c: 418:  CRC_Initialize();
 21916  01F31E  EC55  F00A         	call	_CRC_Initialize	;wreg free
 21917                           
 21918                           ; BSR set to: 0
 21919                           ;daq.c: 421:  CRC_Start();
 21920  01F322  ECB4  F017         	call	_CRC_Start	;wreg free
 21921  01F326                     l13591:
 21922                           
 21923                           ;daq.c: 424:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 21924                           ;stkvar	_x @ sp[(-7)+0]
 21925  01F326  0EF9               	movlw	-7
 21926  01F328  006F FF8C  F034    	movff	plusw1,btemp+10
 21927  01F32E  0EFA               	movlw	-6
 21928  01F330  006F FF8C  F035    	movff	plusw1,btemp+11
 21929                           
 21930                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21931  01F336  0EFB               	movlw	-5
 21932  01F338  006F FF8C  F032    	movff	plusw1,btemp+8
 21933  01F33E  0EFC               	movlw	-4
 21934  01F340  006F FF8C  F033    	movff	plusw1,btemp+9
 21935  01F346  5034               	movf	(btemp+10)^0,w,c
 21936  01F348  2432               	addwf	(btemp+8)^0,w,c
 21937  01F34A  6ED9               	movwf	fsr2l,c
 21938  01F34C  5035               	movf	(btemp+11)^0,w,c
 21939  01F34E  2033               	addwfc	(btemp+9)^0,w,c
 21940  01F350  6EDA               	movwf	fsr2h,c
 21941  01F352  50DF               	movf	indf2,w,c
 21942  01F354  6EE6               	movwf	postinc1,c
 21943                           
 21944                           ;stkvar	_x @ sp[(-8)+0]
 21945  01F356  0EF8               	movlw	-8
 21946  01F358  006F FF8F FFE6     	movff	plusw1,postinc1
 21947  01F35E  006F FF8F FFE6     	movff	plusw1,postinc1
 21948  01F364  EC77  F00D         	call	_DATAEE_WriteByte	;wreg free
 21949                           
 21950                           ;daq.c: 425:   CRC_8BitDataWrite(r_cal_ptr[x]);
 21951                           ;stkvar	_x @ sp[(-7)+0]
 21952  01F368  0EF9               	movlw	-7
 21953  01F36A  006F FF8C  F034    	movff	plusw1,btemp+10
 21954  01F370  0EFA               	movlw	-6
 21955  01F372  006F FF8C  F035    	movff	plusw1,btemp+11
 21956                           
 21957                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21958  01F378  0EFB               	movlw	-5
 21959  01F37A  006F FF8C  F032    	movff	plusw1,btemp+8
 21960  01F380  0EFC               	movlw	-4
 21961  01F382  006F FF8C  F033    	movff	plusw1,btemp+9
 21962  01F388  5034               	movf	(btemp+10)^0,w,c
 21963  01F38A  2432               	addwf	(btemp+8)^0,w,c
 21964  01F38C  6ED9               	movwf	fsr2l,c
 21965  01F38E  5035               	movf	(btemp+11)^0,w,c
 21966  01F390  2033               	addwfc	(btemp+9)^0,w,c
 21967  01F392  6EDA               	movwf	fsr2h,c
 21968  01F394  50DF               	movf	indf2,w,c
 21969  01F396  6EE6               	movwf	postinc1,c
 21970  01F398  EC23  F017         	call	_CRC_8BitDataWrite	;wreg free
 21971  01F39C                     l13595:
 21972  01F39C  EC45  F017         	call	_CRC_IsBusy	;wreg free
 21973  01F3A0  502A               	movf	btemp^0,w,c
 21974  01F3A2  A4D8               	btfss	status,2,c
 21975  01F3A4  D7FB               	goto	l13595
 21976                           
 21977                           ;daq.c: 427:  } while (++x < y);
 21978                           ;stkvar	_y @ sp[(-7)+4]
 21979  01F3A6  0EFD               	movlw	-3
 21980  01F3A8  006F FF8C  F034    	movff	plusw1,btemp+10
 21981  01F3AE  0EFE               	movlw	-2
 21982  01F3B0  006F FF8C  F035    	movff	plusw1,btemp+11
 21983                           
 21984                           ;stkvar	_x @ sp[(-7)+0]
 21985  01F3B6  0EF9               	movlw	-7
 21986  01F3B8  50E3               	movf	plusw1,w,c
 21987  01F3BA  0F01               	addlw	1
 21988  01F3BC  6E2A               	movwf	btemp^0,c
 21989  01F3BE  0EF9               	movlw	-7
 21990  01F3C0  0060  F0AB  FFE3   	movff	btemp,plusw1
 21991  01F3C6  6A2A               	clrf	btemp^0,c
 21992  01F3C8  0EFA               	movlw	-6
 21993  01F3CA  50E3               	movf	plusw1,w,c
 21994  01F3CC  202A               	addwfc	btemp^0,w,c
 21995  01F3CE  6E2A               	movwf	btemp^0,c
 21996  01F3D0  0EFA               	movlw	-6
 21997  01F3D2  0060  F0AB  FFE3   	movff	btemp,plusw1
 21998  01F3D8  0EF9               	movlw	-7
 21999  01F3DA  006F FF8C  F032    	movff	plusw1,btemp+8
 22000  01F3E0  0EFA               	movlw	-6
 22001  01F3E2  006F FF8C  F033    	movff	plusw1,btemp+9
 22002  01F3E8  5034               	movf	(btemp+10)^0,w,c
 22003  01F3EA  5C32               	subwf	(btemp+8)^0,w,c
 22004  01F3EC  5035               	movf	(btemp+11)^0,w,c
 22005  01F3EE  5833               	subwfb	(btemp+9)^0,w,c
 22006  01F3F0  A0D8               	btfss	status,0,c
 22007  01F3F2  D799               	goto	l13591
 22008                           
 22009                           ;daq.c: 429:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 22010  01F3F4  0E00               	movlw	0
 22011  01F3F6  6EE6               	movwf	postinc1,c
 22012  01F3F8  0E00               	movlw	0
 22013  01F3FA  6EE6               	movwf	postinc1,c
 22014  01F3FC  0E00               	movlw	0
 22015  01F3FE  6EE6               	movwf	postinc1,c
 22016  01F400  EC84  F0F4         	call	_CRC_CalculatedResultGet	;wreg free
 22017                           
 22018                           ;stkvar	_crcVal @ sp[(-7)+6]
 22019  01F404  0EFF               	movlw	-1
 22020  01F406  0060  F0AB  FFE3   	movff	btemp,plusw1
 22021                           
 22022                           ;daq.c: 431:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 22023                           ;stkvar	_crcVal @ sp[(-7)+6]
 22024  01F40C  0EFF               	movlw	-1
 22025  01F40E  50E3               	movf	plusw1,w,c
 22026  01F410  6EE6               	movwf	postinc1,c
 22027  01F412  0E9A               	movlw	154
 22028  01F414  6EE6               	movwf	postinc1,c
 22029  01F416  0E00               	movlw	0
 22030  01F418  6EE6               	movwf	postinc1,c
 22031  01F41A  EC77  F00D         	call	_DATAEE_WriteByte	;wreg free
 22032                           
 22033                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22034  01F41E  0EF9               	movlw	249
 22035  01F420  26E1               	addwf	fsr1l,f,c
 22036  01F422  0EFF               	movlw	255
 22037  01F424  22E2               	addwfc	fsr1h,f,c
 22038  01F426  0012               	return		;funcret
 22039  01F428                     __end_of_write_cal_data:
 22040                           	opt callstack 0
 22041                           
 22042 ;; *************** function _DATAEE_WriteByte *****************
 22043 ;; Defined at:
 22044 ;;		line 172 in file "mcc_generated_files/memory.c"
 22045 ;; Parameters:    Size  Location     Type
 22046 ;;  bAdd            2  [STACK] unsigned short 
 22047 ;;  bData           1  [STACK] unsigned char 
 22048 ;; Auto vars:     Size  Location     Type
 22049 ;;  GIEBitValue     1  [STACK] unsigned char 
 22050 ;; Return value:  Size  Location     Type
 22051 ;;                  1  [STACK] void 
 22052 ;; Registers used:
 22053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22054 ;; Tracked objects:
 22055 ;;		On entry : 0/39
 22056 ;;		On exit  : 0/0
 22057 ;;		Unchanged: 0/0
 22058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22063 ;;Total ram usage:        0 bytes
 22064 ;; Hardware stack levels used:    1
 22065 ;; Hardware stack levels required when called:   15
 22066 ;; This function calls:
 22067 ;;		Nothing
 22068 ;; This function is called by:
 22069 ;;		_write_cal_data
 22070 ;; This function uses a reentrant model
 22071 ;;
 22072                           
 22073                           	psect	text59
 22074  001AEE                     __ptext59:
 22075                           	opt callstack 0
 22076  001AEE                     _DATAEE_WriteByte:
 22077                           	opt callstack 0
 22078                           
 22079                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22080  001AEE  52E6               	movf	postinc1,f,c
 22081                           
 22082                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 22083                           
 22084                           ;incstack = 0
 22085  001AF0  AED2               	btfss	210,7,c	;volatile
 22086  001AF2  D003               	goto	u12150
 22087  001AF4  6A35               	clrf	(btemp+11)^0,c
 22088  001AF6  2A35               	incf	(btemp+11)^0,f,c
 22089  001AF8  D001               	goto	u12158
 22090  001AFA                     u12150:
 22091  001AFA  6A35               	clrf	(btemp+11)^0,c
 22092  001AFC                     u12158:
 22093                           
 22094                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 22095  001AFC  0EFF               	movlw	-1
 22096  001AFE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 22097                           
 22098                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 22099                           ;stkvar	_bAdd @ sp[(-1)+-2]
 22100  001B04  0EFE               	movlw	254
 22101  001B06  24E1               	addwf	fsr1l,w,c
 22102  001B08  6ED9               	movwf	fsr2l,c
 22103  001B0A  0EFF               	movlw	255
 22104  001B0C  20E2               	addwfc	fsr1h,w,c
 22105  001B0E  6EDA               	movwf	fsr2h,c
 22106  001B10  50DF               	movf	indf2,w,c
 22107  001B12  0B03               	andlw	3
 22108  001B14  0139               	movlb	57	; () banked
 22109  001B16  6FE1               	movwf	225,b	;volatile
 22110                           
 22111                           ; BSR set to: 57
 22112                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 22113                           ;stkvar	_bAdd @ sp[(-1)+-2]
 22114  001B18  0EFD               	movlw	-3
 22115  001B1A  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 22116                           
 22117                           ; BSR set to: 57
 22118                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 22119                           ;stkvar	_bData @ sp[(-1)+-3]
 22120  001B20  0EFC               	movlw	-4
 22121  001B22  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 22122                           
 22123                           ; BSR set to: 57
 22124                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 22125  001B28  0E3F               	movlw	-193
 22126  001B2A  17E5               	andwf	229,f,b	;volsfr
 22127                           
 22128                           ; BSR set to: 57
 22129                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 22130  001B2C  85E5               	bsf	229,2,b	;volsfr
 22131                           
 22132                           ; BSR set to: 57
 22133                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 22134  001B2E  9ED2               	bcf	210,7,c	;volatile
 22135                           
 22136                           ; BSR set to: 57
 22137                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 22138  001B30  0E55               	movlw	85
 22139  001B32  6FE6               	movwf	230,b	;volsfr
 22140                           
 22141                           ; BSR set to: 57
 22142                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 22143  001B34  0EAA               	movlw	170
 22144  001B36  6FE6               	movwf	230,b	;volsfr
 22145                           
 22146                           ; BSR set to: 57
 22147                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 22148  001B38  83E5               	bsf	229,1,b	;volsfr
 22149  001B3A                     l942:
 22150                           
 22151                           ; BSR set to: 57
 22152                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 22153  001B3A  B3E5               	btfsc	229,1,b	;volsfr
 22154  001B3C  D7FE               	goto	l942
 22155                           
 22156                           ; BSR set to: 57
 22157                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 22158  001B3E  95E5               	bcf	229,2,b	;volsfr
 22159                           
 22160                           ; BSR set to: 57
 22161                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 22162                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 22163  001B40  0EFF               	movlw	-1
 22164  001B42  B0E3               	btfsc	plusw1,0,c
 22165  001B44  D002               	bra	u12175
 22166  001B46  9ED2               	bcf	210,7,c	;volatile
 22167  001B48  D001               	bra	u12176
 22168  001B4A                     u12175:
 22169  001B4A  8ED2               	bsf	210,7,c	;volatile
 22170  001B4C                     u12176:
 22171                           
 22172                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 22173  001B4C  52E5               	movf	postdec1,f,c
 22174  001B4E  52E5               	movf	postdec1,f,c
 22175  001B50  52E5               	movf	postdec1,f,c
 22176  001B52  52E5               	movf	postdec1,f,c
 22177  001B54  0012               	return		;funcret
 22178  001B56                     __end_of_DATAEE_WriteByte:
 22179                           	opt callstack 0
 22180                           
 22181 ;; *************** function _CRC_Start *****************
 22182 ;; Defined at:
 22183 ;;		line 119 in file "mcc_generated_files/crc.c"
 22184 ;; Parameters:    Size  Location     Type
 22185 ;;		None
 22186 ;; Auto vars:     Size  Location     Type
 22187 ;;		None
 22188 ;; Return value:  Size  Location     Type
 22189 ;;                  1  [STACK] void 
 22190 ;; Registers used:
 22191 ;;		None
 22192 ;; Tracked objects:
 22193 ;;		On entry : 3F/0
 22194 ;;		On exit  : 3F/39
 22195 ;;		Unchanged: 0/0
 22196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22201 ;;Total ram usage:        0 bytes
 22202 ;; Hardware stack levels used:    1
 22203 ;; Hardware stack levels required when called:   15
 22204 ;; This function calls:
 22205 ;;		Nothing
 22206 ;; This function is called by:
 22207 ;;		_read_cal_data
 22208 ;;		_write_cal_data
 22209 ;; This function uses a reentrant model
 22210 ;;
 22211                           
 22212                           	psect	text60
 22213  002F68                     __ptext60:
 22214                           	opt callstack 0
 22215  002F68                     _CRC_Start:
 22216                           	opt callstack 14
 22217                           
 22218                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 22219                           
 22220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22221                           ;incstack = 0
 22222  002F68  0139               	movlb	57	; () banked
 22223  002F6A  8D68               	bsf	104,6,b	;volatile
 22224                           
 22225                           ; BSR set to: 57
 22226                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 22227  002F6C  0012               	return		;funcret
 22228  002F6E                     __end_of_CRC_Start:
 22229                           	opt callstack 0
 22230                           
 22231 ;; *************** function _CRC_IsBusy *****************
 22232 ;; Defined at:
 22233 ;;		line 201 in file "mcc_generated_files/crc.c"
 22234 ;; Parameters:    Size  Location     Type
 22235 ;;		None
 22236 ;; Auto vars:     Size  Location     Type
 22237 ;;		None
 22238 ;; Return value:  Size  Location     Type
 22239 ;;                  1  [STACK] _Bool 
 22240 ;; Registers used:
 22241 ;;		btemp
 22242 ;; Tracked objects:
 22243 ;;		On entry : 0/39
 22244 ;;		On exit  : 0/0
 22245 ;;		Unchanged: 0/0
 22246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22251 ;;Total ram usage:        0 bytes
 22252 ;; Hardware stack levels used:    1
 22253 ;; Hardware stack levels required when called:   15
 22254 ;; This function calls:
 22255 ;;		Nothing
 22256 ;; This function is called by:
 22257 ;;		_read_cal_data
 22258 ;;		_write_cal_data
 22259 ;; This function uses a reentrant model
 22260 ;;
 22261                           
 22262                           	psect	text61
 22263  002E8A                     __ptext61:
 22264                           	opt callstack 0
 22265  002E8A                     _CRC_IsBusy:
 22266                           	opt callstack 14
 22267                           
 22268                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 22269                           
 22270                           ; BSR set to: 57
 22271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22272                           ;incstack = 0
 22273  002E8A  0139               	movlb	57	; () banked
 22274  002E8C  AB68               	btfss	104,5,b	;volatile
 22275  002E8E  D003               	goto	u12380
 22276  002E90  6A2A               	clrf	btemp^0,c
 22277  002E92  2A2A               	incf	btemp^0,f,c
 22278  002E94  0012               	return	
 22279  002E96                     u12380:
 22280  002E96  6A2A               	clrf	btemp^0,c
 22281                           
 22282                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 22283  002E98  0012               	return		;funcret
 22284  002E9A                     __end_of_CRC_IsBusy:
 22285                           	opt callstack 0
 22286                           
 22287 ;; *************** function _CRC_CalculatedResultGet *****************
 22288 ;; Defined at:
 22289 ;;		line 159 in file "mcc_generated_files/crc.c"
 22290 ;; Parameters:    Size  Location     Type
 22291 ;;  reverse         1  [STACK] _Bool 
 22292 ;;  xorValue        2  [STACK] unsigned short 
 22293 ;; Auto vars:     Size  Location     Type
 22294 ;;  result          2  [STACK] unsigned short 
 22295 ;;  mask            2  [STACK] unsigned short 
 22296 ;; Return value:  Size  Location     Type
 22297 ;;                  2  [STACK] unsigned short 
 22298 ;; Registers used:
 22299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 22300 ;; Tracked objects:
 22301 ;;		On entry : 0/39
 22302 ;;		On exit  : 0/0
 22303 ;;		Unchanged: 0/0
 22304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22309 ;;Total ram usage:        0 bytes
 22310 ;; Hardware stack levels used:    1
 22311 ;; Hardware stack levels required when called:   16
 22312 ;; This function calls:
 22313 ;;		_CRC_ReverseValue
 22314 ;; This function is called by:
 22315 ;;		_read_cal_data
 22316 ;;		_write_cal_data
 22317 ;; This function uses a reentrant model
 22318 ;;
 22319                           
 22320                           	psect	text62
 22321  01E908                     __ptext62:
 22322                           	opt callstack 0
 22323  01E908                     _CRC_CalculatedResultGet:
 22324                           	opt callstack 0
 22325                           
 22326                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22327  01E908  52E6               	movf	postinc1,f,c
 22328  01E90A  52E6               	movf	postinc1,f,c
 22329  01E90C  52E6               	movf	postinc1,f,c
 22330  01E90E  52E6               	movf	postinc1,f,c
 22331                           
 22332                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 22333                           
 22334                           ;incstack = 0
 22335  01E910  0139               	movlb	57	; () banked
 22336  01E912  9D68               	bcf	104,6,b	;volatile
 22337                           
 22338                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 22339  01E914  9DA0               	bcf	160,6,b	;volatile
 22340                           
 22341                           ; BSR set to: 57
 22342                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 22343  01E916  5169               	movf	105,w,b	;volatile
 22344  01E918  0B0F               	andlw	15
 22345  01E91A  6E35               	movwf	(btemp+11)^0,c
 22346  01E91C  3A35               	swapf	(btemp+11)^0,f,c
 22347  01E91E  5169               	movf	105,w,b	;volatile
 22348  01E920  1835               	xorwf	(btemp+11)^0,w,c
 22349  01E922  0B0F               	andlw	-241
 22350  01E924  1835               	xorwf	(btemp+11)^0,w,c
 22351  01E926  6F69               	movwf	105,b	;volatile
 22352                           
 22353                           ; BSR set to: 57
 22354                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 22355  01E928  0E08               	movlw	8
 22356  01E92A  0100               	movlb	0	; () banked
 22357  01E92C  65E3               	cpfsgt	(_crcObj+1)& (0+255),b
 22358  01E92E  D003               	goto	l1282
 22359                           
 22360                           ; BSR set to: 0
 22361                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 22362  01E930  0139               	movlb	57	; () banked
 22363  01E932  6B61               	clrf	97,b	;volatile
 22364  01E934  D001               	goto	L19
 22365  01E936                     l1282:
 22366                           
 22367                           ; BSR set to: 0
 22368                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 22369  01E936  0139               	movlb	57	; () banked
 22370  01E938                     L19:
 22371  01E938  6B60               	clrf	96,b	;volatile
 22372                           
 22373                           ; BSR set to: 57
 22374                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 22375                           
 22376                           ;mcc_generated_files/crc.c: 176:      }
 22377  01E93A  8D68               	bsf	104,6,b	;volatile
 22378  01E93C                     l1284:
 22379                           
 22380                           ; BSR set to: 57
 22381  01E93C  ADA0               	btfss	160,6,b	;volatile
 22382  01E93E  D7FE               	goto	l1284
 22383                           
 22384                           ; BSR set to: 57
 22385                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 22386  01E940  9DA0               	bcf	160,6,b	;volatile
 22387                           
 22388                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 22389  01E942  9D68               	bcf	104,6,b	;volatile
 22390                           
 22391                           ; BSR set to: 57
 22392                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 22393  01E944  0060  F388  F035   	movff	_crcObj,btemp+11
 22394  01E94A  0EFF               	movlw	255
 22395  01E94C  2635               	addwf	(btemp+11)^0,f,c
 22396  01E94E  3A35               	swapf	(btemp+11)^0,f,c
 22397  01E950  5169               	movf	105,w,b	;volatile
 22398  01E952  1835               	xorwf	(btemp+11)^0,w,c
 22399  01E954  0B0F               	andlw	-241
 22400  01E956  1835               	xorwf	(btemp+11)^0,w,c
 22401  01E958  6F69               	movwf	105,b	;volatile
 22402                           
 22403                           ; BSR set to: 57
 22404                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 22405  01E95A  5162               	movf	98,w,b	;volatile
 22406  01E95C  006E F58C  F02A    	movff	14691,btemp	;volatile
 22407  01E962  6A2B               	clrf	(btemp+1)^0,c
 22408  01E964  0060  F0A8  F02B   	movff	btemp,btemp+1
 22409  01E96A  6A2A               	clrf	btemp^0,c
 22410  01E96C  122A               	iorwf	btemp^0,f,c
 22411  01E96E  0E00               	movlw	0
 22412  01E970  122B               	iorwf	(btemp+1)^0,f,c
 22413                           
 22414                           ;stkvar	_result @ sp[(-4)+0]
 22415  01E972  0EFC               	movlw	-4
 22416  01E974  0060  F0AB  FFE3   	movff	btemp,plusw1
 22417  01E97A  0EFD               	movlw	-3
 22418  01E97C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 22419                           
 22420                           ; BSR set to: 57
 22421                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 22422  01E982  0E10               	movlw	16
 22423  01E984  0100               	movlb	0	; () banked
 22424  01E986  61E3               	cpfslt	(_crcObj+1)& (0+255),b
 22425  01E988  D03A               	goto	l12877
 22426                           
 22427                           ; BSR set to: 0
 22428                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 22429  01E98A  0EFF               	movlw	255
 22430  01E98C  6E34               	movwf	(btemp+10)^0,c
 22431  01E98E  0EFF               	movlw	255
 22432  01E990  6E35               	movwf	(btemp+11)^0,c
 22433  01E992  0060  F38C  F033   	movff	_crcObj+1,btemp+9
 22434  01E998  0E01               	movlw	1
 22435  01E99A  6E30               	movwf	(btemp+6)^0,c
 22436  01E99C  0E00               	movlw	0
 22437  01E99E  6E31               	movwf	(btemp+7)^0,c
 22438  01E9A0  2A33               	incf	(btemp+9)^0,f,c
 22439  01E9A2  D003               	goto	u12364
 22440  01E9A4                     u12365:
 22441  01E9A4  90D8               	bcf	status,0,c
 22442  01E9A6  3630               	rlcf	(btemp+6)^0,f,c
 22443  01E9A8  3631               	rlcf	(btemp+7)^0,f,c
 22444  01E9AA                     u12364:
 22445  01E9AA  2E33               	decfsz	(btemp+9)^0,f,c
 22446  01E9AC  D7FB               	goto	u12365
 22447  01E9AE  5034               	movf	(btemp+10)^0,w,c
 22448  01E9B0  2630               	addwf	(btemp+6)^0,f,c
 22449  01E9B2  5035               	movf	(btemp+11)^0,w,c
 22450  01E9B4  2231               	addwfc	(btemp+7)^0,f,c
 22451                           
 22452                           ;stkvar	_mask @ sp[(-4)+2]
 22453  01E9B6  0EFE               	movlw	-2
 22454  01E9B8  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 22455  01E9BE  0EFF               	movlw	-1
 22456  01E9C0  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 22457                           
 22458                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 22459                           ;stkvar	_mask @ sp[(-4)+2]
 22460  01E9C6  0EFE               	movlw	-2
 22461  01E9C8  006F FF8C  F034    	movff	plusw1,btemp+10
 22462  01E9CE  0EFF               	movlw	-1
 22463  01E9D0  006F FF8C  F035    	movff	plusw1,btemp+11
 22464                           
 22465                           ;stkvar	_result @ sp[(-4)+0]
 22466  01E9D6  0EFC               	movlw	-4
 22467  01E9D8  006F FF8C  F02A    	movff	plusw1,btemp
 22468  01E9DE  5034               	movf	(btemp+10)^0,w,c
 22469  01E9E0  162A               	andwf	btemp^0,f,c
 22470  01E9E2  0EFC               	movlw	-4
 22471  01E9E4  0060  F0AB  FFE3   	movff	btemp,plusw1
 22472  01E9EA  0EFD               	movlw	-3
 22473  01E9EC  006F FF8C  F02A    	movff	plusw1,btemp
 22474  01E9F2  5035               	movf	(btemp+11)^0,w,c
 22475  01E9F4  162A               	andwf	btemp^0,f,c
 22476  01E9F6  0EFD               	movlw	-3
 22477  01E9F8  0060  F0AB  FFE3   	movff	btemp,plusw1
 22478  01E9FE                     l12877:
 22479                           
 22480                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 22481                           ;stkvar	_reverse @ sp[(-4)+-1]
 22482  01E9FE  0EFB               	movlw	-5
 22483  01EA00  50E3               	movf	plusw1,w,c
 22484  01EA02  B4D8               	btfsc	status,2,c
 22485  01EA04  D011               	goto	l12881
 22486                           
 22487                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 22488                           ;stkvar	_result @ sp[(-4)+0]
 22489  01EA06  0EFC               	movlw	-4
 22490  01EA08  006F FF8F FFE6     	movff	plusw1,postinc1
 22491  01EA0E  006F FF8F FFE6     	movff	plusw1,postinc1
 22492  01EA14  EC06  F004         	call	_CRC_ReverseValue	;wreg free
 22493                           
 22494                           ;stkvar	_result @ sp[(-4)+0]
 22495  01EA18  0EFC               	movlw	-4
 22496  01EA1A  0060  F0AB  FFE3   	movff	btemp,plusw1
 22497  01EA20  0EFD               	movlw	-3
 22498  01EA22  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 22499  01EA28                     l12881:
 22500                           
 22501                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 22502                           ;stkvar	_xorValue @ sp[(-4)+-3]
 22503  01EA28  0EF9               	movlw	-7
 22504  01EA2A  006F FF8C  F034    	movff	plusw1,btemp+10
 22505  01EA30  0EFA               	movlw	-6
 22506  01EA32  006F FF8C  F035    	movff	plusw1,btemp+11
 22507                           
 22508                           ;stkvar	_result @ sp[(-4)+0]
 22509  01EA38  0EFC               	movlw	-4
 22510  01EA3A  006F FF8C  F02A    	movff	plusw1,btemp
 22511  01EA40  5034               	movf	(btemp+10)^0,w,c
 22512  01EA42  1A2A               	xorwf	btemp^0,f,c
 22513  01EA44  0EFC               	movlw	-4
 22514  01EA46  0060  F0AB  FFE3   	movff	btemp,plusw1
 22515  01EA4C  0EFD               	movlw	-3
 22516  01EA4E  006F FF8C  F02A    	movff	plusw1,btemp
 22517  01EA54  5035               	movf	(btemp+11)^0,w,c
 22518  01EA56  1A2A               	xorwf	btemp^0,f,c
 22519  01EA58  0EFD               	movlw	-3
 22520  01EA5A  0060  F0AB  FFE3   	movff	btemp,plusw1
 22521                           
 22522                           ;mcc_generated_files/crc.c: 198:     return result;
 22523                           ;stkvar	_result @ sp[(-4)+0]
 22524  01EA60  0EFC               	movlw	-4
 22525  01EA62  006F FF8C  F02A    	movff	plusw1,btemp
 22526  01EA68  0EFD               	movlw	-3
 22527  01EA6A  006F FF8C  F02B    	movff	plusw1,btemp+1
 22528                           
 22529                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 22530  01EA70  0EF9               	movlw	249
 22531  01EA72  26E1               	addwf	fsr1l,f,c
 22532  01EA74  0EFF               	movlw	255
 22533  01EA76  22E2               	addwfc	fsr1h,f,c
 22534  01EA78  0012               	return		;funcret
 22535  01EA7A                     __end_of_CRC_CalculatedResultGet:
 22536                           	opt callstack 0
 22537                           
 22538 ;; *************** function _CRC_ReverseValue *****************
 22539 ;; Defined at:
 22540 ;;		line 138 in file "mcc_generated_files/crc.c"
 22541 ;; Parameters:    Size  Location     Type
 22542 ;;  crc             2  [STACK] unsigned short 
 22543 ;; Auto vars:     Size  Location     Type
 22544 ;;  mask            2  [STACK] unsigned short 
 22545 ;;  reverse         2  [STACK] unsigned short 
 22546 ;; Return value:  Size  Location     Type
 22547 ;;                  2  [STACK] unsigned short 
 22548 ;; Registers used:
 22549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 22550 ;; Tracked objects:
 22551 ;;		On entry : 0/0
 22552 ;;		On exit  : 0/0
 22553 ;;		Unchanged: 0/0
 22554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22559 ;;Total ram usage:        0 bytes
 22560 ;; Hardware stack levels used:    1
 22561 ;; Hardware stack levels required when called:   15
 22562 ;; This function calls:
 22563 ;;		Nothing
 22564 ;; This function is called by:
 22565 ;;		_CRC_CalculatedResultGet
 22566 ;; This function uses a reentrant model
 22567 ;;
 22568                           
 22569                           	psect	text63
 22570  00080C                     __ptext63:
 22571                           	opt callstack 0
 22572  00080C                     _CRC_ReverseValue:
 22573                           	opt callstack 0
 22574                           
 22575                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22576  00080C  52E6               	movf	postinc1,f,c
 22577  00080E  52E6               	movf	postinc1,f,c
 22578  000810  52E6               	movf	postinc1,f,c
 22579  000812  52E6               	movf	postinc1,f,c
 22580                           
 22581                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 22582                           
 22583                           ;incstack = 0
 22584  000814  0E01               	movlw	1
 22585  000816  6E34               	movwf	(btemp+10)^0,c
 22586  000818  0E00               	movlw	0
 22587  00081A  6E35               	movwf	(btemp+11)^0,c
 22588                           
 22589                           ;stkvar	_mask @ sp[(-4)+0]
 22590  00081C  0EFC               	movlw	-4
 22591  00081E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 22592  000824  0EFD               	movlw	-3
 22593  000826  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 22594                           
 22595                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 22596  00082C  0060  F38C  F035   	movff	_crcObj+1,btemp+11
 22597  000832  0EFF               	movlw	255
 22598  000834  2635               	addwf	(btemp+11)^0,f,c
 22599                           
 22600                           ;stkvar	_mask @ sp[(-4)+0]
 22601  000836  50E1               	movf	fsr1l,w,c
 22602  000838  0FFC               	addlw	-4
 22603  00083A  6ED9               	movwf	fsr2l,c
 22604  00083C  50E2               	movf	fsr1h,w,c
 22605  00083E  6EDA               	movwf	fsr2h,c
 22606  000840  0EFF               	movlw	255
 22607  000842  22DA               	addwfc	fsr2h,f,c
 22608  000844  2835               	incf	(btemp+11)^0,w,c
 22609  000846  D003               	goto	u11630
 22610  000848                     u11635:
 22611  000848  90D8               	bcf	status,0,c
 22612  00084A  36DE               	rlcf	postinc2,f,c
 22613  00084C  36DD               	rlcf	postdec2,f,c
 22614  00084E                     u11630:
 22615  00084E  2EE8               	decfsz	wreg,f,c
 22616  000850  D7FB               	goto	u11635
 22617                           
 22618                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 22619                           ;stkvar	_reverse @ sp[(-4)+2]
 22620  000852  0EFE               	movlw	-2
 22621  000854  6AE3               	clrf	plusw1,c
 22622  000856  0EFF               	movlw	-1
 22623  000858  6AE3               	clrf	plusw1,c
 22624                           
 22625                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22626  00085A  D029               	goto	l12361
 22627  00085C                     l12353:
 22628                           
 22629                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 22630                           ;stkvar	_crc @ sp[(-4)+-2]
 22631  00085C  0EFA               	movlw	-6
 22632  00085E  A0E3               	btfss	plusw1,0,c
 22633  000860  D01C               	goto	l12357
 22634                           
 22635                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 22636                           ;stkvar	_mask @ sp[(-4)+0]
 22637  000862  0EFC               	movlw	-4
 22638  000864  006F FF8C  F034    	movff	plusw1,btemp+10
 22639  00086A  0EFD               	movlw	-3
 22640  00086C  006F FF8C  F035    	movff	plusw1,btemp+11
 22641                           
 22642                           ;stkvar	_reverse @ sp[(-4)+2]
 22643  000872  0EFE               	movlw	-2
 22644  000874  006F FF8C  F02A    	movff	plusw1,btemp
 22645  00087A  5034               	movf	(btemp+10)^0,w,c
 22646  00087C  122A               	iorwf	btemp^0,f,c
 22647  00087E  0EFE               	movlw	-2
 22648  000880  0060  F0AB  FFE3   	movff	btemp,plusw1
 22649  000886  0EFF               	movlw	-1
 22650  000888  006F FF8C  F02A    	movff	plusw1,btemp
 22651  00088E  5035               	movf	(btemp+11)^0,w,c
 22652  000890  122A               	iorwf	btemp^0,f,c
 22653  000892  0EFF               	movlw	-1
 22654  000894  0060  F0AB  FFE3   	movff	btemp,plusw1
 22655  00089A                     l12357:
 22656                           
 22657                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 22658                           ;stkvar	_mask @ sp[(-4)+0]
 22659  00089A  90D8               	bcf	status,0,c
 22660  00089C  0EFD               	movlw	-3
 22661  00089E  32E3               	rrcf	plusw1,f,c
 22662  0008A0  0EFC               	movlw	-4
 22663  0008A2  32E3               	rrcf	plusw1,f,c
 22664                           
 22665                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 22666                           ;stkvar	_crc @ sp[(-4)+-2]
 22667  0008A4  90D8               	bcf	status,0,c
 22668  0008A6  0EFB               	movlw	-5
 22669  0008A8  32E3               	rrcf	plusw1,f,c
 22670  0008AA  0EFA               	movlw	-6
 22671  0008AC  32E3               	rrcf	plusw1,f,c
 22672  0008AE                     l12361:
 22673                           
 22674                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22675                           ;stkvar	_crc @ sp[(-4)+-2]
 22676  0008AE  0EFA               	movlw	-6
 22677  0008B0  006F FF8C  F02A    	movff	plusw1,btemp
 22678  0008B6  0EFB               	movlw	-5
 22679  0008B8  50E3               	movf	plusw1,w,c
 22680  0008BA  102A               	iorwf	btemp^0,w,c
 22681  0008BC  A4D8               	btfss	status,2,c
 22682  0008BE  D7CE               	goto	l12353
 22683                           
 22684                           ;mcc_generated_files/crc.c: 156:     return reverse;
 22685                           ;stkvar	_reverse @ sp[(-4)+2]
 22686  0008C0  0EFE               	movlw	-2
 22687  0008C2  006F FF8C  F02A    	movff	plusw1,btemp
 22688  0008C8  0EFF               	movlw	-1
 22689  0008CA  006F FF8C  F02B    	movff	plusw1,btemp+1
 22690                           
 22691                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 22692  0008D0  0EFA               	movlw	250
 22693  0008D2  26E1               	addwf	fsr1l,f,c
 22694  0008D4  0EFF               	movlw	255
 22695  0008D6  22E2               	addwfc	fsr1h,f,c
 22696  0008D8  0012               	return		;funcret
 22697  0008DA                     __end_of_CRC_ReverseValue:
 22698                           	opt callstack 0
 22699                           
 22700 ;; *************** function _CRC_8BitDataWrite *****************
 22701 ;; Defined at:
 22702 ;;		line 125 in file "mcc_generated_files/crc.c"
 22703 ;; Parameters:    Size  Location     Type
 22704 ;;  data            1  [STACK] unsigned char 
 22705 ;; Auto vars:     Size  Location     Type
 22706 ;;		None
 22707 ;; Return value:  Size  Location     Type
 22708 ;;                  1  [STACK] _Bool 
 22709 ;; Registers used:
 22710 ;;		fsr1l, fsr1h
 22711 ;; Tracked objects:
 22712 ;;		On entry : 0/4
 22713 ;;		On exit  : 3F/39
 22714 ;;		Unchanged: 0/0
 22715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22720 ;;Total ram usage:        0 bytes
 22721 ;; Hardware stack levels used:    1
 22722 ;; Hardware stack levels required when called:   15
 22723 ;; This function calls:
 22724 ;;		Nothing
 22725 ;; This function is called by:
 22726 ;;		_read_cal_data
 22727 ;;		_write_cal_data
 22728 ;; This function uses a reentrant model
 22729 ;;
 22730                           
 22731                           	psect	text64
 22732  002E46                     __ptext64:
 22733                           	opt callstack 0
 22734  002E46                     _CRC_8BitDataWrite:
 22735                           	opt callstack 14
 22736                           
 22737                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 22738                           
 22739                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22740                           ;incstack = 0
 22741  002E46  0139               	movlb	57	; () banked
 22742  002E48  B168               	btfsc	104,0,b	;volatile
 22743  002E4A  D004               	goto	l1271
 22744                           
 22745                           ; BSR set to: 57
 22746                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 22747                           ;stkvar	_data @ sp[(0)+-1]
 22748  002E4C  0EFF               	movlw	-1
 22749  002E4E  006F FF8F F960     	movff	plusw1,14688	;volatile
 22750  002E54                     l1271:
 22751                           
 22752                           ; BSR set to: 57
 22753                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 22754  002E54  52E5               	movf	postdec1,f,c
 22755  002E56  0012               	return		;funcret
 22756  002E58                     __end_of_CRC_8BitDataWrite:
 22757                           	opt callstack 0
 22758                           
 22759 ;; *************** function _start_adc_scan *****************
 22760 ;; Defined at:
 22761 ;;		line 72 in file "daq.c"
 22762 ;; Parameters:    Size  Location     Type
 22763 ;;		None
 22764 ;; Auto vars:     Size  Location     Type
 22765 ;;		None
 22766 ;; Return value:  Size  Location     Type
 22767 ;;                  1  [STACK] _Bool 
 22768 ;; Registers used:
 22769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22770 ;; Tracked objects:
 22771 ;;		On entry : 0/0
 22772 ;;		On exit  : 0/0
 22773 ;;		Unchanged: 0/0
 22774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22779 ;;Total ram usage:        0 bytes
 22780 ;; Hardware stack levels used:    1
 22781 ;; Hardware stack levels required when called:   16
 22782 ;; This function calls:
 22783 ;;		_ADCC_DischargeSampleCapacitor
 22784 ;;		_ADCC_SetADIInterruptHandler
 22785 ;;		_ADCC_SetADTIInterruptHandler
 22786 ;;		_ADCC_StartConversion
 22787 ;; This function is called by:
 22788 ;;		_main
 22789 ;;		_current_sensor_cal
 22790 ;;		_update_adc_result
 22791 ;; This function uses a reentrant model
 22792 ;;
 22793                           
 22794                           	psect	text65
 22795  001C86                     __ptext65:
 22796                           	opt callstack 0
 22797  001C86                     _start_adc_scan:
 22798                           	opt callstack 14
 22799                           
 22800                           ;daq.c: 74:  if (R.done)
 22801                           
 22802                           ; BSR set to: 57
 22803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22804                           ;incstack = 0
 22805  001C86  0101               	movlb	1	; () banked
 22806  001C88  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 22807  001C8A  A4D8               	btfss	status,2,c
 22808  001C8C  0012               	return	
 22809                           
 22810                           ; BSR set to: 1
 22811                           ;daq.c: 77:  R.scan_index = 0;
 22812  001C8E  6B32               	clrf	(_R+50)& (0+255),b	;volatile
 22813                           
 22814                           ; BSR set to: 1
 22815                           ;daq.c: 78:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 22816  001C90  013A               	movlb	58	; () banked
 22817  001C92  5140               	movf	64,w,b	;volatile
 22818  001C94  006E F940  F02A    	movff	14928,btemp	;volatile
 22819  001C9A  6A2B               	clrf	(btemp+1)^0,c
 22820  001C9C  0060  F0A8  F02B   	movff	btemp,btemp+1
 22821  001CA2  6A2A               	clrf	btemp^0,c
 22822  001CA4  262A               	addwf	btemp^0,f,c
 22823  001CA6  0E00               	movlw	0
 22824  001CA8  222B               	addwfc	(btemp+1)^0,f,c
 22825  001CAA  0E77               	movlw	119
 22826  001CAC  142A               	andwf	btemp^0,w,c
 22827  001CAE  0101               	movlb	1	; () banked
 22828  001CB0  6F33               	movwf	(_R+51)& (0+255),b	;volatile
 22829  001CB2  0E3C               	movlw	60
 22830  001CB4  142B               	andwf	(btemp+1)^0,w,c
 22831  001CB6  6F34               	movwf	(_R+52)& (0+255),b	;volatile
 22832                           
 22833                           ; BSR set to: 1
 22834                           ;daq.c: 79:  ADCC_SetADIInterruptHandler(adc_int_handler);
 22835  001CB8  0E96               	movlw	low _adc_int_handler
 22836  001CBA  6EE6               	movwf	postinc1,c
 22837  001CBC  0E2F               	movlw	high _adc_int_handler
 22838  001CBE  6EE6               	movwf	postinc1,c
 22839  001CC0  0E00               	movlw	low (_adc_int_handler shr (0+16))
 22840  001CC2  6EE6               	movwf	postinc1,c
 22841  001CC4  EC5D  F015         	call	_ADCC_SetADIInterruptHandler	;wreg free
 22842                           
 22843                           ;daq.c: 80:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 22844  001CC8  0ECC               	movlw	low _adc_int_t_handler
 22845  001CCA  6EE6               	movwf	postinc1,c
 22846  001CCC  0E16               	movlw	high _adc_int_t_handler
 22847  001CCE  6EE6               	movwf	postinc1,c
 22848  001CD0  0E00               	movlw	low (_adc_int_t_handler shr (0+16))
 22849  001CD2  6EE6               	movwf	postinc1,c
 22850  001CD4  EC49  F015         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 22851                           
 22852                           ;daq.c: 81:  ADCC_DischargeSampleCapacitor();
 22853  001CD8  ECA1  F017         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 22854                           
 22855                           ; BSR set to: 62
 22856                           ;daq.c: 82:  ADCC_StartConversion(R.scan_index & 0xf);
 22857  001CDC  0101               	movlb	1	; () banked
 22858  001CDE  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 22859  001CE0  0B0F               	andlw	15
 22860  001CE2  6EE6               	movwf	postinc1,c
 22861  001CE4  EC2C  F017         	call	_ADCC_StartConversion	;wreg free
 22862                           
 22863                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22864  001CE8  0012               	return		;funcret
 22865  001CEA                     __end_of_start_adc_scan:
 22866                           	opt callstack 0
 22867                           
 22868 ;; *************** function _ADCC_StartConversion *****************
 22869 ;; Defined at:
 22870 ;;		line 128 in file "mcc_generated_files/adcc.c"
 22871 ;; Parameters:    Size  Location     Type
 22872 ;;  channel         1  [STACK] enum E16136
 22873 ;; Auto vars:     Size  Location     Type
 22874 ;;		None
 22875 ;; Return value:  Size  Location     Type
 22876 ;;                  1  [STACK] void 
 22877 ;; Registers used:
 22878 ;;		fsr1l, fsr1h
 22879 ;; Tracked objects:
 22880 ;;		On entry : 3F/1
 22881 ;;		On exit  : 3F/3E
 22882 ;;		Unchanged: 0/0
 22883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22888 ;;Total ram usage:        0 bytes
 22889 ;; Hardware stack levels used:    1
 22890 ;; Hardware stack levels required when called:   15
 22891 ;; This function calls:
 22892 ;;		Nothing
 22893 ;; This function is called by:
 22894 ;;		_start_adc_scan
 22895 ;;		_adc_int_t_handler
 22896 ;; This function uses a reentrant model
 22897 ;;
 22898                           
 22899                           	psect	text66
 22900  002E58                     __ptext66:
 22901                           	opt callstack 0
 22902  002E58                     _ADCC_StartConversion:
 22903                           	opt callstack 0
 22904                           
 22905                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 22906                           ;stkvar	_channel @ sp[(0)+-1]
 22907                           
 22908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22909                           ;incstack = 0
 22910 ;; hardware stack exceeded
 22911  002E58  0EFF               	movlw	-1
 22912  002E5A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 22913                           
 22914                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 22915  002E60  013E               	movlb	62	; () banked
 22916  002E62  8FF8               	bsf	248,7,b	;volatile
 22917                           
 22918                           ; BSR set to: 62
 22919                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 22920  002E64  81F8               	bsf	248,0,b	;volatile
 22921                           
 22922                           ; BSR set to: 62
 22923                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 22924  002E66  52E5               	movf	postdec1,f,c
 22925  002E68  0012               	return		;funcret
 22926  002E6A                     __end_of_ADCC_StartConversion:
 22927                           	opt callstack 0
 22928                           
 22929 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 22930 ;; Defined at:
 22931 ;;		line 189 in file "mcc_generated_files/adcc.c"
 22932 ;; Parameters:    Size  Location     Type
 22933 ;;		None
 22934 ;; Auto vars:     Size  Location     Type
 22935 ;;		None
 22936 ;; Return value:  Size  Location     Type
 22937 ;;                  1  [STACK] void 
 22938 ;; Registers used:
 22939 ;;		wreg, status,2
 22940 ;; Tracked objects:
 22941 ;;		On entry : 0/1
 22942 ;;		On exit  : 3F/3E
 22943 ;;		Unchanged: 0/0
 22944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22949 ;;Total ram usage:        0 bytes
 22950 ;; Hardware stack levels used:    1
 22951 ;; Hardware stack levels required when called:   15
 22952 ;; This function calls:
 22953 ;;		Nothing
 22954 ;; This function is called by:
 22955 ;;		_start_adc_scan
 22956 ;;		_adc_int_t_handler
 22957 ;; This function uses a reentrant model
 22958 ;;
 22959                           
 22960                           	psect	text67
 22961  002F42                     __ptext67:
 22962                           	opt callstack 0
 22963  002F42                     _ADCC_DischargeSampleCapacitor:
 22964                           	opt callstack 0
 22965                           
 22966                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 22967                           
 22968                           ; BSR set to: 62
 22969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22970                           ;incstack = 0
 22971 ;; hardware stack exceeded
 22972  002F42  0E3B               	movlw	59
 22973  002F44  013E               	movlb	62	; () banked
 22974  002F46  6FF1               	movwf	241,b	;volatile
 22975                           
 22976                           ; BSR set to: 62
 22977                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 22978  002F48  0012               	return		;funcret
 22979  002F4A                     __end_of_ADCC_DischargeSampleCapacitor:
 22980                           	opt callstack 0
 22981                           
 22982 ;; *************** function _spinners *****************
 22983 ;; Defined at:
 22984 ;;		line 147 in file "mbmc.c"
 22985 ;; Parameters:    Size  Location     Type
 22986 ;;  shape           1  [STACK] unsigned char 
 22987 ;;  reset           1  [STACK] const unsigned char 
 22988 ;; Auto vars:     Size  Location     Type
 22989 ;;  c               1  [STACK] unsigned char 
 22990 ;; Return value:  Size  Location     Type
 22991 ;;                  1  [STACK] unsigned char 
 22992 ;; Registers used:
 22993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 22994 ;; Tracked objects:
 22995 ;;		On entry : 0/0
 22996 ;;		On exit  : 0/0
 22997 ;;		Unchanged: 0/0
 22998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23003 ;;Total ram usage:        0 bytes
 23004 ;; Hardware stack levels used:    1
 23005 ;; Hardware stack levels required when called:   16
 23006 ;; This function calls:
 23007 ;;		_strlen
 23008 ;; This function is called by:
 23009 ;;		_main
 23010 ;;		_current_sensor_cal
 23011 ;; This function uses a reentrant model
 23012 ;;
 23013                           
 23014                           	psect	text68
 23015  0002A4                     __ptext68:
 23016                           	opt callstack 0
 23017  0002A4                     _spinners:
 23018                           	opt callstack 0
 23019                           
 23020                           ; BSR set to: 62
 23021                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23022  0002A4  52E6               	movf	postinc1,f,c
 23023                           
 23024                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 23025                           ;stkvar	_shape @ sp[(-1)+-1]
 23026                           
 23027                           ;incstack = 0
 23028  0002A6  0EFE               	movlw	-2
 23029  0002A8  006F FF8C  F02A    	movff	plusw1,btemp
 23030  0002AE  0E05               	movlw	5
 23031  0002B0  642A               	cpfsgt	btemp^0,c
 23032  0002B2  D002               	goto	l2195
 23033                           
 23034                           ;mbmc.c: 153:   shape = 0;
 23035                           ;stkvar	_shape @ sp[(-1)+-1]
 23036  0002B4  0EFE               	movlw	-2
 23037  0002B6  6AE3               	clrf	plusw1,c
 23038  0002B8                     l2195:
 23039                           
 23040                           ;mbmc.c: 154:  if (reset)
 23041                           ;stkvar	_reset @ sp[(-1)+-2]
 23042  0002B8  0EFD               	movlw	-3
 23043  0002BA  50E3               	movf	plusw1,w,c
 23044  0002BC  B4D8               	btfsc	status,2,c
 23045  0002BE  D00C               	goto	l17105
 23046                           
 23047                           ;mbmc.c: 155:   s[shape] = 0;
 23048                           ;stkvar	_shape @ sp[(-1)+-1]
 23049  0002C0  0EFE               	movlw	-2
 23050  0002C2  50E3               	movf	plusw1,w,c
 23051  0002C4  6E34               	movwf	(btemp+10)^0,c
 23052  0002C6  6A35               	clrf	(btemp+11)^0,c
 23053  0002C8  0ECD               	movlw	low spinners@s
 23054  0002CA  2434               	addwf	(btemp+10)^0,w,c
 23055  0002CC  6ED9               	movwf	fsr2l,c
 23056  0002CE  0E01               	movlw	high spinners@s
 23057  0002D0  2035               	addwfc	(btemp+11)^0,w,c
 23058  0002D2  6EDA               	movwf	fsr2h,c
 23059  0002D4  0E00               	movlw	0
 23060  0002D6  6EDF               	movwf	indf2,c
 23061  0002D8                     l17105:
 23062                           
 23063                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 23064                           ;stkvar	_shape @ sp[(-1)+-1]
 23065  0002D8  0EFE               	movlw	-2
 23066  0002DA  50E3               	movf	plusw1,w,c
 23067  0002DC  0D14               	mullw	20
 23068  0002DE  0ED3               	movlw	low _spin
 23069  0002E0  6E34               	movwf	(btemp+10)^0,c
 23070  0002E2  0EF8               	movlw	high _spin
 23071  0002E4  6E35               	movwf	(btemp+11)^0,c
 23072  0002E6  50F3               	movf	243,w,c
 23073  0002E8  2634               	addwf	(btemp+10)^0,f,c
 23074  0002EA  50F4               	movf	244,w,c
 23075  0002EC  2235               	addwfc	(btemp+11)^0,f,c
 23076                           
 23077                           ;stkvar	_shape @ sp[(-1)+-1]
 23078  0002EE  0EFE               	movlw	-2
 23079  0002F0  50E3               	movf	plusw1,w,c
 23080  0002F2  6E32               	movwf	(btemp+8)^0,c
 23081  0002F4  6A33               	clrf	(btemp+9)^0,c
 23082  0002F6  0ECD               	movlw	low spinners@s
 23083  0002F8  2432               	addwf	(btemp+8)^0,w,c
 23084  0002FA  6ED9               	movwf	fsr2l,c
 23085  0002FC  0E01               	movlw	high spinners@s
 23086  0002FE  2033               	addwfc	(btemp+9)^0,w,c
 23087  000300  6EDA               	movwf	fsr2h,c
 23088  000302  50DF               	movf	indf2,w,c
 23089  000304  2634               	addwf	(btemp+10)^0,f,c
 23090  000306  0E00               	movlw	0
 23091  000308  2235               	addwfc	(btemp+11)^0,f,c
 23092  00030A  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 23093  000310  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 23094  000316                     	if	0	;tblptru may be non-zero
 23095  000316                     	endif
 23096  000316                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23097  000316  0E00               	movlw	low (__mediumconst shr (0+16))
 23098  000318  6EF8               	movwf	tblptru,c
 23099  00031A                     	endif
 23100                           
 23101                           ;stkvar	_c @ sp[(-1)+0]
 23102  00031A  0008               	tblrd		*
 23103  00031C  0EFF               	movlw	-1
 23104  00031E  006F FFD7 FFE3     	movff	tablat,plusw1
 23105                           
 23106                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 23107                           ;stkvar	_shape @ sp[(-1)+-1]
 23108  000324  0EFE               	movlw	-2
 23109  000326  50E3               	movf	plusw1,w,c
 23110  000328  0D14               	mullw	20
 23111  00032A  0ED3               	movlw	low _spin
 23112  00032C  6E34               	movwf	(btemp+10)^0,c
 23113  00032E  0EF8               	movlw	high _spin
 23114  000330  6E35               	movwf	(btemp+11)^0,c
 23115  000332  50F3               	movf	243,w,c
 23116  000334  2634               	addwf	(btemp+10)^0,f,c
 23117  000336  50F4               	movf	244,w,c
 23118  000338  2235               	addwfc	(btemp+11)^0,f,c
 23119  00033A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23120  000340  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23121  000346  EC47  F008         	call	_strlen	;wreg free
 23122                           
 23123                           ;stkvar	_shape @ sp[(-1)+-1]
 23124  00034A  0EFE               	movlw	-2
 23125  00034C  50E3               	movf	plusw1,w,c
 23126  00034E  6E34               	movwf	(btemp+10)^0,c
 23127  000350  6A35               	clrf	(btemp+11)^0,c
 23128  000352  0ECD               	movlw	low spinners@s
 23129  000354  2434               	addwf	(btemp+10)^0,w,c
 23130  000356  6ED9               	movwf	fsr2l,c
 23131  000358  0E01               	movlw	high spinners@s
 23132  00035A  2035               	addwfc	(btemp+11)^0,w,c
 23133  00035C  6EDA               	movwf	fsr2h,c
 23134  00035E  2ADF               	incf	indf2,f,c
 23135  000360  50DF               	movf	indf2,w,c
 23136  000362  6E34               	movwf	(btemp+10)^0,c
 23137  000364  6A35               	clrf	(btemp+11)^0,c
 23138  000366  502A               	movf	btemp^0,w,c
 23139  000368  5C34               	subwf	(btemp+10)^0,w,c
 23140  00036A  502B               	movf	(btemp+1)^0,w,c
 23141  00036C  5835               	subwfb	(btemp+11)^0,w,c
 23142  00036E  A0D8               	btfss	status,0,c
 23143  000370  D00C               	goto	l17111
 23144                           
 23145                           ;mbmc.c: 158:   s[shape] = 0;
 23146                           ;stkvar	_shape @ sp[(-1)+-1]
 23147  000372  0EFE               	movlw	-2
 23148  000374  50E3               	movf	plusw1,w,c
 23149  000376  6E34               	movwf	(btemp+10)^0,c
 23150  000378  6A35               	clrf	(btemp+11)^0,c
 23151  00037A  0ECD               	movlw	low spinners@s
 23152  00037C  2434               	addwf	(btemp+10)^0,w,c
 23153  00037E  6ED9               	movwf	fsr2l,c
 23154  000380  0E01               	movlw	high spinners@s
 23155  000382  2035               	addwfc	(btemp+11)^0,w,c
 23156  000384  6EDA               	movwf	fsr2h,c
 23157  000386  0E00               	movlw	0
 23158  000388  6EDF               	movwf	indf2,c
 23159  00038A                     l17111:
 23160                           
 23161                           ;mbmc.c: 159:  return c;
 23162                           ;stkvar	_c @ sp[(-1)+0]
 23163  00038A  0EFF               	movlw	-1
 23164  00038C  006F FF8C  F02A    	movff	plusw1,btemp
 23165                           
 23166                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 23167  000392  52E5               	movf	postdec1,f,c
 23168  000394  52E5               	movf	postdec1,f,c
 23169  000396  52E5               	movf	postdec1,f,c
 23170  000398  0012               	return		;funcret
 23171  00039A                     __end_of_spinners:
 23172                           	opt callstack 0
 23173                           
 23174 ;; *************** function _get_switch *****************
 23175 ;; Defined at:
 23176 ;;		line 18 in file "dio.c"
 23177 ;; Parameters:    Size  Location     Type
 23178 ;;  i               1  [STACK] const unsigned char 
 23179 ;; Auto vars:     Size  Location     Type
 23180 ;;		None
 23181 ;; Return value:  Size  Location     Type
 23182 ;;                  1  [STACK] enum E17187
 23183 ;; Registers used:
 23184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23185 ;; Tracked objects:
 23186 ;;		On entry : 0/0
 23187 ;;		On exit  : 0/0
 23188 ;;		Unchanged: 0/0
 23189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23194 ;;Total ram usage:        0 bytes
 23195 ;; Hardware stack levels used:    1
 23196 ;; Hardware stack levels required when called:   15
 23197 ;; This function calls:
 23198 ;;		Nothing
 23199 ;; This function is called by:
 23200 ;;		_main
 23201 ;;		_current_sensor_cal
 23202 ;;		_display_history
 23203 ;;		_hid_input
 23204 ;; This function uses a reentrant model
 23205 ;;
 23206                           
 23207                           	psect	text69
 23208  002854                     __ptext69:
 23209                           	opt callstack 0
 23210  002854                     _get_switch:
 23211                           	opt callstack 13
 23212                           
 23213                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 23214                           ;stkvar	_i @ sp[(0)+-1]
 23215                           
 23216                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23217                           ;incstack = 0
 23218  002854  0EFF               	movlw	-1
 23219  002856  006F FF8C  F02A    	movff	plusw1,btemp
 23220  00285C  0E05               	movlw	5
 23221  00285E  642A               	cpfsgt	btemp^0,c
 23222  002860  D002               	goto	l12947
 23223                           
 23224                           ;dio.c: 21:   return SW_OFF;
 23225  002862  0E00               	movlw	0
 23226  002864  D00A               	goto	L20
 23227  002866                     l12947:
 23228                           
 23229                           ;dio.c: 23:  return S.button[i].sw;
 23230                           ;stkvar	_i @ sp[(0)+-1]
 23231  002866  0EFF               	movlw	-1
 23232  002868  50E3               	movf	plusw1,w,c
 23233  00286A  0D05               	mullw	5
 23234  00286C  0EA4               	movlw	low _S
 23235  00286E  24F3               	addwf	243,w,c
 23236  002870  6ED9               	movwf	fsr2l,c
 23237  002872  0E01               	movlw	high _S
 23238  002874  20F4               	addwfc	prodh,w,c
 23239  002876  6EDA               	movwf	fsr2h,c
 23240  002878  50DF               	movf	indf2,w,c
 23241  00287A                     L20:
 23242  00287A  6E2A               	movwf	btemp^0,c
 23243                           
 23244                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23245  00287C  52E5               	movf	postdec1,f,c
 23246  00287E  0012               	return		;funcret
 23247  002880                     __end_of_get_switch:
 23248                           	opt callstack 0
 23249                           
 23250 ;; *************** function _clear_switch *****************
 23251 ;; Defined at:
 23252 ;;		line 49 in file "dio.c"
 23253 ;; Parameters:    Size  Location     Type
 23254 ;;  i               1  [STACK] const unsigned char 
 23255 ;; Auto vars:     Size  Location     Type
 23256 ;;		None
 23257 ;; Return value:  Size  Location     Type
 23258 ;;                  1  [STACK] void 
 23259 ;; Registers used:
 23260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 23261 ;; Tracked objects:
 23262 ;;		On entry : 0/0
 23263 ;;		On exit  : 0/0
 23264 ;;		Unchanged: 0/0
 23265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23270 ;;Total ram usage:        0 bytes
 23271 ;; Hardware stack levels used:    1
 23272 ;; Hardware stack levels required when called:   15
 23273 ;; This function calls:
 23274 ;;		Nothing
 23275 ;; This function is called by:
 23276 ;;		_current_sensor_cal
 23277 ;; This function uses a reentrant model
 23278 ;;
 23279                           
 23280                           	psect	text70
 23281  002074                     __ptext70:
 23282                           	opt callstack 0
 23283  002074                     _clear_switch:
 23284                           	opt callstack 14
 23285                           
 23286                           ;dio.c: 49: void clear_switch(const uint8_t i);dio.c: 50: {;dio.c: 51:  if (i >= 6)
 23287                           ;stkvar	_i @ sp[(0)+-1]
 23288                           
 23289                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23290                           ;incstack = 0
 23291  002074  0EFF               	movlw	-1
 23292  002076  006F FF8C  F02A    	movff	plusw1,btemp
 23293  00207C  0E05               	movlw	5
 23294  00207E  642A               	cpfsgt	btemp^0,c
 23295  002080  D001               	goto	l13657
 23296  002082  D01D               	goto	l2260
 23297  002084                     l13657:
 23298                           
 23299                           ;dio.c: 54:  S.button[i].count = 0;
 23300                           ;stkvar	_i @ sp[(0)+-1]
 23301  002084  0EFF               	movlw	-1
 23302  002086  50E3               	movf	plusw1,w,c
 23303  002088  0D05               	mullw	5
 23304  00208A  0EA5               	movlw	low (_S+1)
 23305  00208C  24F3               	addwf	243,w,c
 23306  00208E  6ED9               	movwf	fsr2l,c
 23307  002090  0E01               	movlw	high (_S+1)
 23308  002092  20F4               	addwfc	prodh,w,c
 23309  002094  6EDA               	movwf	fsr2h,c
 23310  002096  6ADE               	clrf	postinc2,c
 23311  002098  6ADE               	clrf	postinc2,c
 23312  00209A  6ADE               	clrf	postinc2,c
 23313  00209C  6ADD               	clrf	postdec2,c
 23314                           
 23315                           ;dio.c: 55:  S.sw_bitmap &= ~(1 << i);
 23316                           ;stkvar	_i @ sp[(0)+-1]
 23317  00209E  0EFF               	movlw	-1
 23318  0020A0  006F FF8C  F035    	movff	plusw1,btemp+11
 23319  0020A6  0E01               	movlw	1
 23320  0020A8  6E34               	movwf	(btemp+10)^0,c
 23321  0020AA  2A35               	incf	(btemp+11)^0,f,c
 23322  0020AC  D002               	goto	u12744
 23323  0020AE                     u12745:
 23324  0020AE  90D8               	bcf	status,0,c
 23325  0020B0  3634               	rlcf	(btemp+10)^0,f,c
 23326  0020B2                     u12744:
 23327  0020B2  2E35               	decfsz	(btemp+11)^0,f,c
 23328  0020B4  D7FC               	goto	u12745
 23329  0020B6  5034               	movf	(btemp+10)^0,w,c
 23330  0020B8  0AFF               	xorlw	255
 23331  0020BA  0101               	movlb	1	; () banked
 23332  0020BC  17CC               	andwf	(_S+40)& (0+255),f,b	;volatile
 23333  0020BE                     l2260:
 23334                           
 23335                           ; _clear_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 23336  0020BE  52E5               	movf	postdec1,f,c
 23337  0020C0  0012               	return		;funcret
 23338  0020C2                     __end_of_clear_switch:
 23339                           	opt callstack 0
 23340                           
 23341 ;; *************** function _clear_adc_scan *****************
 23342 ;; Defined at:
 23343 ;;		line 103 in file "daq.c"
 23344 ;; Parameters:    Size  Location     Type
 23345 ;;		None
 23346 ;; Auto vars:     Size  Location     Type
 23347 ;;		None
 23348 ;; Return value:  Size  Location     Type
 23349 ;;                  1  [STACK] void 
 23350 ;; Registers used:
 23351 ;;		None
 23352 ;; Tracked objects:
 23353 ;;		On entry : 0/0
 23354 ;;		On exit  : 3F/1
 23355 ;;		Unchanged: 0/0
 23356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23361 ;;Total ram usage:        0 bytes
 23362 ;; Hardware stack levels used:    1
 23363 ;; Hardware stack levels required when called:   15
 23364 ;; This function calls:
 23365 ;;		Nothing
 23366 ;; This function is called by:
 23367 ;;		_main
 23368 ;;		_current_sensor_cal
 23369 ;;		_update_adc_result
 23370 ;; This function uses a reentrant model
 23371 ;;
 23372                           
 23373                           	psect	text71
 23374  002F6E                     __ptext71:
 23375                           	opt callstack 0
 23376  002F6E                     _clear_adc_scan:
 23377                           	opt callstack 13
 23378                           
 23379                           ;daq.c: 105:  R.done = 0;
 23380                           
 23381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23382                           ;incstack = 0
 23383  002F6E  0101               	movlb	1	; () banked
 23384  002F70  6B35               	clrf	(_R+53)& (0+255),b	;volatile
 23385                           
 23386                           ; BSR set to: 1
 23387                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23388  002F72  0012               	return		;funcret
 23389  002F74                     __end_of_clear_adc_scan:
 23390                           	opt callstack 0
 23391                           
 23392 ;; *************** function _cal_current_zero *****************
 23393 ;; Defined at:
 23394 ;;		line 329 in file "daq.c"
 23395 ;; Parameters:    Size  Location     Type
 23396 ;;  mode            1  [STACK] const _Bool 
 23397 ;;  cb              2  [STACK] const short 
 23398 ;;  cp              2  [STACK] const short 
 23399 ;; Auto vars:     Size  Location     Type
 23400 ;;		None
 23401 ;; Return value:  Size  Location     Type
 23402 ;;                  1  [STACK] _Bool 
 23403 ;; Registers used:
 23404 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23405 ;; Tracked objects:
 23406 ;;		On entry : 0/1
 23407 ;;		On exit  : 0/0
 23408 ;;		Unchanged: 0/0
 23409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23414 ;;Total ram usage:        0 bytes
 23415 ;; Hardware stack levels used:    1
 23416 ;; Hardware stack levels required when called:   16
 23417 ;; This function calls:
 23418 ;;		_check_range
 23419 ;; This function is called by:
 23420 ;;		_current_sensor_cal
 23421 ;; This function uses a reentrant model
 23422 ;;
 23423                           
 23424                           	psect	text72
 23425  001262                     __ptext72:
 23426                           	opt callstack 0
 23427  001262                     _cal_current_zero:
 23428                           	opt callstack 13
 23429                           
 23430                           ;daq.c: 329: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 330: {;daq.c: 332:  if (!check_range(cb, 100, 4000))
 23431                           
 23432                           ; BSR set to: 1
 23433                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23434                           ;incstack = 0
 23435  001262  0EA0               	movlw	160
 23436  001264  6EE6               	movwf	postinc1,c
 23437  001266  0E0F               	movlw	15
 23438  001268  6EE6               	movwf	postinc1,c
 23439  00126A  0E64               	movlw	100
 23440  00126C  6EE6               	movwf	postinc1,c
 23441  00126E  0E00               	movlw	0
 23442  001270  6EE6               	movwf	postinc1,c
 23443                           
 23444                           ;stkvar	_cb @ sp[(-4)+-3]
 23445  001272  0EF9               	movlw	-7
 23446  001274  006F FF8F FFE6     	movff	plusw1,postinc1
 23447  00127A  006F FF8F FFE6     	movff	plusw1,postinc1
 23448  001280  ECA7  F00B         	call	_check_range	;wreg free
 23449  001284  502A               	movf	btemp^0,w,c
 23450  001286  A4D8               	btfss	status,2,c
 23451  001288  D002               	goto	l13633
 23452  00128A                     u12700:
 23453                           
 23454                           ;daq.c: 333:   return 0;
 23455  00128A  0E00               	movlw	0
 23456  00128C  D019               	goto	L21
 23457  00128E                     l13633:
 23458                           
 23459                           ;daq.c: 335:  if (!check_range(cp, 100, 4000))
 23460  00128E  0EA0               	movlw	160
 23461  001290  6EE6               	movwf	postinc1,c
 23462  001292  0E0F               	movlw	15
 23463  001294  6EE6               	movwf	postinc1,c
 23464  001296  0E64               	movlw	100
 23465  001298  6EE6               	movwf	postinc1,c
 23466  00129A  0E00               	movlw	0
 23467  00129C  6EE6               	movwf	postinc1,c
 23468                           
 23469                           ;stkvar	_cp @ sp[(-4)+-5]
 23470  00129E  0EF7               	movlw	-9
 23471  0012A0  006F FF8F FFE6     	movff	plusw1,postinc1
 23472  0012A6  006F FF8F FFE6     	movff	plusw1,postinc1
 23473  0012AC  ECA7  F00B         	call	_check_range	;wreg free
 23474  0012B0  502A               	movf	btemp^0,w,c
 23475  0012B2  B4D8               	btfsc	status,2,c
 23476  0012B4  D7EA               	goto	u12700
 23477                           
 23478                           ;daq.c: 338:  if (!mode)
 23479                           ;stkvar	_mode @ sp[(0)+-1]
 23480  0012B6  0EFF               	movlw	-1
 23481  0012B8  50E3               	movf	plusw1,w,c
 23482  0012BA  A4D8               	btfss	status,2,c
 23483  0012BC  D003               	goto	l13645
 23484  0012BE                     u12720:
 23485                           
 23486                           ;daq.c: 339:   return 1;
 23487  0012BE  0E01               	movlw	1
 23488  0012C0                     L21:
 23489  0012C0  6E2A               	movwf	btemp^0,c
 23490  0012C2  D013               	goto	l2069
 23491  0012C4                     l13645:
 23492                           
 23493                           ;daq.c: 341:  R.n_offset[0] = cb;
 23494                           ;stkvar	_cb @ sp[(0)+-3]
 23495  0012C4  0EFD               	movlw	-3
 23496  0012C6  006F FF8C  F126    	movff	plusw1,_R+38	;volatile
 23497  0012CC  0EFE               	movlw	-2
 23498  0012CE  006F FF8C  F127    	movff	plusw1,_R+39	;volatile
 23499                           
 23500                           ;daq.c: 342:  R.n_offset[1] = cp;
 23501                           ;stkvar	_cp @ sp[(0)+-5]
 23502  0012D4  0EFB               	movlw	-5
 23503  0012D6  006F FF8C  F128    	movff	plusw1,_R+40	;volatile
 23504  0012DC  0EFC               	movlw	-4
 23505  0012DE  006F FF8C  F129    	movff	plusw1,_R+41	;volatile
 23506                           
 23507                           ;daq.c: 343:  R.c_zero_cal = 1;
 23508  0012E4  0101               	movlb	1	; () banked
 23509  0012E6  8597               	bsf	(_R+151)& (0+255),2,b	;volatile
 23510  0012E8  D7EA               	goto	u12720
 23511  0012EA                     l2069:
 23512                           
 23513                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 23514  0012EA  0EFB               	movlw	251
 23515  0012EC  26E1               	addwf	fsr1l,f,c
 23516  0012EE  0EFF               	movlw	255
 23517  0012F0  22E2               	addwfc	fsr1h,f,c
 23518  0012F2  0012               	return		;funcret
 23519  0012F4                     __end_of_cal_current_zero:
 23520                           	opt callstack 0
 23521                           
 23522 ;; *************** function _cal_current_10A *****************
 23523 ;; Defined at:
 23524 ;;		line 350 in file "daq.c"
 23525 ;; Parameters:    Size  Location     Type
 23526 ;;  mode            1  [STACK] const _Bool 
 23527 ;;  cb              2  [STACK] const short 
 23528 ;;  cp              2  [STACK] const short 
 23529 ;;  scaleb          4  [STACK] const float 
 23530 ;;  scalep          4  [STACK] const float 
 23531 ;; Auto vars:     Size  Location     Type
 23532 ;;		None
 23533 ;; Return value:  Size  Location     Type
 23534 ;;                  1  [STACK] _Bool 
 23535 ;; Registers used:
 23536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 23537 ;; Tracked objects:
 23538 ;;		On entry : 0/1
 23539 ;;		On exit  : 0/0
 23540 ;;		Unchanged: 0/0
 23541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23546 ;;Total ram usage:        0 bytes
 23547 ;; Hardware stack levels used:    1
 23548 ;; Hardware stack levels required when called:   16
 23549 ;; This function calls:
 23550 ;;		_check_range
 23551 ;; This function is called by:
 23552 ;;		_current_sensor_cal
 23553 ;; This function uses a reentrant model
 23554 ;;
 23555                           
 23556                           	psect	text73
 23557  00099E                     __ptext73:
 23558                           	opt callstack 0
 23559  00099E                     _cal_current_10A:
 23560                           	opt callstack 13
 23561                           
 23562                           ;daq.c: 350: _Bool cal_current_10A(const _Bool mode, const int16_t cb, const int16_t cp,
      +                           const float scaleb, const float scalep);daq.c: 351: {;daq.c: 352:  if (!check_range(cb,
      +                           100, 4050))
 23563                           
 23564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 13, argsize = 13 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 23565                           ;incstack = 0
 23566  00099E  0ED2               	movlw	210
 23567  0009A0  6EE6               	movwf	postinc1,c
 23568  0009A2  0E0F               	movlw	15
 23569  0009A4  6EE6               	movwf	postinc1,c
 23570  0009A6  0E64               	movlw	100
 23571  0009A8  6EE6               	movwf	postinc1,c
 23572  0009AA  0E00               	movlw	0
 23573  0009AC  6EE6               	movwf	postinc1,c
 23574                           
 23575                           ;stkvar	_cb @ sp[(-4)+-3]
 23576  0009AE  0EF9               	movlw	-7
 23577  0009B0  006F FF8F FFE6     	movff	plusw1,postinc1
 23578  0009B6  006F FF8F FFE6     	movff	plusw1,postinc1
 23579  0009BC  ECA7  F00B         	call	_check_range	;wreg free
 23580  0009C0  502A               	movf	btemp^0,w,c
 23581  0009C2  A4D8               	btfss	status,2,c
 23582  0009C4  D002               	goto	l13667
 23583  0009C6                     u12750:
 23584                           
 23585                           ;daq.c: 353:   return 0;
 23586  0009C6  0E00               	movlw	0
 23587  0009C8  D019               	goto	L22
 23588  0009CA                     l13667:
 23589                           
 23590                           ;daq.c: 355:  if (!check_range(cp, 100, 4278))
 23591  0009CA  0EB6               	movlw	182
 23592  0009CC  6EE6               	movwf	postinc1,c
 23593  0009CE  0E10               	movlw	16
 23594  0009D0  6EE6               	movwf	postinc1,c
 23595  0009D2  0E64               	movlw	100
 23596  0009D4  6EE6               	movwf	postinc1,c
 23597  0009D6  0E00               	movlw	0
 23598  0009D8  6EE6               	movwf	postinc1,c
 23599                           
 23600                           ;stkvar	_cp @ sp[(-4)+-5]
 23601  0009DA  0EF7               	movlw	-9
 23602  0009DC  006F FF8F FFE6     	movff	plusw1,postinc1
 23603  0009E2  006F FF8F FFE6     	movff	plusw1,postinc1
 23604  0009E8  ECA7  F00B         	call	_check_range	;wreg free
 23605  0009EC  502A               	movf	btemp^0,w,c
 23606  0009EE  B4D8               	btfsc	status,2,c
 23607  0009F0  D7EA               	goto	u12750
 23608                           
 23609                           ;daq.c: 358:  if (!mode)
 23610                           ;stkvar	_mode @ sp[(0)+-1]
 23611  0009F2  0EFF               	movlw	-1
 23612  0009F4  50E3               	movf	plusw1,w,c
 23613  0009F6  A4D8               	btfss	status,2,c
 23614  0009F8  D003               	goto	l13679
 23615  0009FA                     u12770:
 23616                           
 23617                           ;daq.c: 359:   return 1;
 23618  0009FA  0E01               	movlw	1
 23619  0009FC                     L22:
 23620  0009FC  6E2A               	movwf	btemp^0,c
 23621  0009FE  D029               	goto	l2075
 23622  000A00                     l13679:
 23623                           
 23624                           ;daq.c: 361:  R.n_scalar[0] = scaleb;
 23625                           ;stkvar	_scaleb @ sp[(0)+-9]
 23626  000A00  50E1               	movf	fsr1l,w,c
 23627  000A02  0FF7               	addlw	-9
 23628  000A04  6ED9               	movwf	fsr2l,c
 23629  000A06  50E2               	movf	fsr1h,w,c
 23630  000A08  6EDA               	movwf	fsr2h,c
 23631  000A0A  0EFF               	movlw	255
 23632  000A0C  22DA               	addwfc	fsr2h,f,c
 23633  000A0E  006F FF78  F12A    	movff	postinc2,_R+42	;volatile
 23634  000A14  006F FF78  F12B    	movff	postinc2,_R+43	;volatile
 23635  000A1A  006F FF78  F12C    	movff	postinc2,_R+44	;volatile
 23636  000A20  006F FF78  F12D    	movff	postinc2,_R+45	;volatile
 23637                           
 23638                           ;daq.c: 362:  R.n_scalar[1] = scalep;
 23639                           ;stkvar	_scalep @ sp[(0)+-13]
 23640  000A26  50E1               	movf	fsr1l,w,c
 23641  000A28  0FF3               	addlw	-13
 23642  000A2A  6ED9               	movwf	fsr2l,c
 23643  000A2C  50E2               	movf	fsr1h,w,c
 23644  000A2E  6EDA               	movwf	fsr2h,c
 23645  000A30  0EFF               	movlw	255
 23646  000A32  22DA               	addwfc	fsr2h,f,c
 23647  000A34  006F FF78  F12E    	movff	postinc2,_R+46	;volatile
 23648  000A3A  006F FF78  F12F    	movff	postinc2,_R+47	;volatile
 23649  000A40  006F FF78  F130    	movff	postinc2,_R+48	;volatile
 23650  000A46  006F FF78  F131    	movff	postinc2,_R+49	;volatile
 23651                           
 23652                           ;daq.c: 363:  R.c_scale_cal = 1;
 23653  000A4C  0101               	movlb	1	; () banked
 23654  000A4E  8797               	bsf	(_R+151)& (0+255),3,b	;volatile
 23655  000A50  D7D4               	goto	u12770
 23656  000A52                     l2075:
 23657                           
 23658                           ; _cal_current_10A: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          13, argsize = 13, vargsize = 0
 23659  000A52  0EF3               	movlw	243
 23660  000A54  26E1               	addwf	fsr1l,f,c
 23661  000A56  0EFF               	movlw	255
 23662  000A58  22E2               	addwfc	fsr1h,f,c
 23663  000A5A  0012               	return		;funcret
 23664  000A5C                     __end_of_cal_current_10A:
 23665                           	opt callstack 0
 23666                           
 23667 ;; *************** function _check_range *****************
 23668 ;; Defined at:
 23669 ;;		line 317 in file "daq.c"
 23670 ;; Parameters:    Size  Location     Type
 23671 ;;  value           2  [STACK] const short 
 23672 ;;  window          2  [STACK] const short 
 23673 ;;  standard        2  [STACK] const short 
 23674 ;; Auto vars:     Size  Location     Type
 23675 ;;		None
 23676 ;; Return value:  Size  Location     Type
 23677 ;;                  1  [STACK] _Bool 
 23678 ;; Registers used:
 23679 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23680 ;; Tracked objects:
 23681 ;;		On entry : 0/1
 23682 ;;		On exit  : 0/0
 23683 ;;		Unchanged: 0/0
 23684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23689 ;;Total ram usage:        0 bytes
 23690 ;; Hardware stack levels used:    1
 23691 ;; Hardware stack levels required when called:   15
 23692 ;; This function calls:
 23693 ;;		Nothing
 23694 ;; This function is called by:
 23695 ;;		_cal_current_zero
 23696 ;;		_cal_current_10A
 23697 ;; This function uses a reentrant model
 23698 ;;
 23699                           
 23700                           	psect	text74
 23701  00174E                     __ptext74:
 23702                           	opt callstack 0
 23703  00174E                     _check_range:
 23704                           	opt callstack 13
 23705                           
 23706                           ;daq.c: 317: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 318: {;daq.c: 319:  if (value > (standard + window))
 23707                           ;stkvar	_value @ sp[(0)+-2]
 23708                           ;stkvar	_window @ sp[(0)+-4]
 23709                           ;stkvar	_standard @ sp[(0)+-6]
 23710                           
 23711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23712                           ;incstack = 0
 23713  00174E  0EFA               	movlw	-6
 23714  001750  006F FF8C  F034    	movff	plusw1,btemp+10
 23715  001756  0EFB               	movlw	-5
 23716  001758  006F FF8C  F035    	movff	plusw1,btemp+11
 23717  00175E  0EFC               	movlw	-4
 23718  001760  50E3               	movf	plusw1,w,c
 23719  001762  2634               	addwf	(btemp+10)^0,f,c
 23720  001764  0EFD               	movlw	-3
 23721  001766  50E3               	movf	plusw1,w,c
 23722  001768  2235               	addwfc	(btemp+11)^0,f,c
 23723  00176A  0EFE               	movlw	-2
 23724  00176C  50E3               	movf	plusw1,w,c
 23725  00176E  5C34               	subwf	(btemp+10)^0,w,c
 23726  001770  5035               	movf	(btemp+11)^0,w,c
 23727  001772  0A80               	xorlw	128
 23728  001774  6E2A               	movwf	btemp^0,c
 23729  001776  0EFF               	movlw	-1
 23730  001778  50E3               	movf	plusw1,w,c
 23731  00177A  0A80               	xorlw	128
 23732  00177C  582A               	subwfb	btemp^0,w,c
 23733  00177E  B0D8               	btfsc	status,0,c
 23734  001780  D002               	goto	l13005
 23735  001782                     u12430:
 23736                           
 23737                           ;daq.c: 320:   return 0;
 23738  001782  0E00               	movlw	0
 23739  001784  D01E               	goto	L23
 23740  001786                     l13005:
 23741                           
 23742                           ;daq.c: 321:  if (value < (standard - window))
 23743                           ;stkvar	_window @ sp[(0)+-4]
 23744                           ;stkvar	_standard @ sp[(0)+-6]
 23745  001786  0EFA               	movlw	-6
 23746  001788  006F FF8C  F034    	movff	plusw1,btemp+10
 23747  00178E  0EFB               	movlw	-5
 23748  001790  006F FF8C  F035    	movff	plusw1,btemp+11
 23749  001796  0EFC               	movlw	-4
 23750  001798  50E3               	movf	plusw1,w,c
 23751  00179A  5E34               	subwf	(btemp+10)^0,f,c
 23752  00179C  0EFD               	movlw	-3
 23753  00179E  50E3               	movf	plusw1,w,c
 23754  0017A0  5A35               	subwfb	(btemp+11)^0,f,c
 23755                           
 23756                           ;stkvar	_value @ sp[(0)+-2]
 23757  0017A2  0EFE               	movlw	-2
 23758  0017A4  006F FF8C  F02A    	movff	plusw1,btemp
 23759  0017AA  5034               	movf	(btemp+10)^0,w,c
 23760  0017AC  5C2A               	subwf	btemp^0,w,c
 23761  0017AE  0EFF               	movlw	-1
 23762  0017B0  50E3               	movf	plusw1,w,c
 23763  0017B2  0A80               	xorlw	128
 23764  0017B4  6E2A               	movwf	btemp^0,c
 23765  0017B6  5035               	movf	(btemp+11)^0,w,c
 23766  0017B8  0A80               	xorlw	128
 23767  0017BA  582A               	subwfb	btemp^0,w,c
 23768  0017BC  A0D8               	btfss	status,0,c
 23769  0017BE  D7E1               	goto	u12430
 23770                           
 23771                           ;daq.c: 323:  return 1;
 23772  0017C0  0E01               	movlw	1
 23773  0017C2                     L23:
 23774  0017C2  6E2A               	movwf	btemp^0,c
 23775                           
 23776                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 23777  0017C4  0EFA               	movlw	250
 23778  0017C6  26E1               	addwf	fsr1l,f,c
 23779  0017C8  0EFF               	movlw	255
 23780  0017CA  22E2               	addwfc	fsr1h,f,c
 23781  0017CC  0012               	return		;funcret
 23782  0017CE                     __end_of_check_range:
 23783                           	opt callstack 0
 23784                           
 23785 ;; *************** function _convert_adc_data *****************
 23786 ;; Defined at:
 23787 ;;		line 51 in file "mbmc.c"
 23788 ;; Parameters:    Size  Location     Type
 23789 ;;		None
 23790 ;; Auto vars:     Size  Location     Type
 23791 ;;  i               1  [STACK] unsigned char 
 23792 ;; Return value:  Size  Location     Type
 23793 ;;                  1  [STACK] void 
 23794 ;; Registers used:
 23795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23796 ;; Tracked objects:
 23797 ;;		On entry : 0/2
 23798 ;;		On exit  : 0/0
 23799 ;;		Unchanged: 0/0
 23800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23805 ;;Total ram usage:        0 bytes
 23806 ;; Hardware stack levels used:    1
 23807 ;; Hardware stack levels required when called:   18
 23808 ;; This function calls:
 23809 ;;		_conv_raw_result
 23810 ;;		_lp_filter
 23811 ;; This function is called by:
 23812 ;;		_main
 23813 ;; This function uses a reentrant model
 23814 ;;
 23815                           
 23816                           	psect	text75
 23817  000BD2                     __ptext75:
 23818                           	opt callstack 0
 23819  000BD2                     _convert_adc_data:
 23820                           	opt callstack 0
 23821                           
 23822                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23823  000BD2  52E6               	movf	postinc1,f,c
 23824                           
 23825                           ;mbmc.c: 53:  uint8_t i = 0;
 23826                           ;stkvar	_i @ sp[(-1)+0]
 23827                           
 23828                           ;incstack = 0
 23829  000BD4  0EFF               	movlw	-1
 23830  000BD6  6AE3               	clrf	plusw1,c
 23831  000BD8                     l14567:
 23832                           
 23833                           ;mbmc.c: 56:   if (V.calib) {
 23834  000BD8  0102               	movlb	2	; () banked
 23835  000BDA  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 23836  000BDC  B4D8               	btfsc	status,2,c
 23837  000BDE  D01B               	goto	l14571
 23838                           
 23839                           ; BSR set to: 2
 23840                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 23841  000BE0  0E01               	movlw	1
 23842  000BE2  6EE6               	movwf	postinc1,c
 23843                           
 23844                           ;stkvar	_i @ sp[(-2)+0]
 23845  000BE4  0EFE               	movlw	-2
 23846  000BE6  50E3               	movf	plusw1,w,c
 23847  000BE8  6EE6               	movwf	postinc1,c
 23848  000BEA  0E01               	movlw	1
 23849  000BEC  6EE6               	movwf	postinc1,c
 23850                           
 23851                           ;stkvar	_i @ sp[(-4)+0]
 23852  000BEE  0EFC               	movlw	-4
 23853  000BF0  50E3               	movf	plusw1,w,c
 23854  000BF2  6EE6               	movwf	postinc1,c
 23855  000BF4  ECC0  F0C8         	call	_conv_raw_result	;wreg free
 23856  000BF8  0060  F0AB  FFE6   	movff	btemp,postinc1
 23857  000BFE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23858  000C04  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 23859  000C0A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 23860  000C10  ECF6  F0EE         	call	_lp_filter	;wreg free
 23861  000C14  D01A               	goto	L24
 23862  000C16                     l14571:
 23863                           
 23864                           ; BSR set to: 2
 23865                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 23866  000C16  0E00               	movlw	0
 23867  000C18  6EE6               	movwf	postinc1,c
 23868                           
 23869                           ;stkvar	_i @ sp[(-2)+0]
 23870  000C1A  0EFE               	movlw	-2
 23871  000C1C  50E3               	movf	plusw1,w,c
 23872  000C1E  6EE6               	movwf	postinc1,c
 23873  000C20  0E00               	movlw	0
 23874  000C22  6EE6               	movwf	postinc1,c
 23875                           
 23876                           ;stkvar	_i @ sp[(-4)+0]
 23877  000C24  0EFC               	movlw	-4
 23878  000C26  50E3               	movf	plusw1,w,c
 23879  000C28  6EE6               	movwf	postinc1,c
 23880  000C2A  ECC0  F0C8         	call	_conv_raw_result	;wreg free
 23881  000C2E  0060  F0AB  FFE6   	movff	btemp,postinc1
 23882  000C34  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23883  000C3A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 23884  000C40  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 23885  000C46  ECF6  F0EE         	call	_lp_filter	;wreg free
 23886  000C4A                     L24:
 23887                           
 23888                           ;stkvar	_i @ sp[(-1)+0]
 23889  000C4A  0EFF               	movlw	-1
 23890  000C4C  50E3               	movf	plusw1,w,c
 23891  000C4E  0D04               	mullw	4
 23892  000C50  0EFF               	movlw	low _C
 23893  000C52  24F3               	addwf	243,w,c
 23894  000C54  6ED9               	movwf	fsr2l,c
 23895  000C56  0E08               	movlw	high _C
 23896  000C58  20F4               	addwfc	prodh,w,c
 23897  000C5A  6EDA               	movwf	fsr2h,c
 23898  000C5C  0060  F0AB  FFDE   	movff	btemp,postinc2
 23899  000C62  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 23900  000C68  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 23901  000C6E  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 23902                           
 23903                           ;mbmc.c: 61:  } while (++i < 16);
 23904                           ;stkvar	_i @ sp[(-1)+0]
 23905  000C74  0EFF               	movlw	-1
 23906  000C76  2AE3               	incf	plusw1,f,c
 23907  000C78  0EFF               	movlw	-1
 23908  000C7A  006F FF8C  F02A    	movff	plusw1,btemp
 23909  000C80  0E0F               	movlw	15
 23910  000C82  642A               	cpfsgt	btemp^0,c
 23911  000C84  D7A9               	goto	l14567
 23912                           
 23913                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23914  000C86  52E5               	movf	postdec1,f,c
 23915  000C88  0012               	return		;funcret
 23916  000C8A                     __end_of_convert_adc_data:
 23917                           	opt callstack 0
 23918                           
 23919 ;; *************** function _clear_hid_pflags *****************
 23920 ;; Defined at:
 23921 ;;		line 67 in file "hid.c"
 23922 ;; Parameters:    Size  Location     Type
 23923 ;;  h               2  [STACK] PTR struct H_data
 23924 ;;		 -> H(9), 
 23925 ;; Auto vars:     Size  Location     Type
 23926 ;;		None
 23927 ;; Return value:  Size  Location     Type
 23928 ;;                  1  [STACK] void 
 23929 ;; Registers used:
 23930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 23931 ;; Tracked objects:
 23932 ;;		On entry : 3E/0
 23933 ;;		On exit  : 0/0
 23934 ;;		Unchanged: 0/0
 23935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23940 ;;Total ram usage:        0 bytes
 23941 ;; Hardware stack levels used:    1
 23942 ;; Hardware stack levels required when called:   15
 23943 ;; This function calls:
 23944 ;;		Nothing
 23945 ;; This function is called by:
 23946 ;;		_main
 23947 ;; This function uses a reentrant model
 23948 ;;
 23949                           
 23950                           	psect	text76
 23951  001B56                     __ptext76:
 23952                           	opt callstack 0
 23953  001B56                     _clear_hid_pflags:
 23954                           	opt callstack 15
 23955                           
 23956                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 23957                           ;stkvar	_h @ sp[(0)+-2]
 23958                           
 23959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23960                           ;incstack = 0
 23961  001B56  0EFE               	movlw	-2
 23962  001B58  006F FF8C  F034    	movff	plusw1,btemp+10
 23963  001B5E  0EFF               	movlw	-1
 23964  001B60  006F FF8C  F035    	movff	plusw1,btemp+11
 23965  001B66  0E03               	movlw	3
 23966  001B68  2434               	addwf	(btemp+10)^0,w,c
 23967  001B6A  6ED9               	movwf	fsr2l,c
 23968  001B6C  0E00               	movlw	0
 23969  001B6E  2035               	addwfc	(btemp+11)^0,w,c
 23970  001B70  6EDA               	movwf	fsr2h,c
 23971  001B72  0E00               	movlw	0
 23972  001B74  6EDF               	movwf	indf2,c
 23973                           
 23974                           ;hid.c: 70:  h->enter_p = SW_OFF;
 23975                           ;stkvar	_h @ sp[(0)+-2]
 23976  001B76  0EFE               	movlw	-2
 23977  001B78  006F FF8C  F034    	movff	plusw1,btemp+10
 23978  001B7E  0EFF               	movlw	-1
 23979  001B80  006F FF8C  F035    	movff	plusw1,btemp+11
 23980  001B86  0E05               	movlw	5
 23981  001B88  2434               	addwf	(btemp+10)^0,w,c
 23982  001B8A  6ED9               	movwf	fsr2l,c
 23983  001B8C  0E00               	movlw	0
 23984  001B8E  2035               	addwfc	(btemp+11)^0,w,c
 23985  001B90  6EDA               	movwf	fsr2h,c
 23986  001B92  0E00               	movlw	0
 23987  001B94  6EDF               	movwf	indf2,c
 23988                           
 23989                           ;hid.c: 71:  h->calib_p = SW_OFF;
 23990                           ;stkvar	_h @ sp[(0)+-2]
 23991  001B96  0EFE               	movlw	-2
 23992  001B98  006F FF8C  F034    	movff	plusw1,btemp+10
 23993  001B9E  0EFF               	movlw	-1
 23994  001BA0  006F FF8C  F035    	movff	plusw1,btemp+11
 23995  001BA6  0E07               	movlw	7
 23996  001BA8  2434               	addwf	(btemp+10)^0,w,c
 23997  001BAA  6ED9               	movwf	fsr2l,c
 23998  001BAC  0E00               	movlw	0
 23999  001BAE  2035               	addwfc	(btemp+11)^0,w,c
 24000  001BB0  6EDA               	movwf	fsr2h,c
 24001  001BB2  0E00               	movlw	0
 24002  001BB4  6EDF               	movwf	indf2,c
 24003                           
 24004                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 24005  001BB6  52E5               	movf	postdec1,f,c
 24006  001BB8  52E5               	movf	postdec1,f,c
 24007  001BBA  0012               	return		;funcret
 24008  001BBC                     __end_of_clear_hid_pflags:
 24009                           	opt callstack 0
 24010                           
 24011 ;; *************** function _check_help *****************
 24012 ;; Defined at:
 24013 ;;		line 40 in file "mconfig.c"
 24014 ;; Parameters:    Size  Location     Type
 24015 ;;  flipper         1  [STACK] const _Bool 
 24016 ;; Auto vars:     Size  Location     Type
 24017 ;;  estatus         1    0        _Bool 
 24018 ;; Return value:  Size  Location     Type
 24019 ;;                  1  [STACK] _Bool 
 24020 ;; Registers used:
 24021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24022 ;; Tracked objects:
 24023 ;;		On entry : 3F/2
 24024 ;;		On exit  : 0/0
 24025 ;;		Unchanged: 0/0
 24026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24031 ;;Total ram usage:        0 bytes
 24032 ;; Hardware stack levels used:    1
 24033 ;; Hardware stack levels required when called:   27
 24034 ;; This function calls:
 24035 ;;		_StartTimer
 24036 ;;		_TimerDone
 24037 ;;		_display_help
 24038 ;;		_display_info
 24039 ;;		_get_vterm_ptr
 24040 ;;		_help_button
 24041 ;;		_mode_lamp_bright
 24042 ;;		_mode_lamp_dim
 24043 ;;		_set_display_info
 24044 ;;		_set_temp_display_help
 24045 ;;		_set_vterm
 24046 ;;		_sprintf
 24047 ;;		_update_lcd
 24048 ;;		_vterm_dump
 24049 ;; This function is called by:
 24050 ;;		_main
 24051 ;; This function uses a reentrant model
 24052 ;;
 24053                           
 24054                           	psect	text77
 24055  01D80C                     __ptext77:
 24056                           	opt callstack 0
 24057  01D80C                     _check_help:
 24058                           	opt callstack 3
 24059                           
 24060                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 24061                           
 24062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24063                           ;incstack = 0
 24064  01D80C  ECC4  F012         	call	_help_button	;wreg free
 24065  01D810  502A               	movf	btemp^0,w,c
 24066  01D812  B4D8               	btfsc	status,2,c
 24067  01D814  D0D0               	goto	l17635
 24068  01D816  ECA5  F017         	call	_display_info	;wreg free
 24069  01D81A  042A               	decf	btemp^0,w,c
 24070  01D81C  B4D8               	btfsc	status,2,c
 24071  01D81E  D0CB               	goto	l17635
 24072                           
 24073                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 24074  01D820  0EDC               	movlw	220
 24075  01D822  6EE6               	movwf	postinc1,c
 24076  01D824  0E05               	movlw	5
 24077  01D826  6EE6               	movwf	postinc1,c
 24078  01D828  0E0B               	movlw	11
 24079  01D82A  6EE6               	movwf	postinc1,c
 24080  01D82C  EC09  F012         	call	_StartTimer	;wreg free
 24081                           
 24082                           ;mconfig.c: 48:   if (V.debug)
 24083  01D830  0102               	movlb	2	; () banked
 24084  01D832  B39F               	btfsc	(_V+152)& (0+255),1,b	;volatile
 24085                           
 24086                           ; BSR set to: 2
 24087                           ;mconfig.c: 49:    vterm_dump();
 24088  01D834  EC3A  F0F2         	call	_vterm_dump	;wreg free
 24089                           
 24090                           ;mconfig.c: 51:   set_vterm(1);
 24091  01D838  0E01               	movlw	1
 24092  01D83A  6EE6               	movwf	postinc1,c
 24093  01D83C  EC9C  F016         	call	_set_vterm	;wreg free
 24094                           
 24095                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 24096  01D840  ECA5  F017         	call	_display_info	;wreg free
 24097  01D844  502A               	movf	btemp^0,w,c
 24098  01D846  6EE6               	movwf	postinc1,c
 24099  01D848  EC4D  F017         	call	_set_temp_display_help	;wreg free
 24100                           
 24101                           ; BSR set to: 2
 24102                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 24103  01D84C  0E01               	movlw	1
 24104  01D84E  6EE6               	movwf	postinc1,c
 24105  01D850  ECAB  F016         	call	_set_display_info	;wreg free
 24106                           
 24107                           ;mconfig.c: 54:   if (flipper) {
 24108                           ;stkvar	_flipper @ sp[(0)+-1]
 24109  01D854  0EFF               	movlw	-1
 24110  01D856  50E3               	movf	plusw1,w,c
 24111  01D858  B4D8               	btfsc	status,2,c
 24112  01D85A  D019               	goto	l17621
 24113                           
 24114                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 24115  01D85C  0EB6               	movlw	low STR_83
 24116  01D85E  6EE6               	movwf	postinc1,c
 24117  01D860  0EFF               	movlw	high STR_83
 24118  01D862  6EE6               	movwf	postinc1,c
 24119  01D864  0E5E               	movlw	low STR_85
 24120  01D866  6EE6               	movwf	postinc1,c
 24121  01D868  0EFF               	movlw	high STR_85
 24122  01D86A  6EE6               	movwf	postinc1,c
 24123  01D86C  0E01               	movlw	1
 24124  01D86E  6EE6               	movwf	postinc1,c
 24125  01D870  0E00               	movlw	0
 24126  01D872  6EE6               	movwf	postinc1,c
 24127  01D874  EC13  F014         	call	_get_vterm_ptr	;wreg free
 24128  01D878  0060  F0AB  FFE6   	movff	btemp,postinc1
 24129  01D87E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24130  01D884  0E06               	movlw	6
 24131  01D886  6EE6               	movwf	postinc1,c
 24132  01D888  EC59  F0FF         	call	_sprintf	;wreg free
 24133                           
 24134                           ;mconfig.c: 56:   } else {
 24135  01D88C  D018               	goto	l1840
 24136  01D88E                     l17621:
 24137                           
 24138                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 24139  01D88E  0ECC               	movlw	low STR_84
 24140  01D890  6EE6               	movwf	postinc1,c
 24141  01D892  0EFF               	movlw	high STR_84
 24142  01D894  6EE6               	movwf	postinc1,c
 24143  01D896  0E5E               	movlw	low STR_85
 24144  01D898  6EE6               	movwf	postinc1,c
 24145  01D89A  0EFF               	movlw	high STR_85
 24146  01D89C  6EE6               	movwf	postinc1,c
 24147  01D89E  0E01               	movlw	1
 24148  01D8A0  6EE6               	movwf	postinc1,c
 24149  01D8A2  0E00               	movlw	0
 24150  01D8A4  6EE6               	movwf	postinc1,c
 24151  01D8A6  EC13  F014         	call	_get_vterm_ptr	;wreg free
 24152  01D8AA  0060  F0AB  FFE6   	movff	btemp,postinc1
 24153  01D8B0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24154  01D8B6  0E06               	movlw	6
 24155  01D8B8  6EE6               	movwf	postinc1,c
 24156  01D8BA  EC59  F0FF         	call	_sprintf	;wreg free
 24157  01D8BE                     l1840:
 24158                           
 24159                           ; BSR set to: 0
 24160                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 24161  01D8BE  0102               	movlb	2	; () banked
 24162  01D8C0  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 24163  01D8C2  32E8               	rrcf	wreg,f,c
 24164  01D8C4  32E8               	rrcf	wreg,f,c
 24165  01D8C6  0B03               	andlw	3
 24166  01D8C8  0D2C               	mullw	44
 24167  01D8CA  0E16               	movlw	22
 24168  01D8CC  26F3               	addwf	243,f,c
 24169  01D8CE  0E00               	movlw	0
 24170  01D8D0  22F4               	addwfc	244,f,c
 24171  01D8D2  0E23               	movlw	low _T
 24172  01D8D4  6E34               	movwf	(btemp+10)^0,c
 24173  01D8D6  0EF8               	movlw	high _T
 24174  01D8D8  6E35               	movwf	(btemp+11)^0,c
 24175  01D8DA  50F3               	movf	243,w,c
 24176  01D8DC  2634               	addwf	(btemp+10)^0,f,c
 24177  01D8DE  50F4               	movf	244,w,c
 24178  01D8E0  2235               	addwfc	(btemp+11)^0,f,c
 24179  01D8E2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24180  01D8E8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24181  01D8EE  0EC2               	movlw	low STR_87
 24182  01D8F0  6EE6               	movwf	postinc1,c
 24183  01D8F2  0EFF               	movlw	high STR_87
 24184  01D8F4  6EE6               	movwf	postinc1,c
 24185  01D8F6  0E01               	movlw	1
 24186  01D8F8  6EE6               	movwf	postinc1,c
 24187  01D8FA  0E01               	movlw	1
 24188  01D8FC  6EE6               	movwf	postinc1,c
 24189  01D8FE  EC13  F014         	call	_get_vterm_ptr	;wreg free
 24190  01D902  0060  F0AB  FFE6   	movff	btemp,postinc1
 24191  01D908  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24192  01D90E  0E06               	movlw	6
 24193  01D910  6EE6               	movwf	postinc1,c
 24194  01D912  EC59  F0FF         	call	_sprintf	;wreg free
 24195                           
 24196                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 24197  01D916  0102               	movlb	2	; () banked
 24198  01D918  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 24199  01D91A  32E8               	rrcf	wreg,f,c
 24200  01D91C  32E8               	rrcf	wreg,f,c
 24201  01D91E  0B03               	andlw	3
 24202  01D920  0D2C               	mullw	44
 24203  01D922  0E23               	movlw	low _T
 24204  01D924  6E34               	movwf	(btemp+10)^0,c
 24205  01D926  0EF8               	movlw	high _T
 24206  01D928  6E35               	movwf	(btemp+11)^0,c
 24207  01D92A  50F3               	movf	243,w,c
 24208  01D92C  2634               	addwf	(btemp+10)^0,f,c
 24209  01D92E  50F4               	movf	244,w,c
 24210  01D930  2235               	addwfc	(btemp+11)^0,f,c
 24211  01D932  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24212  01D938  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24213  01D93E  0EC2               	movlw	low STR_87
 24214  01D940  6EE6               	movwf	postinc1,c
 24215  01D942  0EFF               	movlw	high STR_87
 24216  01D944  6EE6               	movwf	postinc1,c
 24217  01D946  0E01               	movlw	1
 24218  01D948  6EE6               	movwf	postinc1,c
 24219  01D94A  0E02               	movlw	2
 24220  01D94C  6EE6               	movwf	postinc1,c
 24221  01D94E  EC13  F014         	call	_get_vterm_ptr	;wreg free
 24222  01D952  0060  F0AB  FFE6   	movff	btemp,postinc1
 24223  01D958  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24224  01D95E  0E06               	movlw	6
 24225  01D960  6EE6               	movwf	postinc1,c
 24226  01D962  EC59  F0FF         	call	_sprintf	;wreg free
 24227                           
 24228                           ; BSR set to: 0
 24229                           ;mconfig.c: 61:   V.help_id++;
 24230  01D966  EE20  F29F         	lfsr	2,_V+152	;volatile
 24231  01D96A  38DF               	swapf	223,w,c
 24232  01D96C  6E35               	movwf	(btemp+11)^0,c
 24233  01D96E  3235               	rrcf	(btemp+11)^0,f,c
 24234  01D970  3035               	rrcf	(btemp+11)^0,w,c
 24235  01D972  0B03               	andlw	3
 24236  01D974  6E35               	movwf	(btemp+11)^0,c
 24237  01D976  2A35               	incf	(btemp+11)^0,f,c
 24238  01D978  3A35               	swapf	(btemp+11)^0,f,c
 24239  01D97A  3635               	rlcf	(btemp+11)^0,f,c
 24240  01D97C  3635               	rlcf	(btemp+11)^0,f,c
 24241  01D97E  50DF               	movf	223,w,c
 24242  01D980  1835               	xorwf	(btemp+11)^0,w,c
 24243  01D982  0B3F               	andlw	-193
 24244  01D984  1835               	xorwf	(btemp+11)^0,w,c
 24245  01D986  6EDF               	movwf	223,c
 24246                           
 24247                           ; BSR set to: 0
 24248                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 24249  01D988  0EB8               	movlw	184
 24250  01D98A  6EE6               	movwf	postinc1,c
 24251  01D98C  0E0B               	movlw	11
 24252  01D98E  6EE6               	movwf	postinc1,c
 24253  01D990  0E09               	movlw	9
 24254  01D992  6EE6               	movwf	postinc1,c
 24255  01D994  EC09  F012         	call	_StartTimer	;wreg free
 24256                           
 24257                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 24258  01D998  0EB8               	movlw	184
 24259  01D99A  6EE6               	movwf	postinc1,c
 24260  01D99C  0E0B               	movlw	11
 24261  01D99E  6EE6               	movwf	postinc1,c
 24262  01D9A0  0E07               	movlw	7
 24263  01D9A2  6EE6               	movwf	postinc1,c
 24264  01D9A4  EC09  F012         	call	_StartTimer	;wreg free
 24265                           
 24266                           ;mconfig.c: 64:   mode_lamp_bright();
 24267  01D9A8  EC64  F017         	call	_mode_lamp_bright	;wreg free
 24268                           
 24269                           ;mconfig.c: 65:   update_lcd(1);
 24270  01D9AC  0E01               	movlw	1
 24271  01D9AE  6EE6               	movwf	postinc1,c
 24272  01D9B0  EC0B  F0F8         	call	_update_lcd	;wreg free
 24273                           
 24274                           ;mconfig.c: 67:  } else {
 24275  01D9B4  D032               	goto	l1841
 24276  01D9B6                     l17635:
 24277                           
 24278                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 24279  01D9B6  0E09               	movlw	9
 24280  01D9B8  6EE6               	movwf	postinc1,c
 24281  01D9BA  EC95  F014         	call	_TimerDone	;wreg free
 24282  01D9BE  502A               	movf	btemp^0,w,c
 24283  01D9C0  B4D8               	btfsc	status,2,c
 24284  01D9C2  D02B               	goto	l1841
 24285                           
 24286                           ;mconfig.c: 69:    set_vterm(0);
 24287  01D9C4  0E00               	movlw	0
 24288  01D9C6  6EE6               	movwf	postinc1,c
 24289  01D9C8  EC9C  F016         	call	_set_vterm	;wreg free
 24290                           
 24291                           ;mconfig.c: 70:    V.help = 0;
 24292  01D9CC  0102               	movlb	2	; () banked
 24293  01D9CE  959F               	bcf	(_V+152)& (0+255),2,b	;volatile
 24294                           
 24295                           ; BSR set to: 2
 24296                           ;mconfig.c: 71:    set_display_info(display_help());
 24297  01D9D0  ECA9  F017         	call	_display_help	;wreg free
 24298  01D9D4  502A               	movf	btemp^0,w,c
 24299  01D9D6  6EE6               	movwf	postinc1,c
 24300  01D9D8  ECAB  F016         	call	_set_display_info	;wreg free
 24301                           
 24302                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 24303  01D9DC  0060  FA67  FFE6   	movff	_V+146,postinc1
 24304  01D9E2  0060  FA6B  FFE6   	movff	_V+147,postinc1
 24305  01D9E8  ECD5  F016         	call	_mode_lamp_dim	;wreg free
 24306                           
 24307                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 24308  01D9EC  0E0B               	movlw	11
 24309  01D9EE  6EE6               	movwf	postinc1,c
 24310  01D9F0  EC95  F014         	call	_TimerDone	;wreg free
 24311  01D9F4  502A               	movf	btemp^0,w,c
 24312  01D9F6  B4D8               	btfsc	status,2,c
 24313  01D9F8  D010               	goto	l1841
 24314                           
 24315                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 24316  01D9FA  0102               	movlb	2	; () banked
 24317  01D9FC  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
 24318  01D9FE  A4D8               	btfss	status,2,c
 24319  01DA00  D002               	goto	u17200
 24320  01DA02  0E01               	movlw	1
 24321  01DA04  D001               	goto	u17210
 24322  01DA06                     u17200:
 24323  01DA06  0E00               	movlw	0
 24324  01DA08                     u17210:
 24325  01DA08  6FAF               	movwf	(_V+168)& (0+255),b	;volatile
 24326                           
 24327                           ; BSR set to: 2
 24328                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 24329  01DA0A  0EDC               	movlw	220
 24330  01DA0C  6EE6               	movwf	postinc1,c
 24331  01DA0E  0E05               	movlw	5
 24332  01DA10  6EE6               	movwf	postinc1,c
 24333  01DA12  0E0B               	movlw	11
 24334  01DA14  6EE6               	movwf	postinc1,c
 24335  01DA16  EC09  F012         	call	_StartTimer	;wreg free
 24336  01DA1A                     l1841:
 24337                           
 24338                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 24339  01DA1A  52E5               	movf	postdec1,f,c
 24340  01DA1C  0012               	return		;funcret
 24341  01DA1E                     __end_of_check_help:
 24342                           	opt callstack 0
 24343                           
 24344 ;; *************** function _vterm_dump *****************
 24345 ;; Defined at:
 24346 ;;		line 124 in file "mconfig.c"
 24347 ;; Parameters:    Size  Location     Type
 24348 ;;		None
 24349 ;; Auto vars:     Size  Location     Type
 24350 ;;		None
 24351 ;; Return value:  Size  Location     Type
 24352 ;;                  1  [STACK] void 
 24353 ;; Registers used:
 24354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24355 ;; Tracked objects:
 24356 ;;		On entry : 3F/2
 24357 ;;		On exit  : 0/0
 24358 ;;		Unchanged: 0/0
 24359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24364 ;;Total ram usage:        0 bytes
 24365 ;; Hardware stack levels used:    1
 24366 ;; Hardware stack levels required when called:   26
 24367 ;; This function calls:
 24368 ;;		_WaitMs
 24369 ;;		_eaDogM_WriteStringAtPos
 24370 ;;		_get_vterm_ptr
 24371 ;;		_sprintf
 24372 ;;		_wait_lcd_done
 24373 ;; This function is called by:
 24374 ;;		_check_help
 24375 ;; This function uses a reentrant model
 24376 ;;
 24377                           
 24378                           	psect	text78
 24379  01E474                     __ptext78:
 24380                           	opt callstack 0
 24381  01E474                     _vterm_dump:
 24382                           	opt callstack 3
 24383                           
 24384                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 24385                           
 24386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24387                           ;incstack = 0
 24388  01E474  0E01               	movlw	1
 24389  01E476  6EE6               	movwf	postinc1,c
 24390  01E478  0E00               	movlw	0
 24391  01E47A  6EE6               	movwf	postinc1,c
 24392  01E47C  EC13  F014         	call	_get_vterm_ptr	;wreg free
 24393  01E480  0060  F0AB  FFE6   	movff	btemp,postinc1
 24394  01E486  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24395  01E48C  0E00               	movlw	0
 24396  01E48E  6EE6               	movwf	postinc1,c
 24397  01E490  0E00               	movlw	0
 24398  01E492  6EE6               	movwf	postinc1,c
 24399  01E494  EC13  F014         	call	_get_vterm_ptr	;wreg free
 24400  01E498  0060  F0AB  FFE6   	movff	btemp,postinc1
 24401  01E49E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24402  01E4A4  0EA7               	movlw	low STR_89
 24403  01E4A6  6EE6               	movwf	postinc1,c
 24404  01E4A8  0EFF               	movlw	high STR_89
 24405  01E4AA  6EE6               	movwf	postinc1,c
 24406  01E4AC  0E08               	movlw	low (_V+1)
 24407  01E4AE  6EE6               	movwf	postinc1,c
 24408  01E4B0  0E02               	movlw	high (_V+1)
 24409  01E4B2  6EE6               	movwf	postinc1,c
 24410  01E4B4  0E08               	movlw	8
 24411  01E4B6  6EE6               	movwf	postinc1,c
 24412  01E4B8  EC59  F0FF         	call	_sprintf	;wreg free
 24413                           
 24414                           ; BSR set to: 0
 24415                           ;mconfig.c: 127:  wait_lcd_done();
 24416  01E4BC  EC1A  F016         	call	_wait_lcd_done	;wreg free
 24417                           
 24418                           ; BSR set to: 0
 24419                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 24420  01E4C0  0E08               	movlw	low (_V+1)
 24421  01E4C2  6EE6               	movwf	postinc1,c
 24422  01E4C4  0E02               	movlw	high (_V+1)
 24423  01E4C6  6EE6               	movwf	postinc1,c
 24424  01E4C8  0E00               	movlw	0
 24425  01E4CA  6EE6               	movwf	postinc1,c
 24426  01E4CC  0E00               	movlw	0
 24427  01E4CE  6EE6               	movwf	postinc1,c
 24428  01E4D0  EC7A  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24429                           
 24430                           ; BSR set to: 59
 24431                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 24432  01E4D4  0E01               	movlw	1
 24433  01E4D6  6EE6               	movwf	postinc1,c
 24434  01E4D8  0E01               	movlw	1
 24435  01E4DA  6EE6               	movwf	postinc1,c
 24436  01E4DC  EC13  F014         	call	_get_vterm_ptr	;wreg free
 24437  01E4E0  0060  F0AB  FFE6   	movff	btemp,postinc1
 24438  01E4E6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24439  01E4EC  0E00               	movlw	0
 24440  01E4EE  6EE6               	movwf	postinc1,c
 24441  01E4F0  0E01               	movlw	1
 24442  01E4F2  6EE6               	movwf	postinc1,c
 24443  01E4F4  EC13  F014         	call	_get_vterm_ptr	;wreg free
 24444  01E4F8  0060  F0AB  FFE6   	movff	btemp,postinc1
 24445  01E4FE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24446  01E504  0EA7               	movlw	low STR_89
 24447  01E506  6EE6               	movwf	postinc1,c
 24448  01E508  0EFF               	movlw	high STR_89
 24449  01E50A  6EE6               	movwf	postinc1,c
 24450  01E50C  0E08               	movlw	low (_V+1)
 24451  01E50E  6EE6               	movwf	postinc1,c
 24452  01E510  0E02               	movlw	high (_V+1)
 24453  01E512  6EE6               	movwf	postinc1,c
 24454  01E514  0E08               	movlw	8
 24455  01E516  6EE6               	movwf	postinc1,c
 24456  01E518  EC59  F0FF         	call	_sprintf	;wreg free
 24457                           
 24458                           ; BSR set to: 0
 24459                           ;mconfig.c: 130:  wait_lcd_done();
 24460  01E51C  EC1A  F016         	call	_wait_lcd_done	;wreg free
 24461                           
 24462                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 24463  01E520  0E08               	movlw	low (_V+1)
 24464  01E522  6EE6               	movwf	postinc1,c
 24465  01E524  0E02               	movlw	high (_V+1)
 24466  01E526  6EE6               	movwf	postinc1,c
 24467  01E528  0E00               	movlw	0
 24468  01E52A  6EE6               	movwf	postinc1,c
 24469  01E52C  0E01               	movlw	1
 24470  01E52E  6EE6               	movwf	postinc1,c
 24471  01E530  EC7A  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24472                           
 24473                           ;mconfig.c: 132:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 24474  01E534  0E01               	movlw	1
 24475  01E536  6EE6               	movwf	postinc1,c
 24476  01E538  0E02               	movlw	2
 24477  01E53A  6EE6               	movwf	postinc1,c
 24478  01E53C  EC13  F014         	call	_get_vterm_ptr	;wreg free
 24479  01E540  0060  F0AB  FFE6   	movff	btemp,postinc1
 24480  01E546  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24481  01E54C  0E00               	movlw	0
 24482  01E54E  6EE6               	movwf	postinc1,c
 24483  01E550  0E02               	movlw	2
 24484  01E552  6EE6               	movwf	postinc1,c
 24485  01E554  EC13  F014         	call	_get_vterm_ptr	;wreg free
 24486  01E558  0060  F0AB  FFE6   	movff	btemp,postinc1
 24487  01E55E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24488  01E564  0EA7               	movlw	low STR_89
 24489  01E566  6EE6               	movwf	postinc1,c
 24490  01E568  0EFF               	movlw	high STR_89
 24491  01E56A  6EE6               	movwf	postinc1,c
 24492  01E56C  0E08               	movlw	low (_V+1)
 24493  01E56E  6EE6               	movwf	postinc1,c
 24494  01E570  0E02               	movlw	high (_V+1)
 24495  01E572  6EE6               	movwf	postinc1,c
 24496  01E574  0E08               	movlw	8
 24497  01E576  6EE6               	movwf	postinc1,c
 24498  01E578  EC59  F0FF         	call	_sprintf	;wreg free
 24499                           
 24500                           ; BSR set to: 0
 24501                           ;mconfig.c: 133:  wait_lcd_done();
 24502  01E57C  EC1A  F016         	call	_wait_lcd_done	;wreg free
 24503                           
 24504                           ; BSR set to: 0
 24505                           ;mconfig.c: 134:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 24506  01E580  0E08               	movlw	low (_V+1)
 24507  01E582  6EE6               	movwf	postinc1,c
 24508  01E584  0E02               	movlw	high (_V+1)
 24509  01E586  6EE6               	movwf	postinc1,c
 24510  01E588  0E00               	movlw	0
 24511  01E58A  6EE6               	movwf	postinc1,c
 24512  01E58C  0E02               	movlw	2
 24513  01E58E  6EE6               	movwf	postinc1,c
 24514  01E590  EC7A  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24515                           
 24516                           ; BSR set to: 59
 24517                           ;mconfig.c: 135:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(3, 0), get_vterm_ptr(3,
      +                           1));
 24518  01E594  0E01               	movlw	1
 24519  01E596  6EE6               	movwf	postinc1,c
 24520  01E598  0E03               	movlw	3
 24521  01E59A  6EE6               	movwf	postinc1,c
 24522  01E59C  EC13  F014         	call	_get_vterm_ptr	;wreg free
 24523  01E5A0  0060  F0AB  FFE6   	movff	btemp,postinc1
 24524  01E5A6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24525  01E5AC  0E00               	movlw	0
 24526  01E5AE  6EE6               	movwf	postinc1,c
 24527  01E5B0  0E03               	movlw	3
 24528  01E5B2  6EE6               	movwf	postinc1,c
 24529  01E5B4  EC13  F014         	call	_get_vterm_ptr	;wreg free
 24530  01E5B8  0060  F0AB  FFE6   	movff	btemp,postinc1
 24531  01E5BE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24532  01E5C4  0EA7               	movlw	low STR_89
 24533  01E5C6  6EE6               	movwf	postinc1,c
 24534  01E5C8  0EFF               	movlw	high STR_89
 24535  01E5CA  6EE6               	movwf	postinc1,c
 24536  01E5CC  0E08               	movlw	low (_V+1)
 24537  01E5CE  6EE6               	movwf	postinc1,c
 24538  01E5D0  0E02               	movlw	high (_V+1)
 24539  01E5D2  6EE6               	movwf	postinc1,c
 24540  01E5D4  0E08               	movlw	8
 24541  01E5D6  6EE6               	movwf	postinc1,c
 24542  01E5D8  EC59  F0FF         	call	_sprintf	;wreg free
 24543                           
 24544                           ; BSR set to: 0
 24545                           ;mconfig.c: 136:  wait_lcd_done();
 24546  01E5DC  EC1A  F016         	call	_wait_lcd_done	;wreg free
 24547                           
 24548                           ;mconfig.c: 137:  eaDogM_WriteStringAtPos(3, 0, V.buf);
 24549  01E5E0  0E08               	movlw	low (_V+1)
 24550  01E5E2  6EE6               	movwf	postinc1,c
 24551  01E5E4  0E02               	movlw	high (_V+1)
 24552  01E5E6  6EE6               	movwf	postinc1,c
 24553  01E5E8  0E00               	movlw	0
 24554  01E5EA  6EE6               	movwf	postinc1,c
 24555  01E5EC  0E03               	movlw	3
 24556  01E5EE  6EE6               	movwf	postinc1,c
 24557  01E5F0  EC7A  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24558                           
 24559                           ; BSR set to: 59
 24560                           ;mconfig.c: 138:  WaitMs(3000);
 24561  01E5F4  0EB8               	movlw	184
 24562  01E5F6  6EE6               	movwf	postinc1,c
 24563  01E5F8  0E0B               	movlw	11
 24564  01E5FA  6EE6               	movwf	postinc1,c
 24565  01E5FC  EC17  F013         	call	_WaitMs	;wreg free
 24566                           
 24567                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 24568  01E600  0012               	return		;funcret
 24569  01E602                     __end_of_vterm_dump:
 24570                           	opt callstack 0
 24571                           
 24572 ;; *************** function _sprintf *****************
 24573 ;; Defined at:
 24574 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 24575 ;; Parameters:    Size  Location     Type
 24576 ;;  s               2  [STACK] PTR unsigned char 
 24577 ;;		 -> D.lcd(640), D(642), port_data(512), V(181), 
 24578 ;;  fmt             2  [STACK] PTR const unsigned char 
 24579 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 24580 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 24581 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 24582 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 24583 ;;		 -> STR_86(19), STR_85(19), STR_81(14), STR_80(28), 
 24584 ;;		 -> STR_79(28), STR_78(28), STR_77(22), STR_76(22), 
 24585 ;;		 -> STR_75(22), STR_74(22), STR_73(22), STR_72(22), 
 24586 ;;		 -> STR_71(22), STR_70(22), STR_69(22), STR_68(19), 
 24587 ;;		 -> STR_67(21), STR_66(21), STR_65(21), STR_64(22), 
 24588 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(22), 
 24589 ;;		 -> STR_59(22), STR_58(22), STR_57(22), STR_56(22), 
 24590 ;;		 -> STR_55(21), STR_54(22), STR_53(22), STR_52(22), 
 24591 ;;		 -> STR_51(22), STR_50(22), STR_49(22), STR_48(24), 
 24592 ;;		 -> STR_47(24), STR_46(24), STR_45(30), STR_44(24), 
 24593 ;;		 -> STR_43(24), STR_42(23), STR_41(23), STR_40(23), 
 24594 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 24595 ;;		 -> STR_35(23), STR_34(23), STR_33(23), STR_32(23), 
 24596 ;;		 -> STR_31(23), STR_30(18), STR_29(17), STR_28(17), 
 24597 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(14), 
 24598 ;;		 -> STR_23(27), STR_22(27), STR_21(23), STR_20(22), 
 24599 ;;		 -> STR_19(22), STR_18(22), STR_17(22), STR_16(23), 
 24600 ;;		 -> STR_15(23), STR_14(23), STR_13(26), STR_12(22), 
 24601 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 24602 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 24603 ;;		 -> STR_2(21), STR_1(21), 
 24604 ;; Auto vars:     Size  Location     Type
 24605 ;;  f               6  [STACK] struct _IO_FILE
 24606 ;;  ap              2  [STACK] PTR void [1]
 24607 ;;		 -> ?_printf(2), ?_sprintf(2), 
 24608 ;;  ret             2    0        int 
 24609 ;; Return value:  Size  Location     Type
 24610 ;;                  2  [STACK] int 
 24611 ;; Registers used:
 24612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24613 ;; Tracked objects:
 24614 ;;		On entry : 0/2
 24615 ;;		On exit  : 3F/0
 24616 ;;		Unchanged: 0/0
 24617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24622 ;;Total ram usage:        0 bytes
 24623 ;; Hardware stack levels used:    1
 24624 ;; Hardware stack levels required when called:   23
 24625 ;; This function calls:
 24626 ;;		_vfprintf
 24627 ;; This function is called by:
 24628 ;;		_main
 24629 ;;		_current_sensor_cal
 24630 ;;		_display_history
 24631 ;;		_check_help
 24632 ;;		_vterm_dump
 24633 ;;		_calc_bsoc
 24634 ;; This function uses a reentrant model
 24635 ;;
 24636                           
 24637                           	psect	text79
 24638  01FEB2                     __ptext79:
 24639                           	opt callstack 0
 24640  01FEB2                     _sprintf:
 24641                           	opt callstack 0
 24642                           
 24643                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24644  01FEB2  0E08               	movlw	8
 24645  01FEB4  26E1               	addwf	fsr1l,f,c
 24646  01FEB6  0E00               	movlw	0
 24647  01FEB8  22E2               	addwfc	fsr1h,f,c
 24648                           
 24649                           ;incstack = 0
 24650 ;; hardware stack exceeded
 24651  01FEBA  0EFE               	movlw	254
 24652  01FEBC  6E34               	movwf	(btemp+10)^0,c
 24653  01FEBE  0EFF               	movlw	255
 24654  01FEC0  6E35               	movwf	(btemp+11)^0,c
 24655                           
 24656                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 24657  01FEC2  0EF5               	movlw	245
 24658  01FEC4  24E1               	addwf	fsr1l,w,c
 24659  01FEC6  6E32               	movwf	(btemp+8)^0,c
 24660  01FEC8  0EFF               	movlw	255
 24661  01FECA  20E2               	addwfc	fsr1h,w,c
 24662  01FECC  6E33               	movwf	(btemp+9)^0,c
 24663  01FECE  5034               	movf	(btemp+10)^0,w,c
 24664  01FED0  2632               	addwf	(btemp+8)^0,f,c
 24665  01FED2  5035               	movf	(btemp+11)^0,w,c
 24666  01FED4  2233               	addwfc	(btemp+9)^0,f,c
 24667                           
 24668                           ;stkvar	_ap @ sp[(-8)+6]
 24669  01FED6  0EFF               	movlw	-1
 24670  01FED8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 24671  01FEDE  0EFE               	movlw	-2
 24672  01FEE0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 24673                           
 24674                           ;stkvar	_s @ sp[(-8)+-3]
 24675  01FEE6  0EF5               	movlw	-11
 24676  01FEE8  006F FF8C  F034    	movff	plusw1,btemp+10
 24677  01FEEE  0EF6               	movlw	-10
 24678  01FEF0  006F FF8C  F035    	movff	plusw1,btemp+11
 24679                           
 24680                           ;stkvar	_f @ sp[(-8)+0]
 24681  01FEF6  0EF9               	movlw	-7
 24682  01FEF8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24683  01FEFE  0EF8               	movlw	-8
 24684  01FF00  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 24685                           
 24686                           ;stkvar	_f @ sp[(-8)+0]
 24687  01FF06  0EFA               	movlw	250
 24688  01FF08  24E1               	addwf	fsr1l,w,c
 24689  01FF0A  6ED9               	movwf	fsr2l,c
 24690  01FF0C  0EFF               	movlw	255
 24691  01FF0E  20E2               	addwfc	fsr1h,w,c
 24692  01FF10  6EDA               	movwf	fsr2h,c
 24693  01FF12  0E00               	movlw	0
 24694  01FF14  6EDE               	movwf	postinc2,c
 24695  01FF16  0E00               	movlw	0
 24696  01FF18  6EDD               	movwf	postdec2,c
 24697                           
 24698                           ;stkvar	_f @ sp[(-8)+0]
 24699  01FF1A  0EFC               	movlw	252
 24700  01FF1C  24E1               	addwf	fsr1l,w,c
 24701  01FF1E  6ED9               	movwf	fsr2l,c
 24702  01FF20  0EFF               	movlw	255
 24703  01FF22  20E2               	addwfc	fsr1h,w,c
 24704  01FF24  6EDA               	movwf	fsr2h,c
 24705  01FF26  0E00               	movlw	0
 24706  01FF28  6EDE               	movwf	postinc2,c
 24707  01FF2A  0E00               	movlw	0
 24708  01FF2C  6EDD               	movwf	postdec2,c
 24709                           
 24710                           ;stkvar	_ap @ sp[(-8)+6]
 24711  01FF2E  0EFE               	movlw	254
 24712  01FF30  24E1               	addwf	fsr1l,w,c
 24713  01FF32  6E2A               	movwf	btemp^0,c
 24714  01FF34  0EFF               	movlw	255
 24715  01FF36  20E2               	addwfc	fsr1h,w,c
 24716  01FF38  6E2B               	movwf	(btemp+1)^0,c
 24717  01FF3A  0060  F0AB  FFE6   	movff	btemp,postinc1
 24718  01FF40  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24719                           
 24720                           ;stkvar	_fmt @ sp[(-10)+-5]
 24721  01FF46  0EF1               	movlw	-15
 24722  01FF48  006F FF8F FFE6     	movff	plusw1,postinc1
 24723  01FF4E  006F FF8F FFE6     	movff	plusw1,postinc1
 24724                           
 24725                           ;stkvar	_f @ sp[(-12)+0]
 24726  01FF54  0EF4               	movlw	244
 24727  01FF56  24E1               	addwf	fsr1l,w,c
 24728  01FF58  6E2A               	movwf	btemp^0,c
 24729  01FF5A  0EFF               	movlw	255
 24730  01FF5C  20E2               	addwfc	fsr1h,w,c
 24731  01FF5E  6E2B               	movwf	(btemp+1)^0,c
 24732  01FF60  0060  F0AB  FFE6   	movff	btemp,postinc1
 24733  01FF66  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24734  01FF6C  ECF7  F006         	call	_vfprintf	;wreg free
 24735                           
 24736                           ; BSR set to: 0
 24737                           ;stkvar	_f @ sp[(-8)+0]
 24738  01FF70  0EFA               	movlw	250
 24739  01FF72  24E1               	addwf	fsr1l,w,c
 24740  01FF74  6ED9               	movwf	fsr2l,c
 24741  01FF76  0EFF               	movlw	255
 24742  01FF78  20E2               	addwfc	fsr1h,w,c
 24743  01FF7A  6EDA               	movwf	fsr2h,c
 24744  01FF7C  006F FF78  F034    	movff	postinc2,btemp+10
 24745  01FF82  006F FF74  F035    	movff	postdec2,btemp+11
 24746                           
 24747                           ;stkvar	_s @ sp[(-8)+-3]
 24748  01FF88  0EF5               	movlw	-11
 24749  01FF8A  006F FF8C  F032    	movff	plusw1,btemp+8
 24750  01FF90  0EF6               	movlw	-10
 24751  01FF92  006F FF8C  F033    	movff	plusw1,btemp+9
 24752  01FF98  5034               	movf	(btemp+10)^0,w,c
 24753  01FF9A  2432               	addwf	(btemp+8)^0,w,c
 24754  01FF9C  6ED9               	movwf	fsr2l,c
 24755  01FF9E  5035               	movf	(btemp+11)^0,w,c
 24756  01FFA0  2033               	addwfc	(btemp+9)^0,w,c
 24757  01FFA2  6EDA               	movwf	fsr2h,c
 24758  01FFA4  0E00               	movlw	0
 24759  01FFA6  6EDF               	movwf	indf2,c
 24760                           
 24761                           ; BSR set to: 0
 24762                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 24763  01FFA8  0EF8               	movlw	248
 24764  01FFAA  26E1               	addwf	fsr1l,f,c
 24765  01FFAC  0EFF               	movlw	255
 24766  01FFAE  22E2               	addwfc	fsr1h,f,c
 24767  01FFB0  52E5               	movf	postdec1,f,c
 24768  01FFB2  50E7               	movf	indf1,w,c
 24769  01FFB4  5EE1               	subwf	fsr1l,f,c
 24770  01FFB6  0E00               	movlw	0
 24771  01FFB8  5AE2               	subwfb	fsr1h,f,c
 24772  01FFBA  0012               	return		;funcret
 24773  01FFBC                     __end_of_sprintf:
 24774                           	opt callstack 0
 24775                           
 24776 ;; *************** function _get_vterm_ptr *****************
 24777 ;; Defined at:
 24778 ;;		line 119 in file "mconfig.c"
 24779 ;; Parameters:    Size  Location     Type
 24780 ;;  line            1  [STACK] const unsigned char 
 24781 ;;  vterm           1  [STACK] const unsigned char 
 24782 ;; Auto vars:     Size  Location     Type
 24783 ;;		None
 24784 ;; Return value:  Size  Location     Type
 24785 ;;                  2  [STACK] PTR unsigned char 
 24786 ;; Registers used:
 24787 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24788 ;; Tracked objects:
 24789 ;;		On entry : 0/2
 24790 ;;		On exit  : 0/0
 24791 ;;		Unchanged: 0/0
 24792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24797 ;;Total ram usage:        0 bytes
 24798 ;; Hardware stack levels used:    1
 24799 ;; Hardware stack levels required when called:   15
 24800 ;; This function calls:
 24801 ;;		Nothing
 24802 ;; This function is called by:
 24803 ;;		_main
 24804 ;;		_current_sensor_cal
 24805 ;;		_display_history
 24806 ;;		_check_help
 24807 ;;		_vterm_dump
 24808 ;; This function uses a reentrant model
 24809 ;;
 24810                           
 24811                           	psect	text80
 24812  002826                     __ptext80:
 24813                           	opt callstack 0
 24814  002826                     _get_vterm_ptr:
 24815                           	opt callstack 15
 24816                           
 24817                           ;mconfig.c: 119: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 120: {;mconfig.c: 121:  return D.lcd[vterm & 0x03][line & 0x03];
 24818                           ;stkvar	_vterm @ sp[(0)+-2]
 24819                           
 24820                           ; BSR set to: 0
 24821                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24822                           ;incstack = 0
 24823  002826  0EFE               	movlw	-2
 24824  002828  50E3               	movf	plusw1,w,c
 24825  00282A  0B03               	andlw	3
 24826  00282C  0DA0               	mullw	160
 24827  00282E  0E3F               	movlw	low _D
 24828  002830  6E2A               	movwf	btemp^0,c
 24829  002832  0E0A               	movlw	high _D
 24830  002834  6E2B               	movwf	(btemp+1)^0,c
 24831  002836  50F3               	movf	243,w,c
 24832  002838  262A               	addwf	btemp^0,f,c
 24833  00283A  50F4               	movf	244,w,c
 24834  00283C  222B               	addwfc	(btemp+1)^0,f,c
 24835                           
 24836                           ;stkvar	_line @ sp[(0)+-1]
 24837  00283E  0EFF               	movlw	-1
 24838  002840  50E3               	movf	plusw1,w,c
 24839  002842  0B03               	andlw	3
 24840  002844  0D28               	mullw	40
 24841  002846  50F3               	movf	243,w,c
 24842  002848  262A               	addwf	btemp^0,f,c
 24843  00284A  50F4               	movf	244,w,c
 24844  00284C  222B               	addwfc	(btemp+1)^0,f,c
 24845                           
 24846                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 24847  00284E  52E5               	movf	postdec1,f,c
 24848  002850  52E5               	movf	postdec1,f,c
 24849  002852  0012               	return		;funcret
 24850  002854                     __end_of_get_vterm_ptr:
 24851                           	opt callstack 0
 24852                           
 24853 ;; *************** function _WaitMs *****************
 24854 ;; Defined at:
 24855 ;;		line 32 in file "timers.c"
 24856 ;; Parameters:    Size  Location     Type
 24857 ;;  numMilliseco    2  [STACK] const unsigned short 
 24858 ;; Auto vars:     Size  Location     Type
 24859 ;;		None
 24860 ;; Return value:  Size  Location     Type
 24861 ;;                  1  [STACK] void 
 24862 ;; Registers used:
 24863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24864 ;; Tracked objects:
 24865 ;;		On entry : 0/2
 24866 ;;		On exit  : 0/0
 24867 ;;		Unchanged: 0/0
 24868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24873 ;;Total ram usage:        0 bytes
 24874 ;; Hardware stack levels used:    1
 24875 ;; Hardware stack levels required when called:   16
 24876 ;; This function calls:
 24877 ;;		_StartTimer
 24878 ;;		_TimerDone
 24879 ;; This function is called by:
 24880 ;;		_main
 24881 ;;		_current_sensor_cal
 24882 ;;		_display_history
 24883 ;;		_vterm_dump
 24884 ;; This function uses a reentrant model
 24885 ;;
 24886                           
 24887                           	psect	text81
 24888  00262E                     __ptext81:
 24889                           	opt callstack 0
 24890  00262E                     _WaitMs:
 24891                           	opt callstack 13
 24892                           
 24893                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 24894                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 24895                           
 24896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24897                           ;incstack = 0
 24898  00262E  0EFE               	movlw	-2
 24899  002630  006F FF8F FFE6     	movff	plusw1,postinc1
 24900  002636  006F FF8F FFE6     	movff	plusw1,postinc1
 24901  00263C  0E00               	movlw	0
 24902  00263E  6EE6               	movwf	postinc1,c
 24903  002640  EC09  F012         	call	_StartTimer	;wreg free
 24904                           
 24905                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24906  002644  D005               	goto	l12893
 24907  002646                     l1772:
 24908                           
 24909                           ;timers.c: 36:   __nop();
 24910  002646  F000               	nop	
 24911                           
 24912                           ;timers.c: 37:   __nop();
 24913  002648  F000               	nop	
 24914                           
 24915                           ;timers.c: 38:   __nop();
 24916  00264A  F000               	nop	
 24917                           
 24918                           ;timers.c: 39:   __nop();
 24919  00264C  F000               	nop	
 24920  00264E  0004               	clrwdt		;# 
 24921  002650                     l12893:
 24922                           
 24923                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24924  002650  0E00               	movlw	0
 24925  002652  6EE6               	movwf	postinc1,c
 24926  002654  EC95  F014         	call	_TimerDone	;wreg free
 24927  002658  502A               	movf	btemp^0,w,c
 24928  00265A  B4D8               	btfsc	status,2,c
 24929  00265C  D7F4               	goto	l1772
 24930                           
 24931                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 24932  00265E  52E5               	movf	postdec1,f,c
 24933  002660  52E5               	movf	postdec1,f,c
 24934  002662  0012               	return		;funcret
 24935  002664                     __end_of_WaitMs:
 24936                           	opt callstack 0
 24937                           
 24938 ;; *************** function _update_lcd *****************
 24939 ;; Defined at:
 24940 ;;		line 85 in file "mconfig.c"
 24941 ;; Parameters:    Size  Location     Type
 24942 ;;  vterm           1  [STACK] unsigned char 
 24943 ;; Auto vars:     Size  Location     Type
 24944 ;;		None
 24945 ;; Return value:  Size  Location     Type
 24946 ;;                  1  [STACK] unsigned char 
 24947 ;; Registers used:
 24948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24949 ;; Tracked objects:
 24950 ;;		On entry : 0/0
 24951 ;;		On exit  : 0/0
 24952 ;;		Unchanged: 0/0
 24953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24958 ;;Total ram usage:        0 bytes
 24959 ;; Hardware stack levels used:    1
 24960 ;; Hardware stack levels required when called:   26
 24961 ;; This function calls:
 24962 ;;		_eaDogM_WriteStringAtPos
 24963 ;;		_wait_lcd_done
 24964 ;; This function is called by:
 24965 ;;		_main
 24966 ;;		_current_sensor_cal
 24967 ;;		_display_history
 24968 ;;		_check_help
 24969 ;; This function uses a reentrant model
 24970 ;;
 24971                           
 24972                           	psect	text82
 24973  01F016                     __ptext82:
 24974                           	opt callstack 0
 24975  01F016                     _update_lcd:
 24976                           	opt callstack 4
 24977                           
 24978                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 24979                           ;stkvar	_vterm @ sp[(0)+-1]
 24980                           
 24981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24982                           ;incstack = 0
 24983  01F016  0EFF               	movlw	-1
 24984  01F018  006F FF8C  F02A    	movff	plusw1,btemp
 24985  01F01E  0E03               	movlw	3
 24986  01F020  162A               	andwf	btemp^0,f,c
 24987  01F022  0EFF               	movlw	-1
 24988  01F024  0060  F0AB  FFE3   	movff	btemp,plusw1
 24989                           
 24990                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 24991  01F02A  EE23  F0BF         	lfsr	2,_D+640
 24992  01F02E  A0DF               	btfss	indf2,0,c
 24993  01F030  D004               	goto	l17079
 24994                           
 24995                           ;stkvar	_vterm @ sp[(0)+-1]
 24996  01F032  0EFF               	movlw	-1
 24997  01F034  50E3               	movf	plusw1,w,c
 24998  01F036  B4D8               	btfsc	status,2,c
 24999  01F038  D09C               	goto	l1848
 25000  01F03A                     l17079:
 25001                           
 25002                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 25003                           ;stkvar	_vterm @ sp[(0)+-1]
 25004  01F03A  0EFF               	movlw	-1
 25005  01F03C  50E3               	movf	plusw1,w,c
 25006  01F03E  0DA0               	mullw	160
 25007  01F040  0E53               	movlw	low (_D+20)
 25008  01F042  24F3               	addwf	243,w,c
 25009  01F044  6ED9               	movwf	fsr2l,c
 25010  01F046  0E0A               	movlw	high (_D+20)
 25011  01F048  20F4               	addwfc	prodh,w,c
 25012  01F04A  6EDA               	movwf	fsr2h,c
 25013  01F04C  0E00               	movlw	0
 25014  01F04E  6EDF               	movwf	indf2,c
 25015                           
 25016                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 25017                           ;stkvar	_vterm @ sp[(0)+-1]
 25018  01F050  0EFF               	movlw	-1
 25019  01F052  50E3               	movf	plusw1,w,c
 25020  01F054  0DA0               	mullw	160
 25021  01F056  0E7B               	movlw	low (_D+60)
 25022  01F058  24F3               	addwf	243,w,c
 25023  01F05A  6ED9               	movwf	fsr2l,c
 25024  01F05C  0E0A               	movlw	high (_D+60)
 25025  01F05E  20F4               	addwfc	prodh,w,c
 25026  01F060  6EDA               	movwf	fsr2h,c
 25027  01F062  0E00               	movlw	0
 25028  01F064  6EDF               	movwf	indf2,c
 25029                           
 25030                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 25031                           ;stkvar	_vterm @ sp[(0)+-1]
 25032  01F066  0EFF               	movlw	-1
 25033  01F068  50E3               	movf	plusw1,w,c
 25034  01F06A  0DA0               	mullw	160
 25035  01F06C  0EA3               	movlw	low (_D+100)
 25036  01F06E  24F3               	addwf	243,w,c
 25037  01F070  6ED9               	movwf	fsr2l,c
 25038  01F072  0E0A               	movlw	high (_D+100)
 25039  01F074  20F4               	addwfc	prodh,w,c
 25040  01F076  6EDA               	movwf	fsr2h,c
 25041  01F078  0E00               	movlw	0
 25042  01F07A  6EDF               	movwf	indf2,c
 25043                           
 25044                           ;mconfig.c: 95:  D.lcd[vterm][3][20] = 0;
 25045                           ;stkvar	_vterm @ sp[(0)+-1]
 25046  01F07C  0EFF               	movlw	-1
 25047  01F07E  50E3               	movf	plusw1,w,c
 25048  01F080  0DA0               	mullw	160
 25049  01F082  0ECB               	movlw	low (_D+140)
 25050  01F084  24F3               	addwf	243,w,c
 25051  01F086  6ED9               	movwf	fsr2l,c
 25052  01F088  0E0A               	movlw	high (_D+140)
 25053  01F08A  20F4               	addwfc	prodh,w,c
 25054  01F08C  6EDA               	movwf	fsr2h,c
 25055  01F08E  0E00               	movlw	0
 25056  01F090  6EDF               	movwf	indf2,c
 25057                           
 25058                           ;mconfig.c: 96:  wait_lcd_done();
 25059  01F092  EC1A  F016         	call	_wait_lcd_done	;wreg free
 25060                           
 25061                           ; BSR set to: 0
 25062                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 25063                           ;stkvar	_vterm @ sp[(0)+-1]
 25064  01F096  0EFF               	movlw	-1
 25065  01F098  50E3               	movf	plusw1,w,c
 25066  01F09A  0DA0               	mullw	160
 25067  01F09C  0E3F               	movlw	low _D
 25068  01F09E  6E34               	movwf	(btemp+10)^0,c
 25069  01F0A0  0E0A               	movlw	high _D
 25070  01F0A2  6E35               	movwf	(btemp+11)^0,c
 25071  01F0A4  50F3               	movf	243,w,c
 25072  01F0A6  2634               	addwf	(btemp+10)^0,f,c
 25073  01F0A8  50F4               	movf	244,w,c
 25074  01F0AA  2235               	addwfc	(btemp+11)^0,f,c
 25075  01F0AC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25076  01F0B2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25077  01F0B8  0E00               	movlw	0
 25078  01F0BA  6EE6               	movwf	postinc1,c
 25079  01F0BC  0E00               	movlw	0
 25080  01F0BE  6EE6               	movwf	postinc1,c
 25081  01F0C0  EC7A  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 25082                           
 25083                           ; BSR set to: 59
 25084                           ;mconfig.c: 98:  wait_lcd_done();
 25085  01F0C4  EC1A  F016         	call	_wait_lcd_done	;wreg free
 25086                           
 25087                           ; BSR set to: 0
 25088                           ;mconfig.c: 99:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 25089                           ;stkvar	_vterm @ sp[(0)+-1]
 25090  01F0C8  0EFF               	movlw	-1
 25091  01F0CA  50E3               	movf	plusw1,w,c
 25092  01F0CC  0DA0               	mullw	160
 25093  01F0CE  0E3F               	movlw	low _D
 25094  01F0D0  6E34               	movwf	(btemp+10)^0,c
 25095  01F0D2  0E0A               	movlw	high _D
 25096  01F0D4  6E35               	movwf	(btemp+11)^0,c
 25097  01F0D6  0E28               	movlw	40
 25098  01F0D8  2634               	addwf	(btemp+10)^0,f,c
 25099  01F0DA  0E00               	movlw	0
 25100  01F0DC  2235               	addwfc	(btemp+11)^0,f,c
 25101  01F0DE  50F3               	movf	243,w,c
 25102  01F0E0  2634               	addwf	(btemp+10)^0,f,c
 25103  01F0E2  50F4               	movf	244,w,c
 25104  01F0E4  2235               	addwfc	(btemp+11)^0,f,c
 25105  01F0E6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25106  01F0EC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25107  01F0F2  0E00               	movlw	0
 25108  01F0F4  6EE6               	movwf	postinc1,c
 25109  01F0F6  0E01               	movlw	1
 25110  01F0F8  6EE6               	movwf	postinc1,c
 25111  01F0FA  EC7A  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 25112                           
 25113                           ; BSR set to: 59
 25114                           ;mconfig.c: 100:  wait_lcd_done();
 25115  01F0FE  EC1A  F016         	call	_wait_lcd_done	;wreg free
 25116                           
 25117                           ; BSR set to: 0
 25118                           ;mconfig.c: 101:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 25119                           ;stkvar	_vterm @ sp[(0)+-1]
 25120  01F102  0EFF               	movlw	-1
 25121  01F104  50E3               	movf	plusw1,w,c
 25122  01F106  0DA0               	mullw	160
 25123  01F108  0E3F               	movlw	low _D
 25124  01F10A  6E34               	movwf	(btemp+10)^0,c
 25125  01F10C  0E0A               	movlw	high _D
 25126  01F10E  6E35               	movwf	(btemp+11)^0,c
 25127  01F110  0E50               	movlw	80
 25128  01F112  2634               	addwf	(btemp+10)^0,f,c
 25129  01F114  0E00               	movlw	0
 25130  01F116  2235               	addwfc	(btemp+11)^0,f,c
 25131  01F118  50F3               	movf	243,w,c
 25132  01F11A  2634               	addwf	(btemp+10)^0,f,c
 25133  01F11C  50F4               	movf	244,w,c
 25134  01F11E  2235               	addwfc	(btemp+11)^0,f,c
 25135  01F120  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25136  01F126  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25137  01F12C  0E00               	movlw	0
 25138  01F12E  6EE6               	movwf	postinc1,c
 25139  01F130  0E02               	movlw	2
 25140  01F132  6EE6               	movwf	postinc1,c
 25141  01F134  EC7A  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 25142                           
 25143                           ; BSR set to: 59
 25144                           ;mconfig.c: 102:  wait_lcd_done();
 25145  01F138  EC1A  F016         	call	_wait_lcd_done	;wreg free
 25146                           
 25147                           ; BSR set to: 0
 25148                           ;mconfig.c: 103:  eaDogM_WriteStringAtPos(3, 0, D.lcd[vterm][3]);
 25149                           ;stkvar	_vterm @ sp[(0)+-1]
 25150  01F13C  0EFF               	movlw	-1
 25151  01F13E  50E3               	movf	plusw1,w,c
 25152  01F140  0DA0               	mullw	160
 25153  01F142  0E3F               	movlw	low _D
 25154  01F144  6E34               	movwf	(btemp+10)^0,c
 25155  01F146  0E0A               	movlw	high _D
 25156  01F148  6E35               	movwf	(btemp+11)^0,c
 25157  01F14A  0E78               	movlw	120
 25158  01F14C  2634               	addwf	(btemp+10)^0,f,c
 25159  01F14E  0E00               	movlw	0
 25160  01F150  2235               	addwfc	(btemp+11)^0,f,c
 25161  01F152  50F3               	movf	243,w,c
 25162  01F154  2634               	addwf	(btemp+10)^0,f,c
 25163  01F156  50F4               	movf	244,w,c
 25164  01F158  2235               	addwfc	(btemp+11)^0,f,c
 25165  01F15A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25166  01F160  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25167  01F166  0E00               	movlw	0
 25168  01F168  6EE6               	movwf	postinc1,c
 25169  01F16A  0E03               	movlw	3
 25170  01F16C  6EE6               	movwf	postinc1,c
 25171  01F16E  EC7A  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 25172  01F172                     l1848:
 25173                           
 25174                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 25175  01F172  52E5               	movf	postdec1,f,c
 25176  01F174  0012               	return		;funcret
 25177  01F176                     __end_of_update_lcd:
 25178                           	opt callstack 0
 25179                           
 25180 ;; *************** function _eaDogM_WriteStringAtPos *****************
 25181 ;; Defined at:
 25182 ;;		line 195 in file "eadog.c"
 25183 ;; Parameters:    Size  Location     Type
 25184 ;;  r               1  [STACK] const unsigned char 
 25185 ;;  c               1  [STACK] const unsigned char 
 25186 ;;  strPtr          2  [STACK] PTR unsigned char 
 25187 ;;		 -> D.lcd(640), D(642), V(181), 
 25188 ;; Auto vars:     Size  Location     Type
 25189 ;;  row             1  [STACK] unsigned char 
 25190 ;; Return value:  Size  Location     Type
 25191 ;;                  1  [STACK] void 
 25192 ;; Registers used:
 25193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25194 ;; Tracked objects:
 25195 ;;		On entry : 3F/0
 25196 ;;		On exit  : 3F/3B
 25197 ;;		Unchanged: 0/0
 25198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25203 ;;Total ram usage:        0 bytes
 25204 ;; Hardware stack levels used:    1
 25205 ;; Hardware stack levels required when called:   25
 25206 ;; This function calls:
 25207 ;;		_eaDogM_WriteString
 25208 ;;		_send_lcd_cmd_dma
 25209 ;;		_send_lcd_data_dma
 25210 ;;		_wait_lcd_done
 25211 ;; This function is called by:
 25212 ;;		_update_lcd
 25213 ;;		_vterm_dump
 25214 ;; This function uses a reentrant model
 25215 ;;
 25216                           
 25217                           	psect	text83
 25218  0012F4                     __ptext83:
 25219                           	opt callstack 0
 25220  0012F4                     _eaDogM_WriteStringAtPos:
 25221                           	opt callstack 0
 25222                           
 25223                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25224  0012F4  52E6               	movf	postinc1,f,c
 25225                           
 25226                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 25227                           
 25228                           ;incstack = 0
 25229  0012F6  D013               	goto	l17025
 25230  0012F8                     l17013:
 25231                           
 25232                           ;eadog.c: 201:   row = 0x40;
 25233                           ;stkvar	_row @ sp[(-1)+0]
 25234  0012F8  0EFF               	movlw	-1
 25235  0012FA  6AE3               	clrf	plusw1,c
 25236  0012FC  8CE3               	bsf	plusw1,6,c
 25237                           
 25238                           ;eadog.c: 202:   break;
 25239  0012FE  D025               	goto	l17027
 25240  001300                     l17015:
 25241                           
 25242                           ;eadog.c: 204:   row = 0x14;
 25243                           ;stkvar	_row @ sp[(-1)+0]
 25244  001300  0EFF               	movlw	-1
 25245  001302  6AE3               	clrf	plusw1,c
 25246  001304  84E3               	bsf	plusw1,2,c
 25247  001306  88E3               	bsf	plusw1,4,c	;indir
 25248                           
 25249                           ;eadog.c: 205:   break;
 25250  001308  D020               	goto	l17027
 25251  00130A                     l17017:
 25252                           
 25253                           ;eadog.c: 207:   row = 0x54;
 25254  00130A  0E54               	movlw	84
 25255  00130C  6E35               	movwf	(btemp+11)^0,c
 25256                           
 25257                           ;stkvar	_row @ sp[(-1)+0]
 25258  00130E  0EFF               	movlw	-1
 25259  001310  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25260                           
 25261                           ;eadog.c: 208:   break;
 25262  001316  D019               	goto	l17027
 25263  001318                     l17019:
 25264                           
 25265                           ;eadog.c: 210:   row = 0x00;
 25266                           ;stkvar	_row @ sp[(-1)+0]
 25267  001318  0EFF               	movlw	-1
 25268  00131A  6AE3               	clrf	plusw1,c
 25269                           
 25270                           ;eadog.c: 211:   break;
 25271  00131C  D016               	goto	l17027
 25272  00131E                     l17025:
 25273                           
 25274                           ;stkvar	_r @ sp[(-1)+-1]
 25275  00131E  0EFE               	movlw	-2
 25276  001320  50E3               	movf	plusw1,w,c
 25277  001322  6E34               	movwf	(btemp+10)^0,c
 25278  001324  6A35               	clrf	(btemp+11)^0,c
 25279                           
 25280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25281                           ; Switch size 1, requested type "simple"
 25282                           ; Number of cases is 1, Range of values is 0 to 0
 25283                           ; switch strategies available:
 25284                           ; Name         Instructions Cycles
 25285                           ; simple_byte            4     3 (average)
 25286                           ;	Chosen strategy is simple_byte
 25287  001326  5035               	movf	(btemp+11)^0,w,c
 25288  001328  0A00               	xorlw	0	; case 0
 25289  00132A  A4D8               	btfss	status,2,c
 25290  00132C  D7E5               	goto	l17013
 25291                           
 25292                           ; Switch size 1, requested type "simple"
 25293                           ; Number of cases is 4, Range of values is 0 to 3
 25294                           ; switch strategies available:
 25295                           ; Name         Instructions Cycles
 25296                           ; simple_byte           13     7 (average)
 25297                           ;	Chosen strategy is simple_byte
 25298  00132E  5034               	movf	(btemp+10)^0,w,c
 25299  001330  0A00               	xorlw	0	; case 0
 25300  001332  B4D8               	btfsc	status,2,c
 25301  001334  D7E1               	goto	l17013
 25302  001336  0A01               	xorlw	1	; case 1
 25303  001338  B4D8               	btfsc	status,2,c
 25304  00133A  D7E2               	goto	l17015
 25305  00133C  0A03               	xorlw	3	; case 2
 25306  00133E  B4D8               	btfsc	status,2,c
 25307  001340  D7E4               	goto	l17017
 25308  001342  0A01               	xorlw	1	; case 3
 25309  001344  B4D8               	btfsc	status,2,c
 25310  001346  D7E8               	goto	l17019
 25311  001348  D7D7               	goto	l17013
 25312  00134A                     l17027:
 25313                           
 25314                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 25315  00134A  0E45               	movlw	69
 25316  00134C  6EE6               	movwf	postinc1,c
 25317  00134E  EC8D  F016         	call	_send_lcd_cmd_dma	;wreg free
 25318                           
 25319                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 25320                           ;stkvar	_c @ sp[(-1)+-2]
 25321  001352  0EFD               	movlw	-3
 25322  001354  006F FF8C  F035    	movff	plusw1,btemp+11
 25323                           
 25324                           ;stkvar	_row @ sp[(-1)+0]
 25325  00135A  0EFF               	movlw	-1
 25326  00135C  50E3               	movf	plusw1,w,c
 25327  00135E  2435               	addwf	(btemp+11)^0,w,c
 25328  001360  6EE6               	movwf	postinc1,c
 25329  001362  EC3F  F011         	call	_send_lcd_data_dma	;wreg free
 25330                           
 25331                           ; BSR set to: 59
 25332                           ;eadog.c: 218:  wait_lcd_done();
 25333  001366  EC1A  F016         	call	_wait_lcd_done	;wreg free
 25334                           
 25335                           ; BSR set to: 0
 25336                           ;eadog.c: 219:  eaDogM_WriteString(strPtr);
 25337                           ;stkvar	_strPtr @ sp[(-1)+-4]
 25338  00136A  0EFB               	movlw	-5
 25339  00136C  006F FF8F FFE6     	movff	plusw1,postinc1
 25340  001372  006F FF8F FFE6     	movff	plusw1,postinc1
 25341  001378  ECA2  F007         	call	_eaDogM_WriteString	;wreg free
 25342                           
 25343                           ; BSR set to: 59
 25344                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 25345  00137C  0EFB               	movlw	251
 25346  00137E  26E1               	addwf	fsr1l,f,c
 25347  001380  0EFF               	movlw	255
 25348  001382  22E2               	addwfc	fsr1h,f,c
 25349  001384  0012               	return		;funcret
 25350  001386                     __end_of_eaDogM_WriteStringAtPos:
 25351                           	opt callstack 0
 25352                           
 25353 ;; *************** function _send_lcd_cmd_dma *****************
 25354 ;; Defined at:
 25355 ;;		line 171 in file "eadog.c"
 25356 ;; Parameters:    Size  Location     Type
 25357 ;;  strPtr          1  [STACK] const unsigned char 
 25358 ;; Auto vars:     Size  Location     Type
 25359 ;;		None
 25360 ;; Return value:  Size  Location     Type
 25361 ;;                  1  [STACK] void 
 25362 ;; Registers used:
 25363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 25364 ;; Tracked objects:
 25365 ;;		On entry : 0/3D
 25366 ;;		On exit  : 3F/0
 25367 ;;		Unchanged: 0/0
 25368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25373 ;;Total ram usage:        0 bytes
 25374 ;; Hardware stack levels used:    1
 25375 ;; Hardware stack levels required when called:   18
 25376 ;; This function calls:
 25377 ;;		_send_lcd_data_dma
 25378 ;;		_wait_lcd_done
 25379 ;; This function is called by:
 25380 ;;		_eaDogM_WriteStringAtPos
 25381 ;;		_eaDogM_WriteCommand
 25382 ;; This function uses a reentrant model
 25383 ;;
 25384                           
 25385                           	psect	text84
 25386  002D1A                     __ptext84:
 25387                           	opt callstack 0
 25388  002D1A                     _send_lcd_cmd_dma:
 25389                           	opt callstack 10
 25390                           
 25391                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 25392                           
 25393                           ; BSR set to: 59
 25394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25395                           ;incstack = 0
 25396  002D1A  0EFE               	movlw	254
 25397  002D1C  6EE6               	movwf	postinc1,c
 25398  002D1E  EC3F  F011         	call	_send_lcd_data_dma	;wreg free
 25399                           
 25400                           ; BSR set to: 59
 25401                           ;eadog.c: 174:  wait_lcd_done();
 25402  002D22  EC1A  F016         	call	_wait_lcd_done	;wreg free
 25403                           
 25404                           ; BSR set to: 0
 25405                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 25406                           ;stkvar	_strPtr @ sp[(0)+-1]
 25407  002D26  0EFF               	movlw	-1
 25408  002D28  50E3               	movf	plusw1,w,c
 25409  002D2A  6EE6               	movwf	postinc1,c
 25410  002D2C  EC3F  F011         	call	_send_lcd_data_dma	;wreg free
 25411                           
 25412                           ;eadog.c: 176:  wait_lcd_done();
 25413  002D30  EC1A  F016         	call	_wait_lcd_done	;wreg free
 25414                           
 25415                           ; BSR set to: 0
 25416                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 25417  002D34  52E5               	movf	postdec1,f,c
 25418  002D36  0012               	return		;funcret
 25419  002D38                     __end_of_send_lcd_cmd_dma:
 25420                           	opt callstack 0
 25421                           
 25422 ;; *************** function _wait_lcd_done *****************
 25423 ;; Defined at:
 25424 ;;		line 443 in file "eadog.c"
 25425 ;; Parameters:    Size  Location     Type
 25426 ;;		None
 25427 ;; Auto vars:     Size  Location     Type
 25428 ;;		None
 25429 ;; Return value:  Size  Location     Type
 25430 ;;                  1  [STACK] void 
 25431 ;; Registers used:
 25432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 25433 ;; Tracked objects:
 25434 ;;		On entry : 0/2
 25435 ;;		On exit  : 3F/0
 25436 ;;		Unchanged: 0/0
 25437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25442 ;;Total ram usage:        0 bytes
 25443 ;; Hardware stack levels used:    1
 25444 ;; Hardware stack levels required when called:   16
 25445 ;; This function calls:
 25446 ;;		_wdtdelay
 25447 ;; This function is called by:
 25448 ;;		_main
 25449 ;;		_send_lcd_cmd_dma
 25450 ;;		_eaDogM_WriteStringAtPos
 25451 ;;		_update_lcd
 25452 ;;		_vterm_dump
 25453 ;; This function uses a reentrant model
 25454 ;;
 25455                           
 25456                           	psect	text85
 25457  002C34                     __ptext85:
 25458                           	opt callstack 0
 25459  002C34                     _wait_lcd_done:
 25460                           	opt callstack 14
 25461                           
 25462                           ;eadog.c: 445:  while (spi_link.LCD_DATA);
 25463                           
 25464                           ; BSR set to: 0
 25465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25466                           ;incstack = 0
 25467  002C34  0100               	movlb	0	; () banked
 25468  002C36  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 25469  002C38  D7FD               	goto	_wait_lcd_done
 25470  002C3A                     u10950:
 25471  002C3A  013D               	movlb	61	; () banked
 25472  002C3C  AB17               	btfss	23,5,b	;volatile
 25473  002C3E  D7FD               	goto	u10950
 25474                           
 25475                           ; BSR set to: 61
 25476                           ;eadog.c: 447:  wdtdelay(50);
 25477  002C40  0E32               	movlw	50
 25478  002C42  6EE6               	movwf	postinc1,c
 25479  002C44  0E00               	movlw	0
 25480  002C46  6EE6               	movwf	postinc1,c
 25481  002C48  0E00               	movlw	0
 25482  002C4A  6EE6               	movwf	postinc1,c
 25483  002C4C  0E00               	movlw	0
 25484  002C4E  6EE6               	movwf	postinc1,c
 25485  002C50  EC63  F00F         	call	_wdtdelay	;wreg free
 25486                           
 25487                           ; BSR set to: 0
 25488                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 25489  002C54  0012               	return		;funcret
 25490  002C56                     __end_of_wait_lcd_done:
 25491                           	opt callstack 0
 25492                           
 25493 ;; *************** function _wdtdelay *****************
 25494 ;; Defined at:
 25495 ;;		line 23 in file "eadog.c"
 25496 ;; Parameters:    Size  Location     Type
 25497 ;;  delay           4  [STACK] const unsigned long 
 25498 ;; Auto vars:     Size  Location     Type
 25499 ;;		None
 25500 ;; Return value:  Size  Location     Type
 25501 ;;                  1  [STACK] void 
 25502 ;; Registers used:
 25503 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 25504 ;; Tracked objects:
 25505 ;;		On entry : 2/3D
 25506 ;;		On exit  : 3F/0
 25507 ;;		Unchanged: 0/0
 25508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25513 ;;Total ram usage:        0 bytes
 25514 ;; Hardware stack levels used:    1
 25515 ;; Hardware stack levels required when called:   15
 25516 ;; This function calls:
 25517 ;;		Nothing
 25518 ;; This function is called by:
 25519 ;;		_init_display
 25520 ;;		_send_lcd_data
 25521 ;;		_send_lcd_cmd
 25522 ;;		_send_lcd_cmd_long
 25523 ;;		_wait_lcd_done
 25524 ;; This function uses a reentrant model
 25525 ;;
 25526                           
 25527                           	psect	text86
 25528  001EC6                     __ptext86:
 25529                           	opt callstack 0
 25530  001EC6                     _wdtdelay:
 25531                           	opt callstack 14
 25532                           
 25533                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 25534                           
 25535                           ; BSR set to: 0
 25536                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25537                           ;incstack = 0
 25538  001EC6  0100               	movlb	0	; () banked
 25539  001EC8  6B90               	clrf	wdtdelay@dcount& (0+255),b
 25540  001ECA  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
 25541  001ECC  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
 25542  001ECE  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
 25543  001ED0                     l1625:
 25544                           
 25545                           ; BSR set to: 0
 25546                           ;eadog.c: 28:   __nop();
 25547  001ED0  F000               	nop	
 25548  001ED2  0004               	clrwdt		;# 
 25549                           
 25550                           ;eadog.c: 30:  };
 25551  001ED4  0E01               	movlw	1
 25552  001ED6  0100               	movlb	0	; () banked
 25553  001ED8  2790               	addwf	wdtdelay@dcount& (0+255),f,b
 25554  001EDA  0E00               	movlw	0
 25555  001EDC  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 25556  001EDE  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 25557  001EE0  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 25558                           
 25559                           ; BSR set to: 0
 25560                           ;stkvar	_delay @ sp[(0)+-4]
 25561  001EE2  0EFC               	movlw	-4
 25562  001EE4  006F FF8C  F02A    	movff	plusw1,btemp
 25563  001EEA  5190               	movf	wdtdelay@dcount& (0+255),w,b
 25564  001EEC  5C2A               	subwf	btemp^0,w,c
 25565  001EEE  0EFD               	movlw	-3
 25566  001EF0  006F FF8C  F02A    	movff	plusw1,btemp
 25567  001EF6  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 25568  001EF8  582A               	subwfb	btemp^0,w,c
 25569  001EFA  0EFE               	movlw	-2
 25570  001EFC  006F FF8C  F02A    	movff	plusw1,btemp
 25571  001F02  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 25572  001F04  582A               	subwfb	btemp^0,w,c
 25573  001F06  0EFF               	movlw	-1
 25574  001F08  006F FF8C  F02A    	movff	plusw1,btemp
 25575  001F0E  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 25576  001F10  582A               	subwfb	btemp^0,w,c
 25577  001F12  B0D8               	btfsc	status,0,c
 25578  001F14  D7DD               	goto	l1625
 25579                           
 25580                           ; BSR set to: 0
 25581                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 25582  001F16  52E5               	movf	postdec1,f,c
 25583  001F18  52E5               	movf	postdec1,f,c
 25584  001F1A  52E5               	movf	postdec1,f,c
 25585  001F1C  52E5               	movf	postdec1,f,c
 25586  001F1E  0012               	return		;funcret
 25587  001F20                     __end_of_wdtdelay:
 25588                           	opt callstack 0
 25589                           
 25590 ;; *************** function _send_lcd_data_dma *****************
 25591 ;; Defined at:
 25592 ;;		line 182 in file "eadog.c"
 25593 ;; Parameters:    Size  Location     Type
 25594 ;;  strPtr          1  [STACK] const unsigned char 
 25595 ;; Auto vars:     Size  Location     Type
 25596 ;;		None
 25597 ;; Return value:  Size  Location     Type
 25598 ;;                  1  [STACK] void 
 25599 ;; Registers used:
 25600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 25601 ;; Tracked objects:
 25602 ;;		On entry : 0/0
 25603 ;;		On exit  : 3F/3B
 25604 ;;		Unchanged: 0/0
 25605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25610 ;;Total ram usage:        0 bytes
 25611 ;; Hardware stack levels used:    1
 25612 ;; Hardware stack levels required when called:   17
 25613 ;; This function calls:
 25614 ;;		_ringBufS_flush
 25615 ;;		_ringBufS_put_dma
 25616 ;;		_start_lcd
 25617 ;;		_wait_lcd_set
 25618 ;; This function is called by:
 25619 ;;		_send_lcd_cmd_dma
 25620 ;;		_eaDogM_WriteStringAtPos
 25621 ;; This function uses a reentrant model
 25622 ;;
 25623                           
 25624                           	psect	text87
 25625  00227E                     __ptext87:
 25626                           	opt callstack 0
 25627  00227E                     _send_lcd_data_dma:
 25628                           	opt callstack 11
 25629                           
 25630                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 25631                           
 25632                           ; BSR set to: 0
 25633                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25634                           ;incstack = 0
 25635  00227E  ECBA  F017         	call	_wait_lcd_set	;wreg free
 25636                           
 25637                           ; BSR set to: 0
 25638                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 25639  002282  0E00               	movlw	0
 25640  002284  6EE6               	movwf	postinc1,c
 25641  002286  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25642  00228C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25643  002292  ECC3  F009         	call	_ringBufS_flush	;wreg free
 25644  002296  94BC               	bcf	188,2,c	;volatile
 25645                           
 25646                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 25647  002298  013B               	movlb	59	; () banked
 25648  00229A  9FFC               	bcf	252,7,b	;volatile
 25649                           
 25650                           ; BSR set to: 59
 25651                           ;eadog.c: 189:  DMA1SSZ = 1;
 25652  00229C  0E00               	movlw	0
 25653  00229E  6FF8               	movwf	248,b	;volatile
 25654  0022A0  0E01               	movlw	1
 25655  0022A2  6FF7               	movwf	247,b	;volatile
 25656                           
 25657                           ; BSR set to: 59
 25658                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 25659  0022A4  8FFC               	bsf	252,7,b	;volatile
 25660                           
 25661                           ; BSR set to: 59
 25662                           ;eadog.c: 191:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 25663                           ;stkvar	_strPtr @ sp[(0)+-1]
 25664  0022A6  0EFF               	movlw	-1
 25665  0022A8  50E3               	movf	plusw1,w,c
 25666  0022AA  6EE6               	movwf	postinc1,c
 25667  0022AC  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25668  0022B2  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25669  0022B8  EC4D  F007         	call	_ringBufS_put_dma	;wreg free
 25670                           
 25671                           ;eadog.c: 192:  start_lcd();
 25672  0022BC  ECBD  F017         	call	_start_lcd	;wreg free
 25673                           
 25674                           ; BSR set to: 59
 25675                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 25676  0022C0  52E5               	movf	postdec1,f,c
 25677  0022C2  0012               	return		;funcret
 25678  0022C4                     __end_of_send_lcd_data_dma:
 25679                           	opt callstack 0
 25680                           
 25681 ;; *************** function _eaDogM_WriteString *****************
 25682 ;; Defined at:
 25683 ;;		line 151 in file "eadog.c"
 25684 ;; Parameters:    Size  Location     Type
 25685 ;;  strPtr          2  [STACK] PTR unsigned char 
 25686 ;;		 -> D.lcd(640), D(642), V(181), 
 25687 ;; Auto vars:     Size  Location     Type
 25688 ;;		None
 25689 ;; Return value:  Size  Location     Type
 25690 ;;                  1  [STACK] void 
 25691 ;; Registers used:
 25692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25693 ;; Tracked objects:
 25694 ;;		On entry : 3F/0
 25695 ;;		On exit  : 3F/3B
 25696 ;;		Unchanged: 0/0
 25697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25702 ;;Total ram usage:        0 bytes
 25703 ;; Hardware stack levels used:    1
 25704 ;; Hardware stack levels required when called:   24
 25705 ;; This function calls:
 25706 ;;		_printf
 25707 ;;		_ringBufS_flush
 25708 ;;		_start_lcd
 25709 ;;		_strlen
 25710 ;;		_wait_lcd_set
 25711 ;; This function is called by:
 25712 ;;		_eaDogM_WriteStringAtPos
 25713 ;; This function uses a reentrant model
 25714 ;;
 25715                           
 25716                           	psect	text88
 25717  000F44                     __ptext88:
 25718                           	opt callstack 0
 25719  000F44                     _eaDogM_WriteString:
 25720                           	opt callstack 4
 25721                           
 25722                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 25723                           
 25724                           ; BSR set to: 59
 25725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25726                           ;incstack = 0
 25727  000F44  ECBA  F017         	call	_wait_lcd_set	;wreg free
 25728                           
 25729                           ; BSR set to: 0
 25730                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 25731  000F48  0E00               	movlw	0
 25732  000F4A  6EE6               	movwf	postinc1,c
 25733  000F4C  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25734  000F52  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25735  000F58  ECC3  F009         	call	_ringBufS_flush	;wreg free
 25736  000F5C  94BC               	bcf	188,2,c	;volatile
 25737                           
 25738                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 25739                           ;stkvar	_strPtr @ sp[(0)+-2]
 25740  000F5E  0EFE               	movlw	-2
 25741  000F60  006F FF8F FFE6     	movff	plusw1,postinc1
 25742  000F66  006F FF8F FFE6     	movff	plusw1,postinc1
 25743  000F6C  EC47  F008         	call	_strlen	;wreg free
 25744  000F70  502B               	movf	(btemp+1)^0,w,c
 25745  000F72  E104               	bnz	u16290
 25746  000F74  0E41               	movlw	65
 25747  000F76  5C2A               	subwf	btemp^0,w,c
 25748  000F78  A0D8               	btfss	status,0,c
 25749  000F7A  D010               	goto	l16757
 25750  000F7C                     u16290:
 25751                           
 25752                           ;stkvar	_strPtr @ sp[(0)+-2]
 25753  000F7C  0EFE               	movlw	-2
 25754  000F7E  006F FF8C  F034    	movff	plusw1,btemp+10
 25755  000F84  0EFF               	movlw	-1
 25756  000F86  006F FF8C  F035    	movff	plusw1,btemp+11
 25757  000F8C  0E40               	movlw	64
 25758  000F8E  2434               	addwf	(btemp+10)^0,w,c
 25759  000F90  6ED9               	movwf	fsr2l,c
 25760  000F92  0E00               	movlw	0
 25761  000F94  2035               	addwfc	(btemp+11)^0,w,c
 25762  000F96  6EDA               	movwf	fsr2h,c
 25763  000F98  0E00               	movlw	0
 25764  000F9A  6EDF               	movwf	indf2,c
 25765  000F9C                     l16757:
 25766                           
 25767                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 25768  000F9C  013B               	movlb	59	; () banked
 25769  000F9E  9FFC               	bcf	252,7,b	;volatile
 25770                           
 25771                           ; BSR set to: 59
 25772                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 25773                           ;stkvar	_strPtr @ sp[(0)+-2]
 25774  000FA0  0EFE               	movlw	-2
 25775  000FA2  006F FF8F FFE6     	movff	plusw1,postinc1
 25776  000FA8  006F FF8F FFE6     	movff	plusw1,postinc1
 25777  000FAE  EC47  F008         	call	_strlen	;wreg free
 25778  000FB2  0060  F0AB  FBF7   	movff	btemp,15351	;volatile
 25779  000FB8  0060  F0AF  FBF8   	movff	btemp+1,15352	;volatile
 25780                           
 25781                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 25782  000FBE  013B               	movlb	59	; () banked
 25783  000FC0  8FFC               	bsf	252,7,b	;volatile
 25784                           
 25785                           ; BSR set to: 59
 25786                           ;eadog.c: 161:  printf("%s", strPtr);
 25787                           ;stkvar	_strPtr @ sp[(0)+-2]
 25788  000FC2  0EFE               	movlw	-2
 25789  000FC4  006F FF8F FFE6     	movff	plusw1,postinc1
 25790  000FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 25791  000FD0  0EFC               	movlw	low STR_82
 25792  000FD2  6EE6               	movwf	postinc1,c
 25793  000FD4  0EFF               	movlw	high STR_82
 25794  000FD6  6EE6               	movwf	postinc1,c
 25795  000FD8  0E04               	movlw	4
 25796  000FDA  6EE6               	movwf	postinc1,c
 25797  000FDC  EC75  F00E         	call	_printf	;wreg free
 25798                           
 25799                           ; BSR set to: 0
 25800                           ;eadog.c: 162:  start_lcd();
 25801  000FE0  ECBD  F017         	call	_start_lcd	;wreg free
 25802                           
 25803                           ; BSR set to: 59
 25804                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 25805  000FE4  52E5               	movf	postdec1,f,c
 25806  000FE6  52E5               	movf	postdec1,f,c
 25807  000FE8  0012               	return		;funcret
 25808  000FEA                     __end_of_eaDogM_WriteString:
 25809                           	opt callstack 0
 25810                           
 25811 ;; *************** function _wait_lcd_set *****************
 25812 ;; Defined at:
 25813 ;;		line 433 in file "eadog.c"
 25814 ;; Parameters:    Size  Location     Type
 25815 ;;		None
 25816 ;; Auto vars:     Size  Location     Type
 25817 ;;		None
 25818 ;; Return value:  Size  Location     Type
 25819 ;;                  1  [STACK] void 
 25820 ;; Registers used:
 25821 ;;		None
 25822 ;; Tracked objects:
 25823 ;;		On entry : 0/0
 25824 ;;		On exit  : 3F/0
 25825 ;;		Unchanged: 0/0
 25826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25831 ;;Total ram usage:        0 bytes
 25832 ;; Hardware stack levels used:    1
 25833 ;; Hardware stack levels required when called:   15
 25834 ;; This function calls:
 25835 ;;		Nothing
 25836 ;; This function is called by:
 25837 ;;		_eaDogM_WriteString
 25838 ;;		_send_lcd_data_dma
 25839 ;; This function uses a reentrant model
 25840 ;;
 25841                           
 25842                           	psect	text89
 25843  002F74                     __ptext89:
 25844                           	opt callstack 0
 25845  002F74                     _wait_lcd_set:
 25846                           	opt callstack 12
 25847                           
 25848                           ;eadog.c: 435:  spi_link.LCD_DATA = 1;
 25849                           
 25850                           ; BSR set to: 59
 25851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25852                           ;incstack = 0
 25853  002F74  0100               	movlb	0	; () banked
 25854  002F76  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 25855                           
 25856                           ; BSR set to: 0
 25857                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 25858  002F78  0012               	return		;funcret
 25859  002F7A                     __end_of_wait_lcd_set:
 25860                           	opt callstack 0
 25861                           
 25862 ;; *************** function _start_lcd *****************
 25863 ;; Defined at:
 25864 ;;		line 428 in file "eadog.c"
 25865 ;; Parameters:    Size  Location     Type
 25866 ;;		None
 25867 ;; Auto vars:     Size  Location     Type
 25868 ;;		None
 25869 ;; Return value:  Size  Location     Type
 25870 ;;                  1  [STACK] void 
 25871 ;; Registers used:
 25872 ;;		None
 25873 ;; Tracked objects:
 25874 ;;		On entry : 0/3B
 25875 ;;		On exit  : 3F/3B
 25876 ;;		Unchanged: 0/0
 25877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25882 ;;Total ram usage:        0 bytes
 25883 ;; Hardware stack levels used:    1
 25884 ;; Hardware stack levels required when called:   15
 25885 ;; This function calls:
 25886 ;;		Nothing
 25887 ;; This function is called by:
 25888 ;;		_eaDogM_WriteString
 25889 ;;		_send_lcd_data_dma
 25890 ;; This function uses a reentrant model
 25891 ;;
 25892                           
 25893                           	psect	text90
 25894  002F7A                     __ptext90:
 25895                           	opt callstack 0
 25896  002F7A                     _start_lcd:
 25897                           	opt callstack 12
 25898                           
 25899                           ;eadog.c: 430:  DMA1CON0bits.DMA1SIRQEN = 1;
 25900                           
 25901                           ; BSR set to: 0
 25902                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25903                           ;incstack = 0
 25904  002F7A  013B               	movlb	59	; () banked
 25905  002F7C  8DFC               	bsf	252,6,b	;volatile
 25906                           
 25907                           ; BSR set to: 59
 25908                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25909  002F7E  0012               	return		;funcret
 25910  002F80                     __end_of_start_lcd:
 25911                           	opt callstack 0
 25912                           
 25913 ;; *************** function _ringBufS_flush *****************
 25914 ;; Defined at:
 25915 ;;		line 76 in file "ringbufs.c"
 25916 ;; Parameters:    Size  Location     Type
 25917 ;;  _this           2  [STACK] PTR struct ringBufS_t
 25918 ;;		 -> ring_buf1(67), 
 25919 ;;  clearBuffer     1  [STACK] const char 
 25920 ;; Auto vars:     Size  Location     Type
 25921 ;;		None
 25922 ;; Return value:  Size  Location     Type
 25923 ;;                  1  [STACK] void 
 25924 ;; Registers used:
 25925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 25926 ;; Tracked objects:
 25927 ;;		On entry : 3F/0
 25928 ;;		On exit  : 0/0
 25929 ;;		Unchanged: 0/0
 25930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25935 ;;Total ram usage:        0 bytes
 25936 ;; Hardware stack levels used:    1
 25937 ;; Hardware stack levels required when called:   16
 25938 ;; This function calls:
 25939 ;;		_memset
 25940 ;; This function is called by:
 25941 ;;		_eaDogM_WriteString
 25942 ;;		_send_lcd_data_dma
 25943 ;; This function uses a reentrant model
 25944 ;;
 25945                           
 25946                           	psect	text91
 25947  001386                     __ptext91:
 25948                           	opt callstack 0
 25949  001386                     _ringBufS_flush:
 25950                           	opt callstack 11
 25951                           
 25952                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 25953                           ;stkvar	__this @ sp[(0)+-2]
 25954                           
 25955                           ; BSR set to: 59
 25956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25957                           ;incstack = 0
 25958  001386  0EFE               	movlw	-2
 25959  001388  006F FF8C  F034    	movff	plusw1,btemp+10
 25960  00138E  0EFF               	movlw	-1
 25961  001390  006F FF8C  F035    	movff	plusw1,btemp+11
 25962  001396  0E42               	movlw	66
 25963  001398  2434               	addwf	(btemp+10)^0,w,c
 25964  00139A  6ED9               	movwf	fsr2l,c
 25965  00139C  0E00               	movlw	0
 25966  00139E  2035               	addwfc	(btemp+11)^0,w,c
 25967  0013A0  6EDA               	movwf	fsr2h,c
 25968  0013A2  0E00               	movlw	0
 25969  0013A4  6EDF               	movwf	indf2,c
 25970                           
 25971                           ;ringbufs.c: 79:  _this->head = 0;
 25972                           ;stkvar	__this @ sp[(0)+-2]
 25973  0013A6  0EFE               	movlw	-2
 25974  0013A8  006F FF8C  F034    	movff	plusw1,btemp+10
 25975  0013AE  0EFF               	movlw	-1
 25976  0013B0  006F FF8C  F035    	movff	plusw1,btemp+11
 25977  0013B6  0E40               	movlw	64
 25978  0013B8  2434               	addwf	(btemp+10)^0,w,c
 25979  0013BA  6ED9               	movwf	fsr2l,c
 25980  0013BC  0E00               	movlw	0
 25981  0013BE  2035               	addwfc	(btemp+11)^0,w,c
 25982  0013C0  6EDA               	movwf	fsr2h,c
 25983  0013C2  0E00               	movlw	0
 25984  0013C4  6EDF               	movwf	indf2,c
 25985                           
 25986                           ;ringbufs.c: 80:  _this->tail = 0;
 25987                           ;stkvar	__this @ sp[(0)+-2]
 25988  0013C6  0EFE               	movlw	-2
 25989  0013C8  006F FF8C  F034    	movff	plusw1,btemp+10
 25990  0013CE  0EFF               	movlw	-1
 25991  0013D0  006F FF8C  F035    	movff	plusw1,btemp+11
 25992  0013D6  0E41               	movlw	65
 25993  0013D8  2434               	addwf	(btemp+10)^0,w,c
 25994  0013DA  6ED9               	movwf	fsr2l,c
 25995  0013DC  0E00               	movlw	0
 25996  0013DE  2035               	addwfc	(btemp+11)^0,w,c
 25997  0013E0  6EDA               	movwf	fsr2h,c
 25998  0013E2  0E00               	movlw	0
 25999  0013E4  6EDF               	movwf	indf2,c
 26000                           
 26001                           ;ringbufs.c: 81:  if (clearBuffer) {
 26002                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 26003  0013E6  0EFD               	movlw	-3
 26004  0013E8  50E3               	movf	plusw1,w,c
 26005  0013EA  B4D8               	btfsc	status,2,c
 26006  0013EC  D011               	goto	l1757
 26007                           
 26008                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 26009  0013EE  0E40               	movlw	64
 26010  0013F0  6EE6               	movwf	postinc1,c
 26011  0013F2  0E00               	movlw	0
 26012  0013F4  6EE6               	movwf	postinc1,c
 26013  0013F6  0E00               	movlw	0
 26014  0013F8  6EE6               	movwf	postinc1,c
 26015  0013FA  0E00               	movlw	0
 26016  0013FC  6EE6               	movwf	postinc1,c
 26017                           
 26018                           ;stkvar	__this @ sp[(-4)+-2]
 26019  0013FE  0EFA               	movlw	-6
 26020  001400  006F FF8F FFE6     	movff	plusw1,postinc1
 26021  001406  006F FF8F FFE6     	movff	plusw1,postinc1
 26022  00140C  EC96  F0D9         	call	_memset	;wreg free
 26023  001410                     l1757:
 26024                           
 26025                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 26026  001410  52E5               	movf	postdec1,f,c
 26027  001412  52E5               	movf	postdec1,f,c
 26028  001414  52E5               	movf	postdec1,f,c
 26029  001416  0012               	return		;funcret
 26030  001418                     __end_of_ringBufS_flush:
 26031                           	opt callstack 0
 26032                           
 26033 ;; *************** function _memset *****************
 26034 ;; Defined at:
 26035 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 26036 ;; Parameters:    Size  Location     Type
 26037 ;;  dest            2  [STACK] PTR void 
 26038 ;;		 -> ring_buf2(67), ring_buf1(67), 
 26039 ;;  c               2  [STACK] int 
 26040 ;;  n               2  [STACK] unsigned int 
 26041 ;; Auto vars:     Size  Location     Type
 26042 ;;  s               2  [STACK] PTR unsigned char 
 26043 ;;		 -> ring_buf2(67), ring_buf1(67), 
 26044 ;;  k               2  [STACK] unsigned int 
 26045 ;; Return value:  Size  Location     Type
 26046 ;;                  2  [STACK] PTR void 
 26047 ;; Registers used:
 26048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 26049 ;; Tracked objects:
 26050 ;;		On entry : 0/0
 26051 ;;		On exit  : 0/0
 26052 ;;		Unchanged: 0/0
 26053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26058 ;;Total ram usage:        0 bytes
 26059 ;; Hardware stack levels used:    1
 26060 ;; Hardware stack levels required when called:   15
 26061 ;; This function calls:
 26062 ;;		Nothing
 26063 ;; This function is called by:
 26064 ;;		_ringBufS_init
 26065 ;;		_ringBufS_flush
 26066 ;; This function uses a reentrant model
 26067 ;;
 26068                           
 26069                           	psect	text92
 26070  01B32C                     __ptext92:
 26071                           	opt callstack 0
 26072  01B32C                     _memset:
 26073                           	opt callstack 0
 26074                           
 26075                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26076  01B32C  52E6               	movf	postinc1,f,c
 26077  01B32E  52E6               	movf	postinc1,f,c
 26078  01B330  52E6               	movf	postinc1,f,c
 26079  01B332  52E6               	movf	postinc1,f,c
 26080                           
 26081                           ;stkvar	_dest @ sp[(-4)+-2]
 26082                           
 26083                           ;incstack = 0
 26084  01B334  0EFA               	movlw	-6
 26085  01B336  006F FF8C  F034    	movff	plusw1,btemp+10
 26086  01B33C  0EFB               	movlw	-5
 26087  01B33E  006F FF8C  F035    	movff	plusw1,btemp+11
 26088                           
 26089                           ;stkvar	_s @ sp[(-4)+0]
 26090  01B344  0EFD               	movlw	-3
 26091  01B346  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26092  01B34C  0EFC               	movlw	-4
 26093  01B34E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26094                           
 26095                           ;stkvar	_n @ sp[(-4)+-6]
 26096  01B354  0EF6               	movlw	-10
 26097  01B356  006F FF8C  F02A    	movff	plusw1,btemp
 26098  01B35C  0EF7               	movlw	-9
 26099  01B35E  50E3               	movf	plusw1,w,c
 26100  01B360  102A               	iorwf	btemp^0,w,c
 26101  01B362  B4D8               	btfsc	status,2,c
 26102  01B364  D154               	goto	u14470
 26103                           
 26104                           ;stkvar	_c @ sp[(-4)+-4]
 26105                           ;stkvar	_s @ sp[(-4)+0]
 26106  01B366  0EFC               	movlw	-4
 26107  01B368  006F FF8F FFD9     	movff	plusw1,fsr2l
 26108  01B36E  0EFD               	movlw	-3
 26109  01B370  006F FF8F FFDA     	movff	plusw1,fsr2h
 26110  01B376  0EF8               	movlw	-8
 26111  01B378  006F FF8F FFDF     	movff	plusw1,indf2
 26112                           
 26113                           ;stkvar	_c @ sp[(-4)+-4]
 26114                           ;stkvar	_n @ sp[(-4)+-6]
 26115                           ;stkvar	_s @ sp[(-4)+0]
 26116  01B37E  0EFC               	movlw	-4
 26117  01B380  006F FF8C  F034    	movff	plusw1,btemp+10
 26118  01B386  0EFD               	movlw	-3
 26119  01B388  006F FF8C  F035    	movff	plusw1,btemp+11
 26120  01B38E  0EF6               	movlw	-10
 26121  01B390  50E3               	movf	plusw1,w,c
 26122  01B392  2634               	addwf	(btemp+10)^0,f,c
 26123  01B394  0EF7               	movlw	-9
 26124  01B396  50E3               	movf	plusw1,w,c
 26125  01B398  2235               	addwfc	(btemp+11)^0,f,c
 26126  01B39A  0EFF               	movlw	255
 26127  01B39C  2434               	addwf	(btemp+10)^0,w,c
 26128  01B39E  6ED9               	movwf	fsr2l,c
 26129  01B3A0  0EFF               	movlw	255
 26130  01B3A2  2035               	addwfc	(btemp+11)^0,w,c
 26131  01B3A4  6EDA               	movwf	fsr2h,c
 26132  01B3A6  0EF8               	movlw	-8
 26133  01B3A8  006F FF8F FFDF     	movff	plusw1,indf2
 26134                           
 26135                           ;stkvar	_n @ sp[(-4)+-6]
 26136  01B3AE  0EF7               	movlw	-9
 26137  01B3B0  50E3               	movf	plusw1,w,c
 26138  01B3B2  E108               	bnz	l15573
 26139  01B3B4  0EF6               	movlw	-10
 26140  01B3B6  006F FF8C  F02A    	movff	plusw1,btemp
 26141  01B3BC  0E03               	movlw	3
 26142  01B3BE  5E2A               	subwf	btemp^0,f,c
 26143  01B3C0  A0D8               	btfss	status,0,c
 26144  01B3C2  D125               	goto	u14470
 26145  01B3C4                     l15573:
 26146                           
 26147                           ;stkvar	_c @ sp[(-4)+-4]
 26148                           ;stkvar	_s @ sp[(-4)+0]
 26149  01B3C4  0EFC               	movlw	-4
 26150  01B3C6  006F FF8C  F034    	movff	plusw1,btemp+10
 26151  01B3CC  0EFD               	movlw	-3
 26152  01B3CE  006F FF8C  F035    	movff	plusw1,btemp+11
 26153  01B3D4  0E01               	movlw	1
 26154  01B3D6  2434               	addwf	(btemp+10)^0,w,c
 26155  01B3D8  6ED9               	movwf	fsr2l,c
 26156  01B3DA  0E00               	movlw	0
 26157  01B3DC  2035               	addwfc	(btemp+11)^0,w,c
 26158  01B3DE  6EDA               	movwf	fsr2h,c
 26159  01B3E0  0EF8               	movlw	-8
 26160  01B3E2  006F FF8F FFDF     	movff	plusw1,indf2
 26161                           
 26162                           ;stkvar	_c @ sp[(-4)+-4]
 26163                           ;stkvar	_s @ sp[(-4)+0]
 26164  01B3E8  0EFC               	movlw	-4
 26165  01B3EA  006F FF8C  F034    	movff	plusw1,btemp+10
 26166  01B3F0  0EFD               	movlw	-3
 26167  01B3F2  006F FF8C  F035    	movff	plusw1,btemp+11
 26168  01B3F8  0E02               	movlw	2
 26169  01B3FA  2434               	addwf	(btemp+10)^0,w,c
 26170  01B3FC  6ED9               	movwf	fsr2l,c
 26171  01B3FE  0E00               	movlw	0
 26172  01B400  2035               	addwfc	(btemp+11)^0,w,c
 26173  01B402  6EDA               	movwf	fsr2h,c
 26174  01B404  0EF8               	movlw	-8
 26175  01B406  006F FF8F FFDF     	movff	plusw1,indf2
 26176                           
 26177                           ;stkvar	_c @ sp[(-4)+-4]
 26178                           ;stkvar	_n @ sp[(-4)+-6]
 26179                           ;stkvar	_s @ sp[(-4)+0]
 26180  01B40C  0EFC               	movlw	-4
 26181  01B40E  006F FF8C  F034    	movff	plusw1,btemp+10
 26182  01B414  0EFD               	movlw	-3
 26183  01B416  006F FF8C  F035    	movff	plusw1,btemp+11
 26184  01B41C  0EF6               	movlw	-10
 26185  01B41E  50E3               	movf	plusw1,w,c
 26186  01B420  2634               	addwf	(btemp+10)^0,f,c
 26187  01B422  0EF7               	movlw	-9
 26188  01B424  50E3               	movf	plusw1,w,c
 26189  01B426  2235               	addwfc	(btemp+11)^0,f,c
 26190  01B428  0EFE               	movlw	254
 26191  01B42A  2434               	addwf	(btemp+10)^0,w,c
 26192  01B42C  6ED9               	movwf	fsr2l,c
 26193  01B42E  0EFF               	movlw	255
 26194  01B430  2035               	addwfc	(btemp+11)^0,w,c
 26195  01B432  6EDA               	movwf	fsr2h,c
 26196  01B434  0EF8               	movlw	-8
 26197  01B436  006F FF8F FFDF     	movff	plusw1,indf2
 26198                           
 26199                           ;stkvar	_c @ sp[(-4)+-4]
 26200                           ;stkvar	_n @ sp[(-4)+-6]
 26201                           ;stkvar	_s @ sp[(-4)+0]
 26202  01B43C  0EFC               	movlw	-4
 26203  01B43E  006F FF8C  F034    	movff	plusw1,btemp+10
 26204  01B444  0EFD               	movlw	-3
 26205  01B446  006F FF8C  F035    	movff	plusw1,btemp+11
 26206  01B44C  0EF6               	movlw	-10
 26207  01B44E  50E3               	movf	plusw1,w,c
 26208  01B450  2634               	addwf	(btemp+10)^0,f,c
 26209  01B452  0EF7               	movlw	-9
 26210  01B454  50E3               	movf	plusw1,w,c
 26211  01B456  2235               	addwfc	(btemp+11)^0,f,c
 26212  01B458  0EFD               	movlw	253
 26213  01B45A  2434               	addwf	(btemp+10)^0,w,c
 26214  01B45C  6ED9               	movwf	fsr2l,c
 26215  01B45E  0EFF               	movlw	255
 26216  01B460  2035               	addwfc	(btemp+11)^0,w,c
 26217  01B462  6EDA               	movwf	fsr2h,c
 26218  01B464  0EF8               	movlw	-8
 26219  01B466  006F FF8F FFDF     	movff	plusw1,indf2
 26220                           
 26221                           ;stkvar	_n @ sp[(-4)+-6]
 26222  01B46C  0EF7               	movlw	-9
 26223  01B46E  50E3               	movf	plusw1,w,c
 26224  01B470  E108               	bnz	l15579
 26225  01B472  0EF6               	movlw	-10
 26226  01B474  006F FF8C  F02A    	movff	plusw1,btemp
 26227  01B47A  0E07               	movlw	7
 26228  01B47C  5E2A               	subwf	btemp^0,f,c
 26229  01B47E  A0D8               	btfss	status,0,c
 26230  01B480  D0C6               	goto	u14470
 26231  01B482                     l15579:
 26232                           
 26233                           ;stkvar	_c @ sp[(-4)+-4]
 26234                           ;stkvar	_s @ sp[(-4)+0]
 26235  01B482  0EFC               	movlw	-4
 26236  01B484  006F FF8C  F034    	movff	plusw1,btemp+10
 26237  01B48A  0EFD               	movlw	-3
 26238  01B48C  006F FF8C  F035    	movff	plusw1,btemp+11
 26239  01B492  0E03               	movlw	3
 26240  01B494  2434               	addwf	(btemp+10)^0,w,c
 26241  01B496  6ED9               	movwf	fsr2l,c
 26242  01B498  0E00               	movlw	0
 26243  01B49A  2035               	addwfc	(btemp+11)^0,w,c
 26244  01B49C  6EDA               	movwf	fsr2h,c
 26245  01B49E  0EF8               	movlw	-8
 26246  01B4A0  006F FF8F FFDF     	movff	plusw1,indf2
 26247                           
 26248                           ;stkvar	_c @ sp[(-4)+-4]
 26249                           ;stkvar	_n @ sp[(-4)+-6]
 26250                           ;stkvar	_s @ sp[(-4)+0]
 26251  01B4A6  0EFC               	movlw	-4
 26252  01B4A8  006F FF8C  F034    	movff	plusw1,btemp+10
 26253  01B4AE  0EFD               	movlw	-3
 26254  01B4B0  006F FF8C  F035    	movff	plusw1,btemp+11
 26255  01B4B6  0EF6               	movlw	-10
 26256  01B4B8  50E3               	movf	plusw1,w,c
 26257  01B4BA  2634               	addwf	(btemp+10)^0,f,c
 26258  01B4BC  0EF7               	movlw	-9
 26259  01B4BE  50E3               	movf	plusw1,w,c
 26260  01B4C0  2235               	addwfc	(btemp+11)^0,f,c
 26261  01B4C2  0EFC               	movlw	252
 26262  01B4C4  2434               	addwf	(btemp+10)^0,w,c
 26263  01B4C6  6ED9               	movwf	fsr2l,c
 26264  01B4C8  0EFF               	movlw	255
 26265  01B4CA  2035               	addwfc	(btemp+11)^0,w,c
 26266  01B4CC  6EDA               	movwf	fsr2h,c
 26267  01B4CE  0EF8               	movlw	-8
 26268  01B4D0  006F FF8F FFDF     	movff	plusw1,indf2
 26269                           
 26270                           ;stkvar	_n @ sp[(-4)+-6]
 26271  01B4D6  0EF7               	movlw	-9
 26272  01B4D8  50E3               	movf	plusw1,w,c
 26273  01B4DA  E108               	bnz	l15585
 26274  01B4DC  0EF6               	movlw	-10
 26275  01B4DE  006F FF8C  F02A    	movff	plusw1,btemp
 26276  01B4E4  0E09               	movlw	9
 26277  01B4E6  5E2A               	subwf	btemp^0,f,c
 26278  01B4E8  A0D8               	btfss	status,0,c
 26279  01B4EA  D091               	goto	u14470
 26280  01B4EC                     l15585:
 26281                           
 26282                           ;stkvar	_s @ sp[(-4)+0]
 26283  01B4EC  0EFC               	movlw	-4
 26284  01B4EE  006F FF8C  F034    	movff	plusw1,btemp+10
 26285  01B4F4  1E34               	comf	(btemp+10)^0,f,c
 26286  01B4F6  0EFD               	movlw	-3
 26287  01B4F8  006F FF8C  F035    	movff	plusw1,btemp+11
 26288  01B4FE  1E35               	comf	(btemp+11)^0,f,c
 26289  01B500  2A34               	incf	(btemp+10)^0,f,c
 26290  01B502  B4D8               	btfsc	status,2,c
 26291  01B504  2A35               	incf	(btemp+11)^0,f,c
 26292  01B506  0E03               	movlw	3
 26293  01B508  1634               	andwf	(btemp+10)^0,f,c
 26294  01B50A  0E00               	movlw	0
 26295  01B50C  1635               	andwf	(btemp+11)^0,f,c
 26296                           
 26297                           ;stkvar	_k @ sp[(-4)+2]
 26298  01B50E  0EFE               	movlw	-2
 26299  01B510  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26300  01B516  0EFF               	movlw	-1
 26301  01B518  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26302                           
 26303                           ;stkvar	_k @ sp[(-4)+2]
 26304                           ;stkvar	_s @ sp[(-4)+0]
 26305  01B51E  0EFC               	movlw	-4
 26306  01B520  50E3               	movf	plusw1,w,c
 26307  01B522  6E2A               	movwf	btemp^0,c
 26308  01B524  0EFE               	movlw	-2
 26309  01B526  50E3               	movf	plusw1,w,c
 26310  01B528  262A               	addwf	btemp^0,f,c
 26311  01B52A  0EFC               	movlw	-4
 26312  01B52C  0060  F0AB  FFE3   	movff	btemp,plusw1
 26313  01B532  0EFD               	movlw	-3
 26314  01B534  50E3               	movf	plusw1,w,c
 26315  01B536  6E2A               	movwf	btemp^0,c
 26316  01B538  0EFF               	movlw	-1
 26317  01B53A  50E3               	movf	plusw1,w,c
 26318  01B53C  222A               	addwfc	btemp^0,f,c
 26319  01B53E  0EFD               	movlw	-3
 26320  01B540  0060  F0AB  FFE3   	movff	btemp,plusw1
 26321                           
 26322                           ;stkvar	_k @ sp[(-4)+2]
 26323                           ;stkvar	_n @ sp[(-4)+-6]
 26324  01B546  0EF6               	movlw	-10
 26325  01B548  50E3               	movf	plusw1,w,c
 26326  01B54A  6E2A               	movwf	btemp^0,c
 26327  01B54C  0EFE               	movlw	-2
 26328  01B54E  50E3               	movf	plusw1,w,c
 26329  01B550  5E2A               	subwf	btemp^0,f,c
 26330  01B552  0EF6               	movlw	-10
 26331  01B554  0060  F0AB  FFE3   	movff	btemp,plusw1
 26332  01B55A  0EF7               	movlw	-9
 26333  01B55C  50E3               	movf	plusw1,w,c
 26334  01B55E  6E2A               	movwf	btemp^0,c
 26335  01B560  0EFF               	movlw	-1
 26336  01B562  50E3               	movf	plusw1,w,c
 26337  01B564  5A2A               	subwfb	btemp^0,f,c
 26338  01B566  0EF7               	movlw	-9
 26339  01B568  0060  F0AB  FFE3   	movff	btemp,plusw1
 26340  01B56E  0EFC               	movlw	252
 26341  01B570  6E34               	movwf	(btemp+10)^0,c
 26342  01B572  0EFF               	movlw	255
 26343  01B574  6E35               	movwf	(btemp+11)^0,c
 26344                           
 26345                           ;stkvar	_n @ sp[(-4)+-6]
 26346  01B576  0EF6               	movlw	-10
 26347  01B578  006F FF8C  F02A    	movff	plusw1,btemp
 26348  01B57E  5034               	movf	(btemp+10)^0,w,c
 26349  01B580  162A               	andwf	btemp^0,f,c
 26350  01B582  0EF6               	movlw	-10
 26351  01B584  0060  F0AB  FFE3   	movff	btemp,plusw1
 26352  01B58A  0EF7               	movlw	-9
 26353  01B58C  006F FF8C  F02A    	movff	plusw1,btemp
 26354  01B592  5035               	movf	(btemp+11)^0,w,c
 26355  01B594  162A               	andwf	btemp^0,f,c
 26356  01B596  0EF7               	movlw	-9
 26357  01B598  D02E               	goto	L25
 26358  01B59A                     l15593:
 26359                           
 26360                           ;stkvar	_c @ sp[(-4)+-4]
 26361                           ;stkvar	_s @ sp[(-4)+0]
 26362  01B59A  0EFC               	movlw	-4
 26363  01B59C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26364  01B5A2  0EFD               	movlw	-3
 26365  01B5A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26366  01B5AA  0EF8               	movlw	-8
 26367  01B5AC  006F FF8F FFDF     	movff	plusw1,indf2
 26368                           
 26369                           ;stkvar	_n @ sp[(-4)+-6]
 26370  01B5B2  0EF6               	movlw	-10
 26371  01B5B4  006F FF8C  F02A    	movff	plusw1,btemp
 26372  01B5BA  0E01               	movlw	1
 26373  01B5BC  5E2A               	subwf	btemp^0,f,c
 26374  01B5BE  0EF6               	movlw	-10
 26375  01B5C0  0060  F0AB  FFE3   	movff	btemp,plusw1
 26376  01B5C6  0EF7               	movlw	-9
 26377  01B5C8  006F FF8C  F02A    	movff	plusw1,btemp
 26378  01B5CE  0E00               	movlw	0
 26379  01B5D0  5A2A               	subwfb	btemp^0,f,c
 26380  01B5D2  0EF7               	movlw	-9
 26381  01B5D4  0060  F0AB  FFE3   	movff	btemp,plusw1
 26382                           
 26383                           ;stkvar	_s @ sp[(-4)+0]
 26384  01B5DA  0EFC               	movlw	-4
 26385  01B5DC  50E3               	movf	plusw1,w,c
 26386  01B5DE  0F01               	addlw	1
 26387  01B5E0  6E2A               	movwf	btemp^0,c
 26388  01B5E2  0EFC               	movlw	-4
 26389  01B5E4  0060  F0AB  FFE3   	movff	btemp,plusw1
 26390  01B5EA  6A2A               	clrf	btemp^0,c
 26391  01B5EC  0EFD               	movlw	-3
 26392  01B5EE  50E3               	movf	plusw1,w,c
 26393  01B5F0  202A               	addwfc	btemp^0,w,c
 26394  01B5F2  6E2A               	movwf	btemp^0,c
 26395  01B5F4  0EFD               	movlw	-3
 26396  01B5F6                     L25:
 26397  01B5F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 26398                           
 26399                           ;stkvar	_n @ sp[(-4)+-6]
 26400  01B5FC  0EF6               	movlw	-10
 26401  01B5FE  006F FF8C  F02A    	movff	plusw1,btemp
 26402  01B604  0EF7               	movlw	-9
 26403  01B606  50E3               	movf	plusw1,w,c
 26404  01B608  102A               	iorwf	btemp^0,w,c
 26405  01B60A  A4D8               	btfss	status,2,c
 26406  01B60C  D7C6               	goto	l15593
 26407  01B60E                     u14470:
 26408                           
 26409                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 26410  01B60E  0EF6               	movlw	246
 26411  01B610  26E1               	addwf	fsr1l,f,c
 26412  01B612  0EFF               	movlw	255
 26413  01B614  22E2               	addwfc	fsr1h,f,c
 26414  01B616  0012               	return		;funcret
 26415  01B618                     __end_of_memset:
 26416                           	opt callstack 0
 26417                           
 26418 ;; *************** function _printf *****************
 26419 ;; Defined at:
 26420 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 26421 ;; Parameters:    Size  Location     Type
 26422 ;;  fmt             2  [STACK] PTR const unsigned char 
 26423 ;;		 -> STR_82(3), 
 26424 ;; Auto vars:     Size  Location     Type
 26425 ;;  ap              2  [STACK] PTR void [1]
 26426 ;;		 -> ?_printf(2), ?_sprintf(2), 
 26427 ;;  ret             2    0        int 
 26428 ;; Return value:  Size  Location     Type
 26429 ;;                  2  [STACK] int 
 26430 ;; Registers used:
 26431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26432 ;; Tracked objects:
 26433 ;;		On entry : 3F/3B
 26434 ;;		On exit  : 3F/0
 26435 ;;		Unchanged: 0/0
 26436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26441 ;;Total ram usage:        0 bytes
 26442 ;; Hardware stack levels used:    1
 26443 ;; Hardware stack levels required when called:   23
 26444 ;; This function calls:
 26445 ;;		_vfprintf
 26446 ;; This function is called by:
 26447 ;;		_eaDogM_WriteString
 26448 ;; This function uses a reentrant model
 26449 ;;
 26450                           
 26451                           	psect	text93
 26452  001CEA                     __ptext93:
 26453                           	opt callstack 0
 26454  001CEA                     _printf:
 26455                           	opt callstack 0
 26456                           
 26457                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26458  001CEA  52E6               	movf	postinc1,f,c
 26459  001CEC  52E6               	movf	postinc1,f,c
 26460                           
 26461                           ;stkvar	?_printf @ sp[(-2)+-3]
 26462                           
 26463                           ;incstack = 0
 26464  001CEE  0EFB               	movlw	251
 26465  001CF0  24E1               	addwf	fsr1l,w,c
 26466  001CF2  6E34               	movwf	(btemp+10)^0,c
 26467  001CF4  0EFF               	movlw	255
 26468  001CF6  20E2               	addwfc	fsr1h,w,c
 26469  001CF8  6E35               	movwf	(btemp+11)^0,c
 26470                           
 26471                           ;stkvar	_ap @ sp[(-2)+0]
 26472  001CFA  0EFF               	movlw	-1
 26473  001CFC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26474  001D02  0EFE               	movlw	-2
 26475  001D04  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26476                           
 26477                           ;stkvar	_ap @ sp[(-2)+0]
 26478  001D0A  0EFE               	movlw	254
 26479  001D0C  24E1               	addwf	fsr1l,w,c
 26480  001D0E  6E2A               	movwf	btemp^0,c
 26481  001D10  0EFF               	movlw	255
 26482  001D12  20E2               	addwfc	fsr1h,w,c
 26483  001D14  6E2B               	movwf	(btemp+1)^0,c
 26484  001D16  0060  F0AB  FFE6   	movff	btemp,postinc1
 26485  001D1C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26486                           
 26487                           ;stkvar	_fmt @ sp[(-4)+-3]
 26488  001D22  0EF9               	movlw	-7
 26489  001D24  006F FF8F FFE6     	movff	plusw1,postinc1
 26490  001D2A  006F FF8F FFE6     	movff	plusw1,postinc1
 26491  001D30  0E00               	movlw	0
 26492  001D32  6EE6               	movwf	postinc1,c
 26493  001D34  0E00               	movlw	0
 26494  001D36  6EE6               	movwf	postinc1,c
 26495  001D38  ECF7  F006         	call	_vfprintf	;wreg free
 26496                           
 26497                           ; BSR set to: 0
 26498                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 26499  001D3C  52E5               	movf	postdec1,f,c
 26500  001D3E  52E5               	movf	postdec1,f,c
 26501  001D40  52E5               	movf	postdec1,f,c
 26502  001D42  50E7               	movf	indf1,w,c
 26503  001D44  5EE1               	subwf	fsr1l,f,c
 26504  001D46  0E00               	movlw	0
 26505  001D48  5AE2               	subwfb	fsr1h,f,c
 26506  001D4A  0012               	return		;funcret
 26507  001D4C                     __end_of_printf:
 26508                           	opt callstack 0
 26509                           
 26510 ;; *************** function _vfprintf *****************
 26511 ;; Defined at:
 26512 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26513 ;; Parameters:    Size  Location     Type
 26514 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26515 ;;		 -> f(6), NULL(0), 
 26516 ;;  fmt             2  [STACK] PTR const unsigned char 
 26517 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 26518 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 26519 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 26520 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 26521 ;;		 -> STR_86(19), STR_85(19), STR_82(3), STR_81(14), 
 26522 ;;		 -> STR_80(28), STR_79(28), STR_78(28), STR_77(22), 
 26523 ;;		 -> STR_76(22), STR_75(22), STR_74(22), STR_73(22), 
 26524 ;;		 -> STR_72(22), STR_71(22), STR_70(22), STR_69(22), 
 26525 ;;		 -> STR_68(19), STR_67(21), STR_66(21), STR_65(21), 
 26526 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 26527 ;;		 -> STR_60(22), STR_59(22), STR_58(22), STR_57(22), 
 26528 ;;		 -> STR_56(22), STR_55(21), STR_54(22), STR_53(22), 
 26529 ;;		 -> STR_52(22), STR_51(22), STR_50(22), STR_49(22), 
 26530 ;;		 -> STR_48(24), STR_47(24), STR_46(24), STR_45(30), 
 26531 ;;		 -> STR_44(24), STR_43(24), STR_42(23), STR_41(23), 
 26532 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 26533 ;;		 -> STR_36(23), STR_35(23), STR_34(23), STR_33(23), 
 26534 ;;		 -> STR_32(23), STR_31(23), STR_30(18), STR_29(17), 
 26535 ;;		 -> STR_28(17), STR_27(22), STR_26(22), STR_25(22), 
 26536 ;;		 -> STR_24(14), STR_23(27), STR_22(27), STR_21(23), 
 26537 ;;		 -> STR_20(22), STR_19(22), STR_18(22), STR_17(22), 
 26538 ;;		 -> STR_16(23), STR_15(23), STR_14(23), STR_13(26), 
 26539 ;;		 -> STR_12(22), STR_11(21), STR_10(21), STR_9(21), 
 26540 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 26541 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 26542 ;;  ap              2  [STACK] PTR PTR void 
 26543 ;;		 -> ap(2), ap(2), 
 26544 ;; Auto vars:     Size  Location     Type
 26545 ;;  cfmt            2  [STACK] PTR unsigned char 
 26546 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 26547 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 26548 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 26549 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 26550 ;;		 -> STR_86(19), STR_85(19), STR_82(3), STR_81(14), 
 26551 ;;		 -> STR_80(28), STR_79(28), STR_78(28), STR_77(22), 
 26552 ;;		 -> STR_76(22), STR_75(22), STR_74(22), STR_73(22), 
 26553 ;;		 -> STR_72(22), STR_71(22), STR_70(22), STR_69(22), 
 26554 ;;		 -> STR_68(19), STR_67(21), STR_66(21), STR_65(21), 
 26555 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 26556 ;;		 -> STR_60(22), STR_59(22), STR_58(22), STR_57(22), 
 26557 ;;		 -> STR_56(22), STR_55(21), STR_54(22), STR_53(22), 
 26558 ;;		 -> STR_52(22), STR_51(22), STR_50(22), STR_49(22), 
 26559 ;;		 -> STR_48(24), STR_47(24), STR_46(24), STR_45(30), 
 26560 ;;		 -> STR_44(24), STR_43(24), STR_42(23), STR_41(23), 
 26561 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 26562 ;;		 -> STR_36(23), STR_35(23), STR_34(23), STR_33(23), 
 26563 ;;		 -> STR_32(23), STR_31(23), STR_30(18), STR_29(17), 
 26564 ;;		 -> STR_28(17), STR_27(22), STR_26(22), STR_25(22), 
 26565 ;;		 -> STR_24(14), STR_23(27), STR_22(27), STR_21(23), 
 26566 ;;		 -> STR_20(22), STR_19(22), STR_18(22), STR_17(22), 
 26567 ;;		 -> STR_16(23), STR_15(23), STR_14(23), STR_13(26), 
 26568 ;;		 -> STR_12(22), STR_11(21), STR_10(21), STR_9(21), 
 26569 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 26570 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 26571 ;; Return value:  Size  Location     Type
 26572 ;;                  2  [STACK] int 
 26573 ;; Registers used:
 26574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26575 ;; Tracked objects:
 26576 ;;		On entry : 0/2
 26577 ;;		On exit  : 3F/0
 26578 ;;		Unchanged: 0/0
 26579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26584 ;;Total ram usage:        0 bytes
 26585 ;; Hardware stack levels used:    1
 26586 ;; Hardware stack levels required when called:   22
 26587 ;; This function calls:
 26588 ;;		_vfpfcnvrt
 26589 ;; This function is called by:
 26590 ;;		_sprintf
 26591 ;;		_printf
 26592 ;; This function uses a reentrant model
 26593 ;;
 26594                           
 26595                           	psect	text94
 26596  000DEE                     __ptext94:
 26597                           	opt callstack 0
 26598  000DEE                     _vfprintf:
 26599                           	opt callstack 0
 26600                           
 26601                           ; BSR set to: 0
 26602                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26603  000DEE  52E6               	movf	postinc1,f,c
 26604  000DF0  52E6               	movf	postinc1,f,c
 26605                           
 26606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 26607                           ;stkvar	_fmt @ sp[(-2)+-4]
 26608                           
 26609                           ;incstack = 0
 26610 ;; hardware stack exceeded
 26611  000DF2  0EFA               	movlw	-6
 26612  000DF4  006F FF8C  F034    	movff	plusw1,btemp+10
 26613  000DFA  0EFB               	movlw	-5
 26614  000DFC  006F FF8C  F035    	movff	plusw1,btemp+11
 26615                           
 26616                           ;stkvar	_cfmt @ sp[(-2)+0]
 26617  000E02  0EFF               	movlw	-1
 26618  000E04  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26619  000E0A  0EFE               	movlw	-2
 26620  000E0C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26621                           
 26622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 26623  000E12  0100               	movlb	0	; () banked
 26624  000E14  6BBA               	clrf	_nout& (0+255),b
 26625  000E16  6BBB               	clrf	(_nout+1)& (0+255),b
 26626                           
 26627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 26628  000E18  D021               	goto	l16779
 26629  000E1A                     l16777:
 26630                           
 26631                           ; BSR set to: 0
 26632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 26633                           ;stkvar	_ap @ sp[(-2)+-6]
 26634  000E1A  0EF8               	movlw	-8
 26635  000E1C  006F FF8F FFE6     	movff	plusw1,postinc1
 26636  000E22  006F FF8F FFE6     	movff	plusw1,postinc1
 26637                           
 26638                           ;stkvar	_cfmt @ sp[(-4)+0]
 26639  000E28  0EFC               	movlw	252
 26640  000E2A  24E1               	addwf	fsr1l,w,c
 26641  000E2C  6E2A               	movwf	btemp^0,c
 26642  000E2E  0EFF               	movlw	255
 26643  000E30  20E2               	addwfc	fsr1h,w,c
 26644  000E32  6E2B               	movwf	(btemp+1)^0,c
 26645  000E34  0060  F0AB  FFE6   	movff	btemp,postinc1
 26646  000E3A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26647                           
 26648                           ;stkvar	_fp @ sp[(-6)+-2]
 26649  000E40  0EF8               	movlw	-8
 26650  000E42  006F FF8F FFE6     	movff	plusw1,postinc1
 26651  000E48  006F FF8F FFE6     	movff	plusw1,postinc1
 26652  000E4E  EC36  F09C         	call	_vfpfcnvrt	;wreg free
 26653  000E52  502A               	movf	btemp^0,w,c
 26654  000E54  0100               	movlb	0	; () banked
 26655  000E56  27BA               	addwf	_nout& (0+255),f,b
 26656  000E58  502B               	movf	(btemp+1)^0,w,c
 26657  000E5A  23BB               	addwfc	(_nout+1)& (0+255),f,b
 26658  000E5C                     l16779:
 26659                           
 26660                           ; BSR set to: 0
 26661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 26662                           ;stkvar	_cfmt @ sp[(-2)+0]
 26663  000E5C  50E1               	movf	fsr1l,w,c
 26664  000E5E  0FFE               	addlw	-2
 26665  000E60  6ED9               	movwf	fsr2l,c
 26666  000E62  50E2               	movf	fsr1h,w,c
 26667  000E64  6EDA               	movwf	fsr2h,c
 26668  000E66  0EFF               	movlw	255
 26669  000E68  22DA               	addwfc	fsr2h,f,c
 26670  000E6A  006F FF7B FFF6     	movff	postinc2,tblptrl
 26671  000E70  006F FF77 FFF7     	movff	postdec2,tblptrh
 26672  000E76                     	if	0	;tblptru may be non-zero
 26673  000E76                     	endif
 26674  000E76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26675  000E76  0E00               	movlw	low (__mediumconst shr (0+16))
 26676  000E78  6EF8               	movwf	tblptru,c
 26677  000E7A                     	endif
 26678  000E7A  0008               	tblrd		*
 26679  000E7C  50F5               	movf	tablat,w,c
 26680  000E7E  0900               	iorlw	0
 26681  000E80  A4D8               	btfss	status,2,c
 26682  000E82  D7CB               	goto	l16777
 26683                           
 26684                           ; BSR set to: 0
 26685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 26686  000E84  0060  F2E8  F02A   	movff	_nout,btemp
 26687  000E8A  0060  F2EC  F02B   	movff	_nout+1,btemp+1
 26688                           
 26689                           ; BSR set to: 0
 26690                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 26691  000E90  0EF8               	movlw	248
 26692  000E92  26E1               	addwf	fsr1l,f,c
 26693  000E94  0EFF               	movlw	255
 26694  000E96  22E2               	addwfc	fsr1h,f,c
 26695  000E98  0012               	return		;funcret
 26696  000E9A                     __end_of_vfprintf:
 26697                           	opt callstack 0
 26698                           
 26699 ;; *************** function _vfpfcnvrt *****************
 26700 ;; Defined at:
 26701 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26702 ;; Parameters:    Size  Location     Type
 26703 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26704 ;;		 -> f(6), NULL(0), 
 26705 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 26706 ;;		 -> cfmt(2), 
 26707 ;;  ap              2  [STACK] PTR PTR void 
 26708 ;;		 -> ap(2), ap(2), 
 26709 ;; Auto vars:     Size  Location     Type
 26710 ;;  llu             8  [STACK] unsigned long long 
 26711 ;;  ll              8  [STACK] long long 
 26712 ;;  f               4  [STACK] long long 
 26713 ;;  ct              3  [STACK] unsigned char [3]
 26714 ;;  vp              3    0        PTR void 
 26715 ;;  cp              2  [STACK] PTR unsigned char 
 26716 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_84(9), 
 26717 ;;		 -> STR_83(12), D.lcd(640), D(642), T(176), 
 26718 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 26719 ;;  i               2    0        int 
 26720 ;;  done            2    0        int 
 26721 ;;  c               1  [STACK] unsigned char 
 26722 ;; Return value:  Size  Location     Type
 26723 ;;                  2  [STACK] int 
 26724 ;; Registers used:
 26725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26726 ;; Tracked objects:
 26727 ;;		On entry : 0/0
 26728 ;;		On exit  : 0/0
 26729 ;;		Unchanged: 0/0
 26730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26735 ;;Total ram usage:        0 bytes
 26736 ;; Hardware stack levels used:    1
 26737 ;; Hardware stack levels required when called:   21
 26738 ;; This function calls:
 26739 ;;		_atoi
 26740 ;;		_ctoa
 26741 ;;		_dtoa
 26742 ;;		_efgtoa
 26743 ;;		_fputc
 26744 ;;		_isdigit
 26745 ;;		_isupper
 26746 ;;		_stoa
 26747 ;;		_strncmp
 26748 ;;		_tolower
 26749 ;;		_utoa
 26750 ;;		_xtoa
 26751 ;; This function is called by:
 26752 ;;		_vfprintf
 26753 ;; This function uses a reentrant model
 26754 ;;
 26755                           
 26756                           	psect	text95
 26757  01386C                     __ptext95:
 26758                           	opt callstack 0
 26759  01386C                     _vfpfcnvrt:
 26760                           	opt callstack 0
 26761                           
 26762                           ; BSR set to: 0
 26763                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 26764  01386C  0E20               	movlw	32
 26765  01386E  26E1               	addwf	fsr1l,f,c
 26766  013870  0E00               	movlw	0
 26767  013872  22E2               	addwfc	fsr1h,f,c
 26768                           
 26769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 26770                           ;stkvar	_fmt @ sp[(-32)+-4]
 26771                           
 26772                           ;incstack = 0
 26773 ;; hardware stack exceeded
 26774  013874  0EDC               	movlw	-36
 26775  013876  006F FF8F FFD9     	movff	plusw1,fsr2l
 26776  01387C  0EDD               	movlw	-35
 26777  01387E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26778  013884  006F FF7B FFF6     	movff	postinc2,tblptrl
 26779  01388A  006F FF77 FFF7     	movff	postdec2,tblptrh
 26780  013890                     	if	0	;tblptru may be non-zero
 26781  013890                     	endif
 26782  013890                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26783  013890  0E00               	movlw	low (__mediumconst shr (0+16))
 26784  013892  6EF8               	movwf	tblptru,c
 26785  013894                     	endif
 26786  013894  0008               	tblrd		*
 26787  013896  50F5               	movf	tablat,w,c
 26788  013898  0A25               	xorlw	37
 26789  01389A  A4D8               	btfss	status,2,c
 26790  01389C  EFDD  F0A3         	goto	l16547
 26791                           
 26792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 26793                           ;stkvar	_fmt @ sp[(-32)+-4]
 26794  0138A0  0EDC               	movlw	-36
 26795  0138A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26796  0138A8  0EDD               	movlw	-35
 26797  0138AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26798  0138B0  2ADE               	incf	postinc2,f,c
 26799  0138B2  0E00               	movlw	0
 26800  0138B4  22DD               	addwfc	postdec2,f,c
 26801                           
 26802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 26803  0138B6  6A4A               	clrf	_width^0,c
 26804  0138B8  6A4B               	clrf	(_width+1)^0,c
 26805  0138BA  6A4E               	clrf	_flags^0,c
 26806  0138BC  6A4F               	clrf	(_flags+1)^0,c
 26807                           
 26808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 26809  0138BE  684C               	setf	_prec^0,c
 26810  0138C0  684D               	setf	(_prec+1)^0,c
 26811                           
 26812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 26813                           ;stkvar	_fmt @ sp[(-32)+-4]
 26814  0138C2  0EDC               	movlw	-36
 26815  0138C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 26816  0138CA  0EDD               	movlw	-35
 26817  0138CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 26818  0138D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 26819  0138D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 26820  0138DE                     	if	0	;tblptru may be non-zero
 26821  0138DE                     	endif
 26822  0138DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26823  0138DE  0E00               	movlw	low (__mediumconst shr (0+16))
 26824  0138E0  6EF8               	movwf	tblptru,c
 26825  0138E2                     	endif
 26826  0138E2  0008               	tblrd		*
 26827  0138E4  50F5               	movf	tablat,w,c
 26828  0138E6  0A2A               	xorlw	42
 26829  0138E8  A4D8               	btfss	status,2,c
 26830  0138EA  D031               	goto	l16365
 26831                           
 26832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 26833                           ;stkvar	_fmt @ sp[(-32)+-4]
 26834  0138EC  0EDC               	movlw	-36
 26835  0138EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 26836  0138F4  0EDD               	movlw	-35
 26837  0138F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26838  0138FC  2ADE               	incf	postinc2,f,c
 26839  0138FE  0E00               	movlw	0
 26840  013900  22DD               	addwfc	postdec2,f,c
 26841                           
 26842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 26843                           ;stkvar	_ap @ sp[(-32)+-6]
 26844  013902  0EDA               	movlw	-38
 26845  013904  006F FF8F FFD9     	movff	plusw1,fsr2l
 26846  01390A  0EDB               	movlw	-37
 26847  01390C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26848  013912  0E02               	movlw	2
 26849  013914  5EDE               	subwf	postinc2,f,c
 26850  013916  0E00               	movlw	0
 26851  013918  5ADD               	subwfb	postdec2,f,c
 26852  01391A  006F FF78  F034    	movff	postinc2,btemp+10
 26853  013920  006F FF74  F035    	movff	postdec2,btemp+11
 26854  013926  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26855  01392C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26856  013932  006F FF78  F04A    	movff	postinc2,_width
 26857  013938  006F FF74  F04B    	movff	postdec2,_width+1
 26858                           
 26859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 26860  01393E  AE4B               	btfss	(_width+1)^0,7,c
 26861  013940  D066               	goto	u15880
 26862                           
 26863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 26864  013942  804E               	bsf	_flags^0,0,c
 26865                           
 26866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 26867  013944  6C4A               	negf	_width^0,c
 26868  013946  1E4B               	comf	(_width+1)^0,f,c
 26869  013948  B0D8               	btfsc	status,0,c
 26870  01394A  2A4B               	incf	(_width+1)^0,f,c
 26871  01394C  D060               	goto	u15880
 26872  01394E                     l16365:
 26873                           
 26874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 26875                           ;stkvar	_fmt @ sp[(-32)+-4]
 26876  01394E  0EDC               	movlw	-36
 26877  013950  006F FF8F FFD9     	movff	plusw1,fsr2l
 26878  013956  0EDD               	movlw	-35
 26879  013958  006F FF8F FFDA     	movff	plusw1,fsr2h
 26880  01395E  006F FF78  F034    	movff	postinc2,btemp+10
 26881  013964  006F FF74  F035    	movff	postdec2,btemp+11
 26882  01396A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26883  013970  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26884  013976  EC04  F0E3         	call	_atoi	;wreg free
 26885  01397A  0060  F0A8  F04A   	movff	btemp,_width
 26886  013980  0060  F0AC  F04B   	movff	btemp+1,_width+1
 26887                           
 26888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 26889  013986  D00B               	goto	l16369
 26890  013988                     l16367:
 26891                           
 26892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 26893                           ;stkvar	_fmt @ sp[(-32)+-4]
 26894  013988  0EDC               	movlw	-36
 26895  01398A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26896  013990  0EDD               	movlw	-35
 26897  013992  006F FF8F FFDA     	movff	plusw1,fsr2h
 26898  013998  2ADE               	incf	postinc2,f,c
 26899  01399A  0E00               	movlw	0
 26900  01399C  22DD               	addwfc	postdec2,f,c
 26901  01399E                     l16369:
 26902  01399E  0ED0               	movlw	208
 26903  0139A0  6E34               	movwf	(btemp+10)^0,c
 26904  0139A2  0EFF               	movlw	255
 26905  0139A4  6E35               	movwf	(btemp+11)^0,c
 26906                           
 26907                           ;stkvar	_fmt @ sp[(-32)+-4]
 26908  0139A6  0EDC               	movlw	-36
 26909  0139A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26910  0139AE  0EDD               	movlw	-35
 26911  0139B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26912  0139B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 26913  0139BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 26914  0139C2                     	if	0	;tblptru may be non-zero
 26915  0139C2                     	endif
 26916  0139C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26917  0139C2  0E00               	movlw	low (__mediumconst shr (0+16))
 26918  0139C4  6EF8               	movwf	tblptru,c
 26919  0139C6                     	endif
 26920  0139C6  0008               	tblrd		*
 26921  0139C8  50F5               	movf	tablat,w,c
 26922  0139CA  6E32               	movwf	(btemp+8)^0,c
 26923  0139CC  6A33               	clrf	(btemp+9)^0,c
 26924  0139CE  5034               	movf	(btemp+10)^0,w,c
 26925  0139D0  2632               	addwf	(btemp+8)^0,f,c
 26926  0139D2  5035               	movf	(btemp+11)^0,w,c
 26927  0139D4  2233               	addwfc	(btemp+9)^0,f,c
 26928  0139D6  5033               	movf	(btemp+9)^0,w,c
 26929  0139D8  E106               	bnz	u15860
 26930  0139DA  0E0A               	movlw	10
 26931  0139DC  5C32               	subwf	(btemp+8)^0,w,c
 26932  0139DE  B0D8               	btfsc	status,0,c
 26933  0139E0  D002               	goto	u15860
 26934  0139E2  0E01               	movlw	1
 26935  0139E4  D001               	goto	u15870
 26936  0139E6                     u15860:
 26937  0139E6  0E00               	movlw	0
 26938  0139E8                     u15870:
 26939  0139E8  6E34               	movwf	(btemp+10)^0,c
 26940  0139EA  6A35               	clrf	(btemp+11)^0,c
 26941                           
 26942                           ;stkvar	_vfpfcnvrt$6690 @ sp[(-32)+4]
 26943  0139EC  0EE4               	movlw	-28
 26944  0139EE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26945  0139F4  0EE5               	movlw	-27
 26946  0139F6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26947                           
 26948                           ;stkvar	_vfpfcnvrt$6690 @ sp[(-32)+4]
 26949  0139FC  0EE4               	movlw	-28
 26950  0139FE  006F FF8C  F02A    	movff	plusw1,btemp
 26951  013A04  0EE5               	movlw	-27
 26952  013A06  50E3               	movf	plusw1,w,c
 26953  013A08  102A               	iorwf	btemp^0,w,c
 26954  013A0A  A4D8               	btfss	status,2,c
 26955  013A0C  D7BD               	goto	l16367
 26956  013A0E                     u15880:
 26957                           
 26958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 26959                           ;stkvar	_fmt @ sp[(-32)+-4]
 26960  013A0E  0EDC               	movlw	-36
 26961  013A10  006F FF8F FFD9     	movff	plusw1,fsr2l
 26962  013A16  0EDD               	movlw	-35
 26963  013A18  006F FF8F FFDA     	movff	plusw1,fsr2h
 26964  013A1E  006F FF7B FFF6     	movff	postinc2,tblptrl
 26965  013A24  006F FF77 FFF7     	movff	postdec2,tblptrh
 26966  013A2A                     	if	0	;tblptru may be non-zero
 26967  013A2A                     	endif
 26968  013A2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26969  013A2A  0E00               	movlw	low (__mediumconst shr (0+16))
 26970  013A2C  6EF8               	movwf	tblptru,c
 26971  013A2E                     	endif
 26972  013A2E  0008               	tblrd		*
 26973  013A30  50F5               	movf	tablat,w,c
 26974  013A32  0A2E               	xorlw	46
 26975  013A34  A4D8               	btfss	status,2,c
 26976  013A36  D0AC               	goto	u15930
 26977                           
 26978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 26979  013A38  6A4C               	clrf	_prec^0,c
 26980  013A3A  6A4D               	clrf	(_prec+1)^0,c
 26981                           
 26982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 26983                           ;stkvar	_fmt @ sp[(-32)+-4]
 26984  013A3C  0EDC               	movlw	-36
 26985  013A3E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26986  013A44  0EDD               	movlw	-35
 26987  013A46  006F FF8F FFDA     	movff	plusw1,fsr2h
 26988  013A4C  2ADE               	incf	postinc2,f,c
 26989  013A4E  0E00               	movlw	0
 26990  013A50  22DD               	addwfc	postdec2,f,c
 26991                           
 26992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 26993                           ;stkvar	_fmt @ sp[(-32)+-4]
 26994  013A52  0EDC               	movlw	-36
 26995  013A54  006F FF8F FFD9     	movff	plusw1,fsr2l
 26996  013A5A  0EDD               	movlw	-35
 26997  013A5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26998  013A62  006F FF7B FFF6     	movff	postinc2,tblptrl
 26999  013A68  006F FF77 FFF7     	movff	postdec2,tblptrh
 27000  013A6E                     	if	0	;tblptru may be non-zero
 27001  013A6E                     	endif
 27002  013A6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27003  013A6E  0E00               	movlw	low (__mediumconst shr (0+16))
 27004  013A70  6EF8               	movwf	tblptru,c
 27005  013A72                     	endif
 27006  013A72  0008               	tblrd		*
 27007  013A74  50F5               	movf	tablat,w,c
 27008  013A76  0A2A               	xorlw	42
 27009  013A78  A4D8               	btfss	status,2,c
 27010  013A7A  D02A               	goto	l16387
 27011                           
 27012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 27013                           ;stkvar	_fmt @ sp[(-32)+-4]
 27014  013A7C  0EDC               	movlw	-36
 27015  013A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27016  013A84  0EDD               	movlw	-35
 27017  013A86  006F FF8F FFDA     	movff	plusw1,fsr2h
 27018  013A8C  2ADE               	incf	postinc2,f,c
 27019  013A8E  0E00               	movlw	0
 27020  013A90  22DD               	addwfc	postdec2,f,c
 27021                           
 27022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 27023                           ;stkvar	_ap @ sp[(-32)+-6]
 27024  013A92  0EDA               	movlw	-38
 27025  013A94  006F FF8F FFD9     	movff	plusw1,fsr2l
 27026  013A9A  0EDB               	movlw	-37
 27027  013A9C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27028  013AA2  0E02               	movlw	2
 27029  013AA4  5EDE               	subwf	postinc2,f,c
 27030  013AA6  0E00               	movlw	0
 27031  013AA8  5ADD               	subwfb	postdec2,f,c
 27032  013AAA  006F FF78  F034    	movff	postinc2,btemp+10
 27033  013AB0  006F FF74  F035    	movff	postdec2,btemp+11
 27034  013AB6  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27035  013ABC  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27036  013AC2  006F FF78  F04C    	movff	postinc2,_prec
 27037  013AC8  006F FF74  F04D    	movff	postdec2,_prec+1
 27038                           
 27039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 27040  013ACE  D060               	goto	u15930
 27041  013AD0                     l16387:
 27042                           
 27043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 27044                           ;stkvar	_fmt @ sp[(-32)+-4]
 27045  013AD0  0EDC               	movlw	-36
 27046  013AD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27047  013AD8  0EDD               	movlw	-35
 27048  013ADA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27049  013AE0  006F FF78  F034    	movff	postinc2,btemp+10
 27050  013AE6  006F FF74  F035    	movff	postdec2,btemp+11
 27051  013AEC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27052  013AF2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27053  013AF8  EC04  F0E3         	call	_atoi	;wreg free
 27054  013AFC  0060  F0A8  F04C   	movff	btemp,_prec
 27055  013B02  0060  F0AC  F04D   	movff	btemp+1,_prec+1
 27056                           
 27057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 27058  013B08  D00B               	goto	l16391
 27059  013B0A                     l16389:
 27060                           
 27061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 27062                           ;stkvar	_fmt @ sp[(-32)+-4]
 27063  013B0A  0EDC               	movlw	-36
 27064  013B0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27065  013B12  0EDD               	movlw	-35
 27066  013B14  006F FF8F FFDA     	movff	plusw1,fsr2h
 27067  013B1A  2ADE               	incf	postinc2,f,c
 27068  013B1C  0E00               	movlw	0
 27069  013B1E  22DD               	addwfc	postdec2,f,c
 27070  013B20                     l16391:
 27071  013B20  0ED0               	movlw	208
 27072  013B22  6E34               	movwf	(btemp+10)^0,c
 27073  013B24  0EFF               	movlw	255
 27074  013B26  6E35               	movwf	(btemp+11)^0,c
 27075                           
 27076                           ;stkvar	_fmt @ sp[(-32)+-4]
 27077  013B28  0EDC               	movlw	-36
 27078  013B2A  006F FF8F FFD9     	movff	plusw1,fsr2l
 27079  013B30  0EDD               	movlw	-35
 27080  013B32  006F FF8F FFDA     	movff	plusw1,fsr2h
 27081  013B38  006F FF7B FFF6     	movff	postinc2,tblptrl
 27082  013B3E  006F FF77 FFF7     	movff	postdec2,tblptrh
 27083  013B44                     	if	0	;tblptru may be non-zero
 27084  013B44                     	endif
 27085  013B44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27086  013B44  0E00               	movlw	low (__mediumconst shr (0+16))
 27087  013B46  6EF8               	movwf	tblptru,c
 27088  013B48                     	endif
 27089  013B48  0008               	tblrd		*
 27090  013B4A  50F5               	movf	tablat,w,c
 27091  013B4C  6E32               	movwf	(btemp+8)^0,c
 27092  013B4E  6A33               	clrf	(btemp+9)^0,c
 27093  013B50  5034               	movf	(btemp+10)^0,w,c
 27094  013B52  2632               	addwf	(btemp+8)^0,f,c
 27095  013B54  5035               	movf	(btemp+11)^0,w,c
 27096  013B56  2233               	addwfc	(btemp+9)^0,f,c
 27097  013B58  5033               	movf	(btemp+9)^0,w,c
 27098  013B5A  E106               	bnz	u15910
 27099  013B5C  0E0A               	movlw	10
 27100  013B5E  5C32               	subwf	(btemp+8)^0,w,c
 27101  013B60  B0D8               	btfsc	status,0,c
 27102  013B62  D002               	goto	u15910
 27103  013B64  0E01               	movlw	1
 27104  013B66  D001               	goto	u15920
 27105  013B68                     u15910:
 27106  013B68  0E00               	movlw	0
 27107  013B6A                     u15920:
 27108  013B6A  6E34               	movwf	(btemp+10)^0,c
 27109  013B6C  6A35               	clrf	(btemp+11)^0,c
 27110                           
 27111                           ;stkvar	_vfpfcnvrt$6691 @ sp[(-32)+0]
 27112  013B6E  0EE0               	movlw	-32
 27113  013B70  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27114  013B76  0EE1               	movlw	-31
 27115  013B78  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27116                           
 27117                           ;stkvar	_vfpfcnvrt$6691 @ sp[(-32)+0]
 27118  013B7E  0EE0               	movlw	-32
 27119  013B80  006F FF8C  F02A    	movff	plusw1,btemp
 27120  013B86  0EE1               	movlw	-31
 27121  013B88  50E3               	movf	plusw1,w,c
 27122  013B8A  102A               	iorwf	btemp^0,w,c
 27123  013B8C  A4D8               	btfss	status,2,c
 27124  013B8E  D7BD               	goto	l16389
 27125  013B90                     u15930:
 27126                           
 27127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 27128                           ;stkvar	_fmt @ sp[(-32)+-4]
 27129  013B90  0EDC               	movlw	-36
 27130  013B92  006F FF8F FFD9     	movff	plusw1,fsr2l
 27131  013B98  0EDD               	movlw	-35
 27132  013B9A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27133  013BA0  006F FF7B FFF6     	movff	postinc2,tblptrl
 27134  013BA6  006F FF77 FFF7     	movff	postdec2,tblptrh
 27135  013BAC                     	if	0	;tblptru may be non-zero
 27136  013BAC                     	endif
 27137  013BAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27138  013BAC  0E00               	movlw	low (__mediumconst shr (0+16))
 27139  013BAE  6EF8               	movwf	tblptru,c
 27140  013BB0                     	endif
 27141  013BB0  0008               	tblrd		*
 27142  013BB2  50F5               	movf	tablat,w,c
 27143  013BB4  6EE6               	movwf	postinc1,c
 27144  013BB6  0E00               	movlw	0
 27145  013BB8  6EE6               	movwf	postinc1,c
 27146  013BBA  EC24  F00B         	call	_tolower	;wreg free
 27147                           
 27148                           ;stkvar	_ct @ sp[(-32)+26]
 27149  013BBE  0EFA               	movlw	-6
 27150  013BC0  0060  F0AB  FFE3   	movff	btemp,plusw1
 27151                           
 27152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 27153                           ;stkvar	_ct @ sp[(-32)+26]
 27154  013BC6  0EFA               	movlw	-6
 27155  013BC8  50E3               	movf	plusw1,w,c
 27156  013BCA  B4D8               	btfsc	status,2,c
 27157  013BCC  D05B               	goto	l16407
 27158                           
 27159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 27160                           ;stkvar	_ct @ sp[(-32)+26]
 27161  013BCE  0EFB               	movlw	251
 27162  013BD0  24E1               	addwf	fsr1l,w,c
 27163  013BD2  6ED9               	movwf	fsr2l,c
 27164  013BD4  0EFF               	movlw	255
 27165  013BD6  20E2               	addwfc	fsr1h,w,c
 27166  013BD8  6EDA               	movwf	fsr2h,c
 27167                           
 27168                           ;stkvar	_fmt @ sp[(-32)+-4]
 27169  013BDA  0EDC               	movlw	-36
 27170  013BDC  006F FF8F FFE9     	movff	plusw1,fsr0l
 27171  013BE2  0EDD               	movlw	-35
 27172  013BE4  006F FF8F FFEA     	movff	plusw1,fsr0h
 27173  013BEA  006F FFB8  F034    	movff	postinc0,btemp+10
 27174  013BF0  006F FFB4  F035    	movff	postdec0,btemp+11
 27175  013BF6  0E01               	movlw	1
 27176  013BF8  2634               	addwf	(btemp+10)^0,f,c
 27177  013BFA  0E00               	movlw	0
 27178  013BFC  2235               	addwfc	(btemp+11)^0,f,c
 27179  013BFE  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27180  013C04  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27181  013C0A                     	if	0	;tblptru may be non-zero
 27182  013C0A                     	endif
 27183  013C0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27184  013C0A  0E00               	movlw	low (__mediumconst shr (0+16))
 27185  013C0C  6EF8               	movwf	tblptru,c
 27186  013C0E                     	endif
 27187  013C0E  0008               	tblrd		*
 27188  013C10  50F5               	movf	tablat,w,c
 27189  013C12  6EE6               	movwf	postinc1,c
 27190  013C14  0E00               	movlw	0
 27191  013C16  6EE6               	movwf	postinc1,c
 27192  013C18  EC24  F00B         	call	_tolower	;wreg free
 27193  013C1C  502A               	movf	btemp^0,w,c
 27194  013C1E  6EDF               	movwf	indf2,c
 27195                           
 27196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 27197                           ;stkvar	_ct @ sp[(-32)+26]
 27198  013C20  0EFB               	movlw	251
 27199  013C22  24E1               	addwf	fsr1l,w,c
 27200  013C24  6ED9               	movwf	fsr2l,c
 27201  013C26  0EFF               	movlw	255
 27202  013C28  20E2               	addwfc	fsr1h,w,c
 27203  013C2A  6EDA               	movwf	fsr2h,c
 27204  013C2C  50DF               	movf	indf2,w,c
 27205  013C2E  B4D8               	btfsc	status,2,c
 27206  013C30  D029               	goto	l16407
 27207                           
 27208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 27209                           ;stkvar	_ct @ sp[(-32)+26]
 27210  013C32  0EFC               	movlw	252
 27211  013C34  24E1               	addwf	fsr1l,w,c
 27212  013C36  6ED9               	movwf	fsr2l,c
 27213  013C38  0EFF               	movlw	255
 27214  013C3A  20E2               	addwfc	fsr1h,w,c
 27215  013C3C  6EDA               	movwf	fsr2h,c
 27216                           
 27217                           ;stkvar	_fmt @ sp[(-32)+-4]
 27218  013C3E  0EDC               	movlw	-36
 27219  013C40  006F FF8F FFE9     	movff	plusw1,fsr0l
 27220  013C46  0EDD               	movlw	-35
 27221  013C48  006F FF8F FFEA     	movff	plusw1,fsr0h
 27222  013C4E  006F FFB8  F034    	movff	postinc0,btemp+10
 27223  013C54  006F FFB4  F035    	movff	postdec0,btemp+11
 27224  013C5A  0E02               	movlw	2
 27225  013C5C  2634               	addwf	(btemp+10)^0,f,c
 27226  013C5E  0E00               	movlw	0
 27227  013C60  2235               	addwfc	(btemp+11)^0,f,c
 27228  013C62  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27229  013C68  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27230  013C6E                     	if	0	;tblptru may be non-zero
 27231  013C6E                     	endif
 27232  013C6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27233  013C6E  0E00               	movlw	low (__mediumconst shr (0+16))
 27234  013C70  6EF8               	movwf	tblptru,c
 27235  013C72                     	endif
 27236  013C72  0008               	tblrd		*
 27237  013C74  50F5               	movf	tablat,w,c
 27238  013C76  6EE6               	movwf	postinc1,c
 27239  013C78  0E00               	movlw	0
 27240  013C7A  6EE6               	movwf	postinc1,c
 27241  013C7C  EC24  F00B         	call	_tolower	;wreg free
 27242  013C80  502A               	movf	btemp^0,w,c
 27243  013C82  6EDF               	movwf	indf2,c
 27244  013C84                     l16407:
 27245                           
 27246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 27247                           ;stkvar	_fmt @ sp[(-32)+-4]
 27248  013C84  0EDC               	movlw	-36
 27249  013C86  006F FF8F FFD9     	movff	plusw1,fsr2l
 27250  013C8C  0EDD               	movlw	-35
 27251  013C8E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27252  013C94  006F FF7B FFF6     	movff	postinc2,tblptrl
 27253  013C9A  006F FF77 FFF7     	movff	postdec2,tblptrh
 27254  013CA0                     	if	0	;tblptru may be non-zero
 27255  013CA0                     	endif
 27256  013CA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27257  013CA0  0E00               	movlw	low (__mediumconst shr (0+16))
 27258  013CA2  6EF8               	movwf	tblptru,c
 27259  013CA4                     	endif
 27260  013CA4  0008               	tblrd		*
 27261  013CA6  50F5               	movf	tablat,w,c
 27262  013CA8  0A63               	xorlw	99
 27263  013CAA  A4D8               	btfss	status,2,c
 27264  013CAC  D037               	goto	l16417
 27265                           
 27266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 27267                           ;stkvar	_fmt @ sp[(-32)+-4]
 27268  013CAE  0EDC               	movlw	-36
 27269  013CB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 27270  013CB6  0EDD               	movlw	-35
 27271  013CB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 27272  013CBE  2ADE               	incf	postinc2,f,c
 27273  013CC0  0E00               	movlw	0
 27274  013CC2  22DD               	addwfc	postdec2,f,c
 27275                           
 27276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 27277                           ;stkvar	_ap @ sp[(-32)+-6]
 27278  013CC4  0EDA               	movlw	-38
 27279  013CC6  006F FF8F FFD9     	movff	plusw1,fsr2l
 27280  013CCC  0EDB               	movlw	-37
 27281  013CCE  006F FF8F FFDA     	movff	plusw1,fsr2h
 27282  013CD4  0E02               	movlw	2
 27283  013CD6  5EDE               	subwf	postinc2,f,c
 27284  013CD8  0E00               	movlw	0
 27285  013CDA  5ADD               	subwfb	postdec2,f,c
 27286  013CDC  006F FF78  F034    	movff	postinc2,btemp+10
 27287  013CE2  006F FF74  F035    	movff	postdec2,btemp+11
 27288  013CE8  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27289  013CEE  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27290  013CF4  50DF               	movf	indf2,w,c
 27291  013CF6  6E35               	movwf	(btemp+11)^0,c
 27292                           
 27293                           ;stkvar	_c @ sp[(-32)+31]
 27294  013CF8  0EFF               	movlw	-1
 27295  013CFA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27296                           
 27297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 27298                           ;stkvar	_c @ sp[(-32)+31]
 27299  013D00  0EFF               	movlw	-1
 27300  013D02  50E3               	movf	plusw1,w,c
 27301  013D04  6EE6               	movwf	postinc1,c
 27302                           
 27303                           ;stkvar	_fp @ sp[(-33)+-2]
 27304  013D06  0EDD               	movlw	-35
 27305  013D08  006F FF8F FFE6     	movff	plusw1,postinc1
 27306  013D0E  006F FF8F FFE6     	movff	plusw1,postinc1
 27307  013D14  EC9E  F00A         	call	_ctoa	;wreg free
 27308  013D18  EF07  F0A4         	goto	l2700
 27309  013D1C                     l16417:
 27310                           
 27311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 27312                           ;stkvar	_fmt @ sp[(-32)+-4]
 27313  013D1C  0EDC               	movlw	-36
 27314  013D1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27315  013D24  0EDD               	movlw	-35
 27316  013D26  006F FF8F FFDA     	movff	plusw1,fsr2h
 27317  013D2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 27318  013D32  006F FF77 FFF7     	movff	postdec2,tblptrh
 27319  013D38                     	if	0	;tblptru may be non-zero
 27320  013D38                     	endif
 27321  013D38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27322  013D38  0E00               	movlw	low (__mediumconst shr (0+16))
 27323  013D3A  6EF8               	movwf	tblptru,c
 27324  013D3C                     	endif
 27325  013D3C  0008               	tblrd		*
 27326  013D3E  50F5               	movf	tablat,w,c
 27327  013D40  0A64               	xorlw	100
 27328  013D42  B4D8               	btfsc	status,2,c
 27329  013D44  D015               	goto	u15980
 27330                           
 27331                           ;stkvar	_fmt @ sp[(-32)+-4]
 27332  013D46  0EDC               	movlw	-36
 27333  013D48  006F FF8F FFD9     	movff	plusw1,fsr2l
 27334  013D4E  0EDD               	movlw	-35
 27335  013D50  006F FF8F FFDA     	movff	plusw1,fsr2h
 27336  013D56  006F FF7B FFF6     	movff	postinc2,tblptrl
 27337  013D5C  006F FF77 FFF7     	movff	postdec2,tblptrh
 27338  013D62                     	if	0	;tblptru may be non-zero
 27339  013D62                     	endif
 27340  013D62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27341  013D62  0E00               	movlw	low (__mediumconst shr (0+16))
 27342  013D64  6EF8               	movwf	tblptru,c
 27343  013D66                     	endif
 27344  013D66  0008               	tblrd		*
 27345  013D68  50F5               	movf	tablat,w,c
 27346  013D6A  0A69               	xorlw	105
 27347  013D6C  A4D8               	btfss	status,2,c
 27348  013D6E  D076               	goto	l16429
 27349  013D70                     u15980:
 27350                           
 27351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 27352                           ;stkvar	_fmt @ sp[(-32)+-4]
 27353  013D70  0EDC               	movlw	-36
 27354  013D72  006F FF8F FFD9     	movff	plusw1,fsr2l
 27355  013D78  0EDD               	movlw	-35
 27356  013D7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27357  013D80  2ADE               	incf	postinc2,f,c
 27358  013D82  0E00               	movlw	0
 27359  013D84  22DD               	addwfc	postdec2,f,c
 27360                           
 27361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 27362                           ;stkvar	_ap @ sp[(-32)+-6]
 27363  013D86  0EDA               	movlw	-38
 27364  013D88  006F FF8F FFD9     	movff	plusw1,fsr2l
 27365  013D8E  0EDB               	movlw	-37
 27366  013D90  006F FF8F FFDA     	movff	plusw1,fsr2h
 27367  013D96  0E02               	movlw	2
 27368  013D98  5EDE               	subwf	postinc2,f,c
 27369  013D9A  0E00               	movlw	0
 27370  013D9C  5ADD               	subwfb	postdec2,f,c
 27371  013D9E  006F FF78  F034    	movff	postinc2,btemp+10
 27372  013DA4  006F FF74  F035    	movff	postdec2,btemp+11
 27373  013DAA  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27374  013DB0  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27375  013DB6  006F FF78  F034    	movff	postinc2,btemp+10
 27376  013DBC  006F FF74  F035    	movff	postdec2,btemp+11
 27377                           
 27378                           ;stkvar	_ll @ sp[(-32)+14]
 27379  013DC2  0EEE               	movlw	-18
 27380  013DC4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27381  013DCA  0EEF               	movlw	-17
 27382  013DCC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27383  013DD2  6A2A               	clrf	btemp^0,c
 27384  013DD4  BEE3               	btfsc	plusw1,7,c
 27385  013DD6  682A               	setf	btemp^0,c
 27386  013DD8  0EF0               	movlw	-16
 27387  013DDA  0060  F0AB  FFE3   	movff	btemp,plusw1
 27388  013DE0  0EF1               	movlw	-15
 27389  013DE2  0060  F0AB  FFE3   	movff	btemp,plusw1
 27390  013DE8  0EF2               	movlw	-14
 27391  013DEA  0060  F0AB  FFE3   	movff	btemp,plusw1
 27392  013DF0  0EF3               	movlw	-13
 27393  013DF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 27394  013DF8  0EF4               	movlw	-12
 27395  013DFA  0060  F0AB  FFE3   	movff	btemp,plusw1
 27396  013E00  0EF5               	movlw	-11
 27397  013E02  0060  F0AB  FFE3   	movff	btemp,plusw1
 27398  013E08                     l16425:
 27399                           
 27400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 27401                           ;stkvar	_ll @ sp[(-32)+14]
 27402  013E08  50E1               	movf	fsr1l,w,c
 27403  013E0A  0FEE               	addlw	-18
 27404  013E0C  6ED9               	movwf	fsr2l,c
 27405  013E0E  50E2               	movf	fsr1h,w,c
 27406  013E10  6EDA               	movwf	fsr2h,c
 27407  013E12  0EFF               	movlw	255
 27408  013E14  22DA               	addwfc	fsr2h,f,c
 27409  013E16  006F FF7B FFE6     	movff	postinc2,postinc1
 27410  013E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 27411  013E22  006F FF7B FFE6     	movff	postinc2,postinc1
 27412  013E28  006F FF7B FFE6     	movff	postinc2,postinc1
 27413  013E2E  006F FF7B FFE6     	movff	postinc2,postinc1
 27414  013E34  006F FF7B FFE6     	movff	postinc2,postinc1
 27415  013E3A  006F FF7B FFE6     	movff	postinc2,postinc1
 27416  013E40  006F FF7B FFE6     	movff	postinc2,postinc1
 27417                           
 27418                           ;stkvar	_fp @ sp[(-40)+-2]
 27419  013E46  0ED6               	movlw	-42
 27420  013E48  006F FF8F FFE6     	movff	plusw1,postinc1
 27421  013E4E  006F FF8F FFE6     	movff	plusw1,postinc1
 27422  013E54  EC1E  F0CB         	call	_dtoa	;wreg free
 27423  013E58  EF07  F0A4         	goto	l2700
 27424  013E5C                     l16429:
 27425                           
 27426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 27427  013E5C  0E02               	movlw	2
 27428  013E5E  6EE6               	movwf	postinc1,c
 27429  013E60  0E00               	movlw	0
 27430  013E62  6EE6               	movwf	postinc1,c
 27431  013E64  0EED               	movlw	low STR_112
 27432  013E66  6EE6               	movwf	postinc1,c
 27433  013E68  0EFF               	movlw	high STR_112
 27434  013E6A  6EE6               	movwf	postinc1,c
 27435                           
 27436                           ;stkvar	_fmt @ sp[(-36)+-4]
 27437  013E6C  0ED8               	movlw	-40
 27438  013E6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27439  013E74  0ED9               	movlw	-39
 27440  013E76  006F FF8F FFDA     	movff	plusw1,fsr2h
 27441  013E7C  006F FF78  F034    	movff	postinc2,btemp+10
 27442  013E82  006F FF74  F035    	movff	postdec2,btemp+11
 27443  013E88  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27444  013E8E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27445  013E94  ECE8  F0E9         	call	_strncmp	;wreg free
 27446  013E98  502A               	movf	btemp^0,w,c
 27447  013E9A  102B               	iorwf	(btemp+1)^0,w,c
 27448  013E9C  B4D8               	btfsc	status,2,c
 27449  013E9E  D022               	goto	u16000
 27450  013EA0  0E02               	movlw	2
 27451  013EA2  6EE6               	movwf	postinc1,c
 27452  013EA4  0E00               	movlw	0
 27453  013EA6  6EE6               	movwf	postinc1,c
 27454  013EA8  0EF3               	movlw	low STR_116
 27455  013EAA  6EE6               	movwf	postinc1,c
 27456  013EAC  0EFF               	movlw	high STR_116
 27457  013EAE  6EE6               	movwf	postinc1,c
 27458                           
 27459                           ;stkvar	_fmt @ sp[(-36)+-4]
 27460  013EB0  0ED8               	movlw	-40
 27461  013EB2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27462  013EB8  0ED9               	movlw	-39
 27463  013EBA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27464  013EC0  006F FF78  F034    	movff	postinc2,btemp+10
 27465  013EC6  006F FF74  F035    	movff	postdec2,btemp+11
 27466  013ECC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27467  013ED2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27468  013ED8  ECE8  F0E9         	call	_strncmp	;wreg free
 27469  013EDC  502A               	movf	btemp^0,w,c
 27470  013EDE  102B               	iorwf	(btemp+1)^0,w,c
 27471  013EE0  A4D8               	btfss	status,2,c
 27472  013EE2  D069               	goto	l16441
 27473  013EE4                     u16000:
 27474                           
 27475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 27476                           ;stkvar	_fmt @ sp[(-32)+-4]
 27477  013EE4  0EDC               	movlw	-36
 27478  013EE6  006F FF8F FFD9     	movff	plusw1,fsr2l
 27479  013EEC  0EDD               	movlw	-35
 27480  013EEE  006F FF8F FFDA     	movff	plusw1,fsr2h
 27481  013EF4  0E02               	movlw	2
 27482  013EF6  26DE               	addwf	postinc2,f,c
 27483  013EF8  0E00               	movlw	0
 27484  013EFA  22DD               	addwfc	postdec2,f,c
 27485                           
 27486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 27487                           ;stkvar	_ap @ sp[(-32)+-6]
 27488  013EFC  0EDA               	movlw	-38
 27489  013EFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27490  013F04  0EDB               	movlw	-37
 27491  013F06  006F FF8F FFDA     	movff	plusw1,fsr2h
 27492  013F0C  0E04               	movlw	4
 27493  013F0E  5EDE               	subwf	postinc2,f,c
 27494  013F10  0E00               	movlw	0
 27495  013F12  5ADD               	subwfb	postdec2,f,c
 27496  013F14  006F FF78  F034    	movff	postinc2,btemp+10
 27497  013F1A  006F FF74  F035    	movff	postdec2,btemp+11
 27498  013F20  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27499  013F26  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27500  013F2C  006F FF78  F032    	movff	postinc2,btemp+8
 27501  013F32  006F FF78  F033    	movff	postinc2,btemp+9
 27502  013F38  006F FF78  F034    	movff	postinc2,btemp+10
 27503  013F3E  006F FF78  F035    	movff	postinc2,btemp+11
 27504  013F44  0060  F0C8  F03A   	movff	btemp+8,btemp+16
 27505  013F4A  0060  F0CC  F03B   	movff	btemp+9,btemp+17
 27506  013F50  0060  F0D0  F03C   	movff	btemp+10,btemp+18
 27507  013F56  0060  F0D4  F03D   	movff	btemp+11,btemp+19
 27508  013F5C  6A3E               	clrf	(btemp+20)^0,c
 27509  013F5E  BE3D               	btfsc	(btemp+19)^0,7,c
 27510  013F60  683E               	setf	(btemp+20)^0,c
 27511  013F62  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 27512  013F68  0060  F0F8  F040   	movff	btemp+20,btemp+22
 27513  013F6E  0060  F0F8  F041   	movff	btemp+20,btemp+23
 27514                           
 27515                           ;stkvar	_ll @ sp[(-32)+14]
 27516  013F74  0EEE               	movlw	-18
 27517  013F76  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27518  013F7C  0EEF               	movlw	-17
 27519  013F7E  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27520  013F84  0EF0               	movlw	-16
 27521  013F86  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27522  013F8C  0EF1               	movlw	-15
 27523  013F8E  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27524  013F94  0EF2               	movlw	-14
 27525  013F96  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27526  013F9C  0EF3               	movlw	-13
 27527  013F9E  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27528  013FA4  0EF4               	movlw	-12
 27529  013FA6  0060  F103  FFE3   	movff	btemp+22,plusw1
 27530  013FAC  0EF5               	movlw	-11
 27531  013FAE  0060  F107  FFE3   	movff	btemp+23,plusw1
 27532  013FB4  D729               	goto	l16425
 27533  013FB6                     l16441:
 27534                           
 27535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 27536                           ;stkvar	_ct @ sp[(-32)+26]
 27537  013FB6  0EFA               	movlw	-6
 27538  013FB8  006F FF8C  F02A    	movff	plusw1,btemp
 27539  013FBE  0E66               	movlw	102
 27540  013FC0  182A               	xorwf	btemp^0,w,c
 27541  013FC2  A4D8               	btfss	status,2,c
 27542  013FC4  D06E               	goto	l16453
 27543                           
 27544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 27545                           ;stkvar	_fmt @ sp[(-32)+-4]
 27546  013FC6  0EDC               	movlw	-36
 27547  013FC8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27548  013FCE  0EDD               	movlw	-35
 27549  013FD0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27550  013FD6  006F FF7B FFF6     	movff	postinc2,tblptrl
 27551  013FDC  006F FF77 FFF7     	movff	postdec2,tblptrh
 27552  013FE2                     	if	0	;tblptru may be non-zero
 27553  013FE2                     	endif
 27554  013FE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27555  013FE2  0E00               	movlw	low (__mediumconst shr (0+16))
 27556  013FE4  6EF8               	movwf	tblptru,c
 27557  013FE6                     	endif
 27558                           
 27559                           ;stkvar	_c @ sp[(-32)+31]
 27560  013FE6  0008               	tblrd		*
 27561  013FE8  0EFF               	movlw	-1
 27562  013FEA  006F FFD7 FFE3     	movff	tablat,plusw1
 27563                           
 27564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 27565                           ;stkvar	_fmt @ sp[(-32)+-4]
 27566  013FF0  0EDC               	movlw	-36
 27567  013FF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27568  013FF8  0EDD               	movlw	-35
 27569  013FFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27570  014000  2ADE               	incf	postinc2,f,c
 27571  014002  0E00               	movlw	0
 27572  014004  22DD               	addwfc	postdec2,f,c
 27573                           
 27574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 27575                           ;stkvar	_ap @ sp[(-32)+-6]
 27576  014006  0EDA               	movlw	-38
 27577  014008  006F FF8F FFD9     	movff	plusw1,fsr2l
 27578  01400E  0EDB               	movlw	-37
 27579  014010  006F FF8F FFDA     	movff	plusw1,fsr2h
 27580  014016  0E04               	movlw	4
 27581  014018  5EDE               	subwf	postinc2,f,c
 27582  01401A  0E00               	movlw	0
 27583  01401C  5ADD               	subwfb	postdec2,f,c
 27584  01401E  006F FF78  F034    	movff	postinc2,btemp+10
 27585  014024  006F FF74  F035    	movff	postdec2,btemp+11
 27586  01402A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27587  014030  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27588  014036  006F FF78  F032    	movff	postinc2,btemp+8
 27589  01403C  006F FF78  F033    	movff	postinc2,btemp+9
 27590  014042  006F FF78  F034    	movff	postinc2,btemp+10
 27591  014048  006F FF78  F035    	movff	postinc2,btemp+11
 27592                           
 27593                           ;stkvar	_f @ sp[(-32)+22]
 27594  01404E  0EF6               	movlw	-10
 27595  014050  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 27596  014056  0EF7               	movlw	-9
 27597  014058  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 27598  01405E  0EF8               	movlw	-8
 27599  014060  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27600  014066  0EF9               	movlw	-7
 27601  014068  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27602  01406E                     l16449:
 27603                           
 27604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 27605                           ;stkvar	_c @ sp[(-32)+31]
 27606  01406E  0EFF               	movlw	-1
 27607  014070  50E3               	movf	plusw1,w,c
 27608  014072  6EE6               	movwf	postinc1,c
 27609                           
 27610                           ;stkvar	_f @ sp[(-33)+22]
 27611  014074  0EF5               	movlw	-11
 27612  014076  006F FF8F FFE6     	movff	plusw1,postinc1
 27613  01407C  006F FF8F FFE6     	movff	plusw1,postinc1
 27614  014082  006F FF8F FFE6     	movff	plusw1,postinc1
 27615  014088  006F FF8F FFE6     	movff	plusw1,postinc1
 27616                           
 27617                           ;stkvar	_fp @ sp[(-37)+-2]
 27618  01408E  0ED9               	movlw	-39
 27619  014090  006F FF8F FFE6     	movff	plusw1,postinc1
 27620  014096  006F FF8F FFE6     	movff	plusw1,postinc1
 27621  01409C  ECAB  F08A         	call	_efgtoa	;wreg free
 27622  0140A0  D3B6               	goto	l2700
 27623  0140A2                     l16453:
 27624                           
 27625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 27626  0140A2  0E02               	movlw	2
 27627  0140A4  6EE6               	movwf	postinc1,c
 27628  0140A6  0E00               	movlw	0
 27629  0140A8  6EE6               	movwf	postinc1,c
 27630  0140AA  0EF0               	movlw	low STR_121
 27631  0140AC  6EE6               	movwf	postinc1,c
 27632  0140AE  0EFF               	movlw	high STR_121
 27633  0140B0  6EE6               	movwf	postinc1,c
 27634                           
 27635                           ;stkvar	_ct @ sp[(-36)+26]
 27636  0140B2  0EF6               	movlw	246
 27637  0140B4  24E1               	addwf	fsr1l,w,c
 27638  0140B6  6E2A               	movwf	btemp^0,c
 27639  0140B8  0EFF               	movlw	255
 27640  0140BA  20E2               	addwfc	fsr1h,w,c
 27641  0140BC  6E2B               	movwf	(btemp+1)^0,c
 27642  0140BE  0060  F0AB  FFE6   	movff	btemp,postinc1
 27643  0140C4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 27644  0140CA  ECE8  F0E9         	call	_strncmp	;wreg free
 27645  0140CE  502A               	movf	btemp^0,w,c
 27646  0140D0  102B               	iorwf	(btemp+1)^0,w,c
 27647  0140D2  A4D8               	btfss	status,2,c
 27648  0140D4  D096               	goto	l16473
 27649                           
 27650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 27651                           ;stkvar	_fmt @ sp[(-32)+-4]
 27652  0140D6  0EDC               	movlw	-36
 27653  0140D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27654  0140DE  0EDD               	movlw	-35
 27655  0140E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27656  0140E6  006F FF78  F034    	movff	postinc2,btemp+10
 27657  0140EC  006F FF74  F035    	movff	postdec2,btemp+11
 27658  0140F2  0E01               	movlw	1
 27659  0140F4  2634               	addwf	(btemp+10)^0,f,c
 27660  0140F6  0E00               	movlw	0
 27661  0140F8  2235               	addwfc	(btemp+11)^0,f,c
 27662  0140FA  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27663  014100  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27664  014106                     	if	0	;tblptru may be non-zero
 27665  014106                     	endif
 27666  014106                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27667  014106  0E00               	movlw	low (__mediumconst shr (0+16))
 27668  014108  6EF8               	movwf	tblptru,c
 27669  01410A                     	endif
 27670                           
 27671                           ;stkvar	_c @ sp[(-32)+31]
 27672  01410A  0008               	tblrd		*
 27673  01410C  0EFF               	movlw	-1
 27674  01410E  006F FFD7 FFE3     	movff	tablat,plusw1
 27675  014114  0EBF               	movlw	191
 27676  014116  6E34               	movwf	(btemp+10)^0,c
 27677  014118  0EFF               	movlw	255
 27678  01411A  6E35               	movwf	(btemp+11)^0,c
 27679                           
 27680                           ;stkvar	_fmt @ sp[(-32)+-4]
 27681  01411C  0EDC               	movlw	-36
 27682  01411E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27683  014124  0EDD               	movlw	-35
 27684  014126  006F FF8F FFDA     	movff	plusw1,fsr2h
 27685  01412C  006F FF7B FFF6     	movff	postinc2,tblptrl
 27686  014132  006F FF77 FFF7     	movff	postdec2,tblptrh
 27687  014138                     	if	0	;tblptru may be non-zero
 27688  014138                     	endif
 27689  014138                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27690  014138  0E00               	movlw	low (__mediumconst shr (0+16))
 27691  01413A  6EF8               	movwf	tblptru,c
 27692  01413C                     	endif
 27693  01413C  0008               	tblrd		*
 27694  01413E  50F5               	movf	tablat,w,c
 27695  014140  6E32               	movwf	(btemp+8)^0,c
 27696  014142  6A33               	clrf	(btemp+9)^0,c
 27697  014144  5034               	movf	(btemp+10)^0,w,c
 27698  014146  2632               	addwf	(btemp+8)^0,f,c
 27699  014148  5035               	movf	(btemp+11)^0,w,c
 27700  01414A  2233               	addwfc	(btemp+9)^0,f,c
 27701  01414C  5033               	movf	(btemp+9)^0,w,c
 27702  01414E  E106               	bnz	u16030
 27703  014150  0E1A               	movlw	26
 27704  014152  5C32               	subwf	(btemp+8)^0,w,c
 27705  014154  B0D8               	btfsc	status,0,c
 27706  014156  D002               	goto	u16030
 27707  014158  0E01               	movlw	1
 27708  01415A  D001               	goto	u16040
 27709  01415C                     u16030:
 27710  01415C  0E00               	movlw	0
 27711  01415E                     u16040:
 27712  01415E  6E34               	movwf	(btemp+10)^0,c
 27713  014160  6A35               	clrf	(btemp+11)^0,c
 27714                           
 27715                           ;stkvar	_vfpfcnvrt$6702 @ sp[(-32)+2]
 27716  014162  0EE2               	movlw	-30
 27717  014164  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27718  01416A  0EE3               	movlw	-29
 27719  01416C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27720                           
 27721                           ;stkvar	_vfpfcnvrt$6702 @ sp[(-32)+2]
 27722  014172  0EE2               	movlw	-30
 27723  014174  006F FF8C  F02A    	movff	plusw1,btemp
 27724  01417A  0EE3               	movlw	-29
 27725  01417C  50E3               	movf	plusw1,w,c
 27726  01417E  102A               	iorwf	btemp^0,w,c
 27727                           
 27728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 27729                           ;stkvar	_ap @ sp[(-32)+-6]
 27730                           
 27731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 27732                           
 27733                           ;stkvar	_f @ sp[(-32)+22]
 27734                           
 27735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 27736                           ;stkvar	_ap @ sp[(-32)+-6]
 27737  014180  0EDA               	movlw	-38
 27738  014182  006F FF8F FFD9     	movff	plusw1,fsr2l
 27739  014188  0EDB               	movlw	-37
 27740  01418A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27741  014190  0E04               	movlw	4
 27742  014192  5EDE               	subwf	postinc2,f,c
 27743  014194  0E00               	movlw	0
 27744  014196  5ADD               	subwfb	postdec2,f,c
 27745  014198  006F FF78  F034    	movff	postinc2,btemp+10
 27746  01419E  006F FF74  F035    	movff	postdec2,btemp+11
 27747  0141A4  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27748  0141AA  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27749  0141B0  006F FF78  F032    	movff	postinc2,btemp+8
 27750  0141B6  006F FF78  F033    	movff	postinc2,btemp+9
 27751  0141BC  006F FF78  F034    	movff	postinc2,btemp+10
 27752  0141C2  006F FF78  F035    	movff	postinc2,btemp+11
 27753                           
 27754                           ;stkvar	_f @ sp[(-32)+22]
 27755  0141C8  0EF6               	movlw	-10
 27756  0141CA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 27757  0141D0  0EF7               	movlw	-9
 27758  0141D2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 27759  0141D8  0EF8               	movlw	-8
 27760  0141DA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27761  0141E0  0EF9               	movlw	-7
 27762  0141E2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27763                           
 27764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 27765                           ;stkvar	_fmt @ sp[(-32)+-4]
 27766  0141E8  0EDC               	movlw	-36
 27767  0141EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 27768  0141F0  0EDD               	movlw	-35
 27769  0141F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 27770  0141F8  0E02               	movlw	2
 27771  0141FA  26DE               	addwf	postinc2,f,c
 27772  0141FC  0E00               	movlw	0
 27773  0141FE  22DD               	addwfc	postdec2,f,c
 27774  014200  D736               	goto	l16449
 27775  014202                     l16473:
 27776                           
 27777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 27778                           ;stkvar	_fmt @ sp[(-32)+-4]
 27779  014202  0EDC               	movlw	-36
 27780  014204  006F FF8F FFD9     	movff	plusw1,fsr2l
 27781  01420A  0EDD               	movlw	-35
 27782  01420C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27783  014212  006F FF7B FFF6     	movff	postinc2,tblptrl
 27784  014218  006F FF77 FFF7     	movff	postdec2,tblptrh
 27785  01421E                     	if	0	;tblptru may be non-zero
 27786  01421E                     	endif
 27787  01421E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27788  01421E  0E00               	movlw	low (__mediumconst shr (0+16))
 27789  014220  6EF8               	movwf	tblptru,c
 27790  014222                     	endif
 27791  014222  0008               	tblrd		*
 27792  014224  50F5               	movf	tablat,w,c
 27793  014226  0A73               	xorlw	115
 27794  014228  A4D8               	btfss	status,2,c
 27795  01422A  D042               	goto	l16483
 27796                           
 27797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 27798                           ;stkvar	_fmt @ sp[(-32)+-4]
 27799  01422C  0EDC               	movlw	-36
 27800  01422E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27801  014234  0EDD               	movlw	-35
 27802  014236  006F FF8F FFDA     	movff	plusw1,fsr2h
 27803  01423C  2ADE               	incf	postinc2,f,c
 27804  01423E  0E00               	movlw	0
 27805  014240  22DD               	addwfc	postdec2,f,c
 27806                           
 27807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 27808                           ;stkvar	_ap @ sp[(-32)+-6]
 27809  014242  0EDA               	movlw	-38
 27810  014244  006F FF8F FFD9     	movff	plusw1,fsr2l
 27811  01424A  0EDB               	movlw	-37
 27812  01424C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27813  014252  0E02               	movlw	2
 27814  014254  5EDE               	subwf	postinc2,f,c
 27815  014256  0E00               	movlw	0
 27816  014258  5ADD               	subwfb	postdec2,f,c
 27817  01425A  006F FF78  F034    	movff	postinc2,btemp+10
 27818  014260  006F FF74  F035    	movff	postdec2,btemp+11
 27819  014266  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27820  01426C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27821  014272  006F FF78  F034    	movff	postinc2,btemp+10
 27822  014278  006F FF74  F035    	movff	postdec2,btemp+11
 27823                           
 27824                           ;stkvar	_cp @ sp[(-32)+29]
 27825  01427E  0EFE               	movlw	-2
 27826  014280  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27827  014286  0EFD               	movlw	-3
 27828  014288  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27829                           
 27830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 27831                           ;stkvar	_cp @ sp[(-32)+29]
 27832  01428E  0EFD               	movlw	-3
 27833  014290  006F FF8F FFE6     	movff	plusw1,postinc1
 27834  014296  006F FF8F FFE6     	movff	plusw1,postinc1
 27835                           
 27836                           ;stkvar	_fp @ sp[(-34)+-2]
 27837  01429C  0EDC               	movlw	-36
 27838  01429E  006F FF8F FFE6     	movff	plusw1,postinc1
 27839  0142A4  006F FF8F FFE6     	movff	plusw1,postinc1
 27840  0142AA  ECE5  F0DD         	call	_stoa	;wreg free
 27841  0142AE  D2AF               	goto	l2700
 27842  0142B0                     l16483:
 27843                           
 27844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 27845                           ;stkvar	_fmt @ sp[(-32)+-4]
 27846  0142B0  0EDC               	movlw	-36
 27847  0142B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27848  0142B8  0EDD               	movlw	-35
 27849  0142BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27850  0142C0  006F FF7B FFF6     	movff	postinc2,tblptrl
 27851  0142C6  006F FF77 FFF7     	movff	postdec2,tblptrh
 27852  0142CC                     	if	0	;tblptru may be non-zero
 27853  0142CC                     	endif
 27854  0142CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27855  0142CC  0E00               	movlw	low (__mediumconst shr (0+16))
 27856  0142CE  6EF8               	movwf	tblptru,c
 27857  0142D0                     	endif
 27858  0142D0  0008               	tblrd		*
 27859  0142D2  50F5               	movf	tablat,w,c
 27860  0142D4  0A75               	xorlw	117
 27861  0142D6  A4D8               	btfss	status,2,c
 27862  0142D8  D07C               	goto	l16493
 27863                           
 27864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 27865                           ;stkvar	_fmt @ sp[(-32)+-4]
 27866  0142DA  0EDC               	movlw	-36
 27867  0142DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 27868  0142E2  0EDD               	movlw	-35
 27869  0142E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27870  0142EA  2ADE               	incf	postinc2,f,c
 27871  0142EC  0E00               	movlw	0
 27872  0142EE  22DD               	addwfc	postdec2,f,c
 27873                           
 27874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 27875                           ;stkvar	_ap @ sp[(-32)+-6]
 27876  0142F0  0EDA               	movlw	-38
 27877  0142F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27878  0142F8  0EDB               	movlw	-37
 27879  0142FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27880  014300  0E02               	movlw	2
 27881  014302  5EDE               	subwf	postinc2,f,c
 27882  014304  0E00               	movlw	0
 27883  014306  5ADD               	subwfb	postdec2,f,c
 27884  014308  006F FF78  F034    	movff	postinc2,btemp+10
 27885  01430E  006F FF74  F035    	movff	postdec2,btemp+11
 27886  014314  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27887  01431A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27888  014320  006F FF78  F034    	movff	postinc2,btemp+10
 27889  014326  006F FF74  F035    	movff	postdec2,btemp+11
 27890  01432C  5034               	movf	(btemp+10)^0,w,c
 27891  01432E  6E3A               	movwf	(btemp+16)^0,c
 27892  014330  5035               	movf	(btemp+11)^0,w,c
 27893  014332  6E3B               	movwf	(btemp+17)^0,c
 27894  014334  6A3C               	clrf	(btemp+18)^0,c
 27895  014336  6A3D               	clrf	(btemp+19)^0,c
 27896  014338  6A3E               	clrf	(btemp+20)^0,c
 27897  01433A  6A3F               	clrf	(btemp+21)^0,c
 27898  01433C  6A40               	clrf	(btemp+22)^0,c
 27899  01433E  6A41               	clrf	(btemp+23)^0,c
 27900                           
 27901                           ;stkvar	_llu @ sp[(-32)+6]
 27902  014340  0EE6               	movlw	-26
 27903  014342  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27904  014348  0EE7               	movlw	-25
 27905  01434A  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27906  014350  0EE8               	movlw	-24
 27907  014352  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27908  014358  0EE9               	movlw	-23
 27909  01435A  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27910  014360  0EEA               	movlw	-22
 27911  014362  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27912  014368  0EEB               	movlw	-21
 27913  01436A  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27914  014370  0EEC               	movlw	-20
 27915  014372  0060  F103  FFE3   	movff	btemp+22,plusw1
 27916  014378  0EED               	movlw	-19
 27917  01437A  0060  F107  FFE3   	movff	btemp+23,plusw1
 27918                           
 27919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 27920                           ;stkvar	_llu @ sp[(-32)+6]
 27921  014380  50E1               	movf	fsr1l,w,c
 27922  014382  0FE6               	addlw	-26
 27923  014384  6ED9               	movwf	fsr2l,c
 27924  014386  50E2               	movf	fsr1h,w,c
 27925  014388  6EDA               	movwf	fsr2h,c
 27926  01438A  0EFF               	movlw	255
 27927  01438C  22DA               	addwfc	fsr2h,f,c
 27928  01438E  006F FF7B FFE6     	movff	postinc2,postinc1
 27929  014394  006F FF7B FFE6     	movff	postinc2,postinc1
 27930  01439A  006F FF7B FFE6     	movff	postinc2,postinc1
 27931  0143A0  006F FF7B FFE6     	movff	postinc2,postinc1
 27932  0143A6  006F FF7B FFE6     	movff	postinc2,postinc1
 27933  0143AC  006F FF7B FFE6     	movff	postinc2,postinc1
 27934  0143B2  006F FF7B FFE6     	movff	postinc2,postinc1
 27935  0143B8  006F FF7B FFE6     	movff	postinc2,postinc1
 27936                           
 27937                           ;stkvar	_fp @ sp[(-40)+-2]
 27938  0143BE  0ED6               	movlw	-42
 27939  0143C0  006F FF8F FFE6     	movff	plusw1,postinc1
 27940  0143C6  006F FF8F FFE6     	movff	plusw1,postinc1
 27941  0143CC  EC78  F0D6         	call	_utoa	;wreg free
 27942  0143D0  D21E               	goto	l2700
 27943  0143D2                     l16493:
 27944                           
 27945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 27946  0143D2  0E02               	movlw	2
 27947  0143D4  6EE6               	movwf	postinc1,c
 27948  0143D6  0E00               	movlw	0
 27949  0143D8  6EE6               	movwf	postinc1,c
 27950  0143DA  0EF6               	movlw	low STR_126
 27951  0143DC  6EE6               	movwf	postinc1,c
 27952  0143DE  0EFF               	movlw	high STR_126
 27953  0143E0  6EE6               	movwf	postinc1,c
 27954                           
 27955                           ;stkvar	_fmt @ sp[(-36)+-4]
 27956  0143E2  0ED8               	movlw	-40
 27957  0143E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 27958  0143EA  0ED9               	movlw	-39
 27959  0143EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 27960  0143F2  006F FF78  F034    	movff	postinc2,btemp+10
 27961  0143F8  006F FF74  F035    	movff	postdec2,btemp+11
 27962  0143FE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27963  014404  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27964  01440A  ECE8  F0E9         	call	_strncmp	;wreg free
 27965  01440E  502A               	movf	btemp^0,w,c
 27966  014410  102B               	iorwf	(btemp+1)^0,w,c
 27967  014412  A4D8               	btfss	status,2,c
 27968  014414  D039               	goto	l16503
 27969                           
 27970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 27971                           ;stkvar	_fmt @ sp[(-32)+-4]
 27972  014416  0EDC               	movlw	-36
 27973  014418  006F FF8F FFD9     	movff	plusw1,fsr2l
 27974  01441E  0EDD               	movlw	-35
 27975  014420  006F FF8F FFDA     	movff	plusw1,fsr2h
 27976  014426  0E02               	movlw	2
 27977  014428  26DE               	addwf	postinc2,f,c
 27978  01442A  0E00               	movlw	0
 27979  01442C  22DD               	addwfc	postdec2,f,c
 27980                           
 27981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 27982                           ;stkvar	_ap @ sp[(-32)+-6]
 27983  01442E  0EDA               	movlw	-38
 27984  014430  006F FF8F FFD9     	movff	plusw1,fsr2l
 27985  014436  0EDB               	movlw	-37
 27986  014438  006F FF8F FFDA     	movff	plusw1,fsr2h
 27987  01443E  0E04               	movlw	4
 27988  014440  5EDE               	subwf	postinc2,f,c
 27989  014442  0E00               	movlw	0
 27990  014444  5ADD               	subwfb	postdec2,f,c
 27991  014446  006F FF78  F034    	movff	postinc2,btemp+10
 27992  01444C  006F FF74  F035    	movff	postdec2,btemp+11
 27993  014452  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27994  014458  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27995  01445E  006F FF78  F032    	movff	postinc2,btemp+8
 27996  014464  006F FF78  F033    	movff	postinc2,btemp+9
 27997  01446A  006F FF78  F034    	movff	postinc2,btemp+10
 27998  014470  006F FF78  F035    	movff	postinc2,btemp+11
 27999  014476  5032               	movf	(btemp+8)^0,w,c
 28000  014478  6E3A               	movwf	(btemp+16)^0,c
 28001  01447A  5033               	movf	(btemp+9)^0,w,c
 28002  01447C  6E3B               	movwf	(btemp+17)^0,c
 28003  01447E  5034               	movf	(btemp+10)^0,w,c
 28004  014480  6E3C               	movwf	(btemp+18)^0,c
 28005  014482  5035               	movf	(btemp+11)^0,w,c
 28006  014484  6E3D               	movwf	(btemp+19)^0,c
 28007  014486  D758               	goto	L26
 28008  014488                     l16503:
 28009                           
 28010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 28011                           ;stkvar	_fmt @ sp[(-32)+-4]
 28012  014488  0EDC               	movlw	-36
 28013  01448A  006F FF8F FFD9     	movff	plusw1,fsr2l
 28014  014490  0EDD               	movlw	-35
 28015  014492  006F FF8F FFDA     	movff	plusw1,fsr2h
 28016  014498  006F FF7B FFF6     	movff	postinc2,tblptrl
 28017  01449E  006F FF77 FFF7     	movff	postdec2,tblptrh
 28018  0144A4                     	if	0	;tblptru may be non-zero
 28019  0144A4                     	endif
 28020  0144A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28021  0144A4  0E00               	movlw	low (__mediumconst shr (0+16))
 28022  0144A6  6EF8               	movwf	tblptru,c
 28023  0144A8                     	endif
 28024  0144A8  0008               	tblrd		*
 28025  0144AA  50F5               	movf	tablat,w,c
 28026  0144AC  0A78               	xorlw	120
 28027  0144AE  B4D8               	btfsc	status,2,c
 28028  0144B0  D015               	goto	u16100
 28029                           
 28030                           ;stkvar	_fmt @ sp[(-32)+-4]
 28031  0144B2  0EDC               	movlw	-36
 28032  0144B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 28033  0144BA  0EDD               	movlw	-35
 28034  0144BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 28035  0144C2  006F FF7B FFF6     	movff	postinc2,tblptrl
 28036  0144C8  006F FF77 FFF7     	movff	postdec2,tblptrh
 28037  0144CE                     	if	0	;tblptru may be non-zero
 28038  0144CE                     	endif
 28039  0144CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28040  0144CE  0E00               	movlw	low (__mediumconst shr (0+16))
 28041  0144D0  6EF8               	movwf	tblptru,c
 28042  0144D2                     	endif
 28043  0144D2  0008               	tblrd		*
 28044  0144D4  50F5               	movf	tablat,w,c
 28045  0144D6  0A58               	xorlw	88
 28046  0144D8  A4D8               	btfss	status,2,c
 28047  0144DA  D094               	goto	l16517
 28048  0144DC                     u16100:
 28049                           
 28050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 28051                           ;stkvar	_fmt @ sp[(-32)+-4]
 28052  0144DC  0EDC               	movlw	-36
 28053  0144DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 28054  0144E4  0EDD               	movlw	-35
 28055  0144E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 28056  0144EC  006F FF7B FFF6     	movff	postinc2,tblptrl
 28057  0144F2  006F FF77 FFF7     	movff	postdec2,tblptrh
 28058  0144F8                     	if	0	;tblptru may be non-zero
 28059  0144F8                     	endif
 28060  0144F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28061  0144F8  0E00               	movlw	low (__mediumconst shr (0+16))
 28062  0144FA  6EF8               	movwf	tblptru,c
 28063  0144FC                     	endif
 28064                           
 28065                           ;stkvar	_c @ sp[(-32)+31]
 28066  0144FC  0008               	tblrd		*
 28067  0144FE  0EFF               	movlw	-1
 28068  014500  006F FFD7 FFE3     	movff	tablat,plusw1
 28069                           
 28070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 28071                           ;stkvar	_fmt @ sp[(-32)+-4]
 28072  014506  0EDC               	movlw	-36
 28073  014508  006F FF8F FFD9     	movff	plusw1,fsr2l
 28074  01450E  0EDD               	movlw	-35
 28075  014510  006F FF8F FFDA     	movff	plusw1,fsr2h
 28076  014516  2ADE               	incf	postinc2,f,c
 28077  014518  0E00               	movlw	0
 28078  01451A  22DD               	addwfc	postdec2,f,c
 28079                           
 28080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 28081                           ;stkvar	_ap @ sp[(-32)+-6]
 28082  01451C  0EDA               	movlw	-38
 28083  01451E  006F FF8F FFD9     	movff	plusw1,fsr2l
 28084  014524  0EDB               	movlw	-37
 28085  014526  006F FF8F FFDA     	movff	plusw1,fsr2h
 28086  01452C  0E02               	movlw	2
 28087  01452E  5EDE               	subwf	postinc2,f,c
 28088  014530  0E00               	movlw	0
 28089  014532  5ADD               	subwfb	postdec2,f,c
 28090  014534  006F FF78  F034    	movff	postinc2,btemp+10
 28091  01453A  006F FF74  F035    	movff	postdec2,btemp+11
 28092  014540  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 28093  014546  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 28094  01454C  006F FF78  F034    	movff	postinc2,btemp+10
 28095  014552  006F FF74  F035    	movff	postdec2,btemp+11
 28096  014558  5034               	movf	(btemp+10)^0,w,c
 28097  01455A  6E3A               	movwf	(btemp+16)^0,c
 28098  01455C  5035               	movf	(btemp+11)^0,w,c
 28099  01455E  6E3B               	movwf	(btemp+17)^0,c
 28100  014560  6A3C               	clrf	(btemp+18)^0,c
 28101  014562  6A3D               	clrf	(btemp+19)^0,c
 28102  014564  6A3E               	clrf	(btemp+20)^0,c
 28103  014566  6A3F               	clrf	(btemp+21)^0,c
 28104  014568  6A40               	clrf	(btemp+22)^0,c
 28105  01456A  6A41               	clrf	(btemp+23)^0,c
 28106                           
 28107                           ;stkvar	_llu @ sp[(-32)+6]
 28108  01456C  0EE6               	movlw	-26
 28109  01456E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 28110  014574  0EE7               	movlw	-25
 28111  014576  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 28112  01457C  0EE8               	movlw	-24
 28113  01457E  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 28114  014584  0EE9               	movlw	-23
 28115  014586  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 28116  01458C  0EEA               	movlw	-22
 28117  01458E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 28118  014594  0EEB               	movlw	-21
 28119  014596  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 28120  01459C  0EEC               	movlw	-20
 28121  01459E  0060  F103  FFE3   	movff	btemp+22,plusw1
 28122  0145A4  0EED               	movlw	-19
 28123  0145A6  0060  F107  FFE3   	movff	btemp+23,plusw1
 28124                           
 28125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 28126                           ;stkvar	_c @ sp[(-32)+31]
 28127  0145AC  0EFF               	movlw	-1
 28128  0145AE  50E3               	movf	plusw1,w,c
 28129  0145B0  6EE6               	movwf	postinc1,c
 28130                           
 28131                           ;stkvar	_llu @ sp[(-33)+6]
 28132  0145B2  50E1               	movf	fsr1l,w,c
 28133  0145B4  0FE5               	addlw	-27
 28134  0145B6  6ED9               	movwf	fsr2l,c
 28135  0145B8  50E2               	movf	fsr1h,w,c
 28136  0145BA  6EDA               	movwf	fsr2h,c
 28137  0145BC  0EFF               	movlw	255
 28138  0145BE  22DA               	addwfc	fsr2h,f,c
 28139  0145C0  006F FF7B FFE6     	movff	postinc2,postinc1
 28140  0145C6  006F FF7B FFE6     	movff	postinc2,postinc1
 28141  0145CC  006F FF7B FFE6     	movff	postinc2,postinc1
 28142  0145D2  006F FF7B FFE6     	movff	postinc2,postinc1
 28143  0145D8  006F FF7B FFE6     	movff	postinc2,postinc1
 28144  0145DE  006F FF7B FFE6     	movff	postinc2,postinc1
 28145  0145E4  006F FF7B FFE6     	movff	postinc2,postinc1
 28146  0145EA  006F FF7B FFE6     	movff	postinc2,postinc1
 28147                           
 28148                           ;stkvar	_fp @ sp[(-41)+-2]
 28149  0145F0  0ED5               	movlw	-43
 28150  0145F2  006F FF8F FFE6     	movff	plusw1,postinc1
 28151  0145F8  006F FF8F FFE6     	movff	plusw1,postinc1
 28152  0145FE  EC8B  F0CF         	call	_xtoa	;wreg free
 28153  014602  D105               	goto	l2700
 28154  014604                     l16517:
 28155                           
 28156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 28157  014604  0E02               	movlw	2
 28158  014606  6EE6               	movwf	postinc1,c
 28159  014608  0E00               	movlw	0
 28160  01460A  6EE6               	movwf	postinc1,c
 28161  01460C  0EF9               	movlw	low STR_131
 28162  01460E  6EE6               	movwf	postinc1,c
 28163  014610  0EFF               	movlw	high STR_131
 28164  014612  6EE6               	movwf	postinc1,c
 28165                           
 28166                           ;stkvar	_fmt @ sp[(-36)+-4]
 28167  014614  0ED8               	movlw	-40
 28168  014616  006F FF8F FFD9     	movff	plusw1,fsr2l
 28169  01461C  0ED9               	movlw	-39
 28170  01461E  006F FF8F FFDA     	movff	plusw1,fsr2h
 28171  014624  006F FF78  F034    	movff	postinc2,btemp+10
 28172  01462A  006F FF74  F035    	movff	postdec2,btemp+11
 28173  014630  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28174  014636  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28175  01463C  ECE8  F0E9         	call	_strncmp	;wreg free
 28176  014640  502A               	movf	btemp^0,w,c
 28177  014642  102B               	iorwf	(btemp+1)^0,w,c
 28178  014644  B4D8               	btfsc	status,2,c
 28179  014646  D022               	goto	u16120
 28180  014648  0E02               	movlw	2
 28181  01464A  6EE6               	movwf	postinc1,c
 28182  01464C  0E00               	movlw	0
 28183  01464E  6EE6               	movwf	postinc1,c
 28184  014650  0EEA               	movlw	low STR_135
 28185  014652  6EE6               	movwf	postinc1,c
 28186  014654  0EFF               	movlw	high STR_135
 28187  014656  6EE6               	movwf	postinc1,c
 28188                           
 28189                           ;stkvar	_fmt @ sp[(-36)+-4]
 28190  014658  0ED8               	movlw	-40
 28191  01465A  006F FF8F FFD9     	movff	plusw1,fsr2l
 28192  014660  0ED9               	movlw	-39
 28193  014662  006F FF8F FFDA     	movff	plusw1,fsr2h
 28194  014668  006F FF78  F034    	movff	postinc2,btemp+10
 28195  01466E  006F FF74  F035    	movff	postdec2,btemp+11
 28196  014674  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28197  01467A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28198  014680  ECE8  F0E9         	call	_strncmp	;wreg free
 28199  014684  502A               	movf	btemp^0,w,c
 28200  014686  102B               	iorwf	(btemp+1)^0,w,c
 28201  014688  A4D8               	btfss	status,2,c
 28202  01468A  D058               	goto	l16531
 28203  01468C                     u16120:
 28204                           
 28205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 28206                           ;stkvar	_fmt @ sp[(-32)+-4]
 28207  01468C  0EDC               	movlw	-36
 28208  01468E  006F FF8F FFD9     	movff	plusw1,fsr2l
 28209  014694  0EDD               	movlw	-35
 28210  014696  006F FF8F FFDA     	movff	plusw1,fsr2h
 28211  01469C  006F FF78  F034    	movff	postinc2,btemp+10
 28212  0146A2  006F FF74  F035    	movff	postdec2,btemp+11
 28213  0146A8  0E01               	movlw	1
 28214  0146AA  2634               	addwf	(btemp+10)^0,f,c
 28215  0146AC  0E00               	movlw	0
 28216  0146AE  2235               	addwfc	(btemp+11)^0,f,c
 28217  0146B0  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 28218  0146B6  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 28219  0146BC                     	if	0	;tblptru may be non-zero
 28220  0146BC                     	endif
 28221  0146BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28222  0146BC  0E00               	movlw	low (__mediumconst shr (0+16))
 28223  0146BE  6EF8               	movwf	tblptru,c
 28224  0146C0                     	endif
 28225                           
 28226                           ;stkvar	_c @ sp[(-32)+31]
 28227  0146C0  0008               	tblrd		*
 28228  0146C2  0EFF               	movlw	-1
 28229  0146C4  006F FFD7 FFE3     	movff	tablat,plusw1
 28230                           
 28231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 28232                           ;stkvar	_fmt @ sp[(-32)+-4]
 28233  0146CA  0EDC               	movlw	-36
 28234  0146CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 28235  0146D2  0EDD               	movlw	-35
 28236  0146D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 28237  0146DA  0E02               	movlw	2
 28238  0146DC  26DE               	addwf	postinc2,f,c
 28239  0146DE  0E00               	movlw	0
 28240  0146E0  22DD               	addwfc	postdec2,f,c
 28241                           
 28242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 28243                           ;stkvar	_ap @ sp[(-32)+-6]
 28244  0146E2  0EDA               	movlw	-38
 28245  0146E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 28246  0146EA  0EDB               	movlw	-37
 28247  0146EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 28248  0146F2  0E04               	movlw	4
 28249  0146F4  5EDE               	subwf	postinc2,f,c
 28250  0146F6  0E00               	movlw	0
 28251  0146F8  5ADD               	subwfb	postdec2,f,c
 28252  0146FA  006F FF78  F034    	movff	postinc2,btemp+10
 28253  014700  006F FF74  F035    	movff	postdec2,btemp+11
 28254  014706  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 28255  01470C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 28256  014712  006F FF78  F032    	movff	postinc2,btemp+8
 28257  014718  006F FF78  F033    	movff	postinc2,btemp+9
 28258  01471E  006F FF78  F034    	movff	postinc2,btemp+10
 28259  014724  006F FF78  F035    	movff	postinc2,btemp+11
 28260  01472A  5032               	movf	(btemp+8)^0,w,c
 28261  01472C  6E3A               	movwf	(btemp+16)^0,c
 28262  01472E  5033               	movf	(btemp+9)^0,w,c
 28263  014730  6E3B               	movwf	(btemp+17)^0,c
 28264  014732  5034               	movf	(btemp+10)^0,w,c
 28265  014734  6E3C               	movwf	(btemp+18)^0,c
 28266  014736  5035               	movf	(btemp+11)^0,w,c
 28267  014738  6E3D               	movwf	(btemp+19)^0,c
 28268  01473A  D714               	goto	L27
 28269  01473C                     l16531:
 28270                           
 28271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 28272                           ;stkvar	_fmt @ sp[(-32)+-4]
 28273  01473C  0EDC               	movlw	-36
 28274  01473E  006F FF8F FFD9     	movff	plusw1,fsr2l
 28275  014744  0EDD               	movlw	-35
 28276  014746  006F FF8F FFDA     	movff	plusw1,fsr2h
 28277  01474C  006F FF7B FFF6     	movff	postinc2,tblptrl
 28278  014752  006F FF77 FFF7     	movff	postdec2,tblptrh
 28279  014758                     	if	0	;tblptru may be non-zero
 28280  014758                     	endif
 28281  014758                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28282  014758  0E00               	movlw	low (__mediumconst shr (0+16))
 28283  01475A  6EF8               	movwf	tblptru,c
 28284  01475C                     	endif
 28285  01475C  0008               	tblrd		*
 28286  01475E  50F5               	movf	tablat,w,c
 28287  014760  0A25               	xorlw	37
 28288  014762  A4D8               	btfss	status,2,c
 28289  014764  D01A               	goto	l16541
 28290                           
 28291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 28292                           ;stkvar	_fmt @ sp[(-32)+-4]
 28293  014766  0EDC               	movlw	-36
 28294  014768  006F FF8F FFD9     	movff	plusw1,fsr2l
 28295  01476E  0EDD               	movlw	-35
 28296  014770  006F FF8F FFDA     	movff	plusw1,fsr2h
 28297  014776  2ADE               	incf	postinc2,f,c
 28298  014778  0E00               	movlw	0
 28299  01477A  22DD               	addwfc	postdec2,f,c
 28300                           
 28301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 28302                           ;stkvar	_fp @ sp[(-32)+-2]
 28303  01477C  0EDE               	movlw	-34
 28304  01477E  006F FF8F FFE6     	movff	plusw1,postinc1
 28305  014784  006F FF8F FFE6     	movff	plusw1,postinc1
 28306  01478A  0E25               	movlw	37
 28307  01478C  6EE6               	movwf	postinc1,c
 28308  01478E  0E00               	movlw	0
 28309  014790  6EE6               	movwf	postinc1,c
 28310  014792  EC98  F0FC         	call	_fputc	;wreg free
 28311  014796                     l16537:
 28312                           
 28313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 28314  014796  0E01               	movlw	1
 28315  014798  D00C               	goto	L28
 28316  01479A                     l16541:
 28317                           
 28318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 28319                           ;stkvar	_fmt @ sp[(-32)+-4]
 28320  01479A  0EDC               	movlw	-36
 28321  01479C  006F FF8F FFD9     	movff	plusw1,fsr2l
 28322  0147A2  0EDD               	movlw	-35
 28323  0147A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 28324  0147AA  2ADE               	incf	postinc2,f,c
 28325  0147AC  0E00               	movlw	0
 28326  0147AE  22DD               	addwfc	postdec2,f,c
 28327                           
 28328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 28329  0147B0  0E00               	movlw	0
 28330  0147B2                     L28:
 28331  0147B2  6E2A               	movwf	btemp^0,c
 28332  0147B4  0E00               	movlw	0
 28333  0147B6  6E2B               	movwf	(btemp+1)^0,c
 28334  0147B8  D02A               	goto	l2700
 28335  0147BA                     l16547:
 28336                           
 28337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 28338                           ;stkvar	_fp @ sp[(-32)+-2]
 28339  0147BA  0EDE               	movlw	-34
 28340  0147BC  006F FF8F FFE6     	movff	plusw1,postinc1
 28341  0147C2  006F FF8F FFE6     	movff	plusw1,postinc1
 28342                           
 28343                           ;stkvar	_fmt @ sp[(-34)+-4]
 28344  0147C8  0EDA               	movlw	-38
 28345  0147CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 28346  0147D0  0EDB               	movlw	-37
 28347  0147D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 28348  0147D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 28349  0147DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 28350  0147E4                     	if	0	;tblptru may be non-zero
 28351  0147E4                     	endif
 28352  0147E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28353  0147E4  0E00               	movlw	low (__mediumconst shr (0+16))
 28354  0147E6  6EF8               	movwf	tblptru,c
 28355  0147E8                     	endif
 28356  0147E8  0008               	tblrd		*
 28357  0147EA  50F5               	movf	tablat,w,c
 28358  0147EC  6EE6               	movwf	postinc1,c
 28359  0147EE  0E00               	movlw	0
 28360  0147F0  6EE6               	movwf	postinc1,c
 28361  0147F2  EC98  F0FC         	call	_fputc	;wreg free
 28362                           
 28363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 28364                           ;stkvar	_fmt @ sp[(-32)+-4]
 28365  0147F6  0EDC               	movlw	-36
 28366  0147F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 28367  0147FE  0EDD               	movlw	-35
 28368  014800  006F FF8F FFDA     	movff	plusw1,fsr2h
 28369  014806  2ADE               	incf	postinc2,f,c
 28370  014808  0E00               	movlw	0
 28371  01480A  22DD               	addwfc	postdec2,f,c
 28372  01480C  D7C4               	goto	l16537
 28373  01480E                     l2700:
 28374                           
 28375                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 28376  01480E  0EDA               	movlw	218
 28377  014810  26E1               	addwf	fsr1l,f,c
 28378  014812  0EFF               	movlw	255
 28379  014814  22E2               	addwfc	fsr1h,f,c
 28380  014816  0012               	return		;funcret
 28381  014818                     __end_of_vfpfcnvrt:
 28382                           	opt callstack 0
 28383                           
 28384 ;; *************** function _xtoa *****************
 28385 ;; Defined at:
 28386 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28387 ;; Parameters:    Size  Location     Type
 28388 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28389 ;;		 -> f(6), NULL(0), 
 28390 ;;  d               8  [STACK] unsigned long long 
 28391 ;;  x               1  [STACK] unsigned char 
 28392 ;; Auto vars:     Size  Location     Type
 28393 ;;  n               8  [STACK] unsigned long long 
 28394 ;;  c               2  [STACK] int 
 28395 ;;  i               2  [STACK] int 
 28396 ;;  w               2  [STACK] int 
 28397 ;;  p               2  [STACK] int 
 28398 ;; Return value:  Size  Location     Type
 28399 ;;                  2  [STACK] int 
 28400 ;; Registers used:
 28401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 28402 ;; Tracked objects:
 28403 ;;		On entry : 0/0
 28404 ;;		On exit  : 0/0
 28405 ;;		Unchanged: 0/0
 28406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28411 ;;Total ram usage:        0 bytes
 28412 ;; Hardware stack levels used:    1
 28413 ;; Hardware stack levels required when called:   20
 28414 ;; This function calls:
 28415 ;;		_isalpha
 28416 ;;		_isupper
 28417 ;;		_pad
 28418 ;;		_toupper
 28419 ;; This function is called by:
 28420 ;;		_vfpfcnvrt
 28421 ;; This function uses a reentrant model
 28422 ;;
 28423                           
 28424                           	psect	text96
 28425  019F16                     __ptext96:
 28426                           	opt callstack 0
 28427  019F16                     _xtoa:
 28428                           	opt callstack 0
 28429                           
 28430                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 28431  019F16  0E14               	movlw	20
 28432  019F18  26E1               	addwf	fsr1l,f,c
 28433  019F1A  0E00               	movlw	0
 28434  019F1C  22E2               	addwfc	fsr1h,f,c
 28435                           
 28436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 28437                           
 28438                           ;incstack = 0
 28439 ;; hardware stack exceeded
 28440  019F1E  AE4D               	btfss	(_prec+1)^0,7,c
 28441                           
 28442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 28443  019F20  924E               	bcf	_flags^0,1,c
 28444                           
 28445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 28446  019F22  BE4D               	btfsc	(_prec+1)^0,7,c
 28447  019F24  D005               	goto	u15580
 28448  019F26  504D               	movf	(_prec+1)^0,w,c
 28449  019F28  E110               	bnz	l16201
 28450  019F2A  044C               	decf	_prec^0,w,c
 28451  019F2C  B0D8               	btfsc	status,0,c
 28452  019F2E  D00D               	goto	l16201
 28453  019F30                     u15580:
 28454  019F30  0E01               	movlw	1
 28455  019F32  6E34               	movwf	(btemp+10)^0,c
 28456  019F34  0E00               	movlw	0
 28457  019F36  6E35               	movwf	(btemp+11)^0,c
 28458                           
 28459                           ;stkvar	_p @ sp[(-20)+18]
 28460  019F38  0EFE               	movlw	-2
 28461  019F3A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28462  019F40  0EFF               	movlw	-1
 28463  019F42  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28464  019F48  D008               	goto	l2650
 28465  019F4A                     l16201:
 28466                           
 28467                           ;stkvar	_p @ sp[(-20)+18]
 28468  019F4A  0EFE               	movlw	-2
 28469  019F4C  0060  F133  FFE3   	movff	_prec,plusw1
 28470  019F52  0EFF               	movlw	-1
 28471  019F54  0060  F137  FFE3   	movff	_prec+1,plusw1
 28472  019F5A                     l2650:
 28473                           
 28474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 28475                           ;stkvar	_w @ sp[(-20)+16]
 28476  019F5A  0EFC               	movlw	-4
 28477  019F5C  0060  F12B  FFE3   	movff	_width,plusw1
 28478  019F62  0EFD               	movlw	-3
 28479  019F64  0060  F12F  FFE3   	movff	_width+1,plusw1
 28480                           
 28481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 28482  019F6A  A84E               	btfss	_flags^0,4,c
 28483  019F6C  D00B               	goto	l16207
 28484                           
 28485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 28486                           ;stkvar	_w @ sp[(-20)+16]
 28487  019F6E  50E1               	movf	fsr1l,w,c
 28488  019F70  0FFC               	addlw	-4
 28489  019F72  6ED9               	movwf	fsr2l,c
 28490  019F74  50E2               	movf	fsr1h,w,c
 28491  019F76  6EDA               	movwf	fsr2h,c
 28492  019F78  0EFF               	movlw	255
 28493  019F7A  22DA               	addwfc	fsr2h,f,c
 28494  019F7C  0EFE               	movlw	254
 28495  019F7E  26DE               	addwf	postinc2,f,c
 28496  019F80  0EFF               	movlw	255
 28497  019F82  22DD               	addwfc	postdec2,f,c
 28498  019F84                     l16207:
 28499                           
 28500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 28501                           ;stkvar	_d @ sp[(-20)+-10]
 28502  019F84  0EE2               	movlw	226
 28503  019F86  24E1               	addwf	fsr1l,w,c
 28504  019F88  6ED9               	movwf	fsr2l,c
 28505  019F8A  0EFF               	movlw	255
 28506  019F8C  20E2               	addwfc	fsr1h,w,c
 28507  019F8E  6EDA               	movwf	fsr2h,c
 28508                           
 28509                           ;stkvar	_n @ sp[(-20)+4]
 28510  019F90  0E08               	movlw	8
 28511  019F92  6E2A               	movwf	btemp^0,c
 28512  019F94  0EF0               	movlw	-16
 28513  019F96                     us1560999:
 28514  019F96  006F FF7B FFE3     	movff	postinc2,plusw1
 28515  019F9C  28E8               	incf	wreg,w,c
 28516  019F9E  2E2A               	decfsz	btemp^0,f,c
 28517  019FA0  D7FA               	bra	us1560999
 28518                           
 28519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 28520  019FA2  0E4F               	movlw	79
 28521  019FA4  6E34               	movwf	(btemp+10)^0,c
 28522  019FA6  0E00               	movlw	0
 28523  019FA8  6E35               	movwf	(btemp+11)^0,c
 28524                           
 28525                           ;stkvar	_i @ sp[(-20)+14]
 28526  019FAA  0EFA               	movlw	-6
 28527  019FAC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28528  019FB2  0EFB               	movlw	-5
 28529  019FB4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28530                           
 28531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 28532  019FBA  0103               	movlb	3	; () banked
 28533  019FBC  6BA3               	clrf	(_dbuf+79)& (0+255),b
 28534                           
 28535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28536  019FBE  D0EE               	goto	l16245
 28537  019FC0                     l16213:
 28538                           
 28539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 28540                           ;stkvar	_i @ sp[(-20)+14]
 28541  019FC0  50E1               	movf	fsr1l,w,c
 28542  019FC2  0FFA               	addlw	-6
 28543  019FC4  6ED9               	movwf	fsr2l,c
 28544  019FC6  50E2               	movf	fsr1h,w,c
 28545  019FC8  6EDA               	movwf	fsr2h,c
 28546  019FCA  0EFF               	movlw	255
 28547  019FCC  22DA               	addwfc	fsr2h,f,c
 28548  019FCE  06DE               	decf	postinc2,f,c
 28549  019FD0  0E00               	movlw	0
 28550  019FD2  5ADD               	subwfb	postdec2,f,c
 28551                           
 28552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 28553                           ;stkvar	_n @ sp[(-20)+4]
 28554  019FD4  0EF0               	movlw	-16
 28555  019FD6  006F FF8C  F034    	movff	plusw1,btemp+10
 28556  019FDC  0EF1               	movlw	-15
 28557  019FDE  006F FF8C  F035    	movff	plusw1,btemp+11
 28558  019FE4  0E0F               	movlw	15
 28559  019FE6  1634               	andwf	(btemp+10)^0,f,c
 28560  019FE8  0E00               	movlw	0
 28561  019FEA  1635               	andwf	(btemp+11)^0,f,c
 28562                           
 28563                           ;stkvar	_c @ sp[(-20)+12]
 28564  019FEC  0EF8               	movlw	-8
 28565  019FEE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28566  019FF4  0EF9               	movlw	-7
 28567  019FF6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28568                           
 28569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 28570                           ;stkvar	_c @ sp[(-20)+12]
 28571  019FFC  0EF9               	movlw	-7
 28572  019FFE  BEE3               	btfsc	plusw1,7,c
 28573  01A000  D00F               	goto	l16221
 28574  01A002  0EF9               	movlw	-7
 28575  01A004  50E3               	movf	plusw1,w,c
 28576  01A006  E108               	bnz	u15610
 28577  01A008  0EF8               	movlw	-8
 28578  01A00A  006F FF8C  F02A    	movff	plusw1,btemp
 28579  01A010  0E0A               	movlw	10
 28580  01A012  5E2A               	subwf	btemp^0,f,c
 28581  01A014  A0D8               	btfss	status,0,c
 28582  01A016  D004               	goto	l16221
 28583  01A018                     u15610:
 28584                           
 28585                           ;stkvar	_c @ sp[(-20)+12]
 28586  01A018  0EF8               	movlw	-8
 28587  01A01A  50E3               	movf	plusw1,w,c
 28588  01A01C  0F57               	addlw	87
 28589  01A01E  D003               	goto	L29
 28590  01A020                     l16221:
 28591                           
 28592                           ;stkvar	_c @ sp[(-20)+12]
 28593  01A020  0EF8               	movlw	-8
 28594  01A022  50E3               	movf	plusw1,w,c
 28595  01A024  0F30               	addlw	48
 28596  01A026                     L29:
 28597  01A026  6E34               	movwf	(btemp+10)^0,c
 28598  01A028  0EF9               	movlw	-7
 28599  01A02A  006F FF8C  F035    	movff	plusw1,btemp+11
 28600  01A030  0E00               	movlw	0
 28601  01A032  2235               	addwfc	(btemp+11)^0,f,c
 28602                           
 28603                           ;stkvar	_c @ sp[(-20)+12]
 28604  01A034  0EF8               	movlw	-8
 28605  01A036  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28606  01A03C  0EF9               	movlw	-7
 28607  01A03E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28608  01A044  0EBF               	movlw	191
 28609  01A046  6E34               	movwf	(btemp+10)^0,c
 28610  01A048  0EFF               	movlw	255
 28611  01A04A  6E35               	movwf	(btemp+11)^0,c
 28612                           
 28613                           ;stkvar	_x @ sp[(-20)+-11]
 28614  01A04C  0EE1               	movlw	-31
 28615  01A04E  50E3               	movf	plusw1,w,c
 28616  01A050  6E32               	movwf	(btemp+8)^0,c
 28617  01A052  6A33               	clrf	(btemp+9)^0,c
 28618  01A054  5034               	movf	(btemp+10)^0,w,c
 28619  01A056  2632               	addwf	(btemp+8)^0,f,c
 28620  01A058  5035               	movf	(btemp+11)^0,w,c
 28621  01A05A  2233               	addwfc	(btemp+9)^0,f,c
 28622  01A05C  5033               	movf	(btemp+9)^0,w,c
 28623  01A05E  E106               	bnz	u15620
 28624  01A060  0E1A               	movlw	26
 28625  01A062  5C32               	subwf	(btemp+8)^0,w,c
 28626  01A064  B0D8               	btfsc	status,0,c
 28627  01A066  D002               	goto	u15620
 28628  01A068  0E01               	movlw	1
 28629  01A06A  D001               	goto	u15630
 28630  01A06C                     u15620:
 28631  01A06C  0E00               	movlw	0
 28632  01A06E                     u15630:
 28633  01A06E  6E34               	movwf	(btemp+10)^0,c
 28634  01A070  6A35               	clrf	(btemp+11)^0,c
 28635                           
 28636                           ;stkvar	_xtoa$6675 @ sp[(-20)+2]
 28637  01A072  0EEE               	movlw	-18
 28638  01A074  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28639  01A07A  0EEF               	movlw	-17
 28640  01A07C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28641                           
 28642                           ;stkvar	_xtoa$6675 @ sp[(-20)+2]
 28643  01A082  0EEE               	movlw	-18
 28644  01A084  006F FF8C  F02A    	movff	plusw1,btemp
 28645  01A08A  0EEF               	movlw	-17
 28646  01A08C  50E3               	movf	plusw1,w,c
 28647  01A08E  102A               	iorwf	btemp^0,w,c
 28648  01A090  B4D8               	btfsc	status,2,c
 28649  01A092  D041               	goto	l16237
 28650  01A094  0E9F               	movlw	159
 28651  01A096  6E34               	movwf	(btemp+10)^0,c
 28652  01A098  0EFF               	movlw	255
 28653  01A09A  6E35               	movwf	(btemp+11)^0,c
 28654                           
 28655                           ;stkvar	_c @ sp[(-20)+12]
 28656  01A09C  0EF8               	movlw	-8
 28657  01A09E  006F FF8C  F032    	movff	plusw1,btemp+8
 28658  01A0A4  0EF9               	movlw	-7
 28659  01A0A6  006F FF8C  F033    	movff	plusw1,btemp+9
 28660  01A0AC  0E20               	movlw	32
 28661  01A0AE  1232               	iorwf	(btemp+8)^0,f,c
 28662  01A0B0  0E00               	movlw	0
 28663  01A0B2  1233               	iorwf	(btemp+9)^0,f,c
 28664  01A0B4  5034               	movf	(btemp+10)^0,w,c
 28665  01A0B6  2632               	addwf	(btemp+8)^0,f,c
 28666  01A0B8  5035               	movf	(btemp+11)^0,w,c
 28667  01A0BA  2233               	addwfc	(btemp+9)^0,f,c
 28668  01A0BC  5033               	movf	(btemp+9)^0,w,c
 28669  01A0BE  E106               	bnz	u15650
 28670  01A0C0  0E1A               	movlw	26
 28671  01A0C2  5C32               	subwf	(btemp+8)^0,w,c
 28672  01A0C4  B0D8               	btfsc	status,0,c
 28673  01A0C6  D002               	goto	u15650
 28674  01A0C8  0E01               	movlw	1
 28675  01A0CA  D001               	goto	u15660
 28676  01A0CC                     u15650:
 28677  01A0CC  0E00               	movlw	0
 28678  01A0CE                     u15660:
 28679  01A0CE  6E34               	movwf	(btemp+10)^0,c
 28680  01A0D0  6A35               	clrf	(btemp+11)^0,c
 28681                           
 28682                           ;stkvar	_xtoa$6676 @ sp[(-20)+0]
 28683  01A0D2  0EEC               	movlw	-20
 28684  01A0D4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28685  01A0DA  0EED               	movlw	-19
 28686  01A0DC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28687                           
 28688                           ;stkvar	_xtoa$6676 @ sp[(-20)+0]
 28689  01A0E2  0EEC               	movlw	-20
 28690  01A0E4  006F FF8C  F02A    	movff	plusw1,btemp
 28691  01A0EA  0EED               	movlw	-19
 28692  01A0EC  50E3               	movf	plusw1,w,c
 28693  01A0EE  102A               	iorwf	btemp^0,w,c
 28694  01A0F0  B4D8               	btfsc	status,2,c
 28695  01A0F2  D011               	goto	l16237
 28696                           
 28697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 28698                           ;stkvar	_c @ sp[(-20)+12]
 28699  01A0F4  0EF8               	movlw	-8
 28700  01A0F6  006F FF8F FFE6     	movff	plusw1,postinc1
 28701  01A0FC  006F FF8F FFE6     	movff	plusw1,postinc1
 28702  01A102  ECE2  F00A         	call	_toupper	;wreg free
 28703                           
 28704                           ;stkvar	_c @ sp[(-20)+12]
 28705  01A106  0EF8               	movlw	-8
 28706  01A108  0060  F0AB  FFE3   	movff	btemp,plusw1
 28707  01A10E  0EF9               	movlw	-7
 28708  01A110  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 28709  01A116                     l16237:
 28710                           
 28711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 28712                           ;stkvar	_c @ sp[(-20)+12]
 28713                           ;stkvar	_i @ sp[(-20)+14]
 28714  01A116  0EFA               	movlw	-6
 28715  01A118  006F FF8C  F034    	movff	plusw1,btemp+10
 28716  01A11E  0EFB               	movlw	-5
 28717  01A120  006F FF8C  F035    	movff	plusw1,btemp+11
 28718  01A126  0E54               	movlw	low _dbuf
 28719  01A128  2434               	addwf	(btemp+10)^0,w,c
 28720  01A12A  6ED9               	movwf	fsr2l,c
 28721  01A12C  0E03               	movlw	high _dbuf
 28722  01A12E  2035               	addwfc	(btemp+11)^0,w,c
 28723  01A130  6EDA               	movwf	fsr2h,c
 28724  01A132  0EF8               	movlw	-8
 28725  01A134  006F FF8F FFDF     	movff	plusw1,indf2
 28726                           
 28727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 28728                           ;stkvar	_p @ sp[(-20)+18]
 28729  01A13A  50E1               	movf	fsr1l,w,c
 28730  01A13C  0FFE               	addlw	-2
 28731  01A13E  6ED9               	movwf	fsr2l,c
 28732  01A140  50E2               	movf	fsr1h,w,c
 28733  01A142  6EDA               	movwf	fsr2h,c
 28734  01A144  0EFF               	movlw	255
 28735  01A146  22DA               	addwfc	fsr2h,f,c
 28736  01A148  06DE               	decf	postinc2,f,c
 28737  01A14A  0E00               	movlw	0
 28738  01A14C  5ADD               	subwfb	postdec2,f,c
 28739                           
 28740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 28741                           ;stkvar	_w @ sp[(-20)+16]
 28742  01A14E  50E1               	movf	fsr1l,w,c
 28743  01A150  0FFC               	addlw	-4
 28744  01A152  6ED9               	movwf	fsr2l,c
 28745  01A154  50E2               	movf	fsr1h,w,c
 28746  01A156  6EDA               	movwf	fsr2h,c
 28747  01A158  0EFF               	movlw	255
 28748  01A15A  22DA               	addwfc	fsr2h,f,c
 28749  01A15C  06DE               	decf	postinc2,f,c
 28750  01A15E  0E00               	movlw	0
 28751  01A160  5ADD               	subwfb	postdec2,f,c
 28752                           
 28753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 28754  01A162  0E04               	movlw	4
 28755  01A164  6E35               	movwf	(btemp+11)^0,c
 28756                           
 28757                           ;stkvar	_n @ sp[(-20)+4]
 28758  01A166  50E1               	movf	fsr1l,w,c
 28759  01A168  0FF0               	addlw	-16
 28760  01A16A  6ED9               	movwf	fsr2l,c
 28761  01A16C  50E2               	movf	fsr1h,w,c
 28762  01A16E  6EDA               	movwf	fsr2h,c
 28763  01A170  0EFF               	movlw	255
 28764  01A172  22DA               	addwfc	fsr2h,f,c
 28765  01A174  2835               	incf	(btemp+11)^0,w,c
 28766  01A176  52DE               	movf	postinc2,f,c
 28767  01A178  D00F               	goto	u15680
 28768  01A17A                     u15685:
 28769  01A17A  52DE               	movf	postinc2,f,c
 28770  01A17C  52DE               	movf	postinc2,f,c
 28771  01A17E  52DE               	movf	postinc2,f,c
 28772  01A180  52DE               	movf	postinc2,f,c
 28773  01A182  52DE               	movf	postinc2,f,c
 28774  01A184  52DE               	movf	postinc2,f,c
 28775  01A186  90D8               	bcf	status,0,c
 28776  01A188  32DD               	rrcf	postdec2,f,c
 28777  01A18A  32DD               	rrcf	postdec2,f,c
 28778  01A18C  32DD               	rrcf	postdec2,f,c
 28779  01A18E  32DD               	rrcf	postdec2,f,c
 28780  01A190  32DD               	rrcf	postdec2,f,c
 28781  01A192  32DD               	rrcf	postdec2,f,c
 28782  01A194  32DD               	rrcf	postdec2,f,c
 28783  01A196  32DE               	rrcf	postinc2,f,c
 28784  01A198                     u15680:
 28785  01A198  2EE8               	decfsz	wreg,f,c
 28786  01A19A  D7EF               	goto	u15685
 28787  01A19C                     l16245:
 28788                           
 28789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28790                           ;stkvar	_i @ sp[(-20)+14]
 28791  01A19C  0EFB               	movlw	-5
 28792  01A19E  BEE3               	btfsc	plusw1,7,c
 28793  01A1A0  D03A               	goto	u15730
 28794  01A1A2  0EFB               	movlw	-5
 28795  01A1A4  50E3               	movf	plusw1,w,c
 28796  01A1A6  E108               	bnz	u15690
 28797  01A1A8  0EFA               	movlw	-6
 28798  01A1AA  006F FF8C  F02A    	movff	plusw1,btemp
 28799  01A1B0  0E02               	movlw	2
 28800  01A1B2  5E2A               	subwf	btemp^0,f,c
 28801  01A1B4  A0D8               	btfss	status,0,c
 28802  01A1B6  D02F               	goto	u15730
 28803  01A1B8                     u15690:
 28804                           
 28805                           ;stkvar	_n @ sp[(-20)+4]
 28806  01A1B8  0EF0               	movlw	-16
 28807  01A1BA  50E3               	movf	plusw1,w,c
 28808  01A1BC  E115               	bnz	u15701
 28809  01A1BE  0EF1               	movlw	-15
 28810  01A1C0  50E3               	movf	plusw1,w,c
 28811  01A1C2  E112               	bnz	u15701
 28812  01A1C4  0EF2               	movlw	-14
 28813  01A1C6  50E3               	movf	plusw1,w,c
 28814  01A1C8  E10F               	bnz	u15701
 28815  01A1CA  0EF3               	movlw	-13
 28816  01A1CC  50E3               	movf	plusw1,w,c
 28817  01A1CE  E10C               	bnz	u15701
 28818  01A1D0  0EF4               	movlw	-12
 28819  01A1D2  50E3               	movf	plusw1,w,c
 28820  01A1D4  E109               	bnz	u15701
 28821  01A1D6  0EF5               	movlw	-11
 28822  01A1D8  50E3               	movf	plusw1,w,c
 28823  01A1DA  E106               	bnz	u15701
 28824  01A1DC  0EF6               	movlw	-10
 28825  01A1DE  50E3               	movf	plusw1,w,c
 28826  01A1E0  E103               	bnz	u15701
 28827  01A1E2  0EF7               	movlw	-9
 28828  01A1E4  50E3               	movf	plusw1,w,c
 28829  01A1E6  A4D8               	btfss	status,2,c
 28830  01A1E8                     u15701:
 28831  01A1E8  D6EB               	goto	l16213
 28832                           
 28833                           ;stkvar	_p @ sp[(-20)+18]
 28834  01A1EA  0EFF               	movlw	-1
 28835  01A1EC  BEE3               	btfsc	plusw1,7,c
 28836  01A1EE  D007               	goto	u15710
 28837  01A1F0  0EFF               	movlw	-1
 28838  01A1F2  50E3               	movf	plusw1,w,c
 28839  01A1F4  E103               	bnz	u15711
 28840  01A1F6  0EFE               	movlw	-2
 28841  01A1F8  04E3               	decf	plusw1,w,c
 28842  01A1FA  B0D8               	btfsc	status,0,c
 28843  01A1FC                     u15711:
 28844  01A1FC  D6E1               	goto	l16213
 28845  01A1FE                     u15710:
 28846                           
 28847                           ;stkvar	_w @ sp[(-20)+16]
 28848  01A1FE  0EFD               	movlw	-3
 28849  01A200  BEE3               	btfsc	plusw1,7,c
 28850  01A202  D009               	goto	u15730
 28851  01A204  0EFD               	movlw	-3
 28852  01A206  50E3               	movf	plusw1,w,c
 28853  01A208  E104               	bnz	u15720
 28854  01A20A  0EFC               	movlw	-4
 28855  01A20C  04E3               	decf	plusw1,w,c
 28856  01A20E  A0D8               	btfss	status,0,c
 28857  01A210  D002               	goto	u15730
 28858  01A212                     u15720:
 28859  01A212  B24E               	btfsc	_flags^0,1,c
 28860  01A214  D6D5               	goto	l16213
 28861  01A216                     u15730:
 28862                           
 28863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 28864  01A216  A84E               	btfss	_flags^0,4,c
 28865  01A218  D036               	goto	l16261
 28866                           
 28867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 28868                           ;stkvar	_i @ sp[(-20)+14]
 28869  01A21A  50E1               	movf	fsr1l,w,c
 28870  01A21C  0FFA               	addlw	-6
 28871  01A21E  6ED9               	movwf	fsr2l,c
 28872  01A220  50E2               	movf	fsr1h,w,c
 28873  01A222  6EDA               	movwf	fsr2h,c
 28874  01A224  0EFF               	movlw	255
 28875  01A226  22DA               	addwfc	fsr2h,f,c
 28876  01A228  06DE               	decf	postinc2,f,c
 28877  01A22A  0E00               	movlw	0
 28878  01A22C  5ADD               	subwfb	postdec2,f,c
 28879                           
 28880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 28881                           ;stkvar	_x @ sp[(-20)+-11]
 28882                           ;stkvar	_i @ sp[(-20)+14]
 28883  01A22E  0EFA               	movlw	-6
 28884  01A230  006F FF8C  F034    	movff	plusw1,btemp+10
 28885  01A236  0EFB               	movlw	-5
 28886  01A238  006F FF8C  F035    	movff	plusw1,btemp+11
 28887  01A23E  0E54               	movlw	low _dbuf
 28888  01A240  2434               	addwf	(btemp+10)^0,w,c
 28889  01A242  6ED9               	movwf	fsr2l,c
 28890  01A244  0E03               	movlw	high _dbuf
 28891  01A246  2035               	addwfc	(btemp+11)^0,w,c
 28892  01A248  6EDA               	movwf	fsr2h,c
 28893  01A24A  0EE1               	movlw	-31
 28894  01A24C  006F FF8F FFDF     	movff	plusw1,indf2
 28895                           
 28896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 28897                           ;stkvar	_i @ sp[(-20)+14]
 28898  01A252  50E1               	movf	fsr1l,w,c
 28899  01A254  0FFA               	addlw	-6
 28900  01A256  6ED9               	movwf	fsr2l,c
 28901  01A258  50E2               	movf	fsr1h,w,c
 28902  01A25A  6EDA               	movwf	fsr2h,c
 28903  01A25C  0EFF               	movlw	255
 28904  01A25E  22DA               	addwfc	fsr2h,f,c
 28905  01A260  06DE               	decf	postinc2,f,c
 28906  01A262  0E00               	movlw	0
 28907  01A264  5ADD               	subwfb	postdec2,f,c
 28908                           
 28909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 28910                           ;stkvar	_i @ sp[(-20)+14]
 28911  01A266  0EFA               	movlw	-6
 28912  01A268  006F FF8C  F034    	movff	plusw1,btemp+10
 28913  01A26E  0EFB               	movlw	-5
 28914  01A270  006F FF8C  F035    	movff	plusw1,btemp+11
 28915  01A276  0E54               	movlw	low _dbuf
 28916  01A278  2434               	addwf	(btemp+10)^0,w,c
 28917  01A27A  6ED9               	movwf	fsr2l,c
 28918  01A27C  0E03               	movlw	high _dbuf
 28919  01A27E  2035               	addwfc	(btemp+11)^0,w,c
 28920  01A280  6EDA               	movwf	fsr2h,c
 28921  01A282  0E30               	movlw	48
 28922  01A284  6EDF               	movwf	indf2,c
 28923  01A286                     l16261:
 28924                           
 28925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 28926                           ;stkvar	_w @ sp[(-20)+16]
 28927  01A286  0EFC               	movlw	-4
 28928  01A288  006F FF8F FFE6     	movff	plusw1,postinc1
 28929  01A28E  006F FF8F FFE6     	movff	plusw1,postinc1
 28930                           
 28931                           ;stkvar	_i @ sp[(-22)+14]
 28932  01A294  0E54               	movlw	low _dbuf
 28933  01A296  6E34               	movwf	(btemp+10)^0,c
 28934  01A298  0E03               	movlw	high _dbuf
 28935  01A29A  6E35               	movwf	(btemp+11)^0,c
 28936  01A29C  0EF8               	movlw	-8
 28937  01A29E  50E3               	movf	plusw1,w,c
 28938  01A2A0  2634               	addwf	(btemp+10)^0,f,c
 28939  01A2A2  0EF9               	movlw	-7
 28940  01A2A4  50E3               	movf	plusw1,w,c
 28941  01A2A6  2235               	addwfc	(btemp+11)^0,f,c
 28942  01A2A8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28943  01A2AE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28944                           
 28945                           ;stkvar	_fp @ sp[(-24)+-2]
 28946  01A2B4  0EE6               	movlw	-26
 28947  01A2B6  006F FF8F FFE6     	movff	plusw1,postinc1
 28948  01A2BC  006F FF8F FFE6     	movff	plusw1,postinc1
 28949  01A2C2  ECCF  F0FE         	call	_pad	;wreg free
 28950                           
 28951                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 28952  01A2C6  0EE1               	movlw	225
 28953  01A2C8  26E1               	addwf	fsr1l,f,c
 28954  01A2CA  0EFF               	movlw	255
 28955  01A2CC  22E2               	addwfc	fsr1h,f,c
 28956  01A2CE  0012               	return		;funcret
 28957  01A2D0                     __end_of_xtoa:
 28958                           	opt callstack 0
 28959                           
 28960 ;; *************** function _toupper *****************
 28961 ;; Defined at:
 28962 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 28963 ;; Parameters:    Size  Location     Type
 28964 ;;  c               2  [STACK] int 
 28965 ;; Auto vars:     Size  Location     Type
 28966 ;;		None
 28967 ;; Return value:  Size  Location     Type
 28968 ;;                  2  [STACK] int 
 28969 ;; Registers used:
 28970 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 28971 ;; Tracked objects:
 28972 ;;		On entry : 0/3
 28973 ;;		On exit  : 0/0
 28974 ;;		Unchanged: 0/0
 28975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28980 ;;Total ram usage:        0 bytes
 28981 ;; Hardware stack levels used:    1
 28982 ;; Hardware stack levels required when called:   16
 28983 ;; This function calls:
 28984 ;;		_islower
 28985 ;; This function is called by:
 28986 ;;		_xtoa
 28987 ;; This function uses a reentrant model
 28988 ;;
 28989                           
 28990                           	psect	text97
 28991  0015C4                     __ptext97:
 28992                           	opt callstack 0
 28993  0015C4                     _toupper:
 28994                           	opt callstack 0
 28995                           
 28996                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28997  0015C4  52E6               	movf	postinc1,f,c
 28998  0015C6  52E6               	movf	postinc1,f,c
 28999                           
 29000                           ;stkvar	_c @ sp[(-2)+-2]
 29001                           
 29002                           ;incstack = 0
 29003 ;; hardware stack exceeded
 29004  0015C8  0EFC               	movlw	-4
 29005  0015CA  50E3               	movf	plusw1,w,c
 29006  0015CC  0F9F               	addlw	159
 29007  0015CE  6E34               	movwf	(btemp+10)^0,c
 29008  0015D0  0EFD               	movlw	-3
 29009  0015D2  006F FF8C  F035    	movff	plusw1,btemp+11
 29010  0015D8  0EFF               	movlw	255
 29011  0015DA  2235               	addwfc	(btemp+11)^0,f,c
 29012  0015DC  5035               	movf	(btemp+11)^0,w,c
 29013  0015DE  E106               	bnz	u8070
 29014  0015E0  0E1A               	movlw	26
 29015  0015E2  5C34               	subwf	(btemp+10)^0,w,c
 29016  0015E4  B0D8               	btfsc	status,0,c
 29017  0015E6  D002               	goto	u8070
 29018  0015E8  0E01               	movlw	1
 29019  0015EA  D001               	goto	u8080
 29020  0015EC                     u8070:
 29021  0015EC  0E00               	movlw	0
 29022  0015EE                     u8080:
 29023  0015EE  6E34               	movwf	(btemp+10)^0,c
 29024  0015F0  6A35               	clrf	(btemp+11)^0,c
 29025                           
 29026                           ;stkvar	_toupper$7617 @ sp[(-2)+0]
 29027  0015F2  0EFE               	movlw	-2
 29028  0015F4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29029  0015FA  0EFF               	movlw	-1
 29030  0015FC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29031                           
 29032                           ;stkvar	_toupper$7617 @ sp[(-2)+0]
 29033  001602  0EFE               	movlw	-2
 29034  001604  006F FF8C  F02A    	movff	plusw1,btemp
 29035  00160A  0EFF               	movlw	-1
 29036  00160C  50E3               	movf	plusw1,w,c
 29037  00160E  102A               	iorwf	btemp^0,w,c
 29038  001610  B4D8               	btfsc	status,2,c
 29039  001612  D00D               	goto	l10269
 29040                           
 29041                           ;stkvar	_c @ sp[(-2)+-2]
 29042  001614  0EFC               	movlw	-4
 29043  001616  006F FF8C  F02A    	movff	plusw1,btemp
 29044  00161C  0EFD               	movlw	-3
 29045  00161E  006F FF8C  F02B    	movff	plusw1,btemp+1
 29046  001624  0E5F               	movlw	95
 29047  001626  162A               	andwf	btemp^0,f,c
 29048  001628  0E00               	movlw	0
 29049  00162A  162B               	andwf	(btemp+1)^0,f,c
 29050  00162C  D008               	goto	l3847
 29051  00162E                     l10269:
 29052                           
 29053                           ;stkvar	_c @ sp[(-2)+-2]
 29054  00162E  0EFC               	movlw	-4
 29055  001630  006F FF8C  F02A    	movff	plusw1,btemp
 29056  001636  0EFD               	movlw	-3
 29057  001638  006F FF8C  F02B    	movff	plusw1,btemp+1
 29058  00163E                     l3847:
 29059                           
 29060                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 29061  00163E  52E5               	movf	postdec1,f,c
 29062  001640  52E5               	movf	postdec1,f,c
 29063  001642  52E5               	movf	postdec1,f,c
 29064  001644  52E5               	movf	postdec1,f,c
 29065  001646  0012               	return		;funcret
 29066  001648                     __end_of_toupper:
 29067                           	opt callstack 0
 29068                           
 29069 ;; *************** function _islower *****************
 29070 ;; Defined at:
 29071 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 29072 ;; Parameters:    Size  Location     Type
 29073 ;;  c               2  [STACK] int 
 29074 ;; Auto vars:     Size  Location     Type
 29075 ;;		None
 29076 ;; Return value:  Size  Location     Type
 29077 ;;                  2  [STACK] int 
 29078 ;; Registers used:
 29079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 29080 ;; Tracked objects:
 29081 ;;		On entry : 0/0
 29082 ;;		On exit  : 0/0
 29083 ;;		Unchanged: 0/0
 29084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29089 ;;Total ram usage:        0 bytes
 29090 ;; Hardware stack levels used:    1
 29091 ;; Hardware stack levels required when called:   15
 29092 ;; This function calls:
 29093 ;;		Nothing
 29094 ;; This function is called by:
 29095 ;;		_toupper
 29096 ;; This function uses a reentrant model
 29097 ;;
 29098                           
 29099                           	psect	text98
 29100  002796                     __ptext98:
 29101                           	opt callstack 0
 29102  002796                     _islower:
 29103                           	opt callstack 0
 29104                           
 29105                           ;stkvar	_c @ sp[(0)+-2]
 29106                           
 29107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29108                           ;incstack = 0
 29109 ;; hardware stack exceeded
 29110  002796  0EFE               	movlw	-2
 29111  002798  50E3               	movf	plusw1,w,c
 29112  00279A  0F9F               	addlw	159
 29113  00279C  6E34               	movwf	(btemp+10)^0,c
 29114  00279E  0EFF               	movlw	-1
 29115  0027A0  006F FF8C  F035    	movff	plusw1,btemp+11
 29116  0027A6  0EFF               	movlw	255
 29117  0027A8  2235               	addwfc	(btemp+11)^0,f,c
 29118  0027AA  5035               	movf	(btemp+11)^0,w,c
 29119  0027AC  E106               	bnz	u7700
 29120  0027AE  0E1A               	movlw	26
 29121  0027B0  5C34               	subwf	(btemp+10)^0,w,c
 29122  0027B2  B0D8               	btfsc	status,0,c
 29123  0027B4  D002               	goto	u7700
 29124  0027B6  0E01               	movlw	1
 29125  0027B8  D001               	goto	u7710
 29126  0027BA                     u7700:
 29127  0027BA  0E00               	movlw	0
 29128  0027BC                     u7710:
 29129  0027BC  6E2A               	movwf	btemp^0,c
 29130  0027BE  6A2B               	clrf	(btemp+1)^0,c
 29131                           
 29132                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 29133  0027C0  52E5               	movf	postdec1,f,c
 29134  0027C2  52E5               	movf	postdec1,f,c
 29135  0027C4  0012               	return		;funcret
 29136  0027C6                     __end_of_islower:
 29137                           	opt callstack 0
 29138                           
 29139 ;; *************** function _isalpha *****************
 29140 ;; Defined at:
 29141 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 29142 ;; Parameters:    Size  Location     Type
 29143 ;;  c               2  [STACK] int 
 29144 ;; Auto vars:     Size  Location     Type
 29145 ;;		None
 29146 ;; Return value:  Size  Location     Type
 29147 ;;                  2  [STACK] int 
 29148 ;; Registers used:
 29149 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 29150 ;; Tracked objects:
 29151 ;;		On entry : 0/0
 29152 ;;		On exit  : 0/0
 29153 ;;		Unchanged: 0/0
 29154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29159 ;;Total ram usage:        0 bytes
 29160 ;; Hardware stack levels used:    1
 29161 ;; Hardware stack levels required when called:   15
 29162 ;; This function calls:
 29163 ;;		Nothing
 29164 ;; This function is called by:
 29165 ;;		_xtoa
 29166 ;; This function uses a reentrant model
 29167 ;;
 29168                           
 29169                           	psect	text99
 29170  01FFBC                     __ptext99:
 29171                           	opt callstack 0
 29172  01FFBC                     _isalpha:
 29173                           	opt callstack 0
 29174                           
 29175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29176                           ;incstack = 0
 29177 ;; hardware stack exceeded
 29178  01FFBC  0E9F               	movlw	159
 29179  01FFBE  6E34               	movwf	(btemp+10)^0,c
 29180  01FFC0  0EFF               	movlw	255
 29181  01FFC2  6E35               	movwf	(btemp+11)^0,c
 29182                           
 29183                           ;stkvar	_c @ sp[(0)+-2]
 29184  01FFC4  0EFE               	movlw	-2
 29185  01FFC6  006F FF8C  F032    	movff	plusw1,btemp+8
 29186  01FFCC  0EFF               	movlw	-1
 29187  01FFCE  006F FF8C  F033    	movff	plusw1,btemp+9
 29188  01FFD4  0E20               	movlw	32
 29189  01FFD6  1232               	iorwf	(btemp+8)^0,f,c
 29190  01FFD8  0E00               	movlw	0
 29191  01FFDA  1233               	iorwf	(btemp+9)^0,f,c
 29192  01FFDC  5034               	movf	(btemp+10)^0,w,c
 29193  01FFDE  2632               	addwf	(btemp+8)^0,f,c
 29194  01FFE0  5035               	movf	(btemp+11)^0,w,c
 29195  01FFE2  2233               	addwfc	(btemp+9)^0,f,c
 29196  01FFE4  5033               	movf	(btemp+9)^0,w,c
 29197  01FFE6  E106               	bnz	u8050
 29198  01FFE8  0E1A               	movlw	26
 29199  01FFEA  5C32               	subwf	(btemp+8)^0,w,c
 29200  01FFEC  B0D8               	btfsc	status,0,c
 29201  01FFEE  D002               	goto	u8050
 29202  01FFF0  0E01               	movlw	1
 29203  01FFF2  D001               	goto	u8060
 29204  01FFF4                     u8050:
 29205  01FFF4  0E00               	movlw	0
 29206  01FFF6                     u8060:
 29207  01FFF6  6E2A               	movwf	btemp^0,c
 29208  01FFF8  6A2B               	clrf	(btemp+1)^0,c
 29209                           
 29210                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 29211  01FFFA  52E5               	movf	postdec1,f,c
 29212  01FFFC  52E5               	movf	postdec1,f,c
 29213  01FFFE  0012               	return		;funcret
 29214  020000                     __end_of_isalpha:
 29215                           	opt callstack 0
 29216                           
 29217 ;; *************** function _utoa *****************
 29218 ;; Defined at:
 29219 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29220 ;; Parameters:    Size  Location     Type
 29221 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29222 ;;		 -> f(6), NULL(0), 
 29223 ;;  d               8  [STACK] unsigned long long 
 29224 ;; Auto vars:     Size  Location     Type
 29225 ;;  n               8  [STACK] unsigned long long 
 29226 ;;  i               2  [STACK] int 
 29227 ;;  w               2  [STACK] int 
 29228 ;;  p               2  [STACK] int 
 29229 ;; Return value:  Size  Location     Type
 29230 ;;                  2  [STACK] int 
 29231 ;; Registers used:
 29232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 29233 ;; Tracked objects:
 29234 ;;		On entry : 0/0
 29235 ;;		On exit  : 0/0
 29236 ;;		Unchanged: 0/0
 29237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29242 ;;Total ram usage:        0 bytes
 29243 ;; Hardware stack levels used:    1
 29244 ;; Hardware stack levels required when called:   20
 29245 ;; This function calls:
 29246 ;;		___lodiv
 29247 ;;		___lomod
 29248 ;;		_pad
 29249 ;; This function is called by:
 29250 ;;		_vfpfcnvrt
 29251 ;; This function uses a reentrant model
 29252 ;;
 29253                           
 29254                           	psect	text100
 29255  01ACF0                     __ptext100:
 29256                           	opt callstack 0
 29257  01ACF0                     _utoa:
 29258                           	opt callstack 0
 29259                           
 29260                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 29261  01ACF0  0E0E               	movlw	14
 29262  01ACF2  26E1               	addwf	fsr1l,f,c
 29263  01ACF4  0E00               	movlw	0
 29264  01ACF6  22E2               	addwfc	fsr1h,f,c
 29265                           
 29266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 29267                           
 29268                           ;incstack = 0
 29269 ;; hardware stack exceeded
 29270  01ACF8  AE4D               	btfss	(_prec+1)^0,7,c
 29271                           
 29272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 29273  01ACFA  924E               	bcf	_flags^0,1,c
 29274                           
 29275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 29276  01ACFC  BE4D               	btfsc	(_prec+1)^0,7,c
 29277  01ACFE  D005               	goto	u15500
 29278  01AD00  504D               	movf	(_prec+1)^0,w,c
 29279  01AD02  E110               	bnz	l16161
 29280  01AD04  044C               	decf	_prec^0,w,c
 29281  01AD06  B0D8               	btfsc	status,0,c
 29282  01AD08  D00D               	goto	l16161
 29283  01AD0A                     u15500:
 29284  01AD0A  0E01               	movlw	1
 29285  01AD0C  6E34               	movwf	(btemp+10)^0,c
 29286  01AD0E  0E00               	movlw	0
 29287  01AD10  6E35               	movwf	(btemp+11)^0,c
 29288                           
 29289                           ;stkvar	_p @ sp[(-14)+12]
 29290  01AD12  0EFE               	movlw	-2
 29291  01AD14  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29292  01AD1A  0EFF               	movlw	-1
 29293  01AD1C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29294  01AD22  D008               	goto	l2635
 29295  01AD24                     l16161:
 29296                           
 29297                           ;stkvar	_p @ sp[(-14)+12]
 29298  01AD24  0EFE               	movlw	-2
 29299  01AD26  0060  F133  FFE3   	movff	_prec,plusw1
 29300  01AD2C  0EFF               	movlw	-1
 29301  01AD2E  0060  F137  FFE3   	movff	_prec+1,plusw1
 29302  01AD34                     l2635:
 29303                           
 29304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 29305                           ;stkvar	_w @ sp[(-14)+10]
 29306  01AD34  0EFC               	movlw	-4
 29307  01AD36  0060  F12B  FFE3   	movff	_width,plusw1
 29308  01AD3C  0EFD               	movlw	-3
 29309  01AD3E  0060  F12F  FFE3   	movff	_width+1,plusw1
 29310                           
 29311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 29312                           ;stkvar	_d @ sp[(-14)+-10]
 29313  01AD44  0EE8               	movlw	232
 29314  01AD46  24E1               	addwf	fsr1l,w,c
 29315  01AD48  6ED9               	movwf	fsr2l,c
 29316  01AD4A  0EFF               	movlw	255
 29317  01AD4C  20E2               	addwfc	fsr1h,w,c
 29318  01AD4E  6EDA               	movwf	fsr2h,c
 29319                           
 29320                           ;stkvar	_n @ sp[(-14)+0]
 29321  01AD50  0E08               	movlw	8
 29322  01AD52  6E2A               	movwf	btemp^0,c
 29323  01AD54  0EF2               	movlw	-14
 29324  01AD56                     us1551999:
 29325  01AD56  006F FF7B FFE3     	movff	postinc2,plusw1
 29326  01AD5C  28E8               	incf	wreg,w,c
 29327  01AD5E  2E2A               	decfsz	btemp^0,f,c
 29328  01AD60  D7FA               	bra	us1551999
 29329                           
 29330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 29331  01AD62  0E4F               	movlw	79
 29332  01AD64  6E34               	movwf	(btemp+10)^0,c
 29333  01AD66  0E00               	movlw	0
 29334  01AD68  6E35               	movwf	(btemp+11)^0,c
 29335                           
 29336                           ;stkvar	_i @ sp[(-14)+8]
 29337  01AD6A  0EFA               	movlw	-6
 29338  01AD6C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29339  01AD72  0EFB               	movlw	-5
 29340  01AD74  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29341                           
 29342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 29343  01AD7A  0103               	movlb	3	; () banked
 29344  01AD7C  6BA3               	clrf	(_dbuf+79)& (0+255),b
 29345                           
 29346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 29347  01AD7E  D0FB               	goto	l16179
 29348  01AD80                     l16169:
 29349                           
 29350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 29351                           ;stkvar	_i @ sp[(-14)+8]
 29352  01AD80  50E1               	movf	fsr1l,w,c
 29353  01AD82  0FFA               	addlw	-6
 29354  01AD84  6ED9               	movwf	fsr2l,c
 29355  01AD86  50E2               	movf	fsr1h,w,c
 29356  01AD88  6EDA               	movwf	fsr2h,c
 29357  01AD8A  0EFF               	movlw	255
 29358  01AD8C  22DA               	addwfc	fsr2h,f,c
 29359  01AD8E  06DE               	decf	postinc2,f,c
 29360  01AD90  0E00               	movlw	0
 29361  01AD92  5ADD               	subwfb	postdec2,f,c
 29362                           
 29363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 29364  01AD94  0E0A               	movlw	10
 29365  01AD96  6EE6               	movwf	postinc1,c
 29366  01AD98  0E00               	movlw	0
 29367  01AD9A  6EE6               	movwf	postinc1,c
 29368  01AD9C  0E00               	movlw	0
 29369  01AD9E  6EE6               	movwf	postinc1,c
 29370  01ADA0  0E00               	movlw	0
 29371  01ADA2  6EE6               	movwf	postinc1,c
 29372  01ADA4  0E00               	movlw	0
 29373  01ADA6  6EE6               	movwf	postinc1,c
 29374  01ADA8  0E00               	movlw	0
 29375  01ADAA  6EE6               	movwf	postinc1,c
 29376  01ADAC  0E00               	movlw	0
 29377  01ADAE  6EE6               	movwf	postinc1,c
 29378  01ADB0  0E00               	movlw	0
 29379  01ADB2  6EE6               	movwf	postinc1,c
 29380                           
 29381                           ;stkvar	_n @ sp[(-22)+0]
 29382  01ADB4  50E1               	movf	fsr1l,w,c
 29383  01ADB6  0FEA               	addlw	-22
 29384  01ADB8  6ED9               	movwf	fsr2l,c
 29385  01ADBA  50E2               	movf	fsr1h,w,c
 29386  01ADBC  6EDA               	movwf	fsr2h,c
 29387  01ADBE  0EFF               	movlw	255
 29388  01ADC0  22DA               	addwfc	fsr2h,f,c
 29389  01ADC2  006F FF7B FFE6     	movff	postinc2,postinc1
 29390  01ADC8  006F FF7B FFE6     	movff	postinc2,postinc1
 29391  01ADCE  006F FF7B FFE6     	movff	postinc2,postinc1
 29392  01ADD4  006F FF7B FFE6     	movff	postinc2,postinc1
 29393  01ADDA  006F FF7B FFE6     	movff	postinc2,postinc1
 29394  01ADE0  006F FF7B FFE6     	movff	postinc2,postinc1
 29395  01ADE6  006F FF7B FFE6     	movff	postinc2,postinc1
 29396  01ADEC  006F FF7B FFE6     	movff	postinc2,postinc1
 29397  01ADF2  EC5C  F0FB         	call	___lomod	;wreg free
 29398  01ADF6  52E5               	movf	postdec1,f,c
 29399  01ADF8  006F FF9C  F041    	movff	indf1,btemp+23
 29400  01ADFE  52E5               	movf	postdec1,f,c
 29401  01AE00  006F FF9C  F040    	movff	indf1,btemp+22
 29402  01AE06  52E5               	movf	postdec1,f,c
 29403  01AE08  006F FF9C  F03F    	movff	indf1,btemp+21
 29404  01AE0E  52E5               	movf	postdec1,f,c
 29405  01AE10  006F FF9C  F03E    	movff	indf1,btemp+20
 29406  01AE16  52E5               	movf	postdec1,f,c
 29407  01AE18  006F FF9C  F03D    	movff	indf1,btemp+19
 29408  01AE1E  52E5               	movf	postdec1,f,c
 29409  01AE20  006F FF9C  F03C    	movff	indf1,btemp+18
 29410  01AE26  52E5               	movf	postdec1,f,c
 29411  01AE28  006F FF9C  F03B    	movff	indf1,btemp+17
 29412  01AE2E  52E5               	movf	postdec1,f,c
 29413  01AE30  006F FF9C  F03A    	movff	indf1,btemp+16
 29414  01AE36  0EF8               	movlw	248
 29415  01AE38  26E1               	addwf	fsr1l,f,c
 29416  01AE3A  0EFF               	movlw	255
 29417  01AE3C  22E2               	addwfc	fsr1h,f,c
 29418  01AE3E  0E30               	movlw	48
 29419  01AE40  263A               	addwf	(btemp+16)^0,f,c
 29420                           
 29421                           ;stkvar	_i @ sp[(-14)+8]
 29422  01AE42  0EFA               	movlw	-6
 29423  01AE44  006F FF8C  F034    	movff	plusw1,btemp+10
 29424  01AE4A  0EFB               	movlw	-5
 29425  01AE4C  006F FF8C  F035    	movff	plusw1,btemp+11
 29426  01AE52  0E54               	movlw	low _dbuf
 29427  01AE54  2434               	addwf	(btemp+10)^0,w,c
 29428  01AE56  6ED9               	movwf	fsr2l,c
 29429  01AE58  0E03               	movlw	high _dbuf
 29430  01AE5A  2035               	addwfc	(btemp+11)^0,w,c
 29431  01AE5C  6EDA               	movwf	fsr2h,c
 29432  01AE5E  0060  F0EB  FFDF   	movff	btemp+16,indf2
 29433                           
 29434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 29435                           ;stkvar	_p @ sp[(-14)+12]
 29436  01AE64  50E1               	movf	fsr1l,w,c
 29437  01AE66  0FFE               	addlw	-2
 29438  01AE68  6ED9               	movwf	fsr2l,c
 29439  01AE6A  50E2               	movf	fsr1h,w,c
 29440  01AE6C  6EDA               	movwf	fsr2h,c
 29441  01AE6E  0EFF               	movlw	255
 29442  01AE70  22DA               	addwfc	fsr2h,f,c
 29443  01AE72  06DE               	decf	postinc2,f,c
 29444  01AE74  0E00               	movlw	0
 29445  01AE76  5ADD               	subwfb	postdec2,f,c
 29446                           
 29447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 29448                           ;stkvar	_w @ sp[(-14)+10]
 29449  01AE78  50E1               	movf	fsr1l,w,c
 29450  01AE7A  0FFC               	addlw	-4
 29451  01AE7C  6ED9               	movwf	fsr2l,c
 29452  01AE7E  50E2               	movf	fsr1h,w,c
 29453  01AE80  6EDA               	movwf	fsr2h,c
 29454  01AE82  0EFF               	movlw	255
 29455  01AE84  22DA               	addwfc	fsr2h,f,c
 29456  01AE86  06DE               	decf	postinc2,f,c
 29457  01AE88  0E00               	movlw	0
 29458  01AE8A  5ADD               	subwfb	postdec2,f,c
 29459                           
 29460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 29461  01AE8C  0E0A               	movlw	10
 29462  01AE8E  6EE6               	movwf	postinc1,c
 29463  01AE90  0E00               	movlw	0
 29464  01AE92  6EE6               	movwf	postinc1,c
 29465  01AE94  0E00               	movlw	0
 29466  01AE96  6EE6               	movwf	postinc1,c
 29467  01AE98  0E00               	movlw	0
 29468  01AE9A  6EE6               	movwf	postinc1,c
 29469  01AE9C  0E00               	movlw	0
 29470  01AE9E  6EE6               	movwf	postinc1,c
 29471  01AEA0  0E00               	movlw	0
 29472  01AEA2  6EE6               	movwf	postinc1,c
 29473  01AEA4  0E00               	movlw	0
 29474  01AEA6  6EE6               	movwf	postinc1,c
 29475  01AEA8  0E00               	movlw	0
 29476  01AEAA  6EE6               	movwf	postinc1,c
 29477                           
 29478                           ;stkvar	_n @ sp[(-22)+0]
 29479  01AEAC  50E1               	movf	fsr1l,w,c
 29480  01AEAE  0FEA               	addlw	-22
 29481  01AEB0  6ED9               	movwf	fsr2l,c
 29482  01AEB2  50E2               	movf	fsr1h,w,c
 29483  01AEB4  6EDA               	movwf	fsr2h,c
 29484  01AEB6  0EFF               	movlw	255
 29485  01AEB8  22DA               	addwfc	fsr2h,f,c
 29486  01AEBA  006F FF7B FFE6     	movff	postinc2,postinc1
 29487  01AEC0  006F FF7B FFE6     	movff	postinc2,postinc1
 29488  01AEC6  006F FF7B FFE6     	movff	postinc2,postinc1
 29489  01AECC  006F FF7B FFE6     	movff	postinc2,postinc1
 29490  01AED2  006F FF7B FFE6     	movff	postinc2,postinc1
 29491  01AED8  006F FF7B FFE6     	movff	postinc2,postinc1
 29492  01AEDE  006F FF7B FFE6     	movff	postinc2,postinc1
 29493  01AEE4  006F FF7B FFE6     	movff	postinc2,postinc1
 29494  01AEEA  ECC4  F0F3         	call	___lodiv	;wreg free
 29495  01AEEE  52E5               	movf	postdec1,f,c
 29496  01AEF0  006F FF9C  F041    	movff	indf1,btemp+23
 29497  01AEF6  52E5               	movf	postdec1,f,c
 29498  01AEF8  006F FF9C  F040    	movff	indf1,btemp+22
 29499  01AEFE  52E5               	movf	postdec1,f,c
 29500  01AF00  006F FF9C  F03F    	movff	indf1,btemp+21
 29501  01AF06  52E5               	movf	postdec1,f,c
 29502  01AF08  006F FF9C  F03E    	movff	indf1,btemp+20
 29503  01AF0E  52E5               	movf	postdec1,f,c
 29504  01AF10  006F FF9C  F03D    	movff	indf1,btemp+19
 29505  01AF16  52E5               	movf	postdec1,f,c
 29506  01AF18  006F FF9C  F03C    	movff	indf1,btemp+18
 29507  01AF1E  52E5               	movf	postdec1,f,c
 29508  01AF20  006F FF9C  F03B    	movff	indf1,btemp+17
 29509  01AF26  52E5               	movf	postdec1,f,c
 29510  01AF28  006F FF9C  F03A    	movff	indf1,btemp+16
 29511  01AF2E  0EF8               	movlw	248
 29512  01AF30  26E1               	addwf	fsr1l,f,c
 29513  01AF32  0EFF               	movlw	255
 29514  01AF34  22E2               	addwfc	fsr1h,f,c
 29515                           
 29516                           ;stkvar	_n @ sp[(-14)+0]
 29517  01AF36  0EF2               	movlw	-14
 29518  01AF38  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 29519  01AF3E  0EF3               	movlw	-13
 29520  01AF40  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 29521  01AF46  0EF4               	movlw	-12
 29522  01AF48  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 29523  01AF4E  0EF5               	movlw	-11
 29524  01AF50  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 29525  01AF56  0EF6               	movlw	-10
 29526  01AF58  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 29527  01AF5E  0EF7               	movlw	-9
 29528  01AF60  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 29529  01AF66  0EF8               	movlw	-8
 29530  01AF68  0060  F103  FFE3   	movff	btemp+22,plusw1
 29531  01AF6E  0EF9               	movlw	-7
 29532  01AF70  0060  F107  FFE3   	movff	btemp+23,plusw1
 29533  01AF76                     l16179:
 29534                           
 29535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 29536                           ;stkvar	_i @ sp[(-14)+8]
 29537  01AF76  0EFA               	movlw	-6
 29538  01AF78  006F FF8C  F02A    	movff	plusw1,btemp
 29539  01AF7E  0EFB               	movlw	-5
 29540  01AF80  50E3               	movf	plusw1,w,c
 29541  01AF82  102A               	iorwf	btemp^0,w,c
 29542  01AF84  B4D8               	btfsc	status,2,c
 29543  01AF86  D02F               	goto	u15560
 29544                           
 29545                           ;stkvar	_n @ sp[(-14)+0]
 29546  01AF88  0EF2               	movlw	-14
 29547  01AF8A  50E3               	movf	plusw1,w,c
 29548  01AF8C  E115               	bnz	u15531
 29549  01AF8E  0EF3               	movlw	-13
 29550  01AF90  50E3               	movf	plusw1,w,c
 29551  01AF92  E112               	bnz	u15531
 29552  01AF94  0EF4               	movlw	-12
 29553  01AF96  50E3               	movf	plusw1,w,c
 29554  01AF98  E10F               	bnz	u15531
 29555  01AF9A  0EF5               	movlw	-11
 29556  01AF9C  50E3               	movf	plusw1,w,c
 29557  01AF9E  E10C               	bnz	u15531
 29558  01AFA0  0EF6               	movlw	-10
 29559  01AFA2  50E3               	movf	plusw1,w,c
 29560  01AFA4  E109               	bnz	u15531
 29561  01AFA6  0EF7               	movlw	-9
 29562  01AFA8  50E3               	movf	plusw1,w,c
 29563  01AFAA  E106               	bnz	u15531
 29564  01AFAC  0EF8               	movlw	-8
 29565  01AFAE  50E3               	movf	plusw1,w,c
 29566  01AFB0  E103               	bnz	u15531
 29567  01AFB2  0EF9               	movlw	-7
 29568  01AFB4  50E3               	movf	plusw1,w,c
 29569  01AFB6  A4D8               	btfss	status,2,c
 29570  01AFB8                     u15531:
 29571  01AFB8  D6E3               	goto	l16169
 29572                           
 29573                           ;stkvar	_p @ sp[(-14)+12]
 29574  01AFBA  0EFF               	movlw	-1
 29575  01AFBC  BEE3               	btfsc	plusw1,7,c
 29576  01AFBE  D007               	goto	u15540
 29577  01AFC0  0EFF               	movlw	-1
 29578  01AFC2  50E3               	movf	plusw1,w,c
 29579  01AFC4  E103               	bnz	u15541
 29580  01AFC6  0EFE               	movlw	-2
 29581  01AFC8  04E3               	decf	plusw1,w,c
 29582  01AFCA  B0D8               	btfsc	status,0,c
 29583  01AFCC                     u15541:
 29584  01AFCC  D6D9               	goto	l16169
 29585  01AFCE                     u15540:
 29586                           
 29587                           ;stkvar	_w @ sp[(-14)+10]
 29588  01AFCE  0EFD               	movlw	-3
 29589  01AFD0  BEE3               	btfsc	plusw1,7,c
 29590  01AFD2  D009               	goto	u15560
 29591  01AFD4  0EFD               	movlw	-3
 29592  01AFD6  50E3               	movf	plusw1,w,c
 29593  01AFD8  E104               	bnz	u15550
 29594  01AFDA  0EFC               	movlw	-4
 29595  01AFDC  04E3               	decf	plusw1,w,c
 29596  01AFDE  A0D8               	btfss	status,0,c
 29597  01AFE0  D002               	goto	u15560
 29598  01AFE2                     u15550:
 29599  01AFE2  B24E               	btfsc	_flags^0,1,c
 29600  01AFE4  D6CD               	goto	l16169
 29601  01AFE6                     u15560:
 29602                           
 29603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 29604                           ;stkvar	_w @ sp[(-14)+10]
 29605  01AFE6  0EFC               	movlw	-4
 29606  01AFE8  006F FF8F FFE6     	movff	plusw1,postinc1
 29607  01AFEE  006F FF8F FFE6     	movff	plusw1,postinc1
 29608                           
 29609                           ;stkvar	_i @ sp[(-16)+8]
 29610  01AFF4  0E54               	movlw	low _dbuf
 29611  01AFF6  6E34               	movwf	(btemp+10)^0,c
 29612  01AFF8  0E03               	movlw	high _dbuf
 29613  01AFFA  6E35               	movwf	(btemp+11)^0,c
 29614  01AFFC  0EF8               	movlw	-8
 29615  01AFFE  50E3               	movf	plusw1,w,c
 29616  01B000  2634               	addwf	(btemp+10)^0,f,c
 29617  01B002  0EF9               	movlw	-7
 29618  01B004  50E3               	movf	plusw1,w,c
 29619  01B006  2235               	addwfc	(btemp+11)^0,f,c
 29620  01B008  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 29621  01B00E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 29622                           
 29623                           ;stkvar	_fp @ sp[(-18)+-2]
 29624  01B014  0EEC               	movlw	-20
 29625  01B016  006F FF8F FFE6     	movff	plusw1,postinc1
 29626  01B01C  006F FF8F FFE6     	movff	plusw1,postinc1
 29627  01B022  ECCF  F0FE         	call	_pad	;wreg free
 29628                           
 29629                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 29630  01B026  0EE8               	movlw	232
 29631  01B028  26E1               	addwf	fsr1l,f,c
 29632  01B02A  0EFF               	movlw	255
 29633  01B02C  22E2               	addwfc	fsr1h,f,c
 29634  01B02E  0012               	return		;funcret
 29635  01B030                     __end_of_utoa:
 29636                           	opt callstack 0
 29637                           
 29638 ;; *************** function ___lomod *****************
 29639 ;; Defined at:
 29640 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 29641 ;; Parameters:    Size  Location     Type
 29642 ;;  dividend        8  [STACK] unsigned long long 
 29643 ;;  divisor         8  [STACK] unsigned long long 
 29644 ;; Auto vars:     Size  Location     Type
 29645 ;;  counter         1  [STACK] unsigned char 
 29646 ;; Return value:  Size  Location     Type
 29647 ;;                  8  [STACK] unsigned long long 
 29648 ;; Registers used:
 29649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 29650 ;; Tracked objects:
 29651 ;;		On entry : 0/3
 29652 ;;		On exit  : 0/0
 29653 ;;		Unchanged: 0/0
 29654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29659 ;;Total ram usage:        0 bytes
 29660 ;; Hardware stack levels used:    1
 29661 ;; Hardware stack levels required when called:   15
 29662 ;; This function calls:
 29663 ;;		Nothing
 29664 ;; This function is called by:
 29665 ;;		_utoa
 29666 ;; This function uses a reentrant model
 29667 ;;
 29668                           
 29669                           	psect	text101
 29670  01F6B8                     __ptext101:
 29671                           	opt callstack 0
 29672  01F6B8                     ___lomod:
 29673                           	opt callstack 0
 29674                           
 29675                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 29676  01F6B8  52E6               	movf	postinc1,f,c
 29677                           
 29678                           ;stkvar	_divisor @ sp[(-1)+-16]
 29679                           
 29680                           ;incstack = 0
 29681 ;; hardware stack exceeded
 29682  01F6BA  0EEF               	movlw	-17
 29683  01F6BC  50E3               	movf	plusw1,w,c
 29684  01F6BE  E116               	bnz	u9260
 29685  01F6C0  0EF0               	movlw	-16
 29686  01F6C2  50E3               	movf	plusw1,w,c
 29687  01F6C4  E113               	bnz	u9260
 29688  01F6C6  0EF1               	movlw	-15
 29689  01F6C8  50E3               	movf	plusw1,w,c
 29690  01F6CA  E110               	bnz	u9260
 29691  01F6CC  0EF2               	movlw	-14
 29692  01F6CE  50E3               	movf	plusw1,w,c
 29693  01F6D0  E10D               	bnz	u9260
 29694  01F6D2  0EF3               	movlw	-13
 29695  01F6D4  50E3               	movf	plusw1,w,c
 29696  01F6D6  E10A               	bnz	u9260
 29697  01F6D8  0EF4               	movlw	-12
 29698  01F6DA  50E3               	movf	plusw1,w,c
 29699  01F6DC  E107               	bnz	u9260
 29700  01F6DE  0EF5               	movlw	-11
 29701  01F6E0  50E3               	movf	plusw1,w,c
 29702  01F6E2  E104               	bnz	u9260
 29703  01F6E4  0EF6               	movlw	-10
 29704  01F6E6  50E3               	movf	plusw1,w,c
 29705  01F6E8  B4D8               	btfsc	status,2,c
 29706  01F6EA  D075               	goto	u9290
 29707  01F6EC                     u9260:
 29708                           
 29709                           ;stkvar	_counter @ sp[(-1)+0]
 29710  01F6EC  0EFF               	movlw	-1
 29711  01F6EE  6AE3               	clrf	plusw1,c
 29712  01F6F0  D012               	goto	L30
 29713  01F6F2                     l10905:
 29714                           
 29715                           ;stkvar	_divisor @ sp[(-1)+-16]
 29716  01F6F2  90D8               	bcf	status,0,c
 29717  01F6F4  0EEF               	movlw	-17
 29718  01F6F6  36E3               	rlcf	plusw1,f,c
 29719  01F6F8  0EF0               	movlw	-16
 29720  01F6FA  36E3               	rlcf	plusw1,f,c
 29721  01F6FC  0EF1               	movlw	-15
 29722  01F6FE  36E3               	rlcf	plusw1,f,c
 29723  01F700  0EF2               	movlw	-14
 29724  01F702  36E3               	rlcf	plusw1,f,c
 29725  01F704  0EF3               	movlw	-13
 29726  01F706  36E3               	rlcf	plusw1,f,c
 29727  01F708  0EF4               	movlw	-12
 29728  01F70A  36E3               	rlcf	plusw1,f,c
 29729  01F70C  0EF5               	movlw	-11
 29730  01F70E  36E3               	rlcf	plusw1,f,c
 29731  01F710  0EF6               	movlw	-10
 29732  01F712  36E3               	rlcf	plusw1,f,c
 29733                           
 29734                           ;stkvar	_counter @ sp[(-1)+0]
 29735  01F714  0EFF               	movlw	-1
 29736  01F716                     L30:
 29737  01F716  2AE3               	incf	plusw1,f,c
 29738                           
 29739                           ;stkvar	_divisor @ sp[(-1)+-16]
 29740  01F718  0EF6               	movlw	-10
 29741  01F71A  AEE3               	btfss	plusw1,7,c
 29742  01F71C  D7EA               	goto	l10905
 29743  01F71E                     u9270:
 29744                           
 29745                           ;stkvar	_divisor @ sp[(-1)+-16]
 29746                           ;stkvar	_dividend @ sp[(-1)+-8]
 29747  01F71E  50E1               	movf	fsr1l,w,c
 29748  01F720  0FF7               	addlw	-9
 29749  01F722  6ED9               	movwf	fsr2l,c
 29750  01F724  50E2               	movf	fsr1h,w,c
 29751  01F726  6EDA               	movwf	fsr2h,c
 29752  01F728  0EFF               	movlw	255
 29753  01F72A  22DA               	addwfc	fsr2h,f,c
 29754  01F72C  0EEF               	movlw	-17
 29755  01F72E  50E3               	movf	plusw1,w,c
 29756  01F730  5CDE               	subwf	postinc2,w,c
 29757  01F732  0EF0               	movlw	-16
 29758  01F734  50E3               	movf	plusw1,w,c
 29759  01F736  58DE               	subwfb	postinc2,w,c
 29760  01F738  0EF1               	movlw	-15
 29761  01F73A  50E3               	movf	plusw1,w,c
 29762  01F73C  58DE               	subwfb	postinc2,w,c
 29763  01F73E  0EF2               	movlw	-14
 29764  01F740  50E3               	movf	plusw1,w,c
 29765  01F742  58DE               	subwfb	postinc2,w,c
 29766  01F744  0EF3               	movlw	-13
 29767  01F746  50E3               	movf	plusw1,w,c
 29768  01F748  58DE               	subwfb	postinc2,w,c
 29769  01F74A  0EF4               	movlw	-12
 29770  01F74C  50E3               	movf	plusw1,w,c
 29771  01F74E  58DE               	subwfb	postinc2,w,c
 29772  01F750  0EF5               	movlw	-11
 29773  01F752  50E3               	movf	plusw1,w,c
 29774  01F754  58DE               	subwfb	postinc2,w,c
 29775  01F756  0EF6               	movlw	-10
 29776  01F758  50E3               	movf	plusw1,w,c
 29777  01F75A  58DE               	subwfb	postinc2,w,c
 29778  01F75C  A0D8               	btfss	status,0,c
 29779  01F75E  D01F               	goto	l10913
 29780                           
 29781                           ;stkvar	_divisor @ sp[(-1)+-16]
 29782                           ;stkvar	_dividend @ sp[(-1)+-8]
 29783  01F760  50E1               	movf	fsr1l,w,c
 29784  01F762  0FF7               	addlw	-9
 29785  01F764  6ED9               	movwf	fsr2l,c
 29786  01F766  50E2               	movf	fsr1h,w,c
 29787  01F768  6EDA               	movwf	fsr2h,c
 29788  01F76A  0EFF               	movlw	255
 29789  01F76C  22DA               	addwfc	fsr2h,f,c
 29790  01F76E  0EEF               	movlw	-17
 29791  01F770  50E3               	movf	plusw1,w,c
 29792  01F772  5EDE               	subwf	postinc2,f,c
 29793  01F774  0EF0               	movlw	-16
 29794  01F776  50E3               	movf	plusw1,w,c
 29795  01F778  5ADE               	subwfb	postinc2,f,c
 29796  01F77A  0EF1               	movlw	-15
 29797  01F77C  50E3               	movf	plusw1,w,c
 29798  01F77E  5ADE               	subwfb	postinc2,f,c
 29799  01F780  0EF2               	movlw	-14
 29800  01F782  50E3               	movf	plusw1,w,c
 29801  01F784  5ADE               	subwfb	postinc2,f,c
 29802  01F786  0EF3               	movlw	-13
 29803  01F788  50E3               	movf	plusw1,w,c
 29804  01F78A  5ADE               	subwfb	postinc2,f,c
 29805  01F78C  0EF4               	movlw	-12
 29806  01F78E  50E3               	movf	plusw1,w,c
 29807  01F790  5ADE               	subwfb	postinc2,f,c
 29808  01F792  0EF5               	movlw	-11
 29809  01F794  50E3               	movf	plusw1,w,c
 29810  01F796  5ADE               	subwfb	postinc2,f,c
 29811  01F798  0EF6               	movlw	-10
 29812  01F79A  50E3               	movf	plusw1,w,c
 29813  01F79C  5ADE               	subwfb	postinc2,f,c
 29814  01F79E                     l10913:
 29815                           
 29816                           ;stkvar	_divisor @ sp[(-1)+-16]
 29817  01F79E  90D8               	bcf	status,0,c
 29818  01F7A0  0EF6               	movlw	-10
 29819  01F7A2  32E3               	rrcf	plusw1,f,c
 29820  01F7A4  0EF5               	movlw	-11
 29821  01F7A6  32E3               	rrcf	plusw1,f,c
 29822  01F7A8  0EF4               	movlw	-12
 29823  01F7AA  32E3               	rrcf	plusw1,f,c
 29824  01F7AC  0EF3               	movlw	-13
 29825  01F7AE  32E3               	rrcf	plusw1,f,c
 29826  01F7B0  0EF2               	movlw	-14
 29827  01F7B2  32E3               	rrcf	plusw1,f,c
 29828  01F7B4  0EF1               	movlw	-15
 29829  01F7B6  32E3               	rrcf	plusw1,f,c
 29830  01F7B8  0EF0               	movlw	-16
 29831  01F7BA  32E3               	rrcf	plusw1,f,c
 29832  01F7BC  0EEF               	movlw	-17
 29833  01F7BE  32E3               	rrcf	plusw1,f,c
 29834                           
 29835                           ;stkvar	_counter @ sp[(-1)+0]
 29836  01F7C0  0EFF               	movlw	-1
 29837  01F7C2  50E3               	movf	plusw1,w,c
 29838  01F7C4  6E2A               	movwf	btemp^0,c
 29839  01F7C6  0E01               	movlw	1
 29840  01F7C8  5E2A               	subwf	btemp^0,f,c
 29841  01F7CA  0EFF               	movlw	-1
 29842  01F7CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 29843  01F7D2  A4D8               	btfss	status,2,c
 29844  01F7D4  D7A4               	goto	u9270
 29845  01F7D6                     u9290:
 29846                           
 29847                           ;stkvar	_dividend @ sp[(-1)+-8]
 29848  01F7D6  0EF7               	movlw	247
 29849  01F7D8  24E1               	addwf	fsr1l,w,c
 29850  01F7DA  6ED9               	movwf	fsr2l,c
 29851  01F7DC  0EFF               	movlw	255
 29852  01F7DE  20E2               	addwfc	fsr1h,w,c
 29853  01F7E0  6EDA               	movwf	fsr2h,c
 29854                           
 29855                           ;stkvar	?___lomod @ sp[(-1)+-8]
 29856  01F7E2  0E08               	movlw	8
 29857  01F7E4  6E2A               	movwf	btemp^0,c
 29858  01F7E6  0EF7               	movlw	-9
 29859  01F7E8                     us930999:
 29860  01F7E8  006F FF7B FFE3     	movff	postinc2,plusw1
 29861  01F7EE  28E8               	incf	wreg,w,c
 29862  01F7F0  2E2A               	decfsz	btemp^0,f,c
 29863  01F7F2  D7FA               	bra	us930999
 29864                           
 29865                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 29866  01F7F4  52E5               	movf	postdec1,f,c
 29867  01F7F6  0012               	return		;funcret
 29868  01F7F8                     __end_of___lomod:
 29869                           	opt callstack 0
 29870                           
 29871 ;; *************** function ___lodiv *****************
 29872 ;; Defined at:
 29873 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 29874 ;; Parameters:    Size  Location     Type
 29875 ;;  dividend        8  [STACK] unsigned long long 
 29876 ;;  divisor         8  [STACK] unsigned long long 
 29877 ;; Auto vars:     Size  Location     Type
 29878 ;;  quotient        8  [STACK] unsigned long long 
 29879 ;;  counter         1  [STACK] unsigned char 
 29880 ;; Return value:  Size  Location     Type
 29881 ;;                  8  [STACK] unsigned long long 
 29882 ;; Registers used:
 29883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 29884 ;; Tracked objects:
 29885 ;;		On entry : 0/3
 29886 ;;		On exit  : 0/0
 29887 ;;		Unchanged: 0/0
 29888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29893 ;;Total ram usage:        0 bytes
 29894 ;; Hardware stack levels used:    1
 29895 ;; Hardware stack levels required when called:   15
 29896 ;; This function calls:
 29897 ;;		Nothing
 29898 ;; This function is called by:
 29899 ;;		_utoa
 29900 ;; This function uses a reentrant model
 29901 ;;
 29902                           
 29903                           	psect	text102
 29904  01E788                     __ptext102:
 29905                           	opt callstack 0
 29906  01E788                     ___lodiv:
 29907                           	opt callstack 0
 29908                           
 29909                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 29910  01E788  0E09               	movlw	9
 29911  01E78A  26E1               	addwf	fsr1l,f,c
 29912  01E78C  0E00               	movlw	0
 29913  01E78E  22E2               	addwfc	fsr1h,f,c
 29914                           
 29915                           ;stkvar	_quotient @ sp[(-9)+0]
 29916                           
 29917                           ;incstack = 0
 29918 ;; hardware stack exceeded
 29919  01E790  0E07               	movlw	7
 29920  01E792  6E2A               	movwf	btemp^0,c
 29921  01E794  0EF7               	movlw	-9
 29922  01E796                     u9201:
 29923  01E796  6AE3               	clrf	plusw1,c
 29924  01E798  2AE8               	incf	wreg,f,c
 29925  01E79A  062A               	decf	btemp^0,f,c
 29926  01E79C  E2FC               	bc	u9201
 29927                           
 29928                           ;stkvar	_divisor @ sp[(-9)+-16]
 29929  01E79E  0EE7               	movlw	-25
 29930  01E7A0  50E3               	movf	plusw1,w,c
 29931  01E7A2  E116               	bnz	u9210
 29932  01E7A4  0EE8               	movlw	-24
 29933  01E7A6  50E3               	movf	plusw1,w,c
 29934  01E7A8  E113               	bnz	u9210
 29935  01E7AA  0EE9               	movlw	-23
 29936  01E7AC  50E3               	movf	plusw1,w,c
 29937  01E7AE  E110               	bnz	u9210
 29938  01E7B0  0EEA               	movlw	-22
 29939  01E7B2  50E3               	movf	plusw1,w,c
 29940  01E7B4  E10D               	bnz	u9210
 29941  01E7B6  0EEB               	movlw	-21
 29942  01E7B8  50E3               	movf	plusw1,w,c
 29943  01E7BA  E10A               	bnz	u9210
 29944  01E7BC  0EEC               	movlw	-20
 29945  01E7BE  50E3               	movf	plusw1,w,c
 29946  01E7C0  E107               	bnz	u9210
 29947  01E7C2  0EED               	movlw	-19
 29948  01E7C4  50E3               	movf	plusw1,w,c
 29949  01E7C6  E104               	bnz	u9210
 29950  01E7C8  0EEE               	movlw	-18
 29951  01E7CA  50E3               	movf	plusw1,w,c
 29952  01E7CC  B4D8               	btfsc	status,2,c
 29953  01E7CE  D088               	goto	u9240
 29954  01E7D0                     u9210:
 29955                           
 29956                           ;stkvar	_counter @ sp[(-9)+8]
 29957  01E7D0  0EFF               	movlw	-1
 29958  01E7D2  6AE3               	clrf	plusw1,c
 29959  01E7D4  D012               	goto	L31
 29960  01E7D6                     l10881:
 29961                           
 29962                           ;stkvar	_divisor @ sp[(-9)+-16]
 29963  01E7D6  90D8               	bcf	status,0,c
 29964  01E7D8  0EE7               	movlw	-25
 29965  01E7DA  36E3               	rlcf	plusw1,f,c
 29966  01E7DC  0EE8               	movlw	-24
 29967  01E7DE  36E3               	rlcf	plusw1,f,c
 29968  01E7E0  0EE9               	movlw	-23
 29969  01E7E2  36E3               	rlcf	plusw1,f,c
 29970  01E7E4  0EEA               	movlw	-22
 29971  01E7E6  36E3               	rlcf	plusw1,f,c
 29972  01E7E8  0EEB               	movlw	-21
 29973  01E7EA  36E3               	rlcf	plusw1,f,c
 29974  01E7EC  0EEC               	movlw	-20
 29975  01E7EE  36E3               	rlcf	plusw1,f,c
 29976  01E7F0  0EED               	movlw	-19
 29977  01E7F2  36E3               	rlcf	plusw1,f,c
 29978  01E7F4  0EEE               	movlw	-18
 29979  01E7F6  36E3               	rlcf	plusw1,f,c
 29980                           
 29981                           ;stkvar	_counter @ sp[(-9)+8]
 29982  01E7F8  0EFF               	movlw	-1
 29983  01E7FA                     L31:
 29984  01E7FA  2AE3               	incf	plusw1,f,c
 29985                           
 29986                           ;stkvar	_divisor @ sp[(-9)+-16]
 29987  01E7FC  0EEE               	movlw	-18
 29988  01E7FE  AEE3               	btfss	plusw1,7,c
 29989  01E800  D7EA               	goto	l10881
 29990  01E802                     u9220:
 29991                           
 29992                           ;stkvar	_quotient @ sp[(-9)+0]
 29993  01E802  90D8               	bcf	status,0,c
 29994  01E804  0EF7               	movlw	-9
 29995  01E806  36E3               	rlcf	plusw1,f,c
 29996  01E808  0EF8               	movlw	-8
 29997  01E80A  36E3               	rlcf	plusw1,f,c
 29998  01E80C  0EF9               	movlw	-7
 29999  01E80E  36E3               	rlcf	plusw1,f,c
 30000  01E810  0EFA               	movlw	-6
 30001  01E812  36E3               	rlcf	plusw1,f,c
 30002  01E814  0EFB               	movlw	-5
 30003  01E816  36E3               	rlcf	plusw1,f,c
 30004  01E818  0EFC               	movlw	-4
 30005  01E81A  36E3               	rlcf	plusw1,f,c
 30006  01E81C  0EFD               	movlw	-3
 30007  01E81E  36E3               	rlcf	plusw1,f,c
 30008  01E820  0EFE               	movlw	-2
 30009  01E822  36E3               	rlcf	plusw1,f,c
 30010                           
 30011                           ;stkvar	_divisor @ sp[(-9)+-16]
 30012                           ;stkvar	_dividend @ sp[(-9)+-8]
 30013  01E824  50E1               	movf	fsr1l,w,c
 30014  01E826  0FEF               	addlw	-17
 30015  01E828  6ED9               	movwf	fsr2l,c
 30016  01E82A  50E2               	movf	fsr1h,w,c
 30017  01E82C  6EDA               	movwf	fsr2h,c
 30018  01E82E  0EFF               	movlw	255
 30019  01E830  22DA               	addwfc	fsr2h,f,c
 30020  01E832  0EE7               	movlw	-25
 30021  01E834  50E3               	movf	plusw1,w,c
 30022  01E836  5CDE               	subwf	postinc2,w,c
 30023  01E838  0EE8               	movlw	-24
 30024  01E83A  50E3               	movf	plusw1,w,c
 30025  01E83C  58DE               	subwfb	postinc2,w,c
 30026  01E83E  0EE9               	movlw	-23
 30027  01E840  50E3               	movf	plusw1,w,c
 30028  01E842  58DE               	subwfb	postinc2,w,c
 30029  01E844  0EEA               	movlw	-22
 30030  01E846  50E3               	movf	plusw1,w,c
 30031  01E848  58DE               	subwfb	postinc2,w,c
 30032  01E84A  0EEB               	movlw	-21
 30033  01E84C  50E3               	movf	plusw1,w,c
 30034  01E84E  58DE               	subwfb	postinc2,w,c
 30035  01E850  0EEC               	movlw	-20
 30036  01E852  50E3               	movf	plusw1,w,c
 30037  01E854  58DE               	subwfb	postinc2,w,c
 30038  01E856  0EED               	movlw	-19
 30039  01E858  50E3               	movf	plusw1,w,c
 30040  01E85A  58DE               	subwfb	postinc2,w,c
 30041  01E85C  0EEE               	movlw	-18
 30042  01E85E  50E3               	movf	plusw1,w,c
 30043  01E860  58DE               	subwfb	postinc2,w,c
 30044  01E862  A0D8               	btfss	status,0,c
 30045  01E864  D021               	goto	l10893
 30046                           
 30047                           ;stkvar	_divisor @ sp[(-9)+-16]
 30048                           ;stkvar	_dividend @ sp[(-9)+-8]
 30049  01E866  50E1               	movf	fsr1l,w,c
 30050  01E868  0FEF               	addlw	-17
 30051  01E86A  6ED9               	movwf	fsr2l,c
 30052  01E86C  50E2               	movf	fsr1h,w,c
 30053  01E86E  6EDA               	movwf	fsr2h,c
 30054  01E870  0EFF               	movlw	255
 30055  01E872  22DA               	addwfc	fsr2h,f,c
 30056  01E874  0EE7               	movlw	-25
 30057  01E876  50E3               	movf	plusw1,w,c
 30058  01E878  5EDE               	subwf	postinc2,f,c
 30059  01E87A  0EE8               	movlw	-24
 30060  01E87C  50E3               	movf	plusw1,w,c
 30061  01E87E  5ADE               	subwfb	postinc2,f,c
 30062  01E880  0EE9               	movlw	-23
 30063  01E882  50E3               	movf	plusw1,w,c
 30064  01E884  5ADE               	subwfb	postinc2,f,c
 30065  01E886  0EEA               	movlw	-22
 30066  01E888  50E3               	movf	plusw1,w,c
 30067  01E88A  5ADE               	subwfb	postinc2,f,c
 30068  01E88C  0EEB               	movlw	-21
 30069  01E88E  50E3               	movf	plusw1,w,c
 30070  01E890  5ADE               	subwfb	postinc2,f,c
 30071  01E892  0EEC               	movlw	-20
 30072  01E894  50E3               	movf	plusw1,w,c
 30073  01E896  5ADE               	subwfb	postinc2,f,c
 30074  01E898  0EED               	movlw	-19
 30075  01E89A  50E3               	movf	plusw1,w,c
 30076  01E89C  5ADE               	subwfb	postinc2,f,c
 30077  01E89E  0EEE               	movlw	-18
 30078  01E8A0  50E3               	movf	plusw1,w,c
 30079  01E8A2  5ADE               	subwfb	postinc2,f,c
 30080                           
 30081                           ;stkvar	_quotient @ sp[(-9)+0]
 30082  01E8A4  0EF7               	movlw	-9
 30083  01E8A6  80E3               	bsf	plusw1,0,c
 30084  01E8A8                     l10893:
 30085                           
 30086                           ;stkvar	_divisor @ sp[(-9)+-16]
 30087  01E8A8  90D8               	bcf	status,0,c
 30088  01E8AA  0EEE               	movlw	-18
 30089  01E8AC  32E3               	rrcf	plusw1,f,c
 30090  01E8AE  0EED               	movlw	-19
 30091  01E8B0  32E3               	rrcf	plusw1,f,c
 30092  01E8B2  0EEC               	movlw	-20
 30093  01E8B4  32E3               	rrcf	plusw1,f,c
 30094  01E8B6  0EEB               	movlw	-21
 30095  01E8B8  32E3               	rrcf	plusw1,f,c
 30096  01E8BA  0EEA               	movlw	-22
 30097  01E8BC  32E3               	rrcf	plusw1,f,c
 30098  01E8BE  0EE9               	movlw	-23
 30099  01E8C0  32E3               	rrcf	plusw1,f,c
 30100  01E8C2  0EE8               	movlw	-24
 30101  01E8C4  32E3               	rrcf	plusw1,f,c
 30102  01E8C6  0EE7               	movlw	-25
 30103  01E8C8  32E3               	rrcf	plusw1,f,c
 30104                           
 30105                           ;stkvar	_counter @ sp[(-9)+8]
 30106  01E8CA  0EFF               	movlw	-1
 30107  01E8CC  50E3               	movf	plusw1,w,c
 30108  01E8CE  6E2A               	movwf	btemp^0,c
 30109  01E8D0  0E01               	movlw	1
 30110  01E8D2  5E2A               	subwf	btemp^0,f,c
 30111  01E8D4  0EFF               	movlw	-1
 30112  01E8D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30113  01E8DC  A4D8               	btfss	status,2,c
 30114  01E8DE  D791               	goto	u9220
 30115  01E8E0                     u9240:
 30116                           
 30117                           ;stkvar	_quotient @ sp[(-9)+0]
 30118  01E8E0  0EF7               	movlw	247
 30119  01E8E2  24E1               	addwf	fsr1l,w,c
 30120  01E8E4  6ED9               	movwf	fsr2l,c
 30121  01E8E6  0EFF               	movlw	255
 30122  01E8E8  20E2               	addwfc	fsr1h,w,c
 30123  01E8EA  6EDA               	movwf	fsr2h,c
 30124                           
 30125                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 30126  01E8EC  0E08               	movlw	8
 30127  01E8EE  6E2A               	movwf	btemp^0,c
 30128  01E8F0  0EEF               	movlw	-17
 30129  01E8F2                     us925999:
 30130  01E8F2  006F FF7B FFE3     	movff	postinc2,plusw1
 30131  01E8F8  28E8               	incf	wreg,w,c
 30132  01E8FA  2E2A               	decfsz	btemp^0,f,c
 30133  01E8FC  D7FA               	bra	us925999
 30134                           
 30135                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 30136  01E8FE  0EF7               	movlw	247
 30137  01E900  26E1               	addwf	fsr1l,f,c
 30138  01E902  0EFF               	movlw	255
 30139  01E904  22E2               	addwfc	fsr1h,f,c
 30140  01E906  0012               	return		;funcret
 30141  01E908                     __end_of___lodiv:
 30142                           	opt callstack 0
 30143                           
 30144 ;; *************** function _strncmp *****************
 30145 ;; Defined at:
 30146 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 30147 ;; Parameters:    Size  Location     Type
 30148 ;;  _l              2  [STACK] PTR const unsigned char 
 30149 ;;		 -> ct(3), STR_103(127), STR_101(3), STR_100(3), 
 30150 ;;		 -> STR_99(21), STR_98(21), STR_97(21), STR_96(21), 
 30151 ;;		 -> STR_95(21), STR_94(21), STR_93(26), STR_92(15), 
 30152 ;;		 -> STR_91(15), STR_90(15), STR_89(15), STR_88(10), 
 30153 ;;		 -> STR_87(10), STR_86(19), STR_85(19), STR_82(3), 
 30154 ;;		 -> STR_81(14), STR_80(28), STR_79(28), STR_78(28), 
 30155 ;;		 -> STR_77(22), STR_76(22), STR_75(22), STR_74(22), 
 30156 ;;		 -> STR_73(22), STR_72(22), STR_71(22), STR_70(22), 
 30157 ;;		 -> STR_69(22), STR_68(19), STR_67(21), STR_66(21), 
 30158 ;;		 -> STR_65(21), STR_64(22), STR_63(22), STR_62(22), 
 30159 ;;		 -> STR_61(22), STR_60(22), STR_59(22), STR_58(22), 
 30160 ;;		 -> STR_57(22), STR_56(22), STR_55(21), STR_54(22), 
 30161 ;;		 -> STR_53(22), STR_52(22), STR_51(22), STR_50(22), 
 30162 ;;		 -> STR_49(22), STR_48(24), STR_47(24), STR_46(24), 
 30163 ;;		 -> STR_45(30), STR_44(24), STR_43(24), STR_42(23), 
 30164 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(23), 
 30165 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 30166 ;;		 -> STR_33(23), STR_32(23), STR_31(23), STR_30(18), 
 30167 ;;		 -> STR_29(17), STR_28(17), STR_27(22), STR_26(22), 
 30168 ;;		 -> STR_25(22), STR_24(14), STR_23(27), STR_22(27), 
 30169 ;;		 -> STR_21(23), STR_20(22), STR_19(22), STR_18(22), 
 30170 ;;		 -> STR_17(22), STR_16(23), STR_15(23), STR_14(23), 
 30171 ;;		 -> STR_13(26), STR_12(22), STR_11(21), STR_10(21), 
 30172 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 30173 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 30174 ;;  _r              2  [STACK] PTR const unsigned char 
 30175 ;;		 -> STR_137(3), STR_133(3), STR_128(3), STR_123(3), 
 30176 ;;		 -> STR_118(3), STR_114(3), 
 30177 ;;  n               2  [STACK] unsigned int 
 30178 ;; Auto vars:     Size  Location     Type
 30179 ;;  r               2  [STACK] PTR const unsigned char 
 30180 ;;		 -> STR_137(3), STR_133(3), STR_128(3), STR_123(3), 
 30181 ;;		 -> STR_118(3), STR_114(3), 
 30182 ;;  l               2  [STACK] PTR const unsigned char 
 30183 ;;		 -> ct(3), STR_103(127), STR_101(3), STR_100(3), 
 30184 ;;		 -> STR_99(21), STR_98(21), STR_97(21), STR_96(21), 
 30185 ;;		 -> STR_95(21), STR_94(21), STR_93(26), STR_92(15), 
 30186 ;;		 -> STR_91(15), STR_90(15), STR_89(15), STR_88(10), 
 30187 ;;		 -> STR_87(10), STR_86(19), STR_85(19), STR_82(3), 
 30188 ;;		 -> STR_81(14), STR_80(28), STR_79(28), STR_78(28), 
 30189 ;;		 -> STR_77(22), STR_76(22), STR_75(22), STR_74(22), 
 30190 ;;		 -> STR_73(22), STR_72(22), STR_71(22), STR_70(22), 
 30191 ;;		 -> STR_69(22), STR_68(19), STR_67(21), STR_66(21), 
 30192 ;;		 -> STR_65(21), STR_64(22), STR_63(22), STR_62(22), 
 30193 ;;		 -> STR_61(22), STR_60(22), STR_59(22), STR_58(22), 
 30194 ;;		 -> STR_57(22), STR_56(22), STR_55(21), STR_54(22), 
 30195 ;;		 -> STR_53(22), STR_52(22), STR_51(22), STR_50(22), 
 30196 ;;		 -> STR_49(22), STR_48(24), STR_47(24), STR_46(24), 
 30197 ;;		 -> STR_45(30), STR_44(24), STR_43(24), STR_42(23), 
 30198 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(23), 
 30199 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 30200 ;;		 -> STR_33(23), STR_32(23), STR_31(23), STR_30(18), 
 30201 ;;		 -> STR_29(17), STR_28(17), STR_27(22), STR_26(22), 
 30202 ;;		 -> STR_25(22), STR_24(14), STR_23(27), STR_22(27), 
 30203 ;;		 -> STR_21(23), STR_20(22), STR_19(22), STR_18(22), 
 30204 ;;		 -> STR_17(22), STR_16(23), STR_15(23), STR_14(23), 
 30205 ;;		 -> STR_13(26), STR_12(22), STR_11(21), STR_10(21), 
 30206 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 30207 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 30208 ;; Return value:  Size  Location     Type
 30209 ;;                  2  [STACK] int 
 30210 ;; Registers used:
 30211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 30212 ;; Tracked objects:
 30213 ;;		On entry : 0/0
 30214 ;;		On exit  : 0/0
 30215 ;;		Unchanged: 0/0
 30216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30221 ;;Total ram usage:        0 bytes
 30222 ;; Hardware stack levels used:    1
 30223 ;; Hardware stack levels required when called:   15
 30224 ;; This function calls:
 30225 ;;		Nothing
 30226 ;; This function is called by:
 30227 ;;		_vfpfcnvrt
 30228 ;; This function uses a reentrant model
 30229 ;;
 30230                           
 30231                           	psect	text103
 30232  01D3D0                     __ptext103:
 30233                           	opt callstack 0
 30234  01D3D0                     _strncmp:
 30235                           	opt callstack 0
 30236                           
 30237                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30238  01D3D0  52E6               	movf	postinc1,f,c
 30239  01D3D2  52E6               	movf	postinc1,f,c
 30240  01D3D4  52E6               	movf	postinc1,f,c
 30241  01D3D6  52E6               	movf	postinc1,f,c
 30242                           
 30243                           ;stkvar	__l @ sp[(-4)+-2]
 30244                           
 30245                           ;incstack = 0
 30246 ;; hardware stack exceeded
 30247  01D3D8  0EFA               	movlw	-6
 30248  01D3DA  006F FF8C  F034    	movff	plusw1,btemp+10
 30249  01D3E0  0EFB               	movlw	-5
 30250  01D3E2  006F FF8C  F035    	movff	plusw1,btemp+11
 30251                           
 30252                           ;stkvar	_l @ sp[(-4)+2]
 30253  01D3E8  0EFF               	movlw	-1
 30254  01D3EA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30255  01D3F0  0EFE               	movlw	-2
 30256  01D3F2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30257                           
 30258                           ;stkvar	__r @ sp[(-4)+-4]
 30259  01D3F8  0EF8               	movlw	-8
 30260  01D3FA  006F FF8C  F034    	movff	plusw1,btemp+10
 30261  01D400  0EF9               	movlw	-7
 30262  01D402  006F FF8C  F035    	movff	plusw1,btemp+11
 30263                           
 30264                           ;stkvar	_r @ sp[(-4)+0]
 30265  01D408  0EFD               	movlw	-3
 30266  01D40A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30267  01D410  0EFC               	movlw	-4
 30268  01D412  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30269                           
 30270                           ;stkvar	_n @ sp[(-4)+-6]
 30271  01D418  0EF6               	movlw	-10
 30272  01D41A  006F FF8C  F02A    	movff	plusw1,btemp
 30273  01D420  0E01               	movlw	1
 30274  01D422  5E2A               	subwf	btemp^0,f,c
 30275  01D424  0EF6               	movlw	-10
 30276  01D426  0060  F0AB  FFE3   	movff	btemp,plusw1
 30277  01D42C  0EF7               	movlw	-9
 30278  01D42E  006F FF8C  F02A    	movff	plusw1,btemp
 30279  01D434  0E00               	movlw	0
 30280  01D436  5A2A               	subwfb	btemp^0,f,c
 30281  01D438  0EF7               	movlw	-9
 30282  01D43A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30283  01D440  0EF6               	movlw	-10
 30284  01D442  28E3               	incf	plusw1,w,c
 30285  01D444  E13F               	bnz	l11591
 30286  01D446  0EF7               	movlw	-9
 30287  01D448  28E3               	incf	plusw1,w,c
 30288  01D44A  A4D8               	btfss	status,2,c
 30289  01D44C  D03B               	goto	l11591
 30290  01D44E  0E00               	movlw	0
 30291  01D450  6E2A               	movwf	btemp^0,c
 30292  01D452  0E00               	movlw	0
 30293  01D454  6E2B               	movwf	(btemp+1)^0,c
 30294  01D456  D0C7               	goto	l3819
 30295  01D458                     l11589:
 30296                           
 30297                           ;stkvar	_l @ sp[(-4)+2]
 30298  01D458  0EFE               	movlw	-2
 30299  01D45A  50E3               	movf	plusw1,w,c
 30300  01D45C  0F01               	addlw	1
 30301  01D45E  6E2A               	movwf	btemp^0,c
 30302  01D460  0EFE               	movlw	-2
 30303  01D462  0060  F0AB  FFE3   	movff	btemp,plusw1
 30304  01D468  6A2A               	clrf	btemp^0,c
 30305  01D46A  0EFF               	movlw	-1
 30306  01D46C  50E3               	movf	plusw1,w,c
 30307  01D46E  202A               	addwfc	btemp^0,w,c
 30308  01D470  6E2A               	movwf	btemp^0,c
 30309  01D472  0EFF               	movlw	-1
 30310  01D474  0060  F0AB  FFE3   	movff	btemp,plusw1
 30311                           
 30312                           ;stkvar	_r @ sp[(-4)+0]
 30313  01D47A  0EFC               	movlw	-4
 30314  01D47C  50E3               	movf	plusw1,w,c
 30315  01D47E  0F01               	addlw	1
 30316  01D480  6E2A               	movwf	btemp^0,c
 30317  01D482  0EFC               	movlw	-4
 30318  01D484  0060  F0AB  FFE3   	movff	btemp,plusw1
 30319  01D48A  6A2A               	clrf	btemp^0,c
 30320  01D48C  0EFD               	movlw	-3
 30321  01D48E  50E3               	movf	plusw1,w,c
 30322  01D490  202A               	addwfc	btemp^0,w,c
 30323  01D492  6E2A               	movwf	btemp^0,c
 30324  01D494  0EFD               	movlw	-3
 30325  01D496  0060  F0AB  FFE3   	movff	btemp,plusw1
 30326                           
 30327                           ;stkvar	_n @ sp[(-4)+-6]
 30328  01D49C  0EF6               	movlw	-10
 30329  01D49E  006F FF8C  F02A    	movff	plusw1,btemp
 30330  01D4A4  0E01               	movlw	1
 30331  01D4A6  5E2A               	subwf	btemp^0,f,c
 30332  01D4A8  0EF6               	movlw	-10
 30333  01D4AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 30334  01D4B0  0EF7               	movlw	-9
 30335  01D4B2  006F FF8C  F02A    	movff	plusw1,btemp
 30336  01D4B8  0E00               	movlw	0
 30337  01D4BA  5A2A               	subwfb	btemp^0,f,c
 30338  01D4BC  0EF7               	movlw	-9
 30339  01D4BE  0060  F0AB  FFE3   	movff	btemp,plusw1
 30340  01D4C4                     l11591:
 30341                           
 30342                           ;stkvar	_l @ sp[(-4)+2]
 30343  01D4C4  0EFE               	movlw	-2
 30344  01D4C6  006F FF8F FFF6     	movff	plusw1,tblptrl
 30345  01D4CC  0EFF               	movlw	-1
 30346  01D4CE  006F FF8F FFF7     	movff	plusw1,tblptrh
 30347  01D4D4  0E00               	movlw	low (__mediumconst shr (0+16))
 30348  01D4D6  6EF8               	movwf	tblptru,c
 30349  01D4D8  0E1F               	movlw	(high __ramtop+-1)
 30350  01D4DA  64F7               	cpfsgt	tblptrh,c
 30351  01D4DC  D003               	bra	u10547
 30352  01D4DE  0008               	tblrd		*
 30353  01D4E0  50F5               	movf	tablat,w,c
 30354  01D4E2  D007               	bra	u10540
 30355  01D4E4                     u10547:
 30356  01D4E4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30357  01D4EA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30358  01D4F0  50EF               	movf	indf0,w,c
 30359  01D4F2                     u10540:
 30360  01D4F2  0900               	iorlw	0
 30361  01D4F4  B4D8               	btfsc	status,2,c
 30362  01D4F6  D04A               	goto	u10580
 30363                           
 30364                           ;stkvar	_r @ sp[(-4)+0]
 30365  01D4F8  50E1               	movf	fsr1l,w,c
 30366  01D4FA  0FFC               	addlw	-4
 30367  01D4FC  6ED9               	movwf	fsr2l,c
 30368  01D4FE  50E2               	movf	fsr1h,w,c
 30369  01D500  6EDA               	movwf	fsr2h,c
 30370  01D502  0EFF               	movlw	255
 30371  01D504  22DA               	addwfc	fsr2h,f,c
 30372  01D506  006F FF7B FFF6     	movff	postinc2,tblptrl
 30373  01D50C  006F FF77 FFF7     	movff	postdec2,tblptrh
 30374  01D512                     	if	0	;tblptru may be non-zero
 30375  01D512                     	endif
 30376  01D512                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30377  01D512  0E00               	movlw	low (__mediumconst shr (0+16))
 30378  01D514  6EF8               	movwf	tblptru,c
 30379  01D516                     	endif
 30380  01D516  0008               	tblrd		*
 30381  01D518  50F5               	movf	tablat,w,c
 30382  01D51A  0900               	iorlw	0
 30383  01D51C  B4D8               	btfsc	status,2,c
 30384  01D51E  D036               	goto	u10580
 30385                           
 30386                           ;stkvar	_n @ sp[(-4)+-6]
 30387  01D520  0EF6               	movlw	-10
 30388  01D522  006F FF8C  F02A    	movff	plusw1,btemp
 30389  01D528  0EF7               	movlw	-9
 30390  01D52A  50E3               	movf	plusw1,w,c
 30391  01D52C  102A               	iorwf	btemp^0,w,c
 30392  01D52E  B4D8               	btfsc	status,2,c
 30393  01D530  D02D               	goto	u10580
 30394                           
 30395                           ;stkvar	_r @ sp[(-4)+0]
 30396  01D532  50E1               	movf	fsr1l,w,c
 30397  01D534  0FFC               	addlw	-4
 30398  01D536  6ED9               	movwf	fsr2l,c
 30399  01D538  50E2               	movf	fsr1h,w,c
 30400  01D53A  6EDA               	movwf	fsr2h,c
 30401  01D53C  0EFF               	movlw	255
 30402  01D53E  22DA               	addwfc	fsr2h,f,c
 30403  01D540  006F FF7B FFF6     	movff	postinc2,tblptrl
 30404  01D546  006F FF77 FFF7     	movff	postdec2,tblptrh
 30405  01D54C                     	if	0	;tblptru may be non-zero
 30406  01D54C                     	endif
 30407  01D54C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30408  01D54C  0E00               	movlw	low (__mediumconst shr (0+16))
 30409  01D54E  6EF8               	movwf	tblptru,c
 30410  01D550                     	endif
 30411  01D550  0008               	tblrd		*
 30412  01D552  006F FFD4  F035    	movff	tablat,btemp+11
 30413                           
 30414                           ;stkvar	_l @ sp[(-4)+2]
 30415  01D558  0EFE               	movlw	-2
 30416  01D55A  006F FF8F FFF6     	movff	plusw1,tblptrl
 30417  01D560  0EFF               	movlw	-1
 30418  01D562  006F FF8F FFF7     	movff	plusw1,tblptrh
 30419  01D568  0E00               	movlw	low (__mediumconst shr (0+16))
 30420  01D56A  6EF8               	movwf	tblptru,c
 30421  01D56C  0E1F               	movlw	(high __ramtop+-1)
 30422  01D56E  64F7               	cpfsgt	tblptrh,c
 30423  01D570  D003               	bra	u10587
 30424  01D572  0008               	tblrd		*
 30425  01D574  50F5               	movf	tablat,w,c
 30426  01D576  D007               	bra	u10585
 30427  01D578                     u10587:
 30428  01D578  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30429  01D57E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30430  01D584  50EF               	movf	indf0,w,c
 30431  01D586                     u10585:
 30432  01D586  1835               	xorwf	(btemp+11)^0,w,c
 30433  01D588  B4D8               	btfsc	status,2,c
 30434  01D58A  D766               	goto	l11589
 30435  01D58C                     u10580:
 30436                           
 30437                           ;stkvar	_l @ sp[(-4)+2]
 30438  01D58C  0EFE               	movlw	-2
 30439  01D58E  006F FF8F FFF6     	movff	plusw1,tblptrl
 30440  01D594  0EFF               	movlw	-1
 30441  01D596  006F FF8F FFF7     	movff	plusw1,tblptrh
 30442  01D59C  0E00               	movlw	low (__mediumconst shr (0+16))
 30443  01D59E  6EF8               	movwf	tblptru,c
 30444  01D5A0  0E1F               	movlw	(high __ramtop+-1)
 30445  01D5A2  64F7               	cpfsgt	tblptrh,c
 30446  01D5A4  D003               	bra	u10597
 30447  01D5A6  0008               	tblrd		*
 30448  01D5A8  50F5               	movf	tablat,w,c
 30449  01D5AA  D007               	bra	u10590
 30450  01D5AC                     u10597:
 30451  01D5AC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30452  01D5B2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30453  01D5B8  50EF               	movf	indf0,w,c
 30454  01D5BA                     u10590:
 30455  01D5BA  6E2A               	movwf	btemp^0,c
 30456  01D5BC  6A2B               	clrf	(btemp+1)^0,c
 30457                           
 30458                           ;stkvar	_r @ sp[(-4)+0]
 30459  01D5BE  50E1               	movf	fsr1l,w,c
 30460  01D5C0  0FFC               	addlw	-4
 30461  01D5C2  6ED9               	movwf	fsr2l,c
 30462  01D5C4  50E2               	movf	fsr1h,w,c
 30463  01D5C6  6EDA               	movwf	fsr2h,c
 30464  01D5C8  0EFF               	movlw	255
 30465  01D5CA  22DA               	addwfc	fsr2h,f,c
 30466  01D5CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 30467  01D5D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 30468  01D5D8                     	if	0	;tblptru may be non-zero
 30469  01D5D8                     	endif
 30470  01D5D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30471  01D5D8  0E00               	movlw	low (__mediumconst shr (0+16))
 30472  01D5DA  6EF8               	movwf	tblptru,c
 30473  01D5DC                     	endif
 30474  01D5DC  0008               	tblrd		*
 30475  01D5DE  50F5               	movf	tablat,w,c
 30476  01D5E0  5E2A               	subwf	btemp^0,f,c
 30477  01D5E2  0E00               	movlw	0
 30478  01D5E4  5A2B               	subwfb	(btemp+1)^0,f,c
 30479  01D5E6                     l3819:
 30480                           
 30481                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 30482  01D5E6  0EF6               	movlw	246
 30483  01D5E8  26E1               	addwf	fsr1l,f,c
 30484  01D5EA  0EFF               	movlw	255
 30485  01D5EC  22E2               	addwfc	fsr1h,f,c
 30486  01D5EE  0012               	return		;funcret
 30487  01D5F0                     __end_of_strncmp:
 30488                           	opt callstack 0
 30489                           
 30490 ;; *************** function _stoa *****************
 30491 ;; Defined at:
 30492 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 30493 ;; Parameters:    Size  Location     Type
 30494 ;;  fp              2  [STACK] PTR struct _IO_FILE
 30495 ;;		 -> f(6), NULL(0), 
 30496 ;;  s               2  [STACK] PTR unsigned char 
 30497 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_84(9), 
 30498 ;;		 -> STR_83(12), D.lcd(640), D(642), T(176), 
 30499 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 30500 ;; Auto vars:     Size  Location     Type
 30501 ;;  nuls            7  [STACK] unsigned char [7]
 30502 ;;  l               2  [STACK] int 
 30503 ;;  p               2  [STACK] int 
 30504 ;;  cp              2  [STACK] PTR unsigned char 
 30505 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 30506 ;;		 -> STR_84(9), STR_83(12), D.lcd(640), D(642), 
 30507 ;;		 -> T(176), cp(4), cb(4), STR_3(5), 
 30508 ;;		 -> V(181), 
 30509 ;;  w               2  [STACK] int 
 30510 ;;  i               2  [STACK] int 
 30511 ;; Return value:  Size  Location     Type
 30512 ;;                  2  [STACK] int 
 30513 ;; Registers used:
 30514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 30515 ;; Tracked objects:
 30516 ;;		On entry : 0/0
 30517 ;;		On exit  : 0/0
 30518 ;;		Unchanged: 0/0
 30519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30524 ;;Total ram usage:        0 bytes
 30525 ;; Hardware stack levels used:    1
 30526 ;; Hardware stack levels required when called:   18
 30527 ;; This function calls:
 30528 ;;		_fputc
 30529 ;;		_strlen
 30530 ;; This function is called by:
 30531 ;;		_vfpfcnvrt
 30532 ;; This function uses a reentrant model
 30533 ;;
 30534                           
 30535                           	psect	text104
 30536  01BBCA                     __ptext104:
 30537                           	opt callstack 0
 30538  01BBCA                     _stoa:
 30539                           	opt callstack 0
 30540                           
 30541                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30542  01BBCA  0E11               	movlw	17
 30543  01BBCC  26E1               	addwf	fsr1l,f,c
 30544  01BBCE  0E00               	movlw	0
 30545  01BBD0  22E2               	addwfc	fsr1h,f,c
 30546                           
 30547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 30548                           
 30549                           ;incstack = 0
 30550 ;; hardware stack exceeded
 30551  01BBD2  EE20  F200         	lfsr	2,stoa@F1166
 30552                           
 30553                           ;stkvar	_nuls @ sp[(-17)+0]
 30554  01BBD6  0E07               	movlw	7
 30555  01BBD8  6E2A               	movwf	btemp^0,c
 30556  01BBDA  0EEF               	movlw	-17
 30557  01BBDC                     us1539999:
 30558  01BBDC  006F FF7B FFE3     	movff	postinc2,plusw1
 30559  01BBE2  28E8               	incf	wreg,w,c
 30560  01BBE4  2E2A               	decfsz	btemp^0,f,c
 30561  01BBE6  D7FA               	bra	us1539999
 30562                           
 30563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 30564                           ;stkvar	_s @ sp[(-17)+-4]
 30565  01BBE8  0EEB               	movlw	-21
 30566  01BBEA  006F FF8C  F034    	movff	plusw1,btemp+10
 30567  01BBF0  0EEC               	movlw	-20
 30568  01BBF2  006F FF8C  F035    	movff	plusw1,btemp+11
 30569                           
 30570                           ;stkvar	_cp @ sp[(-17)+11]
 30571  01BBF8  0EFB               	movlw	-5
 30572  01BBFA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30573  01BC00  0EFA               	movlw	-6
 30574  01BC02  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30575                           
 30576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 30577                           ;stkvar	_cp @ sp[(-17)+11]
 30578  01BC08  0EFA               	movlw	-6
 30579  01BC0A  006F FF8C  F02A    	movff	plusw1,btemp
 30580  01BC10  0EFB               	movlw	-5
 30581  01BC12  50E3               	movf	plusw1,w,c
 30582  01BC14  102A               	iorwf	btemp^0,w,c
 30583  01BC16  A4D8               	btfss	status,2,c
 30584  01BC18  D00E               	goto	l16109
 30585                           
 30586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 30587                           ;stkvar	_nuls @ sp[(-17)+0]
 30588  01BC1A  0EEF               	movlw	239
 30589  01BC1C  24E1               	addwf	fsr1l,w,c
 30590  01BC1E  6E34               	movwf	(btemp+10)^0,c
 30591  01BC20  0EFF               	movlw	255
 30592  01BC22  20E2               	addwfc	fsr1h,w,c
 30593  01BC24  6E35               	movwf	(btemp+11)^0,c
 30594                           
 30595                           ;stkvar	_cp @ sp[(-17)+11]
 30596  01BC26  0EFB               	movlw	-5
 30597  01BC28  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30598  01BC2E  0EFA               	movlw	-6
 30599  01BC30  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30600  01BC36                     l16109:
 30601                           
 30602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 30603                           ;stkvar	_cp @ sp[(-17)+11]
 30604  01BC36  0EFA               	movlw	-6
 30605  01BC38  006F FF8F FFE6     	movff	plusw1,postinc1
 30606  01BC3E  006F FF8F FFE6     	movff	plusw1,postinc1
 30607  01BC44  EC47  F008         	call	_strlen	;wreg free
 30608                           
 30609                           ;stkvar	_l @ sp[(-17)+7]
 30610  01BC48  0EF6               	movlw	-10
 30611  01BC4A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30612  01BC50  0EF7               	movlw	-9
 30613  01BC52  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30614                           
 30615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 30616                           ;stkvar	_p @ sp[(-17)+9]
 30617  01BC58  0EF8               	movlw	-8
 30618  01BC5A  0060  F133  FFE3   	movff	_prec,plusw1
 30619  01BC60  0EF9               	movlw	-7
 30620  01BC62  0060  F137  FFE3   	movff	_prec+1,plusw1
 30621                           
 30622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 30623                           ;stkvar	_p @ sp[(-17)+9]
 30624  01BC68  0EF9               	movlw	-7
 30625  01BC6A  BEE3               	btfsc	plusw1,7,c
 30626  01BC6C  D023               	goto	l2614
 30627                           
 30628                           ;stkvar	_l @ sp[(-17)+7]
 30629                           ;stkvar	_p @ sp[(-17)+9]
 30630  01BC6E  50E1               	movf	fsr1l,w,c
 30631  01BC70  0FF8               	addlw	-8
 30632  01BC72  6ED9               	movwf	fsr2l,c
 30633  01BC74  50E2               	movf	fsr1h,w,c
 30634  01BC76  6EDA               	movwf	fsr2h,c
 30635  01BC78  0EFF               	movlw	255
 30636  01BC7A  22DA               	addwfc	fsr2h,f,c
 30637  01BC7C  0EF6               	movlw	-10
 30638  01BC7E  50E3               	movf	plusw1,w,c
 30639  01BC80  5CDE               	subwf	postinc2,w,c
 30640  01BC82  50DE               	movf	postinc2,w,c
 30641  01BC84  0A80               	xorlw	128
 30642  01BC86  6E2A               	movwf	btemp^0,c
 30643  01BC88  0EF7               	movlw	-9
 30644  01BC8A  50E3               	movf	plusw1,w,c
 30645  01BC8C  0A80               	xorlw	128
 30646  01BC8E  582A               	subwfb	btemp^0,w,c
 30647  01BC90  B0D8               	btfsc	status,0,c
 30648  01BC92  D010               	goto	l2614
 30649                           
 30650                           ;stkvar	_p @ sp[(-17)+9]
 30651                           ;stkvar	_l @ sp[(-17)+7]
 30652  01BC94  0EF8               	movlw	-8
 30653  01BC96  006F FF8C  F02A    	movff	plusw1,btemp
 30654  01BC9C  0EF6               	movlw	-10
 30655  01BC9E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30656  01BCA4  0EF9               	movlw	-7
 30657  01BCA6  006F FF8C  F02A    	movff	plusw1,btemp
 30658  01BCAC  0EF7               	movlw	-9
 30659  01BCAE  0060  F0AB  FFE3   	movff	btemp,plusw1
 30660  01BCB4                     l2614:
 30661                           
 30662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 30663                           ;stkvar	_l @ sp[(-17)+7]
 30664                           ;stkvar	_p @ sp[(-17)+9]
 30665  01BCB4  0EF6               	movlw	-10
 30666  01BCB6  006F FF8C  F02A    	movff	plusw1,btemp
 30667  01BCBC  0EF8               	movlw	-8
 30668  01BCBE  0060  F0AB  FFE3   	movff	btemp,plusw1
 30669  01BCC4  0EF7               	movlw	-9
 30670  01BCC6  006F FF8C  F02A    	movff	plusw1,btemp
 30671  01BCCC  0EF9               	movlw	-7
 30672  01BCCE  0060  F0AB  FFE3   	movff	btemp,plusw1
 30673                           
 30674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 30675                           ;stkvar	_w @ sp[(-17)+13]
 30676  01BCD4  0EFC               	movlw	-4
 30677  01BCD6  0060  F12B  FFE3   	movff	_width,plusw1
 30678  01BCDC  0EFD               	movlw	-3
 30679  01BCDE  0060  F12F  FFE3   	movff	_width+1,plusw1
 30680                           
 30681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 30682  01BCE4  A04E               	btfss	_flags^0,0,c
 30683  01BCE6  D01F               	goto	l16129
 30684  01BCE8  D031               	goto	u15440
 30685  01BCEA                     l16125:
 30686                           
 30687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 30688                           ;stkvar	_fp @ sp[(-17)+-2]
 30689  01BCEA  0EED               	movlw	-19
 30690  01BCEC  006F FF8F FFE6     	movff	plusw1,postinc1
 30691  01BCF2  006F FF8F FFE6     	movff	plusw1,postinc1
 30692  01BCF8  0E20               	movlw	32
 30693  01BCFA  6EE6               	movwf	postinc1,c
 30694  01BCFC  0E00               	movlw	0
 30695  01BCFE  6EE6               	movwf	postinc1,c
 30696  01BD00  EC98  F0FC         	call	_fputc	;wreg free
 30697                           
 30698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 30699                           ;stkvar	_l @ sp[(-17)+7]
 30700  01BD04  0EF6               	movlw	-10
 30701  01BD06  50E3               	movf	plusw1,w,c
 30702  01BD08  0F01               	addlw	1
 30703  01BD0A  6E2A               	movwf	btemp^0,c
 30704  01BD0C  0EF6               	movlw	-10
 30705  01BD0E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30706  01BD14  6A2A               	clrf	btemp^0,c
 30707  01BD16  0EF7               	movlw	-9
 30708  01BD18  50E3               	movf	plusw1,w,c
 30709  01BD1A  202A               	addwfc	btemp^0,w,c
 30710  01BD1C  6E2A               	movwf	btemp^0,c
 30711  01BD1E  0EF7               	movlw	-9
 30712  01BD20  0060  F0AB  FFE3   	movff	btemp,plusw1
 30713  01BD26                     l16129:
 30714                           
 30715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 30716                           ;stkvar	_w @ sp[(-17)+13]
 30717                           ;stkvar	_l @ sp[(-17)+7]
 30718  01BD26  50E1               	movf	fsr1l,w,c
 30719  01BD28  0FF6               	addlw	-10
 30720  01BD2A  6ED9               	movwf	fsr2l,c
 30721  01BD2C  50E2               	movf	fsr1h,w,c
 30722  01BD2E  6EDA               	movwf	fsr2h,c
 30723  01BD30  0EFF               	movlw	255
 30724  01BD32  22DA               	addwfc	fsr2h,f,c
 30725  01BD34  0EFC               	movlw	-4
 30726  01BD36  50E3               	movf	plusw1,w,c
 30727  01BD38  5CDE               	subwf	postinc2,w,c
 30728  01BD3A  50DE               	movf	postinc2,w,c
 30729  01BD3C  0A80               	xorlw	128
 30730  01BD3E  6E2A               	movwf	btemp^0,c
 30731  01BD40  0EFD               	movlw	-3
 30732  01BD42  50E3               	movf	plusw1,w,c
 30733  01BD44  0A80               	xorlw	128
 30734  01BD46  582A               	subwfb	btemp^0,w,c
 30735  01BD48  A0D8               	btfss	status,0,c
 30736  01BD4A  D7CF               	goto	l16125
 30737  01BD4C                     u15440:
 30738                           
 30739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 30740                           ;stkvar	_i @ sp[(-17)+15]
 30741  01BD4C  0EFE               	movlw	-2
 30742  01BD4E  6AE3               	clrf	plusw1,c
 30743  01BD50  0EFF               	movlw	-1
 30744  01BD52  6AE3               	clrf	plusw1,c
 30745                           
 30746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 30747  01BD54  D045               	goto	l16139
 30748  01BD56                     l16133:
 30749                           
 30750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 30751                           ;stkvar	_fp @ sp[(-17)+-2]
 30752  01BD56  0EED               	movlw	-19
 30753  01BD58  006F FF8F FFE6     	movff	plusw1,postinc1
 30754  01BD5E  006F FF8F FFE6     	movff	plusw1,postinc1
 30755                           
 30756                           ;stkvar	_cp @ sp[(-19)+11]
 30757  01BD64  0EF8               	movlw	-8
 30758  01BD66  006F FF8F FFF6     	movff	plusw1,tblptrl
 30759  01BD6C  0EF9               	movlw	-7
 30760  01BD6E  006F FF8F FFF7     	movff	plusw1,tblptrh
 30761  01BD74  0E00               	movlw	low (__mediumconst shr (0+16))
 30762  01BD76  6EF8               	movwf	tblptru,c
 30763  01BD78  0E1F               	movlw	(high __ramtop+-1)
 30764  01BD7A  64F7               	cpfsgt	tblptrh,c
 30765  01BD7C  D003               	bra	u15457
 30766  01BD7E  0008               	tblrd		*
 30767  01BD80  50F5               	movf	tablat,w,c
 30768  01BD82  D007               	bra	u15450
 30769  01BD84                     u15457:
 30770  01BD84  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30771  01BD8A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30772  01BD90  50EF               	movf	indf0,w,c
 30773  01BD92                     u15450:
 30774  01BD92  6EE6               	movwf	postinc1,c
 30775  01BD94  0E00               	movlw	0
 30776  01BD96  6EE6               	movwf	postinc1,c
 30777  01BD98  EC98  F0FC         	call	_fputc	;wreg free
 30778                           
 30779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 30780                           ;stkvar	_cp @ sp[(-17)+11]
 30781  01BD9C  0EFA               	movlw	-6
 30782  01BD9E  50E3               	movf	plusw1,w,c
 30783  01BDA0  0F01               	addlw	1
 30784  01BDA2  6E2A               	movwf	btemp^0,c
 30785  01BDA4  0EFA               	movlw	-6
 30786  01BDA6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30787  01BDAC  6A2A               	clrf	btemp^0,c
 30788  01BDAE  0EFB               	movlw	-5
 30789  01BDB0  50E3               	movf	plusw1,w,c
 30790  01BDB2  202A               	addwfc	btemp^0,w,c
 30791  01BDB4  6E2A               	movwf	btemp^0,c
 30792  01BDB6  0EFB               	movlw	-5
 30793  01BDB8  0060  F0AB  FFE3   	movff	btemp,plusw1
 30794                           
 30795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 30796                           ;stkvar	_i @ sp[(-17)+15]
 30797  01BDBE  0EFE               	movlw	-2
 30798  01BDC0  50E3               	movf	plusw1,w,c
 30799  01BDC2  0F01               	addlw	1
 30800  01BDC4  6E2A               	movwf	btemp^0,c
 30801  01BDC6  0EFE               	movlw	-2
 30802  01BDC8  0060  F0AB  FFE3   	movff	btemp,plusw1
 30803  01BDCE  6A2A               	clrf	btemp^0,c
 30804  01BDD0  0EFF               	movlw	-1
 30805  01BDD2  50E3               	movf	plusw1,w,c
 30806  01BDD4  202A               	addwfc	btemp^0,w,c
 30807  01BDD6  6E2A               	movwf	btemp^0,c
 30808  01BDD8  0EFF               	movlw	-1
 30809  01BDDA  0060  F0AB  FFE3   	movff	btemp,plusw1
 30810  01BDE0                     l16139:
 30811                           
 30812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 30813                           ;stkvar	_p @ sp[(-17)+9]
 30814                           ;stkvar	_i @ sp[(-17)+15]
 30815  01BDE0  50E1               	movf	fsr1l,w,c
 30816  01BDE2  0FFE               	addlw	-2
 30817  01BDE4  6ED9               	movwf	fsr2l,c
 30818  01BDE6  50E2               	movf	fsr1h,w,c
 30819  01BDE8  6EDA               	movwf	fsr2h,c
 30820  01BDEA  0EFF               	movlw	255
 30821  01BDEC  22DA               	addwfc	fsr2h,f,c
 30822  01BDEE  0EF8               	movlw	-8
 30823  01BDF0  50E3               	movf	plusw1,w,c
 30824  01BDF2  5CDE               	subwf	postinc2,w,c
 30825  01BDF4  50DE               	movf	postinc2,w,c
 30826  01BDF6  0A80               	xorlw	128
 30827  01BDF8  6E2A               	movwf	btemp^0,c
 30828  01BDFA  0EF9               	movlw	-7
 30829  01BDFC  50E3               	movf	plusw1,w,c
 30830  01BDFE  0A80               	xorlw	128
 30831  01BE00  582A               	subwfb	btemp^0,w,c
 30832  01BE02  A0D8               	btfss	status,0,c
 30833  01BE04  D7A8               	goto	l16133
 30834                           
 30835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 30836  01BE06  B04E               	btfsc	_flags^0,0,c
 30837  01BE08  D01F               	goto	l16147
 30838  01BE0A  D031               	goto	u15480
 30839  01BE0C                     l16143:
 30840                           
 30841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 30842                           ;stkvar	_fp @ sp[(-17)+-2]
 30843  01BE0C  0EED               	movlw	-19
 30844  01BE0E  006F FF8F FFE6     	movff	plusw1,postinc1
 30845  01BE14  006F FF8F FFE6     	movff	plusw1,postinc1
 30846  01BE1A  0E20               	movlw	32
 30847  01BE1C  6EE6               	movwf	postinc1,c
 30848  01BE1E  0E00               	movlw	0
 30849  01BE20  6EE6               	movwf	postinc1,c
 30850  01BE22  EC98  F0FC         	call	_fputc	;wreg free
 30851                           
 30852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 30853                           ;stkvar	_l @ sp[(-17)+7]
 30854  01BE26  0EF6               	movlw	-10
 30855  01BE28  50E3               	movf	plusw1,w,c
 30856  01BE2A  0F01               	addlw	1
 30857  01BE2C  6E2A               	movwf	btemp^0,c
 30858  01BE2E  0EF6               	movlw	-10
 30859  01BE30  0060  F0AB  FFE3   	movff	btemp,plusw1
 30860  01BE36  6A2A               	clrf	btemp^0,c
 30861  01BE38  0EF7               	movlw	-9
 30862  01BE3A  50E3               	movf	plusw1,w,c
 30863  01BE3C  202A               	addwfc	btemp^0,w,c
 30864  01BE3E  6E2A               	movwf	btemp^0,c
 30865  01BE40  0EF7               	movlw	-9
 30866  01BE42  0060  F0AB  FFE3   	movff	btemp,plusw1
 30867  01BE48                     l16147:
 30868                           
 30869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 30870                           ;stkvar	_w @ sp[(-17)+13]
 30871                           ;stkvar	_l @ sp[(-17)+7]
 30872  01BE48  50E1               	movf	fsr1l,w,c
 30873  01BE4A  0FF6               	addlw	-10
 30874  01BE4C  6ED9               	movwf	fsr2l,c
 30875  01BE4E  50E2               	movf	fsr1h,w,c
 30876  01BE50  6EDA               	movwf	fsr2h,c
 30877  01BE52  0EFF               	movlw	255
 30878  01BE54  22DA               	addwfc	fsr2h,f,c
 30879  01BE56  0EFC               	movlw	-4
 30880  01BE58  50E3               	movf	plusw1,w,c
 30881  01BE5A  5CDE               	subwf	postinc2,w,c
 30882  01BE5C  50DE               	movf	postinc2,w,c
 30883  01BE5E  0A80               	xorlw	128
 30884  01BE60  6E2A               	movwf	btemp^0,c
 30885  01BE62  0EFD               	movlw	-3
 30886  01BE64  50E3               	movf	plusw1,w,c
 30887  01BE66  0A80               	xorlw	128
 30888  01BE68  582A               	subwfb	btemp^0,w,c
 30889  01BE6A  A0D8               	btfss	status,0,c
 30890  01BE6C  D7CF               	goto	l16143
 30891  01BE6E                     u15480:
 30892                           
 30893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 30894                           ;stkvar	_l @ sp[(-17)+7]
 30895  01BE6E  0EF6               	movlw	-10
 30896  01BE70  006F FF8C  F02A    	movff	plusw1,btemp
 30897  01BE76  0EF7               	movlw	-9
 30898  01BE78  006F FF8C  F02B    	movff	plusw1,btemp+1
 30899                           
 30900                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 30901  01BE7E  0EEB               	movlw	235
 30902  01BE80  26E1               	addwf	fsr1l,f,c
 30903  01BE82  0EFF               	movlw	255
 30904  01BE84  22E2               	addwfc	fsr1h,f,c
 30905  01BE86  0012               	return		;funcret
 30906  01BE88                     __end_of_stoa:
 30907                           	opt callstack 0
 30908                           
 30909 ;; *************** function _efgtoa *****************
 30910 ;; Defined at:
 30911 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 30912 ;; Parameters:    Size  Location     Type
 30913 ;;  fp              2  [STACK] PTR struct _IO_FILE
 30914 ;;		 -> f(6), NULL(0), 
 30915 ;;  f               4  [STACK] PTR struct _IO_FILE
 30916 ;;  c               1  [STACK] unsigned char 
 30917 ;; Auto vars:     Size  Location     Type
 30918 ;;  u               4  [STACK] unsigned char 
 30919 ;;  g               4  [STACK] unsigned char 
 30920 ;;  l               4  [STACK] unsigned char 
 30921 ;;  h               4  [STACK] unsigned char 
 30922 ;;  ou              4  [STACK] unsigned char 
 30923 ;;  n               2  [STACK] int 
 30924 ;;  e               2  [STACK] int 
 30925 ;;  i               2  [STACK] int 
 30926 ;;  w               2  [STACK] int 
 30927 ;;  p               2  [STACK] int 
 30928 ;;  sign            2  [STACK] int 
 30929 ;;  d               2  [STACK] int 
 30930 ;;  ne              2  [STACK] int 
 30931 ;;  m               2  [STACK] int 
 30932 ;;  pp              2  [STACK] int 
 30933 ;;  t               2  [STACK] int 
 30934 ;;  mode            1  [STACK] unsigned char 
 30935 ;;  nmode           1  [STACK] unsigned char 
 30936 ;; Return value:  Size  Location     Type
 30937 ;;                  2  [STACK] int 
 30938 ;; Registers used:
 30939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 30940 ;; Tracked objects:
 30941 ;;		On entry : 0/0
 30942 ;;		On exit  : 0/0
 30943 ;;		Unchanged: 0/0
 30944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30949 ;;Total ram usage:        0 bytes
 30950 ;; Hardware stack levels used:    1
 30951 ;; Hardware stack levels required when called:   20
 30952 ;; This function calls:
 30953 ;;		___awdiv
 30954 ;;		___awmod
 30955 ;;		___fladd
 30956 ;;		___fldiv
 30957 ;;		___fleq
 30958 ;;		___flge
 30959 ;;		___flmul
 30960 ;;		___flneg
 30961 ;;		___flsub
 30962 ;;		___fltol
 30963 ;;		___fpclassifyf
 30964 ;;		_floorf
 30965 ;;		_isupper
 30966 ;;		_pad
 30967 ;;		_strcpy
 30968 ;;		_tolower
 30969 ;; This function is called by:
 30970 ;;		_vfpfcnvrt
 30971 ;; This function uses a reentrant model
 30972 ;;
 30973                           
 30974                           	psect	text105
 30975  011556                     __ptext105:
 30976                           	opt callstack 0
 30977  011556                     _efgtoa:
 30978                           	opt callstack 0
 30979                           
 30980                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30981  011556  0E38               	movlw	56
 30982  011558  26E1               	addwf	fsr1l,f,c
 30983  01155A  0E00               	movlw	0
 30984  01155C  22E2               	addwfc	fsr1h,f,c
 30985                           
 30986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 30987                           ;stkvar	_sign @ sp[(-56)+42]
 30988                           
 30989                           ;incstack = 0
 30990 ;; hardware stack exceeded
 30991  01155E  0EF2               	movlw	-14
 30992  011560  6AE3               	clrf	plusw1,c
 30993  011562  0EF3               	movlw	-13
 30994  011564  6AE3               	clrf	plusw1,c
 30995                           
 30996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 30997                           ;stkvar	_f @ sp[(-56)+-6]
 30998  011566  0EC2               	movlw	-62
 30999  011568  006F FF8C  F032    	movff	plusw1,btemp+8
 31000  01156E  0EC3               	movlw	-61
 31001  011570  006F FF8C  F033    	movff	plusw1,btemp+9
 31002  011576  0EC4               	movlw	-60
 31003  011578  006F FF8C  F034    	movff	plusw1,btemp+10
 31004  01157E  0EC5               	movlw	-59
 31005  011580  006F FF8C  F035    	movff	plusw1,btemp+11
 31006                           
 31007                           ;stkvar	_g @ sp[(-56)+16]
 31008  011586  0ED8               	movlw	-40
 31009  011588  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31010  01158E  0ED9               	movlw	-39
 31011  011590  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31012  011596  0EDA               	movlw	-38
 31013  011598  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31014  01159E  0EDB               	movlw	-37
 31015  0115A0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31016                           
 31017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 31018                           ;stkvar	_g @ sp[(-56)+16]
 31019  0115A6  0EDB               	movlw	-37
 31020  0115A8  AEE3               	btfss	plusw1,7,c
 31021  0115AA  D02B               	goto	l15807
 31022                           
 31023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 31024  0115AC  0E01               	movlw	1
 31025  0115AE  6E34               	movwf	(btemp+10)^0,c
 31026  0115B0  0E00               	movlw	0
 31027  0115B2  6E35               	movwf	(btemp+11)^0,c
 31028                           
 31029                           ;stkvar	_sign @ sp[(-56)+42]
 31030  0115B4  0EF2               	movlw	-14
 31031  0115B6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31032  0115BC  0EF3               	movlw	-13
 31033  0115BE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31034                           
 31035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 31036                           ;stkvar	_g @ sp[(-56)+16]
 31037  0115C4  0ED8               	movlw	-40
 31038  0115C6  006F FF8F FFE6     	movff	plusw1,postinc1
 31039  0115CC  006F FF8F FFE6     	movff	plusw1,postinc1
 31040  0115D2  006F FF8F FFE6     	movff	plusw1,postinc1
 31041  0115D8  006F FF8F FFE6     	movff	plusw1,postinc1
 31042  0115DE  ECAF  F010         	call	___flneg	;wreg free
 31043                           
 31044                           ;stkvar	_g @ sp[(-56)+16]
 31045  0115E2  0ED8               	movlw	-40
 31046  0115E4  0060  F0AB  FFE3   	movff	btemp,plusw1
 31047  0115EA  0ED9               	movlw	-39
 31048  0115EC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31049  0115F2  0EDA               	movlw	-38
 31050  0115F4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31051  0115FA  0EDB               	movlw	-37
 31052  0115FC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31053  011602                     l15807:
 31054                           
 31055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 31056                           ;stkvar	_n @ sp[(-56)+32]
 31057  011602  0EE8               	movlw	-24
 31058  011604  6AE3               	clrf	plusw1,c
 31059  011606  0EE9               	movlw	-23
 31060  011608  6AE3               	clrf	plusw1,c
 31061                           
 31062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 31063                           ;stkvar	_w @ sp[(-56)+38]
 31064  01160A  0EEE               	movlw	-18
 31065  01160C  0060  F12B  FFE3   	movff	_width,plusw1
 31066  011612  0EEF               	movlw	-17
 31067  011614  0060  F12F  FFE3   	movff	_width+1,plusw1
 31068                           
 31069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 31070                           ;stkvar	_sign @ sp[(-56)+42]
 31071  01161A  0EF2               	movlw	-14
 31072  01161C  006F FF8C  F02A    	movff	plusw1,btemp
 31073  011622  0EF3               	movlw	-13
 31074  011624  50E3               	movf	plusw1,w,c
 31075  011626  102A               	iorwf	btemp^0,w,c
 31076  011628  A4D8               	btfss	status,2,c
 31077  01162A  D002               	goto	u14890
 31078  01162C  A44E               	btfss	_flags^0,2,c
 31079  01162E  D036               	goto	l15827
 31080  011630                     u14890:
 31081                           
 31082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 31083                           ;stkvar	_sign @ sp[(-56)+42]
 31084  011630  0EF2               	movlw	-14
 31085  011632  006F FF8C  F02A    	movff	plusw1,btemp
 31086  011638  0EF3               	movlw	-13
 31087  01163A  50E3               	movf	plusw1,w,c
 31088  01163C  102A               	iorwf	btemp^0,w,c
 31089  01163E  A4D8               	btfss	status,2,c
 31090  011640  D002               	goto	l15819
 31091  011642  0E2B               	movlw	43
 31092  011644  D001               	goto	L32
 31093  011646                     l15819:
 31094  011646  0E2D               	movlw	45
 31095  011648                     L32:
 31096  011648  6E34               	movwf	(btemp+10)^0,c
 31097  01164A  0E00               	movlw	0
 31098  01164C  6E35               	movwf	(btemp+11)^0,c
 31099                           
 31100                           ;stkvar	_efgtoa$6637 @ sp[(-56)+10]
 31101  01164E  0ED2               	movlw	-46
 31102  011650  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31103  011656  0ED3               	movlw	-45
 31104  011658  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31105                           
 31106                           ;stkvar	_efgtoa$6637 @ sp[(-56)+10]
 31107  01165E  0ED2               	movlw	-46
 31108  011660  006F FF8C  F354    	movff	plusw1,_dbuf
 31109                           
 31110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 31111                           ;stkvar	_n @ sp[(-56)+32]
 31112  011666  0EE8               	movlw	-24
 31113  011668  50E3               	movf	plusw1,w,c
 31114  01166A  0F01               	addlw	1
 31115  01166C  6E2A               	movwf	btemp^0,c
 31116  01166E  0EE8               	movlw	-24
 31117  011670  0060  F0AB  FFE3   	movff	btemp,plusw1
 31118  011676  6A2A               	clrf	btemp^0,c
 31119  011678  0EE9               	movlw	-23
 31120  01167A  50E3               	movf	plusw1,w,c
 31121  01167C  202A               	addwfc	btemp^0,w,c
 31122  01167E  6E2A               	movwf	btemp^0,c
 31123  011680  0EE9               	movlw	-23
 31124  011682  0060  F0AB  FFE3   	movff	btemp,plusw1
 31125                           
 31126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 31127                           ;stkvar	_w @ sp[(-56)+38]
 31128  011688  50E1               	movf	fsr1l,w,c
 31129  01168A  0FEE               	addlw	-18
 31130  01168C  6ED9               	movwf	fsr2l,c
 31131  01168E  50E2               	movf	fsr1h,w,c
 31132  011690  6EDA               	movwf	fsr2h,c
 31133  011692  0EFF               	movlw	255
 31134  011694  22DA               	addwfc	fsr2h,f,c
 31135  011696  06DE               	decf	postinc2,f,c
 31136  011698  0E00               	movlw	0
 31137  01169A  5ADD               	subwfb	postdec2,f,c
 31138  01169C                     l15827:
 31139                           
 31140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 31141                           ;stkvar	_g @ sp[(-56)+16]
 31142  01169C  0ED8               	movlw	-40
 31143  01169E  006F FF8F FFE6     	movff	plusw1,postinc1
 31144  0116A4  006F FF8F FFE6     	movff	plusw1,postinc1
 31145  0116AA  006F FF8F FFE6     	movff	plusw1,postinc1
 31146  0116B0  006F FF8F FFE6     	movff	plusw1,postinc1
 31147  0116B6  ECA5  F0F0         	call	___fpclassifyf	;wreg free
 31148  0116BA  042A               	decf	btemp^0,w,c
 31149  0116BC  102B               	iorwf	(btemp+1)^0,w,c
 31150  0116BE  A4D8               	btfss	status,2,c
 31151  0116C0  D076               	goto	l15845
 31152  0116C2  0EBF               	movlw	191
 31153  0116C4  6E34               	movwf	(btemp+10)^0,c
 31154  0116C6  0EFF               	movlw	255
 31155  0116C8  6E35               	movwf	(btemp+11)^0,c
 31156                           
 31157                           ;stkvar	_c @ sp[(-56)+-7]
 31158  0116CA  0EC1               	movlw	-63
 31159  0116CC  50E3               	movf	plusw1,w,c
 31160  0116CE  6E32               	movwf	(btemp+8)^0,c
 31161  0116D0  6A33               	clrf	(btemp+9)^0,c
 31162  0116D2  5034               	movf	(btemp+10)^0,w,c
 31163  0116D4  2632               	addwf	(btemp+8)^0,f,c
 31164  0116D6  5035               	movf	(btemp+11)^0,w,c
 31165  0116D8  2233               	addwfc	(btemp+9)^0,f,c
 31166  0116DA  5033               	movf	(btemp+9)^0,w,c
 31167  0116DC  E106               	bnz	u14920
 31168  0116DE  0E1A               	movlw	26
 31169  0116E0  5C32               	subwf	(btemp+8)^0,w,c
 31170  0116E2  B0D8               	btfsc	status,0,c
 31171  0116E4  D002               	goto	u14920
 31172  0116E6  0E01               	movlw	1
 31173  0116E8  D001               	goto	u14930
 31174  0116EA                     u14920:
 31175  0116EA  0E00               	movlw	0
 31176  0116EC                     u14930:
 31177  0116EC  6E34               	movwf	(btemp+10)^0,c
 31178  0116EE  6A35               	clrf	(btemp+11)^0,c
 31179                           
 31180                           ;stkvar	_efgtoa$6638 @ sp[(-56)+8]
 31181  0116F0  0ED0               	movlw	-48
 31182  0116F2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31183  0116F8  0ED1               	movlw	-47
 31184  0116FA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31185                           
 31186                           ;stkvar	_efgtoa$6638 @ sp[(-56)+8]
 31187  011700  0ED0               	movlw	-48
 31188  011702  006F FF8C  F02A    	movff	plusw1,btemp
 31189  011708  0ED1               	movlw	-47
 31190  01170A  50E3               	movf	plusw1,w,c
 31191  01170C  102A               	iorwf	btemp^0,w,c
 31192  01170E  B4D8               	btfsc	status,2,c
 31193  011710  D017               	goto	l15837
 31194                           
 31195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 31196  011712  0EDA               	movlw	low STR_104
 31197  011714  6EE6               	movwf	postinc1,c
 31198  011716  0EFF               	movlw	high STR_104
 31199  011718  6EE6               	movwf	postinc1,c
 31200                           
 31201                           ;stkvar	_n @ sp[(-58)+32]
 31202  01171A  0E54               	movlw	low _dbuf
 31203  01171C  6E34               	movwf	(btemp+10)^0,c
 31204  01171E  0E03               	movlw	high _dbuf
 31205  011720  6E35               	movwf	(btemp+11)^0,c
 31206  011722  0EE6               	movlw	-26
 31207  011724  50E3               	movf	plusw1,w,c
 31208  011726  2634               	addwf	(btemp+10)^0,f,c
 31209  011728  0EE7               	movlw	-25
 31210  01172A  50E3               	movf	plusw1,w,c
 31211  01172C  2235               	addwfc	(btemp+11)^0,f,c
 31212  01172E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31213  011734  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31214  01173A  EC9C  F003         	call	_strcpy	;wreg free
 31215                           
 31216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 31217  01173E  D016               	goto	l15839
 31218  011740                     l15837:
 31219                           
 31220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 31221  011740  0EE2               	movlw	low STR_105
 31222  011742  6EE6               	movwf	postinc1,c
 31223  011744  0EFF               	movlw	high STR_105
 31224  011746  6EE6               	movwf	postinc1,c
 31225                           
 31226                           ;stkvar	_n @ sp[(-58)+32]
 31227  011748  0E54               	movlw	low _dbuf
 31228  01174A  6E34               	movwf	(btemp+10)^0,c
 31229  01174C  0E03               	movlw	high _dbuf
 31230  01174E  6E35               	movwf	(btemp+11)^0,c
 31231  011750  0EE6               	movlw	-26
 31232  011752  50E3               	movf	plusw1,w,c
 31233  011754  2634               	addwf	(btemp+10)^0,f,c
 31234  011756  0EE7               	movlw	-25
 31235  011758  50E3               	movf	plusw1,w,c
 31236  01175A  2235               	addwfc	(btemp+11)^0,f,c
 31237  01175C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31238  011762  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31239  011768  EC9C  F003         	call	_strcpy	;wreg free
 31240  01176C                     l15839:
 31241                           
 31242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 31243                           ;stkvar	_w @ sp[(-56)+38]
 31244  01176C  50E1               	movf	fsr1l,w,c
 31245  01176E  0FEE               	addlw	-18
 31246  011770  6ED9               	movwf	fsr2l,c
 31247  011772  50E2               	movf	fsr1h,w,c
 31248  011774  6EDA               	movwf	fsr2h,c
 31249  011776  0EFF               	movlw	255
 31250  011778  22DA               	addwfc	fsr2h,f,c
 31251  01177A  0EFD               	movlw	253
 31252  01177C  26DE               	addwf	postinc2,f,c
 31253  01177E  0EFF               	movlw	255
 31254  011780  22DD               	addwfc	postdec2,f,c
 31255  011782                     l15841:
 31256                           
 31257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 31258                           ;stkvar	_w @ sp[(-56)+38]
 31259  011782  0EEE               	movlw	-18
 31260  011784  006F FF8F FFE6     	movff	plusw1,postinc1
 31261  01178A  006F FF8F FFE6     	movff	plusw1,postinc1
 31262  011790  0E54               	movlw	low _dbuf
 31263  011792  6EE6               	movwf	postinc1,c
 31264  011794  0E03               	movlw	high _dbuf
 31265  011796  6EE6               	movwf	postinc1,c
 31266                           
 31267                           ;stkvar	_fp @ sp[(-60)+-2]
 31268  011798  0EC2               	movlw	-62
 31269  01179A  006F FF8F FFE6     	movff	plusw1,postinc1
 31270  0117A0  006F FF8F FFE6     	movff	plusw1,postinc1
 31271  0117A6  ECCF  F0FE         	call	_pad	;wreg free
 31272  0117AA  EFC8  F093         	goto	l2532
 31273  0117AE                     l15845:
 31274                           
 31275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 31276                           ;stkvar	_g @ sp[(-56)+16]
 31277  0117AE  0ED8               	movlw	-40
 31278  0117B0  006F FF8F FFE6     	movff	plusw1,postinc1
 31279  0117B6  006F FF8F FFE6     	movff	plusw1,postinc1
 31280  0117BC  006F FF8F FFE6     	movff	plusw1,postinc1
 31281  0117C2  006F FF8F FFE6     	movff	plusw1,postinc1
 31282  0117C8  ECA5  F0F0         	call	___fpclassifyf	;wreg free
 31283  0117CC  502A               	movf	btemp^0,w,c
 31284  0117CE  102B               	iorwf	(btemp+1)^0,w,c
 31285  0117D0  A4D8               	btfss	status,2,c
 31286  0117D2  D056               	goto	l15863
 31287  0117D4  0EBF               	movlw	191
 31288  0117D6  6E34               	movwf	(btemp+10)^0,c
 31289  0117D8  0EFF               	movlw	255
 31290  0117DA  6E35               	movwf	(btemp+11)^0,c
 31291                           
 31292                           ;stkvar	_c @ sp[(-56)+-7]
 31293  0117DC  0EC1               	movlw	-63
 31294  0117DE  50E3               	movf	plusw1,w,c
 31295  0117E0  6E32               	movwf	(btemp+8)^0,c
 31296  0117E2  6A33               	clrf	(btemp+9)^0,c
 31297  0117E4  5034               	movf	(btemp+10)^0,w,c
 31298  0117E6  2632               	addwf	(btemp+8)^0,f,c
 31299  0117E8  5035               	movf	(btemp+11)^0,w,c
 31300  0117EA  2233               	addwfc	(btemp+9)^0,f,c
 31301  0117EC  5033               	movf	(btemp+9)^0,w,c
 31302  0117EE  E106               	bnz	u14960
 31303  0117F0  0E1A               	movlw	26
 31304  0117F2  5C32               	subwf	(btemp+8)^0,w,c
 31305  0117F4  B0D8               	btfsc	status,0,c
 31306  0117F6  D002               	goto	u14960
 31307  0117F8  0E01               	movlw	1
 31308  0117FA  D001               	goto	u14970
 31309  0117FC                     u14960:
 31310  0117FC  0E00               	movlw	0
 31311  0117FE                     u14970:
 31312  0117FE  6E34               	movwf	(btemp+10)^0,c
 31313  011800  6A35               	clrf	(btemp+11)^0,c
 31314                           
 31315                           ;stkvar	_efgtoa$6642 @ sp[(-56)+6]
 31316  011802  0ECE               	movlw	-50
 31317  011804  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31318  01180A  0ECF               	movlw	-49
 31319  01180C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31320                           
 31321                           ;stkvar	_efgtoa$6642 @ sp[(-56)+6]
 31322  011812  0ECE               	movlw	-50
 31323  011814  006F FF8C  F02A    	movff	plusw1,btemp
 31324  01181A  0ECF               	movlw	-49
 31325  01181C  50E3               	movf	plusw1,w,c
 31326  01181E  102A               	iorwf	btemp^0,w,c
 31327  011820  B4D8               	btfsc	status,2,c
 31328  011822  D017               	goto	l15855
 31329                           
 31330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 31331  011824  0EDE               	movlw	low STR_108
 31332  011826  6EE6               	movwf	postinc1,c
 31333  011828  0EFF               	movlw	high STR_108
 31334  01182A  6EE6               	movwf	postinc1,c
 31335                           
 31336                           ;stkvar	_n @ sp[(-58)+32]
 31337  01182C  0E54               	movlw	low _dbuf
 31338  01182E  6E34               	movwf	(btemp+10)^0,c
 31339  011830  0E03               	movlw	high _dbuf
 31340  011832  6E35               	movwf	(btemp+11)^0,c
 31341  011834  0EE6               	movlw	-26
 31342  011836  50E3               	movf	plusw1,w,c
 31343  011838  2634               	addwf	(btemp+10)^0,f,c
 31344  01183A  0EE7               	movlw	-25
 31345  01183C  50E3               	movf	plusw1,w,c
 31346  01183E  2235               	addwfc	(btemp+11)^0,f,c
 31347  011840  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31348  011846  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31349  01184C  EC9C  F003         	call	_strcpy	;wreg free
 31350                           
 31351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 31352  011850  D78D               	goto	l15839
 31353  011852                     l15855:
 31354                           
 31355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 31356  011852  0EE6               	movlw	low STR_109
 31357  011854  6EE6               	movwf	postinc1,c
 31358  011856  0EFF               	movlw	high STR_109
 31359  011858  6EE6               	movwf	postinc1,c
 31360                           
 31361                           ;stkvar	_n @ sp[(-58)+32]
 31362  01185A  0E54               	movlw	low _dbuf
 31363  01185C  6E34               	movwf	(btemp+10)^0,c
 31364  01185E  0E03               	movlw	high _dbuf
 31365  011860  6E35               	movwf	(btemp+11)^0,c
 31366  011862  0EE6               	movlw	-26
 31367  011864  50E3               	movf	plusw1,w,c
 31368  011866  2634               	addwf	(btemp+10)^0,f,c
 31369  011868  0EE7               	movlw	-25
 31370  01186A  50E3               	movf	plusw1,w,c
 31371  01186C  2235               	addwfc	(btemp+11)^0,f,c
 31372  01186E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31373  011874  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31374  01187A  EC9C  F003         	call	_strcpy	;wreg free
 31375  01187E  D776               	goto	l15839
 31376  011880                     l15863:
 31377                           
 31378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 31379  011880  0E00               	movlw	0
 31380  011882  6E32               	movwf	(btemp+8)^0,c
 31381  011884  0E00               	movlw	0
 31382  011886  6E33               	movwf	(btemp+9)^0,c
 31383  011888  0E80               	movlw	128
 31384  01188A  6E34               	movwf	(btemp+10)^0,c
 31385  01188C  0E3F               	movlw	63
 31386  01188E  6E35               	movwf	(btemp+11)^0,c
 31387                           
 31388                           ;stkvar	_u @ sp[(-56)+12]
 31389  011890  0ED4               	movlw	-44
 31390  011892  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31391  011898  0ED5               	movlw	-43
 31392  01189A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31393  0118A0  0ED6               	movlw	-42
 31394  0118A2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31395  0118A8  0ED7               	movlw	-41
 31396  0118AA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31397                           
 31398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 31399                           ;stkvar	_e @ sp[(-56)+34]
 31400  0118B0  0EEA               	movlw	-22
 31401  0118B2  6AE3               	clrf	plusw1,c
 31402  0118B4  0EEB               	movlw	-21
 31403  0118B6  6AE3               	clrf	plusw1,c
 31404                           
 31405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 31406  0118B8  0E00               	movlw	0
 31407  0118BA  6EE6               	movwf	postinc1,c
 31408  0118BC  0E00               	movlw	0
 31409  0118BE  6EE6               	movwf	postinc1,c
 31410  0118C0  0E00               	movlw	0
 31411  0118C2  6EE6               	movwf	postinc1,c
 31412  0118C4  0E00               	movlw	0
 31413  0118C6  6EE6               	movwf	postinc1,c
 31414                           
 31415                           ;stkvar	_g @ sp[(-60)+16]
 31416  0118C8  0ED4               	movlw	-44
 31417  0118CA  006F FF8F FFE6     	movff	plusw1,postinc1
 31418  0118D0  006F FF8F FFE6     	movff	plusw1,postinc1
 31419  0118D6  006F FF8F FFE6     	movff	plusw1,postinc1
 31420  0118DC  006F FF8F FFE6     	movff	plusw1,postinc1
 31421  0118E2  EC6D  F004         	call	___fleq	;wreg free
 31422  0118E6  A02A               	btfss	btemp& (0+255),0,c
 31423  0118E8  D039               	goto	l15875
 31424  0118EA  D0BC               	goto	u15010
 31425  0118EC                     l15871:
 31426                           
 31427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 31428  0118EC  0E00               	movlw	0
 31429  0118EE  6EE6               	movwf	postinc1,c
 31430  0118F0  0E00               	movlw	0
 31431  0118F2  6EE6               	movwf	postinc1,c
 31432  0118F4  0E20               	movlw	32
 31433  0118F6  6EE6               	movwf	postinc1,c
 31434  0118F8  0E41               	movlw	65
 31435  0118FA  6EE6               	movwf	postinc1,c
 31436                           
 31437                           ;stkvar	_u @ sp[(-60)+12]
 31438  0118FC  0ED0               	movlw	-48
 31439  0118FE  006F FF8F FFE6     	movff	plusw1,postinc1
 31440  011904  006F FF8F FFE6     	movff	plusw1,postinc1
 31441  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
 31442  011910  006F FF8F FFE6     	movff	plusw1,postinc1
 31443  011916  EC27  F0B8         	call	___flmul	;wreg free
 31444                           
 31445                           ;stkvar	_u @ sp[(-56)+12]
 31446  01191A  0ED4               	movlw	-44
 31447  01191C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31448  011922  0ED5               	movlw	-43
 31449  011924  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31450  01192A  0ED6               	movlw	-42
 31451  01192C  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31452  011932  0ED7               	movlw	-41
 31453  011934  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31454                           
 31455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 31456                           ;stkvar	_e @ sp[(-56)+34]
 31457  01193A  0EEA               	movlw	-22
 31458  01193C  50E3               	movf	plusw1,w,c
 31459  01193E  0F01               	addlw	1
 31460  011940  6E2A               	movwf	btemp^0,c
 31461  011942  0EEA               	movlw	-22
 31462  011944  0060  F0AB  FFE3   	movff	btemp,plusw1
 31463  01194A  6A2A               	clrf	btemp^0,c
 31464  01194C  0EEB               	movlw	-21
 31465  01194E  50E3               	movf	plusw1,w,c
 31466  011950  202A               	addwfc	btemp^0,w,c
 31467  011952  6E2A               	movwf	btemp^0,c
 31468  011954  0EEB               	movlw	-21
 31469  011956  0060  F0AB  FFE3   	movff	btemp,plusw1
 31470  01195C                     l15875:
 31471                           
 31472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 31473  01195C  0E00               	movlw	0
 31474  01195E  6EE6               	movwf	postinc1,c
 31475  011960  0E00               	movlw	0
 31476  011962  6EE6               	movwf	postinc1,c
 31477  011964  0E20               	movlw	32
 31478  011966  6EE6               	movwf	postinc1,c
 31479  011968  0E41               	movlw	65
 31480  01196A  6EE6               	movwf	postinc1,c
 31481                           
 31482                           ;stkvar	_u @ sp[(-60)+12]
 31483  01196C  0ED0               	movlw	-48
 31484  01196E  006F FF8F FFE6     	movff	plusw1,postinc1
 31485  011974  006F FF8F FFE6     	movff	plusw1,postinc1
 31486  01197A  006F FF8F FFE6     	movff	plusw1,postinc1
 31487  011980  006F FF8F FFE6     	movff	plusw1,postinc1
 31488  011986  EC27  F0B8         	call	___flmul	;wreg free
 31489  01198A  0060  F0AB  FFE6   	movff	btemp,postinc1
 31490  011990  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31491  011996  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31492  01199C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31493                           
 31494                           ;stkvar	_g @ sp[(-60)+16]
 31495  0119A2  0ED4               	movlw	-44
 31496  0119A4  006F FF8F FFE6     	movff	plusw1,postinc1
 31497  0119AA  006F FF8F FFE6     	movff	plusw1,postinc1
 31498  0119B0  006F FF8F FFE6     	movff	plusw1,postinc1
 31499  0119B6  006F FF8F FFE6     	movff	plusw1,postinc1
 31500  0119BC  ECA9  F0F6         	call	___flge	;wreg free
 31501  0119C0  A02A               	btfss	btemp& (0+255),0,c
 31502  0119C2  D032               	goto	l15881
 31503  0119C4  D793               	goto	l15871
 31504  0119C6                     l15877:
 31505                           
 31506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 31507  0119C6  0E00               	movlw	0
 31508  0119C8  6EE6               	movwf	postinc1,c
 31509  0119CA  0E00               	movlw	0
 31510  0119CC  6EE6               	movwf	postinc1,c
 31511  0119CE  0E20               	movlw	32
 31512  0119D0  6EE6               	movwf	postinc1,c
 31513  0119D2  0E41               	movlw	65
 31514  0119D4  6EE6               	movwf	postinc1,c
 31515                           
 31516                           ;stkvar	_u @ sp[(-60)+12]
 31517  0119D6  0ED0               	movlw	-48
 31518  0119D8  006F FF8F FFE6     	movff	plusw1,postinc1
 31519  0119DE  006F FF8F FFE6     	movff	plusw1,postinc1
 31520  0119E4  006F FF8F FFE6     	movff	plusw1,postinc1
 31521  0119EA  006F FF8F FFE6     	movff	plusw1,postinc1
 31522  0119F0  EC78  F0C3         	call	___fldiv	;wreg free
 31523                           
 31524                           ;stkvar	_u @ sp[(-56)+12]
 31525  0119F4  0ED4               	movlw	-44
 31526  0119F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 31527  0119FC  0ED5               	movlw	-43
 31528  0119FE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31529  011A04  0ED6               	movlw	-42
 31530  011A06  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31531  011A0C  0ED7               	movlw	-41
 31532  011A0E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31533                           
 31534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 31535                           ;stkvar	_e @ sp[(-56)+34]
 31536  011A14  50E1               	movf	fsr1l,w,c
 31537  011A16  0FEA               	addlw	-22
 31538  011A18  6ED9               	movwf	fsr2l,c
 31539  011A1A  50E2               	movf	fsr1h,w,c
 31540  011A1C  6EDA               	movwf	fsr2h,c
 31541  011A1E  0EFF               	movlw	255
 31542  011A20  22DA               	addwfc	fsr2h,f,c
 31543  011A22  06DE               	decf	postinc2,f,c
 31544  011A24  0E00               	movlw	0
 31545  011A26  5ADD               	subwfb	postdec2,f,c
 31546  011A28                     l15881:
 31547                           
 31548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 31549                           ;stkvar	_u @ sp[(-56)+12]
 31550  011A28  0ED4               	movlw	-44
 31551  011A2A  006F FF8F FFE6     	movff	plusw1,postinc1
 31552  011A30  006F FF8F FFE6     	movff	plusw1,postinc1
 31553  011A36  006F FF8F FFE6     	movff	plusw1,postinc1
 31554  011A3C  006F FF8F FFE6     	movff	plusw1,postinc1
 31555                           
 31556                           ;stkvar	_g @ sp[(-60)+16]
 31557  011A42  0ED4               	movlw	-44
 31558  011A44  006F FF8F FFE6     	movff	plusw1,postinc1
 31559  011A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 31560  011A50  006F FF8F FFE6     	movff	plusw1,postinc1
 31561  011A56  006F FF8F FFE6     	movff	plusw1,postinc1
 31562  011A5C  ECA9  F0F6         	call	___flge	;wreg free
 31563  011A60  A02A               	btfss	btemp& (0+255),0,c
 31564  011A62  D7B1               	goto	l15877
 31565  011A64                     u15010:
 31566                           
 31567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 31568                           ;stkvar	_c @ sp[(-56)+-7]
 31569  011A64  0EC1               	movlw	-63
 31570  011A66  50E3               	movf	plusw1,w,c
 31571  011A68  6EE6               	movwf	postinc1,c
 31572  011A6A  0E00               	movlw	0
 31573  011A6C  6EE6               	movwf	postinc1,c
 31574  011A6E  EC24  F00B         	call	_tolower	;wreg free
 31575                           
 31576                           ;stkvar	_mode @ sp[(-56)+54]
 31577  011A72  0EFE               	movlw	-2
 31578  011A74  0060  F0AB  FFE3   	movff	btemp,plusw1
 31579                           
 31580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 31581                           ;stkvar	_mode @ sp[(-56)+54]
 31582                           ;stkvar	_nmode @ sp[(-56)+55]
 31583  011A7A  0EFE               	movlw	-2
 31584  011A7C  006F FF8C  F02A    	movff	plusw1,btemp
 31585  011A82  0EFF               	movlw	-1
 31586  011A84  0060  F0AB  FFE3   	movff	btemp,plusw1
 31587                           
 31588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 31589                           ;stkvar	_mode @ sp[(-56)+54]
 31590  011A8A  0EFE               	movlw	-2
 31591  011A8C  006F FF8C  F02A    	movff	plusw1,btemp
 31592  011A92  0E67               	movlw	103
 31593  011A94  182A               	xorwf	btemp^0,w,c
 31594  011A96  A4D8               	btfss	status,2,c
 31595  011A98  D025               	goto	l15899
 31596                           
 31597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 31598  011A9A  504C               	movf	_prec^0,w,c
 31599  011A9C  104D               	iorwf	(_prec+1)^0,w,c
 31600  011A9E  A4D8               	btfss	status,2,c
 31601  011AA0  D004               	goto	l15893
 31602                           
 31603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 31604  011AA2  0E00               	movlw	0
 31605  011AA4  6E4D               	movwf	(_prec+1)^0,c
 31606  011AA6  0E01               	movlw	1
 31607  011AA8  6E4C               	movwf	_prec^0,c
 31608  011AAA                     l15893:
 31609                           
 31610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 31611  011AAA  BE4D               	btfsc	(_prec+1)^0,7,c
 31612  011AAC  D005               	goto	u15040
 31613  011AAE  504D               	movf	(_prec+1)^0,w,c
 31614  011AB0  E110               	bnz	l15897
 31615  011AB2  044C               	decf	_prec^0,w,c
 31616  011AB4  B0D8               	btfsc	status,0,c
 31617  011AB6  D00D               	goto	l15897
 31618  011AB8                     u15040:
 31619  011AB8  0E06               	movlw	6
 31620  011ABA  6E34               	movwf	(btemp+10)^0,c
 31621  011ABC  0E00               	movlw	0
 31622  011ABE  6E35               	movwf	(btemp+11)^0,c
 31623                           
 31624                           ;stkvar	_p @ sp[(-56)+40]
 31625  011AC0  0EF0               	movlw	-16
 31626  011AC2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31627  011AC8  0EF1               	movlw	-15
 31628  011ACA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31629  011AD0  D00C               	goto	l15905
 31630  011AD2                     l15897:
 31631                           
 31632                           ;stkvar	_p @ sp[(-56)+40]
 31633  011AD2  0EF0               	movlw	-16
 31634  011AD4  0060  F133  FFE3   	movff	_prec,plusw1
 31635  011ADA  0EF1               	movlw	-15
 31636  011ADC  0060  F137  FFE3   	movff	_prec+1,plusw1
 31637  011AE2  D003               	goto	l15905
 31638  011AE4                     l15899:
 31639                           
 31640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 31641  011AE4  AE4D               	btfss	(_prec+1)^0,7,c
 31642  011AE6  D7F5               	goto	l15897
 31643  011AE8  D7E7               	goto	u15040
 31644  011AEA                     l15905:
 31645                           
 31646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 31647                           ;stkvar	_mode @ sp[(-56)+54]
 31648  011AEA  0EFE               	movlw	-2
 31649  011AEC  006F FF8C  F02A    	movff	plusw1,btemp
 31650  011AF2  0E67               	movlw	103
 31651  011AF4  182A               	xorwf	btemp^0,w,c
 31652  011AF6  A4D8               	btfss	status,2,c
 31653  011AF8  D02F               	goto	l15915
 31654                           
 31655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 31656                           ;stkvar	_e @ sp[(-56)+34]
 31657  011AFA  0EEB               	movlw	-21
 31658  011AFC  AEE3               	btfss	plusw1,7,c
 31659  011AFE  D00E               	goto	u15070
 31660  011B00  0EEA               	movlw	-22
 31661  011B02  006F FF8C  F02A    	movff	plusw1,btemp
 31662  011B08  0EFC               	movlw	252
 31663  011B0A  5E2A               	subwf	btemp^0,f,c
 31664  011B0C  0EEB               	movlw	-21
 31665  011B0E  006F FF8C  F02A    	movff	plusw1,btemp
 31666  011B14  0EFF               	movlw	255
 31667  011B16  5A2A               	subwfb	btemp^0,f,c
 31668  011B18  A0D8               	btfss	status,0,c
 31669  011B1A  D018               	goto	l15913
 31670  011B1C                     u15070:
 31671                           
 31672                           ;stkvar	_e @ sp[(-56)+34]
 31673                           ;stkvar	_p @ sp[(-56)+40]
 31674  011B1C  0EF0               	movlw	-16
 31675  011B1E  50E3               	movf	plusw1,w,c
 31676  011B20  0FFF               	addlw	255
 31677  011B22  6E34               	movwf	(btemp+10)^0,c
 31678  011B24  0EF1               	movlw	-15
 31679  011B26  006F FF8C  F035    	movff	plusw1,btemp+11
 31680  011B2C  0EFF               	movlw	255
 31681  011B2E  2235               	addwfc	(btemp+11)^0,f,c
 31682  011B30  0EEA               	movlw	-22
 31683  011B32  50E3               	movf	plusw1,w,c
 31684  011B34  5C34               	subwf	(btemp+10)^0,w,c
 31685  011B36  5035               	movf	(btemp+11)^0,w,c
 31686  011B38  0A80               	xorlw	128
 31687  011B3A  6E2A               	movwf	btemp^0,c
 31688  011B3C  0EEB               	movlw	-21
 31689  011B3E  50E3               	movf	plusw1,w,c
 31690  011B40  0A80               	xorlw	128
 31691  011B42  582A               	subwfb	btemp^0,w,c
 31692  011B44  A0D8               	btfss	status,0,c
 31693  011B46  D002               	goto	l15913
 31694                           
 31695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 31696  011B48  0E66               	movlw	102
 31697  011B4A  D001               	goto	L33
 31698  011B4C                     l15913:
 31699                           
 31700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 31701  011B4C  0E65               	movlw	101
 31702  011B4E                     L33:
 31703  011B4E  6E35               	movwf	(btemp+11)^0,c
 31704                           
 31705                           ;stkvar	_nmode @ sp[(-56)+55]
 31706  011B50  0EFF               	movlw	-1
 31707  011B52  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31708  011B58                     l15915:
 31709                           
 31710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 31711                           ;stkvar	_p @ sp[(-56)+40]
 31712                           ;stkvar	_m @ sp[(-56)+48]
 31713  011B58  0EF0               	movlw	-16
 31714  011B5A  006F FF8C  F02A    	movff	plusw1,btemp
 31715  011B60  0EF8               	movlw	-8
 31716  011B62  0060  F0AB  FFE3   	movff	btemp,plusw1
 31717  011B68  0EF1               	movlw	-15
 31718  011B6A  006F FF8C  F02A    	movff	plusw1,btemp
 31719  011B70  0EF9               	movlw	-7
 31720  011B72  0060  F0AB  FFE3   	movff	btemp,plusw1
 31721                           
 31722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 31723                           ;stkvar	_mode @ sp[(-56)+54]
 31724  011B78  0EFE               	movlw	-2
 31725  011B7A  006F FF8C  F02A    	movff	plusw1,btemp
 31726  011B80  0E67               	movlw	103
 31727  011B82  182A               	xorwf	btemp^0,w,c
 31728  011B84  A4D8               	btfss	status,2,c
 31729  011B86  D00B               	goto	u15110
 31730                           
 31731                           ;stkvar	_nmode @ sp[(-56)+55]
 31732  011B88  0EFF               	movlw	-1
 31733  011B8A  006F FF8C  F02A    	movff	plusw1,btemp
 31734  011B90  0E66               	movlw	102
 31735  011B92  182A               	xorwf	btemp^0,w,c
 31736  011B94  A4D8               	btfss	status,2,c
 31737  011B96  D014               	goto	l2561
 31738                           
 31739                           ;stkvar	_e @ sp[(-56)+34]
 31740  011B98  0EEB               	movlw	-21
 31741  011B9A  AEE3               	btfss	plusw1,7,c
 31742  011B9C  D011               	goto	l2561
 31743  011B9E                     u15110:
 31744                           
 31745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 31746                           ;stkvar	_m @ sp[(-56)+48]
 31747  011B9E  0EF8               	movlw	-8
 31748  011BA0  50E3               	movf	plusw1,w,c
 31749  011BA2  0F01               	addlw	1
 31750  011BA4  6E2A               	movwf	btemp^0,c
 31751  011BA6  0EF8               	movlw	-8
 31752  011BA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 31753  011BAE  6A2A               	clrf	btemp^0,c
 31754  011BB0  0EF9               	movlw	-7
 31755  011BB2  50E3               	movf	plusw1,w,c
 31756  011BB4  202A               	addwfc	btemp^0,w,c
 31757  011BB6  6E2A               	movwf	btemp^0,c
 31758  011BB8  0EF9               	movlw	-7
 31759  011BBA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31760  011BC0                     l2561:
 31761                           
 31762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 31763                           ;stkvar	_nmode @ sp[(-56)+55]
 31764  011BC0  0EFF               	movlw	-1
 31765  011BC2  006F FF8C  F02A    	movff	plusw1,btemp
 31766  011BC8  0E66               	movlw	102
 31767  011BCA  182A               	xorwf	btemp^0,w,c
 31768  011BCC  A4D8               	btfss	status,2,c
 31769  011BCE  D03B               	goto	l15935
 31770                           
 31771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 31772                           ;stkvar	_e @ sp[(-56)+34]
 31773  011BD0  0EEB               	movlw	-21
 31774  011BD2  AEE3               	btfss	plusw1,7,c
 31775  011BD4  D01C               	goto	l15931
 31776                           
 31777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 31778  011BD6  0E00               	movlw	0
 31779  011BD8  6E32               	movwf	(btemp+8)^0,c
 31780  011BDA  0E00               	movlw	0
 31781  011BDC  6E33               	movwf	(btemp+9)^0,c
 31782  011BDE  0E80               	movlw	128
 31783  011BE0  6E34               	movwf	(btemp+10)^0,c
 31784  011BE2  0E3F               	movlw	63
 31785  011BE4  6E35               	movwf	(btemp+11)^0,c
 31786                           
 31787                           ;stkvar	_u @ sp[(-56)+12]
 31788  011BE6  0ED4               	movlw	-44
 31789  011BE8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31790  011BEE  0ED5               	movlw	-43
 31791  011BF0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31792  011BF6  0ED6               	movlw	-42
 31793  011BF8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31794  011BFE  0ED7               	movlw	-41
 31795  011C00  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31796                           
 31797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 31798                           ;stkvar	_e @ sp[(-56)+34]
 31799  011C06  0EEA               	movlw	-22
 31800  011C08  6AE3               	clrf	plusw1,c
 31801  011C0A  0EEB               	movlw	-21
 31802  011C0C  6AE3               	clrf	plusw1,c
 31803  011C0E                     l15931:
 31804                           
 31805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 31806                           ;stkvar	_mode @ sp[(-56)+54]
 31807  011C0E  0EFE               	movlw	-2
 31808  011C10  006F FF8C  F02A    	movff	plusw1,btemp
 31809  011C16  0E67               	movlw	103
 31810  011C18  182A               	xorwf	btemp^0,w,c
 31811  011C1A  B4D8               	btfsc	status,2,c
 31812  011C1C  D014               	goto	l15935
 31813                           
 31814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 31815                           ;stkvar	_e @ sp[(-56)+34]
 31816                           ;stkvar	_m @ sp[(-56)+48]
 31817  011C1E  0EF8               	movlw	-8
 31818  011C20  50E3               	movf	plusw1,w,c
 31819  011C22  6E2A               	movwf	btemp^0,c
 31820  011C24  0EEA               	movlw	-22
 31821  011C26  50E3               	movf	plusw1,w,c
 31822  011C28  262A               	addwf	btemp^0,f,c
 31823  011C2A  0EF8               	movlw	-8
 31824  011C2C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31825  011C32  0EF9               	movlw	-7
 31826  011C34  50E3               	movf	plusw1,w,c
 31827  011C36  6E2A               	movwf	btemp^0,c
 31828  011C38  0EEB               	movlw	-21
 31829  011C3A  50E3               	movf	plusw1,w,c
 31830  011C3C  222A               	addwfc	btemp^0,f,c
 31831  011C3E  0EF9               	movlw	-7
 31832  011C40  0060  F0AB  FFE3   	movff	btemp,plusw1
 31833  011C46                     l15935:
 31834                           
 31835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 31836                           ;stkvar	_i @ sp[(-56)+36]
 31837  011C46  0EEC               	movlw	-20
 31838  011C48  6AE3               	clrf	plusw1,c
 31839  011C4A  0EED               	movlw	-19
 31840  011C4C  6AE3               	clrf	plusw1,c
 31841                           
 31842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 31843                           ;stkvar	_g @ sp[(-56)+16]
 31844  011C4E  0ED8               	movlw	-40
 31845  011C50  006F FF8C  F032    	movff	plusw1,btemp+8
 31846  011C56  0ED9               	movlw	-39
 31847  011C58  006F FF8C  F033    	movff	plusw1,btemp+9
 31848  011C5E  0EDA               	movlw	-38
 31849  011C60  006F FF8C  F034    	movff	plusw1,btemp+10
 31850  011C66  0EDB               	movlw	-37
 31851  011C68  006F FF8C  F035    	movff	plusw1,btemp+11
 31852                           
 31853                           ;stkvar	_h @ sp[(-56)+24]
 31854  011C6E  0EE0               	movlw	-32
 31855  011C70  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31856  011C76  0EE1               	movlw	-31
 31857  011C78  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31858  011C7E  0EE2               	movlw	-30
 31859  011C80  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31860  011C86  0EE3               	movlw	-29
 31861  011C88  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31862                           
 31863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 31864                           ;stkvar	_u @ sp[(-56)+12]
 31865  011C8E  0ED4               	movlw	-44
 31866  011C90  006F FF8C  F032    	movff	plusw1,btemp+8
 31867  011C96  0ED5               	movlw	-43
 31868  011C98  006F FF8C  F033    	movff	plusw1,btemp+9
 31869  011C9E  0ED6               	movlw	-42
 31870  011CA0  006F FF8C  F034    	movff	plusw1,btemp+10
 31871  011CA6  0ED7               	movlw	-41
 31872  011CA8  006F FF8C  F035    	movff	plusw1,btemp+11
 31873                           
 31874                           ;stkvar	_ou @ sp[(-56)+28]
 31875  011CAE  0EE4               	movlw	-28
 31876  011CB0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31877  011CB6  0EE5               	movlw	-27
 31878  011CB8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31879  011CBE  0EE6               	movlw	-26
 31880  011CC0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31881  011CC6  0EE7               	movlw	-25
 31882  011CC8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31883                           
 31884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 31885  011CCE  D0D6               	goto	l15951
 31886  011CD0                     l15941:
 31887                           
 31888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 31889                           ;stkvar	_u @ sp[(-56)+12]
 31890  011CD0  0ED4               	movlw	-44
 31891  011CD2  006F FF8F FFE6     	movff	plusw1,postinc1
 31892  011CD8  006F FF8F FFE6     	movff	plusw1,postinc1
 31893  011CDE  006F FF8F FFE6     	movff	plusw1,postinc1
 31894  011CE4  006F FF8F FFE6     	movff	plusw1,postinc1
 31895                           
 31896                           ;stkvar	_h @ sp[(-60)+24]
 31897  011CEA  0EDC               	movlw	-36
 31898  011CEC  006F FF8F FFE6     	movff	plusw1,postinc1
 31899  011CF2  006F FF8F FFE6     	movff	plusw1,postinc1
 31900  011CF8  006F FF8F FFE6     	movff	plusw1,postinc1
 31901  011CFE  006F FF8F FFE6     	movff	plusw1,postinc1
 31902  011D04  EC78  F0C3         	call	___fldiv	;wreg free
 31903  011D08  0060  F0AB  FFE6   	movff	btemp,postinc1
 31904  011D0E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31905  011D14  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31906  011D1A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31907  011D20  EC22  F0D3         	call	_floorf	;wreg free
 31908                           
 31909                           ;stkvar	_l @ sp[(-56)+20]
 31910  011D24  0EDC               	movlw	-36
 31911  011D26  0060  F0AB  FFE3   	movff	btemp,plusw1
 31912  011D2C  0EDD               	movlw	-35
 31913  011D2E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31914  011D34  0EDE               	movlw	-34
 31915  011D36  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31916  011D3C  0EDF               	movlw	-33
 31917  011D3E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31918                           
 31919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 31920                           ;stkvar	_l @ sp[(-56)+20]
 31921  011D44  0EDC               	movlw	-36
 31922  011D46  006F FF8F FFE6     	movff	plusw1,postinc1
 31923  011D4C  006F FF8F FFE6     	movff	plusw1,postinc1
 31924  011D52  006F FF8F FFE6     	movff	plusw1,postinc1
 31925  011D58  006F FF8F FFE6     	movff	plusw1,postinc1
 31926  011D5E  EC3D  F0F5         	call	___fltol	;wreg free
 31927  011D62  0060  F0A8  F034   	movff	btemp,btemp+10
 31928  011D68  0060  F0AC  F035   	movff	btemp+1,btemp+11
 31929                           
 31930                           ;stkvar	_d @ sp[(-56)+44]
 31931  011D6E  0EF4               	movlw	-12
 31932  011D70  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31933  011D76  0EF5               	movlw	-11
 31934  011D78  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31935                           
 31936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 31937                           ;stkvar	_u @ sp[(-56)+12]
 31938  011D7E  0ED4               	movlw	-44
 31939  011D80  006F FF8F FFE6     	movff	plusw1,postinc1
 31940  011D86  006F FF8F FFE6     	movff	plusw1,postinc1
 31941  011D8C  006F FF8F FFE6     	movff	plusw1,postinc1
 31942  011D92  006F FF8F FFE6     	movff	plusw1,postinc1
 31943                           
 31944                           ;stkvar	_l @ sp[(-60)+20]
 31945  011D98  0ED8               	movlw	-40
 31946  011D9A  006F FF8F FFE6     	movff	plusw1,postinc1
 31947  011DA0  006F FF8F FFE6     	movff	plusw1,postinc1
 31948  011DA6  006F FF8F FFE6     	movff	plusw1,postinc1
 31949  011DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 31950  011DB2  EC27  F0B8         	call	___flmul	;wreg free
 31951  011DB6  0060  F0AB  FFE6   	movff	btemp,postinc1
 31952  011DBC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31953  011DC2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31954  011DC8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31955                           
 31956                           ;stkvar	_h @ sp[(-60)+24]
 31957  011DCE  0EDC               	movlw	-36
 31958  011DD0  006F FF8F FFE6     	movff	plusw1,postinc1
 31959  011DD6  006F FF8F FFE6     	movff	plusw1,postinc1
 31960  011DDC  006F FF8F FFE6     	movff	plusw1,postinc1
 31961  011DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 31962  011DE8  EC85  F011         	call	___flsub	;wreg free
 31963                           
 31964                           ;stkvar	_h @ sp[(-56)+24]
 31965  011DEC  0EE0               	movlw	-32
 31966  011DEE  0060  F0AB  FFE3   	movff	btemp,plusw1
 31967  011DF4  0EE1               	movlw	-31
 31968  011DF6  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31969  011DFC  0EE2               	movlw	-30
 31970  011DFE  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31971  011E04  0EE3               	movlw	-29
 31972  011E06  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31973                           
 31974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 31975  011E0C  0E00               	movlw	0
 31976  011E0E  6EE6               	movwf	postinc1,c
 31977  011E10  0E00               	movlw	0
 31978  011E12  6EE6               	movwf	postinc1,c
 31979  011E14  0E20               	movlw	32
 31980  011E16  6EE6               	movwf	postinc1,c
 31981  011E18  0E41               	movlw	65
 31982  011E1A  6EE6               	movwf	postinc1,c
 31983                           
 31984                           ;stkvar	_u @ sp[(-60)+12]
 31985  011E1C  0ED0               	movlw	-48
 31986  011E1E  006F FF8F FFE6     	movff	plusw1,postinc1
 31987  011E24  006F FF8F FFE6     	movff	plusw1,postinc1
 31988  011E2A  006F FF8F FFE6     	movff	plusw1,postinc1
 31989  011E30  006F FF8F FFE6     	movff	plusw1,postinc1
 31990  011E36  EC78  F0C3         	call	___fldiv	;wreg free
 31991                           
 31992                           ;stkvar	_u @ sp[(-56)+12]
 31993  011E3A  0ED4               	movlw	-44
 31994  011E3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31995  011E42  0ED5               	movlw	-43
 31996  011E44  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31997  011E4A  0ED6               	movlw	-42
 31998  011E4C  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31999  011E52  0ED7               	movlw	-41
 32000  011E54  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32001                           
 32002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 32003                           ;stkvar	_i @ sp[(-56)+36]
 32004  011E5A  0EEC               	movlw	-20
 32005  011E5C  50E3               	movf	plusw1,w,c
 32006  011E5E  0F01               	addlw	1
 32007  011E60  6E2A               	movwf	btemp^0,c
 32008  011E62  0EEC               	movlw	-20
 32009  011E64  0060  F0AB  FFE3   	movff	btemp,plusw1
 32010  011E6A  6A2A               	clrf	btemp^0,c
 32011  011E6C  0EED               	movlw	-19
 32012  011E6E  50E3               	movf	plusw1,w,c
 32013  011E70  202A               	addwfc	btemp^0,w,c
 32014  011E72  6E2A               	movwf	btemp^0,c
 32015  011E74  0EED               	movlw	-19
 32016  011E76  0060  F0AB  FFE3   	movff	btemp,plusw1
 32017  011E7C                     l15951:
 32018                           
 32019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 32020                           ;stkvar	_m @ sp[(-56)+48]
 32021                           ;stkvar	_i @ sp[(-56)+36]
 32022  011E7C  50E1               	movf	fsr1l,w,c
 32023  011E7E  0FEC               	addlw	-20
 32024  011E80  6ED9               	movwf	fsr2l,c
 32025  011E82  50E2               	movf	fsr1h,w,c
 32026  011E84  6EDA               	movwf	fsr2h,c
 32027  011E86  0EFF               	movlw	255
 32028  011E88  22DA               	addwfc	fsr2h,f,c
 32029  011E8A  0EF8               	movlw	-8
 32030  011E8C  50E3               	movf	plusw1,w,c
 32031  011E8E  5CDE               	subwf	postinc2,w,c
 32032  011E90  50DE               	movf	postinc2,w,c
 32033  011E92  0A80               	xorlw	128
 32034  011E94  6E2A               	movwf	btemp^0,c
 32035  011E96  0EF9               	movlw	-7
 32036  011E98  50E3               	movf	plusw1,w,c
 32037  011E9A  0A80               	xorlw	128
 32038  011E9C  582A               	subwfb	btemp^0,w,c
 32039  011E9E  A0D8               	btfss	status,0,c
 32040  011EA0  D717               	goto	l15941
 32041                           
 32042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 32043  011EA2  0E00               	movlw	0
 32044  011EA4  6EE6               	movwf	postinc1,c
 32045  011EA6  0E00               	movlw	0
 32046  011EA8  6EE6               	movwf	postinc1,c
 32047  011EAA  0EA0               	movlw	160
 32048  011EAC  6EE6               	movwf	postinc1,c
 32049  011EAE  0E40               	movlw	64
 32050  011EB0  6EE6               	movwf	postinc1,c
 32051                           
 32052                           ;stkvar	_u @ sp[(-60)+12]
 32053  011EB2  0ED0               	movlw	-48
 32054  011EB4  006F FF8F FFE6     	movff	plusw1,postinc1
 32055  011EBA  006F FF8F FFE6     	movff	plusw1,postinc1
 32056  011EC0  006F FF8F FFE6     	movff	plusw1,postinc1
 32057  011EC6  006F FF8F FFE6     	movff	plusw1,postinc1
 32058  011ECC  EC27  F0B8         	call	___flmul	;wreg free
 32059                           
 32060                           ;stkvar	_l @ sp[(-56)+20]
 32061  011ED0  0EDC               	movlw	-36
 32062  011ED2  0060  F0AB  FFE3   	movff	btemp,plusw1
 32063  011ED8  0EDD               	movlw	-35
 32064  011EDA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32065  011EE0  0EDE               	movlw	-34
 32066  011EE2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32067  011EE8  0EDF               	movlw	-33
 32068  011EEA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32069                           
 32070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 32071                           ;stkvar	_l @ sp[(-56)+20]
 32072  011EF0  0EDC               	movlw	-36
 32073  011EF2  006F FF8F FFE6     	movff	plusw1,postinc1
 32074  011EF8  006F FF8F FFE6     	movff	plusw1,postinc1
 32075  011EFE  006F FF8F FFE6     	movff	plusw1,postinc1
 32076  011F04  006F FF8F FFE6     	movff	plusw1,postinc1
 32077                           
 32078                           ;stkvar	_h @ sp[(-60)+24]
 32079  011F0A  0EDC               	movlw	-36
 32080  011F0C  006F FF8F FFE6     	movff	plusw1,postinc1
 32081  011F12  006F FF8F FFE6     	movff	plusw1,postinc1
 32082  011F18  006F FF8F FFE6     	movff	plusw1,postinc1
 32083  011F1E  006F FF8F FFE6     	movff	plusw1,postinc1
 32084  011F24  ECA9  F0F6         	call	___flge	;wreg free
 32085  011F28  A02A               	btfss	btemp& (0+255),0,c
 32086  011F2A  D021               	goto	u15180
 32087                           
 32088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 32089                           ;stkvar	_l @ sp[(-56)+20]
 32090                           
 32091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 32092                           
 32093                           ;stkvar	_l @ sp[(-56)+20]
 32094                           
 32095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 32096  011F2C  0EDC               	movlw	-36
 32097  011F2E  006F FF8F FFE6     	movff	plusw1,postinc1
 32098  011F34  006F FF8F FFE6     	movff	plusw1,postinc1
 32099  011F3A  006F FF8F FFE6     	movff	plusw1,postinc1
 32100  011F40  006F FF8F FFE6     	movff	plusw1,postinc1
 32101                           
 32102                           ;stkvar	_h @ sp[(-60)+24]
 32103  011F46  0EDC               	movlw	-36
 32104  011F48  006F FF8F FFE6     	movff	plusw1,postinc1
 32105  011F4E  006F FF8F FFE6     	movff	plusw1,postinc1
 32106  011F54  006F FF8F FFE6     	movff	plusw1,postinc1
 32107  011F5A  006F FF8F FFE6     	movff	plusw1,postinc1
 32108  011F60  EC6D  F004         	call	___fleq	;wreg free
 32109  011F64  A02A               	btfss	btemp& (0+255),0,c
 32110  011F66  D01B               	goto	l15965
 32111                           
 32112                           ;stkvar	_d @ sp[(-56)+44]
 32113  011F68  0EF4               	movlw	-12
 32114  011F6A  B0E3               	btfsc	plusw1,0,c
 32115  011F6C  D018               	goto	l15965
 32116  011F6E                     u15180:
 32117                           
 32118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 32119  011F6E  0E00               	movlw	0
 32120  011F70  6E32               	movwf	(btemp+8)^0,c
 32121  011F72  0E00               	movlw	0
 32122  011F74  6E33               	movwf	(btemp+9)^0,c
 32123  011F76  0E00               	movlw	0
 32124  011F78  6E34               	movwf	(btemp+10)^0,c
 32125  011F7A  0E00               	movlw	0
 32126  011F7C  6E35               	movwf	(btemp+11)^0,c
 32127                           
 32128                           ;stkvar	_l @ sp[(-56)+20]
 32129  011F7E  0EDC               	movlw	-36
 32130  011F80  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32131  011F86  0EDD               	movlw	-35
 32132  011F88  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32133  011F8E  0EDE               	movlw	-34
 32134  011F90  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32135  011F96  0EDF               	movlw	-33
 32136  011F98  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32137  011F9E                     l15965:
 32138                           
 32139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 32140                           ;stkvar	_l @ sp[(-56)+20]
 32141  011F9E  0EDC               	movlw	-36
 32142  011FA0  006F FF8F FFE6     	movff	plusw1,postinc1
 32143  011FA6  006F FF8F FFE6     	movff	plusw1,postinc1
 32144  011FAC  006F FF8F FFE6     	movff	plusw1,postinc1
 32145  011FB2  006F FF8F FFE6     	movff	plusw1,postinc1
 32146                           
 32147                           ;stkvar	_g @ sp[(-60)+16]
 32148  011FB8  0ED4               	movlw	-44
 32149  011FBA  006F FF8F FFE6     	movff	plusw1,postinc1
 32150  011FC0  006F FF8F FFE6     	movff	plusw1,postinc1
 32151  011FC6  006F FF8F FFE6     	movff	plusw1,postinc1
 32152  011FCC  006F FF8F FFE6     	movff	plusw1,postinc1
 32153  011FD2  EC3C  F0BC         	call	___fladd	;wreg free
 32154                           
 32155                           ;stkvar	_h @ sp[(-56)+24]
 32156  011FD6  0EE0               	movlw	-32
 32157  011FD8  0060  F0AB  FFE3   	movff	btemp,plusw1
 32158  011FDE  0EE1               	movlw	-31
 32159  011FE0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32160  011FE6  0EE2               	movlw	-30
 32161  011FE8  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32162  011FEE  0EE3               	movlw	-29
 32163  011FF0  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32164                           
 32165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 32166                           ;stkvar	_ou @ sp[(-56)+28]
 32167  011FF6  0EE4               	movlw	-28
 32168  011FF8  006F FF8C  F032    	movff	plusw1,btemp+8
 32169  011FFE  0EE5               	movlw	-27
 32170  012000  006F FF8C  F033    	movff	plusw1,btemp+9
 32171  012006  0EE6               	movlw	-26
 32172  012008  006F FF8C  F034    	movff	plusw1,btemp+10
 32173  01200E  0EE7               	movlw	-25
 32174  012010  006F FF8C  F035    	movff	plusw1,btemp+11
 32175                           
 32176                           ;stkvar	_u @ sp[(-56)+12]
 32177  012016  0ED4               	movlw	-44
 32178  012018  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32179  01201E  0ED5               	movlw	-43
 32180  012020  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32181  012026  0ED6               	movlw	-42
 32182  012028  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32183  01202E  0ED7               	movlw	-41
 32184  012030  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32185                           
 32186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 32187                           ;stkvar	_nmode @ sp[(-56)+55]
 32188  012036  0EFF               	movlw	-1
 32189  012038  006F FF8C  F02A    	movff	plusw1,btemp
 32190  01203E  0E65               	movlw	101
 32191  012040  182A               	xorwf	btemp^0,w,c
 32192  012042  B4D8               	btfsc	status,2,c
 32193  012044  D011               	goto	l15973
 32194                           
 32195                           ;stkvar	_e @ sp[(-56)+34]
 32196                           ;stkvar	_ne @ sp[(-56)+46]
 32197  012046  0EEA               	movlw	-22
 32198  012048  006F FF8C  F02A    	movff	plusw1,btemp
 32199  01204E  0EF6               	movlw	-10
 32200  012050  0060  F0AB  FFE3   	movff	btemp,plusw1
 32201  012056  0EEB               	movlw	-21
 32202  012058  006F FF8C  F02A    	movff	plusw1,btemp
 32203  01205E  0EF7               	movlw	-9
 32204  012060  0060  F0AB  FFE3   	movff	btemp,plusw1
 32205  012066  D004               	goto	l2576
 32206  012068                     l15973:
 32207                           
 32208                           ;stkvar	_ne @ sp[(-56)+46]
 32209  012068  0EF6               	movlw	-10
 32210  01206A  6AE3               	clrf	plusw1,c
 32211  01206C  0EF7               	movlw	-9
 32212  01206E  6AE3               	clrf	plusw1,c
 32213  012070                     l2576:
 32214                           
 32215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 32216                           ;stkvar	_pp @ sp[(-56)+50]
 32217  012070  0EFA               	movlw	-6
 32218  012072  6AE3               	clrf	plusw1,c
 32219  012074  0EFB               	movlw	-5
 32220  012076  6AE3               	clrf	plusw1,c
 32221                           
 32222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 32223                           ;stkvar	_t @ sp[(-56)+52]
 32224  012078  0EFC               	movlw	-4
 32225  01207A  6AE3               	clrf	plusw1,c
 32226  01207C  0EFD               	movlw	-3
 32227  01207E  6AE3               	clrf	plusw1,c
 32228                           
 32229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 32230                           ;stkvar	_i @ sp[(-56)+36]
 32231  012080  0EEC               	movlw	-20
 32232  012082  6AE3               	clrf	plusw1,c
 32233  012084  0EED               	movlw	-19
 32234  012086  6AE3               	clrf	plusw1,c
 32235                           
 32236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 32237  012088  D1B7               	goto	l16025
 32238  01208A                     l15975:
 32239                           
 32240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 32241                           ;stkvar	_u @ sp[(-56)+12]
 32242  01208A  0ED4               	movlw	-44
 32243  01208C  006F FF8F FFE6     	movff	plusw1,postinc1
 32244  012092  006F FF8F FFE6     	movff	plusw1,postinc1
 32245  012098  006F FF8F FFE6     	movff	plusw1,postinc1
 32246  01209E  006F FF8F FFE6     	movff	plusw1,postinc1
 32247                           
 32248                           ;stkvar	_h @ sp[(-60)+24]
 32249  0120A4  0EDC               	movlw	-36
 32250  0120A6  006F FF8F FFE6     	movff	plusw1,postinc1
 32251  0120AC  006F FF8F FFE6     	movff	plusw1,postinc1
 32252  0120B2  006F FF8F FFE6     	movff	plusw1,postinc1
 32253  0120B8  006F FF8F FFE6     	movff	plusw1,postinc1
 32254  0120BE  EC78  F0C3         	call	___fldiv	;wreg free
 32255  0120C2  0060  F0AB  FFE6   	movff	btemp,postinc1
 32256  0120C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 32257  0120CE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 32258  0120D4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 32259  0120DA  EC22  F0D3         	call	_floorf	;wreg free
 32260                           
 32261                           ;stkvar	_l @ sp[(-56)+20]
 32262  0120DE  0EDC               	movlw	-36
 32263  0120E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 32264  0120E6  0EDD               	movlw	-35
 32265  0120E8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32266  0120EE  0EDE               	movlw	-34
 32267  0120F0  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32268  0120F6  0EDF               	movlw	-33
 32269  0120F8  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32270                           
 32271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 32272                           ;stkvar	_l @ sp[(-56)+20]
 32273  0120FE  0EDC               	movlw	-36
 32274  012100  006F FF8F FFE6     	movff	plusw1,postinc1
 32275  012106  006F FF8F FFE6     	movff	plusw1,postinc1
 32276  01210C  006F FF8F FFE6     	movff	plusw1,postinc1
 32277  012112  006F FF8F FFE6     	movff	plusw1,postinc1
 32278  012118  EC3D  F0F5         	call	___fltol	;wreg free
 32279  01211C  0060  F0A8  F034   	movff	btemp,btemp+10
 32280  012122  0060  F0AC  F035   	movff	btemp+1,btemp+11
 32281                           
 32282                           ;stkvar	_d @ sp[(-56)+44]
 32283  012128  0EF4               	movlw	-12
 32284  01212A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32285  012130  0EF5               	movlw	-11
 32286  012132  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32287                           
 32288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 32289  012138  B84E               	btfsc	_flags^0,4,c
 32290  01213A  D026               	goto	l15989
 32291                           
 32292                           ;stkvar	_d @ sp[(-56)+44]
 32293  01213C  0EF4               	movlw	-12
 32294  01213E  006F FF8C  F02A    	movff	plusw1,btemp
 32295  012144  0EF5               	movlw	-11
 32296  012146  50E3               	movf	plusw1,w,c
 32297  012148  102A               	iorwf	btemp^0,w,c
 32298  01214A  A4D8               	btfss	status,2,c
 32299  01214C  D01D               	goto	l15989
 32300                           
 32301                           ;stkvar	_mode @ sp[(-56)+54]
 32302  01214E  0EFE               	movlw	-2
 32303  012150  006F FF8C  F02A    	movff	plusw1,btemp
 32304  012156  0E67               	movlw	103
 32305  012158  182A               	xorwf	btemp^0,w,c
 32306  01215A  A4D8               	btfss	status,2,c
 32307  01215C  D015               	goto	l15989
 32308                           
 32309                           ;stkvar	_ne @ sp[(-56)+46]
 32310  01215E  0EF7               	movlw	-9
 32311  012160  AEE3               	btfss	plusw1,7,c
 32312  012162  D012               	goto	l15989
 32313                           
 32314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 32315                           ;stkvar	_t @ sp[(-56)+52]
 32316  012164  0EFC               	movlw	-4
 32317  012166  50E3               	movf	plusw1,w,c
 32318  012168  0F01               	addlw	1
 32319  01216A  6E2A               	movwf	btemp^0,c
 32320  01216C  0EFC               	movlw	-4
 32321  01216E  0060  F0AB  FFE3   	movff	btemp,plusw1
 32322  012174  6A2A               	clrf	btemp^0,c
 32323  012176  0EFD               	movlw	-3
 32324  012178  50E3               	movf	plusw1,w,c
 32325  01217A  202A               	addwfc	btemp^0,w,c
 32326  01217C  6E2A               	movwf	btemp^0,c
 32327  01217E  0EFD               	movlw	-3
 32328  012180  0060  F0AB  FFE3   	movff	btemp,plusw1
 32329                           
 32330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 32331  012186  D0AF               	goto	l16017
 32332  012188                     l15989:
 32333                           
 32334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 32335                           ;stkvar	_pp @ sp[(-56)+50]
 32336  012188  0EFA               	movlw	-6
 32337  01218A  006F FF8C  F02A    	movff	plusw1,btemp
 32338  012190  0EFB               	movlw	-5
 32339  012192  50E3               	movf	plusw1,w,c
 32340  012194  102A               	iorwf	btemp^0,w,c
 32341  012196  A4D8               	btfss	status,2,c
 32342  012198  D070               	goto	l16009
 32343                           
 32344                           ;stkvar	_ne @ sp[(-56)+46]
 32345  01219A  0EF7               	movlw	-9
 32346  01219C  AEE3               	btfss	plusw1,7,c
 32347  01219E  D06D               	goto	l16009
 32348                           
 32349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 32350                           ;stkvar	_n @ sp[(-56)+32]
 32351  0121A0  0EE8               	movlw	-24
 32352  0121A2  006F FF8C  F034    	movff	plusw1,btemp+10
 32353  0121A8  0EE9               	movlw	-23
 32354  0121AA  006F FF8C  F035    	movff	plusw1,btemp+11
 32355  0121B0  0E54               	movlw	low _dbuf
 32356  0121B2  2434               	addwf	(btemp+10)^0,w,c
 32357  0121B4  6ED9               	movwf	fsr2l,c
 32358  0121B6  0E03               	movlw	high _dbuf
 32359  0121B8  2035               	addwfc	(btemp+11)^0,w,c
 32360  0121BA  6EDA               	movwf	fsr2h,c
 32361  0121BC  0E2E               	movlw	46
 32362  0121BE  6EDF               	movwf	indf2,c
 32363                           
 32364                           ;stkvar	_n @ sp[(-56)+32]
 32365  0121C0  0EE8               	movlw	-24
 32366  0121C2  50E3               	movf	plusw1,w,c
 32367  0121C4  0F01               	addlw	1
 32368  0121C6  6E2A               	movwf	btemp^0,c
 32369  0121C8  0EE8               	movlw	-24
 32370  0121CA  0060  F0AB  FFE3   	movff	btemp,plusw1
 32371  0121D0  6A2A               	clrf	btemp^0,c
 32372  0121D2  0EE9               	movlw	-23
 32373  0121D4  50E3               	movf	plusw1,w,c
 32374  0121D6  202A               	addwfc	btemp^0,w,c
 32375  0121D8  6E2A               	movwf	btemp^0,c
 32376  0121DA  0EE9               	movlw	-23
 32377  0121DC  0060  F0AB  FFE3   	movff	btemp,plusw1
 32378                           
 32379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 32380                           ;stkvar	_w @ sp[(-56)+38]
 32381  0121E2  50E1               	movf	fsr1l,w,c
 32382  0121E4  0FEE               	addlw	-18
 32383  0121E6  6ED9               	movwf	fsr2l,c
 32384  0121E8  50E2               	movf	fsr1h,w,c
 32385  0121EA  6EDA               	movwf	fsr2h,c
 32386  0121EC  0EFF               	movlw	255
 32387  0121EE  22DA               	addwfc	fsr2h,f,c
 32388  0121F0  06DE               	decf	postinc2,f,c
 32389  0121F2  0E00               	movlw	0
 32390  0121F4  5ADD               	subwfb	postdec2,f,c
 32391                           
 32392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 32393  0121F6  0E01               	movlw	1
 32394  0121F8  6E34               	movwf	(btemp+10)^0,c
 32395  0121FA  0E00               	movlw	0
 32396  0121FC  6E35               	movwf	(btemp+11)^0,c
 32397                           
 32398                           ;stkvar	_pp @ sp[(-56)+50]
 32399  0121FE  0EFA               	movlw	-6
 32400  012200  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32401  012206  0EFB               	movlw	-5
 32402  012208  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32403  01220E  D035               	goto	l16009
 32404  012210                     l16001:
 32405                           
 32406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 32407                           ;stkvar	_n @ sp[(-56)+32]
 32408  012210  0EE8               	movlw	-24
 32409  012212  006F FF8C  F034    	movff	plusw1,btemp+10
 32410  012218  0EE9               	movlw	-23
 32411  01221A  006F FF8C  F035    	movff	plusw1,btemp+11
 32412  012220  0E54               	movlw	low _dbuf
 32413  012222  2434               	addwf	(btemp+10)^0,w,c
 32414  012224  6ED9               	movwf	fsr2l,c
 32415  012226  0E03               	movlw	high _dbuf
 32416  012228  2035               	addwfc	(btemp+11)^0,w,c
 32417  01222A  6EDA               	movwf	fsr2h,c
 32418  01222C  0E30               	movlw	48
 32419  01222E  6EDF               	movwf	indf2,c
 32420                           
 32421                           ;stkvar	_n @ sp[(-56)+32]
 32422  012230  0EE8               	movlw	-24
 32423  012232  50E3               	movf	plusw1,w,c
 32424  012234  0F01               	addlw	1
 32425  012236  6E2A               	movwf	btemp^0,c
 32426  012238  0EE8               	movlw	-24
 32427  01223A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32428  012240  6A2A               	clrf	btemp^0,c
 32429  012242  0EE9               	movlw	-23
 32430  012244  50E3               	movf	plusw1,w,c
 32431  012246  202A               	addwfc	btemp^0,w,c
 32432  012248  6E2A               	movwf	btemp^0,c
 32433  01224A  0EE9               	movlw	-23
 32434  01224C  0060  F0AB  FFE3   	movff	btemp,plusw1
 32435                           
 32436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 32437                           ;stkvar	_w @ sp[(-56)+38]
 32438  012252  50E1               	movf	fsr1l,w,c
 32439  012254  0FEE               	addlw	-18
 32440  012256  6ED9               	movwf	fsr2l,c
 32441  012258  50E2               	movf	fsr1h,w,c
 32442  01225A  6EDA               	movwf	fsr2h,c
 32443  01225C  0EFF               	movlw	255
 32444  01225E  22DA               	addwfc	fsr2h,f,c
 32445  012260  06DE               	decf	postinc2,f,c
 32446  012262  0E00               	movlw	0
 32447  012264  5ADD               	subwfb	postdec2,f,c
 32448                           
 32449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 32450                           ;stkvar	_t @ sp[(-56)+52]
 32451  012266  50E1               	movf	fsr1l,w,c
 32452  012268  0FFC               	addlw	-4
 32453  01226A  6ED9               	movwf	fsr2l,c
 32454  01226C  50E2               	movf	fsr1h,w,c
 32455  01226E  6EDA               	movwf	fsr2h,c
 32456  012270  0EFF               	movlw	255
 32457  012272  22DA               	addwfc	fsr2h,f,c
 32458  012274  06DE               	decf	postinc2,f,c
 32459  012276  0E00               	movlw	0
 32460  012278  5ADD               	subwfb	postdec2,f,c
 32461  01227A                     l16009:
 32462                           
 32463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 32464                           ;stkvar	_t @ sp[(-56)+52]
 32465  01227A  0EFC               	movlw	-4
 32466  01227C  006F FF8C  F02A    	movff	plusw1,btemp
 32467  012282  0EFD               	movlw	-3
 32468  012284  50E3               	movf	plusw1,w,c
 32469  012286  102A               	iorwf	btemp^0,w,c
 32470  012288  A4D8               	btfss	status,2,c
 32471  01228A  D7C2               	goto	l16001
 32472                           
 32473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 32474                           ;stkvar	_n @ sp[(-56)+32]
 32475  01228C  0EE8               	movlw	-24
 32476  01228E  006F FF8C  F034    	movff	plusw1,btemp+10
 32477  012294  0EE9               	movlw	-23
 32478  012296  006F FF8C  F035    	movff	plusw1,btemp+11
 32479  01229C  0E54               	movlw	low _dbuf
 32480  01229E  2434               	addwf	(btemp+10)^0,w,c
 32481  0122A0  6ED9               	movwf	fsr2l,c
 32482  0122A2  0E03               	movlw	high _dbuf
 32483  0122A4  2035               	addwfc	(btemp+11)^0,w,c
 32484  0122A6  6EDA               	movwf	fsr2h,c
 32485                           
 32486                           ;stkvar	_d @ sp[(-56)+44]
 32487  0122A8  0EF4               	movlw	-12
 32488  0122AA  50E3               	movf	plusw1,w,c
 32489  0122AC  0F30               	addlw	48
 32490  0122AE  6EDF               	movwf	indf2,c
 32491                           
 32492                           ;stkvar	_n @ sp[(-56)+32]
 32493  0122B0  0EE8               	movlw	-24
 32494  0122B2  50E3               	movf	plusw1,w,c
 32495  0122B4  0F01               	addlw	1
 32496  0122B6  6E2A               	movwf	btemp^0,c
 32497  0122B8  0EE8               	movlw	-24
 32498  0122BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 32499  0122C0  6A2A               	clrf	btemp^0,c
 32500  0122C2  0EE9               	movlw	-23
 32501  0122C4  50E3               	movf	plusw1,w,c
 32502  0122C6  202A               	addwfc	btemp^0,w,c
 32503  0122C8  6E2A               	movwf	btemp^0,c
 32504  0122CA  0EE9               	movlw	-23
 32505  0122CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 32506                           
 32507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 32508                           ;stkvar	_w @ sp[(-56)+38]
 32509  0122D2  50E1               	movf	fsr1l,w,c
 32510  0122D4  0FEE               	addlw	-18
 32511  0122D6  6ED9               	movwf	fsr2l,c
 32512  0122D8  50E2               	movf	fsr1h,w,c
 32513  0122DA  6EDA               	movwf	fsr2h,c
 32514  0122DC  0EFF               	movlw	255
 32515  0122DE  22DA               	addwfc	fsr2h,f,c
 32516  0122E0  06DE               	decf	postinc2,f,c
 32517  0122E2  0E00               	movlw	0
 32518  0122E4  5ADD               	subwfb	postdec2,f,c
 32519  0122E6                     l16017:
 32520                           
 32521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 32522                           ;stkvar	_u @ sp[(-56)+12]
 32523  0122E6  0ED4               	movlw	-44
 32524  0122E8  006F FF8F FFE6     	movff	plusw1,postinc1
 32525  0122EE  006F FF8F FFE6     	movff	plusw1,postinc1
 32526  0122F4  006F FF8F FFE6     	movff	plusw1,postinc1
 32527  0122FA  006F FF8F FFE6     	movff	plusw1,postinc1
 32528                           
 32529                           ;stkvar	_l @ sp[(-60)+20]
 32530  012300  0ED8               	movlw	-40
 32531  012302  006F FF8F FFE6     	movff	plusw1,postinc1
 32532  012308  006F FF8F FFE6     	movff	plusw1,postinc1
 32533  01230E  006F FF8F FFE6     	movff	plusw1,postinc1
 32534  012314  006F FF8F FFE6     	movff	plusw1,postinc1
 32535  01231A  EC27  F0B8         	call	___flmul	;wreg free
 32536  01231E  0060  F0AB  FFE6   	movff	btemp,postinc1
 32537  012324  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 32538  01232A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 32539  012330  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 32540                           
 32541                           ;stkvar	_h @ sp[(-60)+24]
 32542  012336  0EDC               	movlw	-36
 32543  012338  006F FF8F FFE6     	movff	plusw1,postinc1
 32544  01233E  006F FF8F FFE6     	movff	plusw1,postinc1
 32545  012344  006F FF8F FFE6     	movff	plusw1,postinc1
 32546  01234A  006F FF8F FFE6     	movff	plusw1,postinc1
 32547  012350  EC85  F011         	call	___flsub	;wreg free
 32548                           
 32549                           ;stkvar	_h @ sp[(-56)+24]
 32550  012354  0EE0               	movlw	-32
 32551  012356  0060  F0AB  FFE3   	movff	btemp,plusw1
 32552  01235C  0EE1               	movlw	-31
 32553  01235E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32554  012364  0EE2               	movlw	-30
 32555  012366  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32556  01236C  0EE3               	movlw	-29
 32557  01236E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32558                           
 32559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 32560  012374  0E00               	movlw	0
 32561  012376  6EE6               	movwf	postinc1,c
 32562  012378  0E00               	movlw	0
 32563  01237A  6EE6               	movwf	postinc1,c
 32564  01237C  0E20               	movlw	32
 32565  01237E  6EE6               	movwf	postinc1,c
 32566  012380  0E41               	movlw	65
 32567  012382  6EE6               	movwf	postinc1,c
 32568                           
 32569                           ;stkvar	_u @ sp[(-60)+12]
 32570  012384  0ED0               	movlw	-48
 32571  012386  006F FF8F FFE6     	movff	plusw1,postinc1
 32572  01238C  006F FF8F FFE6     	movff	plusw1,postinc1
 32573  012392  006F FF8F FFE6     	movff	plusw1,postinc1
 32574  012398  006F FF8F FFE6     	movff	plusw1,postinc1
 32575  01239E  EC78  F0C3         	call	___fldiv	;wreg free
 32576                           
 32577                           ;stkvar	_u @ sp[(-56)+12]
 32578  0123A2  0ED4               	movlw	-44
 32579  0123A4  0060  F0AB  FFE3   	movff	btemp,plusw1
 32580  0123AA  0ED5               	movlw	-43
 32581  0123AC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32582  0123B2  0ED6               	movlw	-42
 32583  0123B4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32584  0123BA  0ED7               	movlw	-41
 32585  0123BC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32586                           
 32587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 32588                           ;stkvar	_ne @ sp[(-56)+46]
 32589  0123C2  50E1               	movf	fsr1l,w,c
 32590  0123C4  0FF6               	addlw	-10
 32591  0123C6  6ED9               	movwf	fsr2l,c
 32592  0123C8  50E2               	movf	fsr1h,w,c
 32593  0123CA  6EDA               	movwf	fsr2h,c
 32594  0123CC  0EFF               	movlw	255
 32595  0123CE  22DA               	addwfc	fsr2h,f,c
 32596  0123D0  06DE               	decf	postinc2,f,c
 32597  0123D2  0E00               	movlw	0
 32598  0123D4  5ADD               	subwfb	postdec2,f,c
 32599                           
 32600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 32601                           ;stkvar	_i @ sp[(-56)+36]
 32602  0123D6  0EEC               	movlw	-20
 32603  0123D8  50E3               	movf	plusw1,w,c
 32604  0123DA  0F01               	addlw	1
 32605  0123DC  6E2A               	movwf	btemp^0,c
 32606  0123DE  0EEC               	movlw	-20
 32607  0123E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 32608  0123E6  6A2A               	clrf	btemp^0,c
 32609  0123E8  0EED               	movlw	-19
 32610  0123EA  50E3               	movf	plusw1,w,c
 32611  0123EC  202A               	addwfc	btemp^0,w,c
 32612  0123EE  6E2A               	movwf	btemp^0,c
 32613  0123F0  0EED               	movlw	-19
 32614  0123F2  0060  F0AB  FFE3   	movff	btemp,plusw1
 32615  0123F8                     l16025:
 32616                           
 32617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 32618                           ;stkvar	_m @ sp[(-56)+48]
 32619                           ;stkvar	_i @ sp[(-56)+36]
 32620  0123F8  50E1               	movf	fsr1l,w,c
 32621  0123FA  0FEC               	addlw	-20
 32622  0123FC  6ED9               	movwf	fsr2l,c
 32623  0123FE  50E2               	movf	fsr1h,w,c
 32624  012400  6EDA               	movwf	fsr2h,c
 32625  012402  0EFF               	movlw	255
 32626  012404  22DA               	addwfc	fsr2h,f,c
 32627  012406  0EF8               	movlw	-8
 32628  012408  50E3               	movf	plusw1,w,c
 32629  01240A  5CDE               	subwf	postinc2,w,c
 32630  01240C  50DE               	movf	postinc2,w,c
 32631  01240E  0A80               	xorlw	128
 32632  012410  6E2A               	movwf	btemp^0,c
 32633  012412  0EF9               	movlw	-7
 32634  012414  50E3               	movf	plusw1,w,c
 32635  012416  0A80               	xorlw	128
 32636  012418  582A               	subwfb	btemp^0,w,c
 32637  01241A  B0D8               	btfsc	status,0,c
 32638  01241C  D00E               	goto	u15280
 32639                           
 32640                           ;stkvar	_n @ sp[(-56)+32]
 32641  01241E  0EE9               	movlw	-23
 32642  012420  BEE3               	btfsc	plusw1,7,c
 32643  012422  D633               	goto	l15975
 32644  012424  0EE9               	movlw	-23
 32645  012426  50E3               	movf	plusw1,w,c
 32646  012428  E108               	bnz	u15280
 32647  01242A  0EE8               	movlw	-24
 32648  01242C  006F FF8C  F02A    	movff	plusw1,btemp
 32649  012432  0E4B               	movlw	75
 32650  012434  5E2A               	subwf	btemp^0,f,c
 32651  012436  A0D8               	btfss	status,0,c
 32652  012438  D628               	goto	l15975
 32653  01243A                     u15280:
 32654                           
 32655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 32656                           ;stkvar	_pp @ sp[(-56)+50]
 32657  01243A  0EFA               	movlw	-6
 32658  01243C  006F FF8C  F02A    	movff	plusw1,btemp
 32659  012442  0EFB               	movlw	-5
 32660  012444  50E3               	movf	plusw1,w,c
 32661  012446  102A               	iorwf	btemp^0,w,c
 32662  012448  B4D8               	btfsc	status,2,c
 32663  01244A  A84E               	btfss	_flags^0,4,c
 32664  01244C  D021               	goto	l16037
 32665                           
 32666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 32667                           ;stkvar	_n @ sp[(-56)+32]
 32668  01244E  0EE8               	movlw	-24
 32669  012450  006F FF8C  F034    	movff	plusw1,btemp+10
 32670  012456  0EE9               	movlw	-23
 32671  012458  006F FF8C  F035    	movff	plusw1,btemp+11
 32672  01245E  0E54               	movlw	low _dbuf
 32673  012460  2434               	addwf	(btemp+10)^0,w,c
 32674  012462  6ED9               	movwf	fsr2l,c
 32675  012464  0E03               	movlw	high _dbuf
 32676  012466  2035               	addwfc	(btemp+11)^0,w,c
 32677  012468  6EDA               	movwf	fsr2h,c
 32678  01246A  0E2E               	movlw	46
 32679  01246C  6EDF               	movwf	indf2,c
 32680                           
 32681                           ;stkvar	_n @ sp[(-56)+32]
 32682  01246E  0EE8               	movlw	-24
 32683  012470  50E3               	movf	plusw1,w,c
 32684  012472  0F01               	addlw	1
 32685  012474  6E2A               	movwf	btemp^0,c
 32686  012476  0EE8               	movlw	-24
 32687  012478  0060  F0AB  FFE3   	movff	btemp,plusw1
 32688  01247E  6A2A               	clrf	btemp^0,c
 32689  012480  0EE9               	movlw	-23
 32690  012482  50E3               	movf	plusw1,w,c
 32691  012484  202A               	addwfc	btemp^0,w,c
 32692  012486  6E2A               	movwf	btemp^0,c
 32693  012488  0EE9               	movlw	-23
 32694  01248A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32695  012490                     l16037:
 32696                           
 32697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 32698                           ;stkvar	_n @ sp[(-56)+32]
 32699  012490  0EE8               	movlw	-24
 32700  012492  006F FF8C  F034    	movff	plusw1,btemp+10
 32701  012498  0EE9               	movlw	-23
 32702  01249A  006F FF8C  F035    	movff	plusw1,btemp+11
 32703  0124A0  0E54               	movlw	low _dbuf
 32704  0124A2  2434               	addwf	(btemp+10)^0,w,c
 32705  0124A4  6ED9               	movwf	fsr2l,c
 32706  0124A6  0E03               	movlw	high _dbuf
 32707  0124A8  2035               	addwfc	(btemp+11)^0,w,c
 32708  0124AA  6EDA               	movwf	fsr2h,c
 32709  0124AC  0E00               	movlw	0
 32710  0124AE  6EDF               	movwf	indf2,c
 32711                           
 32712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 32713                           ;stkvar	_nmode @ sp[(-56)+55]
 32714  0124B0  0EFF               	movlw	-1
 32715  0124B2  006F FF8C  F02A    	movff	plusw1,btemp
 32716  0124B8  0E65               	movlw	101
 32717  0124BA  182A               	xorwf	btemp^0,w,c
 32718  0124BC  A4D8               	btfss	status,2,c
 32719  0124BE  EFC1  F08B         	goto	l15841
 32720                           
 32721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 32722  0124C2  0E4F               	movlw	79
 32723  0124C4  6E34               	movwf	(btemp+10)^0,c
 32724  0124C6  0E00               	movlw	0
 32725  0124C8  6E35               	movwf	(btemp+11)^0,c
 32726                           
 32727                           ;stkvar	_i @ sp[(-56)+36]
 32728  0124CA  0EEC               	movlw	-20
 32729  0124CC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32730  0124D2  0EED               	movlw	-19
 32731  0124D4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32732                           
 32733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 32734                           ;stkvar	_i @ sp[(-56)+36]
 32735  0124DA  0EEC               	movlw	-20
 32736  0124DC  006F FF8C  F034    	movff	plusw1,btemp+10
 32737  0124E2  0EED               	movlw	-19
 32738  0124E4  006F FF8C  F035    	movff	plusw1,btemp+11
 32739  0124EA  0E54               	movlw	low _dbuf
 32740  0124EC  2434               	addwf	(btemp+10)^0,w,c
 32741  0124EE  6ED9               	movwf	fsr2l,c
 32742  0124F0  0E03               	movlw	high _dbuf
 32743  0124F2  2035               	addwfc	(btemp+11)^0,w,c
 32744  0124F4  6EDA               	movwf	fsr2h,c
 32745  0124F6  0E00               	movlw	0
 32746  0124F8  6EDF               	movwf	indf2,c
 32747                           
 32748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 32749                           ;stkvar	_sign @ sp[(-56)+42]
 32750  0124FA  0EF2               	movlw	-14
 32751  0124FC  6AE3               	clrf	plusw1,c
 32752  0124FE  0EF3               	movlw	-13
 32753  012500  6AE3               	clrf	plusw1,c
 32754                           
 32755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 32756                           ;stkvar	_e @ sp[(-56)+34]
 32757  012502  0EEB               	movlw	-21
 32758  012504  AEE3               	btfss	plusw1,7,c
 32759  012506  D012               	goto	l16051
 32760                           
 32761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 32762  012508  0E01               	movlw	1
 32763  01250A  6E34               	movwf	(btemp+10)^0,c
 32764  01250C  0E00               	movlw	0
 32765  01250E  6E35               	movwf	(btemp+11)^0,c
 32766                           
 32767                           ;stkvar	_sign @ sp[(-56)+42]
 32768  012510  0EF2               	movlw	-14
 32769  012512  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32770  012518  0EF3               	movlw	-13
 32771  01251A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32772                           
 32773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 32774                           ;stkvar	_e @ sp[(-56)+34]
 32775                           ;stkvar	_e @ sp[(-56)+34]
 32776  012520  0EEA               	movlw	-22
 32777  012522  6CE3               	negf	plusw1,c
 32778  012524  0EEB               	movlw	-21
 32779  012526  1EE3               	comf	plusw1,f,c
 32780  012528  B0D8               	btfsc	status,0,c
 32781  01252A  2AE3               	incf	plusw1,f,c
 32782  01252C                     l16051:
 32783                           
 32784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 32785  01252C  0E02               	movlw	2
 32786  01252E  6E34               	movwf	(btemp+10)^0,c
 32787  012530  0E00               	movlw	0
 32788  012532  6E35               	movwf	(btemp+11)^0,c
 32789                           
 32790                           ;stkvar	_p @ sp[(-56)+40]
 32791  012534  0EF0               	movlw	-16
 32792  012536  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32793  01253C  0EF1               	movlw	-15
 32794  01253E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32795                           
 32796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 32797  012544  D051               	goto	l16063
 32798  012546                     l16053:
 32799                           
 32800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 32801                           ;stkvar	_i @ sp[(-56)+36]
 32802  012546  50E1               	movf	fsr1l,w,c
 32803  012548  0FEC               	addlw	-20
 32804  01254A  6ED9               	movwf	fsr2l,c
 32805  01254C  50E2               	movf	fsr1h,w,c
 32806  01254E  6EDA               	movwf	fsr2h,c
 32807  012550  0EFF               	movlw	255
 32808  012552  22DA               	addwfc	fsr2h,f,c
 32809  012554  06DE               	decf	postinc2,f,c
 32810  012556  0E00               	movlw	0
 32811  012558  5ADD               	subwfb	postdec2,f,c
 32812                           
 32813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 32814                           ;stkvar	_i @ sp[(-56)+36]
 32815  01255A  0EEC               	movlw	-20
 32816  01255C  006F FF8C  F034    	movff	plusw1,btemp+10
 32817  012562  0EED               	movlw	-19
 32818  012564  006F FF8C  F035    	movff	plusw1,btemp+11
 32819  01256A  0E54               	movlw	low _dbuf
 32820  01256C  2434               	addwf	(btemp+10)^0,w,c
 32821  01256E  6ED9               	movwf	fsr2l,c
 32822  012570  0E03               	movlw	high _dbuf
 32823  012572  2035               	addwfc	(btemp+11)^0,w,c
 32824  012574  6EDA               	movwf	fsr2h,c
 32825  012576  0E0A               	movlw	10
 32826  012578  6EE6               	movwf	postinc1,c
 32827  01257A  0E00               	movlw	0
 32828  01257C  6EE6               	movwf	postinc1,c
 32829                           
 32830                           ;stkvar	_e @ sp[(-58)+34]
 32831  01257E  0EE8               	movlw	-24
 32832  012580  006F FF8F FFE6     	movff	plusw1,postinc1
 32833  012586  006F FF8F FFE6     	movff	plusw1,postinc1
 32834  01258C  EC43  F0FE         	call	___awmod	;wreg free
 32835  012590  502A               	movf	btemp^0,w,c
 32836  012592  0F30               	addlw	48
 32837  012594  6EDF               	movwf	indf2,c
 32838                           
 32839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 32840  012596  0E0A               	movlw	10
 32841  012598  6EE6               	movwf	postinc1,c
 32842  01259A  0E00               	movlw	0
 32843  01259C  6EE6               	movwf	postinc1,c
 32844                           
 32845                           ;stkvar	_e @ sp[(-58)+34]
 32846  01259E  0EE8               	movlw	-24
 32847  0125A0  006F FF8F FFE6     	movff	plusw1,postinc1
 32848  0125A6  006F FF8F FFE6     	movff	plusw1,postinc1
 32849  0125AC  EC14  F0FA         	call	___awdiv	;wreg free
 32850                           
 32851                           ;stkvar	_e @ sp[(-56)+34]
 32852  0125B0  0EEA               	movlw	-22
 32853  0125B2  0060  F0AB  FFE3   	movff	btemp,plusw1
 32854  0125B8  0EEB               	movlw	-21
 32855  0125BA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32856                           
 32857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 32858                           ;stkvar	_p @ sp[(-56)+40]
 32859  0125C0  50E1               	movf	fsr1l,w,c
 32860  0125C2  0FF0               	addlw	-16
 32861  0125C4  6ED9               	movwf	fsr2l,c
 32862  0125C6  50E2               	movf	fsr1h,w,c
 32863  0125C8  6EDA               	movwf	fsr2h,c
 32864  0125CA  0EFF               	movlw	255
 32865  0125CC  22DA               	addwfc	fsr2h,f,c
 32866  0125CE  06DE               	decf	postinc2,f,c
 32867  0125D0  0E00               	movlw	0
 32868  0125D2  5ADD               	subwfb	postdec2,f,c
 32869                           
 32870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 32871                           ;stkvar	_w @ sp[(-56)+38]
 32872  0125D4  50E1               	movf	fsr1l,w,c
 32873  0125D6  0FEE               	addlw	-18
 32874  0125D8  6ED9               	movwf	fsr2l,c
 32875  0125DA  50E2               	movf	fsr1h,w,c
 32876  0125DC  6EDA               	movwf	fsr2h,c
 32877  0125DE  0EFF               	movlw	255
 32878  0125E0  22DA               	addwfc	fsr2h,f,c
 32879  0125E2  06DE               	decf	postinc2,f,c
 32880  0125E4  0E00               	movlw	0
 32881  0125E6  5ADD               	subwfb	postdec2,f,c
 32882  0125E8                     l16063:
 32883                           
 32884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 32885                           ;stkvar	_e @ sp[(-56)+34]
 32886  0125E8  0EEA               	movlw	-22
 32887  0125EA  006F FF8C  F02A    	movff	plusw1,btemp
 32888  0125F0  0EEB               	movlw	-21
 32889  0125F2  50E3               	movf	plusw1,w,c
 32890  0125F4  102A               	iorwf	btemp^0,w,c
 32891  0125F6  A4D8               	btfss	status,2,c
 32892  0125F8  D7A6               	goto	l16053
 32893                           
 32894                           ;stkvar	_p @ sp[(-56)+40]
 32895  0125FA  0EF1               	movlw	-15
 32896  0125FC  BEE3               	btfsc	plusw1,7,c
 32897  0125FE  D007               	goto	u15340
 32898  012600  0EF1               	movlw	-15
 32899  012602  50E3               	movf	plusw1,w,c
 32900  012604  E1A0               	bnz	l16053
 32901  012606  0EF0               	movlw	-16
 32902  012608  04E3               	decf	plusw1,w,c
 32903  01260A  B0D8               	btfsc	status,0,c
 32904  01260C  D79C               	goto	l16053
 32905  01260E                     u15340:
 32906                           
 32907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 32908                           ;stkvar	_i @ sp[(-56)+36]
 32909  01260E  50E1               	movf	fsr1l,w,c
 32910  012610  0FEC               	addlw	-20
 32911  012612  6ED9               	movwf	fsr2l,c
 32912  012614  50E2               	movf	fsr1h,w,c
 32913  012616  6EDA               	movwf	fsr2h,c
 32914  012618  0EFF               	movlw	255
 32915  01261A  22DA               	addwfc	fsr2h,f,c
 32916  01261C  06DE               	decf	postinc2,f,c
 32917  01261E  0E00               	movlw	0
 32918  012620  5ADD               	subwfb	postdec2,f,c
 32919                           
 32920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 32921                           ;stkvar	_sign @ sp[(-56)+42]
 32922  012622  0EF2               	movlw	-14
 32923  012624  006F FF8C  F02A    	movff	plusw1,btemp
 32924  01262A  0EF3               	movlw	-13
 32925  01262C  50E3               	movf	plusw1,w,c
 32926  01262E  102A               	iorwf	btemp^0,w,c
 32927  012630  A4D8               	btfss	status,2,c
 32928  012632  D002               	goto	l16073
 32929  012634  0E2B               	movlw	43
 32930  012636  D001               	goto	L34
 32931  012638                     l16073:
 32932  012638  0E2D               	movlw	45
 32933  01263A                     L34:
 32934  01263A  6E34               	movwf	(btemp+10)^0,c
 32935  01263C  0E00               	movlw	0
 32936  01263E  6E35               	movwf	(btemp+11)^0,c
 32937                           
 32938                           ;stkvar	_efgtoa$6646 @ sp[(-56)+4]
 32939  012640  0ECC               	movlw	-52
 32940  012642  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32941  012648  0ECD               	movlw	-51
 32942  01264A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32943                           
 32944                           ;stkvar	_efgtoa$6646 @ sp[(-56)+4]
 32945                           ;stkvar	_i @ sp[(-56)+36]
 32946  012650  0EEC               	movlw	-20
 32947  012652  006F FF8C  F034    	movff	plusw1,btemp+10
 32948  012658  0EED               	movlw	-19
 32949  01265A  006F FF8C  F035    	movff	plusw1,btemp+11
 32950  012660  0E54               	movlw	low _dbuf
 32951  012662  2434               	addwf	(btemp+10)^0,w,c
 32952  012664  6ED9               	movwf	fsr2l,c
 32953  012666  0E03               	movlw	high _dbuf
 32954  012668  2035               	addwfc	(btemp+11)^0,w,c
 32955  01266A  6EDA               	movwf	fsr2h,c
 32956  01266C  0ECC               	movlw	-52
 32957  01266E  006F FF8F FFDF     	movff	plusw1,indf2
 32958                           
 32959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 32960                           ;stkvar	_w @ sp[(-56)+38]
 32961  012674  50E1               	movf	fsr1l,w,c
 32962  012676  0FEE               	addlw	-18
 32963  012678  6ED9               	movwf	fsr2l,c
 32964  01267A  50E2               	movf	fsr1h,w,c
 32965  01267C  6EDA               	movwf	fsr2h,c
 32966  01267E  0EFF               	movlw	255
 32967  012680  22DA               	addwfc	fsr2h,f,c
 32968  012682  06DE               	decf	postinc2,f,c
 32969  012684  0E00               	movlw	0
 32970  012686  5ADD               	subwfb	postdec2,f,c
 32971                           
 32972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 32973                           ;stkvar	_i @ sp[(-56)+36]
 32974  012688  50E1               	movf	fsr1l,w,c
 32975  01268A  0FEC               	addlw	-20
 32976  01268C  6ED9               	movwf	fsr2l,c
 32977  01268E  50E2               	movf	fsr1h,w,c
 32978  012690  6EDA               	movwf	fsr2h,c
 32979  012692  0EFF               	movlw	255
 32980  012694  22DA               	addwfc	fsr2h,f,c
 32981  012696  06DE               	decf	postinc2,f,c
 32982  012698  0E00               	movlw	0
 32983  01269A  5ADD               	subwfb	postdec2,f,c
 32984  01269C  0EBF               	movlw	191
 32985  01269E  6E34               	movwf	(btemp+10)^0,c
 32986  0126A0  0EFF               	movlw	255
 32987  0126A2  6E35               	movwf	(btemp+11)^0,c
 32988                           
 32989                           ;stkvar	_c @ sp[(-56)+-7]
 32990  0126A4  0EC1               	movlw	-63
 32991  0126A6  50E3               	movf	plusw1,w,c
 32992  0126A8  6E32               	movwf	(btemp+8)^0,c
 32993  0126AA  6A33               	clrf	(btemp+9)^0,c
 32994  0126AC  5034               	movf	(btemp+10)^0,w,c
 32995  0126AE  2632               	addwf	(btemp+8)^0,f,c
 32996  0126B0  5035               	movf	(btemp+11)^0,w,c
 32997  0126B2  2233               	addwfc	(btemp+9)^0,f,c
 32998  0126B4  5033               	movf	(btemp+9)^0,w,c
 32999  0126B6  E106               	bnz	u15360
 33000  0126B8  0E1A               	movlw	26
 33001  0126BA  5C32               	subwf	(btemp+8)^0,w,c
 33002  0126BC  B0D8               	btfsc	status,0,c
 33003  0126BE  D002               	goto	u15360
 33004  0126C0  0E01               	movlw	1
 33005  0126C2  D001               	goto	u15370
 33006  0126C4                     u15360:
 33007  0126C4  0E00               	movlw	0
 33008  0126C6                     u15370:
 33009  0126C6  6E34               	movwf	(btemp+10)^0,c
 33010  0126C8  6A35               	clrf	(btemp+11)^0,c
 33011                           
 33012                           ;stkvar	_efgtoa$6648 @ sp[(-56)+0]
 33013  0126CA  0EC8               	movlw	-56
 33014  0126CC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33015  0126D2  0EC9               	movlw	-55
 33016  0126D4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33017                           
 33018                           ;stkvar	_efgtoa$6648 @ sp[(-56)+0]
 33019  0126DA  0EC8               	movlw	-56
 33020  0126DC  006F FF8C  F02A    	movff	plusw1,btemp
 33021  0126E2  0EC9               	movlw	-55
 33022  0126E4  50E3               	movf	plusw1,w,c
 33023  0126E6  102A               	iorwf	btemp^0,w,c
 33024  0126E8  A4D8               	btfss	status,2,c
 33025  0126EA  D002               	goto	l16089
 33026  0126EC  0E65               	movlw	101
 33027  0126EE  D001               	goto	L35
 33028  0126F0                     l16089:
 33029  0126F0  0E45               	movlw	69
 33030  0126F2                     L35:
 33031  0126F2  6E34               	movwf	(btemp+10)^0,c
 33032  0126F4  0E00               	movlw	0
 33033  0126F6  6E35               	movwf	(btemp+11)^0,c
 33034                           
 33035                           ;stkvar	_efgtoa$6647 @ sp[(-56)+2]
 33036  0126F8  0ECA               	movlw	-54
 33037  0126FA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33038  012700  0ECB               	movlw	-53
 33039  012702  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33040                           
 33041                           ;stkvar	_efgtoa$6647 @ sp[(-56)+2]
 33042                           ;stkvar	_i @ sp[(-56)+36]
 33043  012708  0EEC               	movlw	-20
 33044  01270A  006F FF8C  F034    	movff	plusw1,btemp+10
 33045  012710  0EED               	movlw	-19
 33046  012712  006F FF8C  F035    	movff	plusw1,btemp+11
 33047  012718  0E54               	movlw	low _dbuf
 33048  01271A  2434               	addwf	(btemp+10)^0,w,c
 33049  01271C  6ED9               	movwf	fsr2l,c
 33050  01271E  0E03               	movlw	high _dbuf
 33051  012720  2035               	addwfc	(btemp+11)^0,w,c
 33052  012722  6EDA               	movwf	fsr2h,c
 33053  012724  0ECA               	movlw	-54
 33054  012726  006F FF8F FFDF     	movff	plusw1,indf2
 33055                           
 33056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 33057                           ;stkvar	_w @ sp[(-56)+38]
 33058  01272C  50E1               	movf	fsr1l,w,c
 33059  01272E  0FEE               	addlw	-18
 33060  012730  6ED9               	movwf	fsr2l,c
 33061  012732  50E2               	movf	fsr1h,w,c
 33062  012734  6EDA               	movwf	fsr2h,c
 33063  012736  0EFF               	movlw	255
 33064  012738  22DA               	addwfc	fsr2h,f,c
 33065  01273A  06DE               	decf	postinc2,f,c
 33066  01273C  0E00               	movlw	0
 33067  01273E  5ADD               	subwfb	postdec2,f,c
 33068                           
 33069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 33070                           ;stkvar	_i @ sp[(-56)+36]
 33071  012740  0EEC               	movlw	-20
 33072  012742  006F FF8C  F034    	movff	plusw1,btemp+10
 33073  012748  0EED               	movlw	-19
 33074  01274A  006F FF8C  F035    	movff	plusw1,btemp+11
 33075  012750  0E54               	movlw	low _dbuf
 33076  012752  2434               	addwf	(btemp+10)^0,w,c
 33077  012754  6E32               	movwf	(btemp+8)^0,c
 33078  012756  0E03               	movlw	high _dbuf
 33079  012758  2035               	addwfc	(btemp+11)^0,w,c
 33080  01275A  6E33               	movwf	(btemp+9)^0,c
 33081  01275C  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 33082  012762  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 33083                           
 33084                           ;stkvar	_n @ sp[(-58)+32]
 33085  012768  0E54               	movlw	low _dbuf
 33086  01276A  6E34               	movwf	(btemp+10)^0,c
 33087  01276C  0E03               	movlw	high _dbuf
 33088  01276E  6E35               	movwf	(btemp+11)^0,c
 33089  012770  0EE6               	movlw	-26
 33090  012772  50E3               	movf	plusw1,w,c
 33091  012774  2634               	addwf	(btemp+10)^0,f,c
 33092  012776  0EE7               	movlw	-25
 33093  012778  50E3               	movf	plusw1,w,c
 33094  01277A  2235               	addwfc	(btemp+11)^0,f,c
 33095  01277C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 33096  012782  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 33097  012788  EC9C  F003         	call	_strcpy	;wreg free
 33098  01278C  EFC1  F08B         	goto	l15841
 33099  012790                     l2532:
 33100                           
 33101                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 33102  012790  0EC1               	movlw	193
 33103  012792  26E1               	addwf	fsr1l,f,c
 33104  012794  0EFF               	movlw	255
 33105  012796  22E2               	addwfc	fsr1h,f,c
 33106  012798  0012               	return		;funcret
 33107  01279A                     __end_of_efgtoa:
 33108                           	opt callstack 0
 33109                           
 33110 ;; *************** function _tolower *****************
 33111 ;; Defined at:
 33112 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 33113 ;; Parameters:    Size  Location     Type
 33114 ;;  c               2  [STACK] int 
 33115 ;; Auto vars:     Size  Location     Type
 33116 ;;		None
 33117 ;; Return value:  Size  Location     Type
 33118 ;;                  2  [STACK] int 
 33119 ;; Registers used:
 33120 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 33121 ;; Tracked objects:
 33122 ;;		On entry : 0/0
 33123 ;;		On exit  : 0/0
 33124 ;;		Unchanged: 0/0
 33125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33130 ;;Total ram usage:        0 bytes
 33131 ;; Hardware stack levels used:    1
 33132 ;; Hardware stack levels required when called:   16
 33133 ;; This function calls:
 33134 ;;		_isupper
 33135 ;; This function is called by:
 33136 ;;		_efgtoa
 33137 ;;		_vfpfcnvrt
 33138 ;; This function uses a reentrant model
 33139 ;;
 33140                           
 33141                           	psect	text106
 33142  001648                     __ptext106:
 33143                           	opt callstack 0
 33144  001648                     _tolower:
 33145                           	opt callstack 0
 33146                           
 33147                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33148  001648  52E6               	movf	postinc1,f,c
 33149  00164A  52E6               	movf	postinc1,f,c
 33150                           
 33151                           ;stkvar	_c @ sp[(-2)+-2]
 33152                           
 33153                           ;incstack = 0
 33154 ;; hardware stack exceeded
 33155  00164C  0EFC               	movlw	-4
 33156  00164E  50E3               	movf	plusw1,w,c
 33157  001650  0FBF               	addlw	191
 33158  001652  6E34               	movwf	(btemp+10)^0,c
 33159  001654  0EFD               	movlw	-3
 33160  001656  006F FF8C  F035    	movff	plusw1,btemp+11
 33161  00165C  0EFF               	movlw	255
 33162  00165E  2235               	addwfc	(btemp+11)^0,f,c
 33163  001660  5035               	movf	(btemp+11)^0,w,c
 33164  001662  E106               	bnz	u7920
 33165  001664  0E1A               	movlw	26
 33166  001666  5C34               	subwf	(btemp+10)^0,w,c
 33167  001668  B0D8               	btfsc	status,0,c
 33168  00166A  D002               	goto	u7920
 33169  00166C  0E01               	movlw	1
 33170  00166E  D001               	goto	u7930
 33171  001670                     u7920:
 33172  001670  0E00               	movlw	0
 33173  001672                     u7930:
 33174  001672  6E34               	movwf	(btemp+10)^0,c
 33175  001674  6A35               	clrf	(btemp+11)^0,c
 33176                           
 33177                           ;stkvar	_tolower$7602 @ sp[(-2)+0]
 33178  001676  0EFE               	movlw	-2
 33179  001678  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33180  00167E  0EFF               	movlw	-1
 33181  001680  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33182                           
 33183                           ;stkvar	_tolower$7602 @ sp[(-2)+0]
 33184  001686  0EFE               	movlw	-2
 33185  001688  006F FF8C  F02A    	movff	plusw1,btemp
 33186  00168E  0EFF               	movlw	-1
 33187  001690  50E3               	movf	plusw1,w,c
 33188  001692  102A               	iorwf	btemp^0,w,c
 33189  001694  B4D8               	btfsc	status,2,c
 33190  001696  D00D               	goto	l10213
 33191                           
 33192                           ;stkvar	_c @ sp[(-2)+-2]
 33193  001698  0EFC               	movlw	-4
 33194  00169A  006F FF8C  F02A    	movff	plusw1,btemp
 33195  0016A0  0EFD               	movlw	-3
 33196  0016A2  006F FF8C  F02B    	movff	plusw1,btemp+1
 33197  0016A8  0E20               	movlw	32
 33198  0016AA  122A               	iorwf	btemp^0,f,c
 33199  0016AC  0E00               	movlw	0
 33200  0016AE  122B               	iorwf	(btemp+1)^0,f,c
 33201  0016B0  D008               	goto	l3834
 33202  0016B2                     l10213:
 33203                           
 33204                           ;stkvar	_c @ sp[(-2)+-2]
 33205  0016B2  0EFC               	movlw	-4
 33206  0016B4  006F FF8C  F02A    	movff	plusw1,btemp
 33207  0016BA  0EFD               	movlw	-3
 33208  0016BC  006F FF8C  F02B    	movff	plusw1,btemp+1
 33209  0016C2                     l3834:
 33210                           
 33211                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 33212  0016C2  52E5               	movf	postdec1,f,c
 33213  0016C4  52E5               	movf	postdec1,f,c
 33214  0016C6  52E5               	movf	postdec1,f,c
 33215  0016C8  52E5               	movf	postdec1,f,c
 33216  0016CA  0012               	return		;funcret
 33217  0016CC                     __end_of_tolower:
 33218                           	opt callstack 0
 33219                           
 33220 ;; *************** function _isupper *****************
 33221 ;; Defined at:
 33222 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 33223 ;; Parameters:    Size  Location     Type
 33224 ;;  c               2  [STACK] int 
 33225 ;; Auto vars:     Size  Location     Type
 33226 ;;		None
 33227 ;; Return value:  Size  Location     Type
 33228 ;;                  2  [STACK] int 
 33229 ;; Registers used:
 33230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 33231 ;; Tracked objects:
 33232 ;;		On entry : 0/0
 33233 ;;		On exit  : 0/0
 33234 ;;		Unchanged: 0/0
 33235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33240 ;;Total ram usage:        0 bytes
 33241 ;; Hardware stack levels used:    1
 33242 ;; Hardware stack levels required when called:   15
 33243 ;; This function calls:
 33244 ;;		Nothing
 33245 ;; This function is called by:
 33246 ;;		_efgtoa
 33247 ;;		_xtoa
 33248 ;;		_vfpfcnvrt
 33249 ;;		_tolower
 33250 ;; This function uses a reentrant model
 33251 ;;
 33252                           
 33253                           	psect	text107
 33254  0027C6                     __ptext107:
 33255                           	opt callstack 0
 33256  0027C6                     _isupper:
 33257                           	opt callstack 0
 33258                           
 33259                           ;stkvar	_c @ sp[(0)+-2]
 33260                           
 33261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33262                           ;incstack = 0
 33263 ;; hardware stack exceeded
 33264  0027C6  0EFE               	movlw	-2
 33265  0027C8  50E3               	movf	plusw1,w,c
 33266  0027CA  0FBF               	addlw	191
 33267  0027CC  6E34               	movwf	(btemp+10)^0,c
 33268  0027CE  0EFF               	movlw	-1
 33269  0027D0  006F FF8C  F035    	movff	plusw1,btemp+11
 33270  0027D6  0EFF               	movlw	255
 33271  0027D8  2235               	addwfc	(btemp+11)^0,f,c
 33272  0027DA  5035               	movf	(btemp+11)^0,w,c
 33273  0027DC  E106               	bnz	u7260
 33274  0027DE  0E1A               	movlw	26
 33275  0027E0  5C34               	subwf	(btemp+10)^0,w,c
 33276  0027E2  B0D8               	btfsc	status,0,c
 33277  0027E4  D002               	goto	u7260
 33278  0027E6  0E01               	movlw	1
 33279  0027E8  D001               	goto	u7270
 33280  0027EA                     u7260:
 33281  0027EA  0E00               	movlw	0
 33282  0027EC                     u7270:
 33283  0027EC  6E2A               	movwf	btemp^0,c
 33284  0027EE  6A2B               	clrf	(btemp+1)^0,c
 33285                           
 33286                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 33287  0027F0  52E5               	movf	postdec1,f,c
 33288  0027F2  52E5               	movf	postdec1,f,c
 33289  0027F4  0012               	return		;funcret
 33290  0027F6                     __end_of_isupper:
 33291                           	opt callstack 0
 33292                           
 33293 ;; *************** function _strcpy *****************
 33294 ;; Defined at:
 33295 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 33296 ;; Parameters:    Size  Location     Type
 33297 ;;  dest            2  [STACK] PTR unsigned char 
 33298 ;;		 -> dbuf(80), 
 33299 ;;  src             2  [STACK] PTR const unsigned char 
 33300 ;;		 -> STR_109(4), STR_108(4), STR_105(4), STR_104(4), 
 33301 ;;		 -> dbuf(80), 
 33302 ;; Auto vars:     Size  Location     Type
 33303 ;;  d               2  [STACK] PTR unsigned char 
 33304 ;;		 -> dbuf(80), 
 33305 ;;  s               2  [STACK] PTR const unsigned char 
 33306 ;;		 -> STR_109(4), STR_108(4), STR_105(4), STR_104(4), 
 33307 ;;		 -> dbuf(80), 
 33308 ;; Return value:  Size  Location     Type
 33309 ;;                  2  [STACK] PTR unsigned char 
 33310 ;; Registers used:
 33311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 33312 ;; Tracked objects:
 33313 ;;		On entry : 0/0
 33314 ;;		On exit  : 0/0
 33315 ;;		Unchanged: 0/0
 33316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33321 ;;Total ram usage:        0 bytes
 33322 ;; Hardware stack levels used:    1
 33323 ;; Hardware stack levels required when called:   15
 33324 ;; This function calls:
 33325 ;;		Nothing
 33326 ;; This function is called by:
 33327 ;;		_efgtoa
 33328 ;; This function uses a reentrant model
 33329 ;;
 33330                           
 33331                           	psect	text108
 33332  000738                     __ptext108:
 33333                           	opt callstack 0
 33334  000738                     _strcpy:
 33335                           	opt callstack 0
 33336                           
 33337                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33338  000738  52E6               	movf	postinc1,f,c
 33339  00073A  52E6               	movf	postinc1,f,c
 33340  00073C  52E6               	movf	postinc1,f,c
 33341  00073E  52E6               	movf	postinc1,f,c
 33342                           
 33343                           ;stkvar	_src @ sp[(-4)+-4]
 33344                           
 33345                           ;incstack = 0
 33346 ;; hardware stack exceeded
 33347  000740  0EF8               	movlw	-8
 33348  000742  006F FF8C  F034    	movff	plusw1,btemp+10
 33349  000748  0EF9               	movlw	-7
 33350  00074A  006F FF8C  F035    	movff	plusw1,btemp+11
 33351                           
 33352                           ;stkvar	_s @ sp[(-4)+2]
 33353  000750  0EFF               	movlw	-1
 33354  000752  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33355  000758  0EFE               	movlw	-2
 33356  00075A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33357                           
 33358                           ;stkvar	_dest @ sp[(-4)+-2]
 33359  000760  0EFA               	movlw	-6
 33360  000762  006F FF8C  F034    	movff	plusw1,btemp+10
 33361  000768  0EFB               	movlw	-5
 33362  00076A  006F FF8C  F035    	movff	plusw1,btemp+11
 33363                           
 33364                           ;stkvar	_d @ sp[(-4)+0]
 33365  000770  0EFD               	movlw	-3
 33366  000772  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33367  000778  0EFC               	movlw	-4
 33368  00077A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33369  000780                     l15625:
 33370                           
 33371                           ;stkvar	_s @ sp[(-4)+2]
 33372  000780  50E1               	movf	fsr1l,w,c
 33373  000782  0FFE               	addlw	-2
 33374  000784  6ED9               	movwf	fsr2l,c
 33375  000786  50E2               	movf	fsr1h,w,c
 33376  000788  6EDA               	movwf	fsr2h,c
 33377  00078A  0EFF               	movlw	255
 33378  00078C  22DA               	addwfc	fsr2h,f,c
 33379  00078E  006F FF7C  F034    	movff	indf2,btemp+10
 33380  000794  0E01               	movlw	1
 33381  000796  26DE               	addwf	postinc2,f,c
 33382  000798  006F FF7C  F035    	movff	indf2,btemp+11
 33383  00079E  0E00               	movlw	0
 33384  0007A0  22DD               	addwfc	postdec2,f,c
 33385  0007A2  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 33386  0007A8  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 33387  0007AE  0E00               	movlw	low (__mediumconst shr (0+16))
 33388  0007B0  6EF8               	movwf	tblptru,c
 33389                           
 33390                           ;stkvar	_d @ sp[(-4)+0]
 33391  0007B2  50E1               	movf	fsr1l,w,c
 33392  0007B4  0FFC               	addlw	-4
 33393  0007B6  6ED9               	movwf	fsr2l,c
 33394  0007B8  50E2               	movf	fsr1h,w,c
 33395  0007BA  6EDA               	movwf	fsr2h,c
 33396  0007BC  0EFF               	movlw	255
 33397  0007BE  22DA               	addwfc	fsr2h,f,c
 33398  0007C0  006F FF7C  F034    	movff	indf2,btemp+10
 33399  0007C6  0E01               	movlw	1
 33400  0007C8  26DE               	addwf	postinc2,f,c
 33401  0007CA  006F FF7C  F035    	movff	indf2,btemp+11
 33402  0007D0  0E00               	movlw	0
 33403  0007D2  22DD               	addwfc	postdec2,f,c
 33404  0007D4  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 33405  0007DA  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 33406  0007E0  0E1F               	movlw	(high __ramtop+-1)
 33407  0007E2  64F7               	cpfsgt	tblptrh,c
 33408  0007E4  D003               	bra	u14527
 33409  0007E6  0008               	tblrd		*
 33410  0007E8  50F5               	movf	tablat,w,c
 33411  0007EA  D007               	bra	u14520
 33412  0007EC                     u14527:
 33413  0007EC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 33414  0007F2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 33415  0007F8  50EF               	movf	indf0,w,c
 33416  0007FA                     u14520:
 33417  0007FA  6EDF               	movwf	indf2,c
 33418  0007FC  50DF               	movf	indf2,w,c
 33419  0007FE  A4D8               	btfss	status,2,c
 33420  000800  D7BF               	goto	l15625
 33421                           
 33422                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 33423  000802  0EF8               	movlw	248
 33424  000804  26E1               	addwf	fsr1l,f,c
 33425  000806  0EFF               	movlw	255
 33426  000808  22E2               	addwfc	fsr1h,f,c
 33427  00080A  0012               	return		;funcret
 33428  00080C                     __end_of_strcpy:
 33429                           	opt callstack 0
 33430                           
 33431 ;; *************** function _floorf *****************
 33432 ;; Defined at:
 33433 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 33434 ;; Parameters:    Size  Location     Type
 33435 ;;  x               4  [STACK] float 
 33436 ;; Auto vars:     Size  Location     Type
 33437 ;;  u               4  [STACK] struct .
 33438 ;;  m               4  [STACK] unsigned long 
 33439 ;;  e               2  [STACK] int 
 33440 ;; Return value:  Size  Location     Type
 33441 ;;                  4  [STACK] float 
 33442 ;; Registers used:
 33443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 33444 ;; Tracked objects:
 33445 ;;		On entry : 0/0
 33446 ;;		On exit  : 0/0
 33447 ;;		Unchanged: 0/0
 33448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33453 ;;Total ram usage:        0 bytes
 33454 ;; Hardware stack levels used:    1
 33455 ;; Hardware stack levels required when called:   15
 33456 ;; This function calls:
 33457 ;;		Nothing
 33458 ;; This function is called by:
 33459 ;;		_efgtoa
 33460 ;; This function uses a reentrant model
 33461 ;;
 33462                           
 33463                           	psect	text109
 33464  01A644                     __ptext109:
 33465                           	opt callstack 0
 33466  01A644                     _floorf:
 33467                           	opt callstack 0
 33468                           
 33469                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 33470  01A644  0E0A               	movlw	10
 33471  01A646  26E1               	addwf	fsr1l,f,c
 33472  01A648  0E00               	movlw	0
 33473  01A64A  22E2               	addwfc	fsr1h,f,c
 33474                           
 33475                           ;incstack = 0
 33476 ;; hardware stack exceeded
 33477  01A64C  0060  F1D0  F032   	movff	floorf@F524,btemp+8
 33478  01A652  0060  F1D4  F033   	movff	floorf@F524+1,btemp+9
 33479  01A658  0060  F1D8  F034   	movff	floorf@F524+2,btemp+10
 33480  01A65E  0060  F1DC  F035   	movff	floorf@F524+3,btemp+11
 33481                           
 33482                           ;stkvar	_u @ sp[(-10)+0]
 33483  01A664  0EF6               	movlw	-10
 33484  01A666  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33485  01A66C  0EF7               	movlw	-9
 33486  01A66E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33487  01A674  0EF8               	movlw	-8
 33488  01A676  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33489  01A67C  0EF9               	movlw	-7
 33490  01A67E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33491                           
 33492                           ;stkvar	_x @ sp[(-10)+-4]
 33493  01A684  0EF2               	movlw	-14
 33494  01A686  006F FF8C  F032    	movff	plusw1,btemp+8
 33495  01A68C  0EF3               	movlw	-13
 33496  01A68E  006F FF8C  F033    	movff	plusw1,btemp+9
 33497  01A694  0EF4               	movlw	-12
 33498  01A696  006F FF8C  F034    	movff	plusw1,btemp+10
 33499  01A69C  0EF5               	movlw	-11
 33500  01A69E  006F FF8C  F035    	movff	plusw1,btemp+11
 33501                           
 33502                           ;stkvar	_u @ sp[(-10)+0]
 33503  01A6A4  0EF6               	movlw	-10
 33504  01A6A6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33505  01A6AC  0EF7               	movlw	-9
 33506  01A6AE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33507  01A6B4  0EF8               	movlw	-8
 33508  01A6B6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33509  01A6BC  0EF9               	movlw	-7
 33510  01A6BE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33511  01A6C4  0E81               	movlw	129
 33512  01A6C6  6E34               	movwf	(btemp+10)^0,c
 33513  01A6C8  0EFF               	movlw	255
 33514  01A6CA  6E35               	movwf	(btemp+11)^0,c
 33515                           
 33516                           ;stkvar	_u @ sp[(-10)+0]
 33517  01A6CC  0EF6               	movlw	-10
 33518  01A6CE  006F FF8C  F02E    	movff	plusw1,btemp+4
 33519  01A6D4  0EF7               	movlw	-9
 33520  01A6D6  006F FF8C  F02F    	movff	plusw1,btemp+5
 33521  01A6DC  0EF8               	movlw	-8
 33522  01A6DE  006F FF8C  F030    	movff	plusw1,btemp+6
 33523  01A6E4  0EF9               	movlw	-7
 33524  01A6E6  006F FF8C  F031    	movff	plusw1,btemp+7
 33525  01A6EC  0E18               	movlw	24
 33526  01A6EE  D005               	goto	u7950
 33527  01A6F0                     u7955:
 33528  01A6F0  90D8               	bcf	status,0,c
 33529  01A6F2  3231               	rrcf	(btemp+7)^0,f,c
 33530  01A6F4  3230               	rrcf	(btemp+6)^0,f,c
 33531  01A6F6  322F               	rrcf	(btemp+5)^0,f,c
 33532  01A6F8  322E               	rrcf	(btemp+4)^0,f,c
 33533  01A6FA                     u7950:
 33534  01A6FA  2EE8               	decfsz	wreg,f,c
 33535  01A6FC  D7F9               	goto	u7955
 33536  01A6FE  0060  F0B8  F032   	movff	btemp+4,btemp+8
 33537  01A704  0060  F0BC  F033   	movff	btemp+5,btemp+9
 33538  01A70A  0EFF               	movlw	255
 33539  01A70C  1632               	andwf	(btemp+8)^0,f,c
 33540  01A70E  0E00               	movlw	0
 33541  01A710  1633               	andwf	(btemp+9)^0,f,c
 33542  01A712  5034               	movf	(btemp+10)^0,w,c
 33543  01A714  2632               	addwf	(btemp+8)^0,f,c
 33544  01A716  5035               	movf	(btemp+11)^0,w,c
 33545  01A718  2233               	addwfc	(btemp+9)^0,f,c
 33546                           
 33547                           ;stkvar	_e @ sp[(-10)+8]
 33548  01A71A  0EFE               	movlw	-2
 33549  01A71C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33550  01A722  0EFF               	movlw	-1
 33551  01A724  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33552                           
 33553                           ;stkvar	_e @ sp[(-10)+8]
 33554  01A72A  0EFF               	movlw	-1
 33555  01A72C  BEE3               	btfsc	plusw1,7,c
 33556  01A72E  D019               	goto	l10227
 33557  01A730  0EFF               	movlw	-1
 33558  01A732  50E3               	movf	plusw1,w,c
 33559  01A734  E108               	bnz	u7960
 33560  01A736  0EFE               	movlw	-2
 33561  01A738  006F FF8C  F02A    	movff	plusw1,btemp
 33562  01A73E  0E17               	movlw	23
 33563  01A740  5E2A               	subwf	btemp^0,f,c
 33564  01A742  A0D8               	btfss	status,0,c
 33565  01A744  D00E               	goto	l10227
 33566  01A746                     u7960:
 33567                           
 33568                           ;stkvar	_x @ sp[(-10)+-4]
 33569  01A746  0EF2               	movlw	-14
 33570  01A748  006F FF8C  F02A    	movff	plusw1,btemp
 33571  01A74E  0EF3               	movlw	-13
 33572  01A750  006F FF8C  F02B    	movff	plusw1,btemp+1
 33573  01A756  0EF4               	movlw	-12
 33574  01A758  006F FF8C  F02C    	movff	plusw1,btemp+2
 33575  01A75E  0EF5               	movlw	-11
 33576  01A760  D11F               	goto	L36
 33577  01A762                     l10227:
 33578                           
 33579                           ;stkvar	_e @ sp[(-10)+8]
 33580  01A762  0EFF               	movlw	-1
 33581  01A764  BEE3               	btfsc	plusw1,7,c
 33582  01A766  D0B4               	goto	l10243
 33583                           
 33584                           ;stkvar	_e @ sp[(-10)+8]
 33585  01A768  0EFE               	movlw	-2
 33586  01A76A  006F FF8C  F035    	movff	plusw1,btemp+11
 33587  01A770  0EFF               	movlw	255
 33588  01A772  6E2E               	movwf	(btemp+4)^0,c
 33589  01A774  0EFF               	movlw	255
 33590  01A776  6E2F               	movwf	(btemp+5)^0,c
 33591  01A778  0E7F               	movlw	127
 33592  01A77A  6E30               	movwf	(btemp+6)^0,c
 33593  01A77C  0E00               	movlw	0
 33594  01A77E  6E31               	movwf	(btemp+7)^0,c
 33595  01A780                     u7985:
 33596  01A780  6635               	tstfsz	(btemp+11)^0,c
 33597  01A782  D001               	goto	u7986
 33598  01A784  D007               	goto	u7987
 33599  01A786                     u7986:
 33600  01A786  3431               	rlcf	(btemp+7)^0,w,c
 33601  01A788  3231               	rrcf	(btemp+7)^0,f,c
 33602  01A78A  3230               	rrcf	(btemp+6)^0,f,c
 33603  01A78C  322F               	rrcf	(btemp+5)^0,f,c
 33604  01A78E  322E               	rrcf	(btemp+4)^0,f,c
 33605  01A790  2E35               	decfsz	(btemp+11)^0,f,c
 33606  01A792  D7F6               	goto	u7985
 33607  01A794                     u7987:
 33608                           
 33609                           ;stkvar	_m @ sp[(-10)+4]
 33610  01A794  0EFA               	movlw	-6
 33611  01A796  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 33612  01A79C  0EFB               	movlw	-5
 33613  01A79E  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 33614  01A7A4  0EFC               	movlw	-4
 33615  01A7A6  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 33616  01A7AC  0EFD               	movlw	-3
 33617  01A7AE  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 33618                           
 33619                           ;stkvar	_m @ sp[(-10)+4]
 33620                           ;stkvar	_u @ sp[(-10)+0]
 33621  01A7B4  0EF6               	movlw	-10
 33622  01A7B6  006F FF8C  F032    	movff	plusw1,btemp+8
 33623  01A7BC  0EF7               	movlw	-9
 33624  01A7BE  006F FF8C  F033    	movff	plusw1,btemp+9
 33625  01A7C4  0EF8               	movlw	-8
 33626  01A7C6  006F FF8C  F034    	movff	plusw1,btemp+10
 33627  01A7CC  0EF9               	movlw	-7
 33628  01A7CE  006F FF8C  F035    	movff	plusw1,btemp+11
 33629  01A7D4  0EFA               	movlw	-6
 33630  01A7D6  50E3               	movf	plusw1,w,c
 33631  01A7D8  1632               	andwf	(btemp+8)^0,f,c
 33632  01A7DA  0EFB               	movlw	-5
 33633  01A7DC  50E3               	movf	plusw1,w,c
 33634  01A7DE  1633               	andwf	(btemp+9)^0,f,c
 33635  01A7E0  0EFC               	movlw	-4
 33636  01A7E2  50E3               	movf	plusw1,w,c
 33637  01A7E4  1634               	andwf	(btemp+10)^0,f,c
 33638  01A7E6  0EFD               	movlw	-3
 33639  01A7E8  50E3               	movf	plusw1,w,c
 33640  01A7EA  1635               	andwf	(btemp+11)^0,f,c
 33641  01A7EC  5032               	movf	(btemp+8)^0,w,c
 33642  01A7EE  1033               	iorwf	(btemp+9)^0,w,c
 33643  01A7F0  1034               	iorwf	(btemp+10)^0,w,c
 33644  01A7F2  1035               	iorwf	(btemp+11)^0,w,c
 33645  01A7F4  B4D8               	btfsc	status,2,c
 33646  01A7F6  D7A7               	goto	u7960
 33647                           
 33648                           ;stkvar	_u @ sp[(-10)+0]
 33649  01A7F8  0EF6               	movlw	-10
 33650  01A7FA  006F FF8C  F032    	movff	plusw1,btemp+8
 33651  01A800  0EF7               	movlw	-9
 33652  01A802  006F FF8C  F033    	movff	plusw1,btemp+9
 33653  01A808  0EF8               	movlw	-8
 33654  01A80A  006F FF8C  F034    	movff	plusw1,btemp+10
 33655  01A810  0EF9               	movlw	-7
 33656  01A812  006F FF8C  F035    	movff	plusw1,btemp+11
 33657  01A818  0E20               	movlw	32
 33658  01A81A  D005               	goto	u8000
 33659  01A81C                     u8005:
 33660  01A81C  90D8               	bcf	status,0,c
 33661  01A81E  3235               	rrcf	(btemp+11)^0,f,c
 33662  01A820  3234               	rrcf	(btemp+10)^0,f,c
 33663  01A822  3233               	rrcf	(btemp+9)^0,f,c
 33664  01A824  3232               	rrcf	(btemp+8)^0,f,c
 33665  01A826                     u8000:
 33666  01A826  2EE8               	decfsz	wreg,f,c
 33667  01A828  D7F9               	goto	u8005
 33668  01A82A  5032               	movf	(btemp+8)^0,w,c
 33669  01A82C  B4D8               	btfsc	status,2,c
 33670  01A82E  D028               	goto	l10241
 33671                           
 33672                           ;stkvar	_m @ sp[(-10)+4]
 33673                           ;stkvar	_u @ sp[(-10)+0]
 33674  01A830  0EF6               	movlw	-10
 33675  01A832  50E3               	movf	plusw1,w,c
 33676  01A834  6E2A               	movwf	btemp^0,c
 33677  01A836  0EFA               	movlw	-6
 33678  01A838  50E3               	movf	plusw1,w,c
 33679  01A83A  262A               	addwf	btemp^0,f,c
 33680  01A83C  0EF6               	movlw	-10
 33681  01A83E  0060  F0AB  FFE3   	movff	btemp,plusw1
 33682  01A844  0EF7               	movlw	-9
 33683  01A846  50E3               	movf	plusw1,w,c
 33684  01A848  6E2A               	movwf	btemp^0,c
 33685  01A84A  0EFB               	movlw	-5
 33686  01A84C  50E3               	movf	plusw1,w,c
 33687  01A84E  222A               	addwfc	btemp^0,f,c
 33688  01A850  0EF7               	movlw	-9
 33689  01A852  0060  F0AB  FFE3   	movff	btemp,plusw1
 33690  01A858  0EF8               	movlw	-8
 33691  01A85A  50E3               	movf	plusw1,w,c
 33692  01A85C  6E2A               	movwf	btemp^0,c
 33693  01A85E  0EFC               	movlw	-4
 33694  01A860  50E3               	movf	plusw1,w,c
 33695  01A862  222A               	addwfc	btemp^0,f,c
 33696  01A864  0EF8               	movlw	-8
 33697  01A866  0060  F0AB  FFE3   	movff	btemp,plusw1
 33698  01A86C  0EF9               	movlw	-7
 33699  01A86E  50E3               	movf	plusw1,w,c
 33700  01A870  6E2A               	movwf	btemp^0,c
 33701  01A872  0EFD               	movlw	-3
 33702  01A874  50E3               	movf	plusw1,w,c
 33703  01A876  222A               	addwfc	btemp^0,f,c
 33704  01A878  0EF9               	movlw	-7
 33705  01A87A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33706  01A880                     l10241:
 33707                           
 33708                           ;stkvar	_m @ sp[(-10)+4]
 33709  01A880  0EFA               	movlw	-6
 33710  01A882  006F FF8C  F032    	movff	plusw1,btemp+8
 33711  01A888  0EFB               	movlw	-5
 33712  01A88A  006F FF8C  F033    	movff	plusw1,btemp+9
 33713  01A890  0EFC               	movlw	-4
 33714  01A892  006F FF8C  F034    	movff	plusw1,btemp+10
 33715  01A898  0EFD               	movlw	-3
 33716  01A89A  006F FF8C  F035    	movff	plusw1,btemp+11
 33717  01A8A0  1C32               	comf	(btemp+8)^0,w,c
 33718  01A8A2  6E2E               	movwf	(btemp+4)^0,c
 33719  01A8A4  1C33               	comf	(btemp+9)^0,w,c
 33720  01A8A6  6E2F               	movwf	(btemp+5)^0,c
 33721  01A8A8  1C34               	comf	(btemp+10)^0,w,c
 33722  01A8AA  6E30               	movwf	(btemp+6)^0,c
 33723  01A8AC  1C35               	comf	(btemp+11)^0,w,c
 33724  01A8AE  6E31               	movwf	(btemp+7)^0,c
 33725                           
 33726                           ;stkvar	_u @ sp[(-10)+0]
 33727  01A8B0  50E1               	movf	fsr1l,w,c
 33728  01A8B2  0FF6               	addlw	-10
 33729  01A8B4  6ED9               	movwf	fsr2l,c
 33730  01A8B6  50E2               	movf	fsr1h,w,c
 33731  01A8B8  6EDA               	movwf	fsr2h,c
 33732  01A8BA  0EFF               	movlw	255
 33733  01A8BC  22DA               	addwfc	fsr2h,f,c
 33734  01A8BE  502E               	movf	(btemp+4)^0,w,c
 33735  01A8C0  16DE               	andwf	postinc2,f,c
 33736  01A8C2  502F               	movf	(btemp+5)^0,w,c
 33737  01A8C4  16DE               	andwf	postinc2,f,c
 33738  01A8C6  5030               	movf	(btemp+6)^0,w,c
 33739  01A8C8  16DE               	andwf	postinc2,f,c
 33740  01A8CA  5031               	movf	(btemp+7)^0,w,c
 33741  01A8CC  16DE               	andwf	postinc2,f,c
 33742  01A8CE  D05B               	goto	l10251
 33743  01A8D0                     l10243:
 33744                           
 33745                           ;stkvar	_u @ sp[(-10)+0]
 33746  01A8D0  0EF6               	movlw	-10
 33747  01A8D2  006F FF8C  F032    	movff	plusw1,btemp+8
 33748  01A8D8  0EF7               	movlw	-9
 33749  01A8DA  006F FF8C  F033    	movff	plusw1,btemp+9
 33750  01A8E0  0EF8               	movlw	-8
 33751  01A8E2  006F FF8C  F034    	movff	plusw1,btemp+10
 33752  01A8E8  0EF9               	movlw	-7
 33753  01A8EA  006F FF8C  F035    	movff	plusw1,btemp+11
 33754  01A8F0  0E20               	movlw	32
 33755  01A8F2  D005               	goto	u8020
 33756  01A8F4                     u8025:
 33757  01A8F4  90D8               	bcf	status,0,c
 33758  01A8F6  3235               	rrcf	(btemp+11)^0,f,c
 33759  01A8F8  3234               	rrcf	(btemp+10)^0,f,c
 33760  01A8FA  3233               	rrcf	(btemp+9)^0,f,c
 33761  01A8FC  3232               	rrcf	(btemp+8)^0,f,c
 33762  01A8FE                     u8020:
 33763  01A8FE  2EE8               	decfsz	wreg,f,c
 33764  01A900  D7F9               	goto	u8025
 33765  01A902  6632               	tstfsz	(btemp+8)^0,c
 33766  01A904  D009               	goto	l10247
 33767                           
 33768                           ;stkvar	_u @ sp[(-10)+0]
 33769  01A906  0EF6               	movlw	-10
 33770  01A908  6AE3               	clrf	plusw1,c
 33771  01A90A  0EF7               	movlw	-9
 33772  01A90C  6AE3               	clrf	plusw1,c
 33773  01A90E  0EF8               	movlw	-8
 33774  01A910  6AE3               	clrf	plusw1,c
 33775  01A912  0EF9               	movlw	-7
 33776  01A914  6AE3               	clrf	plusw1,c
 33777  01A916  D037               	goto	l10251
 33778  01A918                     l10247:
 33779                           
 33780                           ;stkvar	_u @ sp[(-10)+0]
 33781  01A918  0EF6               	movlw	-10
 33782  01A91A  006F FF8C  F032    	movff	plusw1,btemp+8
 33783  01A920  0EF7               	movlw	-9
 33784  01A922  006F FF8C  F033    	movff	plusw1,btemp+9
 33785  01A928  0EF8               	movlw	-8
 33786  01A92A  006F FF8C  F034    	movff	plusw1,btemp+10
 33787  01A930  0EF9               	movlw	-7
 33788  01A932  006F FF8C  F035    	movff	plusw1,btemp+11
 33789  01A938  90D8               	bcf	status,0,c
 33790  01A93A  3432               	rlcf	(btemp+8)^0,w,c
 33791  01A93C  6E2E               	movwf	(btemp+4)^0,c
 33792  01A93E  3433               	rlcf	(btemp+9)^0,w,c
 33793  01A940  6E2F               	movwf	(btemp+5)^0,c
 33794  01A942  3434               	rlcf	(btemp+10)^0,w,c
 33795  01A944  6E30               	movwf	(btemp+6)^0,c
 33796  01A946  3435               	rlcf	(btemp+11)^0,w,c
 33797  01A948  6E31               	movwf	(btemp+7)^0,c
 33798  01A94A  502E               	movf	(btemp+4)^0,w,c
 33799  01A94C  102F               	iorwf	(btemp+5)^0,w,c
 33800  01A94E  1030               	iorwf	(btemp+6)^0,w,c
 33801  01A950  1031               	iorwf	(btemp+7)^0,w,c
 33802  01A952  B4D8               	btfsc	status,2,c
 33803  01A954  D018               	goto	l10251
 33804  01A956  0E00               	movlw	0
 33805  01A958  6E32               	movwf	(btemp+8)^0,c
 33806  01A95A  0E00               	movlw	0
 33807  01A95C  6E33               	movwf	(btemp+9)^0,c
 33808  01A95E  0E80               	movlw	128
 33809  01A960  6E34               	movwf	(btemp+10)^0,c
 33810  01A962  0EBF               	movlw	191
 33811  01A964  6E35               	movwf	(btemp+11)^0,c
 33812                           
 33813                           ;stkvar	_u @ sp[(-10)+0]
 33814  01A966  0EF6               	movlw	-10
 33815  01A968  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33816  01A96E  0EF7               	movlw	-9
 33817  01A970  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33818  01A976  0EF8               	movlw	-8
 33819  01A978  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33820  01A97E  0EF9               	movlw	-7
 33821  01A980  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33822  01A986                     l10251:
 33823                           
 33824                           ;stkvar	_u @ sp[(-10)+0]
 33825  01A986  0EF6               	movlw	-10
 33826  01A988  006F FF8C  F02A    	movff	plusw1,btemp
 33827  01A98E  0EF7               	movlw	-9
 33828  01A990  006F FF8C  F02B    	movff	plusw1,btemp+1
 33829  01A996  0EF8               	movlw	-8
 33830  01A998  006F FF8C  F02C    	movff	plusw1,btemp+2
 33831  01A99E  0EF9               	movlw	-7
 33832  01A9A0                     L36:
 33833  01A9A0  006F FF8C  F02D    	movff	plusw1,btemp+3
 33834                           
 33835                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33836  01A9A6  0EF2               	movlw	242
 33837  01A9A8  26E1               	addwf	fsr1l,f,c
 33838  01A9AA  0EFF               	movlw	255
 33839  01A9AC  22E2               	addwfc	fsr1h,f,c
 33840  01A9AE  0012               	return		;funcret
 33841  01A9B0                     __end_of_floorf:
 33842                           	opt callstack 0
 33843                           
 33844 ;; *************** function ___fpclassifyf *****************
 33845 ;; Defined at:
 33846 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 33847 ;; Parameters:    Size  Location     Type
 33848 ;;  x               4  [STACK] float 
 33849 ;; Auto vars:     Size  Location     Type
 33850 ;;  u               4  [STACK] struct .
 33851 ;;  e               2  [STACK] int 
 33852 ;; Return value:  Size  Location     Type
 33853 ;;                  2  [STACK] int 
 33854 ;; Registers used:
 33855 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 33856 ;; Tracked objects:
 33857 ;;		On entry : 0/0
 33858 ;;		On exit  : 0/0
 33859 ;;		Unchanged: 0/0
 33860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33865 ;;Total ram usage:        0 bytes
 33866 ;; Hardware stack levels used:    1
 33867 ;; Hardware stack levels required when called:   15
 33868 ;; This function calls:
 33869 ;;		Nothing
 33870 ;; This function is called by:
 33871 ;;		_efgtoa
 33872 ;; This function uses a reentrant model
 33873 ;;
 33874                           
 33875                           	psect	text110
 33876  01E14A                     __ptext110:
 33877                           	opt callstack 0
 33878  01E14A                     ___fpclassifyf:
 33879                           	opt callstack 0
 33880                           
 33881                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33882  01E14A  0E06               	movlw	6
 33883  01E14C  26E1               	addwf	fsr1l,f,c
 33884  01E14E  0E00               	movlw	0
 33885  01E150  22E2               	addwfc	fsr1h,f,c
 33886                           
 33887                           ;incstack = 0
 33888 ;; hardware stack exceeded
 33889  01E152  0060  F1F0  F032   	movff	___fpclassifyf@F463,btemp+8
 33890  01E158  0060  F1F4  F033   	movff	___fpclassifyf@F463+1,btemp+9
 33891  01E15E  0060  F1F8  F034   	movff	___fpclassifyf@F463+2,btemp+10
 33892  01E164  0060  F1FC  F035   	movff	___fpclassifyf@F463+3,btemp+11
 33893                           
 33894                           ;stkvar	_u @ sp[(-6)+0]
 33895  01E16A  0EFA               	movlw	-6
 33896  01E16C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33897  01E172  0EFB               	movlw	-5
 33898  01E174  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33899  01E17A  0EFC               	movlw	-4
 33900  01E17C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33901  01E182  0EFD               	movlw	-3
 33902  01E184  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33903                           
 33904                           ;stkvar	_x @ sp[(-6)+-4]
 33905  01E18A  0EF6               	movlw	-10
 33906  01E18C  006F FF8C  F032    	movff	plusw1,btemp+8
 33907  01E192  0EF7               	movlw	-9
 33908  01E194  006F FF8C  F033    	movff	plusw1,btemp+9
 33909  01E19A  0EF8               	movlw	-8
 33910  01E19C  006F FF8C  F034    	movff	plusw1,btemp+10
 33911  01E1A2  0EF9               	movlw	-7
 33912  01E1A4  006F FF8C  F035    	movff	plusw1,btemp+11
 33913                           
 33914                           ;stkvar	_u @ sp[(-6)+0]
 33915  01E1AA  0EFA               	movlw	-6
 33916  01E1AC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33917  01E1B2  0EFB               	movlw	-5
 33918  01E1B4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33919  01E1BA  0EFC               	movlw	-4
 33920  01E1BC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33921  01E1C2  0EFD               	movlw	-3
 33922  01E1C4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33923                           
 33924                           ;stkvar	_u @ sp[(-6)+0]
 33925  01E1CA  0EFA               	movlw	-6
 33926  01E1CC  006F FF8C  F032    	movff	plusw1,btemp+8
 33927  01E1D2  0EFB               	movlw	-5
 33928  01E1D4  006F FF8C  F033    	movff	plusw1,btemp+9
 33929  01E1DA  0EFC               	movlw	-4
 33930  01E1DC  006F FF8C  F034    	movff	plusw1,btemp+10
 33931  01E1E2  0EFD               	movlw	-3
 33932  01E1E4  006F FF8C  F035    	movff	plusw1,btemp+11
 33933  01E1EA  0E18               	movlw	24
 33934  01E1EC  D005               	goto	u7830
 33935  01E1EE                     u7835:
 33936  01E1EE  90D8               	bcf	status,0,c
 33937  01E1F0  3235               	rrcf	(btemp+11)^0,f,c
 33938  01E1F2  3234               	rrcf	(btemp+10)^0,f,c
 33939  01E1F4  3233               	rrcf	(btemp+9)^0,f,c
 33940  01E1F6  3232               	rrcf	(btemp+8)^0,f,c
 33941  01E1F8                     u7830:
 33942  01E1F8  2EE8               	decfsz	wreg,f,c
 33943  01E1FA  D7F9               	goto	u7835
 33944  01E1FC  0060  F0C8  F030   	movff	btemp+8,btemp+6
 33945  01E202  0060  F0CC  F031   	movff	btemp+9,btemp+7
 33946  01E208  0EFF               	movlw	255
 33947  01E20A  1630               	andwf	(btemp+6)^0,f,c
 33948  01E20C  0E00               	movlw	0
 33949  01E20E  1631               	andwf	(btemp+7)^0,f,c
 33950                           
 33951                           ;stkvar	_e @ sp[(-6)+4]
 33952  01E210  0EFE               	movlw	-2
 33953  01E212  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 33954  01E218  0EFF               	movlw	-1
 33955  01E21A  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 33956                           
 33957                           ;stkvar	_e @ sp[(-6)+4]
 33958  01E220  0EFE               	movlw	-2
 33959  01E222  006F FF8C  F02A    	movff	plusw1,btemp
 33960  01E228  0EFF               	movlw	-1
 33961  01E22A  50E3               	movf	plusw1,w,c
 33962  01E22C  102A               	iorwf	btemp^0,w,c
 33963  01E22E  A4D8               	btfss	status,2,c
 33964  01E230  D023               	goto	l10189
 33965                           
 33966                           ;stkvar	_u @ sp[(-6)+0]
 33967  01E232  0EFA               	movlw	-6
 33968  01E234  006F FF8C  F032    	movff	plusw1,btemp+8
 33969  01E23A  0EFB               	movlw	-5
 33970  01E23C  006F FF8C  F033    	movff	plusw1,btemp+9
 33971  01E242  0EFC               	movlw	-4
 33972  01E244  006F FF8C  F034    	movff	plusw1,btemp+10
 33973  01E24A  0EFD               	movlw	-3
 33974  01E24C  006F FF8C  F035    	movff	plusw1,btemp+11
 33975  01E252  90D8               	bcf	status,0,c
 33976  01E254  3432               	rlcf	(btemp+8)^0,w,c
 33977  01E256  6E2E               	movwf	(btemp+4)^0,c
 33978  01E258  3433               	rlcf	(btemp+9)^0,w,c
 33979  01E25A  6E2F               	movwf	(btemp+5)^0,c
 33980  01E25C  3434               	rlcf	(btemp+10)^0,w,c
 33981  01E25E  6E30               	movwf	(btemp+6)^0,c
 33982  01E260  3435               	rlcf	(btemp+11)^0,w,c
 33983  01E262  6E31               	movwf	(btemp+7)^0,c
 33984  01E264  502E               	movf	(btemp+4)^0,w,c
 33985  01E266  102F               	iorwf	(btemp+5)^0,w,c
 33986  01E268  1030               	iorwf	(btemp+6)^0,w,c
 33987  01E26A  1031               	iorwf	(btemp+7)^0,w,c
 33988  01E26C  A4D8               	btfss	status,2,c
 33989  01E26E  D002               	goto	l10185
 33990  01E270  0E02               	movlw	2
 33991  01E272  D02E               	goto	L37
 33992  01E274                     l10185:
 33993  01E274  0E03               	movlw	3
 33994  01E276  D02C               	goto	L37
 33995  01E278                     l10189:
 33996                           
 33997                           ;stkvar	_e @ sp[(-6)+4]
 33998  01E278  0EFE               	movlw	-2
 33999  01E27A  28E3               	incf	plusw1,w,c
 34000  01E27C  E128               	bnz	l10195
 34001  01E27E  0EFF               	movlw	-1
 34002  01E280  50E3               	movf	plusw1,w,c
 34003  01E282  A4D8               	btfss	status,2,c
 34004  01E284  D024               	goto	l10195
 34005                           
 34006                           ;stkvar	_u @ sp[(-6)+0]
 34007  01E286  0EFA               	movlw	-6
 34008  01E288  006F FF8C  F032    	movff	plusw1,btemp+8
 34009  01E28E  0EFB               	movlw	-5
 34010  01E290  006F FF8C  F033    	movff	plusw1,btemp+9
 34011  01E296  0EFC               	movlw	-4
 34012  01E298  006F FF8C  F034    	movff	plusw1,btemp+10
 34013  01E29E  0EFD               	movlw	-3
 34014  01E2A0  006F FF8C  F035    	movff	plusw1,btemp+11
 34015  01E2A6  0E09               	movlw	9
 34016  01E2A8                     u7875:
 34017  01E2A8  90D8               	bcf	status,0,c
 34018  01E2AA  3632               	rlcf	(btemp+8)^0,f,c
 34019  01E2AC  3633               	rlcf	(btemp+9)^0,f,c
 34020  01E2AE  3634               	rlcf	(btemp+10)^0,f,c
 34021  01E2B0  3635               	rlcf	(btemp+11)^0,f,c
 34022  01E2B2  2EE8               	decfsz	wreg,f,c
 34023  01E2B4  D7F9               	goto	u7875
 34024  01E2B6  5032               	movf	(btemp+8)^0,w,c
 34025  01E2B8  1033               	iorwf	(btemp+9)^0,w,c
 34026  01E2BA  1034               	iorwf	(btemp+10)^0,w,c
 34027  01E2BC  1035               	iorwf	(btemp+11)^0,w,c
 34028  01E2BE  A4D8               	btfss	status,2,c
 34029  01E2C0  D002               	goto	u7880
 34030  01E2C2  0E01               	movlw	1
 34031  01E2C4  D001               	goto	u7890
 34032  01E2C6                     u7880:
 34033  01E2C6  0E00               	movlw	0
 34034  01E2C8                     u7890:
 34035  01E2C8  6E2A               	movwf	btemp^0,c
 34036  01E2CA  6A2B               	clrf	(btemp+1)^0,c
 34037  01E2CC  D004               	goto	l3414
 34038  01E2CE                     l10195:
 34039  01E2CE  0E04               	movlw	4
 34040  01E2D0                     L37:
 34041  01E2D0  6E2A               	movwf	btemp^0,c
 34042  01E2D2  0E00               	movlw	0
 34043  01E2D4  6E2B               	movwf	(btemp+1)^0,c
 34044  01E2D6                     l3414:
 34045                           
 34046                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 34047  01E2D6  0EF6               	movlw	246
 34048  01E2D8  26E1               	addwf	fsr1l,f,c
 34049  01E2DA  0EFF               	movlw	255
 34050  01E2DC  22E2               	addwfc	fsr1h,f,c
 34051  01E2DE  0012               	return		;funcret
 34052  01E2E0                     __end_of___fpclassifyf:
 34053                           	opt callstack 0
 34054                           
 34055 ;; *************** function ___fltol *****************
 34056 ;; Defined at:
 34057 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 34058 ;; Parameters:    Size  Location     Type
 34059 ;;  f1              4  [STACK] int 
 34060 ;; Auto vars:     Size  Location     Type
 34061 ;;  exp1            1  [STACK] unsigned char 
 34062 ;;  sign1           1  [STACK] unsigned char 
 34063 ;; Return value:  Size  Location     Type
 34064 ;;                  4  [STACK] long 
 34065 ;; Registers used:
 34066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 34067 ;; Tracked objects:
 34068 ;;		On entry : 0/0
 34069 ;;		On exit  : 0/0
 34070 ;;		Unchanged: 0/0
 34071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34076 ;;Total ram usage:        0 bytes
 34077 ;; Hardware stack levels used:    1
 34078 ;; Hardware stack levels required when called:   15
 34079 ;; This function calls:
 34080 ;;		Nothing
 34081 ;; This function is called by:
 34082 ;;		_main
 34083 ;;		_convert_dac_raw
 34084 ;;		_load_hist_data
 34085 ;;		_calc_bsoc
 34086 ;;		_init_bsoc
 34087 ;;		_efgtoa
 34088 ;; This function uses a reentrant model
 34089 ;;
 34090                           
 34091                           	psect	text111
 34092  01EA7A                     __ptext111:
 34093                           	opt callstack 0
 34094  01EA7A                     ___fltol:
 34095                           	opt callstack 0
 34096                           
 34097                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34098  01EA7A  52E6               	movf	postinc1,f,c
 34099  01EA7C  52E6               	movf	postinc1,f,c
 34100                           
 34101                           ;stkvar	_f1 @ sp[(-2)+-4]
 34102                           
 34103                           ;incstack = 0
 34104 ;; hardware stack exceeded
 34105  01EA7E  0EFA               	movlw	-6
 34106  01EA80  006F FF8C  F032    	movff	plusw1,btemp+8
 34107  01EA86  0EFB               	movlw	-5
 34108  01EA88  006F FF8C  F033    	movff	plusw1,btemp+9
 34109  01EA8E  0EFC               	movlw	-4
 34110  01EA90  006F FF8C  F034    	movff	plusw1,btemp+10
 34111  01EA96  0EFD               	movlw	-3
 34112  01EA98  006F FF8C  F035    	movff	plusw1,btemp+11
 34113  01EA9E  0E18               	movlw	24
 34114  01EAA0  D005               	goto	u9100
 34115  01EAA2                     u9105:
 34116  01EAA2  90D8               	bcf	status,0,c
 34117  01EAA4  3235               	rrcf	(btemp+11)^0,f,c
 34118  01EAA6  3234               	rrcf	(btemp+10)^0,f,c
 34119  01EAA8  3233               	rrcf	(btemp+9)^0,f,c
 34120  01EAAA  3232               	rrcf	(btemp+8)^0,f,c
 34121  01EAAC                     u9100:
 34122  01EAAC  2EE8               	decfsz	wreg,f,c
 34123  01EAAE  D7F9               	goto	u9105
 34124                           
 34125                           ;stkvar	_exp1 @ sp[(-2)+0]
 34126  01EAB0  0EFE               	movlw	-2
 34127  01EAB2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 34128  01EAB8  0EFE               	movlw	-2
 34129  01EABA  50E3               	movf	plusw1,w,c
 34130  01EABC  A4D8               	btfss	status,2,c
 34131  01EABE  D006               	goto	l10841
 34132  01EAC0                     u9110:
 34133  01EAC0  0E00               	movlw	0
 34134  01EAC2  6E2A               	movwf	btemp^0,c
 34135  01EAC4  6A2B               	clrf	(btemp+1)^0,c
 34136  01EAC6  6A2C               	clrf	(btemp+2)^0,c
 34137  01EAC8  6A2D               	clrf	(btemp+3)^0,c
 34138  01EACA  D08B               	goto	l3030
 34139  01EACC                     l10841:
 34140                           
 34141                           ;stkvar	_f1 @ sp[(-2)+-4]
 34142  01EACC  0EFA               	movlw	-6
 34143  01EACE  006F FF8C  F032    	movff	plusw1,btemp+8
 34144  01EAD4  0EFB               	movlw	-5
 34145  01EAD6  006F FF8C  F033    	movff	plusw1,btemp+9
 34146  01EADC  0EFC               	movlw	-4
 34147  01EADE  006F FF8C  F034    	movff	plusw1,btemp+10
 34148  01EAE4  0EFD               	movlw	-3
 34149  01EAE6  006F FF8C  F035    	movff	plusw1,btemp+11
 34150  01EAEC  0E20               	movlw	32
 34151  01EAEE  D005               	goto	u9120
 34152  01EAF0                     u9125:
 34153  01EAF0  90D8               	bcf	status,0,c
 34154  01EAF2  3235               	rrcf	(btemp+11)^0,f,c
 34155  01EAF4  3234               	rrcf	(btemp+10)^0,f,c
 34156  01EAF6  3233               	rrcf	(btemp+9)^0,f,c
 34157  01EAF8  3232               	rrcf	(btemp+8)^0,f,c
 34158  01EAFA                     u9120:
 34159  01EAFA  2EE8               	decfsz	wreg,f,c
 34160  01EAFC  D7F9               	goto	u9125
 34161                           
 34162                           ;stkvar	_sign1 @ sp[(-2)+1]
 34163  01EAFE  0EFF               	movlw	-1
 34164  01EB00  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 34165                           
 34166                           ;stkvar	_f1 @ sp[(-2)+-4]
 34167  01EB06  0EFC               	movlw	-4
 34168  01EB08  8EE3               	bsf	plusw1,7,c
 34169                           
 34170                           ;stkvar	_f1 @ sp[(-2)+-4]
 34171  01EB0A  50E1               	movf	fsr1l,w,c
 34172  01EB0C  0FFA               	addlw	-6
 34173  01EB0E  6ED9               	movwf	fsr2l,c
 34174  01EB10  50E2               	movf	fsr1h,w,c
 34175  01EB12  6EDA               	movwf	fsr2h,c
 34176  01EB14  0EFF               	movlw	255
 34177  01EB16  22DA               	addwfc	fsr2h,f,c
 34178  01EB18  0EFF               	movlw	255
 34179  01EB1A  16DE               	andwf	postinc2,f,c
 34180  01EB1C  0EFF               	movlw	255
 34181  01EB1E  16DE               	andwf	postinc2,f,c
 34182  01EB20  0EFF               	movlw	255
 34183  01EB22  16DE               	andwf	postinc2,f,c
 34184  01EB24  0E00               	movlw	0
 34185  01EB26  16DE               	andwf	postinc2,f,c
 34186                           
 34187                           ;stkvar	_exp1 @ sp[(-2)+0]
 34188  01EB28  0EFE               	movlw	-2
 34189  01EB2A  006F FF8C  F02A    	movff	plusw1,btemp
 34190  01EB30  0E96               	movlw	150
 34191  01EB32  5E2A               	subwf	btemp^0,f,c
 34192  01EB34  0EFE               	movlw	-2
 34193  01EB36  0060  F0AB  FFE3   	movff	btemp,plusw1
 34194                           
 34195                           ;stkvar	_exp1 @ sp[(-2)+0]
 34196  01EB3C  0EFE               	movlw	-2
 34197  01EB3E  AEE3               	btfss	plusw1,7,c
 34198  01EB40  D014               	goto	l10859
 34199                           
 34200                           ;stkvar	_exp1 @ sp[(-2)+0]
 34201  01EB42  0EFE               	movlw	-2
 34202  01EB44  50E3               	movf	plusw1,w,c
 34203  01EB46  0A80               	xorlw	128
 34204  01EB48  0F97               	addlw	151
 34205  01EB4A  A0D8               	btfss	status,0,c
 34206  01EB4C  D7B9               	goto	u9110
 34207  01EB4E                     l10857:
 34208                           
 34209                           ;stkvar	_f1 @ sp[(-2)+-4]
 34210  01EB4E  90D8               	bcf	status,0,c
 34211  01EB50  0EFD               	movlw	-3
 34212  01EB52  32E3               	rrcf	plusw1,f,c
 34213  01EB54  0EFC               	movlw	-4
 34214  01EB56  32E3               	rrcf	plusw1,f,c
 34215  01EB58  0EFB               	movlw	-5
 34216  01EB5A  32E3               	rrcf	plusw1,f,c
 34217  01EB5C  0EFA               	movlw	-6
 34218  01EB5E  32E3               	rrcf	plusw1,f,c
 34219                           
 34220                           ;stkvar	_exp1 @ sp[(-2)+0]
 34221  01EB60  0EFE               	movlw	-2
 34222  01EB62  2AE3               	incf	plusw1,f,c
 34223  01EB64  B4D8               	btfsc	status,2,c
 34224  01EB66  D018               	goto	u9170
 34225  01EB68  D7F2               	goto	l10857
 34226  01EB6A                     l10859:
 34227                           
 34228                           ;stkvar	_exp1 @ sp[(-2)+0]
 34229  01EB6A  0EFE               	movlw	-2
 34230  01EB6C  006F FF8C  F02A    	movff	plusw1,btemp
 34231  01EB72  0E1F               	movlw	31
 34232  01EB74  642A               	cpfsgt	btemp^0,c
 34233  01EB76  D00C               	goto	l10867
 34234  01EB78  D7A3               	goto	u9110
 34235  01EB7A                     l10865:
 34236                           
 34237                           ;stkvar	_f1 @ sp[(-2)+-4]
 34238  01EB7A  90D8               	bcf	status,0,c
 34239  01EB7C  0EFA               	movlw	-6
 34240  01EB7E  36E3               	rlcf	plusw1,f,c
 34241  01EB80  0EFB               	movlw	-5
 34242  01EB82  36E3               	rlcf	plusw1,f,c
 34243  01EB84  0EFC               	movlw	-4
 34244  01EB86  36E3               	rlcf	plusw1,f,c
 34245  01EB88  0EFD               	movlw	-3
 34246  01EB8A  36E3               	rlcf	plusw1,f,c
 34247                           
 34248                           ;stkvar	_exp1 @ sp[(-2)+0]
 34249  01EB8C  0EFE               	movlw	-2
 34250  01EB8E  06E3               	decf	plusw1,f,c
 34251  01EB90                     l10867:
 34252                           
 34253                           ;stkvar	_exp1 @ sp[(-2)+0]
 34254  01EB90  0EFE               	movlw	-2
 34255  01EB92  50E3               	movf	plusw1,w,c
 34256  01EB94  A4D8               	btfss	status,2,c
 34257  01EB96  D7F1               	goto	l10865
 34258  01EB98                     u9170:
 34259                           
 34260                           ;stkvar	_sign1 @ sp[(-2)+1]
 34261  01EB98  0EFF               	movlw	-1
 34262  01EB9A  50E3               	movf	plusw1,w,c
 34263  01EB9C  B4D8               	btfsc	status,2,c
 34264  01EB9E  D011               	goto	u9190
 34265                           
 34266                           ;stkvar	_f1 @ sp[(-2)+-4]
 34267                           ;stkvar	_f1 @ sp[(-2)+-4]
 34268  01EBA0  0EFA               	movlw	-6
 34269  01EBA2  6CE3               	negf	plusw1,c
 34270  01EBA4  0EFB               	movlw	-5
 34271  01EBA6  1EE3               	comf	plusw1,f,c
 34272  01EBA8  0EFC               	movlw	-4
 34273  01EBAA  1EE3               	comf	plusw1,f,c
 34274  01EBAC  0EFD               	movlw	-3
 34275  01EBAE  1EE3               	comf	plusw1,f,c
 34276  01EBB0  E308               	bnc	u9190
 34277  01EBB2  0EFB               	movlw	-5
 34278  01EBB4  2AE3               	incf	plusw1,f,c
 34279  01EBB6  E305               	bnc	u9190
 34280  01EBB8  0EFC               	movlw	-4
 34281  01EBBA  2AE3               	incf	plusw1,f,c
 34282  01EBBC  E302               	bnc	u9190
 34283  01EBBE  0EFD               	movlw	-3
 34284  01EBC0  2AE3               	incf	plusw1,f,c
 34285  01EBC2                     u9190:
 34286                           
 34287                           ;stkvar	_f1 @ sp[(-2)+-4]
 34288  01EBC2  0EFA               	movlw	-6
 34289  01EBC4  006F FF8C  F02A    	movff	plusw1,btemp
 34290  01EBCA  0EFB               	movlw	-5
 34291  01EBCC  006F FF8C  F02B    	movff	plusw1,btemp+1
 34292  01EBD2  0EFC               	movlw	-4
 34293  01EBD4  006F FF8C  F02C    	movff	plusw1,btemp+2
 34294  01EBDA  0EFD               	movlw	-3
 34295  01EBDC  006F FF8C  F02D    	movff	plusw1,btemp+3
 34296  01EBE2                     l3030:
 34297                           
 34298                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34299  01EBE2  0EFA               	movlw	250
 34300  01EBE4  26E1               	addwf	fsr1l,f,c
 34301  01EBE6  0EFF               	movlw	255
 34302  01EBE8  22E2               	addwfc	fsr1h,f,c
 34303  01EBEA  0012               	return		;funcret
 34304  01EBEC                     __end_of___fltol:
 34305                           	opt callstack 0
 34306                           
 34307 ;; *************** function ___flneg *****************
 34308 ;; Defined at:
 34309 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 34310 ;; Parameters:    Size  Location     Type
 34311 ;;  f1              4  [STACK] long 
 34312 ;; Auto vars:     Size  Location     Type
 34313 ;;		None
 34314 ;; Return value:  Size  Location     Type
 34315 ;;                  4  [STACK] long 
 34316 ;; Registers used:
 34317 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 34318 ;; Tracked objects:
 34319 ;;		On entry : 0/0
 34320 ;;		On exit  : 0/0
 34321 ;;		Unchanged: 0/0
 34322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34327 ;;Total ram usage:        0 bytes
 34328 ;; Hardware stack levels used:    1
 34329 ;; Hardware stack levels required when called:   15
 34330 ;; This function calls:
 34331 ;;		Nothing
 34332 ;; This function is called by:
 34333 ;;		_calc_bsoc
 34334 ;;		_efgtoa
 34335 ;; This function uses a reentrant model
 34336 ;;
 34337                           
 34338                           	psect	text112
 34339  00215E                     __ptext112:
 34340                           	opt callstack 0
 34341  00215E                     ___flneg:
 34342                           	opt callstack 0
 34343                           
 34344                           ;stkvar	_f1 @ sp[(0)+-4]
 34345                           
 34346                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34347                           ;incstack = 0
 34348 ;; hardware stack exceeded
 34349  00215E  0EFC               	movlw	-4
 34350  002160  50E3               	movf	plusw1,w,c
 34351  002162  E10A               	bnz	u9090
 34352  002164  0EFD               	movlw	-3
 34353  002166  50E3               	movf	plusw1,w,c
 34354  002168  E107               	bnz	u9090
 34355  00216A  0EFE               	movlw	-2
 34356  00216C  50E3               	movf	plusw1,w,c
 34357  00216E  E104               	bnz	u9090
 34358  002170  0EFF               	movlw	-1
 34359  002172  50E3               	movf	plusw1,w,c
 34360  002174  B4D8               	btfsc	status,2,c
 34361  002176  D002               	goto	l10831
 34362  002178                     u9090:
 34363                           
 34364                           ;stkvar	_f1 @ sp[(0)+-4]
 34365  002178  0EFF               	movlw	-1
 34366  00217A  7EE3               	btg	plusw1,7,c
 34367  00217C                     l10831:
 34368                           
 34369                           ;stkvar	_f1 @ sp[(0)+-4]
 34370  00217C  0EFC               	movlw	-4
 34371  00217E  006F FF8C  F02A    	movff	plusw1,btemp
 34372  002184  0EFD               	movlw	-3
 34373  002186  006F FF8C  F02B    	movff	plusw1,btemp+1
 34374  00218C  0EFE               	movlw	-2
 34375  00218E  006F FF8C  F02C    	movff	plusw1,btemp+2
 34376  002194  0EFF               	movlw	-1
 34377  002196  006F FF8C  F02D    	movff	plusw1,btemp+3
 34378                           
 34379                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34380  00219C  52E5               	movf	postdec1,f,c
 34381  00219E  52E5               	movf	postdec1,f,c
 34382  0021A0  52E5               	movf	postdec1,f,c
 34383  0021A2  52E5               	movf	postdec1,f,c
 34384  0021A4  0012               	return		;funcret
 34385  0021A6                     __end_of___flneg:
 34386                           	opt callstack 0
 34387                           
 34388 ;; *************** function ___fleq *****************
 34389 ;; Defined at:
 34390 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 34391 ;; Parameters:    Size  Location     Type
 34392 ;;  ff1             4  [STACK] long 
 34393 ;;  ff2             4  [STACK] long 
 34394 ;; Auto vars:     Size  Location     Type
 34395 ;;		None
 34396 ;; Return value:  Size  Location     Type
 34397 ;;		None               void
 34398 ;; Registers used:
 34399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 34400 ;; Tracked objects:
 34401 ;;		On entry : 0/0
 34402 ;;		On exit  : 0/0
 34403 ;;		Unchanged: 0/0
 34404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34409 ;;Total ram usage:        0 bytes
 34410 ;; Hardware stack levels used:    1
 34411 ;; Hardware stack levels required when called:   15
 34412 ;; This function calls:
 34413 ;;		Nothing
 34414 ;; This function is called by:
 34415 ;;		_efgtoa
 34416 ;; This function uses a reentrant model
 34417 ;;
 34418                           
 34419                           	psect	text113
 34420  0008DA                     __ptext113:
 34421                           	opt callstack 0
 34422  0008DA                     ___fleq:
 34423                           	opt callstack 0
 34424                           
 34425                           ;stkvar	_ff1 @ sp[(0)+-4]
 34426                           
 34427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34428                           ;incstack = 0
 34429 ;; hardware stack exceeded
 34430  0008DA  50E1               	movf	fsr1l,w,c
 34431  0008DC  0FFC               	addlw	-4
 34432  0008DE  6ED9               	movwf	fsr2l,c
 34433  0008E0  50E2               	movf	fsr1h,w,c
 34434  0008E2  6EDA               	movwf	fsr2h,c
 34435  0008E4  0EFF               	movlw	255
 34436  0008E6  22DA               	addwfc	fsr2h,f,c
 34437  0008E8  0E00               	movlw	0
 34438  0008EA  14DE               	andwf	postinc2,w,c
 34439  0008EC  6E32               	movwf	(btemp+8)^0,c
 34440  0008EE  0E00               	movlw	0
 34441  0008F0  14DE               	andwf	postinc2,w,c
 34442  0008F2  6E33               	movwf	(btemp+9)^0,c
 34443  0008F4  0E80               	movlw	128
 34444  0008F6  14DE               	andwf	postinc2,w,c
 34445  0008F8  6E34               	movwf	(btemp+10)^0,c
 34446  0008FA  0E7F               	movlw	127
 34447  0008FC  14DE               	andwf	postinc2,w,c
 34448  0008FE  6E35               	movwf	(btemp+11)^0,c
 34449  000900  5032               	movf	(btemp+8)^0,w,c
 34450  000902  1033               	iorwf	(btemp+9)^0,w,c
 34451  000904  1034               	iorwf	(btemp+10)^0,w,c
 34452  000906  1035               	iorwf	(btemp+11)^0,w,c
 34453  000908  A4D8               	btfss	status,2,c
 34454  00090A  D008               	goto	l10789
 34455                           
 34456                           ;stkvar	_ff1 @ sp[(0)+-4]
 34457  00090C  0EFC               	movlw	-4
 34458  00090E  6AE3               	clrf	plusw1,c
 34459  000910  0EFD               	movlw	-3
 34460  000912  6AE3               	clrf	plusw1,c
 34461  000914  0EFE               	movlw	-2
 34462  000916  6AE3               	clrf	plusw1,c
 34463  000918  0EFF               	movlw	-1
 34464  00091A  6AE3               	clrf	plusw1,c
 34465  00091C                     l10789:
 34466                           
 34467                           ;stkvar	_ff2 @ sp[(0)+-8]
 34468  00091C  50E1               	movf	fsr1l,w,c
 34469  00091E  0FF8               	addlw	-8
 34470  000920  6ED9               	movwf	fsr2l,c
 34471  000922  50E2               	movf	fsr1h,w,c
 34472  000924  6EDA               	movwf	fsr2h,c
 34473  000926  0EFF               	movlw	255
 34474  000928  22DA               	addwfc	fsr2h,f,c
 34475  00092A  0E00               	movlw	0
 34476  00092C  14DE               	andwf	postinc2,w,c
 34477  00092E  6E32               	movwf	(btemp+8)^0,c
 34478  000930  0E00               	movlw	0
 34479  000932  14DE               	andwf	postinc2,w,c
 34480  000934  6E33               	movwf	(btemp+9)^0,c
 34481  000936  0E80               	movlw	128
 34482  000938  14DE               	andwf	postinc2,w,c
 34483  00093A  6E34               	movwf	(btemp+10)^0,c
 34484  00093C  0E7F               	movlw	127
 34485  00093E  14DE               	andwf	postinc2,w,c
 34486  000940  6E35               	movwf	(btemp+11)^0,c
 34487  000942  5032               	movf	(btemp+8)^0,w,c
 34488  000944  1033               	iorwf	(btemp+9)^0,w,c
 34489  000946  1034               	iorwf	(btemp+10)^0,w,c
 34490  000948  1035               	iorwf	(btemp+11)^0,w,c
 34491  00094A  A4D8               	btfss	status,2,c
 34492  00094C  D008               	goto	l10793
 34493                           
 34494                           ;stkvar	_ff2 @ sp[(0)+-8]
 34495  00094E  0EF8               	movlw	-8
 34496  000950  6AE3               	clrf	plusw1,c
 34497  000952  0EF9               	movlw	-7
 34498  000954  6AE3               	clrf	plusw1,c
 34499  000956  0EFA               	movlw	-6
 34500  000958  6AE3               	clrf	plusw1,c
 34501  00095A  0EFB               	movlw	-5
 34502  00095C  6AE3               	clrf	plusw1,c
 34503  00095E                     l10793:
 34504                           
 34505                           ;stkvar	_ff2 @ sp[(0)+-8]
 34506                           ;stkvar	_ff1 @ sp[(0)+-4]
 34507  00095E  50E1               	movf	fsr1l,w,c
 34508  000960  0FFC               	addlw	-4
 34509  000962  6ED9               	movwf	fsr2l,c
 34510  000964  50E2               	movf	fsr1h,w,c
 34511  000966  6EDA               	movwf	fsr2h,c
 34512  000968  0EFF               	movlw	255
 34513  00096A  22DA               	addwfc	fsr2h,f,c
 34514  00096C  0EF8               	movlw	-8
 34515  00096E  50E3               	movf	plusw1,w,c
 34516  000970  18DE               	xorwf	postinc2,w,c
 34517  000972  E10D               	bnz	u9030
 34518  000974  0EF9               	movlw	-7
 34519  000976  50E3               	movf	plusw1,w,c
 34520  000978  18DE               	xorwf	postinc2,w,c
 34521  00097A  E109               	bnz	u9030
 34522  00097C  0EFA               	movlw	-6
 34523  00097E  50E3               	movf	plusw1,w,c
 34524  000980  18DE               	xorwf	postinc2,w,c
 34525  000982  E105               	bnz	u9030
 34526  000984  0EFB               	movlw	-5
 34527  000986  50E3               	movf	plusw1,w,c
 34528  000988  18DE               	xorwf	postinc2,w,c
 34529  00098A  B4D8               	btfsc	status,2,c
 34530  00098C  D002               	goto	l10797
 34531  00098E                     u9030:
 34532  00098E  902A               	bcf	btemp& (0+255),0,c
 34533  000990  D001               	goto	l2992
 34534  000992                     l10797:
 34535  000992  802A               	bsf	btemp& (0+255),0,c
 34536  000994                     l2992:
 34537                           
 34538                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 34539  000994  0EF8               	movlw	248
 34540  000996  26E1               	addwf	fsr1l,f,c
 34541  000998  0EFF               	movlw	255
 34542  00099A  22E2               	addwfc	fsr1h,f,c
 34543  00099C  0012               	return		;funcret
 34544  00099E                     __end_of___fleq:
 34545                           	opt callstack 0
 34546                           
 34547 ;; *************** function ___awmod *****************
 34548 ;; Defined at:
 34549 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 34550 ;; Parameters:    Size  Location     Type
 34551 ;;  dividend        2  [STACK] int 
 34552 ;;  divisor         2  [STACK] int 
 34553 ;; Auto vars:     Size  Location     Type
 34554 ;;  sign            1  [STACK] unsigned char 
 34555 ;;  counter         1  [STACK] unsigned char 
 34556 ;; Return value:  Size  Location     Type
 34557 ;;                  2  [STACK] int 
 34558 ;; Registers used:
 34559 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 34560 ;; Tracked objects:
 34561 ;;		On entry : 0/3
 34562 ;;		On exit  : 0/0
 34563 ;;		Unchanged: 0/0
 34564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34569 ;;Total ram usage:        0 bytes
 34570 ;; Hardware stack levels used:    1
 34571 ;; Hardware stack levels required when called:   15
 34572 ;; This function calls:
 34573 ;;		Nothing
 34574 ;; This function is called by:
 34575 ;;		_efgtoa
 34576 ;;		_asctime
 34577 ;; This function uses a reentrant model
 34578 ;;
 34579                           
 34580                           	psect	text114
 34581  01FC86                     __ptext114:
 34582                           	opt callstack 0
 34583  01FC86                     ___awmod:
 34584                           	opt callstack 0
 34585                           
 34586                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34587  01FC86  52E6               	movf	postinc1,f,c
 34588  01FC88  52E6               	movf	postinc1,f,c
 34589                           
 34590                           ;stkvar	_sign @ sp[(-2)+0]
 34591                           
 34592                           ;incstack = 0
 34593 ;; hardware stack exceeded
 34594  01FC8A  0EFE               	movlw	-2
 34595  01FC8C  6AE3               	clrf	plusw1,c
 34596                           
 34597                           ;stkvar	_dividend @ sp[(-2)+-2]
 34598  01FC8E  0EFD               	movlw	-3
 34599  01FC90  AEE3               	btfss	plusw1,7,c
 34600  01FC92  D009               	goto	l15681
 34601                           
 34602                           ;stkvar	_dividend @ sp[(-2)+-2]
 34603                           ;stkvar	_dividend @ sp[(-2)+-2]
 34604  01FC94  0EFC               	movlw	-4
 34605  01FC96  6CE3               	negf	plusw1,c
 34606  01FC98  0EFD               	movlw	-3
 34607  01FC9A  1EE3               	comf	plusw1,f,c
 34608  01FC9C  B0D8               	btfsc	status,0,c
 34609  01FC9E  2AE3               	incf	plusw1,f,c
 34610                           
 34611                           ;stkvar	_sign @ sp[(-2)+0]
 34612  01FCA0  0EFE               	movlw	-2
 34613  01FCA2  6AE3               	clrf	plusw1,c
 34614  01FCA4  2AE3               	incf	plusw1,f,c
 34615  01FCA6                     l15681:
 34616                           
 34617                           ;stkvar	_divisor @ sp[(-2)+-4]
 34618  01FCA6  0EFB               	movlw	-5
 34619  01FCA8  AEE3               	btfss	plusw1,7,c
 34620  01FCAA  D006               	goto	l15685
 34621                           
 34622                           ;stkvar	_divisor @ sp[(-2)+-4]
 34623                           ;stkvar	_divisor @ sp[(-2)+-4]
 34624  01FCAC  0EFA               	movlw	-6
 34625  01FCAE  6CE3               	negf	plusw1,c
 34626  01FCB0  0EFB               	movlw	-5
 34627  01FCB2  1EE3               	comf	plusw1,f,c
 34628  01FCB4  B0D8               	btfsc	status,0,c
 34629  01FCB6  2AE3               	incf	plusw1,f,c
 34630  01FCB8                     l15685:
 34631                           
 34632                           ;stkvar	_divisor @ sp[(-2)+-4]
 34633  01FCB8  0EFA               	movlw	-6
 34634  01FCBA  006F FF8C  F02A    	movff	plusw1,btemp
 34635  01FCC0  0EFB               	movlw	-5
 34636  01FCC2  50E3               	movf	plusw1,w,c
 34637  01FCC4  102A               	iorwf	btemp^0,w,c
 34638  01FCC6  B4D8               	btfsc	status,2,c
 34639  01FCC8  D053               	goto	u14660
 34640                           
 34641                           ;stkvar	_counter @ sp[(-2)+1]
 34642  01FCCA  0EFF               	movlw	-1
 34643  01FCCC  6AE3               	clrf	plusw1,c
 34644  01FCCE  D012               	goto	L38
 34645  01FCD0                     l15689:
 34646                           
 34647                           ;stkvar	_divisor @ sp[(-2)+-4]
 34648  01FCD0  0EFA               	movlw	-6
 34649  01FCD2  50E3               	movf	plusw1,w,c
 34650  01FCD4  90D8               	bcf	status,0,c
 34651  01FCD6  34E8               	rlcf	wreg,w,c
 34652  01FCD8  6E2A               	movwf	btemp^0,c
 34653  01FCDA  0EFA               	movlw	-6
 34654  01FCDC  0060  F0AB  FFE3   	movff	btemp,plusw1
 34655  01FCE2  0EFB               	movlw	-5
 34656  01FCE4  50E3               	movf	plusw1,w,c
 34657  01FCE6  34E8               	rlcf	wreg,w,c
 34658  01FCE8  6E2A               	movwf	btemp^0,c
 34659  01FCEA  0EFB               	movlw	-5
 34660  01FCEC  0060  F0AB  FFE3   	movff	btemp,plusw1
 34661                           
 34662                           ;stkvar	_counter @ sp[(-2)+1]
 34663  01FCF2  0EFF               	movlw	-1
 34664  01FCF4                     L38:
 34665  01FCF4  2AE3               	incf	plusw1,f,c
 34666                           
 34667                           ;stkvar	_divisor @ sp[(-2)+-4]
 34668  01FCF6  0EFB               	movlw	-5
 34669  01FCF8  AEE3               	btfss	plusw1,7,c
 34670  01FCFA  D7EA               	goto	l15689
 34671  01FCFC                     u14640:
 34672                           
 34673                           ;stkvar	_divisor @ sp[(-2)+-4]
 34674  01FCFC  0EFA               	movlw	-6
 34675  01FCFE  006F FF8C  F034    	movff	plusw1,btemp+10
 34676  01FD04  0EFB               	movlw	-5
 34677  01FD06  006F FF8C  F035    	movff	plusw1,btemp+11
 34678                           
 34679                           ;stkvar	_dividend @ sp[(-2)+-2]
 34680  01FD0C  0EFC               	movlw	-4
 34681  01FD0E  006F FF8C  F032    	movff	plusw1,btemp+8
 34682  01FD14  0EFD               	movlw	-3
 34683  01FD16  006F FF8C  F033    	movff	plusw1,btemp+9
 34684  01FD1C  5034               	movf	(btemp+10)^0,w,c
 34685  01FD1E  5C32               	subwf	(btemp+8)^0,w,c
 34686  01FD20  5035               	movf	(btemp+11)^0,w,c
 34687  01FD22  5833               	subwfb	(btemp+9)^0,w,c
 34688  01FD24  A0D8               	btfss	status,0,c
 34689  01FD26  D014               	goto	l15699
 34690                           
 34691                           ;stkvar	_divisor @ sp[(-2)+-4]
 34692                           ;stkvar	_dividend @ sp[(-2)+-2]
 34693  01FD28  0EFC               	movlw	-4
 34694  01FD2A  50E3               	movf	plusw1,w,c
 34695  01FD2C  6E2A               	movwf	btemp^0,c
 34696  01FD2E  0EFA               	movlw	-6
 34697  01FD30  50E3               	movf	plusw1,w,c
 34698  01FD32  5E2A               	subwf	btemp^0,f,c
 34699  01FD34  0EFC               	movlw	-4
 34700  01FD36  0060  F0AB  FFE3   	movff	btemp,plusw1
 34701  01FD3C  0EFD               	movlw	-3
 34702  01FD3E  50E3               	movf	plusw1,w,c
 34703  01FD40  6E2A               	movwf	btemp^0,c
 34704  01FD42  0EFB               	movlw	-5
 34705  01FD44  50E3               	movf	plusw1,w,c
 34706  01FD46  5A2A               	subwfb	btemp^0,f,c
 34707  01FD48  0EFD               	movlw	-3
 34708  01FD4A  0060  F0AB  FFE3   	movff	btemp,plusw1
 34709  01FD50                     l15699:
 34710                           
 34711                           ;stkvar	_divisor @ sp[(-2)+-4]
 34712  01FD50  90D8               	bcf	status,0,c
 34713  01FD52  0EFB               	movlw	-5
 34714  01FD54  32E3               	rrcf	plusw1,f,c
 34715  01FD56  0EFA               	movlw	-6
 34716  01FD58  32E3               	rrcf	plusw1,f,c
 34717                           
 34718                           ;stkvar	_counter @ sp[(-2)+1]
 34719  01FD5A  0EFF               	movlw	-1
 34720  01FD5C  50E3               	movf	plusw1,w,c
 34721  01FD5E  6E2A               	movwf	btemp^0,c
 34722  01FD60  0E01               	movlw	1
 34723  01FD62  5E2A               	subwf	btemp^0,f,c
 34724  01FD64  0EFF               	movlw	-1
 34725  01FD66  0060  F0AB  FFE3   	movff	btemp,plusw1
 34726  01FD6C  A4D8               	btfss	status,2,c
 34727  01FD6E  D7C6               	goto	u14640
 34728  01FD70                     u14660:
 34729                           
 34730                           ;stkvar	_sign @ sp[(-2)+0]
 34731  01FD70  0EFE               	movlw	-2
 34732  01FD72  50E3               	movf	plusw1,w,c
 34733  01FD74  B4D8               	btfsc	status,2,c
 34734  01FD76  D006               	goto	l15707
 34735                           
 34736                           ;stkvar	_dividend @ sp[(-2)+-2]
 34737                           ;stkvar	_dividend @ sp[(-2)+-2]
 34738  01FD78  0EFC               	movlw	-4
 34739  01FD7A  6CE3               	negf	plusw1,c
 34740  01FD7C  0EFD               	movlw	-3
 34741  01FD7E  1EE3               	comf	plusw1,f,c
 34742  01FD80  B0D8               	btfsc	status,0,c
 34743  01FD82  2AE3               	incf	plusw1,f,c
 34744  01FD84                     l15707:
 34745                           
 34746                           ;stkvar	_dividend @ sp[(-2)+-2]
 34747  01FD84  0EFC               	movlw	-4
 34748  01FD86  006F FF8C  F02A    	movff	plusw1,btemp
 34749  01FD8C  0EFD               	movlw	-3
 34750  01FD8E  006F FF8C  F02B    	movff	plusw1,btemp+1
 34751                           
 34752                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34753  01FD94  0EFA               	movlw	250
 34754  01FD96  26E1               	addwf	fsr1l,f,c
 34755  01FD98  0EFF               	movlw	255
 34756  01FD9A  22E2               	addwfc	fsr1h,f,c
 34757  01FD9C  0012               	return		;funcret
 34758  01FD9E                     __end_of___awmod:
 34759                           	opt callstack 0
 34760                           
 34761 ;; *************** function ___awdiv *****************
 34762 ;; Defined at:
 34763 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 34764 ;; Parameters:    Size  Location     Type
 34765 ;;  dividend        2  [STACK] int 
 34766 ;;  divisor         2  [STACK] int 
 34767 ;; Auto vars:     Size  Location     Type
 34768 ;;  quotient        2  [STACK] int 
 34769 ;;  sign            1  [STACK] unsigned char 
 34770 ;;  counter         1  [STACK] unsigned char 
 34771 ;; Return value:  Size  Location     Type
 34772 ;;                  2  [STACK] int 
 34773 ;; Registers used:
 34774 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 34775 ;; Tracked objects:
 34776 ;;		On entry : 0/3
 34777 ;;		On exit  : 0/0
 34778 ;;		Unchanged: 0/0
 34779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34784 ;;Total ram usage:        0 bytes
 34785 ;; Hardware stack levels used:    1
 34786 ;; Hardware stack levels required when called:   15
 34787 ;; This function calls:
 34788 ;;		Nothing
 34789 ;; This function is called by:
 34790 ;;		_efgtoa
 34791 ;;		_put2d
 34792 ;;		_asctime
 34793 ;;		_scan_trans
 34794 ;; This function uses a reentrant model
 34795 ;;
 34796                           
 34797                           	psect	text115
 34798  01F428                     __ptext115:
 34799                           	opt callstack 0
 34800  01F428                     ___awdiv:
 34801                           	opt callstack 0
 34802                           
 34803                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34804  01F428  52E6               	movf	postinc1,f,c
 34805  01F42A  52E6               	movf	postinc1,f,c
 34806  01F42C  52E6               	movf	postinc1,f,c
 34807  01F42E  52E6               	movf	postinc1,f,c
 34808                           
 34809                           ;stkvar	_sign @ sp[(-4)+2]
 34810                           
 34811                           ;incstack = 0
 34812 ;; hardware stack exceeded
 34813  01F430  0EFE               	movlw	-2
 34814  01F432  6AE3               	clrf	plusw1,c
 34815                           
 34816                           ;stkvar	_divisor @ sp[(-4)+-4]
 34817  01F434  0EF9               	movlw	-7
 34818  01F436  AEE3               	btfss	plusw1,7,c
 34819  01F438  D009               	goto	l15635
 34820                           
 34821                           ;stkvar	_divisor @ sp[(-4)+-4]
 34822                           ;stkvar	_divisor @ sp[(-4)+-4]
 34823  01F43A  0EF8               	movlw	-8
 34824  01F43C  6CE3               	negf	plusw1,c
 34825  01F43E  0EF9               	movlw	-7
 34826  01F440  1EE3               	comf	plusw1,f,c
 34827  01F442  B0D8               	btfsc	status,0,c
 34828  01F444  2AE3               	incf	plusw1,f,c
 34829                           
 34830                           ;stkvar	_sign @ sp[(-4)+2]
 34831  01F446  0EFE               	movlw	-2
 34832  01F448  6AE3               	clrf	plusw1,c
 34833  01F44A  2AE3               	incf	plusw1,f,c
 34834  01F44C                     l15635:
 34835                           
 34836                           ;stkvar	_dividend @ sp[(-4)+-2]
 34837  01F44C  0EFB               	movlw	-5
 34838  01F44E  AEE3               	btfss	plusw1,7,c
 34839  01F450  D008               	goto	l15641
 34840                           
 34841                           ;stkvar	_dividend @ sp[(-4)+-2]
 34842                           ;stkvar	_dividend @ sp[(-4)+-2]
 34843  01F452  0EFA               	movlw	-6
 34844  01F454  6CE3               	negf	plusw1,c
 34845  01F456  0EFB               	movlw	-5
 34846  01F458  1EE3               	comf	plusw1,f,c
 34847  01F45A  B0D8               	btfsc	status,0,c
 34848  01F45C  2AE3               	incf	plusw1,f,c
 34849                           
 34850                           ;stkvar	_sign @ sp[(-4)+2]
 34851  01F45E  0EFE               	movlw	-2
 34852  01F460  70E3               	btg	plusw1,0,c
 34853  01F462                     l15641:
 34854                           
 34855                           ;stkvar	_quotient @ sp[(-4)+0]
 34856  01F462  0EFC               	movlw	-4
 34857  01F464  6AE3               	clrf	plusw1,c
 34858  01F466  0EFD               	movlw	-3
 34859  01F468  6AE3               	clrf	plusw1,c
 34860                           
 34861                           ;stkvar	_divisor @ sp[(-4)+-4]
 34862  01F46A  0EF8               	movlw	-8
 34863  01F46C  006F FF8C  F02A    	movff	plusw1,btemp
 34864  01F472  0EF9               	movlw	-7
 34865  01F474  50E3               	movf	plusw1,w,c
 34866  01F476  102A               	iorwf	btemp^0,w,c
 34867  01F478  B4D8               	btfsc	status,2,c
 34868  01F47A  D066               	goto	u14590
 34869                           
 34870                           ;stkvar	_counter @ sp[(-4)+3]
 34871  01F47C  0EFF               	movlw	-1
 34872  01F47E  6AE3               	clrf	plusw1,c
 34873  01F480  D012               	goto	L39
 34874  01F482                     l15647:
 34875                           
 34876                           ;stkvar	_divisor @ sp[(-4)+-4]
 34877  01F482  0EF8               	movlw	-8
 34878  01F484  50E3               	movf	plusw1,w,c
 34879  01F486  90D8               	bcf	status,0,c
 34880  01F488  34E8               	rlcf	wreg,w,c
 34881  01F48A  6E2A               	movwf	btemp^0,c
 34882  01F48C  0EF8               	movlw	-8
 34883  01F48E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34884  01F494  0EF9               	movlw	-7
 34885  01F496  50E3               	movf	plusw1,w,c
 34886  01F498  34E8               	rlcf	wreg,w,c
 34887  01F49A  6E2A               	movwf	btemp^0,c
 34888  01F49C  0EF9               	movlw	-7
 34889  01F49E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34890                           
 34891                           ;stkvar	_counter @ sp[(-4)+3]
 34892  01F4A4  0EFF               	movlw	-1
 34893  01F4A6                     L39:
 34894  01F4A6  2AE3               	incf	plusw1,f,c
 34895                           
 34896                           ;stkvar	_divisor @ sp[(-4)+-4]
 34897  01F4A8  0EF9               	movlw	-7
 34898  01F4AA  AEE3               	btfss	plusw1,7,c
 34899  01F4AC  D7EA               	goto	l15647
 34900  01F4AE                     u14570:
 34901                           
 34902                           ;stkvar	_quotient @ sp[(-4)+0]
 34903  01F4AE  0EFC               	movlw	-4
 34904  01F4B0  50E3               	movf	plusw1,w,c
 34905  01F4B2  90D8               	bcf	status,0,c
 34906  01F4B4  34E8               	rlcf	wreg,w,c
 34907  01F4B6  6E2A               	movwf	btemp^0,c
 34908  01F4B8  0EFC               	movlw	-4
 34909  01F4BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 34910  01F4C0  0EFD               	movlw	-3
 34911  01F4C2  50E3               	movf	plusw1,w,c
 34912  01F4C4  34E8               	rlcf	wreg,w,c
 34913  01F4C6  6E2A               	movwf	btemp^0,c
 34914  01F4C8  0EFD               	movlw	-3
 34915  01F4CA  0060  F0AB  FFE3   	movff	btemp,plusw1
 34916                           
 34917                           ;stkvar	_divisor @ sp[(-4)+-4]
 34918  01F4D0  0EF8               	movlw	-8
 34919  01F4D2  006F FF8C  F034    	movff	plusw1,btemp+10
 34920  01F4D8  0EF9               	movlw	-7
 34921  01F4DA  006F FF8C  F035    	movff	plusw1,btemp+11
 34922                           
 34923                           ;stkvar	_dividend @ sp[(-4)+-2]
 34924  01F4E0  0EFA               	movlw	-6
 34925  01F4E2  006F FF8C  F032    	movff	plusw1,btemp+8
 34926  01F4E8  0EFB               	movlw	-5
 34927  01F4EA  006F FF8C  F033    	movff	plusw1,btemp+9
 34928  01F4F0  5034               	movf	(btemp+10)^0,w,c
 34929  01F4F2  5C32               	subwf	(btemp+8)^0,w,c
 34930  01F4F4  5035               	movf	(btemp+11)^0,w,c
 34931  01F4F6  5833               	subwfb	(btemp+9)^0,w,c
 34932  01F4F8  A0D8               	btfss	status,0,c
 34933  01F4FA  D016               	goto	l15661
 34934                           
 34935                           ;stkvar	_divisor @ sp[(-4)+-4]
 34936                           ;stkvar	_dividend @ sp[(-4)+-2]
 34937  01F4FC  0EFA               	movlw	-6
 34938  01F4FE  50E3               	movf	plusw1,w,c
 34939  01F500  6E2A               	movwf	btemp^0,c
 34940  01F502  0EF8               	movlw	-8
 34941  01F504  50E3               	movf	plusw1,w,c
 34942  01F506  5E2A               	subwf	btemp^0,f,c
 34943  01F508  0EFA               	movlw	-6
 34944  01F50A  0060  F0AB  FFE3   	movff	btemp,plusw1
 34945  01F510  0EFB               	movlw	-5
 34946  01F512  50E3               	movf	plusw1,w,c
 34947  01F514  6E2A               	movwf	btemp^0,c
 34948  01F516  0EF9               	movlw	-7
 34949  01F518  50E3               	movf	plusw1,w,c
 34950  01F51A  5A2A               	subwfb	btemp^0,f,c
 34951  01F51C  0EFB               	movlw	-5
 34952  01F51E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34953                           
 34954                           ;stkvar	_quotient @ sp[(-4)+0]
 34955  01F524  0EFC               	movlw	-4
 34956  01F526  80E3               	bsf	plusw1,0,c
 34957  01F528                     l15661:
 34958                           
 34959                           ;stkvar	_divisor @ sp[(-4)+-4]
 34960  01F528  90D8               	bcf	status,0,c
 34961  01F52A  0EF9               	movlw	-7
 34962  01F52C  32E3               	rrcf	plusw1,f,c
 34963  01F52E  0EF8               	movlw	-8
 34964  01F530  32E3               	rrcf	plusw1,f,c
 34965                           
 34966                           ;stkvar	_counter @ sp[(-4)+3]
 34967  01F532  0EFF               	movlw	-1
 34968  01F534  50E3               	movf	plusw1,w,c
 34969  01F536  6E2A               	movwf	btemp^0,c
 34970  01F538  0E01               	movlw	1
 34971  01F53A  5E2A               	subwf	btemp^0,f,c
 34972  01F53C  0EFF               	movlw	-1
 34973  01F53E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34974  01F544  A4D8               	btfss	status,2,c
 34975  01F546  D7B3               	goto	u14570
 34976  01F548                     u14590:
 34977                           
 34978                           ;stkvar	_sign @ sp[(-4)+2]
 34979  01F548  0EFE               	movlw	-2
 34980  01F54A  50E3               	movf	plusw1,w,c
 34981  01F54C  B4D8               	btfsc	status,2,c
 34982  01F54E  D006               	goto	l15669
 34983                           
 34984                           ;stkvar	_quotient @ sp[(-4)+0]
 34985                           ;stkvar	_quotient @ sp[(-4)+0]
 34986  01F550  0EFC               	movlw	-4
 34987  01F552  6CE3               	negf	plusw1,c
 34988  01F554  0EFD               	movlw	-3
 34989  01F556  1EE3               	comf	plusw1,f,c
 34990  01F558  B0D8               	btfsc	status,0,c
 34991  01F55A  2AE3               	incf	plusw1,f,c
 34992  01F55C                     l15669:
 34993                           
 34994                           ;stkvar	_quotient @ sp[(-4)+0]
 34995  01F55C  0EFC               	movlw	-4
 34996  01F55E  006F FF8C  F02A    	movff	plusw1,btemp
 34997  01F564  0EFD               	movlw	-3
 34998  01F566  006F FF8C  F02B    	movff	plusw1,btemp+1
 34999                           
 35000                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 35001  01F56C  0EF8               	movlw	248
 35002  01F56E  26E1               	addwf	fsr1l,f,c
 35003  01F570  0EFF               	movlw	255
 35004  01F572  22E2               	addwfc	fsr1h,f,c
 35005  01F574  0012               	return		;funcret
 35006  01F576                     __end_of___awdiv:
 35007                           	opt callstack 0
 35008                           
 35009 ;; *************** function _dtoa *****************
 35010 ;; Defined at:
 35011 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 35012 ;; Parameters:    Size  Location     Type
 35013 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35014 ;;		 -> f(6), NULL(0), 
 35015 ;;  d               8  [STACK] long long 
 35016 ;; Auto vars:     Size  Location     Type
 35017 ;;  n               8  [STACK] long long 
 35018 ;;  i               2  [STACK] int 
 35019 ;;  s               2  [STACK] int 
 35020 ;;  w               2  [STACK] int 
 35021 ;;  p               2  [STACK] int 
 35022 ;; Return value:  Size  Location     Type
 35023 ;;                  2  [STACK] int 
 35024 ;; Registers used:
 35025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 35026 ;; Tracked objects:
 35027 ;;		On entry : 0/0
 35028 ;;		On exit  : 0/0
 35029 ;;		Unchanged: 0/0
 35030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35035 ;;Total ram usage:        0 bytes
 35036 ;; Hardware stack levels used:    1
 35037 ;; Hardware stack levels required when called:   20
 35038 ;; This function calls:
 35039 ;;		___aodiv
 35040 ;;		___aomod
 35041 ;;		_abs
 35042 ;;		_pad
 35043 ;; This function is called by:
 35044 ;;		_vfpfcnvrt
 35045 ;; This function uses a reentrant model
 35046 ;;
 35047                           
 35048                           	psect	text116
 35049  01963C                     __ptext116:
 35050                           	opt callstack 0
 35051  01963C                     _dtoa:
 35052                           	opt callstack 0
 35053                           
 35054                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 35055  01963C  0E12               	movlw	18
 35056  01963E  26E1               	addwf	fsr1l,f,c
 35057  019640  0E00               	movlw	0
 35058  019642  22E2               	addwfc	fsr1h,f,c
 35059                           
 35060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 35061                           ;stkvar	_d @ sp[(-18)+-10]
 35062                           
 35063                           ;incstack = 0
 35064 ;; hardware stack exceeded
 35065  019644  0EE4               	movlw	228
 35066  019646  24E1               	addwf	fsr1l,w,c
 35067  019648  6ED9               	movwf	fsr2l,c
 35068  01964A  0EFF               	movlw	255
 35069  01964C  20E2               	addwfc	fsr1h,w,c
 35070  01964E  6EDA               	movwf	fsr2h,c
 35071                           
 35072                           ;stkvar	_n @ sp[(-18)+2]
 35073  019650  0E08               	movlw	8
 35074  019652  6E2A               	movwf	btemp^0,c
 35075  019654  0EF0               	movlw	-16
 35076  019656                     us1470999:
 35077  019656  006F FF7B FFE3     	movff	postinc2,plusw1
 35078  01965C  28E8               	incf	wreg,w,c
 35079  01965E  2E2A               	decfsz	btemp^0,f,c
 35080  019660  D7FA               	bra	us1470999
 35081                           
 35082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 35083                           ;stkvar	_n @ sp[(-18)+2]
 35084  019662  0EF7               	movlw	-9
 35085  019664  AEE3               	btfss	plusw1,7,c
 35086  019666  D002               	goto	u14710
 35087  019668  0E01               	movlw	1
 35088  01966A  D001               	goto	u14720
 35089  01966C                     u14710:
 35090  01966C  0E00               	movlw	0
 35091  01966E                     u14720:
 35092  01966E  6E34               	movwf	(btemp+10)^0,c
 35093  019670  6A35               	clrf	(btemp+11)^0,c
 35094                           
 35095                           ;stkvar	_s @ sp[(-18)+12]
 35096  019672  0EFA               	movlw	-6
 35097  019674  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35098  01967A  0EFB               	movlw	-5
 35099  01967C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35100                           
 35101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 35102                           ;stkvar	_s @ sp[(-18)+12]
 35103  019682  0EFA               	movlw	-6
 35104  019684  006F FF8C  F02A    	movff	plusw1,btemp
 35105  01968A  0EFB               	movlw	-5
 35106  01968C  50E3               	movf	plusw1,w,c
 35107  01968E  102A               	iorwf	btemp^0,w,c
 35108  019690  B4D8               	btfsc	status,2,c
 35109  019692  D025               	goto	u14740
 35110                           
 35111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 35112                           ;stkvar	_n @ sp[(-18)+2]
 35113                           ;stkvar	_n @ sp[(-18)+2]
 35114  019694  0EF0               	movlw	-16
 35115  019696  6CE3               	negf	plusw1,c
 35116  019698  0EF1               	movlw	-15
 35117  01969A  1EE3               	comf	plusw1,f,c
 35118  01969C  0EF2               	movlw	-14
 35119  01969E  1EE3               	comf	plusw1,f,c
 35120  0196A0  0EF3               	movlw	-13
 35121  0196A2  1EE3               	comf	plusw1,f,c
 35122  0196A4  0EF4               	movlw	-12
 35123  0196A6  1EE3               	comf	plusw1,f,c
 35124  0196A8  0EF5               	movlw	-11
 35125  0196AA  1EE3               	comf	plusw1,f,c
 35126  0196AC  0EF6               	movlw	-10
 35127  0196AE  1EE3               	comf	plusw1,f,c
 35128  0196B0  0EF7               	movlw	-9
 35129  0196B2  1EE3               	comf	plusw1,f,c
 35130  0196B4  E314               	bnc	u14740
 35131  0196B6  0EF1               	movlw	-15
 35132  0196B8  2AE3               	incf	plusw1,f,c
 35133  0196BA  E311               	bnc	u14740
 35134  0196BC  0EF2               	movlw	-14
 35135  0196BE  2AE3               	incf	plusw1,f,c
 35136  0196C0  E30E               	bnc	u14740
 35137  0196C2  0EF3               	movlw	-13
 35138  0196C4  2AE3               	incf	plusw1,f,c
 35139  0196C6  E30B               	bnc	u14740
 35140  0196C8  0EF4               	movlw	-12
 35141  0196CA  2AE3               	incf	plusw1,f,c
 35142  0196CC  E308               	bnc	u14740
 35143  0196CE  0EF5               	movlw	-11
 35144  0196D0  2AE3               	incf	plusw1,f,c
 35145  0196D2  E305               	bnc	u14740
 35146  0196D4  0EF6               	movlw	-10
 35147  0196D6  2AE3               	incf	plusw1,f,c
 35148  0196D8  E302               	bnc	u14740
 35149  0196DA  0EF7               	movlw	-9
 35150  0196DC  2AE3               	incf	plusw1,f,c
 35151  0196DE                     u14740:
 35152                           
 35153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 35154  0196DE  AE4D               	btfss	(_prec+1)^0,7,c
 35155                           
 35156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 35157  0196E0  924E               	bcf	_flags^0,1,c
 35158                           
 35159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 35160  0196E2  BE4D               	btfsc	(_prec+1)^0,7,c
 35161  0196E4  D005               	goto	u14760
 35162  0196E6  504D               	movf	(_prec+1)^0,w,c
 35163  0196E8  E110               	bnz	l15747
 35164  0196EA  044C               	decf	_prec^0,w,c
 35165  0196EC  B0D8               	btfsc	status,0,c
 35166  0196EE  D00D               	goto	l15747
 35167  0196F0                     u14760:
 35168  0196F0  0E01               	movlw	1
 35169  0196F2  6E34               	movwf	(btemp+10)^0,c
 35170  0196F4  0E00               	movlw	0
 35171  0196F6  6E35               	movwf	(btemp+11)^0,c
 35172                           
 35173                           ;stkvar	_p @ sp[(-18)+16]
 35174  0196F8  0EFE               	movlw	-2
 35175  0196FA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35176  019700  0EFF               	movlw	-1
 35177  019702  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35178  019708  D008               	goto	l2496
 35179  01970A                     l15747:
 35180                           
 35181                           ;stkvar	_p @ sp[(-18)+16]
 35182  01970A  0EFE               	movlw	-2
 35183  01970C  0060  F133  FFE3   	movff	_prec,plusw1
 35184  019712  0EFF               	movlw	-1
 35185  019714  0060  F137  FFE3   	movff	_prec+1,plusw1
 35186  01971A                     l2496:
 35187                           
 35188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 35189                           ;stkvar	_w @ sp[(-18)+14]
 35190  01971A  0EFC               	movlw	-4
 35191  01971C  0060  F12B  FFE3   	movff	_width,plusw1
 35192  019722  0EFD               	movlw	-3
 35193  019724  0060  F12F  FFE3   	movff	_width+1,plusw1
 35194                           
 35195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 35196                           ;stkvar	_s @ sp[(-18)+12]
 35197  01972A  0EFA               	movlw	-6
 35198  01972C  006F FF8C  F02A    	movff	plusw1,btemp
 35199  019732  0EFB               	movlw	-5
 35200  019734  50E3               	movf	plusw1,w,c
 35201  019736  102A               	iorwf	btemp^0,w,c
 35202  019738  A4D8               	btfss	status,2,c
 35203  01973A  D002               	goto	u14780
 35204  01973C  A44E               	btfss	_flags^0,2,c
 35205  01973E  D00A               	goto	l15755
 35206  019740                     u14780:
 35207                           
 35208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 35209                           ;stkvar	_w @ sp[(-18)+14]
 35210  019740  50E1               	movf	fsr1l,w,c
 35211  019742  0FFC               	addlw	-4
 35212  019744  6ED9               	movwf	fsr2l,c
 35213  019746  50E2               	movf	fsr1h,w,c
 35214  019748  6EDA               	movwf	fsr2h,c
 35215  01974A  0EFF               	movlw	255
 35216  01974C  22DA               	addwfc	fsr2h,f,c
 35217  01974E  06DE               	decf	postinc2,f,c
 35218  019750  0E00               	movlw	0
 35219  019752  5ADD               	subwfb	postdec2,f,c
 35220  019754                     l15755:
 35221                           
 35222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 35223  019754  0E4F               	movlw	79
 35224  019756  6E34               	movwf	(btemp+10)^0,c
 35225  019758  0E00               	movlw	0
 35226  01975A  6E35               	movwf	(btemp+11)^0,c
 35227                           
 35228                           ;stkvar	_i @ sp[(-18)+10]
 35229  01975C  0EF8               	movlw	-8
 35230  01975E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35231  019764  0EF9               	movlw	-7
 35232  019766  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35233                           
 35234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 35235  01976C  0103               	movlb	3	; () banked
 35236  01976E  6BA3               	clrf	(_dbuf+79)& (0+255),b
 35237                           
 35238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 35239  019770  D109               	goto	l15769
 35240  019772                     l15759:
 35241                           
 35242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 35243                           ;stkvar	_i @ sp[(-18)+10]
 35244  019772  50E1               	movf	fsr1l,w,c
 35245  019774  0FF8               	addlw	-8
 35246  019776  6ED9               	movwf	fsr2l,c
 35247  019778  50E2               	movf	fsr1h,w,c
 35248  01977A  6EDA               	movwf	fsr2h,c
 35249  01977C  0EFF               	movlw	255
 35250  01977E  22DA               	addwfc	fsr2h,f,c
 35251  019780  06DE               	decf	postinc2,f,c
 35252  019782  0E00               	movlw	0
 35253  019784  5ADD               	subwfb	postdec2,f,c
 35254                           
 35255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 35256  019786  0E0A               	movlw	10
 35257  019788  6EE6               	movwf	postinc1,c
 35258  01978A  0E00               	movlw	0
 35259  01978C  6EE6               	movwf	postinc1,c
 35260  01978E  0E00               	movlw	0
 35261  019790  6EE6               	movwf	postinc1,c
 35262  019792  0E00               	movlw	0
 35263  019794  6EE6               	movwf	postinc1,c
 35264  019796  0E00               	movlw	0
 35265  019798  6EE6               	movwf	postinc1,c
 35266  01979A  0E00               	movlw	0
 35267  01979C  6EE6               	movwf	postinc1,c
 35268  01979E  0E00               	movlw	0
 35269  0197A0  6EE6               	movwf	postinc1,c
 35270  0197A2  0E00               	movlw	0
 35271  0197A4  6EE6               	movwf	postinc1,c
 35272                           
 35273                           ;stkvar	_n @ sp[(-26)+2]
 35274  0197A6  50E1               	movf	fsr1l,w,c
 35275  0197A8  0FE8               	addlw	-24
 35276  0197AA  6ED9               	movwf	fsr2l,c
 35277  0197AC  50E2               	movf	fsr1h,w,c
 35278  0197AE  6EDA               	movwf	fsr2h,c
 35279  0197B0  0EFF               	movlw	255
 35280  0197B2  22DA               	addwfc	fsr2h,f,c
 35281  0197B4  006F FF7B FFE6     	movff	postinc2,postinc1
 35282  0197BA  006F FF7B FFE6     	movff	postinc2,postinc1
 35283  0197C0  006F FF7B FFE6     	movff	postinc2,postinc1
 35284  0197C6  006F FF7B FFE6     	movff	postinc2,postinc1
 35285  0197CC  006F FF7B FFE6     	movff	postinc2,postinc1
 35286  0197D2  006F FF7B FFE6     	movff	postinc2,postinc1
 35287  0197D8  006F FF7B FFE6     	movff	postinc2,postinc1
 35288  0197DE  006F FF7B FFE6     	movff	postinc2,postinc1
 35289  0197E4  ECB0  F0E7         	call	___aomod	;wreg free
 35290  0197E8  52E5               	movf	postdec1,f,c
 35291  0197EA  006F FF9C  F041    	movff	indf1,btemp+23
 35292  0197F0  52E5               	movf	postdec1,f,c
 35293  0197F2  006F FF9C  F040    	movff	indf1,btemp+22
 35294  0197F8  52E5               	movf	postdec1,f,c
 35295  0197FA  006F FF9C  F03F    	movff	indf1,btemp+21
 35296  019800  52E5               	movf	postdec1,f,c
 35297  019802  006F FF9C  F03E    	movff	indf1,btemp+20
 35298  019808  52E5               	movf	postdec1,f,c
 35299  01980A  006F FF9C  F03D    	movff	indf1,btemp+19
 35300  019810  52E5               	movf	postdec1,f,c
 35301  019812  006F FF9C  F03C    	movff	indf1,btemp+18
 35302  019818  52E5               	movf	postdec1,f,c
 35303  01981A  006F FF9C  F03B    	movff	indf1,btemp+17
 35304  019820  52E5               	movf	postdec1,f,c
 35305  019822  006F FF9C  F03A    	movff	indf1,btemp+16
 35306  019828  0EF8               	movlw	248
 35307  01982A  26E1               	addwf	fsr1l,f,c
 35308  01982C  0EFF               	movlw	255
 35309  01982E  22E2               	addwfc	fsr1h,f,c
 35310  019830  0060  F0E8  F034   	movff	btemp+16,btemp+10
 35311  019836  0060  F0EC  F035   	movff	btemp+17,btemp+11
 35312  01983C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 35313  019842  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 35314  019848  EC62  F011         	call	_abs	;wreg free
 35315  01984C  0E30               	movlw	48
 35316  01984E  262A               	addwf	btemp^0,f,c
 35317                           
 35318                           ;stkvar	_i @ sp[(-18)+10]
 35319  019850  0EF8               	movlw	-8
 35320  019852  006F FF8C  F034    	movff	plusw1,btemp+10
 35321  019858  0EF9               	movlw	-7
 35322  01985A  006F FF8C  F035    	movff	plusw1,btemp+11
 35323  019860  0E54               	movlw	low _dbuf
 35324  019862  2434               	addwf	(btemp+10)^0,w,c
 35325  019864  6ED9               	movwf	fsr2l,c
 35326  019866  0E03               	movlw	high _dbuf
 35327  019868  2035               	addwfc	(btemp+11)^0,w,c
 35328  01986A  6EDA               	movwf	fsr2h,c
 35329  01986C  0060  F0AB  FFDF   	movff	btemp,indf2
 35330                           
 35331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 35332                           ;stkvar	_p @ sp[(-18)+16]
 35333  019872  50E1               	movf	fsr1l,w,c
 35334  019874  0FFE               	addlw	-2
 35335  019876  6ED9               	movwf	fsr2l,c
 35336  019878  50E2               	movf	fsr1h,w,c
 35337  01987A  6EDA               	movwf	fsr2h,c
 35338  01987C  0EFF               	movlw	255
 35339  01987E  22DA               	addwfc	fsr2h,f,c
 35340  019880  06DE               	decf	postinc2,f,c
 35341  019882  0E00               	movlw	0
 35342  019884  5ADD               	subwfb	postdec2,f,c
 35343                           
 35344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 35345                           ;stkvar	_w @ sp[(-18)+14]
 35346  019886  50E1               	movf	fsr1l,w,c
 35347  019888  0FFC               	addlw	-4
 35348  01988A  6ED9               	movwf	fsr2l,c
 35349  01988C  50E2               	movf	fsr1h,w,c
 35350  01988E  6EDA               	movwf	fsr2h,c
 35351  019890  0EFF               	movlw	255
 35352  019892  22DA               	addwfc	fsr2h,f,c
 35353  019894  06DE               	decf	postinc2,f,c
 35354  019896  0E00               	movlw	0
 35355  019898  5ADD               	subwfb	postdec2,f,c
 35356                           
 35357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 35358  01989A  0E0A               	movlw	10
 35359  01989C  6EE6               	movwf	postinc1,c
 35360  01989E  0E00               	movlw	0
 35361  0198A0  6EE6               	movwf	postinc1,c
 35362  0198A2  0E00               	movlw	0
 35363  0198A4  6EE6               	movwf	postinc1,c
 35364  0198A6  0E00               	movlw	0
 35365  0198A8  6EE6               	movwf	postinc1,c
 35366  0198AA  0E00               	movlw	0
 35367  0198AC  6EE6               	movwf	postinc1,c
 35368  0198AE  0E00               	movlw	0
 35369  0198B0  6EE6               	movwf	postinc1,c
 35370  0198B2  0E00               	movlw	0
 35371  0198B4  6EE6               	movwf	postinc1,c
 35372  0198B6  0E00               	movlw	0
 35373  0198B8  6EE6               	movwf	postinc1,c
 35374                           
 35375                           ;stkvar	_n @ sp[(-26)+2]
 35376  0198BA  50E1               	movf	fsr1l,w,c
 35377  0198BC  0FE8               	addlw	-24
 35378  0198BE  6ED9               	movwf	fsr2l,c
 35379  0198C0  50E2               	movf	fsr1h,w,c
 35380  0198C2  6EDA               	movwf	fsr2h,c
 35381  0198C4  0EFF               	movlw	255
 35382  0198C6  22DA               	addwfc	fsr2h,f,c
 35383  0198C8  006F FF7B FFE6     	movff	postinc2,postinc1
 35384  0198CE  006F FF7B FFE6     	movff	postinc2,postinc1
 35385  0198D4  006F FF7B FFE6     	movff	postinc2,postinc1
 35386  0198DA  006F FF7B FFE6     	movff	postinc2,postinc1
 35387  0198E0  006F FF7B FFE6     	movff	postinc2,postinc1
 35388  0198E6  006F FF7B FFE6     	movff	postinc2,postinc1
 35389  0198EC  006F FF7B FFE6     	movff	postinc2,postinc1
 35390  0198F2  006F FF7B FFE6     	movff	postinc2,postinc1
 35391  0198F8  ECC4  F0E1         	call	___aodiv	;wreg free
 35392  0198FC  52E5               	movf	postdec1,f,c
 35393  0198FE  006F FF9C  F041    	movff	indf1,btemp+23
 35394  019904  52E5               	movf	postdec1,f,c
 35395  019906  006F FF9C  F040    	movff	indf1,btemp+22
 35396  01990C  52E5               	movf	postdec1,f,c
 35397  01990E  006F FF9C  F03F    	movff	indf1,btemp+21
 35398  019914  52E5               	movf	postdec1,f,c
 35399  019916  006F FF9C  F03E    	movff	indf1,btemp+20
 35400  01991C  52E5               	movf	postdec1,f,c
 35401  01991E  006F FF9C  F03D    	movff	indf1,btemp+19
 35402  019924  52E5               	movf	postdec1,f,c
 35403  019926  006F FF9C  F03C    	movff	indf1,btemp+18
 35404  01992C  52E5               	movf	postdec1,f,c
 35405  01992E  006F FF9C  F03B    	movff	indf1,btemp+17
 35406  019934  52E5               	movf	postdec1,f,c
 35407  019936  006F FF9C  F03A    	movff	indf1,btemp+16
 35408  01993C  0EF8               	movlw	248
 35409  01993E  26E1               	addwf	fsr1l,f,c
 35410  019940  0EFF               	movlw	255
 35411  019942  22E2               	addwfc	fsr1h,f,c
 35412                           
 35413                           ;stkvar	_n @ sp[(-18)+2]
 35414  019944  0EF0               	movlw	-16
 35415  019946  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 35416  01994C  0EF1               	movlw	-15
 35417  01994E  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 35418  019954  0EF2               	movlw	-14
 35419  019956  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 35420  01995C  0EF3               	movlw	-13
 35421  01995E  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 35422  019964  0EF4               	movlw	-12
 35423  019966  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 35424  01996C  0EF5               	movlw	-11
 35425  01996E  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 35426  019974  0EF6               	movlw	-10
 35427  019976  0060  F103  FFE3   	movff	btemp+22,plusw1
 35428  01997C  0EF7               	movlw	-9
 35429  01997E  0060  F107  FFE3   	movff	btemp+23,plusw1
 35430  019984                     l15769:
 35431                           
 35432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 35433                           ;stkvar	_i @ sp[(-18)+10]
 35434  019984  0EF9               	movlw	-7
 35435  019986  BEE3               	btfsc	plusw1,7,c
 35436  019988  D036               	goto	u14830
 35437  01998A  0EF9               	movlw	-7
 35438  01998C  50E3               	movf	plusw1,w,c
 35439  01998E  E104               	bnz	u14790
 35440  019990  0EF8               	movlw	-8
 35441  019992  04E3               	decf	plusw1,w,c
 35442  019994  A0D8               	btfss	status,0,c
 35443  019996  D02F               	goto	u14830
 35444  019998                     u14790:
 35445                           
 35446                           ;stkvar	_n @ sp[(-18)+2]
 35447  019998  0EF0               	movlw	-16
 35448  01999A  50E3               	movf	plusw1,w,c
 35449  01999C  E115               	bnz	u14801
 35450  01999E  0EF1               	movlw	-15
 35451  0199A0  50E3               	movf	plusw1,w,c
 35452  0199A2  E112               	bnz	u14801
 35453  0199A4  0EF2               	movlw	-14
 35454  0199A6  50E3               	movf	plusw1,w,c
 35455  0199A8  E10F               	bnz	u14801
 35456  0199AA  0EF3               	movlw	-13
 35457  0199AC  50E3               	movf	plusw1,w,c
 35458  0199AE  E10C               	bnz	u14801
 35459  0199B0  0EF4               	movlw	-12
 35460  0199B2  50E3               	movf	plusw1,w,c
 35461  0199B4  E109               	bnz	u14801
 35462  0199B6  0EF5               	movlw	-11
 35463  0199B8  50E3               	movf	plusw1,w,c
 35464  0199BA  E106               	bnz	u14801
 35465  0199BC  0EF6               	movlw	-10
 35466  0199BE  50E3               	movf	plusw1,w,c
 35467  0199C0  E103               	bnz	u14801
 35468  0199C2  0EF7               	movlw	-9
 35469  0199C4  50E3               	movf	plusw1,w,c
 35470  0199C6  A4D8               	btfss	status,2,c
 35471  0199C8                     u14801:
 35472  0199C8  D6D4               	goto	l15759
 35473                           
 35474                           ;stkvar	_p @ sp[(-18)+16]
 35475  0199CA  0EFF               	movlw	-1
 35476  0199CC  BEE3               	btfsc	plusw1,7,c
 35477  0199CE  D007               	goto	u14810
 35478  0199D0  0EFF               	movlw	-1
 35479  0199D2  50E3               	movf	plusw1,w,c
 35480  0199D4  E103               	bnz	u14811
 35481  0199D6  0EFE               	movlw	-2
 35482  0199D8  04E3               	decf	plusw1,w,c
 35483  0199DA  B0D8               	btfsc	status,0,c
 35484  0199DC                     u14811:
 35485  0199DC  D6CA               	goto	l15759
 35486  0199DE                     u14810:
 35487                           
 35488                           ;stkvar	_w @ sp[(-18)+14]
 35489  0199DE  0EFD               	movlw	-3
 35490  0199E0  BEE3               	btfsc	plusw1,7,c
 35491  0199E2  D009               	goto	u14830
 35492  0199E4  0EFD               	movlw	-3
 35493  0199E6  50E3               	movf	plusw1,w,c
 35494  0199E8  E104               	bnz	u14820
 35495  0199EA  0EFC               	movlw	-4
 35496  0199EC  04E3               	decf	plusw1,w,c
 35497  0199EE  A0D8               	btfss	status,0,c
 35498  0199F0  D002               	goto	u14830
 35499  0199F2                     u14820:
 35500  0199F2  B24E               	btfsc	_flags^0,1,c
 35501  0199F4  D6BE               	goto	l15759
 35502  0199F6                     u14830:
 35503                           
 35504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 35505                           ;stkvar	_s @ sp[(-18)+12]
 35506  0199F6  0EFA               	movlw	-6
 35507  0199F8  006F FF8C  F02A    	movff	plusw1,btemp
 35508  0199FE  0EFB               	movlw	-5
 35509  019A00  50E3               	movf	plusw1,w,c
 35510  019A02  102A               	iorwf	btemp^0,w,c
 35511  019A04  A4D8               	btfss	status,2,c
 35512  019A06  D002               	goto	u14850
 35513  019A08  A44E               	btfss	_flags^0,2,c
 35514  019A0A  D033               	goto	l15793
 35515  019A0C                     u14850:
 35516                           
 35517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 35518                           ;stkvar	_i @ sp[(-18)+10]
 35519  019A0C  50E1               	movf	fsr1l,w,c
 35520  019A0E  0FF8               	addlw	-8
 35521  019A10  6ED9               	movwf	fsr2l,c
 35522  019A12  50E2               	movf	fsr1h,w,c
 35523  019A14  6EDA               	movwf	fsr2h,c
 35524  019A16  0EFF               	movlw	255
 35525  019A18  22DA               	addwfc	fsr2h,f,c
 35526  019A1A  06DE               	decf	postinc2,f,c
 35527  019A1C  0E00               	movlw	0
 35528  019A1E  5ADD               	subwfb	postdec2,f,c
 35529                           
 35530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 35531                           ;stkvar	_s @ sp[(-18)+12]
 35532  019A20  0EFA               	movlw	-6
 35533  019A22  006F FF8C  F02A    	movff	plusw1,btemp
 35534  019A28  0EFB               	movlw	-5
 35535  019A2A  50E3               	movf	plusw1,w,c
 35536  019A2C  102A               	iorwf	btemp^0,w,c
 35537  019A2E  A4D8               	btfss	status,2,c
 35538  019A30  D002               	goto	l15789
 35539  019A32  0E2B               	movlw	43
 35540  019A34  D001               	goto	L40
 35541  019A36                     l15789:
 35542  019A36  0E2D               	movlw	45
 35543  019A38                     L40:
 35544  019A38  6E34               	movwf	(btemp+10)^0,c
 35545  019A3A  0E00               	movlw	0
 35546  019A3C  6E35               	movwf	(btemp+11)^0,c
 35547                           
 35548                           ;stkvar	_dtoa$6614 @ sp[(-18)+0]
 35549  019A3E  0EEE               	movlw	-18
 35550  019A40  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35551  019A46  0EEF               	movlw	-17
 35552  019A48  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35553                           
 35554                           ;stkvar	_dtoa$6614 @ sp[(-18)+0]
 35555                           ;stkvar	_i @ sp[(-18)+10]
 35556  019A4E  0EF8               	movlw	-8
 35557  019A50  006F FF8C  F034    	movff	plusw1,btemp+10
 35558  019A56  0EF9               	movlw	-7
 35559  019A58  006F FF8C  F035    	movff	plusw1,btemp+11
 35560  019A5E  0E54               	movlw	low _dbuf
 35561  019A60  2434               	addwf	(btemp+10)^0,w,c
 35562  019A62  6ED9               	movwf	fsr2l,c
 35563  019A64  0E03               	movlw	high _dbuf
 35564  019A66  2035               	addwfc	(btemp+11)^0,w,c
 35565  019A68  6EDA               	movwf	fsr2h,c
 35566  019A6A  0EEE               	movlw	-18
 35567  019A6C  006F FF8F FFDF     	movff	plusw1,indf2
 35568  019A72                     l15793:
 35569                           
 35570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 35571                           ;stkvar	_w @ sp[(-18)+14]
 35572  019A72  0EFC               	movlw	-4
 35573  019A74  006F FF8F FFE6     	movff	plusw1,postinc1
 35574  019A7A  006F FF8F FFE6     	movff	plusw1,postinc1
 35575                           
 35576                           ;stkvar	_i @ sp[(-20)+10]
 35577  019A80  0E54               	movlw	low _dbuf
 35578  019A82  6E34               	movwf	(btemp+10)^0,c
 35579  019A84  0E03               	movlw	high _dbuf
 35580  019A86  6E35               	movwf	(btemp+11)^0,c
 35581  019A88  0EF6               	movlw	-10
 35582  019A8A  50E3               	movf	plusw1,w,c
 35583  019A8C  2634               	addwf	(btemp+10)^0,f,c
 35584  019A8E  0EF7               	movlw	-9
 35585  019A90  50E3               	movf	plusw1,w,c
 35586  019A92  2235               	addwfc	(btemp+11)^0,f,c
 35587  019A94  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 35588  019A9A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 35589                           
 35590                           ;stkvar	_fp @ sp[(-22)+-2]
 35591  019AA0  0EE8               	movlw	-24
 35592  019AA2  006F FF8F FFE6     	movff	plusw1,postinc1
 35593  019AA8  006F FF8F FFE6     	movff	plusw1,postinc1
 35594  019AAE  ECCF  F0FE         	call	_pad	;wreg free
 35595                           
 35596                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 35597  019AB2  0EE4               	movlw	228
 35598  019AB4  26E1               	addwf	fsr1l,f,c
 35599  019AB6  0EFF               	movlw	255
 35600  019AB8  22E2               	addwfc	fsr1h,f,c
 35601  019ABA  0012               	return		;funcret
 35602  019ABC                     __end_of_dtoa:
 35603                           	opt callstack 0
 35604                           
 35605 ;; *************** function _abs *****************
 35606 ;; Defined at:
 35607 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 35608 ;; Parameters:    Size  Location     Type
 35609 ;;  a               2  [STACK] int 
 35610 ;; Auto vars:     Size  Location     Type
 35611 ;;		None
 35612 ;; Return value:  Size  Location     Type
 35613 ;;                  2  [STACK] int 
 35614 ;; Registers used:
 35615 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 35616 ;; Tracked objects:
 35617 ;;		On entry : 0/3
 35618 ;;		On exit  : 0/0
 35619 ;;		Unchanged: 0/0
 35620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35625 ;;Total ram usage:        0 bytes
 35626 ;; Hardware stack levels used:    1
 35627 ;; Hardware stack levels required when called:   15
 35628 ;; This function calls:
 35629 ;;		Nothing
 35630 ;; This function is called by:
 35631 ;;		_dtoa
 35632 ;; This function uses a reentrant model
 35633 ;;
 35634                           
 35635                           	psect	text117
 35636  0022C4                     __ptext117:
 35637                           	opt callstack 0
 35638  0022C4                     _abs:
 35639                           	opt callstack 0
 35640                           
 35641                           ;stkvar	_a @ sp[(0)+-2]
 35642                           
 35643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35644                           ;incstack = 0
 35645 ;; hardware stack exceeded
 35646  0022C4  0EFF               	movlw	-1
 35647  0022C6  BEE3               	btfsc	plusw1,7,c
 35648  0022C8  D007               	goto	u7820
 35649  0022CA  0EFF               	movlw	-1
 35650  0022CC  50E3               	movf	plusw1,w,c
 35651  0022CE  E112               	bnz	l10171
 35652  0022D0  0EFE               	movlw	-2
 35653  0022D2  04E3               	decf	plusw1,w,c
 35654  0022D4  B0D8               	btfsc	status,0,c
 35655  0022D6  D00E               	goto	l10171
 35656  0022D8                     u7820:
 35657                           
 35658                           ;stkvar	_a @ sp[(0)+-2]
 35659  0022D8  0EFE               	movlw	-2
 35660  0022DA  006F FF8C  F02A    	movff	plusw1,btemp
 35661  0022E0  1E2A               	comf	btemp^0,f,c
 35662  0022E2  0EFF               	movlw	-1
 35663  0022E4  006F FF8C  F02B    	movff	plusw1,btemp+1
 35664  0022EA  1E2B               	comf	(btemp+1)^0,f,c
 35665  0022EC  2A2A               	incf	btemp^0,f,c
 35666  0022EE  B4D8               	btfsc	status,2,c
 35667  0022F0  2A2B               	incf	(btemp+1)^0,f,c
 35668  0022F2  D008               	goto	l3422
 35669  0022F4                     l10171:
 35670                           
 35671                           ;stkvar	_a @ sp[(0)+-2]
 35672  0022F4  0EFE               	movlw	-2
 35673  0022F6  006F FF8C  F02A    	movff	plusw1,btemp
 35674  0022FC  0EFF               	movlw	-1
 35675  0022FE  006F FF8C  F02B    	movff	plusw1,btemp+1
 35676  002304                     l3422:
 35677                           
 35678                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 35679  002304  52E5               	movf	postdec1,f,c
 35680  002306  52E5               	movf	postdec1,f,c
 35681  002308  0012               	return		;funcret
 35682  00230A                     __end_of_abs:
 35683                           	opt callstack 0
 35684                           
 35685 ;; *************** function ___aomod *****************
 35686 ;; Defined at:
 35687 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 35688 ;; Parameters:    Size  Location     Type
 35689 ;;  dividend        8  [STACK] long long 
 35690 ;;  divisor         8  [STACK] long long 
 35691 ;; Auto vars:     Size  Location     Type
 35692 ;;  sign            1  [STACK] unsigned char 
 35693 ;;  counter         1  [STACK] unsigned char 
 35694 ;; Return value:  Size  Location     Type
 35695 ;;                  8  [STACK] long long 
 35696 ;; Registers used:
 35697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 35698 ;; Tracked objects:
 35699 ;;		On entry : 0/0
 35700 ;;		On exit  : 0/0
 35701 ;;		Unchanged: 0/0
 35702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35707 ;;Total ram usage:        0 bytes
 35708 ;; Hardware stack levels used:    1
 35709 ;; Hardware stack levels required when called:   15
 35710 ;; This function calls:
 35711 ;;		Nothing
 35712 ;; This function is called by:
 35713 ;;		_dtoa
 35714 ;;		___secs_to_tm
 35715 ;;		_rule_to_secs
 35716 ;;		___year_to_secs
 35717 ;; This function uses a reentrant model
 35718 ;;
 35719                           
 35720                           	psect	text118
 35721  01CF60                     __ptext118:
 35722                           	opt callstack 0
 35723  01CF60                     ___aomod:
 35724                           	opt callstack 0
 35725                           
 35726                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 35727  01CF60  52E6               	movf	postinc1,f,c
 35728  01CF62  52E6               	movf	postinc1,f,c
 35729                           
 35730                           ;stkvar	_sign @ sp[(-2)+0]
 35731                           
 35732                           ;incstack = 0
 35733 ;; hardware stack exceeded
 35734  01CF64  0EFE               	movlw	-2
 35735  01CF66  6AE3               	clrf	plusw1,c
 35736                           
 35737                           ;stkvar	_dividend @ sp[(-2)+-8]
 35738  01CF68  0EFD               	movlw	-3
 35739  01CF6A  AEE3               	btfss	plusw1,7,c
 35740  01CF6C  D028               	goto	l10355
 35741                           
 35742                           ;stkvar	_dividend @ sp[(-2)+-8]
 35743                           ;stkvar	_dividend @ sp[(-2)+-8]
 35744  01CF6E  0EF6               	movlw	-10
 35745  01CF70  6CE3               	negf	plusw1,c
 35746  01CF72  0EF7               	movlw	-9
 35747  01CF74  1EE3               	comf	plusw1,f,c
 35748  01CF76  0EF8               	movlw	-8
 35749  01CF78  1EE3               	comf	plusw1,f,c
 35750  01CF7A  0EF9               	movlw	-7
 35751  01CF7C  1EE3               	comf	plusw1,f,c
 35752  01CF7E  0EFA               	movlw	-6
 35753  01CF80  1EE3               	comf	plusw1,f,c
 35754  01CF82  0EFB               	movlw	-5
 35755  01CF84  1EE3               	comf	plusw1,f,c
 35756  01CF86  0EFC               	movlw	-4
 35757  01CF88  1EE3               	comf	plusw1,f,c
 35758  01CF8A  0EFD               	movlw	-3
 35759  01CF8C  1EE3               	comf	plusw1,f,c
 35760  01CF8E  E314               	bnc	u8310
 35761  01CF90  0EF7               	movlw	-9
 35762  01CF92  2AE3               	incf	plusw1,f,c
 35763  01CF94  E311               	bnc	u8310
 35764  01CF96  0EF8               	movlw	-8
 35765  01CF98  2AE3               	incf	plusw1,f,c
 35766  01CF9A  E30E               	bnc	u8310
 35767  01CF9C  0EF9               	movlw	-7
 35768  01CF9E  2AE3               	incf	plusw1,f,c
 35769  01CFA0  E30B               	bnc	u8310
 35770  01CFA2  0EFA               	movlw	-6
 35771  01CFA4  2AE3               	incf	plusw1,f,c
 35772  01CFA6  E308               	bnc	u8310
 35773  01CFA8  0EFB               	movlw	-5
 35774  01CFAA  2AE3               	incf	plusw1,f,c
 35775  01CFAC  E305               	bnc	u8310
 35776  01CFAE  0EFC               	movlw	-4
 35777  01CFB0  2AE3               	incf	plusw1,f,c
 35778  01CFB2  E302               	bnc	u8310
 35779  01CFB4  0EFD               	movlw	-3
 35780  01CFB6  2AE3               	incf	plusw1,f,c
 35781  01CFB8                     u8310:
 35782                           
 35783                           ;stkvar	_sign @ sp[(-2)+0]
 35784  01CFB8  0EFE               	movlw	-2
 35785  01CFBA  6AE3               	clrf	plusw1,c
 35786  01CFBC  2AE3               	incf	plusw1,f,c
 35787  01CFBE                     l10355:
 35788                           
 35789                           ;stkvar	_divisor @ sp[(-2)+-16]
 35790  01CFBE  0EF5               	movlw	-11
 35791  01CFC0  AEE3               	btfss	plusw1,7,c
 35792  01CFC2  D025               	goto	u8330
 35793                           
 35794                           ;stkvar	_divisor @ sp[(-2)+-16]
 35795                           ;stkvar	_divisor @ sp[(-2)+-16]
 35796  01CFC4  0EEE               	movlw	-18
 35797  01CFC6  6CE3               	negf	plusw1,c
 35798  01CFC8  0EEF               	movlw	-17
 35799  01CFCA  1EE3               	comf	plusw1,f,c
 35800  01CFCC  0EF0               	movlw	-16
 35801  01CFCE  1EE3               	comf	plusw1,f,c
 35802  01CFD0  0EF1               	movlw	-15
 35803  01CFD2  1EE3               	comf	plusw1,f,c
 35804  01CFD4  0EF2               	movlw	-14
 35805  01CFD6  1EE3               	comf	plusw1,f,c
 35806  01CFD8  0EF3               	movlw	-13
 35807  01CFDA  1EE3               	comf	plusw1,f,c
 35808  01CFDC  0EF4               	movlw	-12
 35809  01CFDE  1EE3               	comf	plusw1,f,c
 35810  01CFE0  0EF5               	movlw	-11
 35811  01CFE2  1EE3               	comf	plusw1,f,c
 35812  01CFE4  E314               	bnc	u8330
 35813  01CFE6  0EEF               	movlw	-17
 35814  01CFE8  2AE3               	incf	plusw1,f,c
 35815  01CFEA  E311               	bnc	u8330
 35816  01CFEC  0EF0               	movlw	-16
 35817  01CFEE  2AE3               	incf	plusw1,f,c
 35818  01CFF0  E30E               	bnc	u8330
 35819  01CFF2  0EF1               	movlw	-15
 35820  01CFF4  2AE3               	incf	plusw1,f,c
 35821  01CFF6  E30B               	bnc	u8330
 35822  01CFF8  0EF2               	movlw	-14
 35823  01CFFA  2AE3               	incf	plusw1,f,c
 35824  01CFFC  E308               	bnc	u8330
 35825  01CFFE  0EF3               	movlw	-13
 35826  01D000  2AE3               	incf	plusw1,f,c
 35827  01D002  E305               	bnc	u8330
 35828  01D004  0EF4               	movlw	-12
 35829  01D006  2AE3               	incf	plusw1,f,c
 35830  01D008  E302               	bnc	u8330
 35831  01D00A  0EF5               	movlw	-11
 35832  01D00C  2AE3               	incf	plusw1,f,c
 35833  01D00E                     u8330:
 35834                           
 35835                           ;stkvar	_divisor @ sp[(-2)+-16]
 35836  01D00E  0EEE               	movlw	-18
 35837  01D010  50E3               	movf	plusw1,w,c
 35838  01D012  E116               	bnz	u8340
 35839  01D014  0EEF               	movlw	-17
 35840  01D016  50E3               	movf	plusw1,w,c
 35841  01D018  E113               	bnz	u8340
 35842  01D01A  0EF0               	movlw	-16
 35843  01D01C  50E3               	movf	plusw1,w,c
 35844  01D01E  E110               	bnz	u8340
 35845  01D020  0EF1               	movlw	-15
 35846  01D022  50E3               	movf	plusw1,w,c
 35847  01D024  E10D               	bnz	u8340
 35848  01D026  0EF2               	movlw	-14
 35849  01D028  50E3               	movf	plusw1,w,c
 35850  01D02A  E10A               	bnz	u8340
 35851  01D02C  0EF3               	movlw	-13
 35852  01D02E  50E3               	movf	plusw1,w,c
 35853  01D030  E107               	bnz	u8340
 35854  01D032  0EF4               	movlw	-12
 35855  01D034  50E3               	movf	plusw1,w,c
 35856  01D036  E104               	bnz	u8340
 35857  01D038  0EF5               	movlw	-11
 35858  01D03A  50E3               	movf	plusw1,w,c
 35859  01D03C  B4D8               	btfsc	status,2,c
 35860  01D03E  D075               	goto	u8370
 35861  01D040                     u8340:
 35862                           
 35863                           ;stkvar	_counter @ sp[(-2)+1]
 35864  01D040  0EFF               	movlw	-1
 35865  01D042  6AE3               	clrf	plusw1,c
 35866  01D044  D012               	goto	L41
 35867  01D046                     l10363:
 35868                           
 35869                           ;stkvar	_divisor @ sp[(-2)+-16]
 35870  01D046  90D8               	bcf	status,0,c
 35871  01D048  0EEE               	movlw	-18
 35872  01D04A  36E3               	rlcf	plusw1,f,c
 35873  01D04C  0EEF               	movlw	-17
 35874  01D04E  36E3               	rlcf	plusw1,f,c
 35875  01D050  0EF0               	movlw	-16
 35876  01D052  36E3               	rlcf	plusw1,f,c
 35877  01D054  0EF1               	movlw	-15
 35878  01D056  36E3               	rlcf	plusw1,f,c
 35879  01D058  0EF2               	movlw	-14
 35880  01D05A  36E3               	rlcf	plusw1,f,c
 35881  01D05C  0EF3               	movlw	-13
 35882  01D05E  36E3               	rlcf	plusw1,f,c
 35883  01D060  0EF4               	movlw	-12
 35884  01D062  36E3               	rlcf	plusw1,f,c
 35885  01D064  0EF5               	movlw	-11
 35886  01D066  36E3               	rlcf	plusw1,f,c
 35887                           
 35888                           ;stkvar	_counter @ sp[(-2)+1]
 35889  01D068  0EFF               	movlw	-1
 35890  01D06A                     L41:
 35891  01D06A  2AE3               	incf	plusw1,f,c
 35892                           
 35893                           ;stkvar	_divisor @ sp[(-2)+-16]
 35894  01D06C  0EF5               	movlw	-11
 35895  01D06E  AEE3               	btfss	plusw1,7,c
 35896  01D070  D7EA               	goto	l10363
 35897  01D072                     u8350:
 35898                           
 35899                           ;stkvar	_divisor @ sp[(-2)+-16]
 35900                           ;stkvar	_dividend @ sp[(-2)+-8]
 35901  01D072  50E1               	movf	fsr1l,w,c
 35902  01D074  0FF6               	addlw	-10
 35903  01D076  6ED9               	movwf	fsr2l,c
 35904  01D078  50E2               	movf	fsr1h,w,c
 35905  01D07A  6EDA               	movwf	fsr2h,c
 35906  01D07C  0EFF               	movlw	255
 35907  01D07E  22DA               	addwfc	fsr2h,f,c
 35908  01D080  0EEE               	movlw	-18
 35909  01D082  50E3               	movf	plusw1,w,c
 35910  01D084  5CDE               	subwf	postinc2,w,c
 35911  01D086  0EEF               	movlw	-17
 35912  01D088  50E3               	movf	plusw1,w,c
 35913  01D08A  58DE               	subwfb	postinc2,w,c
 35914  01D08C  0EF0               	movlw	-16
 35915  01D08E  50E3               	movf	plusw1,w,c
 35916  01D090  58DE               	subwfb	postinc2,w,c
 35917  01D092  0EF1               	movlw	-15
 35918  01D094  50E3               	movf	plusw1,w,c
 35919  01D096  58DE               	subwfb	postinc2,w,c
 35920  01D098  0EF2               	movlw	-14
 35921  01D09A  50E3               	movf	plusw1,w,c
 35922  01D09C  58DE               	subwfb	postinc2,w,c
 35923  01D09E  0EF3               	movlw	-13
 35924  01D0A0  50E3               	movf	plusw1,w,c
 35925  01D0A2  58DE               	subwfb	postinc2,w,c
 35926  01D0A4  0EF4               	movlw	-12
 35927  01D0A6  50E3               	movf	plusw1,w,c
 35928  01D0A8  58DE               	subwfb	postinc2,w,c
 35929  01D0AA  0EF5               	movlw	-11
 35930  01D0AC  50E3               	movf	plusw1,w,c
 35931  01D0AE  58DE               	subwfb	postinc2,w,c
 35932  01D0B0  A0D8               	btfss	status,0,c
 35933  01D0B2  D01F               	goto	l10371
 35934                           
 35935                           ;stkvar	_divisor @ sp[(-2)+-16]
 35936                           ;stkvar	_dividend @ sp[(-2)+-8]
 35937  01D0B4  50E1               	movf	fsr1l,w,c
 35938  01D0B6  0FF6               	addlw	-10
 35939  01D0B8  6ED9               	movwf	fsr2l,c
 35940  01D0BA  50E2               	movf	fsr1h,w,c
 35941  01D0BC  6EDA               	movwf	fsr2h,c
 35942  01D0BE  0EFF               	movlw	255
 35943  01D0C0  22DA               	addwfc	fsr2h,f,c
 35944  01D0C2  0EEE               	movlw	-18
 35945  01D0C4  50E3               	movf	plusw1,w,c
 35946  01D0C6  5EDE               	subwf	postinc2,f,c
 35947  01D0C8  0EEF               	movlw	-17
 35948  01D0CA  50E3               	movf	plusw1,w,c
 35949  01D0CC  5ADE               	subwfb	postinc2,f,c
 35950  01D0CE  0EF0               	movlw	-16
 35951  01D0D0  50E3               	movf	plusw1,w,c
 35952  01D0D2  5ADE               	subwfb	postinc2,f,c
 35953  01D0D4  0EF1               	movlw	-15
 35954  01D0D6  50E3               	movf	plusw1,w,c
 35955  01D0D8  5ADE               	subwfb	postinc2,f,c
 35956  01D0DA  0EF2               	movlw	-14
 35957  01D0DC  50E3               	movf	plusw1,w,c
 35958  01D0DE  5ADE               	subwfb	postinc2,f,c
 35959  01D0E0  0EF3               	movlw	-13
 35960  01D0E2  50E3               	movf	plusw1,w,c
 35961  01D0E4  5ADE               	subwfb	postinc2,f,c
 35962  01D0E6  0EF4               	movlw	-12
 35963  01D0E8  50E3               	movf	plusw1,w,c
 35964  01D0EA  5ADE               	subwfb	postinc2,f,c
 35965  01D0EC  0EF5               	movlw	-11
 35966  01D0EE  50E3               	movf	plusw1,w,c
 35967  01D0F0  5ADE               	subwfb	postinc2,f,c
 35968  01D0F2                     l10371:
 35969                           
 35970                           ;stkvar	_divisor @ sp[(-2)+-16]
 35971  01D0F2  90D8               	bcf	status,0,c
 35972  01D0F4  0EF5               	movlw	-11
 35973  01D0F6  32E3               	rrcf	plusw1,f,c
 35974  01D0F8  0EF4               	movlw	-12
 35975  01D0FA  32E3               	rrcf	plusw1,f,c
 35976  01D0FC  0EF3               	movlw	-13
 35977  01D0FE  32E3               	rrcf	plusw1,f,c
 35978  01D100  0EF2               	movlw	-14
 35979  01D102  32E3               	rrcf	plusw1,f,c
 35980  01D104  0EF1               	movlw	-15
 35981  01D106  32E3               	rrcf	plusw1,f,c
 35982  01D108  0EF0               	movlw	-16
 35983  01D10A  32E3               	rrcf	plusw1,f,c
 35984  01D10C  0EEF               	movlw	-17
 35985  01D10E  32E3               	rrcf	plusw1,f,c
 35986  01D110  0EEE               	movlw	-18
 35987  01D112  32E3               	rrcf	plusw1,f,c
 35988                           
 35989                           ;stkvar	_counter @ sp[(-2)+1]
 35990  01D114  0EFF               	movlw	-1
 35991  01D116  50E3               	movf	plusw1,w,c
 35992  01D118  6E2A               	movwf	btemp^0,c
 35993  01D11A  0E01               	movlw	1
 35994  01D11C  5E2A               	subwf	btemp^0,f,c
 35995  01D11E  0EFF               	movlw	-1
 35996  01D120  0060  F0AB  FFE3   	movff	btemp,plusw1
 35997  01D126  A4D8               	btfss	status,2,c
 35998  01D128  D7A4               	goto	u8350
 35999  01D12A                     u8370:
 36000                           
 36001                           ;stkvar	_sign @ sp[(-2)+0]
 36002  01D12A  0EFE               	movlw	-2
 36003  01D12C  50E3               	movf	plusw1,w,c
 36004  01D12E  B4D8               	btfsc	status,2,c
 36005  01D130  D025               	goto	u8390
 36006                           
 36007                           ;stkvar	_dividend @ sp[(-2)+-8]
 36008                           ;stkvar	_dividend @ sp[(-2)+-8]
 36009  01D132  0EF6               	movlw	-10
 36010  01D134  6CE3               	negf	plusw1,c
 36011  01D136  0EF7               	movlw	-9
 36012  01D138  1EE3               	comf	plusw1,f,c
 36013  01D13A  0EF8               	movlw	-8
 36014  01D13C  1EE3               	comf	plusw1,f,c
 36015  01D13E  0EF9               	movlw	-7
 36016  01D140  1EE3               	comf	plusw1,f,c
 36017  01D142  0EFA               	movlw	-6
 36018  01D144  1EE3               	comf	plusw1,f,c
 36019  01D146  0EFB               	movlw	-5
 36020  01D148  1EE3               	comf	plusw1,f,c
 36021  01D14A  0EFC               	movlw	-4
 36022  01D14C  1EE3               	comf	plusw1,f,c
 36023  01D14E  0EFD               	movlw	-3
 36024  01D150  1EE3               	comf	plusw1,f,c
 36025  01D152  E314               	bnc	u8390
 36026  01D154  0EF7               	movlw	-9
 36027  01D156  2AE3               	incf	plusw1,f,c
 36028  01D158  E311               	bnc	u8390
 36029  01D15A  0EF8               	movlw	-8
 36030  01D15C  2AE3               	incf	plusw1,f,c
 36031  01D15E  E30E               	bnc	u8390
 36032  01D160  0EF9               	movlw	-7
 36033  01D162  2AE3               	incf	plusw1,f,c
 36034  01D164  E30B               	bnc	u8390
 36035  01D166  0EFA               	movlw	-6
 36036  01D168  2AE3               	incf	plusw1,f,c
 36037  01D16A  E308               	bnc	u8390
 36038  01D16C  0EFB               	movlw	-5
 36039  01D16E  2AE3               	incf	plusw1,f,c
 36040  01D170  E305               	bnc	u8390
 36041  01D172  0EFC               	movlw	-4
 36042  01D174  2AE3               	incf	plusw1,f,c
 36043  01D176  E302               	bnc	u8390
 36044  01D178  0EFD               	movlw	-3
 36045  01D17A  2AE3               	incf	plusw1,f,c
 36046  01D17C                     u8390:
 36047                           
 36048                           ;stkvar	_dividend @ sp[(-2)+-8]
 36049  01D17C  0EF6               	movlw	246
 36050  01D17E  24E1               	addwf	fsr1l,w,c
 36051  01D180  6ED9               	movwf	fsr2l,c
 36052  01D182  0EFF               	movlw	255
 36053  01D184  20E2               	addwfc	fsr1h,w,c
 36054  01D186  6EDA               	movwf	fsr2h,c
 36055                           
 36056                           ;stkvar	?___aomod @ sp[(-2)+-8]
 36057  01D188  0E08               	movlw	8
 36058  01D18A  6E2A               	movwf	btemp^0,c
 36059  01D18C  0EF6               	movlw	-10
 36060  01D18E                     us840999:
 36061  01D18E  006F FF7B FFE3     	movff	postinc2,plusw1
 36062  01D194  28E8               	incf	wreg,w,c
 36063  01D196  2E2A               	decfsz	btemp^0,f,c
 36064  01D198  D7FA               	bra	us840999
 36065                           
 36066                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 36067  01D19A  52E5               	movf	postdec1,f,c
 36068  01D19C  52E5               	movf	postdec1,f,c
 36069  01D19E  0012               	return		;funcret
 36070  01D1A0                     __end_of___aomod:
 36071                           	opt callstack 0
 36072                           
 36073 ;; *************** function ___aodiv *****************
 36074 ;; Defined at:
 36075 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 36076 ;; Parameters:    Size  Location     Type
 36077 ;;  dividend        8  [STACK] long long 
 36078 ;;  divisor         8  [STACK] long long 
 36079 ;; Auto vars:     Size  Location     Type
 36080 ;;  quotient        8  [STACK] long long 
 36081 ;;  sign            1  [STACK] unsigned char 
 36082 ;;  counter         1  [STACK] unsigned char 
 36083 ;; Return value:  Size  Location     Type
 36084 ;;                  8  [STACK] long long 
 36085 ;; Registers used:
 36086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 36087 ;; Tracked objects:
 36088 ;;		On entry : 0/0
 36089 ;;		On exit  : 0/0
 36090 ;;		Unchanged: 0/0
 36091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36096 ;;Total ram usage:        0 bytes
 36097 ;; Hardware stack levels used:    1
 36098 ;; Hardware stack levels required when called:   15
 36099 ;; This function calls:
 36100 ;;		Nothing
 36101 ;; This function is called by:
 36102 ;;		_dtoa
 36103 ;;		___secs_to_tm
 36104 ;;		___secs_to_zone
 36105 ;;		___year_to_secs
 36106 ;; This function uses a reentrant model
 36107 ;;
 36108                           
 36109                           	psect	text119
 36110  01C388                     __ptext119:
 36111                           	opt callstack 0
 36112  01C388                     ___aodiv:
 36113                           	opt callstack 0
 36114                           
 36115                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 36116  01C388  0E0A               	movlw	10
 36117  01C38A  26E1               	addwf	fsr1l,f,c
 36118  01C38C  0E00               	movlw	0
 36119  01C38E  22E2               	addwfc	fsr1h,f,c
 36120                           
 36121                           ;stkvar	_sign @ sp[(-10)+8]
 36122                           
 36123                           ;incstack = 0
 36124 ;; hardware stack exceeded
 36125  01C390  0EFE               	movlw	-2
 36126  01C392  6AE3               	clrf	plusw1,c
 36127                           
 36128                           ;stkvar	_divisor @ sp[(-10)+-16]
 36129  01C394  0EED               	movlw	-19
 36130  01C396  AEE3               	btfss	plusw1,7,c
 36131  01C398  D028               	goto	l10311
 36132                           
 36133                           ;stkvar	_divisor @ sp[(-10)+-16]
 36134                           ;stkvar	_divisor @ sp[(-10)+-16]
 36135  01C39A  0EE6               	movlw	-26
 36136  01C39C  6CE3               	negf	plusw1,c
 36137  01C39E  0EE7               	movlw	-25
 36138  01C3A0  1EE3               	comf	plusw1,f,c
 36139  01C3A2  0EE8               	movlw	-24
 36140  01C3A4  1EE3               	comf	plusw1,f,c
 36141  01C3A6  0EE9               	movlw	-23
 36142  01C3A8  1EE3               	comf	plusw1,f,c
 36143  01C3AA  0EEA               	movlw	-22
 36144  01C3AC  1EE3               	comf	plusw1,f,c
 36145  01C3AE  0EEB               	movlw	-21
 36146  01C3B0  1EE3               	comf	plusw1,f,c
 36147  01C3B2  0EEC               	movlw	-20
 36148  01C3B4  1EE3               	comf	plusw1,f,c
 36149  01C3B6  0EED               	movlw	-19
 36150  01C3B8  1EE3               	comf	plusw1,f,c
 36151  01C3BA  E314               	bnc	u8190
 36152  01C3BC  0EE7               	movlw	-25
 36153  01C3BE  2AE3               	incf	plusw1,f,c
 36154  01C3C0  E311               	bnc	u8190
 36155  01C3C2  0EE8               	movlw	-24
 36156  01C3C4  2AE3               	incf	plusw1,f,c
 36157  01C3C6  E30E               	bnc	u8190
 36158  01C3C8  0EE9               	movlw	-23
 36159  01C3CA  2AE3               	incf	plusw1,f,c
 36160  01C3CC  E30B               	bnc	u8190
 36161  01C3CE  0EEA               	movlw	-22
 36162  01C3D0  2AE3               	incf	plusw1,f,c
 36163  01C3D2  E308               	bnc	u8190
 36164  01C3D4  0EEB               	movlw	-21
 36165  01C3D6  2AE3               	incf	plusw1,f,c
 36166  01C3D8  E305               	bnc	u8190
 36167  01C3DA  0EEC               	movlw	-20
 36168  01C3DC  2AE3               	incf	plusw1,f,c
 36169  01C3DE  E302               	bnc	u8190
 36170  01C3E0  0EED               	movlw	-19
 36171  01C3E2  2AE3               	incf	plusw1,f,c
 36172  01C3E4                     u8190:
 36173                           
 36174                           ;stkvar	_sign @ sp[(-10)+8]
 36175  01C3E4  0EFE               	movlw	-2
 36176  01C3E6  6AE3               	clrf	plusw1,c
 36177  01C3E8  2AE3               	incf	plusw1,f,c
 36178  01C3EA                     l10311:
 36179                           
 36180                           ;stkvar	_dividend @ sp[(-10)+-8]
 36181  01C3EA  0EF5               	movlw	-11
 36182  01C3EC  AEE3               	btfss	plusw1,7,c
 36183  01C3EE  D027               	goto	l10317
 36184                           
 36185                           ;stkvar	_dividend @ sp[(-10)+-8]
 36186                           ;stkvar	_dividend @ sp[(-10)+-8]
 36187  01C3F0  0EEE               	movlw	-18
 36188  01C3F2  6CE3               	negf	plusw1,c
 36189  01C3F4  0EEF               	movlw	-17
 36190  01C3F6  1EE3               	comf	plusw1,f,c
 36191  01C3F8  0EF0               	movlw	-16
 36192  01C3FA  1EE3               	comf	plusw1,f,c
 36193  01C3FC  0EF1               	movlw	-15
 36194  01C3FE  1EE3               	comf	plusw1,f,c
 36195  01C400  0EF2               	movlw	-14
 36196  01C402  1EE3               	comf	plusw1,f,c
 36197  01C404  0EF3               	movlw	-13
 36198  01C406  1EE3               	comf	plusw1,f,c
 36199  01C408  0EF4               	movlw	-12
 36200  01C40A  1EE3               	comf	plusw1,f,c
 36201  01C40C  0EF5               	movlw	-11
 36202  01C40E  1EE3               	comf	plusw1,f,c
 36203  01C410  E314               	bnc	u8210
 36204  01C412  0EEF               	movlw	-17
 36205  01C414  2AE3               	incf	plusw1,f,c
 36206  01C416  E311               	bnc	u8210
 36207  01C418  0EF0               	movlw	-16
 36208  01C41A  2AE3               	incf	plusw1,f,c
 36209  01C41C  E30E               	bnc	u8210
 36210  01C41E  0EF1               	movlw	-15
 36211  01C420  2AE3               	incf	plusw1,f,c
 36212  01C422  E30B               	bnc	u8210
 36213  01C424  0EF2               	movlw	-14
 36214  01C426  2AE3               	incf	plusw1,f,c
 36215  01C428  E308               	bnc	u8210
 36216  01C42A  0EF3               	movlw	-13
 36217  01C42C  2AE3               	incf	plusw1,f,c
 36218  01C42E  E305               	bnc	u8210
 36219  01C430  0EF4               	movlw	-12
 36220  01C432  2AE3               	incf	plusw1,f,c
 36221  01C434  E302               	bnc	u8210
 36222  01C436  0EF5               	movlw	-11
 36223  01C438  2AE3               	incf	plusw1,f,c
 36224  01C43A                     u8210:
 36225                           
 36226                           ;stkvar	_sign @ sp[(-10)+8]
 36227  01C43A  0EFE               	movlw	-2
 36228  01C43C  70E3               	btg	plusw1,0,c
 36229  01C43E                     l10317:
 36230                           
 36231                           ;stkvar	_quotient @ sp[(-10)+0]
 36232  01C43E  0E07               	movlw	7
 36233  01C440  6E2A               	movwf	btemp^0,c
 36234  01C442  0EF6               	movlw	-10
 36235  01C444                     u8221:
 36236  01C444  6AE3               	clrf	plusw1,c
 36237  01C446  2AE8               	incf	wreg,f,c
 36238  01C448  062A               	decf	btemp^0,f,c
 36239  01C44A  E2FC               	bc	u8221
 36240                           
 36241                           ;stkvar	_divisor @ sp[(-10)+-16]
 36242  01C44C  0EE6               	movlw	-26
 36243  01C44E  50E3               	movf	plusw1,w,c
 36244  01C450  E116               	bnz	u8230
 36245  01C452  0EE7               	movlw	-25
 36246  01C454  50E3               	movf	plusw1,w,c
 36247  01C456  E113               	bnz	u8230
 36248  01C458  0EE8               	movlw	-24
 36249  01C45A  50E3               	movf	plusw1,w,c
 36250  01C45C  E110               	bnz	u8230
 36251  01C45E  0EE9               	movlw	-23
 36252  01C460  50E3               	movf	plusw1,w,c
 36253  01C462  E10D               	bnz	u8230
 36254  01C464  0EEA               	movlw	-22
 36255  01C466  50E3               	movf	plusw1,w,c
 36256  01C468  E10A               	bnz	u8230
 36257  01C46A  0EEB               	movlw	-21
 36258  01C46C  50E3               	movf	plusw1,w,c
 36259  01C46E  E107               	bnz	u8230
 36260  01C470  0EEC               	movlw	-20
 36261  01C472  50E3               	movf	plusw1,w,c
 36262  01C474  E104               	bnz	u8230
 36263  01C476  0EED               	movlw	-19
 36264  01C478  50E3               	movf	plusw1,w,c
 36265  01C47A  B4D8               	btfsc	status,2,c
 36266  01C47C  D088               	goto	u8260
 36267  01C47E                     u8230:
 36268                           
 36269                           ;stkvar	_counter @ sp[(-10)+9]
 36270  01C47E  0EFF               	movlw	-1
 36271  01C480  6AE3               	clrf	plusw1,c
 36272  01C482  D012               	goto	L42
 36273  01C484                     l10323:
 36274                           
 36275                           ;stkvar	_divisor @ sp[(-10)+-16]
 36276  01C484  90D8               	bcf	status,0,c
 36277  01C486  0EE6               	movlw	-26
 36278  01C488  36E3               	rlcf	plusw1,f,c
 36279  01C48A  0EE7               	movlw	-25
 36280  01C48C  36E3               	rlcf	plusw1,f,c
 36281  01C48E  0EE8               	movlw	-24
 36282  01C490  36E3               	rlcf	plusw1,f,c
 36283  01C492  0EE9               	movlw	-23
 36284  01C494  36E3               	rlcf	plusw1,f,c
 36285  01C496  0EEA               	movlw	-22
 36286  01C498  36E3               	rlcf	plusw1,f,c
 36287  01C49A  0EEB               	movlw	-21
 36288  01C49C  36E3               	rlcf	plusw1,f,c
 36289  01C49E  0EEC               	movlw	-20
 36290  01C4A0  36E3               	rlcf	plusw1,f,c
 36291  01C4A2  0EED               	movlw	-19
 36292  01C4A4  36E3               	rlcf	plusw1,f,c
 36293                           
 36294                           ;stkvar	_counter @ sp[(-10)+9]
 36295  01C4A6  0EFF               	movlw	-1
 36296  01C4A8                     L42:
 36297  01C4A8  2AE3               	incf	plusw1,f,c
 36298                           
 36299                           ;stkvar	_divisor @ sp[(-10)+-16]
 36300  01C4AA  0EED               	movlw	-19
 36301  01C4AC  AEE3               	btfss	plusw1,7,c
 36302  01C4AE  D7EA               	goto	l10323
 36303  01C4B0                     u8240:
 36304                           
 36305                           ;stkvar	_quotient @ sp[(-10)+0]
 36306  01C4B0  90D8               	bcf	status,0,c
 36307  01C4B2  0EF6               	movlw	-10
 36308  01C4B4  36E3               	rlcf	plusw1,f,c
 36309  01C4B6  0EF7               	movlw	-9
 36310  01C4B8  36E3               	rlcf	plusw1,f,c
 36311  01C4BA  0EF8               	movlw	-8
 36312  01C4BC  36E3               	rlcf	plusw1,f,c
 36313  01C4BE  0EF9               	movlw	-7
 36314  01C4C0  36E3               	rlcf	plusw1,f,c
 36315  01C4C2  0EFA               	movlw	-6
 36316  01C4C4  36E3               	rlcf	plusw1,f,c
 36317  01C4C6  0EFB               	movlw	-5
 36318  01C4C8  36E3               	rlcf	plusw1,f,c
 36319  01C4CA  0EFC               	movlw	-4
 36320  01C4CC  36E3               	rlcf	plusw1,f,c
 36321  01C4CE  0EFD               	movlw	-3
 36322  01C4D0  36E3               	rlcf	plusw1,f,c
 36323                           
 36324                           ;stkvar	_divisor @ sp[(-10)+-16]
 36325                           ;stkvar	_dividend @ sp[(-10)+-8]
 36326  01C4D2  50E1               	movf	fsr1l,w,c
 36327  01C4D4  0FEE               	addlw	-18
 36328  01C4D6  6ED9               	movwf	fsr2l,c
 36329  01C4D8  50E2               	movf	fsr1h,w,c
 36330  01C4DA  6EDA               	movwf	fsr2h,c
 36331  01C4DC  0EFF               	movlw	255
 36332  01C4DE  22DA               	addwfc	fsr2h,f,c
 36333  01C4E0  0EE6               	movlw	-26
 36334  01C4E2  50E3               	movf	plusw1,w,c
 36335  01C4E4  5CDE               	subwf	postinc2,w,c
 36336  01C4E6  0EE7               	movlw	-25
 36337  01C4E8  50E3               	movf	plusw1,w,c
 36338  01C4EA  58DE               	subwfb	postinc2,w,c
 36339  01C4EC  0EE8               	movlw	-24
 36340  01C4EE  50E3               	movf	plusw1,w,c
 36341  01C4F0  58DE               	subwfb	postinc2,w,c
 36342  01C4F2  0EE9               	movlw	-23
 36343  01C4F4  50E3               	movf	plusw1,w,c
 36344  01C4F6  58DE               	subwfb	postinc2,w,c
 36345  01C4F8  0EEA               	movlw	-22
 36346  01C4FA  50E3               	movf	plusw1,w,c
 36347  01C4FC  58DE               	subwfb	postinc2,w,c
 36348  01C4FE  0EEB               	movlw	-21
 36349  01C500  50E3               	movf	plusw1,w,c
 36350  01C502  58DE               	subwfb	postinc2,w,c
 36351  01C504  0EEC               	movlw	-20
 36352  01C506  50E3               	movf	plusw1,w,c
 36353  01C508  58DE               	subwfb	postinc2,w,c
 36354  01C50A  0EED               	movlw	-19
 36355  01C50C  50E3               	movf	plusw1,w,c
 36356  01C50E  58DE               	subwfb	postinc2,w,c
 36357  01C510  A0D8               	btfss	status,0,c
 36358  01C512  D021               	goto	l10335
 36359                           
 36360                           ;stkvar	_divisor @ sp[(-10)+-16]
 36361                           ;stkvar	_dividend @ sp[(-10)+-8]
 36362  01C514  50E1               	movf	fsr1l,w,c
 36363  01C516  0FEE               	addlw	-18
 36364  01C518  6ED9               	movwf	fsr2l,c
 36365  01C51A  50E2               	movf	fsr1h,w,c
 36366  01C51C  6EDA               	movwf	fsr2h,c
 36367  01C51E  0EFF               	movlw	255
 36368  01C520  22DA               	addwfc	fsr2h,f,c
 36369  01C522  0EE6               	movlw	-26
 36370  01C524  50E3               	movf	plusw1,w,c
 36371  01C526  5EDE               	subwf	postinc2,f,c
 36372  01C528  0EE7               	movlw	-25
 36373  01C52A  50E3               	movf	plusw1,w,c
 36374  01C52C  5ADE               	subwfb	postinc2,f,c
 36375  01C52E  0EE8               	movlw	-24
 36376  01C530  50E3               	movf	plusw1,w,c
 36377  01C532  5ADE               	subwfb	postinc2,f,c
 36378  01C534  0EE9               	movlw	-23
 36379  01C536  50E3               	movf	plusw1,w,c
 36380  01C538  5ADE               	subwfb	postinc2,f,c
 36381  01C53A  0EEA               	movlw	-22
 36382  01C53C  50E3               	movf	plusw1,w,c
 36383  01C53E  5ADE               	subwfb	postinc2,f,c
 36384  01C540  0EEB               	movlw	-21
 36385  01C542  50E3               	movf	plusw1,w,c
 36386  01C544  5ADE               	subwfb	postinc2,f,c
 36387  01C546  0EEC               	movlw	-20
 36388  01C548  50E3               	movf	plusw1,w,c
 36389  01C54A  5ADE               	subwfb	postinc2,f,c
 36390  01C54C  0EED               	movlw	-19
 36391  01C54E  50E3               	movf	plusw1,w,c
 36392  01C550  5ADE               	subwfb	postinc2,f,c
 36393                           
 36394                           ;stkvar	_quotient @ sp[(-10)+0]
 36395  01C552  0EF6               	movlw	-10
 36396  01C554  80E3               	bsf	plusw1,0,c
 36397  01C556                     l10335:
 36398                           
 36399                           ;stkvar	_divisor @ sp[(-10)+-16]
 36400  01C556  90D8               	bcf	status,0,c
 36401  01C558  0EED               	movlw	-19
 36402  01C55A  32E3               	rrcf	plusw1,f,c
 36403  01C55C  0EEC               	movlw	-20
 36404  01C55E  32E3               	rrcf	plusw1,f,c
 36405  01C560  0EEB               	movlw	-21
 36406  01C562  32E3               	rrcf	plusw1,f,c
 36407  01C564  0EEA               	movlw	-22
 36408  01C566  32E3               	rrcf	plusw1,f,c
 36409  01C568  0EE9               	movlw	-23
 36410  01C56A  32E3               	rrcf	plusw1,f,c
 36411  01C56C  0EE8               	movlw	-24
 36412  01C56E  32E3               	rrcf	plusw1,f,c
 36413  01C570  0EE7               	movlw	-25
 36414  01C572  32E3               	rrcf	plusw1,f,c
 36415  01C574  0EE6               	movlw	-26
 36416  01C576  32E3               	rrcf	plusw1,f,c
 36417                           
 36418                           ;stkvar	_counter @ sp[(-10)+9]
 36419  01C578  0EFF               	movlw	-1
 36420  01C57A  50E3               	movf	plusw1,w,c
 36421  01C57C  6E2A               	movwf	btemp^0,c
 36422  01C57E  0E01               	movlw	1
 36423  01C580  5E2A               	subwf	btemp^0,f,c
 36424  01C582  0EFF               	movlw	-1
 36425  01C584  0060  F0AB  FFE3   	movff	btemp,plusw1
 36426  01C58A  A4D8               	btfss	status,2,c
 36427  01C58C  D791               	goto	u8240
 36428  01C58E                     u8260:
 36429                           
 36430                           ;stkvar	_sign @ sp[(-10)+8]
 36431  01C58E  0EFE               	movlw	-2
 36432  01C590  50E3               	movf	plusw1,w,c
 36433  01C592  B4D8               	btfsc	status,2,c
 36434  01C594  D025               	goto	u8280
 36435                           
 36436                           ;stkvar	_quotient @ sp[(-10)+0]
 36437                           ;stkvar	_quotient @ sp[(-10)+0]
 36438  01C596  0EF6               	movlw	-10
 36439  01C598  6CE3               	negf	plusw1,c
 36440  01C59A  0EF7               	movlw	-9
 36441  01C59C  1EE3               	comf	plusw1,f,c
 36442  01C59E  0EF8               	movlw	-8
 36443  01C5A0  1EE3               	comf	plusw1,f,c
 36444  01C5A2  0EF9               	movlw	-7
 36445  01C5A4  1EE3               	comf	plusw1,f,c
 36446  01C5A6  0EFA               	movlw	-6
 36447  01C5A8  1EE3               	comf	plusw1,f,c
 36448  01C5AA  0EFB               	movlw	-5
 36449  01C5AC  1EE3               	comf	plusw1,f,c
 36450  01C5AE  0EFC               	movlw	-4
 36451  01C5B0  1EE3               	comf	plusw1,f,c
 36452  01C5B2  0EFD               	movlw	-3
 36453  01C5B4  1EE3               	comf	plusw1,f,c
 36454  01C5B6  E314               	bnc	u8280
 36455  01C5B8  0EF7               	movlw	-9
 36456  01C5BA  2AE3               	incf	plusw1,f,c
 36457  01C5BC  E311               	bnc	u8280
 36458  01C5BE  0EF8               	movlw	-8
 36459  01C5C0  2AE3               	incf	plusw1,f,c
 36460  01C5C2  E30E               	bnc	u8280
 36461  01C5C4  0EF9               	movlw	-7
 36462  01C5C6  2AE3               	incf	plusw1,f,c
 36463  01C5C8  E30B               	bnc	u8280
 36464  01C5CA  0EFA               	movlw	-6
 36465  01C5CC  2AE3               	incf	plusw1,f,c
 36466  01C5CE  E308               	bnc	u8280
 36467  01C5D0  0EFB               	movlw	-5
 36468  01C5D2  2AE3               	incf	plusw1,f,c
 36469  01C5D4  E305               	bnc	u8280
 36470  01C5D6  0EFC               	movlw	-4
 36471  01C5D8  2AE3               	incf	plusw1,f,c
 36472  01C5DA  E302               	bnc	u8280
 36473  01C5DC  0EFD               	movlw	-3
 36474  01C5DE  2AE3               	incf	plusw1,f,c
 36475  01C5E0                     u8280:
 36476                           
 36477                           ;stkvar	_quotient @ sp[(-10)+0]
 36478  01C5E0  0EF6               	movlw	246
 36479  01C5E2  24E1               	addwf	fsr1l,w,c
 36480  01C5E4  6ED9               	movwf	fsr2l,c
 36481  01C5E6  0EFF               	movlw	255
 36482  01C5E8  20E2               	addwfc	fsr1h,w,c
 36483  01C5EA  6EDA               	movwf	fsr2h,c
 36484                           
 36485                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 36486  01C5EC  0E08               	movlw	8
 36487  01C5EE  6E2A               	movwf	btemp^0,c
 36488  01C5F0  0EEE               	movlw	-18
 36489  01C5F2                     us829999:
 36490  01C5F2  006F FF7B FFE3     	movff	postinc2,plusw1
 36491  01C5F8  28E8               	incf	wreg,w,c
 36492  01C5FA  2E2A               	decfsz	btemp^0,f,c
 36493  01C5FC  D7FA               	bra	us829999
 36494                           
 36495                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 36496  01C5FE  0EF6               	movlw	246
 36497  01C600  26E1               	addwf	fsr1l,f,c
 36498  01C602  0EFF               	movlw	255
 36499  01C604  22E2               	addwfc	fsr1h,f,c
 36500  01C606  0012               	return		;funcret
 36501  01C608                     __end_of___aodiv:
 36502                           	opt callstack 0
 36503                           
 36504 ;; *************** function _ctoa *****************
 36505 ;; Defined at:
 36506 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 36507 ;; Parameters:    Size  Location     Type
 36508 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36509 ;;		 -> f(6), NULL(0), 
 36510 ;;  c               1  [STACK] unsigned char 
 36511 ;; Auto vars:     Size  Location     Type
 36512 ;;  w               2  [STACK] int 
 36513 ;;  l               2    0        int 
 36514 ;; Return value:  Size  Location     Type
 36515 ;;                  2  [STACK] int 
 36516 ;; Registers used:
 36517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 36518 ;; Tracked objects:
 36519 ;;		On entry : 0/0
 36520 ;;		On exit  : 0/0
 36521 ;;		Unchanged: 0/0
 36522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36527 ;;Total ram usage:        0 bytes
 36528 ;; Hardware stack levels used:    1
 36529 ;; Hardware stack levels required when called:   20
 36530 ;; This function calls:
 36531 ;;		_pad
 36532 ;; This function is called by:
 36533 ;;		_vfpfcnvrt
 36534 ;; This function uses a reentrant model
 36535 ;;
 36536                           
 36537                           	psect	text120
 36538  00153C                     __ptext120:
 36539                           	opt callstack 0
 36540  00153C                     _ctoa:
 36541                           	opt callstack 0
 36542                           
 36543                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36544  00153C  52E6               	movf	postinc1,f,c
 36545  00153E  52E6               	movf	postinc1,f,c
 36546                           
 36547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 36548                           
 36549                           ;incstack = 0
 36550 ;; hardware stack exceeded
 36551  001540  504A               	movf	_width^0,w,c
 36552  001542  104B               	iorwf	(_width+1)^0,w,c
 36553  001544  A4D8               	btfss	status,2,c
 36554  001546  D009               	goto	l15721
 36555                           
 36556                           ;stkvar	_w @ sp[(-2)+0]
 36557  001548  0EFE               	movlw	-2
 36558  00154A  0060  F12B  FFE3   	movff	_width,plusw1
 36559  001550  0EFF               	movlw	-1
 36560  001552  0060  F12F  FFE3   	movff	_width+1,plusw1
 36561  001558  D016               	goto	l15723
 36562  00155A                     l15721:
 36563  00155A  0EFF               	movlw	255
 36564  00155C  6E34               	movwf	(btemp+10)^0,c
 36565  00155E  0EFF               	movlw	255
 36566  001560  6E35               	movwf	(btemp+11)^0,c
 36567  001562  0060  F128  F032   	movff	_width,btemp+8
 36568  001568  0060  F12C  F033   	movff	_width+1,btemp+9
 36569  00156E  5034               	movf	(btemp+10)^0,w,c
 36570  001570  2632               	addwf	(btemp+8)^0,f,c
 36571  001572  5035               	movf	(btemp+11)^0,w,c
 36572  001574  2233               	addwfc	(btemp+9)^0,f,c
 36573                           
 36574                           ;stkvar	_w @ sp[(-2)+0]
 36575  001576  0EFE               	movlw	-2
 36576  001578  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 36577  00157E  0EFF               	movlw	-1
 36578  001580  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 36579  001586                     l15723:
 36580                           
 36581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 36582                           ;stkvar	_c @ sp[(-2)+-3]
 36583  001586  0EFB               	movlw	-5
 36584  001588  006F FF8C  F354    	movff	plusw1,_dbuf
 36585                           
 36586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 36587  00158E  0103               	movlb	3	; () banked
 36588  001590  6B55               	clrf	(_dbuf+1)& (0+255),b
 36589                           
 36590                           ; BSR set to: 3
 36591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 36592                           ;stkvar	_w @ sp[(-2)+0]
 36593  001592  0EFE               	movlw	-2
 36594  001594  006F FF8F FFE6     	movff	plusw1,postinc1
 36595  00159A  006F FF8F FFE6     	movff	plusw1,postinc1
 36596  0015A0  0E54               	movlw	low _dbuf
 36597  0015A2  6EE6               	movwf	postinc1,c
 36598  0015A4  0E03               	movlw	high _dbuf
 36599  0015A6  6EE6               	movwf	postinc1,c
 36600                           
 36601                           ;stkvar	_fp @ sp[(-6)+-2]
 36602  0015A8  0EF8               	movlw	-8
 36603  0015AA  006F FF8F FFE6     	movff	plusw1,postinc1
 36604  0015B0  006F FF8F FFE6     	movff	plusw1,postinc1
 36605  0015B6  ECCF  F0FE         	call	_pad	;wreg free
 36606                           
 36607                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 36608  0015BA  0EFB               	movlw	251
 36609  0015BC  26E1               	addwf	fsr1l,f,c
 36610  0015BE  0EFF               	movlw	255
 36611  0015C0  22E2               	addwfc	fsr1h,f,c
 36612  0015C2  0012               	return		;funcret
 36613  0015C4                     __end_of_ctoa:
 36614                           	opt callstack 0
 36615                           
 36616 ;; *************** function _pad *****************
 36617 ;; Defined at:
 36618 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 36619 ;; Parameters:    Size  Location     Type
 36620 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36621 ;;		 -> f(6), NULL(0), 
 36622 ;;  buf             2  [STACK] PTR unsigned char 
 36623 ;;		 -> dbuf(80), 
 36624 ;;  p               2  [STACK] int 
 36625 ;; Auto vars:     Size  Location     Type
 36626 ;;  w               2  [STACK] int 
 36627 ;;  i               2  [STACK] int 
 36628 ;; Return value:  Size  Location     Type
 36629 ;;                  2  [STACK] int 
 36630 ;; Registers used:
 36631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 36632 ;; Tracked objects:
 36633 ;;		On entry : 0/3
 36634 ;;		On exit  : 0/0
 36635 ;;		Unchanged: 0/0
 36636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36641 ;;Total ram usage:        0 bytes
 36642 ;; Hardware stack levels used:    1
 36643 ;; Hardware stack levels required when called:   19
 36644 ;; This function calls:
 36645 ;;		_fputc
 36646 ;;		_fputs
 36647 ;;		_strlen
 36648 ;; This function is called by:
 36649 ;;		_ctoa
 36650 ;;		_dtoa
 36651 ;;		_efgtoa
 36652 ;;		_utoa
 36653 ;;		_xtoa
 36654 ;; This function uses a reentrant model
 36655 ;;
 36656                           
 36657                           	psect	text121
 36658  01FD9E                     __ptext121:
 36659                           	opt callstack 0
 36660  01FD9E                     _pad:
 36661                           	opt callstack 0
 36662                           
 36663                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36664  01FD9E  52E6               	movf	postinc1,f,c
 36665  01FDA0  52E6               	movf	postinc1,f,c
 36666  01FDA2  52E6               	movf	postinc1,f,c
 36667  01FDA4  52E6               	movf	postinc1,f,c
 36668                           
 36669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 36670                           
 36671                           ;incstack = 0
 36672 ;; hardware stack exceeded
 36673  01FDA6  A04E               	btfss	_flags^0,0,c
 36674  01FDA8  D010               	goto	l15605
 36675                           
 36676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 36677                           ;stkvar	_fp @ sp[(-4)+-2]
 36678  01FDAA  0EFA               	movlw	-6
 36679  01FDAC  006F FF8F FFE6     	movff	plusw1,postinc1
 36680  01FDB2  006F FF8F FFE6     	movff	plusw1,postinc1
 36681                           
 36682                           ;stkvar	_buf @ sp[(-6)+-4]
 36683  01FDB8  0EF6               	movlw	-10
 36684  01FDBA  006F FF8F FFE6     	movff	plusw1,postinc1
 36685  01FDC0  006F FF8F FFE6     	movff	plusw1,postinc1
 36686  01FDC6  ECE5  F008         	call	_fputs	;wreg free
 36687  01FDCA                     l15605:
 36688                           
 36689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 36690                           ;stkvar	_p @ sp[(-4)+-6]
 36691  01FDCA  0EF7               	movlw	-9
 36692  01FDCC  BEE3               	btfsc	plusw1,7,c
 36693  01FDCE  D011               	goto	l15609
 36694                           
 36695                           ;stkvar	_p @ sp[(-4)+-6]
 36696                           ;stkvar	_w @ sp[(-4)+0]
 36697  01FDD0  0EF6               	movlw	-10
 36698  01FDD2  006F FF8C  F02A    	movff	plusw1,btemp
 36699  01FDD8  0EFC               	movlw	-4
 36700  01FDDA  0060  F0AB  FFE3   	movff	btemp,plusw1
 36701  01FDE0  0EF7               	movlw	-9
 36702  01FDE2  006F FF8C  F02A    	movff	plusw1,btemp
 36703  01FDE8  0EFD               	movlw	-3
 36704  01FDEA  0060  F0AB  FFE3   	movff	btemp,plusw1
 36705  01FDF0  D004               	goto	l2476
 36706  01FDF2                     l15609:
 36707                           
 36708                           ;stkvar	_w @ sp[(-4)+0]
 36709  01FDF2  0EFC               	movlw	-4
 36710  01FDF4  6AE3               	clrf	plusw1,c
 36711  01FDF6  0EFD               	movlw	-3
 36712  01FDF8  6AE3               	clrf	plusw1,c
 36713  01FDFA                     l2476:
 36714                           
 36715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 36716                           ;stkvar	_i @ sp[(-4)+2]
 36717  01FDFA  0EFE               	movlw	-2
 36718  01FDFC  6AE3               	clrf	plusw1,c
 36719  01FDFE  0EFF               	movlw	-1
 36720  01FE00  6AE3               	clrf	plusw1,c
 36721                           
 36722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 36723  01FE02  D01E               	goto	l15615
 36724  01FE04                     l15611:
 36725                           
 36726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 36727                           ;stkvar	_fp @ sp[(-4)+-2]
 36728  01FE04  0EFA               	movlw	-6
 36729  01FE06  006F FF8F FFE6     	movff	plusw1,postinc1
 36730  01FE0C  006F FF8F FFE6     	movff	plusw1,postinc1
 36731  01FE12  0E20               	movlw	32
 36732  01FE14  6EE6               	movwf	postinc1,c
 36733  01FE16  0E00               	movlw	0
 36734  01FE18  6EE6               	movwf	postinc1,c
 36735  01FE1A  EC98  F0FC         	call	_fputc	;wreg free
 36736                           
 36737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 36738                           ;stkvar	_i @ sp[(-4)+2]
 36739  01FE1E  0EFE               	movlw	-2
 36740  01FE20  50E3               	movf	plusw1,w,c
 36741  01FE22  0F01               	addlw	1
 36742  01FE24  6E2A               	movwf	btemp^0,c
 36743  01FE26  0EFE               	movlw	-2
 36744  01FE28  0060  F0AB  FFE3   	movff	btemp,plusw1
 36745  01FE2E  6A2A               	clrf	btemp^0,c
 36746  01FE30  0EFF               	movlw	-1
 36747  01FE32  50E3               	movf	plusw1,w,c
 36748  01FE34  202A               	addwfc	btemp^0,w,c
 36749  01FE36  6E2A               	movwf	btemp^0,c
 36750  01FE38  0EFF               	movlw	-1
 36751  01FE3A  0060  F0AB  FFE3   	movff	btemp,plusw1
 36752  01FE40                     l15615:
 36753                           
 36754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 36755                           ;stkvar	_w @ sp[(-4)+0]
 36756                           ;stkvar	_i @ sp[(-4)+2]
 36757  01FE40  50E1               	movf	fsr1l,w,c
 36758  01FE42  0FFE               	addlw	-2
 36759  01FE44  6ED9               	movwf	fsr2l,c
 36760  01FE46  50E2               	movf	fsr1h,w,c
 36761  01FE48  6EDA               	movwf	fsr2h,c
 36762  01FE4A  0EFF               	movlw	255
 36763  01FE4C  22DA               	addwfc	fsr2h,f,c
 36764  01FE4E  0EFC               	movlw	-4
 36765  01FE50  50E3               	movf	plusw1,w,c
 36766  01FE52  5CDE               	subwf	postinc2,w,c
 36767  01FE54  50DE               	movf	postinc2,w,c
 36768  01FE56  0A80               	xorlw	128
 36769  01FE58  6E2A               	movwf	btemp^0,c
 36770  01FE5A  0EFD               	movlw	-3
 36771  01FE5C  50E3               	movf	plusw1,w,c
 36772  01FE5E  0A80               	xorlw	128
 36773  01FE60  582A               	subwfb	btemp^0,w,c
 36774  01FE62  A0D8               	btfss	status,0,c
 36775  01FE64  D7CF               	goto	l15611
 36776                           
 36777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 36778  01FE66  B04E               	btfsc	_flags^0,0,c
 36779  01FE68  D010               	goto	l15619
 36780                           
 36781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 36782                           ;stkvar	_fp @ sp[(-4)+-2]
 36783  01FE6A  0EFA               	movlw	-6
 36784  01FE6C  006F FF8F FFE6     	movff	plusw1,postinc1
 36785  01FE72  006F FF8F FFE6     	movff	plusw1,postinc1
 36786                           
 36787                           ;stkvar	_buf @ sp[(-6)+-4]
 36788  01FE78  0EF6               	movlw	-10
 36789  01FE7A  006F FF8F FFE6     	movff	plusw1,postinc1
 36790  01FE80  006F FF8F FFE6     	movff	plusw1,postinc1
 36791  01FE86  ECE5  F008         	call	_fputs	;wreg free
 36792  01FE8A                     l15619:
 36793                           
 36794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 36795                           ;stkvar	_w @ sp[(-4)+0]
 36796                           ;stkvar	_buf @ sp[(-4)+-4]
 36797  01FE8A  0EF8               	movlw	-8
 36798  01FE8C  006F FF8F FFE6     	movff	plusw1,postinc1
 36799  01FE92  006F FF8F FFE6     	movff	plusw1,postinc1
 36800  01FE98  EC47  F008         	call	_strlen	;wreg free
 36801  01FE9C  0EFC               	movlw	-4
 36802  01FE9E  50E3               	movf	plusw1,w,c
 36803  01FEA0  262A               	addwf	btemp^0,f,c
 36804  01FEA2  0EFD               	movlw	-3
 36805  01FEA4  50E3               	movf	plusw1,w,c
 36806  01FEA6  222B               	addwfc	(btemp+1)^0,f,c
 36807                           
 36808                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 36809  01FEA8  0EF6               	movlw	246
 36810  01FEAA  26E1               	addwf	fsr1l,f,c
 36811  01FEAC  0EFF               	movlw	255
 36812  01FEAE  22E2               	addwfc	fsr1h,f,c
 36813  01FEB0  0012               	return		;funcret
 36814  01FEB2                     __end_of_pad:
 36815                           	opt callstack 0
 36816                           
 36817 ;; *************** function _strlen *****************
 36818 ;; Defined at:
 36819 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 36820 ;; Parameters:    Size  Location     Type
 36821 ;;  s               2  [STACK] PTR const unsigned char 
 36822 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 36823 ;;		 -> dbuf(80), spin(120), STR_84(9), STR_83(12), 
 36824 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 36825 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 36826 ;; Auto vars:     Size  Location     Type
 36827 ;;  a               2  [STACK] PTR const unsigned char 
 36828 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 36829 ;;		 -> dbuf(80), spin(120), STR_84(9), STR_83(12), 
 36830 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 36831 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 36832 ;; Return value:  Size  Location     Type
 36833 ;;                  2  [STACK] unsigned int 
 36834 ;; Registers used:
 36835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 36836 ;; Tracked objects:
 36837 ;;		On entry : 0/0
 36838 ;;		On exit  : 0/0
 36839 ;;		Unchanged: 0/0
 36840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36845 ;;Total ram usage:        0 bytes
 36846 ;; Hardware stack levels used:    1
 36847 ;; Hardware stack levels required when called:   15
 36848 ;; This function calls:
 36849 ;;		Nothing
 36850 ;; This function is called by:
 36851 ;;		_eaDogM_WriteString
 36852 ;;		_spinners
 36853 ;;		_calc_bsoc
 36854 ;;		_pad
 36855 ;;		_stoa
 36856 ;; This function uses a reentrant model
 36857 ;;
 36858                           
 36859                           	psect	text122
 36860  00108E                     __ptext122:
 36861                           	opt callstack 0
 36862  00108E                     _strlen:
 36863                           	opt callstack 0
 36864                           
 36865                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36866  00108E  52E6               	movf	postinc1,f,c
 36867  001090  52E6               	movf	postinc1,f,c
 36868                           
 36869                           ;stkvar	_s @ sp[(-2)+-2]
 36870                           
 36871                           ;incstack = 0
 36872 ;; hardware stack exceeded
 36873  001092  0EFC               	movlw	-4
 36874  001094  006F FF8C  F034    	movff	plusw1,btemp+10
 36875  00109A  0EFD               	movlw	-3
 36876  00109C  006F FF8C  F035    	movff	plusw1,btemp+11
 36877                           
 36878                           ;stkvar	_a @ sp[(-2)+0]
 36879  0010A2  0EFF               	movlw	-1
 36880  0010A4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36881  0010AA  0EFE               	movlw	-2
 36882  0010AC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36883  0010B2  D011               	goto	l15545
 36884  0010B4                     l15543:
 36885                           
 36886                           ;stkvar	_s @ sp[(-2)+-2]
 36887  0010B4  0EFC               	movlw	-4
 36888  0010B6  50E3               	movf	plusw1,w,c
 36889  0010B8  0F01               	addlw	1
 36890  0010BA  6E2A               	movwf	btemp^0,c
 36891  0010BC  0EFC               	movlw	-4
 36892  0010BE  0060  F0AB  FFE3   	movff	btemp,plusw1
 36893  0010C4  6A2A               	clrf	btemp^0,c
 36894  0010C6  0EFD               	movlw	-3
 36895  0010C8  50E3               	movf	plusw1,w,c
 36896  0010CA  202A               	addwfc	btemp^0,w,c
 36897  0010CC  6E2A               	movwf	btemp^0,c
 36898  0010CE  0EFD               	movlw	-3
 36899  0010D0  0060  F0AB  FFE3   	movff	btemp,plusw1
 36900  0010D6                     l15545:
 36901                           
 36902                           ;stkvar	_s @ sp[(-2)+-2]
 36903  0010D6  0EFC               	movlw	-4
 36904  0010D8  006F FF8F FFF6     	movff	plusw1,tblptrl
 36905  0010DE  0EFD               	movlw	-3
 36906  0010E0  006F FF8F FFF7     	movff	plusw1,tblptrh
 36907  0010E6  0E00               	movlw	low (__mediumconst shr (0+16))
 36908  0010E8  6EF8               	movwf	tblptru,c
 36909  0010EA  0E1F               	movlw	(high __ramtop+-1)
 36910  0010EC  64F7               	cpfsgt	tblptrh,c
 36911  0010EE  D003               	bra	u14407
 36912  0010F0  0008               	tblrd		*
 36913  0010F2  50F5               	movf	tablat,w,c
 36914  0010F4  D007               	bra	u14400
 36915  0010F6                     u14407:
 36916  0010F6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 36917  0010FC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 36918  001102  50EF               	movf	indf0,w,c
 36919  001104                     u14400:
 36920  001104  0900               	iorlw	0
 36921  001106  A4D8               	btfss	status,2,c
 36922  001108  D7D5               	goto	l15543
 36923                           
 36924                           ;stkvar	_a @ sp[(-2)+0]
 36925                           ;stkvar	_s @ sp[(-2)+-2]
 36926  00110A  0EFC               	movlw	-4
 36927  00110C  006F FF8C  F02A    	movff	plusw1,btemp
 36928  001112  0EFD               	movlw	-3
 36929  001114  006F FF8C  F02B    	movff	plusw1,btemp+1
 36930  00111A  0EFE               	movlw	-2
 36931  00111C  50E3               	movf	plusw1,w,c
 36932  00111E  5E2A               	subwf	btemp^0,f,c
 36933  001120  0EFF               	movlw	-1
 36934  001122  50E3               	movf	plusw1,w,c
 36935  001124  5A2B               	subwfb	(btemp+1)^0,f,c
 36936                           
 36937                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 36938  001126  52E5               	movf	postdec1,f,c
 36939  001128  52E5               	movf	postdec1,f,c
 36940  00112A  52E5               	movf	postdec1,f,c
 36941  00112C  52E5               	movf	postdec1,f,c
 36942  00112E  0012               	return		;funcret
 36943  001130                     __end_of_strlen:
 36944                           	opt callstack 0
 36945                           
 36946 ;; *************** function _fputs *****************
 36947 ;; Defined at:
 36948 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 36949 ;; Parameters:    Size  Location     Type
 36950 ;;  s               2  [STACK] PTR const unsigned char 
 36951 ;;		 -> dbuf(80), 
 36952 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36953 ;;		 -> f(6), NULL(0), 
 36954 ;; Auto vars:     Size  Location     Type
 36955 ;;  i               2  [STACK] int 
 36956 ;;  c               1  [STACK] unsigned char 
 36957 ;; Return value:  Size  Location     Type
 36958 ;;                  2  [STACK] int 
 36959 ;; Registers used:
 36960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 36961 ;; Tracked objects:
 36962 ;;		On entry : 0/3
 36963 ;;		On exit  : 0/0
 36964 ;;		Unchanged: 0/0
 36965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36970 ;;Total ram usage:        0 bytes
 36971 ;; Hardware stack levels used:    1
 36972 ;; Hardware stack levels required when called:   18
 36973 ;; This function calls:
 36974 ;;		_fputc
 36975 ;; This function is called by:
 36976 ;;		_pad
 36977 ;; This function uses a reentrant model
 36978 ;;
 36979                           
 36980                           	psect	text123
 36981  0011CA                     __ptext123:
 36982                           	opt callstack 0
 36983  0011CA                     _fputs:
 36984                           	opt callstack 0
 36985                           
 36986                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36987  0011CA  52E6               	movf	postinc1,f,c
 36988  0011CC  52E6               	movf	postinc1,f,c
 36989  0011CE  52E6               	movf	postinc1,f,c
 36990                           
 36991                           ;stkvar	_i @ sp[(-3)+0]
 36992                           
 36993                           ;incstack = 0
 36994 ;; hardware stack exceeded
 36995  0011D0  0EFD               	movlw	-3
 36996  0011D2  6AE3               	clrf	plusw1,c
 36997  0011D4  0EFE               	movlw	-2
 36998  0011D6  6AE3               	clrf	plusw1,c
 36999  0011D8  D01F               	goto	l15557
 37000  0011DA                     l15553:
 37001                           
 37002                           ;stkvar	_fp @ sp[(-3)+-4]
 37003  0011DA  0EF9               	movlw	-7
 37004  0011DC  006F FF8F FFE6     	movff	plusw1,postinc1
 37005  0011E2  006F FF8F FFE6     	movff	plusw1,postinc1
 37006                           
 37007                           ;stkvar	_c @ sp[(-5)+2]
 37008  0011E8  0EFD               	movlw	-3
 37009  0011EA  50E3               	movf	plusw1,w,c
 37010  0011EC  6EE6               	movwf	postinc1,c
 37011  0011EE  0E00               	movlw	0
 37012  0011F0  6EE6               	movwf	postinc1,c
 37013  0011F2  EC98  F0FC         	call	_fputc	;wreg free
 37014                           
 37015                           ;stkvar	_i @ sp[(-3)+0]
 37016  0011F6  0EFD               	movlw	-3
 37017  0011F8  50E3               	movf	plusw1,w,c
 37018  0011FA  0F01               	addlw	1
 37019  0011FC  6E2A               	movwf	btemp^0,c
 37020  0011FE  0EFD               	movlw	-3
 37021  001200  0060  F0AB  FFE3   	movff	btemp,plusw1
 37022  001206  6A2A               	clrf	btemp^0,c
 37023  001208  0EFE               	movlw	-2
 37024  00120A  50E3               	movf	plusw1,w,c
 37025  00120C  202A               	addwfc	btemp^0,w,c
 37026  00120E  6E2A               	movwf	btemp^0,c
 37027  001210  0EFE               	movlw	-2
 37028  001212  0060  F0AB  FFE3   	movff	btemp,plusw1
 37029  001218                     l15557:
 37030                           
 37031                           ;stkvar	_i @ sp[(-3)+0]
 37032  001218  0EFD               	movlw	-3
 37033  00121A  006F FF8C  F034    	movff	plusw1,btemp+10
 37034  001220  0EFE               	movlw	-2
 37035  001222  006F FF8C  F035    	movff	plusw1,btemp+11
 37036                           
 37037                           ;stkvar	_s @ sp[(-3)+-2]
 37038  001228  0EFB               	movlw	-5
 37039  00122A  006F FF8C  F032    	movff	plusw1,btemp+8
 37040  001230  0EFC               	movlw	-4
 37041  001232  006F FF8C  F033    	movff	plusw1,btemp+9
 37042  001238  5034               	movf	(btemp+10)^0,w,c
 37043  00123A  2432               	addwf	(btemp+8)^0,w,c
 37044  00123C  6ED9               	movwf	fsr2l,c
 37045  00123E  5035               	movf	(btemp+11)^0,w,c
 37046  001240  2033               	addwfc	(btemp+9)^0,w,c
 37047  001242  6EDA               	movwf	fsr2h,c
 37048  001244  50DF               	movf	indf2,w,c
 37049  001246  6E35               	movwf	(btemp+11)^0,c
 37050                           
 37051                           ;stkvar	_c @ sp[(-3)+2]
 37052  001248  0EFF               	movlw	-1
 37053  00124A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37054  001250  0EFF               	movlw	-1
 37055  001252  50E3               	movf	plusw1,w,c
 37056  001254  A4D8               	btfss	status,2,c
 37057  001256  D7C1               	goto	l15553
 37058                           
 37059                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 37060  001258  0EF9               	movlw	249
 37061  00125A  26E1               	addwf	fsr1l,f,c
 37062  00125C  0EFF               	movlw	255
 37063  00125E  22E2               	addwfc	fsr1h,f,c
 37064  001260  0012               	return		;funcret
 37065  001262                     __end_of_fputs:
 37066                           	opt callstack 0
 37067                           
 37068 ;; *************** function _fputc *****************
 37069 ;; Defined at:
 37070 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 37071 ;; Parameters:    Size  Location     Type
 37072 ;;  c               2  [STACK] int 
 37073 ;;  fp              2  [STACK] PTR struct _IO_FILE
 37074 ;;		 -> f(6), NULL(0), 
 37075 ;; Auto vars:     Size  Location     Type
 37076 ;;		None
 37077 ;; Return value:  Size  Location     Type
 37078 ;;                  2  [STACK] int 
 37079 ;; Registers used:
 37080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 37081 ;; Tracked objects:
 37082 ;;		On entry : 0/0
 37083 ;;		On exit  : 0/0
 37084 ;;		Unchanged: 0/0
 37085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37090 ;;Total ram usage:        0 bytes
 37091 ;; Hardware stack levels used:    1
 37092 ;; Hardware stack levels required when called:   17
 37093 ;; This function calls:
 37094 ;;		_putch
 37095 ;; This function is called by:
 37096 ;;		_pad
 37097 ;;		_stoa
 37098 ;;		_vfpfcnvrt
 37099 ;;		_fputs
 37100 ;; This function uses a reentrant model
 37101 ;;
 37102                           
 37103                           	psect	text124
 37104  01F930                     __ptext124:
 37105                           	opt callstack 0
 37106  01F930                     _fputc:
 37107                           	opt callstack 0
 37108                           
 37109                           ;stkvar	_fp @ sp[(0)+-4]
 37110                           
 37111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37112                           ;incstack = 0
 37113 ;; hardware stack exceeded
 37114  01F930  0EFC               	movlw	-4
 37115  01F932  006F FF8C  F02A    	movff	plusw1,btemp
 37116  01F938  0EFD               	movlw	-3
 37117  01F93A  50E3               	movf	plusw1,w,c
 37118  01F93C  102A               	iorwf	btemp^0,w,c
 37119  01F93E  B4D8               	btfsc	status,2,c
 37120  01F940  D009               	goto	u14370
 37121                           
 37122                           ;stkvar	_fp @ sp[(0)+-4]
 37123  01F942  0EFC               	movlw	-4
 37124  01F944  006F FF8C  F02A    	movff	plusw1,btemp
 37125  01F94A  0EFD               	movlw	-3
 37126  01F94C  50E3               	movf	plusw1,w,c
 37127  01F94E  102A               	iorwf	btemp^0,w,c
 37128  01F950  A4D8               	btfss	status,2,c
 37129  01F952  D006               	goto	l15531
 37130  01F954                     u14370:
 37131                           
 37132                           ;stkvar	_c @ sp[(0)+-2]
 37133  01F954  0EFE               	movlw	-2
 37134  01F956  50E3               	movf	plusw1,w,c
 37135  01F958  6EE6               	movwf	postinc1,c
 37136  01F95A  ECBA  F016         	call	_putch	;wreg free
 37137  01F95E  D075               	goto	l3552
 37138  01F960                     l15531:
 37139                           
 37140                           ;stkvar	_fp @ sp[(0)+-4]
 37141  01F960  0EFC               	movlw	-4
 37142  01F962  006F FF8C  F034    	movff	plusw1,btemp+10
 37143  01F968  0EFD               	movlw	-3
 37144  01F96A  006F FF8C  F035    	movff	plusw1,btemp+11
 37145  01F970  0E04               	movlw	4
 37146  01F972  2434               	addwf	(btemp+10)^0,w,c
 37147  01F974  6ED9               	movwf	fsr2l,c
 37148  01F976  0E00               	movlw	0
 37149  01F978  2035               	addwfc	(btemp+11)^0,w,c
 37150  01F97A  6EDA               	movwf	fsr2h,c
 37151  01F97C  50DE               	movf	postinc2,w,c
 37152  01F97E  10DE               	iorwf	postinc2,w,c
 37153  01F980  B4D8               	btfsc	status,2,c
 37154  01F982  D026               	goto	u14390
 37155                           
 37156                           ;stkvar	_fp @ sp[(0)+-4]
 37157  01F984  0EFC               	movlw	-4
 37158  01F986  006F FF8C  F034    	movff	plusw1,btemp+10
 37159  01F98C  0EFD               	movlw	-3
 37160  01F98E  006F FF8C  F035    	movff	plusw1,btemp+11
 37161  01F994  0E04               	movlw	4
 37162  01F996  2434               	addwf	(btemp+10)^0,w,c
 37163  01F998  6ED9               	movwf	fsr2l,c
 37164  01F99A  0E00               	movlw	0
 37165  01F99C  2035               	addwfc	(btemp+11)^0,w,c
 37166  01F99E  6EDA               	movwf	fsr2h,c
 37167                           
 37168                           ;stkvar	_fp @ sp[(0)+-4]
 37169  01F9A0  0EFC               	movlw	-4
 37170  01F9A2  006F FF8C  F034    	movff	plusw1,btemp+10
 37171  01F9A8  0EFD               	movlw	-3
 37172  01F9AA  006F FF8C  F035    	movff	plusw1,btemp+11
 37173  01F9B0  0E02               	movlw	2
 37174  01F9B2  2434               	addwf	(btemp+10)^0,w,c
 37175  01F9B4  6EE9               	movwf	fsr0l,c
 37176  01F9B6  0E00               	movlw	0
 37177  01F9B8  2035               	addwfc	(btemp+11)^0,w,c
 37178  01F9BA  6EEA               	movwf	fsr0h,c
 37179  01F9BC  50DE               	movf	postinc2,w,c
 37180  01F9BE  5CEE               	subwf	postinc0,w,c
 37181  01F9C0  50EE               	movf	postinc0,w,c
 37182  01F9C2  0A80               	xorlw	128
 37183  01F9C4  6E2A               	movwf	btemp^0,c
 37184  01F9C6  50DE               	movf	postinc2,w,c
 37185  01F9C8  0A80               	xorlw	128
 37186  01F9CA  582A               	subwfb	btemp^0,w,c
 37187  01F9CC  B0D8               	btfsc	status,0,c
 37188  01F9CE  D03D               	goto	l3552
 37189  01F9D0                     u14390:
 37190                           
 37191                           ;stkvar	_c @ sp[(0)+-2]
 37192                           ;stkvar	_fp @ sp[(0)+-4]
 37193  01F9D0  0EFC               	movlw	-4
 37194  01F9D2  006F FF8C  F034    	movff	plusw1,btemp+10
 37195  01F9D8  0EFD               	movlw	-3
 37196  01F9DA  006F FF8C  F035    	movff	plusw1,btemp+11
 37197  01F9E0  0E02               	movlw	2
 37198  01F9E2  2434               	addwf	(btemp+10)^0,w,c
 37199  01F9E4  6ED9               	movwf	fsr2l,c
 37200  01F9E6  0E00               	movlw	0
 37201  01F9E8  2035               	addwfc	(btemp+11)^0,w,c
 37202  01F9EA  6EDA               	movwf	fsr2h,c
 37203  01F9EC  006F FF78  F034    	movff	postinc2,btemp+10
 37204  01F9F2  006F FF74  F035    	movff	postdec2,btemp+11
 37205                           
 37206                           ;stkvar	_fp @ sp[(0)+-4]
 37207  01F9F8  0EFC               	movlw	-4
 37208  01F9FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 37209  01FA00  0EFD               	movlw	-3
 37210  01FA02  006F FF8F FFDA     	movff	plusw1,fsr2h
 37211  01FA08  006F FF78  F032    	movff	postinc2,btemp+8
 37212  01FA0E  006F FF74  F033    	movff	postdec2,btemp+9
 37213  01FA14  5034               	movf	(btemp+10)^0,w,c
 37214  01FA16  2432               	addwf	(btemp+8)^0,w,c
 37215  01FA18  6ED9               	movwf	fsr2l,c
 37216  01FA1A  5035               	movf	(btemp+11)^0,w,c
 37217  01FA1C  2033               	addwfc	(btemp+9)^0,w,c
 37218  01FA1E  6EDA               	movwf	fsr2h,c
 37219  01FA20  0EFE               	movlw	-2
 37220  01FA22  006F FF8F FFDF     	movff	plusw1,indf2
 37221                           
 37222                           ;stkvar	_fp @ sp[(0)+-4]
 37223  01FA28  0EFC               	movlw	-4
 37224  01FA2A  006F FF8C  F034    	movff	plusw1,btemp+10
 37225  01FA30  0EFD               	movlw	-3
 37226  01FA32  006F FF8C  F035    	movff	plusw1,btemp+11
 37227  01FA38  0E02               	movlw	2
 37228  01FA3A  2434               	addwf	(btemp+10)^0,w,c
 37229  01FA3C  6ED9               	movwf	fsr2l,c
 37230  01FA3E  0E00               	movlw	0
 37231  01FA40  2035               	addwfc	(btemp+11)^0,w,c
 37232  01FA42  6EDA               	movwf	fsr2h,c
 37233  01FA44  2ADE               	incf	postinc2,f,c
 37234  01FA46  0E00               	movlw	0
 37235  01FA48  22DD               	addwfc	postdec2,f,c
 37236  01FA4A                     l3552:
 37237                           
 37238                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 37239  01FA4A  52E5               	movf	postdec1,f,c
 37240  01FA4C  52E5               	movf	postdec1,f,c
 37241  01FA4E  52E5               	movf	postdec1,f,c
 37242  01FA50  52E5               	movf	postdec1,f,c
 37243  01FA52  0012               	return		;funcret
 37244  01FA54                     __end_of_fputc:
 37245                           	opt callstack 0
 37246                           
 37247 ;; *************** function _putch *****************
 37248 ;; Defined at:
 37249 ;;		line 420 in file "eadog.c"
 37250 ;; Parameters:    Size  Location     Type
 37251 ;;  c               1  [STACK] unsigned char 
 37252 ;; Auto vars:     Size  Location     Type
 37253 ;;		None
 37254 ;; Return value:  Size  Location     Type
 37255 ;;                  1  [STACK] void 
 37256 ;; Registers used:
 37257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 37258 ;; Tracked objects:
 37259 ;;		On entry : 0/0
 37260 ;;		On exit  : 0/0
 37261 ;;		Unchanged: 0/0
 37262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37267 ;;Total ram usage:        0 bytes
 37268 ;; Hardware stack levels used:    1
 37269 ;; Hardware stack levels required when called:   16
 37270 ;; This function calls:
 37271 ;;		_ringBufS_put_dma
 37272 ;; This function is called by:
 37273 ;;		_fputc
 37274 ;; This function uses a reentrant model
 37275 ;;
 37276                           
 37277                           	psect	text125
 37278  002D74                     __ptext125:
 37279                           	opt callstack 0
 37280  002D74                     _putch:
 37281                           	opt callstack 0
 37282                           
 37283                           ;eadog.c: 420: void putch(char c);eadog.c: 421: {;eadog.c: 422:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 37284                           ;stkvar	_c @ sp[(0)+-1]
 37285                           
 37286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37287                           ;incstack = 0
 37288 ;; hardware stack exceeded
 37289  002D74  0EFF               	movlw	-1
 37290  002D76  50E3               	movf	plusw1,w,c
 37291  002D78  6EE6               	movwf	postinc1,c
 37292  002D7A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 37293  002D80  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 37294  002D86  EC4D  F007         	call	_ringBufS_put_dma	;wreg free
 37295                           
 37296                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 37297  002D8A  52E5               	movf	postdec1,f,c
 37298  002D8C  0012               	return		;funcret
 37299  002D8E                     __end_of_putch:
 37300                           	opt callstack 0
 37301                           
 37302 ;; *************** function _ringBufS_put_dma *****************
 37303 ;; Defined at:
 37304 ;;		line 67 in file "ringbufs.c"
 37305 ;; Parameters:    Size  Location     Type
 37306 ;;  _this           2  [STACK] PTR struct ringBufS_t
 37307 ;;		 -> ring_buf1(67), 
 37308 ;;  c               1  [STACK] const unsigned char 
 37309 ;; Auto vars:     Size  Location     Type
 37310 ;;		None
 37311 ;; Return value:  Size  Location     Type
 37312 ;;                  1  [STACK] void 
 37313 ;; Registers used:
 37314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 37315 ;; Tracked objects:
 37316 ;;		On entry : 0/3B
 37317 ;;		On exit  : 0/0
 37318 ;;		Unchanged: 0/0
 37319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37324 ;;Total ram usage:        0 bytes
 37325 ;; Hardware stack levels used:    1
 37326 ;; Hardware stack levels required when called:   15
 37327 ;; This function calls:
 37328 ;;		Nothing
 37329 ;; This function is called by:
 37330 ;;		_send_lcd_data_dma
 37331 ;;		_putch
 37332 ;; This function uses a reentrant model
 37333 ;;
 37334                           
 37335                           	psect	text126
 37336  000E9A                     __ptext126:
 37337                           	opt callstack 0
 37338  000E9A                     _ringBufS_put_dma:
 37339                           	opt callstack 0
 37340                           
 37341                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 37342                           ;stkvar	__this @ sp[(0)+-2]
 37343                           
 37344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37345                           ;incstack = 0
 37346 ;; hardware stack exceeded
 37347  000E9A  0EFE               	movlw	-2
 37348  000E9C  006F FF8C  F034    	movff	plusw1,btemp+10
 37349  000EA2  0EFF               	movlw	-1
 37350  000EA4  006F FF8C  F035    	movff	plusw1,btemp+11
 37351  000EAA  0E42               	movlw	66
 37352  000EAC  2434               	addwf	(btemp+10)^0,w,c
 37353  000EAE  6ED9               	movwf	fsr2l,c
 37354  000EB0  0E00               	movlw	0
 37355  000EB2  2035               	addwfc	(btemp+11)^0,w,c
 37356  000EB4  6EDA               	movwf	fsr2h,c
 37357  000EB6  0E40               	movlw	64
 37358  000EB8  60DF               	cpfslt	indf2,c
 37359  000EBA  D040               	goto	l1753
 37360                           
 37361                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 37362                           ;stkvar	_c @ sp[(0)+-3]
 37363                           ;stkvar	__this @ sp[(0)+-2]
 37364  000EBC  0EFE               	movlw	-2
 37365  000EBE  006F FF8C  F034    	movff	plusw1,btemp+10
 37366  000EC4  0EFF               	movlw	-1
 37367  000EC6  006F FF8C  F035    	movff	plusw1,btemp+11
 37368  000ECC  0E40               	movlw	64
 37369  000ECE  2434               	addwf	(btemp+10)^0,w,c
 37370  000ED0  6ED9               	movwf	fsr2l,c
 37371  000ED2  0E00               	movlw	0
 37372  000ED4  2035               	addwfc	(btemp+11)^0,w,c
 37373  000ED6  6EDA               	movwf	fsr2h,c
 37374  000ED8  50DF               	movf	indf2,w,c
 37375  000EDA  6E35               	movwf	(btemp+11)^0,c
 37376                           
 37377                           ;stkvar	__this @ sp[(0)+-2]
 37378  000EDC  0EFE               	movlw	-2
 37379  000EDE  006F FF8C  F032    	movff	plusw1,btemp+8
 37380  000EE4  0EFF               	movlw	-1
 37381  000EE6  006F FF8C  F033    	movff	plusw1,btemp+9
 37382  000EEC  5035               	movf	(btemp+11)^0,w,c
 37383  000EEE  2432               	addwf	(btemp+8)^0,w,c
 37384  000EF0  6ED9               	movwf	fsr2l,c
 37385  000EF2  0E00               	movlw	0
 37386  000EF4  2033               	addwfc	(btemp+9)^0,w,c
 37387  000EF6  6EDA               	movwf	fsr2h,c
 37388  000EF8  0EFD               	movlw	-3
 37389  000EFA  006F FF8F FFDF     	movff	plusw1,indf2
 37390                           
 37391                           ;ringbufs.c: 71:   ++_this->head;
 37392                           ;stkvar	__this @ sp[(0)+-2]
 37393  000F00  0EFE               	movlw	-2
 37394  000F02  006F FF8C  F034    	movff	plusw1,btemp+10
 37395  000F08  0EFF               	movlw	-1
 37396  000F0A  006F FF8C  F035    	movff	plusw1,btemp+11
 37397  000F10  0E40               	movlw	64
 37398  000F12  2434               	addwf	(btemp+10)^0,w,c
 37399  000F14  6ED9               	movwf	fsr2l,c
 37400  000F16  0E00               	movlw	0
 37401  000F18  2035               	addwfc	(btemp+11)^0,w,c
 37402  000F1A  6EDA               	movwf	fsr2h,c
 37403  000F1C  2ADF               	incf	indf2,f,c
 37404                           
 37405                           ;ringbufs.c: 72:   ++_this->count;
 37406                           ;stkvar	__this @ sp[(0)+-2]
 37407  000F1E  0EFE               	movlw	-2
 37408  000F20  006F FF8C  F034    	movff	plusw1,btemp+10
 37409  000F26  0EFF               	movlw	-1
 37410  000F28  006F FF8C  F035    	movff	plusw1,btemp+11
 37411  000F2E  0E42               	movlw	66
 37412  000F30  2434               	addwf	(btemp+10)^0,w,c
 37413  000F32  6ED9               	movwf	fsr2l,c
 37414  000F34  0E00               	movlw	0
 37415  000F36  2035               	addwfc	(btemp+11)^0,w,c
 37416  000F38  6EDA               	movwf	fsr2h,c
 37417  000F3A  2ADF               	incf	indf2,f,c
 37418  000F3C                     l1753:
 37419                           
 37420                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 37421  000F3C  52E5               	movf	postdec1,f,c
 37422  000F3E  52E5               	movf	postdec1,f,c
 37423  000F40  52E5               	movf	postdec1,f,c
 37424  000F42  0012               	return		;funcret
 37425  000F44                     __end_of_ringBufS_put_dma:
 37426                           	opt callstack 0
 37427                           
 37428 ;; *************** function _atoi *****************
 37429 ;; Defined at:
 37430 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 37431 ;; Parameters:    Size  Location     Type
 37432 ;;  s               2  [STACK] PTR const unsigned char 
 37433 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 37434 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 37435 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 37436 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 37437 ;;		 -> STR_86(19), STR_85(19), STR_82(3), STR_81(14), 
 37438 ;;		 -> STR_80(28), STR_79(28), STR_78(28), STR_77(22), 
 37439 ;;		 -> STR_76(22), STR_75(22), STR_74(22), STR_73(22), 
 37440 ;;		 -> STR_72(22), STR_71(22), STR_70(22), STR_69(22), 
 37441 ;;		 -> STR_68(19), STR_67(21), STR_66(21), STR_65(21), 
 37442 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 37443 ;;		 -> STR_60(22), STR_59(22), STR_58(22), STR_57(22), 
 37444 ;;		 -> STR_56(22), STR_55(21), STR_54(22), STR_53(22), 
 37445 ;;		 -> STR_52(22), STR_51(22), STR_50(22), STR_49(22), 
 37446 ;;		 -> STR_48(24), STR_47(24), STR_46(24), STR_45(30), 
 37447 ;;		 -> STR_44(24), STR_43(24), STR_42(23), STR_41(23), 
 37448 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 37449 ;;		 -> STR_36(23), STR_35(23), STR_34(23), STR_33(23), 
 37450 ;;		 -> STR_32(23), STR_31(23), STR_30(18), STR_29(17), 
 37451 ;;		 -> STR_28(17), STR_27(22), STR_26(22), STR_25(22), 
 37452 ;;		 -> STR_24(14), STR_23(27), STR_22(27), STR_21(23), 
 37453 ;;		 -> STR_20(22), STR_19(22), STR_18(22), STR_17(22), 
 37454 ;;		 -> STR_16(23), STR_15(23), STR_14(23), STR_13(26), 
 37455 ;;		 -> STR_12(22), STR_11(21), STR_10(21), STR_9(21), 
 37456 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 37457 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 37458 ;; Auto vars:     Size  Location     Type
 37459 ;;  n               2  [STACK] int 
 37460 ;;  neg             2  [STACK] int 
 37461 ;; Return value:  Size  Location     Type
 37462 ;;                  2  [STACK] int 
 37463 ;; Registers used:
 37464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 37465 ;; Tracked objects:
 37466 ;;		On entry : 0/0
 37467 ;;		On exit  : 0/0
 37468 ;;		Unchanged: 0/0
 37469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37474 ;;Total ram usage:        0 bytes
 37475 ;; Hardware stack levels used:    1
 37476 ;; Hardware stack levels required when called:   16
 37477 ;; This function calls:
 37478 ;;		_isdigit
 37479 ;;		_isspace
 37480 ;; This function is called by:
 37481 ;;		_vfpfcnvrt
 37482 ;; This function uses a reentrant model
 37483 ;;
 37484                           
 37485                           	psect	text127
 37486  01C608                     __ptext127:
 37487                           	opt callstack 0
 37488  01C608                     _atoi:
 37489                           	opt callstack 0
 37490                           
 37491                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37492  01C608  0E09               	movlw	9
 37493  01C60A  26E1               	addwf	fsr1l,f,c
 37494  01C60C  0E00               	movlw	0
 37495  01C60E  22E2               	addwfc	fsr1h,f,c
 37496                           
 37497                           ;stkvar	_n @ sp[(-9)+5]
 37498                           
 37499                           ;incstack = 0
 37500 ;; hardware stack exceeded
 37501  01C610  0EFC               	movlw	-4
 37502  01C612  6AE3               	clrf	plusw1,c
 37503  01C614  0EFD               	movlw	-3
 37504  01C616  6AE3               	clrf	plusw1,c
 37505                           
 37506                           ;stkvar	_neg @ sp[(-9)+7]
 37507  01C618  0EFE               	movlw	-2
 37508  01C61A  6AE3               	clrf	plusw1,c
 37509  01C61C  0EFF               	movlw	-1
 37510  01C61E  6AE3               	clrf	plusw1,c
 37511  01C620  D011               	goto	l11539
 37512  01C622                     l11537:
 37513                           
 37514                           ;stkvar	_s @ sp[(-9)+-2]
 37515  01C622  0EF5               	movlw	-11
 37516  01C624  50E3               	movf	plusw1,w,c
 37517  01C626  0F01               	addlw	1
 37518  01C628  6E2A               	movwf	btemp^0,c
 37519  01C62A  0EF5               	movlw	-11
 37520  01C62C  0060  F0AB  FFE3   	movff	btemp,plusw1
 37521  01C632  6A2A               	clrf	btemp^0,c
 37522  01C634  0EF6               	movlw	-10
 37523  01C636  50E3               	movf	plusw1,w,c
 37524  01C638  202A               	addwfc	btemp^0,w,c
 37525  01C63A  6E2A               	movwf	btemp^0,c
 37526  01C63C  0EF6               	movlw	-10
 37527  01C63E  0060  F0AB  FFE3   	movff	btemp,plusw1
 37528  01C644                     l11539:
 37529                           
 37530                           ;stkvar	_atoi$7233 @ sp[(-9)+4]
 37531  01C644  0EFB               	movlw	-5
 37532  01C646  6AE3               	clrf	plusw1,c
 37533  01C648  2AE3               	incf	plusw1,f,c
 37534                           
 37535                           ;stkvar	_s @ sp[(-9)+-2]
 37536  01C64A  50E1               	movf	fsr1l,w,c
 37537  01C64C  0FF5               	addlw	-11
 37538  01C64E  6ED9               	movwf	fsr2l,c
 37539  01C650  50E2               	movf	fsr1h,w,c
 37540  01C652  6EDA               	movwf	fsr2h,c
 37541  01C654  0EFF               	movlw	255
 37542  01C656  22DA               	addwfc	fsr2h,f,c
 37543  01C658  006F FF7B FFF6     	movff	postinc2,tblptrl
 37544  01C65E  006F FF77 FFF7     	movff	postdec2,tblptrh
 37545  01C664                     	if	0	;tblptru may be non-zero
 37546  01C664                     	endif
 37547  01C664                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37548  01C664  0E00               	movlw	low (__mediumconst shr (0+16))
 37549  01C666  6EF8               	movwf	tblptru,c
 37550  01C668                     	endif
 37551  01C668  0008               	tblrd		*
 37552  01C66A  50F5               	movf	tablat,w,c
 37553  01C66C  0A20               	xorlw	32
 37554  01C66E  B4D8               	btfsc	status,2,c
 37555  01C670  D023               	goto	l11547
 37556  01C672  0EF7               	movlw	247
 37557  01C674  6E34               	movwf	(btemp+10)^0,c
 37558  01C676  0EFF               	movlw	255
 37559  01C678  6E35               	movwf	(btemp+11)^0,c
 37560                           
 37561                           ;stkvar	_s @ sp[(-9)+-2]
 37562  01C67A  50E1               	movf	fsr1l,w,c
 37563  01C67C  0FF5               	addlw	-11
 37564  01C67E  6ED9               	movwf	fsr2l,c
 37565  01C680  50E2               	movf	fsr1h,w,c
 37566  01C682  6EDA               	movwf	fsr2h,c
 37567  01C684  0EFF               	movlw	255
 37568  01C686  22DA               	addwfc	fsr2h,f,c
 37569  01C688  006F FF7B FFF6     	movff	postinc2,tblptrl
 37570  01C68E  006F FF77 FFF7     	movff	postdec2,tblptrh
 37571  01C694                     	if	0	;tblptru may be non-zero
 37572  01C694                     	endif
 37573  01C694                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37574  01C694  0E00               	movlw	low (__mediumconst shr (0+16))
 37575  01C696  6EF8               	movwf	tblptru,c
 37576  01C698                     	endif
 37577  01C698  0008               	tblrd		*
 37578  01C69A  50F5               	movf	tablat,w,c
 37579  01C69C  6E32               	movwf	(btemp+8)^0,c
 37580  01C69E  6A33               	clrf	(btemp+9)^0,c
 37581  01C6A0  5034               	movf	(btemp+10)^0,w,c
 37582  01C6A2  2632               	addwf	(btemp+8)^0,f,c
 37583  01C6A4  5035               	movf	(btemp+11)^0,w,c
 37584  01C6A6  2233               	addwfc	(btemp+9)^0,f,c
 37585  01C6A8  5033               	movf	(btemp+9)^0,w,c
 37586  01C6AA  E104               	bnz	u10470
 37587  01C6AC  0E05               	movlw	5
 37588  01C6AE  5C32               	subwf	(btemp+8)^0,w,c
 37589  01C6B0  A0D8               	btfss	status,0,c
 37590  01C6B2  D002               	goto	l11547
 37591  01C6B4                     u10470:
 37592                           
 37593                           ;stkvar	_atoi$7233 @ sp[(-9)+4]
 37594  01C6B4  0EFB               	movlw	-5
 37595  01C6B6  6AE3               	clrf	plusw1,c
 37596  01C6B8                     l11547:
 37597                           
 37598                           ;stkvar	_atoi$7233 @ sp[(-9)+4]
 37599  01C6B8  0EFB               	movlw	-5
 37600  01C6BA  50E3               	movf	plusw1,w,c
 37601  01C6BC  6E34               	movwf	(btemp+10)^0,c
 37602  01C6BE  6A35               	clrf	(btemp+11)^0,c
 37603                           
 37604                           ;stkvar	_atoi$7232 @ sp[(-9)+2]
 37605  01C6C0  0EF9               	movlw	-7
 37606  01C6C2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37607  01C6C8  0EFA               	movlw	-6
 37608  01C6CA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37609                           
 37610                           ;stkvar	_atoi$7232 @ sp[(-9)+2]
 37611  01C6D0  0EF9               	movlw	-7
 37612  01C6D2  006F FF8C  F02A    	movff	plusw1,btemp
 37613  01C6D8  0EFA               	movlw	-6
 37614  01C6DA  50E3               	movf	plusw1,w,c
 37615  01C6DC  102A               	iorwf	btemp^0,w,c
 37616  01C6DE  B4D8               	btfsc	status,2,c
 37617  01C6E0  D01F               	goto	l11557
 37618  01C6E2  D79F               	goto	l11537
 37619  01C6E4                     l11553:
 37620  01C6E4  0E01               	movlw	1
 37621  01C6E6  6E34               	movwf	(btemp+10)^0,c
 37622  01C6E8  0E00               	movlw	0
 37623  01C6EA  6E35               	movwf	(btemp+11)^0,c
 37624                           
 37625                           ;stkvar	_neg @ sp[(-9)+7]
 37626  01C6EC  0EFE               	movlw	-2
 37627  01C6EE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37628  01C6F4  0EFF               	movlw	-1
 37629  01C6F6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37630  01C6FC                     l11555:
 37631                           
 37632                           ;stkvar	_s @ sp[(-9)+-2]
 37633  01C6FC  0EF5               	movlw	-11
 37634  01C6FE  50E3               	movf	plusw1,w,c
 37635  01C700  0F01               	addlw	1
 37636  01C702  6E2A               	movwf	btemp^0,c
 37637  01C704  0EF5               	movlw	-11
 37638  01C706  0060  F0AB  FFE3   	movff	btemp,plusw1
 37639  01C70C  6A2A               	clrf	btemp^0,c
 37640  01C70E  0EF6               	movlw	-10
 37641  01C710  50E3               	movf	plusw1,w,c
 37642  01C712  202A               	addwfc	btemp^0,w,c
 37643  01C714  6E2A               	movwf	btemp^0,c
 37644  01C716  0EF6               	movlw	-10
 37645  01C718  0060  F0AB  FFE3   	movff	btemp,plusw1
 37646  01C71E  D053               	goto	l11563
 37647  01C720                     l11557:
 37648                           
 37649                           ;stkvar	_s @ sp[(-9)+-2]
 37650  01C720  50E1               	movf	fsr1l,w,c
 37651  01C722  0FF5               	addlw	-11
 37652  01C724  6ED9               	movwf	fsr2l,c
 37653  01C726  50E2               	movf	fsr1h,w,c
 37654  01C728  6EDA               	movwf	fsr2h,c
 37655  01C72A  0EFF               	movlw	255
 37656  01C72C  22DA               	addwfc	fsr2h,f,c
 37657  01C72E  006F FF7B FFF6     	movff	postinc2,tblptrl
 37658  01C734  006F FF77 FFF7     	movff	postdec2,tblptrh
 37659  01C73A                     	if	0	;tblptru may be non-zero
 37660  01C73A                     	endif
 37661  01C73A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37662  01C73A  0E00               	movlw	low (__mediumconst shr (0+16))
 37663  01C73C  6EF8               	movwf	tblptru,c
 37664  01C73E                     	endif
 37665  01C73E  0008               	tblrd		*
 37666  01C740  50F5               	movf	tablat,w,c
 37667  01C742  6E34               	movwf	(btemp+10)^0,c
 37668  01C744  6A35               	clrf	(btemp+11)^0,c
 37669                           
 37670                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37671                           ; Switch size 1, requested type "simple"
 37672                           ; Number of cases is 1, Range of values is 0 to 0
 37673                           ; switch strategies available:
 37674                           ; Name         Instructions Cycles
 37675                           ; simple_byte            4     3 (average)
 37676                           ;	Chosen strategy is simple_byte
 37677  01C746  5035               	movf	(btemp+11)^0,w,c
 37678  01C748  0A00               	xorlw	0	; case 0
 37679  01C74A  A4D8               	btfss	status,2,c
 37680  01C74C  D03C               	goto	l11563
 37681                           
 37682                           ; Switch size 1, requested type "simple"
 37683                           ; Number of cases is 2, Range of values is 43 to 45
 37684                           ; switch strategies available:
 37685                           ; Name         Instructions Cycles
 37686                           ; simple_byte            7     4 (average)
 37687                           ;	Chosen strategy is simple_byte
 37688  01C74E  5034               	movf	(btemp+10)^0,w,c
 37689  01C750  0A2B               	xorlw	43	; case 43
 37690  01C752  B4D8               	btfsc	status,2,c
 37691  01C754  D7D3               	goto	l11555
 37692  01C756  0A06               	xorlw	6	; case 45
 37693  01C758  B4D8               	btfsc	status,2,c
 37694  01C75A  D7C4               	goto	l11553
 37695  01C75C  D034               	goto	l11563
 37696  01C75E                     l11559:
 37697                           
 37698                           ;stkvar	_n @ sp[(-9)+5]
 37699  01C75E  0EFC               	movlw	-4
 37700  01C760  006F FF8C  F034    	movff	plusw1,btemp+10
 37701  01C766  0EFD               	movlw	-3
 37702  01C768  006F FF8C  F035    	movff	plusw1,btemp+11
 37703  01C76E  0E0A               	movlw	10
 37704  01C770  0234               	mulwf	(btemp+10)^0,c
 37705  01C772  006F FFCC  F032    	movff	prodl,btemp+8
 37706  01C778  006F FFD0  F033    	movff	prodh,btemp+9
 37707  01C77E  0235               	mulwf	(btemp+11)^0,c
 37708  01C780  50F3               	movf	prodl,w,c
 37709  01C782  2633               	addwf	(btemp+9)^0,f,c
 37710                           
 37711                           ;stkvar	_s @ sp[(-9)+-2]
 37712  01C784  50E1               	movf	fsr1l,w,c
 37713  01C786  0FF5               	addlw	-11
 37714  01C788  6ED9               	movwf	fsr2l,c
 37715  01C78A  50E2               	movf	fsr1h,w,c
 37716  01C78C  6EDA               	movwf	fsr2h,c
 37717  01C78E  0EFF               	movlw	255
 37718  01C790  22DA               	addwfc	fsr2h,f,c
 37719  01C792  006F FF7B FFF6     	movff	postinc2,tblptrl
 37720  01C798  006F FF77 FFF7     	movff	postdec2,tblptrh
 37721  01C79E                     	if	0	;tblptru may be non-zero
 37722  01C79E                     	endif
 37723  01C79E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37724  01C79E  0E00               	movlw	low (__mediumconst shr (0+16))
 37725  01C7A0  6EF8               	movwf	tblptru,c
 37726  01C7A2                     	endif
 37727  01C7A2  0008               	tblrd		*
 37728  01C7A4  50F5               	movf	tablat,w,c
 37729  01C7A6  5E32               	subwf	(btemp+8)^0,f,c
 37730  01C7A8  0E00               	movlw	0
 37731  01C7AA  5A33               	subwfb	(btemp+9)^0,f,c
 37732  01C7AC  0E30               	movlw	48
 37733  01C7AE  2632               	addwf	(btemp+8)^0,f,c
 37734  01C7B0  0E00               	movlw	0
 37735  01C7B2  2233               	addwfc	(btemp+9)^0,f,c
 37736                           
 37737                           ;stkvar	_n @ sp[(-9)+5]
 37738  01C7B4  0EFC               	movlw	-4
 37739  01C7B6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 37740  01C7BC  0EFD               	movlw	-3
 37741  01C7BE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 37742  01C7C4  D79B               	goto	l11555
 37743  01C7C6                     l11563:
 37744  01C7C6  0ED0               	movlw	208
 37745  01C7C8  6E34               	movwf	(btemp+10)^0,c
 37746  01C7CA  0EFF               	movlw	255
 37747  01C7CC  6E35               	movwf	(btemp+11)^0,c
 37748                           
 37749                           ;stkvar	_s @ sp[(-9)+-2]
 37750  01C7CE  50E1               	movf	fsr1l,w,c
 37751  01C7D0  0FF5               	addlw	-11
 37752  01C7D2  6ED9               	movwf	fsr2l,c
 37753  01C7D4  50E2               	movf	fsr1h,w,c
 37754  01C7D6  6EDA               	movwf	fsr2h,c
 37755  01C7D8  0EFF               	movlw	255
 37756  01C7DA  22DA               	addwfc	fsr2h,f,c
 37757  01C7DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 37758  01C7E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 37759  01C7E8                     	if	0	;tblptru may be non-zero
 37760  01C7E8                     	endif
 37761  01C7E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37762  01C7E8  0E00               	movlw	low (__mediumconst shr (0+16))
 37763  01C7EA  6EF8               	movwf	tblptru,c
 37764  01C7EC                     	endif
 37765  01C7EC  0008               	tblrd		*
 37766  01C7EE  50F5               	movf	tablat,w,c
 37767  01C7F0  6E32               	movwf	(btemp+8)^0,c
 37768  01C7F2  6A33               	clrf	(btemp+9)^0,c
 37769  01C7F4  5034               	movf	(btemp+10)^0,w,c
 37770  01C7F6  2632               	addwf	(btemp+8)^0,f,c
 37771  01C7F8  5035               	movf	(btemp+11)^0,w,c
 37772  01C7FA  2233               	addwfc	(btemp+9)^0,f,c
 37773  01C7FC  5033               	movf	(btemp+9)^0,w,c
 37774  01C7FE  E106               	bnz	u10490
 37775  01C800  0E0A               	movlw	10
 37776  01C802  5C32               	subwf	(btemp+8)^0,w,c
 37777  01C804  B0D8               	btfsc	status,0,c
 37778  01C806  D002               	goto	u10490
 37779  01C808  0E01               	movlw	1
 37780  01C80A  D001               	goto	u10500
 37781  01C80C                     u10490:
 37782  01C80C  0E00               	movlw	0
 37783  01C80E                     u10500:
 37784  01C80E  6E34               	movwf	(btemp+10)^0,c
 37785  01C810  6A35               	clrf	(btemp+11)^0,c
 37786                           
 37787                           ;stkvar	_atoi$7234 @ sp[(-9)+0]
 37788  01C812  0EF7               	movlw	-9
 37789  01C814  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37790  01C81A  0EF8               	movlw	-8
 37791  01C81C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37792                           
 37793                           ;stkvar	_atoi$7234 @ sp[(-9)+0]
 37794  01C822  0EF7               	movlw	-9
 37795  01C824  006F FF8C  F02A    	movff	plusw1,btemp
 37796  01C82A  0EF8               	movlw	-8
 37797  01C82C  50E3               	movf	plusw1,w,c
 37798  01C82E  102A               	iorwf	btemp^0,w,c
 37799  01C830  A4D8               	btfss	status,2,c
 37800  01C832  D795               	goto	l11559
 37801                           
 37802                           ;stkvar	_neg @ sp[(-9)+7]
 37803  01C834  0EFE               	movlw	-2
 37804  01C836  006F FF8C  F02A    	movff	plusw1,btemp
 37805  01C83C  0EFF               	movlw	-1
 37806  01C83E  50E3               	movf	plusw1,w,c
 37807  01C840  102A               	iorwf	btemp^0,w,c
 37808  01C842  A4D8               	btfss	status,2,c
 37809  01C844  D00E               	goto	l11573
 37810                           
 37811                           ;stkvar	_n @ sp[(-9)+5]
 37812  01C846  0EFC               	movlw	-4
 37813  01C848  006F FF8C  F02A    	movff	plusw1,btemp
 37814  01C84E  1E2A               	comf	btemp^0,f,c
 37815  01C850  0EFD               	movlw	-3
 37816  01C852  006F FF8C  F02B    	movff	plusw1,btemp+1
 37817  01C858  1E2B               	comf	(btemp+1)^0,f,c
 37818  01C85A  2A2A               	incf	btemp^0,f,c
 37819  01C85C  B4D8               	btfsc	status,2,c
 37820  01C85E  2A2B               	incf	(btemp+1)^0,f,c
 37821  01C860  D008               	goto	l3463
 37822  01C862                     l11573:
 37823                           
 37824                           ;stkvar	_n @ sp[(-9)+5]
 37825  01C862  0EFC               	movlw	-4
 37826  01C864  006F FF8C  F02A    	movff	plusw1,btemp
 37827  01C86A  0EFD               	movlw	-3
 37828  01C86C  006F FF8C  F02B    	movff	plusw1,btemp+1
 37829  01C872                     l3463:
 37830                           
 37831                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 37832  01C872  0EF5               	movlw	245
 37833  01C874  26E1               	addwf	fsr1l,f,c
 37834  01C876  0EFF               	movlw	255
 37835  01C878  22E2               	addwfc	fsr1h,f,c
 37836  01C87A  0012               	return		;funcret
 37837  01C87C                     __end_of_atoi:
 37838                           	opt callstack 0
 37839                           
 37840 ;; *************** function _isspace *****************
 37841 ;; Defined at:
 37842 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 37843 ;; Parameters:    Size  Location     Type
 37844 ;;  c               2  [STACK] int 
 37845 ;; Auto vars:     Size  Location     Type
 37846 ;;		None
 37847 ;; Return value:  Size  Location     Type
 37848 ;;                  2  [STACK] int 
 37849 ;; Registers used:
 37850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 37851 ;; Tracked objects:
 37852 ;;		On entry : 0/0
 37853 ;;		On exit  : 0/0
 37854 ;;		Unchanged: 0/0
 37855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37860 ;;Total ram usage:        0 bytes
 37861 ;; Hardware stack levels used:    1
 37862 ;; Hardware stack levels required when called:   15
 37863 ;; This function calls:
 37864 ;;		Nothing
 37865 ;; This function is called by:
 37866 ;;		_atoi
 37867 ;; This function uses a reentrant model
 37868 ;;
 37869                           
 37870                           	psect	text128
 37871  001FD0                     __ptext128:
 37872                           	opt callstack 0
 37873  001FD0                     _isspace:
 37874                           	opt callstack 0
 37875                           
 37876                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37877  001FD0  52E6               	movf	postinc1,f,c
 37878                           
 37879                           ;stkvar	_isspace$7283 @ sp[(-1)+0]
 37880                           
 37881                           ;incstack = 0
 37882 ;; hardware stack exceeded
 37883  001FD2  0EFF               	movlw	-1
 37884  001FD4  6AE3               	clrf	plusw1,c
 37885  001FD6  2AE3               	incf	plusw1,f,c
 37886                           
 37887                           ;stkvar	_c @ sp[(-1)+-2]
 37888  001FD8  0EFD               	movlw	-3
 37889  001FDA  006F FF8C  F02A    	movff	plusw1,btemp
 37890  001FE0  0E20               	movlw	32
 37891  001FE2  182A               	xorwf	btemp^0,w,c
 37892  001FE4  E104               	bnz	u9310
 37893  001FE6  0EFE               	movlw	-2
 37894  001FE8  50E3               	movf	plusw1,w,c
 37895  001FEA  B4D8               	btfsc	status,2,c
 37896  001FEC  D012               	goto	l10929
 37897  001FEE                     u9310:
 37898                           
 37899                           ;stkvar	_c @ sp[(-1)+-2]
 37900  001FEE  0EFD               	movlw	-3
 37901  001FF0  50E3               	movf	plusw1,w,c
 37902  001FF2  0FF7               	addlw	247
 37903  001FF4  6E34               	movwf	(btemp+10)^0,c
 37904  001FF6  0EFE               	movlw	-2
 37905  001FF8  006F FF8C  F035    	movff	plusw1,btemp+11
 37906  001FFE  0EFF               	movlw	255
 37907  002000  2235               	addwfc	(btemp+11)^0,f,c
 37908  002002  5035               	movf	(btemp+11)^0,w,c
 37909  002004  E104               	bnz	u9320
 37910  002006  0E05               	movlw	5
 37911  002008  5C34               	subwf	(btemp+10)^0,w,c
 37912  00200A  A0D8               	btfss	status,0,c
 37913  00200C  D002               	goto	l10929
 37914  00200E                     u9320:
 37915                           
 37916                           ;stkvar	_isspace$7283 @ sp[(-1)+0]
 37917  00200E  0EFF               	movlw	-1
 37918  002010  6AE3               	clrf	plusw1,c
 37919  002012                     l10929:
 37920                           
 37921                           ;stkvar	_isspace$7283 @ sp[(-1)+0]
 37922  002012  0EFF               	movlw	-1
 37923  002014  50E3               	movf	plusw1,w,c
 37924  002016  6E2A               	movwf	btemp^0,c
 37925  002018  6A2B               	clrf	(btemp+1)^0,c
 37926                           
 37927                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 37928  00201A  52E5               	movf	postdec1,f,c
 37929  00201C  52E5               	movf	postdec1,f,c
 37930  00201E  52E5               	movf	postdec1,f,c
 37931  002020  0012               	return		;funcret
 37932  002022                     __end_of_isspace:
 37933                           	opt callstack 0
 37934                           
 37935 ;; *************** function _isdigit *****************
 37936 ;; Defined at:
 37937 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 37938 ;; Parameters:    Size  Location     Type
 37939 ;;  c               2  [STACK] int 
 37940 ;; Auto vars:     Size  Location     Type
 37941 ;;		None
 37942 ;; Return value:  Size  Location     Type
 37943 ;;                  2  [STACK] int 
 37944 ;; Registers used:
 37945 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 37946 ;; Tracked objects:
 37947 ;;		On entry : 0/0
 37948 ;;		On exit  : 0/0
 37949 ;;		Unchanged: 0/0
 37950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37955 ;;Total ram usage:        0 bytes
 37956 ;; Hardware stack levels used:    1
 37957 ;; Hardware stack levels required when called:   15
 37958 ;; This function calls:
 37959 ;;		Nothing
 37960 ;; This function is called by:
 37961 ;;		_vfpfcnvrt
 37962 ;;		_atoi
 37963 ;; This function uses a reentrant model
 37964 ;;
 37965                           
 37966                           	psect	text129
 37967  0027F6                     __ptext129:
 37968                           	opt callstack 0
 37969  0027F6                     _isdigit:
 37970                           	opt callstack 0
 37971                           
 37972                           ;stkvar	_c @ sp[(0)+-2]
 37973                           
 37974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37975                           ;incstack = 0
 37976 ;; hardware stack exceeded
 37977  0027F6  0EFE               	movlw	-2
 37978  0027F8  50E3               	movf	plusw1,w,c
 37979  0027FA  0FD0               	addlw	208
 37980  0027FC  6E34               	movwf	(btemp+10)^0,c
 37981  0027FE  0EFF               	movlw	-1
 37982  002800  006F FF8C  F035    	movff	plusw1,btemp+11
 37983  002806  0EFF               	movlw	255
 37984  002808  2235               	addwfc	(btemp+11)^0,f,c
 37985  00280A  5035               	movf	(btemp+11)^0,w,c
 37986  00280C  E106               	bnz	u8100
 37987  00280E  0E0A               	movlw	10
 37988  002810  5C34               	subwf	(btemp+10)^0,w,c
 37989  002812  B0D8               	btfsc	status,0,c
 37990  002814  D002               	goto	u8100
 37991  002816  0E01               	movlw	1
 37992  002818  D001               	goto	u8110
 37993  00281A                     u8100:
 37994  00281A  0E00               	movlw	0
 37995  00281C                     u8110:
 37996  00281C  6E2A               	movwf	btemp^0,c
 37997  00281E  6A2B               	clrf	(btemp+1)^0,c
 37998                           
 37999                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 38000  002820  52E5               	movf	postdec1,f,c
 38001  002822  52E5               	movf	postdec1,f,c
 38002  002824  0012               	return		;funcret
 38003  002826                     __end_of_isdigit:
 38004                           	opt callstack 0
 38005                           
 38006 ;; *************** function _set_vterm *****************
 38007 ;; Defined at:
 38008 ;;		line 110 in file "mconfig.c"
 38009 ;; Parameters:    Size  Location     Type
 38010 ;;  vterm           1  [STACK] const unsigned char 
 38011 ;; Auto vars:     Size  Location     Type
 38012 ;;		None
 38013 ;; Return value:  Size  Location     Type
 38014 ;;                  1  [STACK] unsigned char 
 38015 ;; Registers used:
 38016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 38017 ;; Tracked objects:
 38018 ;;		On entry : 0/2
 38019 ;;		On exit  : 0/0
 38020 ;;		Unchanged: 0/0
 38021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38026 ;;Total ram usage:        0 bytes
 38027 ;; Hardware stack levels used:    1
 38028 ;; Hardware stack levels required when called:   15
 38029 ;; This function calls:
 38030 ;;		Nothing
 38031 ;; This function is called by:
 38032 ;;		_main
 38033 ;;		_check_help
 38034 ;; This function uses a reentrant model
 38035 ;;
 38036                           
 38037                           	psect	text130
 38038  002D38                     __ptext130:
 38039                           	opt callstack 0
 38040  002D38                     _set_vterm:
 38041                           	opt callstack 15
 38042                           
 38043                           ;mconfig.c: 110: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 111: {;mconfig.c: 112
      +                          :  D.vterm = vterm & 0x03;
 38044                           ;stkvar	_vterm @ sp[(0)+-1]
 38045                           
 38046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38047                           ;incstack = 0
 38048  002D38  0EFF               	movlw	-1
 38049  002D3A  006F FF8C  F035    	movff	plusw1,btemp+11
 38050  002D40  0E03               	movlw	3
 38051  002D42  1635               	andwf	(btemp+11)^0,f,c
 38052  002D44  EE23  F0BF         	lfsr	2,_D+640
 38053  002D48  50DF               	movf	223,w,c
 38054  002D4A  1835               	xorwf	(btemp+11)^0,w,c
 38055  002D4C  0BFE               	andlw	-2
 38056  002D4E  1835               	xorwf	(btemp+11)^0,w,c
 38057  002D50  6EDF               	movwf	223,c
 38058                           
 38059                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 38060  002D52  52E5               	movf	postdec1,f,c
 38061  002D54  0012               	return		;funcret
 38062  002D56                     __end_of_set_vterm:
 38063                           	opt callstack 0
 38064                           
 38065 ;; *************** function _set_temp_display_help *****************
 38066 ;; Defined at:
 38067 ;;		line 217 in file "mconfig.c"
 38068 ;; Parameters:    Size  Location     Type
 38069 ;;  new_response    1  [STACK] const enum E16677
 38070 ;; Auto vars:     Size  Location     Type
 38071 ;;		None
 38072 ;; Return value:  Size  Location     Type
 38073 ;;                  1  [STACK] enum E16677
 38074 ;; Registers used:
 38075 ;;		wreg, fsr1l, fsr1h
 38076 ;; Tracked objects:
 38077 ;;		On entry : 0/2
 38078 ;;		On exit  : 3F/2
 38079 ;;		Unchanged: 0/0
 38080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38085 ;;Total ram usage:        0 bytes
 38086 ;; Hardware stack levels used:    1
 38087 ;; Hardware stack levels required when called:   15
 38088 ;; This function calls:
 38089 ;;		Nothing
 38090 ;; This function is called by:
 38091 ;;		_check_help
 38092 ;; This function uses a reentrant model
 38093 ;;
 38094                           
 38095                           	psect	text131
 38096  002E9A                     __ptext131:
 38097                           	opt callstack 0
 38098  002E9A                     _set_temp_display_help:
 38099                           	opt callstack 14
 38100                           
 38101                           ;mconfig.c: 217: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 218: {;mconfig.c: 219:  static D_CODES old_info;;mconfig.c: 221:  old_info = V.respon
      +                          se.help_temp;
 38102                           
 38103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38104                           ;incstack = 0
 38105  002E9A  0102               	movlb	2	; () banked
 38106  002E9C  51A9               	movf	(_V+162)& (0+255),w,b	;volatile
 38107                           
 38108                           ; BSR set to: 2
 38109                           ;mconfig.c: 222:  V.response.help_temp = new_response_info;
 38110                           ;stkvar	_new_response_info @ sp[(0)+-1]
 38111  002E9E  0EFF               	movlw	-1
 38112  002EA0  006F FF8C  F2A9    	movff	plusw1,_V+162	;volatile
 38113                           
 38114                           ; BSR set to: 2
 38115                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 38116  002EA6  52E5               	movf	postdec1,f,c
 38117  002EA8  0012               	return		;funcret
 38118  002EAA                     __end_of_set_temp_display_help:
 38119                           	opt callstack 0
 38120                           
 38121 ;; *************** function _set_display_info *****************
 38122 ;; Defined at:
 38123 ;;		line 206 in file "mconfig.c"
 38124 ;; Parameters:    Size  Location     Type
 38125 ;;  new_response    1  [STACK] const enum E16677
 38126 ;; Auto vars:     Size  Location     Type
 38127 ;;		None
 38128 ;; Return value:  Size  Location     Type
 38129 ;;                  1  [STACK] enum E17160
 38130 ;; Registers used:
 38131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 38132 ;; Tracked objects:
 38133 ;;		On entry : 0/2
 38134 ;;		On exit  : 0/0
 38135 ;;		Unchanged: 0/0
 38136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38141 ;;Total ram usage:        0 bytes
 38142 ;; Hardware stack levels used:    1
 38143 ;; Hardware stack levels required when called:   16
 38144 ;; This function calls:
 38145 ;;		_TimerDone
 38146 ;; This function is called by:
 38147 ;;		_main
 38148 ;;		_check_help
 38149 ;; This function uses a reentrant model
 38150 ;;
 38151                           
 38152                           	psect	text132
 38153  002D56                     __ptext132:
 38154                           	opt callstack 0
 38155  002D56                     _set_display_info:
 38156                           	opt callstack 14
 38157                           
 38158                           ;mconfig.c: 206: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          7: {;mconfig.c: 208:  static D_CODES old_info = DIS_STR;;mconfig.c: 210:  if (TimerDone(
      +                          TMR_INFO)) {
 38159                           
 38160                           ; BSR set to: 2
 38161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38162                           ;incstack = 0
 38163  002D56  0E07               	movlw	7
 38164  002D58  6EE6               	movwf	postinc1,c
 38165  002D5A  EC95  F014         	call	_TimerDone	;wreg free
 38166  002D5E  502A               	movf	btemp^0,w,c
 38167  002D60  B4D8               	btfsc	status,2,c
 38168  002D62  D006               	goto	l1888
 38169                           
 38170                           ;mconfig.c: 211:   old_info = V.response.info;
 38171  002D64  0102               	movlb	2	; () banked
 38172  002D66  51A8               	movf	(_V+161)& (0+255),w,b	;volatile
 38173                           
 38174                           ; BSR set to: 2
 38175                           ;mconfig.c: 212:   V.response.info = new_response_info;
 38176                           ;stkvar	_new_response_info @ sp[(0)+-1]
 38177  002D68  0EFF               	movlw	-1
 38178  002D6A  006F FF8C  F2A8    	movff	plusw1,_V+161	;volatile
 38179  002D70                     l1888:
 38180                           
 38181                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 38182  002D70  52E5               	movf	postdec1,f,c
 38183  002D72  0012               	return		;funcret
 38184  002D74                     __end_of_set_display_info:
 38185                           	opt callstack 0
 38186                           
 38187 ;; *************** function _mode_lamp_dim *****************
 38188 ;; Defined at:
 38189 ;;		line 13 in file "mconfig.c"
 38190 ;; Parameters:    Size  Location     Type
 38191 ;;  level           2  [STACK] const unsigned short 
 38192 ;; Auto vars:     Size  Location     Type
 38193 ;;		None
 38194 ;; Return value:  Size  Location     Type
 38195 ;;                  1  [STACK] void 
 38196 ;; Registers used:
 38197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38198 ;; Tracked objects:
 38199 ;;		On entry : 0/2
 38200 ;;		On exit  : 0/0
 38201 ;;		Unchanged: 0/0
 38202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38207 ;;Total ram usage:        0 bytes
 38208 ;; Hardware stack levels used:    1
 38209 ;; Hardware stack levels required when called:   16
 38210 ;; This function calls:
 38211 ;;		_PWM8_LoadDutyValue
 38212 ;; This function is called by:
 38213 ;;		_main
 38214 ;;		_check_help
 38215 ;; This function uses a reentrant model
 38216 ;;
 38217                           
 38218                           	psect	text133
 38219  002DAA                     __ptext133:
 38220                           	opt callstack 0
 38221  002DAA                     _mode_lamp_dim:
 38222                           	opt callstack 14
 38223                           
 38224                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 38225                           ;stkvar	_level @ sp[(0)+-2]
 38226                           
 38227                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38228                           ;incstack = 0
 38229  002DAA  0EFE               	movlw	-2
 38230  002DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 38231  002DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 38232  002DB8  ECA8  F011         	call	_PWM8_LoadDutyValue	;wreg free
 38233                           
 38234                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 38235  002DBC  52E5               	movf	postdec1,f,c
 38236  002DBE  52E5               	movf	postdec1,f,c
 38237  002DC0  0012               	return		;funcret
 38238  002DC2                     __end_of_mode_lamp_dim:
 38239                           	opt callstack 0
 38240                           
 38241 ;; *************** function _mode_lamp_bright *****************
 38242 ;; Defined at:
 38243 ;;		line 18 in file "mconfig.c"
 38244 ;; Parameters:    Size  Location     Type
 38245 ;;		None
 38246 ;; Auto vars:     Size  Location     Type
 38247 ;;		None
 38248 ;; Return value:  Size  Location     Type
 38249 ;;                  1  [STACK] void 
 38250 ;; Registers used:
 38251 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38252 ;; Tracked objects:
 38253 ;;		On entry : 0/0
 38254 ;;		On exit  : 0/0
 38255 ;;		Unchanged: 0/0
 38256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38261 ;;Total ram usage:        0 bytes
 38262 ;; Hardware stack levels used:    1
 38263 ;; Hardware stack levels required when called:   16
 38264 ;; This function calls:
 38265 ;;		_PWM8_LoadDutyValue
 38266 ;; This function is called by:
 38267 ;;		_check_help
 38268 ;; This function uses a reentrant model
 38269 ;;
 38270                           
 38271                           	psect	text134
 38272  002EC8                     __ptext134:
 38273                           	opt callstack 0
 38274  002EC8                     _mode_lamp_bright:
 38275                           	opt callstack 13
 38276                           
 38277                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 38278                           
 38279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38280                           ;incstack = 0
 38281  002EC8  0E2C               	movlw	44
 38282  002ECA  6EE6               	movwf	postinc1,c
 38283  002ECC  0E01               	movlw	1
 38284  002ECE  6EE6               	movwf	postinc1,c
 38285  002ED0  ECA8  F011         	call	_PWM8_LoadDutyValue	;wreg free
 38286                           
 38287                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 38288  002ED4  0012               	return		;funcret
 38289  002ED6                     __end_of_mode_lamp_bright:
 38290                           	opt callstack 0
 38291                           
 38292 ;; *************** function _PWM8_LoadDutyValue *****************
 38293 ;; Defined at:
 38294 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 38295 ;; Parameters:    Size  Location     Type
 38296 ;;  dutyValue       2  [STACK] unsigned short 
 38297 ;; Auto vars:     Size  Location     Type
 38298 ;;		None
 38299 ;; Return value:  Size  Location     Type
 38300 ;;                  1  [STACK] void 
 38301 ;; Registers used:
 38302 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38303 ;; Tracked objects:
 38304 ;;		On entry : 0/2
 38305 ;;		On exit  : 0/0
 38306 ;;		Unchanged: 0/0
 38307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38312 ;;Total ram usage:        0 bytes
 38313 ;; Hardware stack levels used:    1
 38314 ;; Hardware stack levels required when called:   15
 38315 ;; This function calls:
 38316 ;;		Nothing
 38317 ;; This function is called by:
 38318 ;;		_mode_lamp_dim
 38319 ;;		_mode_lamp_bright
 38320 ;; This function uses a reentrant model
 38321 ;;
 38322                           
 38323                           	psect	text135
 38324  002350                     __ptext135:
 38325                           	opt callstack 0
 38326  002350                     _PWM8_LoadDutyValue:
 38327                           	opt callstack 14
 38328                           
 38329                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 38330                           ;stkvar	_dutyValue @ sp[(0)+-2]
 38331                           
 38332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38333                           ;incstack = 0
 38334  002350  0EFE               	movlw	-2
 38335  002352  006F FF8C  F034    	movff	plusw1,btemp+10
 38336  002358  0EFF               	movlw	-1
 38337  00235A  006F FF8C  F035    	movff	plusw1,btemp+11
 38338  002360  90D8               	bcf	status,0,c
 38339  002362  3235               	rrcf	(btemp+11)^0,f,c
 38340  002364  3234               	rrcf	(btemp+10)^0,f,c
 38341  002366  90D8               	bcf	status,0,c
 38342  002368  3235               	rrcf	(btemp+11)^0,f,c
 38343  00236A  3234               	rrcf	(btemp+10)^0,f,c
 38344  00236C  5034               	movf	(btemp+10)^0,w,c
 38345  00236E  6E61               	movwf	97,c	;volatile
 38346                           
 38347                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 38348                           ;stkvar	_dutyValue @ sp[(0)+-2]
 38349  002370  0EFE               	movlw	-2
 38350  002372  006F FF8C  F035    	movff	plusw1,btemp+11
 38351  002378  0E03               	movlw	3
 38352  00237A  1635               	andwf	(btemp+11)^0,f,c
 38353  00237C  0E06               	movlw	6
 38354  00237E  6E2A               	movwf	btemp^0,c
 38355  002380                     u12315:
 38356  002380  90D8               	bcf	status,0,c
 38357  002382  3635               	rlcf	(btemp+11)^0,f,c
 38358  002384  2E2A               	decfsz	btemp^0,f,c
 38359  002386  D7FC               	goto	u12315
 38360  002388  5035               	movf	(btemp+11)^0,w,c
 38361  00238A  6E60               	movwf	96,c	;volatile
 38362                           
 38363                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38364  00238C  52E5               	movf	postdec1,f,c
 38365  00238E  52E5               	movf	postdec1,f,c
 38366  002390  0012               	return		;funcret
 38367  002392                     __end_of_PWM8_LoadDutyValue:
 38368                           	opt callstack 0
 38369                           
 38370 ;; *************** function _help_button *****************
 38371 ;; Defined at:
 38372 ;;		line 26 in file "mconfig.c"
 38373 ;; Parameters:    Size  Location     Type
 38374 ;;		None
 38375 ;; Auto vars:     Size  Location     Type
 38376 ;;		None
 38377 ;; Return value:  Size  Location     Type
 38378 ;;                  1  [STACK] _Bool 
 38379 ;; Registers used:
 38380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38381 ;; Tracked objects:
 38382 ;;		On entry : 0/2
 38383 ;;		On exit  : 0/0
 38384 ;;		Unchanged: 0/0
 38385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38390 ;;Total ram usage:        0 bytes
 38391 ;; Hardware stack levels used:    1
 38392 ;; Hardware stack levels required when called:   16
 38393 ;; This function calls:
 38394 ;;		_StartTimer
 38395 ;;		_TimerDone
 38396 ;; This function is called by:
 38397 ;;		_check_help
 38398 ;; This function uses a reentrant model
 38399 ;;
 38400                           
 38401                           	psect	text136
 38402  002588                     __ptext136:
 38403                           	opt callstack 0
 38404  002588                     _help_button:
 38405                           	opt callstack 13
 38406                           
 38407                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 38408                           
 38409                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38410                           ;incstack = 0
 38411  002588  B0CB               	btfsc	203,0,c	;volatile
 38412  00258A  D00C               	goto	l1831
 38413                           
 38414                           ;mconfig.c: 29:   V.help = 1;
 38415  00258C  0102               	movlb	2	; () banked
 38416  00258E  859F               	bsf	(_V+152)& (0+255),2,b	;volatile
 38417                           
 38418                           ; BSR set to: 2
 38419                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 38420  002590  0E08               	movlw	8
 38421  002592  6EE6               	movwf	postinc1,c
 38422  002594  EC95  F014         	call	_TimerDone	;wreg free
 38423  002598  502A               	movf	btemp^0,w,c
 38424  00259A  B4D8               	btfsc	status,2,c
 38425  00259C  D003               	goto	l1831
 38426                           
 38427                           ;mconfig.c: 31:    return 1;
 38428  00259E  0E01               	movlw	1
 38429  0025A0  6E2A               	movwf	btemp^0,c
 38430  0025A2  0012               	return	
 38431  0025A4                     l1831:
 38432                           
 38433                           ;mconfig.c: 34:  if (!V.help)
 38434  0025A4  0102               	movlb	2	; () banked
 38435  0025A6  B59F               	btfsc	(_V+152)& (0+255),2,b	;volatile
 38436  0025A8  D008               	goto	l13719
 38437                           
 38438                           ; BSR set to: 2
 38439                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 38440  0025AA  0E2C               	movlw	44
 38441  0025AC  6EE6               	movwf	postinc1,c
 38442  0025AE  0E01               	movlw	1
 38443  0025B0  6EE6               	movwf	postinc1,c
 38444  0025B2  0E08               	movlw	8
 38445  0025B4  6EE6               	movwf	postinc1,c
 38446  0025B6  EC09  F012         	call	_StartTimer	;wreg free
 38447  0025BA                     l13719:
 38448                           
 38449                           ;mconfig.c: 37:  return 0;
 38450  0025BA  0E00               	movlw	0
 38451  0025BC  6E2A               	movwf	btemp^0,c
 38452                           
 38453                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 38454  0025BE  0012               	return		;funcret
 38455  0025C0                     __end_of_help_button:
 38456                           	opt callstack 0
 38457                           
 38458 ;; *************** function _TimerDone *****************
 38459 ;; Defined at:
 38460 ;;		line 20 in file "timers.c"
 38461 ;; Parameters:    Size  Location     Type
 38462 ;;  timer           1  [STACK] const unsigned char 
 38463 ;; Auto vars:     Size  Location     Type
 38464 ;;		None
 38465 ;; Return value:  Size  Location     Type
 38466 ;;                  1  [STACK] _Bool 
 38467 ;; Registers used:
 38468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 38469 ;; Tracked objects:
 38470 ;;		On entry : 0/2
 38471 ;;		On exit  : 0/0
 38472 ;;		Unchanged: 0/0
 38473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38478 ;;Total ram usage:        0 bytes
 38479 ;; Hardware stack levels used:    1
 38480 ;; Hardware stack levels required when called:   15
 38481 ;; This function calls:
 38482 ;;		Nothing
 38483 ;; This function is called by:
 38484 ;;		_main
 38485 ;;		_WaitMs
 38486 ;;		_help_button
 38487 ;;		_check_help
 38488 ;;		_set_display_info
 38489 ;;		_update_adc_result
 38490 ;;		_esr_check
 38491 ;; This function uses a reentrant model
 38492 ;;
 38493                           
 38494                           	psect	text137
 38495  00292A                     __ptext137:
 38496                           	opt callstack 0
 38497  00292A                     _TimerDone:
 38498                           	opt callstack 14
 38499                           
 38500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38501                           ;incstack = 0
 38502  00292A  0004               	clrwdt		;# 
 38503                           
 38504                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 38505                           ;stkvar	_timer @ sp[(0)+-1]
 38506  00292C  0EFF               	movlw	-1
 38507  00292E  50E3               	movf	plusw1,w,c
 38508  002930  0D02               	mullw	2
 38509  002932  0EBC               	movlw	low _tickCount
 38510  002934  24F3               	addwf	243,w,c
 38511  002936  6ED9               	movwf	fsr2l,c
 38512  002938  0E02               	movlw	high _tickCount
 38513  00293A  20F4               	addwfc	prodh,w,c
 38514  00293C  6EDA               	movwf	fsr2h,c
 38515  00293E  50DE               	movf	postinc2,w,c
 38516  002940  10DE               	iorwf	postinc2,w,c
 38517  002942  A4D8               	btfss	status,2,c
 38518  002944  D002               	goto	l12441
 38519                           
 38520                           ;timers.c: 24:   return 1;
 38521  002946  0E01               	movlw	1
 38522  002948  D001               	goto	L43
 38523  00294A                     l12441:
 38524                           
 38525                           ;timers.c: 26:  return 0;
 38526  00294A  0E00               	movlw	0
 38527  00294C                     L43:
 38528  00294C  6E2A               	movwf	btemp^0,c
 38529                           
 38530                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 38531  00294E  52E5               	movf	postdec1,f,c
 38532  002950  0012               	return		;funcret
 38533  002952                     __end_of_TimerDone:
 38534                           	opt callstack 0
 38535                           
 38536 ;; *************** function _StartTimer *****************
 38537 ;; Defined at:
 38538 ;;		line 12 in file "timers.c"
 38539 ;; Parameters:    Size  Location     Type
 38540 ;;  timer           1  [STACK] const unsigned char 
 38541 ;;  count           2  [STACK] const unsigned short 
 38542 ;; Auto vars:     Size  Location     Type
 38543 ;;		None
 38544 ;; Return value:  Size  Location     Type
 38545 ;;                  1  [STACK] void 
 38546 ;; Registers used:
 38547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38548 ;; Tracked objects:
 38549 ;;		On entry : 0/0
 38550 ;;		On exit  : 0/0
 38551 ;;		Unchanged: 0/0
 38552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38557 ;;Total ram usage:        0 bytes
 38558 ;; Hardware stack levels used:    1
 38559 ;; Hardware stack levels required when called:   15
 38560 ;; This function calls:
 38561 ;;		Nothing
 38562 ;; This function is called by:
 38563 ;;		_main
 38564 ;;		_WaitMs
 38565 ;;		_help_button
 38566 ;;		_check_help
 38567 ;;		_update_adc_result
 38568 ;;		_calc_bsoc
 38569 ;;		_esr_check
 38570 ;; This function uses a reentrant model
 38571 ;;
 38572                           
 38573                           	psect	text138
 38574  002412                     __ptext138:
 38575                           	opt callstack 0
 38576  002412                     _StartTimer:
 38577                           	opt callstack 0
 38578                           
 38579                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 38580                           ;stkvar	_count @ sp[(0)+-3]
 38581                           
 38582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38583                           ;incstack = 0
 38584 ;; hardware stack exceeded
 38585  002412  0EFD               	movlw	-3
 38586  002414  006F FF8C  F034    	movff	plusw1,btemp+10
 38587  00241A  0EFE               	movlw	-2
 38588  00241C  006F FF8C  F035    	movff	plusw1,btemp+11
 38589  002422  90D8               	bcf	status,0,c
 38590  002424  3434               	rlcf	(btemp+10)^0,w,c
 38591  002426  6E32               	movwf	(btemp+8)^0,c
 38592  002428  3435               	rlcf	(btemp+11)^0,w,c
 38593  00242A  6E33               	movwf	(btemp+9)^0,c
 38594                           
 38595                           ;stkvar	_timer @ sp[(0)+-1]
 38596  00242C  0EFF               	movlw	-1
 38597  00242E  50E3               	movf	plusw1,w,c
 38598  002430  0D02               	mullw	2
 38599  002432  0EBC               	movlw	low _tickCount
 38600  002434  24F3               	addwf	243,w,c
 38601  002436  6ED9               	movwf	fsr2l,c
 38602  002438  0E02               	movlw	high _tickCount
 38603  00243A  20F4               	addwfc	prodh,w,c
 38604  00243C  6EDA               	movwf	fsr2h,c
 38605  00243E  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 38606  002444  0060  F0CF  FFDD   	movff	btemp+9,postdec2
 38607                           
 38608                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 38609  00244A  52E5               	movf	postdec1,f,c
 38610  00244C  52E5               	movf	postdec1,f,c
 38611  00244E  52E5               	movf	postdec1,f,c
 38612  002450  0012               	return		;funcret
 38613  002452                     __end_of_StartTimer:
 38614                           	opt callstack 0
 38615                           
 38616 ;; *************** function _display_info *****************
 38617 ;; Defined at:
 38618 ;;		line 196 in file "mconfig.c"
 38619 ;; Parameters:    Size  Location     Type
 38620 ;;		None
 38621 ;; Auto vars:     Size  Location     Type
 38622 ;;		None
 38623 ;; Return value:  Size  Location     Type
 38624 ;;                  1  [STACK] enum E16677
 38625 ;; Registers used:
 38626 ;;		btemp
 38627 ;; Tracked objects:
 38628 ;;		On entry : 0/2
 38629 ;;		On exit  : 0/0
 38630 ;;		Unchanged: 0/0
 38631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38636 ;;Total ram usage:        0 bytes
 38637 ;; Hardware stack levels used:    1
 38638 ;; Hardware stack levels required when called:   15
 38639 ;; This function calls:
 38640 ;;		Nothing
 38641 ;; This function is called by:
 38642 ;;		_check_help
 38643 ;; This function uses a reentrant model
 38644 ;;
 38645                           
 38646                           	psect	text139
 38647  002F4A                     __ptext139:
 38648                           	opt callstack 0
 38649  002F4A                     _display_info:
 38650                           	opt callstack 14
 38651                           
 38652                           ;mconfig.c: 198:  return V.response.info;
 38653                           
 38654                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38655                           ;incstack = 0
 38656  002F4A  0060  FAA0  F02A   	movff	_V+161,btemp	;volatile
 38657                           
 38658                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 38659  002F50  0012               	return		;funcret
 38660  002F52                     __end_of_display_info:
 38661                           	opt callstack 0
 38662                           
 38663 ;; *************** function _display_help *****************
 38664 ;; Defined at:
 38665 ;;		line 201 in file "mconfig.c"
 38666 ;; Parameters:    Size  Location     Type
 38667 ;;		None
 38668 ;; Auto vars:     Size  Location     Type
 38669 ;;		None
 38670 ;; Return value:  Size  Location     Type
 38671 ;;                  1  [STACK] enum E16677
 38672 ;; Registers used:
 38673 ;;		btemp
 38674 ;; Tracked objects:
 38675 ;;		On entry : 3F/2
 38676 ;;		On exit  : 0/0
 38677 ;;		Unchanged: 0/0
 38678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38683 ;;Total ram usage:        0 bytes
 38684 ;; Hardware stack levels used:    1
 38685 ;; Hardware stack levels required when called:   15
 38686 ;; This function calls:
 38687 ;;		Nothing
 38688 ;; This function is called by:
 38689 ;;		_check_help
 38690 ;; This function uses a reentrant model
 38691 ;;
 38692                           
 38693                           	psect	text140
 38694  002F52                     __ptext140:
 38695                           	opt callstack 0
 38696  002F52                     _display_help:
 38697                           	opt callstack 14
 38698                           
 38699                           ;mconfig.c: 203:  return V.response.help_temp;
 38700                           
 38701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38702                           ;incstack = 0
 38703  002F52  0060  FAA4  F02A   	movff	_V+162,btemp	;volatile
 38704                           
 38705                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 38706  002F58  0012               	return		;funcret
 38707  002F5A                     __end_of_display_help:
 38708                           	opt callstack 0
 38709                           
 38710 ;; *************** function _check_enter_button *****************
 38711 ;; Defined at:
 38712 ;;		line 49 in file "hid.c"
 38713 ;; Parameters:    Size  Location     Type
 38714 ;;  h               2  [STACK] PTR struct H_data
 38715 ;;		 -> H(9), 
 38716 ;; Auto vars:     Size  Location     Type
 38717 ;;		None
 38718 ;; Return value:  Size  Location     Type
 38719 ;;                  1  [STACK] _Bool 
 38720 ;; Registers used:
 38721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 38722 ;; Tracked objects:
 38723 ;;		On entry : 0/0
 38724 ;;		On exit  : 0/0
 38725 ;;		Unchanged: 0/0
 38726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38731 ;;Total ram usage:        0 bytes
 38732 ;; Hardware stack levels used:    1
 38733 ;; Hardware stack levels required when called:   15
 38734 ;; This function calls:
 38735 ;;		Nothing
 38736 ;; This function is called by:
 38737 ;;		_main
 38738 ;; This function uses a reentrant model
 38739 ;;
 38740                           
 38741                           	psect	text141
 38742  00193C                     __ptext141:
 38743                           	opt callstack 0
 38744  00193C                     _check_enter_button:
 38745                           	opt callstack 15
 38746                           
 38747                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 38748                           ;stkvar	_h @ sp[(0)+-2]
 38749                           
 38750                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38751                           ;incstack = 0
 38752  00193C  0EFE               	movlw	-2
 38753  00193E  006F FF8C  F034    	movff	plusw1,btemp+10
 38754  001944  0EFF               	movlw	-1
 38755  001946  006F FF8C  F035    	movff	plusw1,btemp+11
 38756  00194C  0E04               	movlw	4
 38757  00194E  2434               	addwf	(btemp+10)^0,w,c
 38758  001950  6ED9               	movwf	fsr2l,c
 38759  001952  0E00               	movlw	0
 38760  001954  2035               	addwfc	(btemp+11)^0,w,c
 38761  001956  6EDA               	movwf	fsr2h,c
 38762  001958  50DF               	movf	indf2,w,c
 38763  00195A  A4D8               	btfss	status,2,c
 38764  00195C  D023               	goto	l17565
 38765                           
 38766                           ;stkvar	_h @ sp[(0)+-2]
 38767  00195E  0EFE               	movlw	-2
 38768  001960  006F FF8C  F034    	movff	plusw1,btemp+10
 38769  001966  0EFF               	movlw	-1
 38770  001968  006F FF8C  F035    	movff	plusw1,btemp+11
 38771  00196E  0E05               	movlw	5
 38772  001970  2434               	addwf	(btemp+10)^0,w,c
 38773  001972  6ED9               	movwf	fsr2l,c
 38774  001974  0E00               	movlw	0
 38775  001976  2035               	addwfc	(btemp+11)^0,w,c
 38776  001978  6EDA               	movwf	fsr2h,c
 38777  00197A  50DF               	movf	indf2,w,c
 38778  00197C  A4D8               	btfss	status,2,c
 38779  00197E  D012               	goto	l17565
 38780                           
 38781                           ;hid.c: 52:   h->wait_enter = 1;
 38782                           ;stkvar	_h @ sp[(0)+-2]
 38783  001980  0EFE               	movlw	-2
 38784  001982  006F FF8C  F034    	movff	plusw1,btemp+10
 38785  001988  0EFF               	movlw	-1
 38786  00198A  006F FF8C  F035    	movff	plusw1,btemp+11
 38787  001990  0E04               	movlw	4
 38788  001992  2434               	addwf	(btemp+10)^0,w,c
 38789  001994  6ED9               	movwf	fsr2l,c
 38790  001996  0E00               	movlw	0
 38791  001998  2035               	addwfc	(btemp+11)^0,w,c
 38792  00199A  6EDA               	movwf	fsr2h,c
 38793  00199C  0E01               	movlw	1
 38794  00199E  6EDF               	movwf	indf2,c
 38795                           
 38796                           ;hid.c: 53:   return 1;
 38797  0019A0  0E01               	movlw	1
 38798  0019A2  D001               	goto	L44
 38799  0019A4                     l17565:
 38800                           
 38801                           ;hid.c: 55:  return 0;
 38802  0019A4  0E00               	movlw	0
 38803  0019A6                     L44:
 38804  0019A6  6E2A               	movwf	btemp^0,c
 38805                           
 38806                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38807  0019A8  52E5               	movf	postdec1,f,c
 38808  0019AA  52E5               	movf	postdec1,f,c
 38809  0019AC  0012               	return		;funcret
 38810  0019AE                     __end_of_check_enter_button:
 38811                           	opt callstack 0
 38812                           
 38813 ;; *************** function _calc_ror_data *****************
 38814 ;; Defined at:
 38815 ;;		line 103 in file "mbmc.c"
 38816 ;; Parameters:    Size  Location     Type
 38817 ;;		None
 38818 ;; Auto vars:     Size  Location     Type
 38819 ;;		None
 38820 ;; Return value:  Size  Location     Type
 38821 ;;                  1  [STACK] void 
 38822 ;; Registers used:
 38823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38824 ;; Tracked objects:
 38825 ;;		On entry : 0/0
 38826 ;;		On exit  : 0/0
 38827 ;;		Unchanged: 0/0
 38828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38833 ;;Total ram usage:        0 bytes
 38834 ;; Hardware stack levels used:    1
 38835 ;; Hardware stack levels required when called:   18
 38836 ;; This function calls:
 38837 ;;		___flge
 38838 ;;		___flsub
 38839 ;;		_conv_raw_result
 38840 ;;		_fabsf
 38841 ;; This function is called by:
 38842 ;;		_main
 38843 ;; This function uses a reentrant model
 38844 ;;
 38845                           
 38846                           	psect	text142
 38847  01E602                     __ptext142:
 38848                           	opt callstack 0
 38849  01E602                     _calc_ror_data:
 38850                           	opt callstack 12
 38851                           
 38852                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 38853                           
 38854                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38855                           ;incstack = 0
 38856  01E602  0060  F203  FFE6   	movff	calc_ror_data@bcror,postinc1
 38857  01E608  0060  F207  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 38858  01E60E  0060  F20B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 38859  01E614  0060  F20F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 38860  01E61A  0E00               	movlw	0
 38861  01E61C  6EE6               	movwf	postinc1,c
 38862  01E61E  0E00               	movlw	0
 38863  01E620  6EE6               	movwf	postinc1,c
 38864  01E622  ECC0  F0C8         	call	_conv_raw_result	;wreg free
 38865  01E626  0060  F0AB  FFE6   	movff	btemp,postinc1
 38866  01E62C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38867  01E632  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38868  01E638  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38869  01E63E  EC85  F011         	call	___flsub	;wreg free
 38870  01E642  0060  F0AB  FFE6   	movff	btemp,postinc1
 38871  01E648  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38872  01E64E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38873  01E654  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38874  01E65A  ECA0  F006         	call	_fabsf	;wreg free
 38875  01E65E  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 38876  01E664  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 38877  01E66A  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 38878  01E670  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 38879                           
 38880                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 38881  01E676  0E00               	movlw	0
 38882  01E678  6EE6               	movwf	postinc1,c
 38883  01E67A  0E00               	movlw	0
 38884  01E67C  6EE6               	movwf	postinc1,c
 38885  01E67E  ECC0  F0C8         	call	_conv_raw_result	;wreg free
 38886  01E682  0060  F0A8  F080   	movff	btemp,calc_ror_data@bcror
 38887  01E688  0060  F0AC  F081   	movff	btemp+1,calc_ror_data@bcror+1
 38888  01E68E  0060  F0B0  F082   	movff	btemp+2,calc_ror_data@bcror+2
 38889  01E694  0060  F0B4  F083   	movff	btemp+3,calc_ror_data@bcror+3
 38890                           
 38891                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 38892  01E69A  0060  F213  FFE6   	movff	calc_ror_data@bvror,postinc1
 38893  01E6A0  0060  F217  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 38894  01E6A6  0060  F21B  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 38895  01E6AC  0060  F21F  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 38896  01E6B2  0E00               	movlw	0
 38897  01E6B4  6EE6               	movwf	postinc1,c
 38898  01E6B6  0E04               	movlw	4
 38899  01E6B8  6EE6               	movwf	postinc1,c
 38900  01E6BA  ECC0  F0C8         	call	_conv_raw_result	;wreg free
 38901  01E6BE  0060  F0AB  FFE6   	movff	btemp,postinc1
 38902  01E6C4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38903  01E6CA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38904  01E6D0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38905  01E6D6  EC85  F011         	call	___flsub	;wreg free
 38906  01E6DA  0060  F0AB  FFE6   	movff	btemp,postinc1
 38907  01E6E0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38908  01E6E6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38909  01E6EC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38910  01E6F2  ECA0  F006         	call	_fabsf	;wreg free
 38911  01E6F6  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 38912  01E6FC  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 38913  01E702  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 38914  01E708  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 38915                           
 38916                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 38917  01E70E  0EE7               	movlw	231
 38918  01E710  6EE6               	movwf	postinc1,c
 38919  01E712  0E1D               	movlw	29
 38920  01E714  6EE6               	movwf	postinc1,c
 38921  01E716  0EA7               	movlw	167
 38922  01E718  6EE6               	movwf	postinc1,c
 38923  01E71A  0E3B               	movlw	59
 38924  01E71C  6EE6               	movwf	postinc1,c
 38925  01E71E  EE22  F16B         	lfsr	2,_C+108	;volatile
 38926  01E722  006F FF7B FFE6     	movff	postinc2,postinc1
 38927  01E728  006F FF7B FFE6     	movff	postinc2,postinc1
 38928  01E72E  006F FF7B FFE6     	movff	postinc2,postinc1
 38929  01E734  006F FF7B FFE6     	movff	postinc2,postinc1
 38930  01E73A  ECA9  F0F6         	call	___flge	;wreg free
 38931  01E73E  B02A               	btfsc	btemp& (0+255),0,c
 38932  01E740  D010               	goto	l14317
 38933                           
 38934                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 38935  01E742  0EB0               	movlw	176
 38936  01E744  006F FFA0  F96B    	movff	wreg,_C+108	;volatile
 38937  01E74A  0E03               	movlw	3
 38938  01E74C  006F FFA0  F96C    	movff	wreg,_C+109	;volatile
 38939  01E752  0E67               	movlw	103
 38940  01E754  006F FFA0  F96D    	movff	wreg,_C+110	;volatile
 38941  01E75A  0E3C               	movlw	60
 38942  01E75C  006F FFA0  F96E    	movff	wreg,_C+111	;volatile
 38943  01E762                     l14317:
 38944                           
 38945                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 38946  01E762  0E00               	movlw	0
 38947  01E764  6EE6               	movwf	postinc1,c
 38948  01E766  0E04               	movlw	4
 38949  01E768  6EE6               	movwf	postinc1,c
 38950  01E76A  ECC0  F0C8         	call	_conv_raw_result	;wreg free
 38951  01E76E  0060  F0A8  F084   	movff	btemp,calc_ror_data@bvror
 38952  01E774  0060  F0AC  F085   	movff	btemp+1,calc_ror_data@bvror+1
 38953  01E77A  0060  F0B0  F086   	movff	btemp+2,calc_ror_data@bvror+2
 38954  01E780  0060  F0B4  F087   	movff	btemp+3,calc_ror_data@bvror+3
 38955                           
 38956                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 38957  01E786  0012               	return		;funcret
 38958  01E788                     __end_of_calc_ror_data:
 38959                           	opt callstack 0
 38960                           
 38961 ;; *************** function _fabsf *****************
 38962 ;; Defined at:
 38963 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 38964 ;; Parameters:    Size  Location     Type
 38965 ;;  x               4  [STACK] float 
 38966 ;; Auto vars:     Size  Location     Type
 38967 ;;  u               4  [STACK] struct .
 38968 ;; Return value:  Size  Location     Type
 38969 ;;                  4  [STACK] float 
 38970 ;; Registers used:
 38971 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 38972 ;; Tracked objects:
 38973 ;;		On entry : 0/0
 38974 ;;		On exit  : 0/0
 38975 ;;		Unchanged: 0/0
 38976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38981 ;;Total ram usage:        0 bytes
 38982 ;; Hardware stack levels used:    1
 38983 ;; Hardware stack levels required when called:   15
 38984 ;; This function calls:
 38985 ;;		Nothing
 38986 ;; This function is called by:
 38987 ;;		_main
 38988 ;;		_calc_ror_data
 38989 ;;		_calc_bsoc
 38990 ;;		_esr_check
 38991 ;; This function uses a reentrant model
 38992 ;;
 38993                           
 38994                           	psect	text143
 38995  000D40                     __ptext143:
 38996                           	opt callstack 0
 38997  000D40                     _fabsf:
 38998                           	opt callstack 0
 38999                           
 39000                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39001  000D40  52E6               	movf	postinc1,f,c
 39002  000D42  52E6               	movf	postinc1,f,c
 39003  000D44  52E6               	movf	postinc1,f,c
 39004  000D46  52E6               	movf	postinc1,f,c
 39005                           
 39006                           ;incstack = 0
 39007 ;; hardware stack exceeded
 39008  000D48  0060  F1E0  F032   	movff	fabsf@F463,btemp+8
 39009  000D4E  0060  F1E4  F033   	movff	fabsf@F463+1,btemp+9
 39010  000D54  0060  F1E8  F034   	movff	fabsf@F463+2,btemp+10
 39011  000D5A  0060  F1EC  F035   	movff	fabsf@F463+3,btemp+11
 39012                           
 39013                           ;stkvar	_u @ sp[(-4)+0]
 39014  000D60  0EFC               	movlw	-4
 39015  000D62  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39016  000D68  0EFD               	movlw	-3
 39017  000D6A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39018  000D70  0EFE               	movlw	-2
 39019  000D72  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39020  000D78  0EFF               	movlw	-1
 39021  000D7A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39022                           
 39023                           ;stkvar	_x @ sp[(-4)+-4]
 39024  000D80  0EF8               	movlw	-8
 39025  000D82  006F FF8C  F032    	movff	plusw1,btemp+8
 39026  000D88  0EF9               	movlw	-7
 39027  000D8A  006F FF8C  F033    	movff	plusw1,btemp+9
 39028  000D90  0EFA               	movlw	-6
 39029  000D92  006F FF8C  F034    	movff	plusw1,btemp+10
 39030  000D98  0EFB               	movlw	-5
 39031  000D9A  006F FF8C  F035    	movff	plusw1,btemp+11
 39032                           
 39033                           ;stkvar	_u @ sp[(-4)+0]
 39034  000DA0  0EFC               	movlw	-4
 39035  000DA2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39036  000DA8  0EFD               	movlw	-3
 39037  000DAA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39038  000DB0  0EFE               	movlw	-2
 39039  000DB2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39040  000DB8  0EFF               	movlw	-1
 39041  000DBA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39042                           
 39043                           ;stkvar	_u @ sp[(-4)+0]
 39044  000DC0  0EFF               	movlw	-1
 39045  000DC2  9EE3               	bcf	plusw1,7,c
 39046                           
 39047                           ;stkvar	_u @ sp[(-4)+0]
 39048  000DC4  0EFC               	movlw	-4
 39049  000DC6  006F FF8C  F02A    	movff	plusw1,btemp
 39050  000DCC  0EFD               	movlw	-3
 39051  000DCE  006F FF8C  F02B    	movff	plusw1,btemp+1
 39052  000DD4  0EFE               	movlw	-2
 39053  000DD6  006F FF8C  F02C    	movff	plusw1,btemp+2
 39054  000DDC  0EFF               	movlw	-1
 39055  000DDE  006F FF8C  F02D    	movff	plusw1,btemp+3
 39056                           
 39057                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 39058  000DE4  0EF8               	movlw	248
 39059  000DE6  26E1               	addwf	fsr1l,f,c
 39060  000DE8  0EFF               	movlw	255
 39061  000DEA  22E2               	addwfc	fsr1h,f,c
 39062  000DEC  0012               	return		;funcret
 39063  000DEE                     __end_of_fabsf:
 39064                           	opt callstack 0
 39065                           
 39066 ;; *************** function _conv_raw_result *****************
 39067 ;; Defined at:
 39068 ;;		line 135 in file "daq.c"
 39069 ;; Parameters:    Size  Location     Type
 39070 ;;  chan            1  [STACK] const enum E16605
 39071 ;;  to_what         1  [STACK] const enum E16996
 39072 ;; Auto vars:     Size  Location     Type
 39073 ;;		None
 39074 ;; Return value:  Size  Location     Type
 39075 ;;                  4  [STACK] float 
 39076 ;; Registers used:
 39077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 39078 ;; Tracked objects:
 39079 ;;		On entry : 0/0
 39080 ;;		On exit  : 0/0
 39081 ;;		Unchanged: 0/0
 39082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39087 ;;Total ram usage:        0 bytes
 39088 ;; Hardware stack levels used:    1
 39089 ;; Hardware stack levels required when called:   17
 39090 ;; This function calls:
 39091 ;;		___fldiv
 39092 ;;		___flmul
 39093 ;;		___flsub
 39094 ;;		___xxtofl
 39095 ;;		_get_raw_result
 39096 ;;		_nanf
 39097 ;; This function is called by:
 39098 ;;		_main
 39099 ;;		_convert_adc_data
 39100 ;;		_calc_ror_data
 39101 ;;		_check_day_time
 39102 ;;		_init_bsoc
 39103 ;;		_esr_check
 39104 ;; This function uses a reentrant model
 39105 ;;
 39106                           
 39107                           	psect	text144
 39108  019180                     __ptext144:
 39109                           	opt callstack 0
 39110  019180                     _conv_raw_result:
 39111                           	opt callstack 0
 39112                           
 39113                           ;daq.c: 135: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 136: {;daq.c: 138:  switch (to_what) {
 39114                           
 39115                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39116                           ;incstack = 0
 39117 ;; hardware stack exceeded
 39118  019180  D24A               	goto	l12423
 39119  019182                     l12369:
 39120                           
 39121                           ;daq.c: 140:   if (!(0b0011110001110111 >> chan & 0x1))
 39122                           ;stkvar	_chan @ sp[(0)+-1]
 39123  019182  0EFF               	movlw	-1
 39124  019184  006F FF8C  F035    	movff	plusw1,btemp+11
 39125  01918A  0E77               	movlw	119
 39126  01918C  6E32               	movwf	(btemp+8)^0,c
 39127  01918E  0E3C               	movlw	60
 39128  019190  6E33               	movwf	(btemp+9)^0,c
 39129  019192  2A35               	incf	(btemp+11)^0,f,c
 39130  019194  D003               	goto	u11664
 39131  019196                     u11665:
 39132  019196  3433               	rlcf	(btemp+9)^0,w,c
 39133  019198  3233               	rrcf	(btemp+9)^0,f,c
 39134  01919A  3232               	rrcf	(btemp+8)^0,f,c
 39135  01919C                     u11664:
 39136  01919C  2E35               	decfsz	(btemp+11)^0,f,c
 39137  01919E  D7FB               	goto	u11665
 39138  0191A0  B032               	btfsc	(btemp+8)^0,0,c
 39139  0191A2  D007               	goto	l12375
 39140                           
 39141                           ;daq.c: 141:    return nanf("");
 39142  0191A4  0EE1               	movlw	low (STR_103+126)
 39143  0191A6  6EE6               	movwf	postinc1,c
 39144  0191A8  0EF9               	movlw	high (STR_103+126)
 39145  0191AA  6EE6               	movwf	postinc1,c
 39146  0191AC  ECA6  F00E         	call	_nanf	;wreg free
 39147  0191B0  D242               	goto	l1988
 39148  0191B2                     l12375:
 39149                           
 39150                           ;daq.c: 143:   if (0b0000000000000011 >> chan & 0x1) {
 39151                           ;stkvar	_chan @ sp[(0)+-1]
 39152  0191B2  0EFF               	movlw	-1
 39153  0191B4  006F FF8C  F035    	movff	plusw1,btemp+11
 39154  0191BA  0E03               	movlw	3
 39155  0191BC  6E32               	movwf	(btemp+8)^0,c
 39156  0191BE  0E00               	movlw	0
 39157  0191C0  6E33               	movwf	(btemp+9)^0,c
 39158  0191C2  2A35               	incf	(btemp+11)^0,f,c
 39159  0191C4  D003               	goto	u11684
 39160  0191C6                     u11685:
 39161  0191C6  3433               	rlcf	(btemp+9)^0,w,c
 39162  0191C8  3233               	rrcf	(btemp+9)^0,f,c
 39163  0191CA  3232               	rrcf	(btemp+8)^0,f,c
 39164  0191CC                     u11684:
 39165  0191CC  2E35               	decfsz	(btemp+11)^0,f,c
 39166  0191CE  D7FB               	goto	u11685
 39167  0191D0  A032               	btfss	(btemp+8)^0,0,c
 39168  0191D2  D0F3               	goto	l12389
 39169                           
 39170                           ;daq.c: 144:    if (0b0000000000000001 >> chan & 0x1) {
 39171                           ;stkvar	_chan @ sp[(0)+-1]
 39172  0191D4  0EFF               	movlw	-1
 39173  0191D6  006F FF8C  F035    	movff	plusw1,btemp+11
 39174  0191DC  0E01               	movlw	1
 39175  0191DE  6E32               	movwf	(btemp+8)^0,c
 39176  0191E0  0E00               	movlw	0
 39177  0191E2  6E33               	movwf	(btemp+9)^0,c
 39178  0191E4  2A35               	incf	(btemp+11)^0,f,c
 39179  0191E6  D003               	goto	u11704
 39180  0191E8                     u11705:
 39181  0191E8  3433               	rlcf	(btemp+9)^0,w,c
 39182  0191EA  3233               	rrcf	(btemp+9)^0,f,c
 39183  0191EC  3232               	rrcf	(btemp+8)^0,f,c
 39184  0191EE                     u11704:
 39185  0191EE  2E35               	decfsz	(btemp+11)^0,f,c
 39186  0191F0  D7FB               	goto	u11705
 39187  0191F2  A032               	btfss	(btemp+8)^0,0,c
 39188  0191F4  D071               	goto	l12385
 39189                           
 39190                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 39191  0191F6  0060  F4AB  FFE6   	movff	_R+42,postinc1
 39192  0191FC  0060  F4AF  FFE6   	movff	_R+43,postinc1
 39193  019202  0060  F4B3  FFE6   	movff	_R+44,postinc1
 39194  019208  0060  F4B7  FFE6   	movff	_R+45,postinc1
 39195  01920E  0060  F498  F032   	movff	_R+38,btemp+8	;volatile
 39196  019214  0060  F49C  F033   	movff	_R+39,btemp+9	;volatile
 39197  01921A  0E00               	movlw	0
 39198  01921C  BE33               	btfsc	(btemp+9)^0,7,c
 39199  01921E  0EFF               	movlw	255
 39200  019220  6E34               	movwf	(btemp+10)^0,c
 39201  019222  6E35               	movwf	(btemp+11)^0,c
 39202  019224  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 39203  01922A  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 39204  019230  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 39205  019236  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 39206  01923C  0E01               	movlw	1
 39207  01923E  6EE6               	movwf	postinc1,c
 39208  019240  EC0F  F0ED         	call	___xxtofl	;wreg free
 39209  019244  0060  F0AB  FFE6   	movff	btemp,postinc1
 39210  01924A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39211  019250  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39212  019256  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39213                           
 39214                           ;stkvar	_chan @ sp[(-8)+-1]
 39215  01925C  0EF7               	movlw	-9
 39216  01925E  50E3               	movf	plusw1,w,c
 39217  019260  6EE6               	movwf	postinc1,c
 39218  019262  EC2B  F016         	call	_get_raw_result	;wreg free
 39219  019266  0060  F0A8  F034   	movff	btemp,btemp+10
 39220  01926C  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39221  019272  5034               	movf	(btemp+10)^0,w,c
 39222  019274  6E2E               	movwf	(btemp+4)^0,c
 39223  019276  5035               	movf	(btemp+11)^0,w,c
 39224  019278  6E2F               	movwf	(btemp+5)^0,c
 39225  01927A  6A30               	clrf	(btemp+6)^0,c
 39226  01927C  6A31               	clrf	(btemp+7)^0,c
 39227  01927E  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39228  019284  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39229  01928A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39230  019290  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39231  019296  0E00               	movlw	0
 39232  019298  6EE6               	movwf	postinc1,c
 39233  01929A  EC0F  F0ED         	call	___xxtofl	;wreg free
 39234  01929E  0060  F0AB  FFE6   	movff	btemp,postinc1
 39235  0192A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39236  0192AA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39237  0192B0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39238  0192B6  EC85  F011         	call	___flsub	;wreg free
 39239  0192BA  0060  F0AB  FFE6   	movff	btemp,postinc1
 39240  0192C0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39241  0192C6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39242  0192CC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39243  0192D2  EC27  F0B8         	call	___flmul	;wreg free
 39244  0192D6  D1AF               	goto	l1988
 39245  0192D8                     l12385:
 39246                           
 39247                           ;daq.c: 147:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 39248  0192D8  0060  F4BB  FFE6   	movff	_R+46,postinc1
 39249  0192DE  0060  F4BF  FFE6   	movff	_R+47,postinc1
 39250  0192E4  0060  F4C3  FFE6   	movff	_R+48,postinc1
 39251  0192EA  0060  F4C7  FFE6   	movff	_R+49,postinc1
 39252  0192F0  0060  F4A0  F032   	movff	_R+40,btemp+8	;volatile
 39253  0192F6  0060  F4A4  F033   	movff	_R+41,btemp+9	;volatile
 39254  0192FC  0E00               	movlw	0
 39255  0192FE  BE33               	btfsc	(btemp+9)^0,7,c
 39256  019300  0EFF               	movlw	255
 39257  019302  6E34               	movwf	(btemp+10)^0,c
 39258  019304  6E35               	movwf	(btemp+11)^0,c
 39259  019306  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 39260  01930C  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 39261  019312  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 39262  019318  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 39263  01931E  0E01               	movlw	1
 39264  019320  6EE6               	movwf	postinc1,c
 39265  019322  EC0F  F0ED         	call	___xxtofl	;wreg free
 39266  019326  0060  F0AB  FFE6   	movff	btemp,postinc1
 39267  01932C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39268  019332  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39269  019338  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39270                           
 39271                           ;stkvar	_chan @ sp[(-8)+-1]
 39272  01933E  0EF7               	movlw	-9
 39273  019340  50E3               	movf	plusw1,w,c
 39274  019342  6EE6               	movwf	postinc1,c
 39275  019344  EC2B  F016         	call	_get_raw_result	;wreg free
 39276  019348  0060  F0A8  F034   	movff	btemp,btemp+10
 39277  01934E  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39278  019354  5034               	movf	(btemp+10)^0,w,c
 39279  019356  6E2E               	movwf	(btemp+4)^0,c
 39280  019358  5035               	movf	(btemp+11)^0,w,c
 39281  01935A  6E2F               	movwf	(btemp+5)^0,c
 39282  01935C  6A30               	clrf	(btemp+6)^0,c
 39283  01935E  6A31               	clrf	(btemp+7)^0,c
 39284  019360  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39285  019366  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39286  01936C  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39287  019372  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39288  019378  0E00               	movlw	0
 39289  01937A  6EE6               	movwf	postinc1,c
 39290  01937C  EC0F  F0ED         	call	___xxtofl	;wreg free
 39291  019380  0060  F0AB  FFE6   	movff	btemp,postinc1
 39292  019386  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39293  01938C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39294  019392  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39295  019398  EC85  F011         	call	___flsub	;wreg free
 39296  01939C  0060  F0AB  FFE6   	movff	btemp,postinc1
 39297  0193A2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39298  0193A8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39299  0193AE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39300  0193B4  EC27  F0B8         	call	___flmul	;wreg free
 39301  0193B8  D13E               	goto	l1988
 39302  0193BA                     l12389:
 39303                           
 39304                           ;daq.c: 150:    if (0b0000100000000000 >> chan & 0x1) {
 39305                           ;stkvar	_chan @ sp[(0)+-1]
 39306  0193BA  0EFF               	movlw	-1
 39307  0193BC  006F FF8C  F035    	movff	plusw1,btemp+11
 39308  0193C2  0E00               	movlw	0
 39309  0193C4  6E32               	movwf	(btemp+8)^0,c
 39310  0193C6  0E08               	movlw	8
 39311  0193C8  6E33               	movwf	(btemp+9)^0,c
 39312  0193CA  2A35               	incf	(btemp+11)^0,f,c
 39313  0193CC  D003               	goto	u11724
 39314  0193CE                     u11725:
 39315  0193CE  3433               	rlcf	(btemp+9)^0,w,c
 39316  0193D0  3233               	rrcf	(btemp+9)^0,f,c
 39317  0193D2  3232               	rrcf	(btemp+8)^0,f,c
 39318  0193D4                     u11724:
 39319  0193D4  2E35               	decfsz	(btemp+11)^0,f,c
 39320  0193D6  D7FB               	goto	u11725
 39321  0193D8  A032               	btfss	(btemp+8)^0,0,c
 39322  0193DA  D008               	goto	l12397
 39323                           
 39324                           ;daq.c: 151:     return 25.0;
 39325  0193DC  0E00               	movlw	0
 39326  0193DE  6E2A               	movwf	btemp^0,c
 39327  0193E0  0E00               	movlw	0
 39328  0193E2  6E2B               	movwf	(btemp+1)^0,c
 39329  0193E4  0EC8               	movlw	200
 39330  0193E6  6E2C               	movwf	(btemp+2)^0,c
 39331  0193E8  0E41               	movlw	65
 39332  0193EA  D113               	goto	L45
 39333  0193EC                     l12397:
 39334                           
 39335                           ;daq.c: 153:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 39336  0193EC  0E00               	movlw	0
 39337  0193EE  6EE6               	movwf	postinc1,c
 39338  0193F0  0E00               	movlw	0
 39339  0193F2  6EE6               	movwf	postinc1,c
 39340  0193F4  0E7A               	movlw	122
 39341  0193F6  6EE6               	movwf	postinc1,c
 39342  0193F8  0E44               	movlw	68
 39343  0193FA  6EE6               	movwf	postinc1,c
 39344  0193FC  0E61               	movlw	97
 39345  0193FE  6EE6               	movwf	postinc1,c
 39346  019400  0E03               	movlw	3
 39347  019402  6EE6               	movwf	postinc1,c
 39348  019404  0E84               	movlw	132
 39349  019406  6EE6               	movwf	postinc1,c
 39350  019408  0E40               	movlw	64
 39351  01940A  6EE6               	movwf	postinc1,c
 39352                           
 39353                           ;stkvar	_chan @ sp[(-8)+-1]
 39354  01940C  0EF7               	movlw	-9
 39355  01940E  50E3               	movf	plusw1,w,c
 39356  019410  6EE6               	movwf	postinc1,c
 39357  019412  EC2B  F016         	call	_get_raw_result	;wreg free
 39358  019416  0060  F0A8  F034   	movff	btemp,btemp+10
 39359  01941C  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39360  019422  5034               	movf	(btemp+10)^0,w,c
 39361  019424  6E2E               	movwf	(btemp+4)^0,c
 39362  019426  5035               	movf	(btemp+11)^0,w,c
 39363  019428  6E2F               	movwf	(btemp+5)^0,c
 39364  01942A  6A30               	clrf	(btemp+6)^0,c
 39365  01942C  6A31               	clrf	(btemp+7)^0,c
 39366  01942E  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39367  019434  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39368  01943A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39369  019440  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39370  019446  0E00               	movlw	0
 39371  019448  6EE6               	movwf	postinc1,c
 39372  01944A  EC0F  F0ED         	call	___xxtofl	;wreg free
 39373  01944E  0060  F0AB  FFE6   	movff	btemp,postinc1
 39374  019454  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39375  01945A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39376  019460  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39377  019466  EC27  F0B8         	call	___flmul	;wreg free
 39378  01946A  0060  F0AB  FFE6   	movff	btemp,postinc1
 39379  019470  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39380  019476  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39381  01947C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39382  019482  EC78  F0C3         	call	___fldiv	;wreg free
 39383  019486  D0D7               	goto	l1988
 39384  019488                     l12401:
 39385                           
 39386                           ;daq.c: 158:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 39387                           ;stkvar	_chan @ sp[(0)+-1]
 39388  019488  0EFF               	movlw	-1
 39389  01948A  006F FF8C  F035    	movff	plusw1,btemp+11
 39390  019490  0E03               	movlw	3
 39391  019492  6E32               	movwf	(btemp+8)^0,c
 39392  019494  0E00               	movlw	0
 39393  019496  6E33               	movwf	(btemp+9)^0,c
 39394  019498  2A35               	incf	(btemp+11)^0,f,c
 39395  01949A  D003               	goto	u11744
 39396  01949C                     u11745:
 39397  01949C  3433               	rlcf	(btemp+9)^0,w,c
 39398  01949E  3233               	rrcf	(btemp+9)^0,f,c
 39399  0194A0  3232               	rrcf	(btemp+8)^0,f,c
 39400  0194A2                     u11744:
 39401  0194A2  2E35               	decfsz	(btemp+11)^0,f,c
 39402  0194A4  D7FB               	goto	u11745
 39403  0194A6  B032               	btfsc	(btemp+8)^0,0,c
 39404  0194A8  D011               	goto	u11770
 39405                           
 39406                           ;stkvar	_chan @ sp[(0)+-1]
 39407  0194AA  0EFF               	movlw	-1
 39408  0194AC  006F FF8C  F035    	movff	plusw1,btemp+11
 39409  0194B2  0E00               	movlw	0
 39410  0194B4  6E32               	movwf	(btemp+8)^0,c
 39411  0194B6  0E08               	movlw	8
 39412  0194B8  6E33               	movwf	(btemp+9)^0,c
 39413  0194BA  2A35               	incf	(btemp+11)^0,f,c
 39414  0194BC  D003               	goto	u11764
 39415  0194BE                     u11765:
 39416  0194BE  3433               	rlcf	(btemp+9)^0,w,c
 39417  0194C0  3233               	rrcf	(btemp+9)^0,f,c
 39418  0194C2  3232               	rrcf	(btemp+8)^0,f,c
 39419  0194C4                     u11764:
 39420  0194C4  2E35               	decfsz	(btemp+11)^0,f,c
 39421  0194C6  D7FB               	goto	u11765
 39422  0194C8  A032               	btfss	(btemp+8)^0,0,c
 39423  0194CA  D04E               	goto	l12409
 39424  0194CC                     u11770:
 39425                           
 39426                           ;daq.c: 159:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 39427  0194CC  0E00               	movlw	0
 39428  0194CE  6EE6               	movwf	postinc1,c
 39429  0194D0  0E00               	movlw	0
 39430  0194D2  6EE6               	movwf	postinc1,c
 39431  0194D4  0E7A               	movlw	122
 39432  0194D6  6EE6               	movwf	postinc1,c
 39433  0194D8  0E44               	movlw	68
 39434  0194DA  6EE6               	movwf	postinc1,c
 39435  0194DC  0E00               	movlw	0
 39436  0194DE  6EE6               	movwf	postinc1,c
 39437  0194E0  0E00               	movlw	0
 39438  0194E2  6EE6               	movwf	postinc1,c
 39439  0194E4  0E20               	movlw	32
 39440  0194E6  6EE6               	movwf	postinc1,c
 39441  0194E8  0E3F               	movlw	63
 39442  0194EA  6EE6               	movwf	postinc1,c
 39443                           
 39444                           ;stkvar	_chan @ sp[(-8)+-1]
 39445  0194EC  0EF7               	movlw	-9
 39446  0194EE  50E3               	movf	plusw1,w,c
 39447  0194F0  6EE6               	movwf	postinc1,c
 39448  0194F2  EC2B  F016         	call	_get_raw_result	;wreg free
 39449  0194F6  0060  F0A8  F034   	movff	btemp,btemp+10
 39450  0194FC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39451  019502  5034               	movf	(btemp+10)^0,w,c
 39452  019504  6E2E               	movwf	(btemp+4)^0,c
 39453  019506  5035               	movf	(btemp+11)^0,w,c
 39454  019508  6E2F               	movwf	(btemp+5)^0,c
 39455  01950A  6A30               	clrf	(btemp+6)^0,c
 39456  01950C  6A31               	clrf	(btemp+7)^0,c
 39457  01950E  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39458  019514  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39459  01951A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39460  019520  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39461  019526  0E00               	movlw	0
 39462  019528  6EE6               	movwf	postinc1,c
 39463  01952A  EC0F  F0ED         	call	___xxtofl	;wreg free
 39464  01952E  0060  F0AB  FFE6   	movff	btemp,postinc1
 39465  019534  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39466  01953A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39467  019540  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39468  019546  EC27  F0B8         	call	___flmul	;wreg free
 39469  01954A  0060  F0AB  FFE6   	movff	btemp,postinc1
 39470  019550  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39471  019556  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39472  01955C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39473  019562  EC78  F0C3         	call	___fldiv	;wreg free
 39474  019566  D067               	goto	l1988
 39475  019568                     l12409:
 39476                           
 39477                           ;daq.c: 161:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 39478  019568  0E00               	movlw	0
 39479  01956A  6EE6               	movwf	postinc1,c
 39480  01956C  0E00               	movlw	0
 39481  01956E  6EE6               	movwf	postinc1,c
 39482  019570  0E7A               	movlw	122
 39483  019572  6EE6               	movwf	postinc1,c
 39484  019574  0E44               	movlw	68
 39485  019576  6EE6               	movwf	postinc1,c
 39486  019578  0E61               	movlw	97
 39487  01957A  6EE6               	movwf	postinc1,c
 39488  01957C  0E03               	movlw	3
 39489  01957E  6EE6               	movwf	postinc1,c
 39490  019580  0E84               	movlw	132
 39491  019582  6EE6               	movwf	postinc1,c
 39492  019584  0E40               	movlw	64
 39493  019586  6EE6               	movwf	postinc1,c
 39494                           
 39495                           ;stkvar	_chan @ sp[(-8)+-1]
 39496  019588  0EF7               	movlw	-9
 39497  01958A  50E3               	movf	plusw1,w,c
 39498  01958C  6EE6               	movwf	postinc1,c
 39499  01958E  EC2B  F016         	call	_get_raw_result	;wreg free
 39500  019592  0060  F0A8  F034   	movff	btemp,btemp+10
 39501  019598  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39502  01959E  5034               	movf	(btemp+10)^0,w,c
 39503  0195A0  6E2E               	movwf	(btemp+4)^0,c
 39504  0195A2  5035               	movf	(btemp+11)^0,w,c
 39505  0195A4  6E2F               	movwf	(btemp+5)^0,c
 39506  0195A6  6A30               	clrf	(btemp+6)^0,c
 39507  0195A8  6A31               	clrf	(btemp+7)^0,c
 39508  0195AA  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39509  0195B0  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39510  0195B6  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39511  0195BC  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39512  0195C2  0E00               	movlw	0
 39513  0195C4  6EE6               	movwf	postinc1,c
 39514  0195C6  EC0F  F0ED         	call	___xxtofl	;wreg free
 39515  0195CA  0060  F0AB  FFE6   	movff	btemp,postinc1
 39516  0195D0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39517  0195D6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39518  0195DC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39519  0195E2  EC27  F0B8         	call	___flmul	;wreg free
 39520  0195E6  0060  F0AB  FFE6   	movff	btemp,postinc1
 39521  0195EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39522  0195F2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39523  0195F8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39524  0195FE  EC78  F0C3         	call	___fldiv	;wreg free
 39525  019602  D019               	goto	l1988
 39526  019604                     l12415:
 39527                           
 39528                           ;daq.c: 164:   return 0.0;
 39529  019604  0E00               	movlw	0
 39530  019606  6E2A               	movwf	btemp^0,c
 39531  019608  0E00               	movlw	0
 39532  01960A  6E2B               	movwf	(btemp+1)^0,c
 39533  01960C  0E00               	movlw	0
 39534  01960E  6E2C               	movwf	(btemp+2)^0,c
 39535  019610  0E00               	movlw	0
 39536  019612                     L45:
 39537  019612  6E2D               	movwf	(btemp+3)^0,c
 39538  019614  D010               	goto	l1988
 39539  019616                     l12423:
 39540                           
 39541                           ;stkvar	_to_what @ sp[(0)+-2]
 39542  019616  0EFE               	movlw	-2
 39543  019618  50E3               	movf	plusw1,w,c
 39544  01961A  6E34               	movwf	(btemp+10)^0,c
 39545  01961C  6A35               	clrf	(btemp+11)^0,c
 39546                           
 39547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39548                           ; Switch size 1, requested type "simple"
 39549                           ; Number of cases is 1, Range of values is 0 to 0
 39550                           ; switch strategies available:
 39551                           ; Name         Instructions Cycles
 39552                           ; simple_byte            4     3 (average)
 39553                           ;	Chosen strategy is simple_byte
 39554  01961E  5035               	movf	(btemp+11)^0,w,c
 39555  019620  0A00               	xorlw	0	; case 0
 39556  019622  A4D8               	btfss	status,2,c
 39557  019624  D7EF               	goto	l12415
 39558                           
 39559                           ; Switch size 1, requested type "simple"
 39560                           ; Number of cases is 2, Range of values is 0 to 1
 39561                           ; switch strategies available:
 39562                           ; Name         Instructions Cycles
 39563                           ; simple_byte            7     4 (average)
 39564                           ;	Chosen strategy is simple_byte
 39565  019626  5034               	movf	(btemp+10)^0,w,c
 39566  019628  0A00               	xorlw	0	; case 0
 39567  01962A  B4D8               	btfsc	status,2,c
 39568  01962C  D5AA               	goto	l12369
 39569  01962E  0A01               	xorlw	1	; case 1
 39570  019630  B4D8               	btfsc	status,2,c
 39571  019632  D72A               	goto	l12401
 39572  019634  D7E7               	goto	l12415
 39573  019636                     l1988:
 39574                           
 39575                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 39576  019636  52E5               	movf	postdec1,f,c
 39577  019638  52E5               	movf	postdec1,f,c
 39578  01963A  0012               	return		;funcret
 39579  01963C                     __end_of_conv_raw_result:
 39580                           	opt callstack 0
 39581                           
 39582 ;; *************** function _nanf *****************
 39583 ;; Defined at:
 39584 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 39585 ;; Parameters:    Size  Location     Type
 39586 ;;  s               2  [STACK] PTR const unsigned char 
 39587 ;;		 -> STR_142(1), STR_102(1), 
 39588 ;; Auto vars:     Size  Location     Type
 39589 ;;  u               4  [STACK] struct .
 39590 ;; Return value:  Size  Location     Type
 39591 ;;                  4  [STACK] float 
 39592 ;; Registers used:
 39593 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 39594 ;; Tracked objects:
 39595 ;;		On entry : 0/0
 39596 ;;		On exit  : 0/0
 39597 ;;		Unchanged: 0/0
 39598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39603 ;;Total ram usage:        0 bytes
 39604 ;; Hardware stack levels used:    1
 39605 ;; Hardware stack levels required when called:   15
 39606 ;; This function calls:
 39607 ;;		Nothing
 39608 ;; This function is called by:
 39609 ;;		_conv_raw_result
 39610 ;; This function uses a reentrant model
 39611 ;;
 39612                           
 39613                           	psect	text145
 39614  001D4C                     __ptext145:
 39615                           	opt callstack 0
 39616  001D4C                     _nanf:
 39617                           	opt callstack 0
 39618                           
 39619                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39620  001D4C  52E6               	movf	postinc1,f,c
 39621  001D4E  52E6               	movf	postinc1,f,c
 39622  001D50  52E6               	movf	postinc1,f,c
 39623  001D52  52E6               	movf	postinc1,f,c
 39624                           
 39625                           ;incstack = 0
 39626 ;; hardware stack exceeded
 39627  001D54  0EFF               	movlw	255
 39628  001D56  6E32               	movwf	(btemp+8)^0,c
 39629  001D58  0EFF               	movlw	255
 39630  001D5A  6E33               	movwf	(btemp+9)^0,c
 39631  001D5C  0EFF               	movlw	255
 39632  001D5E  6E34               	movwf	(btemp+10)^0,c
 39633  001D60  0E7F               	movlw	127
 39634  001D62  6E35               	movwf	(btemp+11)^0,c
 39635                           
 39636                           ;stkvar	_u @ sp[(-4)+0]
 39637  001D64  0EFC               	movlw	-4
 39638  001D66  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39639  001D6C  0EFD               	movlw	-3
 39640  001D6E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39641  001D74  0EFE               	movlw	-2
 39642  001D76  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39643  001D7C  0EFF               	movlw	-1
 39644  001D7E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39645                           
 39646                           ;stkvar	_u @ sp[(-4)+0]
 39647  001D84  0EFC               	movlw	-4
 39648  001D86  006F FF8C  F02A    	movff	plusw1,btemp
 39649  001D8C  0EFD               	movlw	-3
 39650  001D8E  006F FF8C  F02B    	movff	plusw1,btemp+1
 39651  001D94  0EFE               	movlw	-2
 39652  001D96  006F FF8C  F02C    	movff	plusw1,btemp+2
 39653  001D9C  0EFF               	movlw	-1
 39654  001D9E  006F FF8C  F02D    	movff	plusw1,btemp+3
 39655                           
 39656                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 39657  001DA4  0EFA               	movlw	250
 39658  001DA6  26E1               	addwf	fsr1l,f,c
 39659  001DA8  0EFF               	movlw	255
 39660  001DAA  22E2               	addwfc	fsr1h,f,c
 39661  001DAC  0012               	return		;funcret
 39662  001DAE                     __end_of_nanf:
 39663                           	opt callstack 0
 39664                           
 39665 ;; *************** function _get_raw_result *****************
 39666 ;; Defined at:
 39667 ;;		line 127 in file "daq.c"
 39668 ;; Parameters:    Size  Location     Type
 39669 ;;  index           1  [STACK] const enum E16605
 39670 ;; Auto vars:     Size  Location     Type
 39671 ;;		None
 39672 ;; Return value:  Size  Location     Type
 39673 ;;                  2  [STACK] unsigned short 
 39674 ;; Registers used:
 39675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 39676 ;; Tracked objects:
 39677 ;;		On entry : 0/2
 39678 ;;		On exit  : 0/0
 39679 ;;		Unchanged: 0/0
 39680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39685 ;;Total ram usage:        0 bytes
 39686 ;; Hardware stack levels used:    1
 39687 ;; Hardware stack levels required when called:   15
 39688 ;; This function calls:
 39689 ;;		Nothing
 39690 ;; This function is called by:
 39691 ;;		_main
 39692 ;;		_current_sensor_cal
 39693 ;;		_conv_raw_result
 39694 ;; This function uses a reentrant model
 39695 ;;
 39696                           
 39697                           	psect	text146
 39698  002C56                     __ptext146:
 39699                           	opt callstack 0
 39700  002C56                     _get_raw_result:
 39701                           	opt callstack 0
 39702                           
 39703                           ;daq.c: 127: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 128: {;daq.c
      +                          : 129:  return R.raw_adc[index];
 39704                           ;stkvar	_index @ sp[(0)+-1]
 39705                           
 39706                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39707                           ;incstack = 0
 39708 ;; hardware stack exceeded
 39709  002C56  0EFF               	movlw	-1
 39710  002C58  50E3               	movf	plusw1,w,c
 39711  002C5A  0D02               	mullw	2
 39712  002C5C  0E00               	movlw	low _R
 39713  002C5E  24F3               	addwf	243,w,c
 39714  002C60  6ED9               	movwf	fsr2l,c
 39715  002C62  0E01               	movlw	high _R
 39716  002C64  20F4               	addwfc	prodh,w,c
 39717  002C66  6EDA               	movwf	fsr2h,c
 39718  002C68  006F FF78  F02A    	movff	postinc2,btemp
 39719  002C6E  006F FF74  F02B    	movff	postdec2,btemp+1
 39720                           
 39721                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 39722  002C74  52E5               	movf	postdec1,f,c
 39723  002C76  0012               	return		;funcret
 39724  002C78                     __end_of_get_raw_result:
 39725                           	opt callstack 0
 39726                           
 39727 ;; *************** function ___xxtofl *****************
 39728 ;; Defined at:
 39729 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 39730 ;; Parameters:    Size  Location     Type
 39731 ;;  sign            1  [STACK] unsigned char 
 39732 ;;  val             4  [STACK] long 
 39733 ;; Auto vars:     Size  Location     Type
 39734 ;;  arg             4  [STACK] unsigned long 
 39735 ;;  exp             1  [STACK] unsigned char 
 39736 ;; Return value:  Size  Location     Type
 39737 ;;                  4  [STACK] unsigned char 
 39738 ;; Registers used:
 39739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 39740 ;; Tracked objects:
 39741 ;;		On entry : 0/1
 39742 ;;		On exit  : 0/0
 39743 ;;		Unchanged: 0/0
 39744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39749 ;;Total ram usage:        0 bytes
 39750 ;; Hardware stack levels used:    1
 39751 ;; Hardware stack levels required when called:   15
 39752 ;; This function calls:
 39753 ;;		Nothing
 39754 ;; This function is called by:
 39755 ;;		_current_sensor_cal
 39756 ;;		_conv_raw_result
 39757 ;;		_init_bsoc
 39758 ;; This function uses a reentrant model
 39759 ;;
 39760                           
 39761                           	psect	text147
 39762  01DA1E                     __ptext147:
 39763                           	opt callstack 0
 39764  01DA1E                     ___xxtofl:
 39765                           	opt callstack 0
 39766                           
 39767                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39768  01DA1E  0E05               	movlw	5
 39769  01DA20  26E1               	addwf	fsr1l,f,c
 39770  01DA22  0E00               	movlw	0
 39771  01DA24  22E2               	addwfc	fsr1h,f,c
 39772                           
 39773                           ;stkvar	_sign @ sp[(-5)+-1]
 39774                           
 39775                           ;incstack = 0
 39776 ;; hardware stack exceeded
 39777  01DA26  0EFA               	movlw	-6
 39778  01DA28  50E3               	movf	plusw1,w,c
 39779  01DA2A  B4D8               	btfsc	status,2,c
 39780  01DA2C  D01D               	goto	l12105
 39781                           
 39782                           ;stkvar	_val @ sp[(-5)+-5]
 39783  01DA2E  0EF9               	movlw	-7
 39784  01DA30  AEE3               	btfss	plusw1,7,c
 39785  01DA32  D01A               	goto	l12105
 39786                           
 39787                           ;stkvar	_val @ sp[(-5)+-5]
 39788  01DA34  0EF6               	movlw	-10
 39789  01DA36  006F FF8C  F032    	movff	plusw1,btemp+8
 39790  01DA3C  0EF7               	movlw	-9
 39791  01DA3E  006F FF8C  F033    	movff	plusw1,btemp+9
 39792  01DA44  0EF8               	movlw	-8
 39793  01DA46  006F FF8C  F034    	movff	plusw1,btemp+10
 39794  01DA4C  0EF9               	movlw	-7
 39795  01DA4E  006F FF8C  F035    	movff	plusw1,btemp+11
 39796  01DA54  1E32               	comf	(btemp+8)^0,f,c
 39797  01DA56  1E33               	comf	(btemp+9)^0,f,c
 39798  01DA58  1E34               	comf	(btemp+10)^0,f,c
 39799  01DA5A  1E35               	comf	(btemp+11)^0,f,c
 39800  01DA5C  2A32               	incf	(btemp+8)^0,f,c
 39801  01DA5E  0E00               	movlw	0
 39802  01DA60  2233               	addwfc	(btemp+9)^0,f,c
 39803  01DA62  2234               	addwfc	(btemp+10)^0,f,c
 39804  01DA64  2235               	addwfc	(btemp+11)^0,f,c
 39805  01DA66  D010               	goto	L46
 39806  01DA68                     l12105:
 39807                           
 39808                           ;stkvar	_val @ sp[(-5)+-5]
 39809  01DA68  0EF6               	movlw	-10
 39810  01DA6A  006F FF8C  F032    	movff	plusw1,btemp+8
 39811  01DA70  0EF7               	movlw	-9
 39812  01DA72  006F FF8C  F033    	movff	plusw1,btemp+9
 39813  01DA78  0EF8               	movlw	-8
 39814  01DA7A  006F FF8C  F034    	movff	plusw1,btemp+10
 39815  01DA80  0EF9               	movlw	-7
 39816  01DA82  006F FF8C  F035    	movff	plusw1,btemp+11
 39817  01DA88                     L46:
 39818                           
 39819                           ;stkvar	_arg @ sp[(-5)+0]
 39820  01DA88  0EFB               	movlw	-5
 39821  01DA8A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39822  01DA90  0EFC               	movlw	-4
 39823  01DA92  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39824  01DA98  0EFD               	movlw	-3
 39825  01DA9A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39826  01DAA0  0EFE               	movlw	-2
 39827  01DAA2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39828                           
 39829                           ;stkvar	_val @ sp[(-5)+-5]
 39830  01DAA8  0EF6               	movlw	-10
 39831  01DAAA  50E3               	movf	plusw1,w,c
 39832  01DAAC  E113               	bnz	l12113
 39833  01DAAE  0EF7               	movlw	-9
 39834  01DAB0  50E3               	movf	plusw1,w,c
 39835  01DAB2  E110               	bnz	l12113
 39836  01DAB4  0EF8               	movlw	-8
 39837  01DAB6  50E3               	movf	plusw1,w,c
 39838  01DAB8  E10D               	bnz	l12113
 39839  01DABA  0EF9               	movlw	-7
 39840  01DABC  50E3               	movf	plusw1,w,c
 39841  01DABE  A4D8               	btfss	status,2,c
 39842  01DAC0  D009               	goto	l12113
 39843  01DAC2  0E00               	movlw	0
 39844  01DAC4  6E2A               	movwf	btemp^0,c
 39845  01DAC6  0E00               	movlw	0
 39846  01DAC8  6E2B               	movwf	(btemp+1)^0,c
 39847  01DACA  0E00               	movlw	0
 39848  01DACC  6E2C               	movwf	(btemp+2)^0,c
 39849  01DACE  0E00               	movlw	0
 39850  01DAD0  6E2D               	movwf	(btemp+3)^0,c
 39851  01DAD2  D0A2               	goto	l3391
 39852  01DAD4                     l12113:
 39853  01DAD4  0E96               	movlw	150
 39854  01DAD6  6E35               	movwf	(btemp+11)^0,c
 39855                           
 39856                           ;stkvar	_exp @ sp[(-5)+4]
 39857  01DAD8  0EFF               	movlw	-1
 39858  01DADA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39859  01DAE0  D00B               	goto	l12117
 39860  01DAE2                     l12115:
 39861                           
 39862                           ;stkvar	_exp @ sp[(-5)+4]
 39863  01DAE2  0EFF               	movlw	-1
 39864  01DAE4  2AE3               	incf	plusw1,f,c
 39865                           
 39866                           ;stkvar	_arg @ sp[(-5)+0]
 39867  01DAE6  90D8               	bcf	status,0,c
 39868  01DAE8  0EFE               	movlw	-2
 39869  01DAEA  32E3               	rrcf	plusw1,f,c
 39870  01DAEC  0EFD               	movlw	-3
 39871  01DAEE  32E3               	rrcf	plusw1,f,c
 39872  01DAF0  0EFC               	movlw	-4
 39873  01DAF2  32E3               	rrcf	plusw1,f,c
 39874  01DAF4  0EFB               	movlw	-5
 39875  01DAF6  32E3               	rrcf	plusw1,f,c
 39876  01DAF8                     l12117:
 39877                           
 39878                           ;stkvar	_arg @ sp[(-5)+0]
 39879  01DAF8  50E1               	movf	fsr1l,w,c
 39880  01DAFA  0FFB               	addlw	-5
 39881  01DAFC  6ED9               	movwf	fsr2l,c
 39882  01DAFE  50E2               	movf	fsr1h,w,c
 39883  01DB00  6EDA               	movwf	fsr2h,c
 39884  01DB02  0EFF               	movlw	255
 39885  01DB04  22DA               	addwfc	fsr2h,f,c
 39886  01DB06  52DE               	movf	postinc2,f,c
 39887  01DB08  52DE               	movf	postinc2,f,c
 39888  01DB0A  52DE               	movf	postinc2,f,c
 39889  01DB0C  0EFE               	movlw	254
 39890  01DB0E  14DD               	andwf	postdec2,w,c
 39891  01DB10  B4D8               	btfsc	status,2,c
 39892  01DB12  D018               	goto	l12125
 39893  01DB14  D7E6               	goto	l12115
 39894  01DB16                     l12119:
 39895                           
 39896                           ;stkvar	_exp @ sp[(-5)+4]
 39897  01DB16  0EFF               	movlw	-1
 39898  01DB18  2AE3               	incf	plusw1,f,c
 39899                           
 39900                           ;stkvar	_arg @ sp[(-5)+0]
 39901  01DB1A  50E1               	movf	fsr1l,w,c
 39902  01DB1C  0FFB               	addlw	-5
 39903  01DB1E  6ED9               	movwf	fsr2l,c
 39904  01DB20  50E2               	movf	fsr1h,w,c
 39905  01DB22  6EDA               	movwf	fsr2h,c
 39906  01DB24  0EFF               	movlw	255
 39907  01DB26  22DA               	addwfc	fsr2h,f,c
 39908  01DB28  2ADE               	incf	postinc2,f,c
 39909  01DB2A  0E00               	movlw	0
 39910  01DB2C  22DE               	addwfc	postinc2,f,c
 39911  01DB2E  22DE               	addwfc	postinc2,f,c
 39912  01DB30  22DE               	addwfc	postinc2,f,c
 39913                           
 39914                           ;stkvar	_arg @ sp[(-5)+0]
 39915  01DB32  90D8               	bcf	status,0,c
 39916  01DB34  0EFE               	movlw	-2
 39917  01DB36  32E3               	rrcf	plusw1,f,c
 39918  01DB38  0EFD               	movlw	-3
 39919  01DB3A  32E3               	rrcf	plusw1,f,c
 39920  01DB3C  0EFC               	movlw	-4
 39921  01DB3E  32E3               	rrcf	plusw1,f,c
 39922  01DB40  0EFB               	movlw	-5
 39923  01DB42  32E3               	rrcf	plusw1,f,c
 39924  01DB44                     l12125:
 39925                           
 39926                           ;stkvar	_arg @ sp[(-5)+0]
 39927  01DB44  50E1               	movf	fsr1l,w,c
 39928  01DB46  0FFB               	addlw	-5
 39929  01DB48  6ED9               	movwf	fsr2l,c
 39930  01DB4A  50E2               	movf	fsr1h,w,c
 39931  01DB4C  6EDA               	movwf	fsr2h,c
 39932  01DB4E  0EFF               	movlw	255
 39933  01DB50  22DA               	addwfc	fsr2h,f,c
 39934  01DB52  52DE               	movf	postinc2,f,c
 39935  01DB54  52DE               	movf	postinc2,f,c
 39936  01DB56  52DE               	movf	postinc2,f,c
 39937  01DB58  0EFF               	movlw	255
 39938  01DB5A  14DD               	andwf	postdec2,w,c
 39939  01DB5C  B4D8               	btfsc	status,2,c
 39940  01DB5E  D00C               	goto	l12129
 39941  01DB60  D7DA               	goto	l12119
 39942  01DB62                     l12127:
 39943                           
 39944                           ;stkvar	_exp @ sp[(-5)+4]
 39945  01DB62  0EFF               	movlw	-1
 39946  01DB64  06E3               	decf	plusw1,f,c
 39947                           
 39948                           ;stkvar	_arg @ sp[(-5)+0]
 39949  01DB66  90D8               	bcf	status,0,c
 39950  01DB68  0EFB               	movlw	-5
 39951  01DB6A  36E3               	rlcf	plusw1,f,c
 39952  01DB6C  0EFC               	movlw	-4
 39953  01DB6E  36E3               	rlcf	plusw1,f,c
 39954  01DB70  0EFD               	movlw	-3
 39955  01DB72  36E3               	rlcf	plusw1,f,c
 39956  01DB74  0EFE               	movlw	-2
 39957  01DB76  36E3               	rlcf	plusw1,f,c
 39958  01DB78                     l12129:
 39959                           
 39960                           ;stkvar	_arg @ sp[(-5)+0]
 39961  01DB78  0EFD               	movlw	-3
 39962  01DB7A  BEE3               	btfsc	plusw1,7,c
 39963  01DB7C  D007               	goto	u11440
 39964                           
 39965                           ;stkvar	_exp @ sp[(-5)+4]
 39966  01DB7E  0EFF               	movlw	-1
 39967  01DB80  006F FF8C  F02A    	movff	plusw1,btemp
 39968  01DB86  0E02               	movlw	2
 39969  01DB88  602A               	cpfslt	btemp^0,c
 39970  01DB8A  D7EB               	goto	l12127
 39971  01DB8C                     u11440:
 39972                           
 39973                           ;stkvar	_exp @ sp[(-5)+4]
 39974  01DB8C  0EFF               	movlw	-1
 39975  01DB8E  B0E3               	btfsc	plusw1,0,c
 39976  01DB90  D002               	goto	l12137
 39977                           
 39978                           ;stkvar	_arg @ sp[(-5)+0]
 39979  01DB92  0EFD               	movlw	-3
 39980  01DB94  9EE3               	bcf	plusw1,7,c
 39981  01DB96                     l12137:
 39982                           
 39983                           ;stkvar	_exp @ sp[(-5)+4]
 39984  01DB96  50E1               	movf	fsr1l,w,c
 39985  01DB98  0FFF               	addlw	-1
 39986  01DB9A  6ED9               	movwf	fsr2l,c
 39987  01DB9C  50E2               	movf	fsr1h,w,c
 39988  01DB9E  6EDA               	movwf	fsr2h,c
 39989  01DBA0  0EFF               	movlw	255
 39990  01DBA2  22DA               	addwfc	fsr2h,f,c
 39991  01DBA4  90D8               	bcf	status,0,c
 39992  01DBA6  32DF               	rrcf	indf2,f,c
 39993                           
 39994                           ;stkvar	_exp @ sp[(-5)+4]
 39995  01DBA8  0EFF               	movlw	-1
 39996  01DBAA  006F FF8C  F035    	movff	plusw1,btemp+11
 39997  01DBB0  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 39998  01DBB6  6A2F               	clrf	(btemp+5)^0,c
 39999  01DBB8  6A30               	clrf	(btemp+6)^0,c
 40000  01DBBA  6A31               	clrf	(btemp+7)^0,c
 40001  01DBBC  0060  F0B8  F031   	movff	btemp+4,btemp+7
 40002  01DBC2  6A30               	clrf	(btemp+6)^0,c
 40003  01DBC4  6A2F               	clrf	(btemp+5)^0,c
 40004  01DBC6  6A2E               	clrf	(btemp+4)^0,c
 40005                           
 40006                           ;stkvar	_arg @ sp[(-5)+0]
 40007  01DBC8  50E1               	movf	fsr1l,w,c
 40008  01DBCA  0FFB               	addlw	-5
 40009  01DBCC  6ED9               	movwf	fsr2l,c
 40010  01DBCE  50E2               	movf	fsr1h,w,c
 40011  01DBD0  6EDA               	movwf	fsr2h,c
 40012  01DBD2  0EFF               	movlw	255
 40013  01DBD4  22DA               	addwfc	fsr2h,f,c
 40014  01DBD6  502E               	movf	(btemp+4)^0,w,c
 40015  01DBD8  12DE               	iorwf	postinc2,f,c
 40016  01DBDA  502F               	movf	(btemp+5)^0,w,c
 40017  01DBDC  12DE               	iorwf	postinc2,f,c
 40018  01DBDE  5030               	movf	(btemp+6)^0,w,c
 40019  01DBE0  12DE               	iorwf	postinc2,f,c
 40020  01DBE2  5031               	movf	(btemp+7)^0,w,c
 40021  01DBE4  12DE               	iorwf	postinc2,f,c
 40022                           
 40023                           ;stkvar	_sign @ sp[(-5)+-1]
 40024  01DBE6  0EFA               	movlw	-6
 40025  01DBE8  50E3               	movf	plusw1,w,c
 40026  01DBEA  B4D8               	btfsc	status,2,c
 40027  01DBEC  D005               	goto	l12147
 40028                           
 40029                           ;stkvar	_val @ sp[(-5)+-5]
 40030  01DBEE  0EF9               	movlw	-7
 40031  01DBF0  AEE3               	btfss	plusw1,7,c
 40032  01DBF2  D002               	goto	l12147
 40033                           
 40034                           ;stkvar	_arg @ sp[(-5)+0]
 40035  01DBF4  0EFE               	movlw	-2
 40036  01DBF6  8EE3               	bsf	plusw1,7,c
 40037  01DBF8                     l12147:
 40038                           
 40039                           ;stkvar	_arg @ sp[(-5)+0]
 40040  01DBF8  0EFB               	movlw	-5
 40041  01DBFA  006F FF8C  F02A    	movff	plusw1,btemp
 40042  01DC00  0EFC               	movlw	-4
 40043  01DC02  006F FF8C  F02B    	movff	plusw1,btemp+1
 40044  01DC08  0EFD               	movlw	-3
 40045  01DC0A  006F FF8C  F02C    	movff	plusw1,btemp+2
 40046  01DC10  0EFE               	movlw	-2
 40047  01DC12  006F FF8C  F02D    	movff	plusw1,btemp+3
 40048  01DC18                     l3391:
 40049                           
 40050                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 40051  01DC18  0EF6               	movlw	246
 40052  01DC1A  26E1               	addwf	fsr1l,f,c
 40053  01DC1C  0EFF               	movlw	255
 40054  01DC1E  22E2               	addwfc	fsr1h,f,c
 40055  01DC20  0012               	return		;funcret
 40056  01DC22                     __end_of___xxtofl:
 40057                           	opt callstack 0
 40058                           
 40059 ;; *************** function ___fldiv *****************
 40060 ;; Defined at:
 40061 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 40062 ;; Parameters:    Size  Location     Type
 40063 ;;  b               4  [STACK] unsigned char 
 40064 ;;  a               4  [STACK] unsigned char 
 40065 ;; Auto vars:     Size  Location     Type
 40066 ;;  grs             4  [STACK] unsigned long 
 40067 ;;  rem             4  [STACK] unsigned long 
 40068 ;;  new_exp         2  [STACK] short 
 40069 ;;  aexp            1  [STACK] unsigned char 
 40070 ;;  bexp            1  [STACK] unsigned char 
 40071 ;;  sign            1  [STACK] unsigned char 
 40072 ;; Return value:  Size  Location     Type
 40073 ;;                  4  [STACK] unsigned char 
 40074 ;; Registers used:
 40075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 40076 ;; Tracked objects:
 40077 ;;		On entry : 0/0
 40078 ;;		On exit  : 0/0
 40079 ;;		Unchanged: 0/0
 40080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40085 ;;Total ram usage:        0 bytes
 40086 ;; Hardware stack levels used:    1
 40087 ;; Hardware stack levels required when called:   15
 40088 ;; This function calls:
 40089 ;;		Nothing
 40090 ;; This function is called by:
 40091 ;;		_current_sensor_cal
 40092 ;;		_conv_raw_result
 40093 ;;		_convert_dac_raw
 40094 ;;		_load_hist_data
 40095 ;;		_calc_bsoc
 40096 ;;		_init_bsoc
 40097 ;;		_esr_check
 40098 ;;		_efgtoa
 40099 ;; This function uses a reentrant model
 40100 ;;
 40101                           
 40102                           	psect	text148
 40103  0186F0                     __ptext148:
 40104                           	opt callstack 0
 40105  0186F0                     ___fldiv:
 40106                           	opt callstack 0
 40107                           
 40108                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 40109  0186F0  0E0D               	movlw	13
 40110  0186F2  26E1               	addwf	fsr1l,f,c
 40111  0186F4  0E00               	movlw	0
 40112  0186F6  22E2               	addwfc	fsr1h,f,c
 40113                           
 40114                           ;stkvar	_b @ sp[(-13)+-4]
 40115                           
 40116                           ;incstack = 0
 40117 ;; hardware stack exceeded
 40118  0186F8  0EF2               	movlw	242
 40119  0186FA  24E1               	addwf	fsr1l,w,c
 40120  0186FC  6ED9               	movwf	fsr2l,c
 40121  0186FE  0EFF               	movlw	255
 40122  018700  20E2               	addwfc	fsr1h,w,c
 40123  018702  6EDA               	movwf	fsr2h,c
 40124  018704  50DF               	movf	indf2,w,c
 40125  018706  6E35               	movwf	(btemp+11)^0,c
 40126  018708  0E80               	movlw	128
 40127  01870A  1635               	andwf	(btemp+11)^0,f,c
 40128                           
 40129                           ;stkvar	_sign @ sp[(-13)+12]
 40130  01870C  0EFF               	movlw	-1
 40131  01870E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40132                           
 40133                           ;stkvar	_b @ sp[(-13)+-4]
 40134  018714  0EF2               	movlw	242
 40135  018716  24E1               	addwf	fsr1l,w,c
 40136  018718  6ED9               	movwf	fsr2l,c
 40137  01871A  0EFF               	movlw	255
 40138  01871C  20E2               	addwfc	fsr1h,w,c
 40139  01871E  6EDA               	movwf	fsr2h,c
 40140  018720  50DF               	movf	indf2,w,c
 40141  018722  6E35               	movwf	(btemp+11)^0,c
 40142  018724  90D8               	bcf	status,0,c
 40143  018726  3435               	rlcf	(btemp+11)^0,w,c
 40144  018728  6E34               	movwf	(btemp+10)^0,c
 40145                           
 40146                           ;stkvar	_bexp @ sp[(-13)+11]
 40147  01872A  0EFE               	movlw	-2
 40148  01872C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40149                           
 40150                           ;stkvar	_b @ sp[(-13)+-4]
 40151  018732  0EF1               	movlw	241
 40152  018734  24E1               	addwf	fsr1l,w,c
 40153  018736  6ED9               	movwf	fsr2l,c
 40154  018738  0EFF               	movlw	255
 40155  01873A  20E2               	addwfc	fsr1h,w,c
 40156  01873C  6EDA               	movwf	fsr2h,c
 40157  01873E  AEDF               	btfss	indf2,7,c
 40158  018740  D002               	goto	l10391
 40159                           
 40160                           ;stkvar	_bexp @ sp[(-13)+11]
 40161  018742  0EFE               	movlw	-2
 40162  018744  80E3               	bsf	plusw1,0,c
 40163  018746                     l10391:
 40164                           
 40165                           ;stkvar	_bexp @ sp[(-13)+11]
 40166  018746  0EFE               	movlw	-2
 40167  018748  50E3               	movf	plusw1,w,c
 40168  01874A  B4D8               	btfsc	status,2,c
 40169  01874C  D027               	goto	l10401
 40170                           
 40171                           ;stkvar	_bexp @ sp[(-13)+11]
 40172  01874E  0EFE               	movlw	-2
 40173  018750  28E3               	incf	plusw1,w,c
 40174  018752  A4D8               	btfss	status,2,c
 40175  018754  D018               	goto	l10397
 40176  018756  0E00               	movlw	0
 40177  018758  6E32               	movwf	(btemp+8)^0,c
 40178  01875A  0E00               	movlw	0
 40179  01875C  6E33               	movwf	(btemp+9)^0,c
 40180  01875E  0E00               	movlw	0
 40181  018760  6E34               	movwf	(btemp+10)^0,c
 40182  018762  0E00               	movlw	0
 40183  018764  6E35               	movwf	(btemp+11)^0,c
 40184                           
 40185                           ;stkvar	_b @ sp[(-13)+-4]
 40186  018766  0EEF               	movlw	-17
 40187  018768  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40188  01876E  0EF0               	movlw	-16
 40189  018770  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40190  018776  0EF1               	movlw	-15
 40191  018778  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40192  01877E  0EF2               	movlw	-14
 40193  018780  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40194  018786                     l10397:
 40195                           
 40196                           ;stkvar	_b @ sp[(-13)+-4]
 40197  018786  0EF1               	movlw	-15
 40198  018788  8EE3               	bsf	plusw1,7,c
 40199                           
 40200                           ;stkvar	_b @ sp[(-13)+-4]
 40201  01878A  0EF2               	movlw	242
 40202  01878C  24E1               	addwf	fsr1l,w,c
 40203  01878E  6ED9               	movwf	fsr2l,c
 40204  018790  0EFF               	movlw	255
 40205  018792  20E2               	addwfc	fsr1h,w,c
 40206  018794  6EDA               	movwf	fsr2h,c
 40207  018796  0E00               	movlw	0
 40208  018798  6EDF               	movwf	indf2,c
 40209  01879A  D018               	goto	l10403
 40210  01879C                     l10401:
 40211  01879C  0E00               	movlw	0
 40212  01879E  6E32               	movwf	(btemp+8)^0,c
 40213  0187A0  0E00               	movlw	0
 40214  0187A2  6E33               	movwf	(btemp+9)^0,c
 40215  0187A4  0E00               	movlw	0
 40216  0187A6  6E34               	movwf	(btemp+10)^0,c
 40217  0187A8  0E00               	movlw	0
 40218  0187AA  6E35               	movwf	(btemp+11)^0,c
 40219                           
 40220                           ;stkvar	_b @ sp[(-13)+-4]
 40221  0187AC  0EEF               	movlw	-17
 40222  0187AE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40223  0187B4  0EF0               	movlw	-16
 40224  0187B6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40225  0187BC  0EF1               	movlw	-15
 40226  0187BE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40227  0187C4  0EF2               	movlw	-14
 40228  0187C6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40229  0187CC                     l10403:
 40230                           
 40231                           ;stkvar	_a @ sp[(-13)+-8]
 40232  0187CC  0EEE               	movlw	238
 40233  0187CE  24E1               	addwf	fsr1l,w,c
 40234  0187D0  6ED9               	movwf	fsr2l,c
 40235  0187D2  0EFF               	movlw	255
 40236  0187D4  20E2               	addwfc	fsr1h,w,c
 40237  0187D6  6EDA               	movwf	fsr2h,c
 40238  0187D8  50DF               	movf	indf2,w,c
 40239  0187DA  6E35               	movwf	(btemp+11)^0,c
 40240  0187DC  0E80               	movlw	128
 40241  0187DE  1635               	andwf	(btemp+11)^0,f,c
 40242                           
 40243                           ;stkvar	_sign @ sp[(-13)+12]
 40244  0187E0  50E1               	movf	fsr1l,w,c
 40245  0187E2  0FFF               	addlw	-1
 40246  0187E4  6ED9               	movwf	fsr2l,c
 40247  0187E6  50E2               	movf	fsr1h,w,c
 40248  0187E8  6EDA               	movwf	fsr2h,c
 40249  0187EA  0EFF               	movlw	255
 40250  0187EC  22DA               	addwfc	fsr2h,f,c
 40251  0187EE  5035               	movf	(btemp+11)^0,w,c
 40252  0187F0  1ADF               	xorwf	indf2,f,c
 40253                           
 40254                           ;stkvar	_a @ sp[(-13)+-8]
 40255  0187F2  0EEE               	movlw	238
 40256  0187F4  24E1               	addwf	fsr1l,w,c
 40257  0187F6  6ED9               	movwf	fsr2l,c
 40258  0187F8  0EFF               	movlw	255
 40259  0187FA  20E2               	addwfc	fsr1h,w,c
 40260  0187FC  6EDA               	movwf	fsr2h,c
 40261  0187FE  50DF               	movf	indf2,w,c
 40262  018800  6E35               	movwf	(btemp+11)^0,c
 40263  018802  90D8               	bcf	status,0,c
 40264  018804  3435               	rlcf	(btemp+11)^0,w,c
 40265  018806  6E34               	movwf	(btemp+10)^0,c
 40266                           
 40267                           ;stkvar	_aexp @ sp[(-13)+10]
 40268  018808  0EFD               	movlw	-3
 40269  01880A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40270                           
 40271                           ;stkvar	_a @ sp[(-13)+-8]
 40272  018810  0EED               	movlw	237
 40273  018812  24E1               	addwf	fsr1l,w,c
 40274  018814  6ED9               	movwf	fsr2l,c
 40275  018816  0EFF               	movlw	255
 40276  018818  20E2               	addwfc	fsr1h,w,c
 40277  01881A  6EDA               	movwf	fsr2h,c
 40278  01881C  AEDF               	btfss	indf2,7,c
 40279  01881E  D002               	goto	l10411
 40280                           
 40281                           ;stkvar	_aexp @ sp[(-13)+10]
 40282  018820  0EFD               	movlw	-3
 40283  018822  80E3               	bsf	plusw1,0,c
 40284  018824                     l10411:
 40285                           
 40286                           ;stkvar	_aexp @ sp[(-13)+10]
 40287  018824  0EFD               	movlw	-3
 40288  018826  50E3               	movf	plusw1,w,c
 40289  018828  B4D8               	btfsc	status,2,c
 40290  01882A  D027               	goto	l10421
 40291                           
 40292                           ;stkvar	_aexp @ sp[(-13)+10]
 40293  01882C  0EFD               	movlw	-3
 40294  01882E  28E3               	incf	plusw1,w,c
 40295  018830  A4D8               	btfss	status,2,c
 40296  018832  D018               	goto	l10417
 40297  018834  0E00               	movlw	0
 40298  018836  6E32               	movwf	(btemp+8)^0,c
 40299  018838  0E00               	movlw	0
 40300  01883A  6E33               	movwf	(btemp+9)^0,c
 40301  01883C  0E00               	movlw	0
 40302  01883E  6E34               	movwf	(btemp+10)^0,c
 40303  018840  0E00               	movlw	0
 40304  018842  6E35               	movwf	(btemp+11)^0,c
 40305                           
 40306                           ;stkvar	_a @ sp[(-13)+-8]
 40307  018844  0EEB               	movlw	-21
 40308  018846  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40309  01884C  0EEC               	movlw	-20
 40310  01884E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40311  018854  0EED               	movlw	-19
 40312  018856  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40313  01885C  0EEE               	movlw	-18
 40314  01885E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40315  018864                     l10417:
 40316                           
 40317                           ;stkvar	_a @ sp[(-13)+-8]
 40318  018864  0EED               	movlw	-19
 40319  018866  8EE3               	bsf	plusw1,7,c
 40320                           
 40321                           ;stkvar	_a @ sp[(-13)+-8]
 40322  018868  0EEE               	movlw	238
 40323  01886A  24E1               	addwf	fsr1l,w,c
 40324  01886C  6ED9               	movwf	fsr2l,c
 40325  01886E  0EFF               	movlw	255
 40326  018870  20E2               	addwfc	fsr1h,w,c
 40327  018872  6EDA               	movwf	fsr2h,c
 40328  018874  0E00               	movlw	0
 40329  018876  6EDF               	movwf	indf2,c
 40330  018878  D018               	goto	l10423
 40331  01887A                     l10421:
 40332  01887A  0E00               	movlw	0
 40333  01887C  6E32               	movwf	(btemp+8)^0,c
 40334  01887E  0E00               	movlw	0
 40335  018880  6E33               	movwf	(btemp+9)^0,c
 40336  018882  0E00               	movlw	0
 40337  018884  6E34               	movwf	(btemp+10)^0,c
 40338  018886  0E00               	movlw	0
 40339  018888  6E35               	movwf	(btemp+11)^0,c
 40340                           
 40341                           ;stkvar	_a @ sp[(-13)+-8]
 40342  01888A  0EEB               	movlw	-21
 40343  01888C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40344  018892  0EEC               	movlw	-20
 40345  018894  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40346  01889A  0EED               	movlw	-19
 40347  01889C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40348  0188A2  0EEE               	movlw	-18
 40349  0188A4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40350  0188AA                     l10423:
 40351                           
 40352                           ;stkvar	_a @ sp[(-13)+-8]
 40353  0188AA  0EEB               	movlw	-21
 40354  0188AC  50E3               	movf	plusw1,w,c
 40355  0188AE  E139               	bnz	l10435
 40356  0188B0  0EEC               	movlw	-20
 40357  0188B2  50E3               	movf	plusw1,w,c
 40358  0188B4  E136               	bnz	l10435
 40359  0188B6  0EED               	movlw	-19
 40360  0188B8  50E3               	movf	plusw1,w,c
 40361  0188BA  E133               	bnz	l10435
 40362  0188BC  0EEE               	movlw	-18
 40363  0188BE  50E3               	movf	plusw1,w,c
 40364  0188C0  A4D8               	btfss	status,2,c
 40365  0188C2  D02F               	goto	l10435
 40366                           
 40367                           ;stkvar	_b @ sp[(-13)+-4]
 40368  0188C4  0EEF               	movlw	-17
 40369  0188C6  6AE3               	clrf	plusw1,c
 40370  0188C8  0EF0               	movlw	-16
 40371  0188CA  6AE3               	clrf	plusw1,c
 40372  0188CC  0EF1               	movlw	-15
 40373  0188CE  6AE3               	clrf	plusw1,c
 40374  0188D0  0EF2               	movlw	-14
 40375  0188D2  6AE3               	clrf	plusw1,c
 40376                           
 40377                           ;stkvar	_b @ sp[(-13)+-4]
 40378  0188D4  0EF1               	movlw	241
 40379  0188D6  24E1               	addwf	fsr1l,w,c
 40380  0188D8  6ED9               	movwf	fsr2l,c
 40381  0188DA  0EFF               	movlw	255
 40382  0188DC  20E2               	addwfc	fsr1h,w,c
 40383  0188DE  6EDA               	movwf	fsr2h,c
 40384  0188E0  0E80               	movlw	128
 40385  0188E2  12DE               	iorwf	postinc2,f,c
 40386  0188E4  0E7F               	movlw	127
 40387  0188E6  12DD               	iorwf	postdec2,f,c
 40388  0188E8                     l10429:
 40389                           
 40390                           ;stkvar	_sign @ sp[(-13)+12]
 40391  0188E8  0EFF               	movlw	-1
 40392  0188EA  006F FF8C  F035    	movff	plusw1,btemp+11
 40393                           
 40394                           ;stkvar	_b @ sp[(-13)+-4]
 40395  0188F0  0EF2               	movlw	242
 40396  0188F2  24E1               	addwf	fsr1l,w,c
 40397  0188F4  6ED9               	movwf	fsr2l,c
 40398  0188F6  0EFF               	movlw	255
 40399  0188F8  20E2               	addwfc	fsr1h,w,c
 40400  0188FA  6EDA               	movwf	fsr2h,c
 40401  0188FC  5035               	movf	(btemp+11)^0,w,c
 40402  0188FE  12DF               	iorwf	indf2,f,c
 40403                           
 40404                           ;stkvar	_b @ sp[(-13)+-4]
 40405  018900  0EEF               	movlw	-17
 40406  018902  006F FF8C  F02A    	movff	plusw1,btemp
 40407  018908  0EF0               	movlw	-16
 40408  01890A  006F FF8C  F02B    	movff	plusw1,btemp+1
 40409  018910  0EF1               	movlw	-15
 40410  018912  006F FF8C  F02C    	movff	plusw1,btemp+2
 40411  018918  0EF2               	movlw	-14
 40412  01891A  006F FF8C  F02D    	movff	plusw1,btemp+3
 40413  018920  D19F               	goto	l3315
 40414  018922                     l10435:
 40415                           
 40416                           ;stkvar	_bexp @ sp[(-13)+11]
 40417  018922  0EFE               	movlw	-2
 40418  018924  50E3               	movf	plusw1,w,c
 40419  018926  A4D8               	btfss	status,2,c
 40420  018928  D009               	goto	l10443
 40421  01892A  0E00               	movlw	0
 40422  01892C  6E2A               	movwf	btemp^0,c
 40423  01892E  0E00               	movlw	0
 40424  018930  6E2B               	movwf	(btemp+1)^0,c
 40425  018932  0E00               	movlw	0
 40426  018934  6E2C               	movwf	(btemp+2)^0,c
 40427  018936  0E00               	movlw	0
 40428  018938  6E2D               	movwf	(btemp+3)^0,c
 40429  01893A  D192               	goto	l3315
 40430  01893C                     l10443:
 40431                           
 40432                           ;stkvar	_bexp @ sp[(-13)+11]
 40433  01893C  0EFE               	movlw	-2
 40434  01893E  50E3               	movf	plusw1,w,c
 40435  018940  6E34               	movwf	(btemp+10)^0,c
 40436  018942  6A35               	clrf	(btemp+11)^0,c
 40437                           
 40438                           ;stkvar	_aexp @ sp[(-13)+10]
 40439  018944  0EFD               	movlw	-3
 40440  018946  50E3               	movf	plusw1,w,c
 40441  018948  5E34               	subwf	(btemp+10)^0,f,c
 40442  01894A  0E00               	movlw	0
 40443  01894C  5A35               	subwfb	(btemp+11)^0,f,c
 40444  01894E  0E7F               	movlw	127
 40445  018950  2634               	addwf	(btemp+10)^0,f,c
 40446  018952  0E00               	movlw	0
 40447  018954  2235               	addwfc	(btemp+11)^0,f,c
 40448                           
 40449                           ;stkvar	_new_exp @ sp[(-13)+8]
 40450  018956  0EFB               	movlw	-5
 40451  018958  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40452  01895E  0EFC               	movlw	-4
 40453  018960  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40454                           
 40455                           ;stkvar	_b @ sp[(-13)+-4]
 40456  018966  0EEF               	movlw	-17
 40457  018968  006F FF8C  F032    	movff	plusw1,btemp+8
 40458  01896E  0EF0               	movlw	-16
 40459  018970  006F FF8C  F033    	movff	plusw1,btemp+9
 40460  018976  0EF1               	movlw	-15
 40461  018978  006F FF8C  F034    	movff	plusw1,btemp+10
 40462  01897E  0EF2               	movlw	-14
 40463  018980  006F FF8C  F035    	movff	plusw1,btemp+11
 40464                           
 40465                           ;stkvar	_rem @ sp[(-13)+4]
 40466  018986  0EF7               	movlw	-9
 40467  018988  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40468  01898E  0EF8               	movlw	-8
 40469  018990  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40470  018996  0EF9               	movlw	-7
 40471  018998  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40472  01899E  0EFA               	movlw	-6
 40473  0189A0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40474                           
 40475                           ;stkvar	_b @ sp[(-13)+-4]
 40476  0189A6  0EEF               	movlw	-17
 40477  0189A8  6AE3               	clrf	plusw1,c
 40478  0189AA  0EF0               	movlw	-16
 40479  0189AC  6AE3               	clrf	plusw1,c
 40480  0189AE  0EF1               	movlw	-15
 40481  0189B0  6AE3               	clrf	plusw1,c
 40482  0189B2  0EF2               	movlw	-14
 40483  0189B4  6AE3               	clrf	plusw1,c
 40484                           
 40485                           ;stkvar	_grs @ sp[(-13)+0]
 40486  0189B6  0EF3               	movlw	-13
 40487  0189B8  6AE3               	clrf	plusw1,c
 40488  0189BA  0EF4               	movlw	-12
 40489  0189BC  6AE3               	clrf	plusw1,c
 40490  0189BE  0EF5               	movlw	-11
 40491  0189C0  6AE3               	clrf	plusw1,c
 40492  0189C2  0EF6               	movlw	-10
 40493  0189C4  6AE3               	clrf	plusw1,c
 40494                           
 40495                           ;stkvar	_aexp @ sp[(-13)+10]
 40496  0189C6  0EFD               	movlw	-3
 40497  0189C8  6AE3               	clrf	plusw1,c
 40498  0189CA  D050               	goto	l10471
 40499  0189CC                     l10453:
 40500                           
 40501                           ;stkvar	_aexp @ sp[(-13)+10]
 40502  0189CC  0EFD               	movlw	-3
 40503  0189CE  50E3               	movf	plusw1,w,c
 40504  0189D0  B4D8               	btfsc	status,2,c
 40505  0189D2  D020               	goto	l10463
 40506                           
 40507                           ;stkvar	_rem @ sp[(-13)+4]
 40508  0189D4  90D8               	bcf	status,0,c
 40509  0189D6  0EF7               	movlw	-9
 40510  0189D8  36E3               	rlcf	plusw1,f,c
 40511  0189DA  0EF8               	movlw	-8
 40512  0189DC  36E3               	rlcf	plusw1,f,c
 40513  0189DE  0EF9               	movlw	-7
 40514  0189E0  36E3               	rlcf	plusw1,f,c
 40515  0189E2  0EFA               	movlw	-6
 40516  0189E4  36E3               	rlcf	plusw1,f,c
 40517                           
 40518                           ;stkvar	_b @ sp[(-13)+-4]
 40519  0189E6  90D8               	bcf	status,0,c
 40520  0189E8  0EEF               	movlw	-17
 40521  0189EA  36E3               	rlcf	plusw1,f,c
 40522  0189EC  0EF0               	movlw	-16
 40523  0189EE  36E3               	rlcf	plusw1,f,c
 40524  0189F0  0EF1               	movlw	-15
 40525  0189F2  36E3               	rlcf	plusw1,f,c
 40526  0189F4  0EF2               	movlw	-14
 40527  0189F6  36E3               	rlcf	plusw1,f,c
 40528                           
 40529                           ;stkvar	_grs @ sp[(-13)+0]
 40530  0189F8  0EF6               	movlw	-10
 40531  0189FA  AEE3               	btfss	plusw1,7,c
 40532  0189FC  D002               	goto	l10461
 40533                           
 40534                           ;stkvar	_b @ sp[(-13)+-4]
 40535  0189FE  0EEF               	movlw	-17
 40536  018A00  80E3               	bsf	plusw1,0,c
 40537  018A02                     l10461:
 40538                           
 40539                           ;stkvar	_grs @ sp[(-13)+0]
 40540  018A02  90D8               	bcf	status,0,c
 40541  018A04  0EF3               	movlw	-13
 40542  018A06  36E3               	rlcf	plusw1,f,c
 40543  018A08  0EF4               	movlw	-12
 40544  018A0A  36E3               	rlcf	plusw1,f,c
 40545  018A0C  0EF5               	movlw	-11
 40546  018A0E  36E3               	rlcf	plusw1,f,c
 40547  018A10  0EF6               	movlw	-10
 40548  018A12  36E3               	rlcf	plusw1,f,c
 40549  018A14                     l10463:
 40550                           
 40551                           ;stkvar	_a @ sp[(-13)+-8]
 40552                           ;stkvar	_rem @ sp[(-13)+4]
 40553  018A14  50E1               	movf	fsr1l,w,c
 40554  018A16  0FF7               	addlw	-9
 40555  018A18  6ED9               	movwf	fsr2l,c
 40556  018A1A  50E2               	movf	fsr1h,w,c
 40557  018A1C  6EDA               	movwf	fsr2h,c
 40558  018A1E  0EFF               	movlw	255
 40559  018A20  22DA               	addwfc	fsr2h,f,c
 40560  018A22  0EEB               	movlw	-21
 40561  018A24  50E3               	movf	plusw1,w,c
 40562  018A26  5CDE               	subwf	postinc2,w,c
 40563  018A28  0EEC               	movlw	-20
 40564  018A2A  50E3               	movf	plusw1,w,c
 40565  018A2C  58DE               	subwfb	postinc2,w,c
 40566  018A2E  0EED               	movlw	-19
 40567  018A30  50E3               	movf	plusw1,w,c
 40568  018A32  58DE               	subwfb	postinc2,w,c
 40569  018A34  0EEE               	movlw	-18
 40570  018A36  50E3               	movf	plusw1,w,c
 40571  018A38  58DE               	subwfb	postinc2,w,c
 40572  018A3A  A0D8               	btfss	status,0,c
 40573  018A3C  D015               	goto	l10469
 40574                           
 40575                           ;stkvar	_grs @ sp[(-13)+0]
 40576  018A3E  0EF6               	movlw	-10
 40577  018A40  8CE3               	bsf	plusw1,6,c
 40578                           
 40579                           ;stkvar	_a @ sp[(-13)+-8]
 40580                           ;stkvar	_rem @ sp[(-13)+4]
 40581  018A42  50E1               	movf	fsr1l,w,c
 40582  018A44  0FF7               	addlw	-9
 40583  018A46  6ED9               	movwf	fsr2l,c
 40584  018A48  50E2               	movf	fsr1h,w,c
 40585  018A4A  6EDA               	movwf	fsr2h,c
 40586  018A4C  0EFF               	movlw	255
 40587  018A4E  22DA               	addwfc	fsr2h,f,c
 40588  018A50  0EEB               	movlw	-21
 40589  018A52  50E3               	movf	plusw1,w,c
 40590  018A54  5EDE               	subwf	postinc2,f,c
 40591  018A56  0EEC               	movlw	-20
 40592  018A58  50E3               	movf	plusw1,w,c
 40593  018A5A  5ADE               	subwfb	postinc2,f,c
 40594  018A5C  0EED               	movlw	-19
 40595  018A5E  50E3               	movf	plusw1,w,c
 40596  018A60  5ADE               	subwfb	postinc2,f,c
 40597  018A62  0EEE               	movlw	-18
 40598  018A64  50E3               	movf	plusw1,w,c
 40599  018A66  5ADE               	subwfb	postinc2,f,c
 40600  018A68                     l10469:
 40601                           
 40602                           ;stkvar	_aexp @ sp[(-13)+10]
 40603  018A68  0EFD               	movlw	-3
 40604  018A6A  2AE3               	incf	plusw1,f,c
 40605  018A6C                     l10471:
 40606                           
 40607                           ;stkvar	_aexp @ sp[(-13)+10]
 40608  018A6C  0EFD               	movlw	-3
 40609  018A6E  006F FF8C  F02A    	movff	plusw1,btemp
 40610  018A74  0E19               	movlw	25
 40611  018A76  642A               	cpfsgt	btemp^0,c
 40612  018A78  D7A9               	goto	l10453
 40613                           
 40614                           ;stkvar	_rem @ sp[(-13)+4]
 40615  018A7A  0EF7               	movlw	-9
 40616  018A7C  50E3               	movf	plusw1,w,c
 40617  018A7E  E10A               	bnz	u8530
 40618  018A80  0EF8               	movlw	-8
 40619  018A82  50E3               	movf	plusw1,w,c
 40620  018A84  E107               	bnz	u8530
 40621  018A86  0EF9               	movlw	-7
 40622  018A88  50E3               	movf	plusw1,w,c
 40623  018A8A  E104               	bnz	u8530
 40624  018A8C  0EFA               	movlw	-6
 40625  018A8E  50E3               	movf	plusw1,w,c
 40626  018A90  B4D8               	btfsc	status,2,c
 40627  018A92  D024               	goto	l10487
 40628  018A94                     u8530:
 40629                           
 40630                           ;stkvar	_grs @ sp[(-13)+0]
 40631  018A94  0EF3               	movlw	-13
 40632  018A96  80E3               	bsf	plusw1,0,c
 40633  018A98  D021               	goto	l10487
 40634  018A9A                     l10477:
 40635                           
 40636                           ;stkvar	_b @ sp[(-13)+-4]
 40637  018A9A  90D8               	bcf	status,0,c
 40638  018A9C  0EEF               	movlw	-17
 40639  018A9E  36E3               	rlcf	plusw1,f,c
 40640  018AA0  0EF0               	movlw	-16
 40641  018AA2  36E3               	rlcf	plusw1,f,c
 40642  018AA4  0EF1               	movlw	-15
 40643  018AA6  36E3               	rlcf	plusw1,f,c
 40644  018AA8  0EF2               	movlw	-14
 40645  018AAA  36E3               	rlcf	plusw1,f,c
 40646                           
 40647                           ;stkvar	_grs @ sp[(-13)+0]
 40648  018AAC  0EF6               	movlw	-10
 40649  018AAE  AEE3               	btfss	plusw1,7,c
 40650  018AB0  D002               	goto	l10483
 40651                           
 40652                           ;stkvar	_b @ sp[(-13)+-4]
 40653  018AB2  0EEF               	movlw	-17
 40654  018AB4  80E3               	bsf	plusw1,0,c
 40655  018AB6                     l10483:
 40656                           
 40657                           ;stkvar	_grs @ sp[(-13)+0]
 40658  018AB6  90D8               	bcf	status,0,c
 40659  018AB8  0EF3               	movlw	-13
 40660  018ABA  36E3               	rlcf	plusw1,f,c
 40661  018ABC  0EF4               	movlw	-12
 40662  018ABE  36E3               	rlcf	plusw1,f,c
 40663  018AC0  0EF5               	movlw	-11
 40664  018AC2  36E3               	rlcf	plusw1,f,c
 40665  018AC4  0EF6               	movlw	-10
 40666  018AC6  36E3               	rlcf	plusw1,f,c
 40667                           
 40668                           ;stkvar	_new_exp @ sp[(-13)+8]
 40669  018AC8  50E1               	movf	fsr1l,w,c
 40670  018ACA  0FFB               	addlw	-5
 40671  018ACC  6ED9               	movwf	fsr2l,c
 40672  018ACE  50E2               	movf	fsr1h,w,c
 40673  018AD0  6EDA               	movwf	fsr2h,c
 40674  018AD2  0EFF               	movlw	255
 40675  018AD4  22DA               	addwfc	fsr2h,f,c
 40676  018AD6  06DE               	decf	postinc2,f,c
 40677  018AD8  0E00               	movlw	0
 40678  018ADA  5ADD               	subwfb	postdec2,f,c
 40679  018ADC                     l10487:
 40680                           
 40681                           ;stkvar	_b @ sp[(-13)+-4]
 40682  018ADC  0EF1               	movlw	-15
 40683  018ADE  AEE3               	btfss	plusw1,7,c
 40684  018AE0  D7DC               	goto	l10477
 40685                           
 40686                           ;stkvar	_aexp @ sp[(-13)+10]
 40687  018AE2  0EFD               	movlw	-3
 40688  018AE4  6AE3               	clrf	plusw1,c
 40689                           
 40690                           ;stkvar	_grs @ sp[(-13)+0]
 40691  018AE6  0EF6               	movlw	-10
 40692  018AE8  AEE3               	btfss	plusw1,7,c
 40693  018AEA  D020               	goto	l10501
 40694                           
 40695                           ;stkvar	_grs @ sp[(-13)+0]
 40696  018AEC  50E1               	movf	fsr1l,w,c
 40697  018AEE  0FF3               	addlw	-13
 40698  018AF0  6ED9               	movwf	fsr2l,c
 40699  018AF2  50E2               	movf	fsr1h,w,c
 40700  018AF4  6EDA               	movwf	fsr2h,c
 40701  018AF6  0EFF               	movlw	255
 40702  018AF8  22DA               	addwfc	fsr2h,f,c
 40703  018AFA  0EFF               	movlw	255
 40704  018AFC  14DE               	andwf	postinc2,w,c
 40705  018AFE  6E32               	movwf	(btemp+8)^0,c
 40706  018B00  0EFF               	movlw	255
 40707  018B02  14DE               	andwf	postinc2,w,c
 40708  018B04  6E33               	movwf	(btemp+9)^0,c
 40709  018B06  0EFF               	movlw	255
 40710  018B08  14DE               	andwf	postinc2,w,c
 40711  018B0A  6E34               	movwf	(btemp+10)^0,c
 40712  018B0C  0E7F               	movlw	127
 40713  018B0E  14DE               	andwf	postinc2,w,c
 40714  018B10  6E35               	movwf	(btemp+11)^0,c
 40715  018B12  5032               	movf	(btemp+8)^0,w,c
 40716  018B14  1033               	iorwf	(btemp+9)^0,w,c
 40717  018B16  1034               	iorwf	(btemp+10)^0,w,c
 40718  018B18  1035               	iorwf	(btemp+11)^0,w,c
 40719  018B1A  B4D8               	btfsc	status,2,c
 40720  018B1C  D004               	goto	l10497
 40721  018B1E                     u8570:
 40722                           
 40723                           ;stkvar	_aexp @ sp[(-13)+10]
 40724  018B1E  0EFD               	movlw	-3
 40725  018B20  6AE3               	clrf	plusw1,c
 40726  018B22  2AE3               	incf	plusw1,f,c
 40727  018B24  D003               	goto	l10501
 40728  018B26                     l10497:
 40729                           
 40730                           ;stkvar	_b @ sp[(-13)+-4]
 40731  018B26  0EEF               	movlw	-17
 40732  018B28  B0E3               	btfsc	plusw1,0,c
 40733  018B2A  D7F9               	goto	u8570
 40734  018B2C                     l10501:
 40735                           
 40736                           ;stkvar	_aexp @ sp[(-13)+10]
 40737  018B2C  0EFD               	movlw	-3
 40738  018B2E  50E3               	movf	plusw1,w,c
 40739  018B30  B4D8               	btfsc	status,2,c
 40740  018B32  D036               	goto	l10511
 40741                           
 40742                           ;stkvar	_b @ sp[(-13)+-4]
 40743  018B34  50E1               	movf	fsr1l,w,c
 40744  018B36  0FEF               	addlw	-17
 40745  018B38  6ED9               	movwf	fsr2l,c
 40746  018B3A  50E2               	movf	fsr1h,w,c
 40747  018B3C  6EDA               	movwf	fsr2h,c
 40748  018B3E  0EFF               	movlw	255
 40749  018B40  22DA               	addwfc	fsr2h,f,c
 40750  018B42  2ADE               	incf	postinc2,f,c
 40751  018B44  0E00               	movlw	0
 40752  018B46  22DE               	addwfc	postinc2,f,c
 40753  018B48  22DE               	addwfc	postinc2,f,c
 40754  018B4A  22DE               	addwfc	postinc2,f,c
 40755                           
 40756                           ;stkvar	_b @ sp[(-13)+-4]
 40757  018B4C  0EF2               	movlw	-14
 40758  018B4E  A0E3               	btfss	plusw1,0,c
 40759  018B50  D027               	goto	l10511
 40760  018B52  0E01               	movlw	1
 40761  018B54  6E35               	movwf	(btemp+11)^0,c
 40762                           
 40763                           ;stkvar	_b @ sp[(-13)+-4]
 40764  018B56  50E1               	movf	fsr1l,w,c
 40765  018B58  0FEF               	addlw	-17
 40766  018B5A  6ED9               	movwf	fsr2l,c
 40767  018B5C  50E2               	movf	fsr1h,w,c
 40768  018B5E  6EDA               	movwf	fsr2h,c
 40769  018B60  0EFF               	movlw	255
 40770  018B62  22DA               	addwfc	fsr2h,f,c
 40771  018B64  2835               	incf	(btemp+11)^0,w,c
 40772  018B66  52DE               	movf	postinc2,f,c
 40773  018B68  D008               	goto	u8610
 40774  018B6A                     u8615:
 40775  018B6A  52DE               	movf	postinc2,f,c
 40776  018B6C  90D8               	bcf	status,0,c
 40777  018B6E  BEDC               	btfsc	preinc2,7,c
 40778  018B70  80D8               	bsf	status,0,c
 40779  018B72  32DD               	rrcf	postdec2,f,c
 40780  018B74  32DD               	rrcf	postdec2,f,c
 40781  018B76  32DD               	rrcf	postdec2,f,c
 40782  018B78  32DE               	rrcf	postinc2,f,c
 40783  018B7A                     u8610:
 40784  018B7A  2EE8               	decfsz	wreg,f,c
 40785  018B7C  D7F6               	goto	u8615
 40786                           
 40787                           ;stkvar	_new_exp @ sp[(-13)+8]
 40788  018B7E  0EFB               	movlw	-5
 40789  018B80  50E3               	movf	plusw1,w,c
 40790  018B82  0F01               	addlw	1
 40791  018B84  6E2A               	movwf	btemp^0,c
 40792  018B86  0EFB               	movlw	-5
 40793  018B88  0060  F0AB  FFE3   	movff	btemp,plusw1
 40794  018B8E  6A2A               	clrf	btemp^0,c
 40795  018B90  0EFC               	movlw	-4
 40796  018B92  50E3               	movf	plusw1,w,c
 40797  018B94  202A               	addwfc	btemp^0,w,c
 40798  018B96  6E2A               	movwf	btemp^0,c
 40799  018B98  0EFC               	movlw	-4
 40800  018B9A  0060  F0AB  FFE3   	movff	btemp,plusw1
 40801  018BA0                     l10511:
 40802                           
 40803                           ;stkvar	_new_exp @ sp[(-13)+8]
 40804  018BA0  0EFC               	movlw	-4
 40805  018BA2  BEE3               	btfsc	plusw1,7,c
 40806  018BA4  D01B               	goto	l10517
 40807  018BA6  0EFC               	movlw	-4
 40808  018BA8  50E3               	movf	plusw1,w,c
 40809  018BAA  E104               	bnz	u8620
 40810  018BAC  0EFB               	movlw	-5
 40811  018BAE  28E3               	incf	plusw1,w,c
 40812  018BB0  A0D8               	btfss	status,0,c
 40813  018BB2  D014               	goto	l10517
 40814  018BB4                     u8620:
 40815  018BB4  0EFF               	movlw	255
 40816  018BB6  6E34               	movwf	(btemp+10)^0,c
 40817  018BB8  0E00               	movlw	0
 40818  018BBA  6E35               	movwf	(btemp+11)^0,c
 40819                           
 40820                           ;stkvar	_new_exp @ sp[(-13)+8]
 40821  018BBC  0EFB               	movlw	-5
 40822  018BBE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40823  018BC4  0EFC               	movlw	-4
 40824  018BC6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40825                           
 40826                           ;stkvar	_b @ sp[(-13)+-4]
 40827  018BCC  0EEF               	movlw	-17
 40828  018BCE  6AE3               	clrf	plusw1,c
 40829  018BD0  0EF0               	movlw	-16
 40830  018BD2  6AE3               	clrf	plusw1,c
 40831  018BD4  0EF1               	movlw	-15
 40832  018BD6  6AE3               	clrf	plusw1,c
 40833  018BD8  0EF2               	movlw	-14
 40834  018BDA  6AE3               	clrf	plusw1,c
 40835  018BDC                     l10517:
 40836                           
 40837                           ;stkvar	_new_exp @ sp[(-13)+8]
 40838  018BDC  0EFC               	movlw	-4
 40839  018BDE  BEE3               	btfsc	plusw1,7,c
 40840  018BE0  D007               	goto	u8630
 40841  018BE2  0EFC               	movlw	-4
 40842  018BE4  50E3               	movf	plusw1,w,c
 40843  018BE6  E112               	bnz	l10523
 40844  018BE8  0EFB               	movlw	-5
 40845  018BEA  04E3               	decf	plusw1,w,c
 40846  018BEC  B0D8               	btfsc	status,0,c
 40847  018BEE  D00E               	goto	l10523
 40848  018BF0                     u8630:
 40849                           
 40850                           ;stkvar	_new_exp @ sp[(-13)+8]
 40851  018BF0  0EFB               	movlw	-5
 40852  018BF2  6AE3               	clrf	plusw1,c
 40853  018BF4  0EFC               	movlw	-4
 40854  018BF6  6AE3               	clrf	plusw1,c
 40855                           
 40856                           ;stkvar	_b @ sp[(-13)+-4]
 40857  018BF8  0EEF               	movlw	-17
 40858  018BFA  6AE3               	clrf	plusw1,c
 40859  018BFC  0EF0               	movlw	-16
 40860  018BFE  6AE3               	clrf	plusw1,c
 40861  018C00  0EF1               	movlw	-15
 40862  018C02  6AE3               	clrf	plusw1,c
 40863  018C04  0EF2               	movlw	-14
 40864  018C06  6AE3               	clrf	plusw1,c
 40865                           
 40866                           ;stkvar	_sign @ sp[(-13)+12]
 40867  018C08  0EFF               	movlw	-1
 40868  018C0A  6AE3               	clrf	plusw1,c
 40869  018C0C                     l10523:
 40870                           
 40871                           ;stkvar	_new_exp @ sp[(-13)+8]
 40872                           ;stkvar	_bexp @ sp[(-13)+11]
 40873  018C0C  0EFB               	movlw	-5
 40874  018C0E  006F FF8C  F02A    	movff	plusw1,btemp
 40875  018C14  0EFE               	movlw	-2
 40876  018C16  0060  F0AB  FFE3   	movff	btemp,plusw1
 40877                           
 40878                           ;stkvar	_bexp @ sp[(-13)+11]
 40879  018C1C  0EFE               	movlw	-2
 40880  018C1E  A0E3               	btfss	plusw1,0,c
 40881  018C20  D009               	goto	l10529
 40882                           
 40883                           ;stkvar	_b @ sp[(-13)+-4]
 40884  018C22  0EF1               	movlw	241
 40885  018C24  24E1               	addwf	fsr1l,w,c
 40886  018C26  6ED9               	movwf	fsr2l,c
 40887  018C28  0EFF               	movlw	255
 40888  018C2A  20E2               	addwfc	fsr1h,w,c
 40889  018C2C  6EDA               	movwf	fsr2h,c
 40890  018C2E  0E00               	movlw	0
 40891  018C30  8EDB               	bsf	plusw2,7,c
 40892  018C32  D008               	goto	l10531
 40893  018C34                     l10529:
 40894                           
 40895                           ;stkvar	_b @ sp[(-13)+-4]
 40896  018C34  0EF1               	movlw	241
 40897  018C36  24E1               	addwf	fsr1l,w,c
 40898  018C38  6ED9               	movwf	fsr2l,c
 40899  018C3A  0EFF               	movlw	255
 40900  018C3C  20E2               	addwfc	fsr1h,w,c
 40901  018C3E  6EDA               	movwf	fsr2h,c
 40902  018C40  0E7F               	movlw	127
 40903  018C42  16DF               	andwf	indf2,f,c
 40904  018C44                     l10531:
 40905                           
 40906                           ;stkvar	_b @ sp[(-13)+-4]
 40907  018C44  0EF2               	movlw	242
 40908  018C46  24E1               	addwf	fsr1l,w,c
 40909  018C48  6ED9               	movwf	fsr2l,c
 40910  018C4A  0EFF               	movlw	255
 40911  018C4C  20E2               	addwfc	fsr1h,w,c
 40912  018C4E  6EDA               	movwf	fsr2h,c
 40913                           
 40914                           ;stkvar	_bexp @ sp[(-13)+11]
 40915  018C50  0EFE               	movlw	-2
 40916  018C52  006F FF8C  F035    	movff	plusw1,btemp+11
 40917  018C58  90D8               	bcf	status,0,c
 40918  018C5A  3035               	rrcf	(btemp+11)^0,w,c
 40919  018C5C  6EDF               	movwf	indf2,c
 40920  018C5E  D644               	goto	l10429
 40921  018C60                     l3315:
 40922                           
 40923                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 40924  018C60  0EEB               	movlw	235
 40925  018C62  26E1               	addwf	fsr1l,f,c
 40926  018C64  0EFF               	movlw	255
 40927  018C66  22E2               	addwfc	fsr1h,f,c
 40928  018C68  0012               	return		;funcret
 40929  018C6A                     __end_of___fldiv:
 40930                           	opt callstack 0
 40931                           
 40932 ;; *************** function ___flge *****************
 40933 ;; Defined at:
 40934 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 40935 ;; Parameters:    Size  Location     Type
 40936 ;;  ff1             4  [STACK] unsigned char 
 40937 ;;  ff2             4  [STACK] unsigned char 
 40938 ;; Auto vars:     Size  Location     Type
 40939 ;;		None
 40940 ;; Return value:  Size  Location     Type
 40941 ;;		None               void
 40942 ;; Registers used:
 40943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 40944 ;; Tracked objects:
 40945 ;;		On entry : 0/1
 40946 ;;		On exit  : 0/0
 40947 ;;		Unchanged: 0/0
 40948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40953 ;;Total ram usage:        0 bytes
 40954 ;; Hardware stack levels used:    1
 40955 ;; Hardware stack levels required when called:   15
 40956 ;; This function calls:
 40957 ;;		Nothing
 40958 ;; This function is called by:
 40959 ;;		_main
 40960 ;;		_convert_dac_raw
 40961 ;;		_calc_ror_data
 40962 ;;		_check_day_time
 40963 ;;		_calc_bsoc
 40964 ;;		_efgtoa
 40965 ;; This function uses a reentrant model
 40966 ;;
 40967                           
 40968                           	psect	text149
 40969  01ED52                     __ptext149:
 40970                           	opt callstack 0
 40971  01ED52                     ___flge:
 40972                           	opt callstack 0
 40973                           
 40974                           ;stkvar	_ff1 @ sp[(0)+-4]
 40975                           
 40976                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40977                           ;incstack = 0
 40978 ;; hardware stack exceeded
 40979  01ED52  50E1               	movf	fsr1l,w,c
 40980  01ED54  0FFC               	addlw	-4
 40981  01ED56  6ED9               	movwf	fsr2l,c
 40982  01ED58  50E2               	movf	fsr1h,w,c
 40983  01ED5A  6EDA               	movwf	fsr2h,c
 40984  01ED5C  0EFF               	movlw	255
 40985  01ED5E  22DA               	addwfc	fsr2h,f,c
 40986  01ED60  0E00               	movlw	0
 40987  01ED62  14DE               	andwf	postinc2,w,c
 40988  01ED64  6E32               	movwf	(btemp+8)^0,c
 40989  01ED66  0E00               	movlw	0
 40990  01ED68  14DE               	andwf	postinc2,w,c
 40991  01ED6A  6E33               	movwf	(btemp+9)^0,c
 40992  01ED6C  0E80               	movlw	128
 40993  01ED6E  14DE               	andwf	postinc2,w,c
 40994  01ED70  6E34               	movwf	(btemp+10)^0,c
 40995  01ED72  0E7F               	movlw	127
 40996  01ED74  14DE               	andwf	postinc2,w,c
 40997  01ED76  6E35               	movwf	(btemp+11)^0,c
 40998  01ED78  5032               	movf	(btemp+8)^0,w,c
 40999  01ED7A  1033               	iorwf	(btemp+9)^0,w,c
 41000  01ED7C  1034               	iorwf	(btemp+10)^0,w,c
 41001  01ED7E  1035               	iorwf	(btemp+11)^0,w,c
 41002  01ED80  A4D8               	btfss	status,2,c
 41003  01ED82  D008               	goto	l10805
 41004                           
 41005                           ;stkvar	_ff1 @ sp[(0)+-4]
 41006  01ED84  0EFC               	movlw	-4
 41007  01ED86  6AE3               	clrf	plusw1,c
 41008  01ED88  0EFD               	movlw	-3
 41009  01ED8A  6AE3               	clrf	plusw1,c
 41010  01ED8C  0EFE               	movlw	-2
 41011  01ED8E  6AE3               	clrf	plusw1,c
 41012  01ED90  0EFF               	movlw	-1
 41013  01ED92  6AE3               	clrf	plusw1,c
 41014  01ED94                     l10805:
 41015                           
 41016                           ;stkvar	_ff2 @ sp[(0)+-8]
 41017  01ED94  50E1               	movf	fsr1l,w,c
 41018  01ED96  0FF8               	addlw	-8
 41019  01ED98  6ED9               	movwf	fsr2l,c
 41020  01ED9A  50E2               	movf	fsr1h,w,c
 41021  01ED9C  6EDA               	movwf	fsr2h,c
 41022  01ED9E  0EFF               	movlw	255
 41023  01EDA0  22DA               	addwfc	fsr2h,f,c
 41024  01EDA2  0E00               	movlw	0
 41025  01EDA4  14DE               	andwf	postinc2,w,c
 41026  01EDA6  6E32               	movwf	(btemp+8)^0,c
 41027  01EDA8  0E00               	movlw	0
 41028  01EDAA  14DE               	andwf	postinc2,w,c
 41029  01EDAC  6E33               	movwf	(btemp+9)^0,c
 41030  01EDAE  0E80               	movlw	128
 41031  01EDB0  14DE               	andwf	postinc2,w,c
 41032  01EDB2  6E34               	movwf	(btemp+10)^0,c
 41033  01EDB4  0E7F               	movlw	127
 41034  01EDB6  14DE               	andwf	postinc2,w,c
 41035  01EDB8  6E35               	movwf	(btemp+11)^0,c
 41036  01EDBA  5032               	movf	(btemp+8)^0,w,c
 41037  01EDBC  1033               	iorwf	(btemp+9)^0,w,c
 41038  01EDBE  1034               	iorwf	(btemp+10)^0,w,c
 41039  01EDC0  1035               	iorwf	(btemp+11)^0,w,c
 41040  01EDC2  A4D8               	btfss	status,2,c
 41041  01EDC4  D008               	goto	l2996
 41042                           
 41043                           ;stkvar	_ff2 @ sp[(0)+-8]
 41044  01EDC6  0EF8               	movlw	-8
 41045  01EDC8  6AE3               	clrf	plusw1,c
 41046  01EDCA  0EF9               	movlw	-7
 41047  01EDCC  6AE3               	clrf	plusw1,c
 41048  01EDCE  0EFA               	movlw	-6
 41049  01EDD0  6AE3               	clrf	plusw1,c
 41050  01EDD2  0EFB               	movlw	-5
 41051  01EDD4  6AE3               	clrf	plusw1,c
 41052  01EDD6                     l2996:
 41053                           
 41054                           ;stkvar	_ff1 @ sp[(0)+-4]
 41055  01EDD6  0EFF               	movlw	-1
 41056  01EDD8  AEE3               	btfss	plusw1,7,c
 41057  01EDDA  D024               	goto	l10811
 41058                           
 41059                           ;stkvar	_ff1 @ sp[(0)+-4]
 41060  01EDDC  0E00               	movlw	0
 41061  01EDDE  6E32               	movwf	(btemp+8)^0,c
 41062  01EDE0  0E00               	movlw	0
 41063  01EDE2  6E33               	movwf	(btemp+9)^0,c
 41064  01EDE4  0E00               	movlw	0
 41065  01EDE6  6E34               	movwf	(btemp+10)^0,c
 41066  01EDE8  0E80               	movlw	128
 41067  01EDEA  6E35               	movwf	(btemp+11)^0,c
 41068  01EDEC  0EFC               	movlw	-4
 41069  01EDEE  50E3               	movf	plusw1,w,c
 41070  01EDF0  5E32               	subwf	(btemp+8)^0,f,c
 41071  01EDF2  0EFD               	movlw	-3
 41072  01EDF4  50E3               	movf	plusw1,w,c
 41073  01EDF6  5A33               	subwfb	(btemp+9)^0,f,c
 41074  01EDF8  0EFE               	movlw	-2
 41075  01EDFA  50E3               	movf	plusw1,w,c
 41076  01EDFC  5A34               	subwfb	(btemp+10)^0,f,c
 41077  01EDFE  0EFF               	movlw	-1
 41078  01EE00  50E3               	movf	plusw1,w,c
 41079  01EE02  5A35               	subwfb	(btemp+11)^0,f,c
 41080                           
 41081                           ;stkvar	_ff1 @ sp[(0)+-4]
 41082  01EE04  0EFC               	movlw	-4
 41083  01EE06  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41084  01EE0C  0EFD               	movlw	-3
 41085  01EE0E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41086  01EE14  0EFE               	movlw	-2
 41087  01EE16  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41088  01EE1C  0EFF               	movlw	-1
 41089  01EE1E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41090  01EE24                     l10811:
 41091                           
 41092                           ;stkvar	_ff2 @ sp[(0)+-8]
 41093  01EE24  0EFB               	movlw	-5
 41094  01EE26  AEE3               	btfss	plusw1,7,c
 41095  01EE28  D024               	goto	l10815
 41096                           
 41097                           ;stkvar	_ff2 @ sp[(0)+-8]
 41098  01EE2A  0E00               	movlw	0
 41099  01EE2C  6E32               	movwf	(btemp+8)^0,c
 41100  01EE2E  0E00               	movlw	0
 41101  01EE30  6E33               	movwf	(btemp+9)^0,c
 41102  01EE32  0E00               	movlw	0
 41103  01EE34  6E34               	movwf	(btemp+10)^0,c
 41104  01EE36  0E80               	movlw	128
 41105  01EE38  6E35               	movwf	(btemp+11)^0,c
 41106  01EE3A  0EF8               	movlw	-8
 41107  01EE3C  50E3               	movf	plusw1,w,c
 41108  01EE3E  5E32               	subwf	(btemp+8)^0,f,c
 41109  01EE40  0EF9               	movlw	-7
 41110  01EE42  50E3               	movf	plusw1,w,c
 41111  01EE44  5A33               	subwfb	(btemp+9)^0,f,c
 41112  01EE46  0EFA               	movlw	-6
 41113  01EE48  50E3               	movf	plusw1,w,c
 41114  01EE4A  5A34               	subwfb	(btemp+10)^0,f,c
 41115  01EE4C  0EFB               	movlw	-5
 41116  01EE4E  50E3               	movf	plusw1,w,c
 41117  01EE50  5A35               	subwfb	(btemp+11)^0,f,c
 41118                           
 41119                           ;stkvar	_ff2 @ sp[(0)+-8]
 41120  01EE52  0EF8               	movlw	-8
 41121  01EE54  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41122  01EE5A  0EF9               	movlw	-7
 41123  01EE5C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41124  01EE62  0EFA               	movlw	-6
 41125  01EE64  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41126  01EE6A  0EFB               	movlw	-5
 41127  01EE6C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41128  01EE72                     l10815:
 41129                           
 41130                           ;stkvar	_ff1 @ sp[(0)+-4]
 41131  01EE72  0EFF               	movlw	-1
 41132  01EE74  7EE3               	btg	plusw1,7,c
 41133                           
 41134                           ;stkvar	_ff2 @ sp[(0)+-8]
 41135  01EE76  0EFB               	movlw	-5
 41136  01EE78  7EE3               	btg	plusw1,7,c
 41137                           
 41138                           ;stkvar	_ff2 @ sp[(0)+-8]
 41139                           ;stkvar	_ff1 @ sp[(0)+-4]
 41140  01EE7A  50E1               	movf	fsr1l,w,c
 41141  01EE7C  0FFC               	addlw	-4
 41142  01EE7E  6ED9               	movwf	fsr2l,c
 41143  01EE80  50E2               	movf	fsr1h,w,c
 41144  01EE82  6EDA               	movwf	fsr2h,c
 41145  01EE84  0EFF               	movlw	255
 41146  01EE86  22DA               	addwfc	fsr2h,f,c
 41147  01EE88  0EF8               	movlw	-8
 41148  01EE8A  50E3               	movf	plusw1,w,c
 41149  01EE8C  5CDE               	subwf	postinc2,w,c
 41150  01EE8E  0EF9               	movlw	-7
 41151  01EE90  50E3               	movf	plusw1,w,c
 41152  01EE92  58DE               	subwfb	postinc2,w,c
 41153  01EE94  0EFA               	movlw	-6
 41154  01EE96  50E3               	movf	plusw1,w,c
 41155  01EE98  58DE               	subwfb	postinc2,w,c
 41156  01EE9A  0EFB               	movlw	-5
 41157  01EE9C  50E3               	movf	plusw1,w,c
 41158  01EE9E  58DE               	subwfb	postinc2,w,c
 41159  01EEA0  B0D8               	btfsc	status,0,c
 41160  01EEA2  D002               	goto	l10823
 41161  01EEA4  902A               	bcf	btemp& (0+255),0,c
 41162  01EEA6  D001               	goto	l3003
 41163  01EEA8                     l10823:
 41164  01EEA8  802A               	bsf	btemp& (0+255),0,c
 41165  01EEAA                     l3003:
 41166                           
 41167                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 41168  01EEAA  0EF8               	movlw	248
 41169  01EEAC  26E1               	addwf	fsr1l,f,c
 41170  01EEAE  0EFF               	movlw	255
 41171  01EEB0  22E2               	addwfc	fsr1h,f,c
 41172  01EEB2  0012               	return		;funcret
 41173  01EEB4                     __end_of___flge:
 41174                           	opt callstack 0
 41175                           
 41176 ;; *************** function _calc_model_data *****************
 41177 ;; Defined at:
 41178 ;;		line 67 in file "mbmc.c"
 41179 ;; Parameters:    Size  Location     Type
 41180 ;;		None
 41181 ;; Auto vars:     Size  Location     Type
 41182 ;;		None
 41183 ;; Return value:  Size  Location     Type
 41184 ;;                  1  [STACK] void 
 41185 ;; Registers used:
 41186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 41187 ;; Tracked objects:
 41188 ;;		On entry : 3F/0
 41189 ;;		On exit  : 3F/39
 41190 ;;		Unchanged: 0/0
 41191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41196 ;;Total ram usage:        0 bytes
 41197 ;; Hardware stack levels used:    1
 41198 ;; Hardware stack levels required when called:   18
 41199 ;; This function calls:
 41200 ;;		___fladd
 41201 ;;		___flmul
 41202 ;;		___flsub
 41203 ;;		_lp_filter
 41204 ;;		_start_bsoc
 41205 ;;		_stop_bsoc
 41206 ;; This function is called by:
 41207 ;;		_main
 41208 ;; This function uses a reentrant model
 41209 ;;
 41210                           
 41211                           	psect	text150
 41212  019ABC                     __ptext150:
 41213                           	opt callstack 0
 41214  019ABC                     _calc_model_data:
 41215                           	opt callstack 12
 41216                           
 41217                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 41218                           
 41219                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41220                           ;incstack = 0
 41221  019ABC  ECC0  F017         	call	_stop_bsoc	;wreg free
 41222                           
 41223                           ; BSR set to: 57
 41224                           ;mbmc.c: 72:  if (!V.calib) {
 41225  019AC0  0102               	movlb	2	; () banked
 41226  019AC2  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 41227  019AC4  A4D8               	btfss	status,2,c
 41228  019AC6  D220               	goto	l14617
 41229                           
 41230                           ; BSR set to: 2
 41231                           ;mbmc.c: 73:   C.updates++;
 41232  019AC8  EE22  F23B         	lfsr	2,_C+316	;volatile
 41233  019ACC  2ADE               	incf	postinc2,f,c
 41234  019ACE  0E00               	movlw	0
 41235  019AD0  22DE               	addwfc	postinc2,f,c
 41236  019AD2  22DE               	addwfc	postinc2,f,c
 41237  019AD4  22DE               	addwfc	postinc2,f,c
 41238                           
 41239                           ; BSR set to: 2
 41240                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 41241  019AD6  EE22  F0FF         	lfsr	2,_C
 41242  019ADA  006F FF78  F943    	movff	postinc2,_C+68	;volatile
 41243  019AE0  006F FF78  F944    	movff	postinc2,_C+69	;volatile
 41244  019AE6  006F FF78  F945    	movff	postinc2,_C+70	;volatile
 41245  019AEC  006F FF74  F946    	movff	postdec2,_C+71	;volatile
 41246                           
 41247                           ; BSR set to: 2
 41248                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 41249  019AF2  0060  F223  FFE6   	movff	calc_model_data@bcror,postinc1
 41250  019AF8  0060  F227  FFE6   	movff	calc_model_data@bcror+1,postinc1
 41251  019AFE  0060  F22B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 41252  019B04  0060  F22F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 41253  019B0A  EE22  F143         	lfsr	2,_C+68	;volatile
 41254  019B0E  006F FF7B FFE6     	movff	postinc2,postinc1
 41255  019B14  006F FF7B FFE6     	movff	postinc2,postinc1
 41256  019B1A  006F FF7B FFE6     	movff	postinc2,postinc1
 41257  019B20  006F FF7B FFE6     	movff	postinc2,postinc1
 41258  019B26  EC85  F011         	call	___flsub	;wreg free
 41259  019B2A  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 41260  019B30  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 41261  019B36  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 41262  019B3C  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 41263                           
 41264                           ;mbmc.c: 76:   bcror = C.c_bat;
 41265  019B42  C943  F088         	movff	_C+68,calc_model_data@bcror	;volatile
 41266  019B46  C944  F089         	movff	_C+69,calc_model_data@bcror+1	;volatile
 41267  019B4A  C945  F08A         	movff	_C+70,calc_model_data@bcror+2	;volatile
 41268  019B4E  C946  F08B         	movff	_C+71,calc_model_data@bcror+3	;volatile
 41269                           
 41270                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 41271  019B52  EE22  F103         	lfsr	2,_C+4	;volatile
 41272  019B56  006F FF78  F947    	movff	postinc2,_C+72	;volatile
 41273  019B5C  006F FF78  F948    	movff	postinc2,_C+73	;volatile
 41274  019B62  006F FF78  F949    	movff	postinc2,_C+74	;volatile
 41275  019B68  006F FF74  F94A    	movff	postdec2,_C+75	;volatile
 41276                           
 41277                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 41278  019B6E  EE22  F10F         	lfsr	2,_C+16	;volatile
 41279  019B72  006F FF78  F953    	movff	postinc2,_C+84	;volatile
 41280  019B78  006F FF78  F954    	movff	postinc2,_C+85	;volatile
 41281  019B7E  006F FF78  F955    	movff	postinc2,_C+86	;volatile
 41282  019B84  006F FF74  F956    	movff	postdec2,_C+87	;volatile
 41283                           
 41284                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 41285  019B8A  EE22  F133         	lfsr	2,_C+52	;volatile
 41286  019B8E  006F FF78  F967    	movff	postinc2,_C+104	;volatile
 41287  019B94  006F FF78  F968    	movff	postinc2,_C+105	;volatile
 41288  019B9A  006F FF78  F969    	movff	postinc2,_C+106	;volatile
 41289  019BA0  006F FF74  F96A    	movff	postdec2,_C+107	;volatile
 41290                           
 41291                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 41292  019BA6  0060  F233  FFE6   	movff	calc_model_data@bvror,postinc1
 41293  019BAC  0060  F237  FFE6   	movff	calc_model_data@bvror+1,postinc1
 41294  019BB2  0060  F23B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 41295  019BB8  0060  F23F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 41296  019BBE  EE22  F153         	lfsr	2,_C+84	;volatile
 41297  019BC2  006F FF7B FFE6     	movff	postinc2,postinc1
 41298  019BC8  006F FF7B FFE6     	movff	postinc2,postinc1
 41299  019BCE  006F FF7B FFE6     	movff	postinc2,postinc1
 41300  019BD4  006F FF7B FFE6     	movff	postinc2,postinc1
 41301  019BDA  EC85  F011         	call	___flsub	;wreg free
 41302  019BDE  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 41303  019BE4  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 41304  019BEA  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 41305  019BF0  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 41306                           
 41307                           ;mbmc.c: 81:   bvror = C.v_bat;
 41308  019BF6  C953  F08C         	movff	_C+84,calc_model_data@bvror	;volatile
 41309  019BFA  C954  F08D         	movff	_C+85,calc_model_data@bvror+1	;volatile
 41310  019BFE  C955  F08E         	movff	_C+86,calc_model_data@bvror+2	;volatile
 41311  019C02  C956  F08F         	movff	_C+87,calc_model_data@bvror+3	;volatile
 41312                           
 41313                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 41314  019C06  EE22  F113         	lfsr	2,_C+20	;volatile
 41315  019C0A  006F FF78  F94F    	movff	postinc2,_C+80	;volatile
 41316  019C10  006F FF78  F950    	movff	postinc2,_C+81	;volatile
 41317  019C16  006F FF78  F951    	movff	postinc2,_C+82	;volatile
 41318  019C1C  006F FF74  F952    	movff	postdec2,_C+83	;volatile
 41319                           
 41320                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 41321  019C22  EE22  F107         	lfsr	2,_C+8	;volatile
 41322  019C26  006F FF78  F94B    	movff	postinc2,_C+76	;volatile
 41323  019C2C  006F FF78  F94C    	movff	postinc2,_C+77	;volatile
 41324  019C32  006F FF78  F94D    	movff	postinc2,_C+78	;volatile
 41325  019C38  006F FF74  F94E    	movff	postdec2,_C+79	;volatile
 41326                           
 41327                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 41328  019C3E  EE22  F12F         	lfsr	2,_C+48	;volatile
 41329  019C42  006F FF78  F963    	movff	postinc2,_C+100	;volatile
 41330  019C48  006F FF78  F964    	movff	postinc2,_C+101	;volatile
 41331  019C4E  006F FF78  F965    	movff	postinc2,_C+102	;volatile
 41332  019C54  006F FF74  F966    	movff	postdec2,_C+103	;volatile
 41333                           
 41334                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 41335  019C5A  0E01               	movlw	1
 41336  019C5C  6EE6               	movwf	postinc1,c
 41337  019C5E  0E10               	movlw	16
 41338  019C60  6EE6               	movwf	postinc1,c
 41339  019C62  EE22  F0FF         	lfsr	2,_C
 41340  019C66  006F FF7B FFE6     	movff	postinc2,postinc1
 41341  019C6C  006F FF7B FFE6     	movff	postinc2,postinc1
 41342  019C72  006F FF7B FFE6     	movff	postinc2,postinc1
 41343  019C78  006F FF7B FFE6     	movff	postinc2,postinc1
 41344  019C7E  EE22  F103         	lfsr	2,_C+4	;volatile
 41345  019C82  006F FF7B FFE6     	movff	postinc2,postinc1
 41346  019C88  006F FF7B FFE6     	movff	postinc2,postinc1
 41347  019C8E  006F FF7B FFE6     	movff	postinc2,postinc1
 41348  019C94  006F FF7B FFE6     	movff	postinc2,postinc1
 41349  019C9A  EC85  F011         	call	___flsub	;wreg free
 41350  019C9E  0060  F0AB  FFE6   	movff	btemp,postinc1
 41351  019CA4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41352  019CAA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41353  019CB0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41354  019CB6  ECF6  F0EE         	call	_lp_filter	;wreg free
 41355  019CBA  0060  F0A8  F93F   	movff	btemp,_C+64	;volatile
 41356  019CC0  0060  F0AC  F940   	movff	btemp+1,_C+65	;volatile
 41357  019CC6  0060  F0B0  F941   	movff	btemp+2,_C+66	;volatile
 41358  019CCC  0060  F0B4  F942   	movff	btemp+3,_C+67	;volatile
 41359                           
 41360                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 41361  019CD2  0E01               	movlw	1
 41362  019CD4  6EE6               	movwf	postinc1,c
 41363  019CD6  0E11               	movlw	17
 41364  019CD8  6EE6               	movwf	postinc1,c
 41365  019CDA  EE22  F153         	lfsr	2,_C+84	;volatile
 41366  019CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 41367  019CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 41368  019CEA  006F FF7B FFE6     	movff	postinc2,postinc1
 41369  019CF0  006F FF7B FFE6     	movff	postinc2,postinc1
 41370  019CF6  EE22  F13F         	lfsr	2,_C+64	;volatile
 41371  019CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 41372  019D00  006F FF7B FFE6     	movff	postinc2,postinc1
 41373  019D06  006F FF7B FFE6     	movff	postinc2,postinc1
 41374  019D0C  006F FF7B FFE6     	movff	postinc2,postinc1
 41375  019D12  EC27  F0B8         	call	___flmul	;wreg free
 41376  019D16  0060  F0AB  FFE6   	movff	btemp,postinc1
 41377  019D1C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41378  019D22  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41379  019D28  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41380  019D2E  ECF6  F0EE         	call	_lp_filter	;wreg free
 41381  019D32  0060  F0A8  F973   	movff	btemp,_C+116	;volatile
 41382  019D38  0060  F0AC  F974   	movff	btemp+1,_C+117	;volatile
 41383  019D3E  0060  F0B0  F975   	movff	btemp+2,_C+118	;volatile
 41384  019D44  0060  F0B4  F976   	movff	btemp+3,_C+119	;volatile
 41385                           
 41386                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 41387  019D4A  0E01               	movlw	1
 41388  019D4C  6EE6               	movwf	postinc1,c
 41389  019D4E  0E12               	movlw	18
 41390  019D50  6EE6               	movwf	postinc1,c
 41391  019D52  EE22  F14F         	lfsr	2,_C+80	;volatile
 41392  019D56  006F FF7B FFE6     	movff	postinc2,postinc1
 41393  019D5C  006F FF7B FFE6     	movff	postinc2,postinc1
 41394  019D62  006F FF7B FFE6     	movff	postinc2,postinc1
 41395  019D68  006F FF7B FFE6     	movff	postinc2,postinc1
 41396  019D6E  EE22  F147         	lfsr	2,_C+72	;volatile
 41397  019D72  006F FF7B FFE6     	movff	postinc2,postinc1
 41398  019D78  006F FF7B FFE6     	movff	postinc2,postinc1
 41399  019D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 41400  019D84  006F FF7B FFE6     	movff	postinc2,postinc1
 41401  019D8A  EC27  F0B8         	call	___flmul	;wreg free
 41402  019D8E  0060  F0AB  FFE6   	movff	btemp,postinc1
 41403  019D94  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41404  019D9A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41405  019DA0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41406  019DA6  ECF6  F0EE         	call	_lp_filter	;wreg free
 41407  019DAA  0060  F0A8  F97B   	movff	btemp,_C+124	;volatile
 41408  019DB0  0060  F0AC  F97C   	movff	btemp+1,_C+125	;volatile
 41409  019DB6  0060  F0B0  F97D   	movff	btemp+2,_C+126	;volatile
 41410  019DBC  0060  F0B4  F97E   	movff	btemp+3,_C+127	;volatile
 41411                           
 41412                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 41413  019DC2  0E01               	movlw	1
 41414  019DC4  6EE6               	movwf	postinc1,c
 41415  019DC6  0E13               	movlw	19
 41416  019DC8  6EE6               	movwf	postinc1,c
 41417  019DCA  0E00               	movlw	0
 41418  019DCC  6EE6               	movwf	postinc1,c
 41419  019DCE  0E00               	movlw	0
 41420  019DD0  6EE6               	movwf	postinc1,c
 41421  019DD2  0E60               	movlw	96
 41422  019DD4  6EE6               	movwf	postinc1,c
 41423  019DD6  0EC1               	movlw	193
 41424  019DD8  6EE6               	movwf	postinc1,c
 41425  019DDA  EE22  F163         	lfsr	2,_C+100	;volatile
 41426  019DDE  006F FF7B FFE6     	movff	postinc2,postinc1
 41427  019DE4  006F FF7B FFE6     	movff	postinc2,postinc1
 41428  019DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 41429  019DF0  006F FF7B FFE6     	movff	postinc2,postinc1
 41430  019DF6  EE22  F13F         	lfsr	2,_C+64	;volatile
 41431  019DFA  006F FF7B FFE6     	movff	postinc2,postinc1
 41432  019E00  006F FF7B FFE6     	movff	postinc2,postinc1
 41433  019E06  006F FF7B FFE6     	movff	postinc2,postinc1
 41434  019E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 41435  019E12  EC27  F0B8         	call	___flmul	;wreg free
 41436  019E16  0060  F0AB  FFE6   	movff	btemp,postinc1
 41437  019E1C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41438  019E22  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41439  019E28  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41440  019E2E  EC3C  F0BC         	call	___fladd	;wreg free
 41441  019E32  0060  F0AB  FFE6   	movff	btemp,postinc1
 41442  019E38  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41443  019E3E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41444  019E44  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41445  019E4A  ECF6  F0EE         	call	_lp_filter	;wreg free
 41446  019E4E  0060  F0A8  F977   	movff	btemp,_C+120	;volatile
 41447  019E54  0060  F0AC  F978   	movff	btemp+1,_C+121	;volatile
 41448  019E5A  0060  F0B0  F979   	movff	btemp+2,_C+122	;volatile
 41449  019E60  0060  F0B4  F97A   	movff	btemp+3,_C+123	;volatile
 41450                           
 41451                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 41452  019E66  0E01               	movlw	1
 41453  019E68  6EE6               	movwf	postinc1,c
 41454  019E6A  0E14               	movlw	20
 41455  019E6C  6EE6               	movwf	postinc1,c
 41456  019E6E  EE22  F153         	lfsr	2,_C+84	;volatile
 41457  019E72  006F FF7B FFE6     	movff	postinc2,postinc1
 41458  019E78  006F FF7B FFE6     	movff	postinc2,postinc1
 41459  019E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 41460  019E84  006F FF7B FFE6     	movff	postinc2,postinc1
 41461  019E8A  EE22  F143         	lfsr	2,_C+68	;volatile
 41462  019E8E  006F FF7B FFE6     	movff	postinc2,postinc1
 41463  019E94  006F FF7B FFE6     	movff	postinc2,postinc1
 41464  019E9A  006F FF7B FFE6     	movff	postinc2,postinc1
 41465  019EA0  006F FF7B FFE6     	movff	postinc2,postinc1
 41466  019EA6  EC27  F0B8         	call	___flmul	;wreg free
 41467  019EAA  0060  F0AB  FFE6   	movff	btemp,postinc1
 41468  019EB0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41469  019EB6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41470  019EBC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41471  019EC2  ECF6  F0EE         	call	_lp_filter	;wreg free
 41472  019EC6  0060  F0A8  F97F   	movff	btemp,_C+128	;volatile
 41473  019ECC  0060  F0AC  F980   	movff	btemp+1,_C+129	;volatile
 41474  019ED2  0060  F0B0  F981   	movff	btemp+2,_C+130	;volatile
 41475  019ED8  0060  F0B4  F982   	movff	btemp+3,_C+131	;volatile
 41476                           
 41477                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 41478  019EDE  EE22  F177         	lfsr	2,_C+120	;volatile
 41479  019EE2  0E03               	movlw	3
 41480  019EE4  AEDB               	btfss	plusw2,7,c
 41481  019EE6  D010               	goto	l14617
 41482                           
 41483                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 41484  019EE8  0E17               	movlw	23
 41485  019EEA  006F FFA0  F977    	movff	wreg,_C+120	;volatile
 41486  019EF0  0EB7               	movlw	183
 41487  019EF2  006F FFA0  F978    	movff	wreg,_C+121	;volatile
 41488  019EF8  0ED1               	movlw	209
 41489  019EFA  006F FFA0  F979    	movff	wreg,_C+122	;volatile
 41490  019F00  0E38               	movlw	56
 41491  019F02  006F FFA0  F97A    	movff	wreg,_C+123	;volatile
 41492  019F08                     l14617:
 41493                           
 41494                           ;mbmc.c: 96:  start_bsoc();
 41495  019F08  EC3C  F016         	call	_start_bsoc	;wreg free
 41496                           
 41497                           ; BSR set to: 57
 41498                           ;mbmc.c: 97:  C.update = 1;
 41499  019F0C  0E01               	movlw	1
 41500  019F0E  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 41501                           
 41502                           ; BSR set to: 57
 41503                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 41504  019F14  0012               	return		;funcret
 41505  019F16                     __end_of_calc_model_data:
 41506                           	opt callstack 0
 41507                           
 41508 ;; *************** function _stop_bsoc *****************
 41509 ;; Defined at:
 41510 ;;		line 130 in file "bsoc.c"
 41511 ;; Parameters:    Size  Location     Type
 41512 ;;		None
 41513 ;; Auto vars:     Size  Location     Type
 41514 ;;		None
 41515 ;; Return value:  Size  Location     Type
 41516 ;;                  1  [STACK] void 
 41517 ;; Registers used:
 41518 ;;		None
 41519 ;; Tracked objects:
 41520 ;;		On entry : 0/1
 41521 ;;		On exit  : 3F/39
 41522 ;;		Unchanged: 0/0
 41523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41528 ;;Total ram usage:        0 bytes
 41529 ;; Hardware stack levels used:    1
 41530 ;; Hardware stack levels required when called:   15
 41531 ;; This function calls:
 41532 ;;		Nothing
 41533 ;; This function is called by:
 41534 ;;		_calc_model_data
 41535 ;;		_load_hist_data
 41536 ;; This function uses a reentrant model
 41537 ;;
 41538                           
 41539                           	psect	text151
 41540  002F80                     __ptext151:
 41541                           	opt callstack 0
 41542  002F80                     _stop_bsoc:
 41543                           	opt callstack 14
 41544                           
 41545                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 41546                           
 41547                           ; BSR set to: 57
 41548                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41549                           ;incstack = 0
 41550  002F80  0139               	movlb	57	; () banked
 41551  002F82  9D96               	bcf	150,6,b	;volatile
 41552                           
 41553                           ; BSR set to: 57
 41554                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 41555  002F84  0012               	return		;funcret
 41556  002F86                     __end_of_stop_bsoc:
 41557                           	opt callstack 0
 41558                           
 41559 ;; *************** function _start_bsoc *****************
 41560 ;; Defined at:
 41561 ;;		line 121 in file "bsoc.c"
 41562 ;; Parameters:    Size  Location     Type
 41563 ;;		None
 41564 ;; Auto vars:     Size  Location     Type
 41565 ;;		None
 41566 ;; Return value:  Size  Location     Type
 41567 ;;                  1  [STACK] void 
 41568 ;; Registers used:
 41569 ;;		wreg, status,2, status,0, btemp+11
 41570 ;; Tracked objects:
 41571 ;;		On entry : 0/39
 41572 ;;		On exit  : 3F/39
 41573 ;;		Unchanged: 0/0
 41574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41579 ;;Total ram usage:        0 bytes
 41580 ;; Hardware stack levels used:    1
 41581 ;; Hardware stack levels required when called:   15
 41582 ;; This function calls:
 41583 ;;		Nothing
 41584 ;; This function is called by:
 41585 ;;		_calc_model_data
 41586 ;;		_load_hist_data
 41587 ;; This function uses a reentrant model
 41588 ;;
 41589                           
 41590                           	psect	text152
 41591  002C78                     __ptext152:
 41592                           	opt callstack 0
 41593  002C78                     _start_bsoc:
 41594                           	opt callstack 14
 41595                           
 41596                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 41597                           
 41598                           ; BSR set to: 57
 41599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41600                           ;incstack = 0
 41601  002C78  0139               	movlb	57	; () banked
 41602  002C7A  8D96               	bsf	150,6,b	;volatile
 41603                           
 41604                           ; BSR set to: 57
 41605  002C7C  A4BE               	btfss	190,2,c	;volatile
 41606  002C7E  D002               	goto	u12890
 41607  002C80  0E01               	movlw	1
 41608  002C82  D001               	goto	u12896
 41609  002C84                     u12890:
 41610  002C84  0E00               	movlw	0
 41611  002C86                     u12896:
 41612  002C86  0AFF               	xorlw	255
 41613  002C88  6E35               	movwf	(btemp+11)^0,c
 41614  002C8A  4635               	rlncf	(btemp+11)^0,f,c
 41615  002C8C  4635               	rlncf	(btemp+11)^0,f,c
 41616  002C8E  50BE               	movf	190,w,c	;volatile
 41617  002C90  1835               	xorwf	(btemp+11)^0,w,c
 41618  002C92  0BFB               	andlw	-5
 41619  002C94  1835               	xorwf	(btemp+11)^0,w,c
 41620  002C96  6EBE               	movwf	190,c	;volatile
 41621                           
 41622                           ; BSR set to: 57
 41623                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 41624  002C98  0012               	return		;funcret
 41625  002C9A                     __end_of_start_bsoc:
 41626                           	opt callstack 0
 41627                           
 41628 ;; *************** function _lp_filter *****************
 41629 ;; Defined at:
 41630 ;;		line 29 in file "mbmc.c"
 41631 ;; Parameters:    Size  Location     Type
 41632 ;;  new             4  [STACK] const float 
 41633 ;;  bn              1  [STACK] const unsigned char 
 41634 ;;  slow            1  [STACK] const char 
 41635 ;; Auto vars:     Size  Location     Type
 41636 ;;  lp_speed        4  [STACK] float 
 41637 ;; Return value:  Size  Location     Type
 41638 ;;                  4  [STACK] float 
 41639 ;; Registers used:
 41640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 41641 ;; Tracked objects:
 41642 ;;		On entry : 0/2
 41643 ;;		On exit  : 0/0
 41644 ;;		Unchanged: 0/0
 41645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41650 ;;Total ram usage:        0 bytes
 41651 ;; Hardware stack levels used:    1
 41652 ;; Hardware stack levels required when called:   17
 41653 ;; This function calls:
 41654 ;;		___fladd
 41655 ;;		___flmul
 41656 ;;		___flsub
 41657 ;; This function is called by:
 41658 ;;		_main
 41659 ;;		_convert_adc_data
 41660 ;;		_calc_model_data
 41661 ;; This function uses a reentrant model
 41662 ;;
 41663                           
 41664                           	psect	text153
 41665  01DDEC                     __ptext153:
 41666                           	opt callstack 0
 41667  01DDEC                     _lp_filter:
 41668                           	opt callstack 0
 41669                           
 41670                           ; BSR set to: 57
 41671                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41672  01DDEC  52E6               	movf	postinc1,f,c
 41673  01DDEE  52E6               	movf	postinc1,f,c
 41674  01DDF0  52E6               	movf	postinc1,f,c
 41675  01DDF2  52E6               	movf	postinc1,f,c
 41676                           
 41677                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 41678                           ;stkvar	_bn @ sp[(-4)+-5]
 41679                           
 41680                           ;incstack = 0
 41681  01DDF4  0EF7               	movlw	-9
 41682  01DDF6  006F FF8C  F02A    	movff	plusw1,btemp
 41683  01DDFC  0E14               	movlw	20
 41684  01DDFE  642A               	cpfsgt	btemp^0,c
 41685  01DE00  D011               	goto	l13609
 41686  01DE02                     u12670:
 41687                           
 41688                           ;mbmc.c: 35:   return new;
 41689                           ;stkvar	_new @ sp[(-4)+-4]
 41690  01DE02  0EF8               	movlw	-8
 41691  01DE04  006F FF8C  F02A    	movff	plusw1,btemp
 41692  01DE0A  0EF9               	movlw	-7
 41693  01DE0C  006F FF8C  F02B    	movff	plusw1,btemp+1
 41694  01DE12  0EFA               	movlw	-6
 41695  01DE14  006F FF8C  F02C    	movff	plusw1,btemp+2
 41696  01DE1A  0EFB               	movlw	-5
 41697  01DE1C  006F FF8C  F02D    	movff	plusw1,btemp+3
 41698  01DE22  D0BD               	goto	l2148
 41699  01DE24                     l13609:
 41700                           
 41701                           ;mbmc.c: 37:  if (slow == (-1)) {
 41702                           ;stkvar	_slow @ sp[(-4)+-6]
 41703  01DE24  0EF6               	movlw	-10
 41704  01DE26  28E3               	incf	plusw1,w,c
 41705  01DE28  A4D8               	btfss	status,2,c
 41706  01DE2A  D012               	goto	l13617
 41707                           
 41708                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 41709                           ;stkvar	_bn @ sp[(-4)+-5]
 41710  01DE2C  0EF7               	movlw	-9
 41711  01DE2E  50E3               	movf	plusw1,w,c
 41712  01DE30  0D04               	mullw	4
 41713  01DE32  0E00               	movlw	low lp_filter@smooth
 41714  01DE34  24F3               	addwf	243,w,c
 41715  01DE36  6ED9               	movwf	fsr2l,c
 41716  01DE38  0E03               	movlw	high lp_filter@smooth
 41717  01DE3A  20F4               	addwfc	prodh,w,c
 41718  01DE3C  6EDA               	movwf	fsr2h,c
 41719  01DE3E  0E00               	movlw	0
 41720  01DE40  6EDE               	movwf	postinc2,c
 41721  01DE42  0E00               	movlw	0
 41722  01DE44  6EDE               	movwf	postinc2,c
 41723  01DE46  0E00               	movlw	0
 41724  01DE48  6EDE               	movwf	postinc2,c
 41725  01DE4A  0E00               	movlw	0
 41726  01DE4C  6EDD               	movwf	postdec2,c
 41727  01DE4E  D7D9               	goto	u12670
 41728  01DE50                     l13617:
 41729                           
 41730                           ;mbmc.c: 42:  if (slow) {
 41731                           ;stkvar	_slow @ sp[(-4)+-6]
 41732  01DE50  0EF6               	movlw	-10
 41733  01DE52  50E3               	movf	plusw1,w,c
 41734  01DE54  B4D8               	btfsc	status,2,c
 41735  01DE56  D006               	goto	l13621
 41736                           
 41737                           ;mbmc.c: 43:   lp_speed = 0.033;
 41738  01DE58  0E02               	movlw	2
 41739  01DE5A  6E32               	movwf	(btemp+8)^0,c
 41740  01DE5C  0E2B               	movlw	43
 41741  01DE5E  6E33               	movwf	(btemp+9)^0,c
 41742  01DE60  0E07               	movlw	7
 41743  01DE62  D005               	goto	L47
 41744  01DE64                     l13621:
 41745                           
 41746                           ;mbmc.c: 45:   lp_speed = 0.066;
 41747  01DE64  0E02               	movlw	2
 41748  01DE66  6E32               	movwf	(btemp+8)^0,c
 41749  01DE68  0E2B               	movlw	43
 41750  01DE6A  6E33               	movwf	(btemp+9)^0,c
 41751  01DE6C  0E87               	movlw	135
 41752  01DE6E                     L47:
 41753  01DE6E  6E34               	movwf	(btemp+10)^0,c
 41754  01DE70  0E3D               	movlw	61
 41755  01DE72  6E35               	movwf	(btemp+11)^0,c
 41756                           
 41757                           ;stkvar	_lp_speed @ sp[(-4)+0]
 41758  01DE74  0EFC               	movlw	-4
 41759  01DE76  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41760  01DE7C  0EFD               	movlw	-3
 41761  01DE7E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41762  01DE84  0EFE               	movlw	-2
 41763  01DE86  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41764  01DE8C  0EFF               	movlw	-1
 41765  01DE8E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41766                           
 41767                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 41768                           ;stkvar	_bn @ sp[(-4)+-5]
 41769  01DE94  0EF7               	movlw	-9
 41770  01DE96  50E3               	movf	plusw1,w,c
 41771  01DE98  0D04               	mullw	4
 41772  01DE9A  0E00               	movlw	low lp_filter@smooth
 41773  01DE9C  24F3               	addwf	243,w,c
 41774  01DE9E  6ED9               	movwf	fsr2l,c
 41775  01DEA0  0E03               	movlw	high lp_filter@smooth
 41776  01DEA2  20F4               	addwfc	prodh,w,c
 41777  01DEA4  6EDA               	movwf	fsr2h,c
 41778  01DEA6  006F FF7B FFE6     	movff	postinc2,postinc1
 41779  01DEAC  006F FF7B FFE6     	movff	postinc2,postinc1
 41780  01DEB2  006F FF7B FFE6     	movff	postinc2,postinc1
 41781  01DEB8  006F FF7B FFE6     	movff	postinc2,postinc1
 41782                           
 41783                           ;stkvar	_lp_speed @ sp[(-8)+0]
 41784  01DEBE  0EF8               	movlw	-8
 41785  01DEC0  006F FF8F FFE6     	movff	plusw1,postinc1
 41786  01DEC6  006F FF8F FFE6     	movff	plusw1,postinc1
 41787  01DECC  006F FF8F FFE6     	movff	plusw1,postinc1
 41788  01DED2  006F FF8F FFE6     	movff	plusw1,postinc1
 41789                           
 41790                           ;stkvar	_bn @ sp[(-12)+-5]
 41791  01DED8  0EEF               	movlw	-17
 41792  01DEDA  50E3               	movf	plusw1,w,c
 41793  01DEDC  0D04               	mullw	4
 41794  01DEDE  0E00               	movlw	low lp_filter@smooth
 41795  01DEE0  24F3               	addwf	243,w,c
 41796  01DEE2  6ED9               	movwf	fsr2l,c
 41797  01DEE4  0E03               	movlw	high lp_filter@smooth
 41798  01DEE6  20F4               	addwfc	prodh,w,c
 41799  01DEE8  6EDA               	movwf	fsr2h,c
 41800  01DEEA  006F FF7B FFE6     	movff	postinc2,postinc1
 41801  01DEF0  006F FF7B FFE6     	movff	postinc2,postinc1
 41802  01DEF6  006F FF7B FFE6     	movff	postinc2,postinc1
 41803  01DEFC  006F FF7B FFE6     	movff	postinc2,postinc1
 41804                           
 41805                           ;stkvar	_new @ sp[(-16)+-4]
 41806  01DF02  0EEC               	movlw	-20
 41807  01DF04  006F FF8F FFE6     	movff	plusw1,postinc1
 41808  01DF0A  006F FF8F FFE6     	movff	plusw1,postinc1
 41809  01DF10  006F FF8F FFE6     	movff	plusw1,postinc1
 41810  01DF16  006F FF8F FFE6     	movff	plusw1,postinc1
 41811  01DF1C  EC85  F011         	call	___flsub	;wreg free
 41812  01DF20  0060  F0AB  FFE6   	movff	btemp,postinc1
 41813  01DF26  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41814  01DF2C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41815  01DF32  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41816  01DF38  EC27  F0B8         	call	___flmul	;wreg free
 41817  01DF3C  0060  F0AB  FFE6   	movff	btemp,postinc1
 41818  01DF42  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41819  01DF48  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41820  01DF4E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41821  01DF54  EC3C  F0BC         	call	___fladd	;wreg free
 41822                           
 41823                           ;stkvar	_bn @ sp[(-4)+-5]
 41824  01DF58  0EF7               	movlw	-9
 41825  01DF5A  50E3               	movf	plusw1,w,c
 41826  01DF5C  0D04               	mullw	4
 41827  01DF5E  0E00               	movlw	low lp_filter@smooth
 41828  01DF60  24F3               	addwf	243,w,c
 41829  01DF62  6ED9               	movwf	fsr2l,c
 41830  01DF64  0E03               	movlw	high lp_filter@smooth
 41831  01DF66  20F4               	addwfc	prodh,w,c
 41832  01DF68  6EDA               	movwf	fsr2h,c
 41833  01DF6A  0060  F0AB  FFDE   	movff	btemp,postinc2
 41834  01DF70  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 41835  01DF76  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 41836  01DF7C  0060  F0B7  FFDD   	movff	btemp+3,postdec2
 41837  01DF82  52DD               	movf	postdec2,f,c
 41838  01DF84  52DD               	movf	postdec2,f,c
 41839  01DF86  006F FF78  F02A    	movff	postinc2,btemp
 41840  01DF8C  006F FF78  F02B    	movff	postinc2,btemp+1
 41841  01DF92  006F FF78  F02C    	movff	postinc2,btemp+2
 41842  01DF98  006F FF78  F02D    	movff	postinc2,btemp+3
 41843  01DF9E                     l2148:
 41844                           
 41845                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 41846  01DF9E  0EF6               	movlw	246
 41847  01DFA0  26E1               	addwf	fsr1l,f,c
 41848  01DFA2  0EFF               	movlw	255
 41849  01DFA4  22E2               	addwfc	fsr1h,f,c
 41850  01DFA6  0012               	return		;funcret
 41851  01DFA8                     __end_of_lp_filter:
 41852                           	opt callstack 0
 41853                           
 41854 ;; *************** function ___flsub *****************
 41855 ;; Defined at:
 41856 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 41857 ;; Parameters:    Size  Location     Type
 41858 ;;  b               4  [STACK] float 
 41859 ;;  a               4  [STACK] float 
 41860 ;; Auto vars:     Size  Location     Type
 41861 ;;		None
 41862 ;; Return value:  Size  Location     Type
 41863 ;;                  4  [STACK] float 
 41864 ;; Registers used:
 41865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 41866 ;; Tracked objects:
 41867 ;;		On entry : 0/0
 41868 ;;		On exit  : 0/0
 41869 ;;		Unchanged: 0/0
 41870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41875 ;;Total ram usage:        0 bytes
 41876 ;; Hardware stack levels used:    1
 41877 ;; Hardware stack levels required when called:   16
 41878 ;; This function calls:
 41879 ;;		___fladd
 41880 ;; This function is called by:
 41881 ;;		_conv_raw_result
 41882 ;;		_lp_filter
 41883 ;;		_calc_model_data
 41884 ;;		_calc_ror_data
 41885 ;;		_esr_check
 41886 ;;		_efgtoa
 41887 ;; This function uses a reentrant model
 41888 ;;
 41889                           
 41890                           	psect	text154
 41891  00230A                     __ptext154:
 41892                           	opt callstack 0
 41893  00230A                     ___flsub:
 41894                           	opt callstack 0
 41895                           
 41896                           ;stkvar	_a @ sp[(0)+-8]
 41897                           
 41898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41899                           ;incstack = 0
 41900 ;; hardware stack exceeded
 41901  00230A  0EFB               	movlw	-5
 41902  00230C  7EE3               	btg	plusw1,7,c
 41903                           
 41904                           ;stkvar	_a @ sp[(0)+-8]
 41905  00230E  0EF8               	movlw	-8
 41906  002310  006F FF8F FFE6     	movff	plusw1,postinc1
 41907  002316  006F FF8F FFE6     	movff	plusw1,postinc1
 41908  00231C  006F FF8F FFE6     	movff	plusw1,postinc1
 41909  002322  006F FF8F FFE6     	movff	plusw1,postinc1
 41910                           
 41911                           ;stkvar	_b @ sp[(-4)+-4]
 41912  002328  0EF8               	movlw	-8
 41913  00232A  006F FF8F FFE6     	movff	plusw1,postinc1
 41914  002330  006F FF8F FFE6     	movff	plusw1,postinc1
 41915  002336  006F FF8F FFE6     	movff	plusw1,postinc1
 41916  00233C  006F FF8F FFE6     	movff	plusw1,postinc1
 41917  002342  EC3C  F0BC         	call	___fladd	;wreg free
 41918                           
 41919                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 41920  002346  0EF8               	movlw	248
 41921  002348  26E1               	addwf	fsr1l,f,c
 41922  00234A  0EFF               	movlw	255
 41923  00234C  22E2               	addwfc	fsr1h,f,c
 41924  00234E  0012               	return		;funcret
 41925  002350                     __end_of___flsub:
 41926                           	opt callstack 0
 41927                           
 41928 ;; *************** function ___fladd *****************
 41929 ;; Defined at:
 41930 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 41931 ;; Parameters:    Size  Location     Type
 41932 ;;  b               4  [STACK] float 
 41933 ;;  a               4  [STACK] float 
 41934 ;; Auto vars:     Size  Location     Type
 41935 ;;  grs             1  [STACK] unsigned char 
 41936 ;;  bexp            1  [STACK] unsigned char 
 41937 ;;  aexp            1  [STACK] unsigned char 
 41938 ;;  signs           1  [STACK] unsigned char 
 41939 ;; Return value:  Size  Location     Type
 41940 ;;                  4  [STACK] unsigned char 
 41941 ;; Registers used:
 41942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 41943 ;; Tracked objects:
 41944 ;;		On entry : 0/0
 41945 ;;		On exit  : 0/0
 41946 ;;		Unchanged: 0/0
 41947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41952 ;;Total ram usage:        0 bytes
 41953 ;; Hardware stack levels used:    1
 41954 ;; Hardware stack levels required when called:   15
 41955 ;; This function calls:
 41956 ;;		Nothing
 41957 ;; This function is called by:
 41958 ;;		_main
 41959 ;;		_lp_filter
 41960 ;;		_calc_model_data
 41961 ;;		_efgtoa
 41962 ;;		___asfladd
 41963 ;;		___flsub
 41964 ;; This function uses a reentrant model
 41965 ;;
 41966                           
 41967                           	psect	text155
 41968  017878                     __ptext155:
 41969                           	opt callstack 0
 41970  017878                     ___fladd:
 41971                           	opt callstack 0
 41972                           
 41973                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41974  017878  52E6               	movf	postinc1,f,c
 41975  01787A  52E6               	movf	postinc1,f,c
 41976  01787C  52E6               	movf	postinc1,f,c
 41977  01787E  52E6               	movf	postinc1,f,c
 41978                           
 41979                           ;stkvar	_b @ sp[(-4)+-4]
 41980                           
 41981                           ;incstack = 0
 41982 ;; hardware stack exceeded
 41983  017880  0EFB               	movlw	251
 41984  017882  24E1               	addwf	fsr1l,w,c
 41985  017884  6ED9               	movwf	fsr2l,c
 41986  017886  0EFF               	movlw	255
 41987  017888  20E2               	addwfc	fsr1h,w,c
 41988  01788A  6EDA               	movwf	fsr2h,c
 41989  01788C  50DF               	movf	indf2,w,c
 41990  01788E  6E35               	movwf	(btemp+11)^0,c
 41991  017890  0E80               	movlw	128
 41992  017892  1635               	andwf	(btemp+11)^0,f,c
 41993                           
 41994                           ;stkvar	_signs @ sp[(-4)+3]
 41995  017894  0EFF               	movlw	-1
 41996  017896  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41997                           
 41998                           ;stkvar	_b @ sp[(-4)+-4]
 41999  01789C  0EFB               	movlw	251
 42000  01789E  24E1               	addwf	fsr1l,w,c
 42001  0178A0  6ED9               	movwf	fsr2l,c
 42002  0178A2  0EFF               	movlw	255
 42003  0178A4  20E2               	addwfc	fsr1h,w,c
 42004  0178A6  6EDA               	movwf	fsr2h,c
 42005  0178A8  50DF               	movf	indf2,w,c
 42006  0178AA  6E35               	movwf	(btemp+11)^0,c
 42007  0178AC  90D8               	bcf	status,0,c
 42008  0178AE  3435               	rlcf	(btemp+11)^0,w,c
 42009  0178B0  6E34               	movwf	(btemp+10)^0,c
 42010                           
 42011                           ;stkvar	_bexp @ sp[(-4)+1]
 42012  0178B2  0EFD               	movlw	-3
 42013  0178B4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42014                           
 42015                           ;stkvar	_b @ sp[(-4)+-4]
 42016  0178BA  0EFA               	movlw	250
 42017  0178BC  24E1               	addwf	fsr1l,w,c
 42018  0178BE  6ED9               	movwf	fsr2l,c
 42019  0178C0  0EFF               	movlw	255
 42020  0178C2  20E2               	addwfc	fsr1h,w,c
 42021  0178C4  6EDA               	movwf	fsr2h,c
 42022  0178C6  AEDF               	btfss	indf2,7,c
 42023  0178C8  D002               	goto	l9875
 42024                           
 42025                           ;stkvar	_bexp @ sp[(-4)+1]
 42026  0178CA  0EFD               	movlw	-3
 42027  0178CC  80E3               	bsf	plusw1,0,c
 42028  0178CE                     l9875:
 42029                           
 42030                           ;stkvar	_bexp @ sp[(-4)+1]
 42031  0178CE  0EFD               	movlw	-3
 42032  0178D0  50E3               	movf	plusw1,w,c
 42033  0178D2  B4D8               	btfsc	status,2,c
 42034  0178D4  D027               	goto	l9885
 42035                           
 42036                           ;stkvar	_bexp @ sp[(-4)+1]
 42037  0178D6  0EFD               	movlw	-3
 42038  0178D8  28E3               	incf	plusw1,w,c
 42039  0178DA  A4D8               	btfss	status,2,c
 42040  0178DC  D018               	goto	l9881
 42041  0178DE  0E00               	movlw	0
 42042  0178E0  6E32               	movwf	(btemp+8)^0,c
 42043  0178E2  0E00               	movlw	0
 42044  0178E4  6E33               	movwf	(btemp+9)^0,c
 42045  0178E6  0E00               	movlw	0
 42046  0178E8  6E34               	movwf	(btemp+10)^0,c
 42047  0178EA  0E00               	movlw	0
 42048  0178EC  6E35               	movwf	(btemp+11)^0,c
 42049                           
 42050                           ;stkvar	_b @ sp[(-4)+-4]
 42051  0178EE  0EF8               	movlw	-8
 42052  0178F0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42053  0178F6  0EF9               	movlw	-7
 42054  0178F8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42055  0178FE  0EFA               	movlw	-6
 42056  017900  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42057  017906  0EFB               	movlw	-5
 42058  017908  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42059  01790E                     l9881:
 42060                           
 42061                           ;stkvar	_b @ sp[(-4)+-4]
 42062  01790E  0EFA               	movlw	-6
 42063  017910  8EE3               	bsf	plusw1,7,c
 42064                           
 42065                           ;stkvar	_b @ sp[(-4)+-4]
 42066  017912  0EFB               	movlw	251
 42067  017914  24E1               	addwf	fsr1l,w,c
 42068  017916  6ED9               	movwf	fsr2l,c
 42069  017918  0EFF               	movlw	255
 42070  01791A  20E2               	addwfc	fsr1h,w,c
 42071  01791C  6EDA               	movwf	fsr2h,c
 42072  01791E  0E00               	movlw	0
 42073  017920  6EDF               	movwf	indf2,c
 42074  017922  D018               	goto	l9887
 42075  017924                     l9885:
 42076  017924  0E00               	movlw	0
 42077  017926  6E32               	movwf	(btemp+8)^0,c
 42078  017928  0E00               	movlw	0
 42079  01792A  6E33               	movwf	(btemp+9)^0,c
 42080  01792C  0E00               	movlw	0
 42081  01792E  6E34               	movwf	(btemp+10)^0,c
 42082  017930  0E00               	movlw	0
 42083  017932  6E35               	movwf	(btemp+11)^0,c
 42084                           
 42085                           ;stkvar	_b @ sp[(-4)+-4]
 42086  017934  0EF8               	movlw	-8
 42087  017936  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42088  01793C  0EF9               	movlw	-7
 42089  01793E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42090  017944  0EFA               	movlw	-6
 42091  017946  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42092  01794C  0EFB               	movlw	-5
 42093  01794E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42094  017954                     l9887:
 42095                           
 42096                           ;stkvar	_a @ sp[(-4)+-8]
 42097  017954  0EF7               	movlw	247
 42098  017956  24E1               	addwf	fsr1l,w,c
 42099  017958  6ED9               	movwf	fsr2l,c
 42100  01795A  0EFF               	movlw	255
 42101  01795C  20E2               	addwfc	fsr1h,w,c
 42102  01795E  6EDA               	movwf	fsr2h,c
 42103  017960  50DF               	movf	indf2,w,c
 42104  017962  6E35               	movwf	(btemp+11)^0,c
 42105  017964  0E80               	movlw	128
 42106  017966  1635               	andwf	(btemp+11)^0,f,c
 42107                           
 42108                           ;stkvar	_aexp @ sp[(-4)+2]
 42109  017968  0EFE               	movlw	-2
 42110  01796A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42111                           
 42112                           ;stkvar	_signs @ sp[(-4)+3]
 42113                           ;stkvar	_aexp @ sp[(-4)+2]
 42114  017970  50E1               	movf	fsr1l,w,c
 42115  017972  0FFE               	addlw	-2
 42116  017974  6ED9               	movwf	fsr2l,c
 42117  017976  50E2               	movf	fsr1h,w,c
 42118  017978  6EDA               	movwf	fsr2h,c
 42119  01797A  0EFF               	movlw	255
 42120  01797C  22DA               	addwfc	fsr2h,f,c
 42121  01797E  0EFF               	movlw	-1
 42122  017980  50E3               	movf	plusw1,w,c
 42123  017982  18DE               	xorwf	postinc2,w,c
 42124  017984  B4D8               	btfsc	status,2,c
 42125  017986  D002               	goto	l9893
 42126                           
 42127                           ;stkvar	_signs @ sp[(-4)+3]
 42128  017988  0EFF               	movlw	-1
 42129  01798A  8CE3               	bsf	plusw1,6,c
 42130  01798C                     l9893:
 42131                           
 42132                           ;stkvar	_a @ sp[(-4)+-8]
 42133  01798C  0EF7               	movlw	247
 42134  01798E  24E1               	addwf	fsr1l,w,c
 42135  017990  6ED9               	movwf	fsr2l,c
 42136  017992  0EFF               	movlw	255
 42137  017994  20E2               	addwfc	fsr1h,w,c
 42138  017996  6EDA               	movwf	fsr2h,c
 42139  017998  50DF               	movf	indf2,w,c
 42140  01799A  6E35               	movwf	(btemp+11)^0,c
 42141  01799C  90D8               	bcf	status,0,c
 42142  01799E  3435               	rlcf	(btemp+11)^0,w,c
 42143  0179A0  6E34               	movwf	(btemp+10)^0,c
 42144                           
 42145                           ;stkvar	_aexp @ sp[(-4)+2]
 42146  0179A2  0EFE               	movlw	-2
 42147  0179A4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42148                           
 42149                           ;stkvar	_a @ sp[(-4)+-8]
 42150  0179AA  0EF6               	movlw	246
 42151  0179AC  24E1               	addwf	fsr1l,w,c
 42152  0179AE  6ED9               	movwf	fsr2l,c
 42153  0179B0  0EFF               	movlw	255
 42154  0179B2  20E2               	addwfc	fsr1h,w,c
 42155  0179B4  6EDA               	movwf	fsr2h,c
 42156  0179B6  AEDF               	btfss	indf2,7,c
 42157  0179B8  D002               	goto	l9899
 42158                           
 42159                           ;stkvar	_aexp @ sp[(-4)+2]
 42160  0179BA  0EFE               	movlw	-2
 42161  0179BC  80E3               	bsf	plusw1,0,c
 42162  0179BE                     l9899:
 42163                           
 42164                           ;stkvar	_aexp @ sp[(-4)+2]
 42165  0179BE  0EFE               	movlw	-2
 42166  0179C0  50E3               	movf	plusw1,w,c
 42167  0179C2  B4D8               	btfsc	status,2,c
 42168  0179C4  D027               	goto	l9909
 42169                           
 42170                           ;stkvar	_aexp @ sp[(-4)+2]
 42171  0179C6  0EFE               	movlw	-2
 42172  0179C8  28E3               	incf	plusw1,w,c
 42173  0179CA  A4D8               	btfss	status,2,c
 42174  0179CC  D018               	goto	l9905
 42175  0179CE  0E00               	movlw	0
 42176  0179D0  6E32               	movwf	(btemp+8)^0,c
 42177  0179D2  0E00               	movlw	0
 42178  0179D4  6E33               	movwf	(btemp+9)^0,c
 42179  0179D6  0E00               	movlw	0
 42180  0179D8  6E34               	movwf	(btemp+10)^0,c
 42181  0179DA  0E00               	movlw	0
 42182  0179DC  6E35               	movwf	(btemp+11)^0,c
 42183                           
 42184                           ;stkvar	_a @ sp[(-4)+-8]
 42185  0179DE  0EF4               	movlw	-12
 42186  0179E0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42187  0179E6  0EF5               	movlw	-11
 42188  0179E8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42189  0179EE  0EF6               	movlw	-10
 42190  0179F0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42191  0179F6  0EF7               	movlw	-9
 42192  0179F8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42193  0179FE                     l9905:
 42194                           
 42195                           ;stkvar	_a @ sp[(-4)+-8]
 42196  0179FE  0EF6               	movlw	-10
 42197  017A00  8EE3               	bsf	plusw1,7,c
 42198                           
 42199                           ;stkvar	_a @ sp[(-4)+-8]
 42200  017A02  0EF7               	movlw	247
 42201  017A04  24E1               	addwf	fsr1l,w,c
 42202  017A06  6ED9               	movwf	fsr2l,c
 42203  017A08  0EFF               	movlw	255
 42204  017A0A  20E2               	addwfc	fsr1h,w,c
 42205  017A0C  6EDA               	movwf	fsr2h,c
 42206  017A0E  0E00               	movlw	0
 42207  017A10  6EDF               	movwf	indf2,c
 42208  017A12  D018               	goto	l9911
 42209  017A14                     l9909:
 42210  017A14  0E00               	movlw	0
 42211  017A16  6E32               	movwf	(btemp+8)^0,c
 42212  017A18  0E00               	movlw	0
 42213  017A1A  6E33               	movwf	(btemp+9)^0,c
 42214  017A1C  0E00               	movlw	0
 42215  017A1E  6E34               	movwf	(btemp+10)^0,c
 42216  017A20  0E00               	movlw	0
 42217  017A22  6E35               	movwf	(btemp+11)^0,c
 42218                           
 42219                           ;stkvar	_a @ sp[(-4)+-8]
 42220  017A24  0EF4               	movlw	-12
 42221  017A26  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42222  017A2C  0EF5               	movlw	-11
 42223  017A2E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42224  017A34  0EF6               	movlw	-10
 42225  017A36  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42226  017A3C  0EF7               	movlw	-9
 42227  017A3E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42228  017A44                     l9911:
 42229                           
 42230                           ;stkvar	_bexp @ sp[(-4)+1]
 42231                           ;stkvar	_aexp @ sp[(-4)+2]
 42232  017A44  50E1               	movf	fsr1l,w,c
 42233  017A46  0FFE               	addlw	-2
 42234  017A48  6ED9               	movwf	fsr2l,c
 42235  017A4A  50E2               	movf	fsr1h,w,c
 42236  017A4C  6EDA               	movwf	fsr2h,c
 42237  017A4E  0EFF               	movlw	255
 42238  017A50  22DA               	addwfc	fsr2h,f,c
 42239  017A52  0EFD               	movlw	-3
 42240  017A54  50E3               	movf	plusw1,w,c
 42241  017A56  5CDE               	subwf	postinc2,w,c
 42242  017A58  B0D8               	btfsc	status,0,c
 42243  017A5A  D0A4               	goto	l9947
 42244                           
 42245                           ;stkvar	_signs @ sp[(-4)+3]
 42246  017A5C  0EFF               	movlw	-1
 42247  017A5E  ACE3               	btfss	plusw1,6,c
 42248  017A60  D002               	goto	l9917
 42249                           
 42250                           ;stkvar	_signs @ sp[(-4)+3]
 42251  017A62  0EFF               	movlw	-1
 42252  017A64  7EE3               	btg	plusw1,7,c
 42253  017A66                     l9917:
 42254                           
 42255                           ;stkvar	_bexp @ sp[(-4)+1]
 42256                           ;stkvar	_grs @ sp[(-4)+0]
 42257  017A66  0EFD               	movlw	-3
 42258  017A68  006F FF8C  F02A    	movff	plusw1,btemp
 42259  017A6E  0EFC               	movlw	-4
 42260  017A70  0060  F0AB  FFE3   	movff	btemp,plusw1
 42261                           
 42262                           ;stkvar	_aexp @ sp[(-4)+2]
 42263                           ;stkvar	_bexp @ sp[(-4)+1]
 42264  017A76  0EFE               	movlw	-2
 42265  017A78  006F FF8C  F02A    	movff	plusw1,btemp
 42266  017A7E  0EFD               	movlw	-3
 42267  017A80  0060  F0AB  FFE3   	movff	btemp,plusw1
 42268                           
 42269                           ;stkvar	_grs @ sp[(-4)+0]
 42270                           ;stkvar	_aexp @ sp[(-4)+2]
 42271  017A86  0EFC               	movlw	-4
 42272  017A88  006F FF8C  F02A    	movff	plusw1,btemp
 42273  017A8E  0EFE               	movlw	-2
 42274  017A90  0060  F0AB  FFE3   	movff	btemp,plusw1
 42275                           
 42276                           ;stkvar	_b @ sp[(-4)+-4]
 42277                           ;stkvar	_grs @ sp[(-4)+0]
 42278  017A96  0EF8               	movlw	-8
 42279  017A98  006F FF8C  F02A    	movff	plusw1,btemp
 42280  017A9E  0EFC               	movlw	-4
 42281  017AA0  0060  F0AB  FFE3   	movff	btemp,plusw1
 42282                           
 42283                           ;stkvar	_a @ sp[(-4)+-8]
 42284                           ;stkvar	_b @ sp[(-4)+-4]
 42285  017AA6  0EF4               	movlw	-12
 42286  017AA8  006F FF8C  F02A    	movff	plusw1,btemp
 42287  017AAE  0EF8               	movlw	-8
 42288  017AB0  0060  F0AB  FFE3   	movff	btemp,plusw1
 42289                           
 42290                           ;stkvar	_grs @ sp[(-4)+0]
 42291                           ;stkvar	_a @ sp[(-4)+-8]
 42292  017AB6  0EFC               	movlw	-4
 42293  017AB8  006F FF8C  F02A    	movff	plusw1,btemp
 42294  017ABE  0EF4               	movlw	-12
 42295  017AC0  0060  F0AB  FFE3   	movff	btemp,plusw1
 42296                           
 42297                           ;stkvar	_b @ sp[(-4)+-4]
 42298  017AC6  0EF9               	movlw	249
 42299  017AC8  24E1               	addwf	fsr1l,w,c
 42300  017ACA  6ED9               	movwf	fsr2l,c
 42301  017ACC  0EFF               	movlw	255
 42302  017ACE  20E2               	addwfc	fsr1h,w,c
 42303  017AD0  6EDA               	movwf	fsr2h,c
 42304  017AD2  50DF               	movf	indf2,w,c
 42305  017AD4  6E35               	movwf	(btemp+11)^0,c
 42306                           
 42307                           ;stkvar	_grs @ sp[(-4)+0]
 42308  017AD6  0EFC               	movlw	-4
 42309  017AD8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42310                           
 42311                           ;stkvar	_a @ sp[(-4)+-8]
 42312  017ADE  0EF5               	movlw	245
 42313  017AE0  24E1               	addwf	fsr1l,w,c
 42314  017AE2  6ED9               	movwf	fsr2l,c
 42315  017AE4  0EFF               	movlw	255
 42316  017AE6  20E2               	addwfc	fsr1h,w,c
 42317  017AE8  6EDA               	movwf	fsr2h,c
 42318                           
 42319                           ;stkvar	_b @ sp[(-4)+-4]
 42320  017AEA  0EF9               	movlw	249
 42321  017AEC  24E1               	addwf	fsr1l,w,c
 42322  017AEE  6EE9               	movwf	fsr0l,c
 42323  017AF0  0EFF               	movlw	255
 42324  017AF2  20E2               	addwfc	fsr1h,w,c
 42325  017AF4  6EEA               	movwf	fsr0h,c
 42326  017AF6  006F FF7F FFEF     	movff	indf2,indf0
 42327                           
 42328                           ;stkvar	_grs @ sp[(-4)+0]
 42329                           ;stkvar	_a @ sp[(-4)+-8]
 42330  017AFC  0EF5               	movlw	245
 42331  017AFE  24E1               	addwf	fsr1l,w,c
 42332  017B00  6ED9               	movwf	fsr2l,c
 42333  017B02  0EFF               	movlw	255
 42334  017B04  20E2               	addwfc	fsr1h,w,c
 42335  017B06  6EDA               	movwf	fsr2h,c
 42336  017B08  0EFC               	movlw	-4
 42337  017B0A  006F FF8F FFDF     	movff	plusw1,indf2
 42338                           
 42339                           ;stkvar	_b @ sp[(-4)+-4]
 42340  017B10  0EFA               	movlw	250
 42341  017B12  24E1               	addwf	fsr1l,w,c
 42342  017B14  6ED9               	movwf	fsr2l,c
 42343  017B16  0EFF               	movlw	255
 42344  017B18  20E2               	addwfc	fsr1h,w,c
 42345  017B1A  6EDA               	movwf	fsr2h,c
 42346  017B1C  50DF               	movf	indf2,w,c
 42347  017B1E  6E35               	movwf	(btemp+11)^0,c
 42348                           
 42349                           ;stkvar	_grs @ sp[(-4)+0]
 42350  017B20  0EFC               	movlw	-4
 42351  017B22  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42352                           
 42353                           ;stkvar	_a @ sp[(-4)+-8]
 42354  017B28  0EF6               	movlw	246
 42355  017B2A  24E1               	addwf	fsr1l,w,c
 42356  017B2C  6ED9               	movwf	fsr2l,c
 42357  017B2E  0EFF               	movlw	255
 42358  017B30  20E2               	addwfc	fsr1h,w,c
 42359  017B32  6EDA               	movwf	fsr2h,c
 42360                           
 42361                           ;stkvar	_b @ sp[(-4)+-4]
 42362  017B34  0EFA               	movlw	250
 42363  017B36  24E1               	addwf	fsr1l,w,c
 42364  017B38  6EE9               	movwf	fsr0l,c
 42365  017B3A  0EFF               	movlw	255
 42366  017B3C  20E2               	addwfc	fsr1h,w,c
 42367  017B3E  6EEA               	movwf	fsr0h,c
 42368  017B40  006F FF7F FFEF     	movff	indf2,indf0
 42369                           
 42370                           ;stkvar	_grs @ sp[(-4)+0]
 42371                           ;stkvar	_a @ sp[(-4)+-8]
 42372  017B46  0EF6               	movlw	246
 42373  017B48  24E1               	addwf	fsr1l,w,c
 42374  017B4A  6ED9               	movwf	fsr2l,c
 42375  017B4C  0EFF               	movlw	255
 42376  017B4E  20E2               	addwfc	fsr1h,w,c
 42377  017B50  6EDA               	movwf	fsr2h,c
 42378  017B52  0EFC               	movlw	-4
 42379  017B54  006F FF8F FFDF     	movff	plusw1,indf2
 42380                           
 42381                           ;stkvar	_b @ sp[(-4)+-4]
 42382  017B5A  0EFB               	movlw	251
 42383  017B5C  24E1               	addwf	fsr1l,w,c
 42384  017B5E  6ED9               	movwf	fsr2l,c
 42385  017B60  0EFF               	movlw	255
 42386  017B62  20E2               	addwfc	fsr1h,w,c
 42387  017B64  6EDA               	movwf	fsr2h,c
 42388  017B66  50DF               	movf	indf2,w,c
 42389  017B68  6E35               	movwf	(btemp+11)^0,c
 42390                           
 42391                           ;stkvar	_grs @ sp[(-4)+0]
 42392  017B6A  0EFC               	movlw	-4
 42393  017B6C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42394                           
 42395                           ;stkvar	_a @ sp[(-4)+-8]
 42396  017B72  0EF7               	movlw	247
 42397  017B74  24E1               	addwf	fsr1l,w,c
 42398  017B76  6ED9               	movwf	fsr2l,c
 42399  017B78  0EFF               	movlw	255
 42400  017B7A  20E2               	addwfc	fsr1h,w,c
 42401  017B7C  6EDA               	movwf	fsr2h,c
 42402                           
 42403                           ;stkvar	_b @ sp[(-4)+-4]
 42404  017B7E  0EFB               	movlw	251
 42405  017B80  24E1               	addwf	fsr1l,w,c
 42406  017B82  6EE9               	movwf	fsr0l,c
 42407  017B84  0EFF               	movlw	255
 42408  017B86  20E2               	addwfc	fsr1h,w,c
 42409  017B88  6EEA               	movwf	fsr0h,c
 42410  017B8A  006F FF7F FFEF     	movff	indf2,indf0
 42411                           
 42412                           ;stkvar	_grs @ sp[(-4)+0]
 42413                           ;stkvar	_a @ sp[(-4)+-8]
 42414  017B90  0EF7               	movlw	247
 42415  017B92  24E1               	addwf	fsr1l,w,c
 42416  017B94  6ED9               	movwf	fsr2l,c
 42417  017B96  0EFF               	movlw	255
 42418  017B98  20E2               	addwfc	fsr1h,w,c
 42419  017B9A  6EDA               	movwf	fsr2h,c
 42420  017B9C  0EFC               	movlw	-4
 42421  017B9E  006F FF8F FFDF     	movff	plusw1,indf2
 42422  017BA4                     l9947:
 42423                           
 42424                           ;stkvar	_grs @ sp[(-4)+0]
 42425  017BA4  0EFC               	movlw	-4
 42426  017BA6  6AE3               	clrf	plusw1,c
 42427                           
 42428                           ;stkvar	_aexp @ sp[(-4)+2]
 42429  017BA8  0EFE               	movlw	-2
 42430  017BAA  50E3               	movf	plusw1,w,c
 42431  017BAC  6E34               	movwf	(btemp+10)^0,c
 42432  017BAE  6A35               	clrf	(btemp+11)^0,c
 42433                           
 42434                           ;stkvar	_bexp @ sp[(-4)+1]
 42435  017BB0  0EFD               	movlw	-3
 42436  017BB2  50E3               	movf	plusw1,w,c
 42437  017BB4  5E34               	subwf	(btemp+10)^0,f,c
 42438  017BB6  0E00               	movlw	0
 42439  017BB8  5A35               	subwfb	(btemp+11)^0,f,c
 42440  017BBA  BE35               	btfsc	(btemp+11)^0,7,c
 42441  017BBC  D062               	goto	l9971
 42442  017BBE  5035               	movf	(btemp+11)^0,w,c
 42443  017BC0  E104               	bnz	u7370
 42444  017BC2  0E1A               	movlw	26
 42445  017BC4  5C34               	subwf	(btemp+10)^0,w,c
 42446  017BC6  A0D8               	btfss	status,0,c
 42447  017BC8  D05C               	goto	l9971
 42448  017BCA                     u7370:
 42449                           
 42450                           ;stkvar	_b @ sp[(-4)+-4]
 42451  017BCA  0EF8               	movlw	-8
 42452  017BCC  50E3               	movf	plusw1,w,c
 42453  017BCE  E10A               	bnz	u7381
 42454  017BD0  0EF9               	movlw	-7
 42455  017BD2  50E3               	movf	plusw1,w,c
 42456  017BD4  E107               	bnz	u7381
 42457  017BD6  0EFA               	movlw	-6
 42458  017BD8  50E3               	movf	plusw1,w,c
 42459  017BDA  E104               	bnz	u7381
 42460  017BDC  0EFB               	movlw	-5
 42461  017BDE  50E3               	movf	plusw1,w,c
 42462  017BE0  B4D8               	btfsc	status,2,c
 42463  017BE2  D003               	goto	u7380
 42464  017BE4                     u7381:
 42465  017BE4  6A35               	clrf	(btemp+11)^0,c
 42466  017BE6  2A35               	incf	(btemp+11)^0,f,c
 42467  017BE8  D001               	goto	u7398
 42468  017BEA                     u7380:
 42469  017BEA  6A35               	clrf	(btemp+11)^0,c
 42470  017BEC                     u7398:
 42471                           
 42472                           ;stkvar	_grs @ sp[(-4)+0]
 42473  017BEC  0EFC               	movlw	-4
 42474  017BEE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42475                           
 42476                           ;stkvar	_b @ sp[(-4)+-4]
 42477  017BF4  0EF8               	movlw	-8
 42478  017BF6  6AE3               	clrf	plusw1,c
 42479  017BF8  0EF9               	movlw	-7
 42480  017BFA  6AE3               	clrf	plusw1,c
 42481  017BFC  0EFA               	movlw	-6
 42482  017BFE  6AE3               	clrf	plusw1,c
 42483  017C00  0EFB               	movlw	-5
 42484  017C02  6AE3               	clrf	plusw1,c
 42485                           
 42486                           ;stkvar	_aexp @ sp[(-4)+2]
 42487                           ;stkvar	_bexp @ sp[(-4)+1]
 42488  017C04  0EFE               	movlw	-2
 42489  017C06  006F FF8C  F02A    	movff	plusw1,btemp
 42490  017C0C  0EFD               	movlw	-3
 42491  017C0E  0060  F0AB  FFE3   	movff	btemp,plusw1
 42492  017C14  D042               	goto	u7430
 42493  017C16                     l9957:
 42494                           
 42495                           ;stkvar	_grs @ sp[(-4)+0]
 42496  017C16  0EFC               	movlw	-4
 42497  017C18  A0E3               	btfss	plusw1,0,c
 42498  017C1A  D00D               	goto	l9961
 42499                           
 42500                           ;stkvar	_grs @ sp[(-4)+0]
 42501  017C1C  0EFC               	movlw	-4
 42502  017C1E  006F FF8C  F035    	movff	plusw1,btemp+11
 42503  017C24  90D8               	bcf	status,0,c
 42504  017C26  3235               	rrcf	(btemp+11)^0,f,c
 42505  017C28  0E01               	movlw	1
 42506  017C2A  1235               	iorwf	(btemp+11)^0,f,c
 42507                           
 42508                           ;stkvar	_grs @ sp[(-4)+0]
 42509  017C2C  0EFC               	movlw	-4
 42510  017C2E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42511  017C34  D009               	goto	l9963
 42512  017C36                     l9961:
 42513                           
 42514                           ;stkvar	_grs @ sp[(-4)+0]
 42515  017C36  50E1               	movf	fsr1l,w,c
 42516  017C38  0FFC               	addlw	-4
 42517  017C3A  6ED9               	movwf	fsr2l,c
 42518  017C3C  50E2               	movf	fsr1h,w,c
 42519  017C3E  6EDA               	movwf	fsr2h,c
 42520  017C40  0EFF               	movlw	255
 42521  017C42  22DA               	addwfc	fsr2h,f,c
 42522  017C44  90D8               	bcf	status,0,c
 42523  017C46  32DF               	rrcf	indf2,f,c
 42524  017C48                     l9963:
 42525                           
 42526                           ;stkvar	_b @ sp[(-4)+-4]
 42527  017C48  0EF8               	movlw	-8
 42528  017C4A  A0E3               	btfss	plusw1,0,c
 42529  017C4C  D002               	goto	l9967
 42530                           
 42531                           ;stkvar	_grs @ sp[(-4)+0]
 42532  017C4E  0EFC               	movlw	-4
 42533  017C50  8EE3               	bsf	plusw1,7,c
 42534  017C52                     l9967:
 42535  017C52  0E01               	movlw	1
 42536  017C54  6E35               	movwf	(btemp+11)^0,c
 42537                           
 42538                           ;stkvar	_b @ sp[(-4)+-4]
 42539  017C56  50E1               	movf	fsr1l,w,c
 42540  017C58  0FF8               	addlw	-8
 42541  017C5A  6ED9               	movwf	fsr2l,c
 42542  017C5C  50E2               	movf	fsr1h,w,c
 42543  017C5E  6EDA               	movwf	fsr2h,c
 42544  017C60  0EFF               	movlw	255
 42545  017C62  22DA               	addwfc	fsr2h,f,c
 42546  017C64  2835               	incf	(btemp+11)^0,w,c
 42547  017C66  52DE               	movf	postinc2,f,c
 42548  017C68  D008               	goto	u7420
 42549  017C6A                     u7425:
 42550  017C6A  52DE               	movf	postinc2,f,c
 42551  017C6C  90D8               	bcf	status,0,c
 42552  017C6E  BEDC               	btfsc	preinc2,7,c
 42553  017C70  80D8               	bsf	status,0,c
 42554  017C72  32DD               	rrcf	postdec2,f,c
 42555  017C74  32DD               	rrcf	postdec2,f,c
 42556  017C76  32DD               	rrcf	postdec2,f,c
 42557  017C78  32DE               	rrcf	postinc2,f,c
 42558  017C7A                     u7420:
 42559  017C7A  2EE8               	decfsz	wreg,f,c
 42560  017C7C  D7F6               	goto	u7425
 42561                           
 42562                           ;stkvar	_bexp @ sp[(-4)+1]
 42563  017C7E  0EFD               	movlw	-3
 42564  017C80  2AE3               	incf	plusw1,f,c
 42565  017C82                     l9971:
 42566                           
 42567                           ;stkvar	_aexp @ sp[(-4)+2]
 42568                           ;stkvar	_bexp @ sp[(-4)+1]
 42569  017C82  50E1               	movf	fsr1l,w,c
 42570  017C84  0FFD               	addlw	-3
 42571  017C86  6ED9               	movwf	fsr2l,c
 42572  017C88  50E2               	movf	fsr1h,w,c
 42573  017C8A  6EDA               	movwf	fsr2h,c
 42574  017C8C  0EFF               	movlw	255
 42575  017C8E  22DA               	addwfc	fsr2h,f,c
 42576  017C90  0EFE               	movlw	-2
 42577  017C92  50E3               	movf	plusw1,w,c
 42578  017C94  5CDE               	subwf	postinc2,w,c
 42579  017C96  A0D8               	btfss	status,0,c
 42580  017C98  D7BE               	goto	l9957
 42581  017C9A                     u7430:
 42582                           
 42583                           ;stkvar	_signs @ sp[(-4)+3]
 42584  017C9A  0EFF               	movlw	-1
 42585  017C9C  BCE3               	btfsc	plusw1,6,c
 42586  017C9E  D066               	goto	l9999
 42587                           
 42588                           ;stkvar	_bexp @ sp[(-4)+1]
 42589  017CA0  0EFD               	movlw	-3
 42590  017CA2  50E3               	movf	plusw1,w,c
 42591  017CA4  B4D8               	btfsc	status,2,c
 42592  017CA6  D0F2               	goto	u7530
 42593                           
 42594                           ;stkvar	_a @ sp[(-4)+-8]
 42595                           ;stkvar	_b @ sp[(-4)+-4]
 42596  017CA8  0EF8               	movlw	-8
 42597  017CAA  50E3               	movf	plusw1,w,c
 42598  017CAC  6E2A               	movwf	btemp^0,c
 42599  017CAE  0EF4               	movlw	-12
 42600  017CB0  50E3               	movf	plusw1,w,c
 42601  017CB2  262A               	addwf	btemp^0,f,c
 42602  017CB4  0EF8               	movlw	-8
 42603  017CB6  0060  F0AB  FFE3   	movff	btemp,plusw1
 42604  017CBC  0EF9               	movlw	-7
 42605  017CBE  50E3               	movf	plusw1,w,c
 42606  017CC0  6E2A               	movwf	btemp^0,c
 42607  017CC2  0EF5               	movlw	-11
 42608  017CC4  50E3               	movf	plusw1,w,c
 42609  017CC6  222A               	addwfc	btemp^0,f,c
 42610  017CC8  0EF9               	movlw	-7
 42611  017CCA  0060  F0AB  FFE3   	movff	btemp,plusw1
 42612  017CD0  0EFA               	movlw	-6
 42613  017CD2  50E3               	movf	plusw1,w,c
 42614  017CD4  6E2A               	movwf	btemp^0,c
 42615  017CD6  0EF6               	movlw	-10
 42616  017CD8  50E3               	movf	plusw1,w,c
 42617  017CDA  222A               	addwfc	btemp^0,f,c
 42618  017CDC  0EFA               	movlw	-6
 42619  017CDE  0060  F0AB  FFE3   	movff	btemp,plusw1
 42620  017CE4  0EFB               	movlw	-5
 42621  017CE6  50E3               	movf	plusw1,w,c
 42622  017CE8  6E2A               	movwf	btemp^0,c
 42623  017CEA  0EF7               	movlw	-9
 42624  017CEC  50E3               	movf	plusw1,w,c
 42625  017CEE  222A               	addwfc	btemp^0,f,c
 42626  017CF0  0EFB               	movlw	-5
 42627  017CF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 42628                           
 42629                           ;stkvar	_b @ sp[(-4)+-4]
 42630  017CF8  0EFB               	movlw	-5
 42631  017CFA  A0E3               	btfss	plusw1,0,c
 42632  017CFC  D101               	goto	u7570
 42633                           
 42634                           ;stkvar	_grs @ sp[(-4)+0]
 42635  017CFE  0EFC               	movlw	-4
 42636  017D00  A0E3               	btfss	plusw1,0,c
 42637  017D02  D00D               	goto	l9989
 42638                           
 42639                           ;stkvar	_grs @ sp[(-4)+0]
 42640  017D04  0EFC               	movlw	-4
 42641  017D06  006F FF8C  F035    	movff	plusw1,btemp+11
 42642  017D0C  90D8               	bcf	status,0,c
 42643  017D0E  3235               	rrcf	(btemp+11)^0,f,c
 42644  017D10  0E01               	movlw	1
 42645  017D12  1235               	iorwf	(btemp+11)^0,f,c
 42646                           
 42647                           ;stkvar	_grs @ sp[(-4)+0]
 42648  017D14  0EFC               	movlw	-4
 42649  017D16  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42650  017D1C  D009               	goto	l9991
 42651  017D1E                     l9989:
 42652                           
 42653                           ;stkvar	_grs @ sp[(-4)+0]
 42654  017D1E  50E1               	movf	fsr1l,w,c
 42655  017D20  0FFC               	addlw	-4
 42656  017D22  6ED9               	movwf	fsr2l,c
 42657  017D24  50E2               	movf	fsr1h,w,c
 42658  017D26  6EDA               	movwf	fsr2h,c
 42659  017D28  0EFF               	movlw	255
 42660  017D2A  22DA               	addwfc	fsr2h,f,c
 42661  017D2C  90D8               	bcf	status,0,c
 42662  017D2E  32DF               	rrcf	indf2,f,c
 42663  017D30                     l9991:
 42664                           
 42665                           ;stkvar	_b @ sp[(-4)+-4]
 42666  017D30  0EF8               	movlw	-8
 42667  017D32  A0E3               	btfss	plusw1,0,c
 42668  017D34  D002               	goto	l9995
 42669                           
 42670                           ;stkvar	_grs @ sp[(-4)+0]
 42671  017D36  0EFC               	movlw	-4
 42672  017D38  8EE3               	bsf	plusw1,7,c
 42673  017D3A                     l9995:
 42674  017D3A  0E01               	movlw	1
 42675  017D3C  6E35               	movwf	(btemp+11)^0,c
 42676                           
 42677                           ;stkvar	_b @ sp[(-4)+-4]
 42678  017D3E  50E1               	movf	fsr1l,w,c
 42679  017D40  0FF8               	addlw	-8
 42680  017D42  6ED9               	movwf	fsr2l,c
 42681  017D44  50E2               	movf	fsr1h,w,c
 42682  017D46  6EDA               	movwf	fsr2h,c
 42683  017D48  0EFF               	movlw	255
 42684  017D4A  22DA               	addwfc	fsr2h,f,c
 42685  017D4C  2835               	incf	(btemp+11)^0,w,c
 42686  017D4E  52DE               	movf	postinc2,f,c
 42687  017D50  D008               	goto	u7490
 42688  017D52                     u7495:
 42689  017D52  52DE               	movf	postinc2,f,c
 42690  017D54  90D8               	bcf	status,0,c
 42691  017D56  BEDC               	btfsc	preinc2,7,c
 42692  017D58  80D8               	bsf	status,0,c
 42693  017D5A  32DD               	rrcf	postdec2,f,c
 42694  017D5C  32DD               	rrcf	postdec2,f,c
 42695  017D5E  32DD               	rrcf	postdec2,f,c
 42696  017D60  32DE               	rrcf	postinc2,f,c
 42697  017D62                     u7490:
 42698  017D62  2EE8               	decfsz	wreg,f,c
 42699  017D64  D7F6               	goto	u7495
 42700                           
 42701                           ;stkvar	_bexp @ sp[(-4)+1]
 42702  017D66  0EFD               	movlw	-3
 42703  017D68  2AE3               	incf	plusw1,f,c
 42704  017D6A  D0CA               	goto	u7570
 42705  017D6C                     l9999:
 42706                           
 42707                           ;stkvar	_a @ sp[(-4)+-8]
 42708                           ;stkvar	_b @ sp[(-4)+-4]
 42709  017D6C  50E1               	movf	fsr1l,w,c
 42710  017D6E  0FF8               	addlw	-8
 42711  017D70  6ED9               	movwf	fsr2l,c
 42712  017D72  50E2               	movf	fsr1h,w,c
 42713  017D74  6EDA               	movwf	fsr2h,c
 42714  017D76  0EFF               	movlw	255
 42715  017D78  22DA               	addwfc	fsr2h,f,c
 42716  017D7A  0EF4               	movlw	-12
 42717  017D7C  50E3               	movf	plusw1,w,c
 42718  017D7E  5CDE               	subwf	postinc2,w,c
 42719  017D80  0EF5               	movlw	-11
 42720  017D82  50E3               	movf	plusw1,w,c
 42721  017D84  58DE               	subwfb	postinc2,w,c
 42722  017D86  0EF6               	movlw	-10
 42723  017D88  50E3               	movf	plusw1,w,c
 42724  017D8A  58DE               	subwfb	postinc2,w,c
 42725  017D8C  50DE               	movf	postinc2,w,c
 42726  017D8E  0A80               	xorlw	128
 42727  017D90  6E2A               	movwf	btemp^0,c
 42728  017D92  0EF7               	movlw	-9
 42729  017D94  50E3               	movf	plusw1,w,c
 42730  017D96  0A80               	xorlw	128
 42731  017D98  582A               	subwfb	btemp^0,w,c
 42732  017D9A  B0D8               	btfsc	status,0,c
 42733  017D9C  D053               	goto	l10011
 42734                           
 42735                           ;stkvar	_b @ sp[(-4)+-4]
 42736                           ;stkvar	_a @ sp[(-4)+-8]
 42737  017D9E  0EF4               	movlw	-12
 42738  017DA0  006F FF8C  F032    	movff	plusw1,btemp+8
 42739  017DA6  0EF5               	movlw	-11
 42740  017DA8  006F FF8C  F033    	movff	plusw1,btemp+9
 42741  017DAE  0EF6               	movlw	-10
 42742  017DB0  006F FF8C  F034    	movff	plusw1,btemp+10
 42743  017DB6  0EF7               	movlw	-9
 42744  017DB8  006F FF8C  F035    	movff	plusw1,btemp+11
 42745  017DBE  0EF8               	movlw	-8
 42746  017DC0  50E3               	movf	plusw1,w,c
 42747  017DC2  5E32               	subwf	(btemp+8)^0,f,c
 42748  017DC4  0EF9               	movlw	-7
 42749  017DC6  50E3               	movf	plusw1,w,c
 42750  017DC8  5A33               	subwfb	(btemp+9)^0,f,c
 42751  017DCA  0EFA               	movlw	-6
 42752  017DCC  50E3               	movf	plusw1,w,c
 42753  017DCE  5A34               	subwfb	(btemp+10)^0,f,c
 42754  017DD0  0EFB               	movlw	-5
 42755  017DD2  50E3               	movf	plusw1,w,c
 42756  017DD4  5A35               	subwfb	(btemp+11)^0,f,c
 42757  017DD6  0EFF               	movlw	255
 42758  017DD8  2432               	addwf	(btemp+8)^0,w,c
 42759  017DDA  6E2E               	movwf	(btemp+4)^0,c
 42760  017DDC  0EFF               	movlw	255
 42761  017DDE  2033               	addwfc	(btemp+9)^0,w,c
 42762  017DE0  6E2F               	movwf	(btemp+5)^0,c
 42763  017DE2  0EFF               	movlw	255
 42764  017DE4  2034               	addwfc	(btemp+10)^0,w,c
 42765  017DE6  6E30               	movwf	(btemp+6)^0,c
 42766  017DE8  0EFF               	movlw	255
 42767  017DEA  2035               	addwfc	(btemp+11)^0,w,c
 42768  017DEC  6E31               	movwf	(btemp+7)^0,c
 42769                           
 42770                           ;stkvar	_b @ sp[(-4)+-4]
 42771  017DEE  0EF8               	movlw	-8
 42772  017DF0  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42773  017DF6  0EF9               	movlw	-7
 42774  017DF8  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42775  017DFE  0EFA               	movlw	-6
 42776  017E00  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42777  017E06  0EFB               	movlw	-5
 42778  017E08  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42779                           
 42780                           ;stkvar	_signs @ sp[(-4)+3]
 42781  017E0E  0EFF               	movlw	-1
 42782  017E10  7EE3               	btg	plusw1,7,c
 42783                           
 42784                           ;stkvar	_grs @ sp[(-4)+0]
 42785  017E12  0EFC               	movlw	-4
 42786  017E14  50E3               	movf	plusw1,w,c
 42787  017E16  0800               	sublw	0
 42788  017E18  6E35               	movwf	(btemp+11)^0,c
 42789                           
 42790                           ;stkvar	_grs @ sp[(-4)+0]
 42791  017E1A  0EFC               	movlw	-4
 42792  017E1C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42793                           
 42794                           ;stkvar	_grs @ sp[(-4)+0]
 42795  017E22  0EFC               	movlw	-4
 42796  017E24  50E3               	movf	plusw1,w,c
 42797  017E26  A4D8               	btfss	status,2,c
 42798  017E28  D020               	goto	l10013
 42799                           
 42800                           ;stkvar	_b @ sp[(-4)+-4]
 42801  017E2A  50E1               	movf	fsr1l,w,c
 42802  017E2C  0FF8               	addlw	-8
 42803  017E2E  6ED9               	movwf	fsr2l,c
 42804  017E30  50E2               	movf	fsr1h,w,c
 42805  017E32  6EDA               	movwf	fsr2h,c
 42806  017E34  0EFF               	movlw	255
 42807  017E36  22DA               	addwfc	fsr2h,f,c
 42808  017E38  2ADE               	incf	postinc2,f,c
 42809  017E3A  0E00               	movlw	0
 42810  017E3C  22DE               	addwfc	postinc2,f,c
 42811  017E3E  22DE               	addwfc	postinc2,f,c
 42812  017E40  22DE               	addwfc	postinc2,f,c
 42813  017E42  D013               	goto	l10013
 42814  017E44                     l10011:
 42815                           
 42816                           ;stkvar	_a @ sp[(-4)+-8]
 42817                           ;stkvar	_b @ sp[(-4)+-4]
 42818  017E44  50E1               	movf	fsr1l,w,c
 42819  017E46  0FF8               	addlw	-8
 42820  017E48  6ED9               	movwf	fsr2l,c
 42821  017E4A  50E2               	movf	fsr1h,w,c
 42822  017E4C  6EDA               	movwf	fsr2h,c
 42823  017E4E  0EFF               	movlw	255
 42824  017E50  22DA               	addwfc	fsr2h,f,c
 42825  017E52  0EF4               	movlw	-12
 42826  017E54  50E3               	movf	plusw1,w,c
 42827  017E56  5EDE               	subwf	postinc2,f,c
 42828  017E58  0EF5               	movlw	-11
 42829  017E5A  50E3               	movf	plusw1,w,c
 42830  017E5C  5ADE               	subwfb	postinc2,f,c
 42831  017E5E  0EF6               	movlw	-10
 42832  017E60  50E3               	movf	plusw1,w,c
 42833  017E62  5ADE               	subwfb	postinc2,f,c
 42834  017E64  0EF7               	movlw	-9
 42835  017E66  50E3               	movf	plusw1,w,c
 42836  017E68  5ADE               	subwfb	postinc2,f,c
 42837  017E6A                     l10013:
 42838                           
 42839                           ;stkvar	_b @ sp[(-4)+-4]
 42840  017E6A  0EF8               	movlw	-8
 42841  017E6C  50E3               	movf	plusw1,w,c
 42842  017E6E  E145               	bnz	l10035
 42843  017E70  0EF9               	movlw	-7
 42844  017E72  50E3               	movf	plusw1,w,c
 42845  017E74  E142               	bnz	l10035
 42846  017E76  0EFA               	movlw	-6
 42847  017E78  50E3               	movf	plusw1,w,c
 42848  017E7A  E13F               	bnz	l10035
 42849  017E7C  0EFB               	movlw	-5
 42850  017E7E  50E3               	movf	plusw1,w,c
 42851  017E80  A4D8               	btfss	status,2,c
 42852  017E82  D03B               	goto	l10035
 42853                           
 42854                           ;stkvar	_grs @ sp[(-4)+0]
 42855  017E84  0EFC               	movlw	-4
 42856  017E86  50E3               	movf	plusw1,w,c
 42857  017E88  A4D8               	btfss	status,2,c
 42858  017E8A  D037               	goto	l10035
 42859  017E8C                     u7530:
 42860  017E8C  0E00               	movlw	0
 42861  017E8E  6E2A               	movwf	btemp^0,c
 42862  017E90  0E00               	movlw	0
 42863  017E92  6E2B               	movwf	(btemp+1)^0,c
 42864  017E94  0E00               	movlw	0
 42865  017E96  6E2C               	movwf	(btemp+2)^0,c
 42866  017E98  0E00               	movlw	0
 42867  017E9A  6E2D               	movwf	(btemp+3)^0,c
 42868  017E9C  D0C6               	goto	l3270
 42869  017E9E                     l10021:
 42870                           
 42871                           ;stkvar	_b @ sp[(-4)+-4]
 42872  017E9E  90D8               	bcf	status,0,c
 42873  017EA0  0EF8               	movlw	-8
 42874  017EA2  36E3               	rlcf	plusw1,f,c
 42875  017EA4  0EF9               	movlw	-7
 42876  017EA6  36E3               	rlcf	plusw1,f,c
 42877  017EA8  0EFA               	movlw	-6
 42878  017EAA  36E3               	rlcf	plusw1,f,c
 42879  017EAC  0EFB               	movlw	-5
 42880  017EAE  36E3               	rlcf	plusw1,f,c
 42881                           
 42882                           ;stkvar	_grs @ sp[(-4)+0]
 42883  017EB0  0EFC               	movlw	-4
 42884  017EB2  AEE3               	btfss	plusw1,7,c
 42885  017EB4  D002               	goto	l3282
 42886                           
 42887                           ;stkvar	_b @ sp[(-4)+-4]
 42888  017EB6  0EF8               	movlw	-8
 42889  017EB8  80E3               	bsf	plusw1,0,c
 42890  017EBA                     l3282:
 42891                           
 42892                           ;stkvar	_grs @ sp[(-4)+0]
 42893  017EBA  0EFC               	movlw	-4
 42894  017EBC  A0E3               	btfss	plusw1,0,c
 42895  017EBE  D00E               	goto	l10029
 42896                           
 42897                           ;stkvar	_grs @ sp[(-4)+0]
 42898  017EC0  0EFC               	movlw	-4
 42899  017EC2  006F FF8C  F035    	movff	plusw1,btemp+11
 42900  017EC8  90D8               	bcf	status,0,c
 42901  017ECA  3435               	rlcf	(btemp+11)^0,w,c
 42902  017ECC  6E34               	movwf	(btemp+10)^0,c
 42903  017ECE  0E01               	movlw	1
 42904  017ED0  1234               	iorwf	(btemp+10)^0,f,c
 42905                           
 42906                           ;stkvar	_grs @ sp[(-4)+0]
 42907  017ED2  0EFC               	movlw	-4
 42908  017ED4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42909  017EDA  D009               	goto	l10031
 42910  017EDC                     l10029:
 42911                           
 42912                           ;stkvar	_grs @ sp[(-4)+0]
 42913  017EDC  50E1               	movf	fsr1l,w,c
 42914  017EDE  0FFC               	addlw	-4
 42915  017EE0  6ED9               	movwf	fsr2l,c
 42916  017EE2  50E2               	movf	fsr1h,w,c
 42917  017EE4  6EDA               	movwf	fsr2h,c
 42918  017EE6  0EFF               	movlw	255
 42919  017EE8  22DA               	addwfc	fsr2h,f,c
 42920  017EEA  90D8               	bcf	status,0,c
 42921  017EEC  36DF               	rlcf	indf2,f,c
 42922  017EEE                     l10031:
 42923                           
 42924                           ;stkvar	_bexp @ sp[(-4)+1]
 42925  017EEE  0EFD               	movlw	-3
 42926  017EF0  50E3               	movf	plusw1,w,c
 42927  017EF2  B4D8               	btfsc	status,2,c
 42928  017EF4  D002               	goto	l10035
 42929                           
 42930                           ;stkvar	_bexp @ sp[(-4)+1]
 42931  017EF6  0EFD               	movlw	-3
 42932  017EF8  06E3               	decf	plusw1,f,c
 42933  017EFA                     l10035:
 42934                           
 42935                           ;stkvar	_b @ sp[(-4)+-4]
 42936  017EFA  0EFA               	movlw	-6
 42937  017EFC  AEE3               	btfss	plusw1,7,c
 42938  017EFE  D7CF               	goto	l10021
 42939  017F00                     u7570:
 42940                           
 42941                           ;stkvar	_aexp @ sp[(-4)+2]
 42942  017F00  0EFE               	movlw	-2
 42943  017F02  6AE3               	clrf	plusw1,c
 42944                           
 42945                           ;stkvar	_grs @ sp[(-4)+0]
 42946  017F04  0EFC               	movlw	-4
 42947  017F06  AEE3               	btfss	plusw1,7,c
 42948  017F08  D00F               	goto	l10049
 42949                           
 42950                           ;stkvar	_grs @ sp[(-4)+0]
 42951  017F0A  0EFC               	movlw	-4
 42952  017F0C  006F FF8C  F035    	movff	plusw1,btemp+11
 42953  017F12  0E7F               	movlw	127
 42954  017F14  1635               	andwf	(btemp+11)^0,f,c
 42955  017F16  B4D8               	btfsc	status,2,c
 42956  017F18  D004               	goto	l10045
 42957  017F1A                     u7590:
 42958                           
 42959                           ;stkvar	_aexp @ sp[(-4)+2]
 42960  017F1A  0EFE               	movlw	-2
 42961  017F1C  6AE3               	clrf	plusw1,c
 42962  017F1E  2AE3               	incf	plusw1,f,c
 42963  017F20  D003               	goto	l10049
 42964  017F22                     l10045:
 42965                           
 42966                           ;stkvar	_b @ sp[(-4)+-4]
 42967  017F22  0EF8               	movlw	-8
 42968  017F24  B0E3               	btfsc	plusw1,0,c
 42969  017F26  D7F9               	goto	u7590
 42970  017F28                     l10049:
 42971                           
 42972                           ;stkvar	_aexp @ sp[(-4)+2]
 42973  017F28  0EFE               	movlw	-2
 42974  017F2A  50E3               	movf	plusw1,w,c
 42975  017F2C  B4D8               	btfsc	status,2,c
 42976  017F2E  D02B               	goto	l10061
 42977                           
 42978                           ;stkvar	_b @ sp[(-4)+-4]
 42979  017F30  50E1               	movf	fsr1l,w,c
 42980  017F32  0FF8               	addlw	-8
 42981  017F34  6ED9               	movwf	fsr2l,c
 42982  017F36  50E2               	movf	fsr1h,w,c
 42983  017F38  6EDA               	movwf	fsr2h,c
 42984  017F3A  0EFF               	movlw	255
 42985  017F3C  22DA               	addwfc	fsr2h,f,c
 42986  017F3E  2ADE               	incf	postinc2,f,c
 42987  017F40  0E00               	movlw	0
 42988  017F42  22DE               	addwfc	postinc2,f,c
 42989  017F44  22DE               	addwfc	postinc2,f,c
 42990  017F46  22DE               	addwfc	postinc2,f,c
 42991                           
 42992                           ;stkvar	_b @ sp[(-4)+-4]
 42993  017F48  0EFB               	movlw	-5
 42994  017F4A  A0E3               	btfss	plusw1,0,c
 42995  017F4C  D01C               	goto	l10061
 42996  017F4E  0E01               	movlw	1
 42997  017F50  6E35               	movwf	(btemp+11)^0,c
 42998                           
 42999                           ;stkvar	_b @ sp[(-4)+-4]
 43000  017F52  50E1               	movf	fsr1l,w,c
 43001  017F54  0FF8               	addlw	-8
 43002  017F56  6ED9               	movwf	fsr2l,c
 43003  017F58  50E2               	movf	fsr1h,w,c
 43004  017F5A  6EDA               	movwf	fsr2h,c
 43005  017F5C  0EFF               	movlw	255
 43006  017F5E  22DA               	addwfc	fsr2h,f,c
 43007  017F60  2835               	incf	(btemp+11)^0,w,c
 43008  017F62  52DE               	movf	postinc2,f,c
 43009  017F64  D008               	goto	u7630
 43010  017F66                     u7635:
 43011  017F66  52DE               	movf	postinc2,f,c
 43012  017F68  90D8               	bcf	status,0,c
 43013  017F6A  BEDC               	btfsc	preinc2,7,c
 43014  017F6C  80D8               	bsf	status,0,c
 43015  017F6E  32DD               	rrcf	postdec2,f,c
 43016  017F70  32DD               	rrcf	postdec2,f,c
 43017  017F72  32DD               	rrcf	postdec2,f,c
 43018  017F74  32DE               	rrcf	postinc2,f,c
 43019  017F76                     u7630:
 43020  017F76  2EE8               	decfsz	wreg,f,c
 43021  017F78  D7F6               	goto	u7635
 43022                           
 43023                           ;stkvar	_bexp @ sp[(-4)+1]
 43024  017F7A  0EFD               	movlw	-3
 43025  017F7C  28E3               	incf	plusw1,w,c
 43026  017F7E  B4D8               	btfsc	status,2,c
 43027  017F80  D002               	goto	l10061
 43028                           
 43029                           ;stkvar	_bexp @ sp[(-4)+1]
 43030  017F82  0EFD               	movlw	-3
 43031  017F84  2AE3               	incf	plusw1,f,c
 43032  017F86                     l10061:
 43033                           
 43034                           ;stkvar	_bexp @ sp[(-4)+1]
 43035  017F86  0EFD               	movlw	-3
 43036  017F88  28E3               	incf	plusw1,w,c
 43037  017F8A  B4D8               	btfsc	status,2,c
 43038  017F8C  D004               	goto	u7660
 43039                           
 43040                           ;stkvar	_bexp @ sp[(-4)+1]
 43041  017F8E  0EFD               	movlw	-3
 43042  017F90  50E3               	movf	plusw1,w,c
 43043  017F92  A4D8               	btfss	status,2,c
 43044  017F94  D00E               	goto	l10071
 43045  017F96                     u7660:
 43046                           
 43047                           ;stkvar	_b @ sp[(-4)+-4]
 43048  017F96  0EF8               	movlw	-8
 43049  017F98  6AE3               	clrf	plusw1,c
 43050  017F9A  0EF9               	movlw	-7
 43051  017F9C  6AE3               	clrf	plusw1,c
 43052  017F9E  0EFA               	movlw	-6
 43053  017FA0  6AE3               	clrf	plusw1,c
 43054  017FA2  0EFB               	movlw	-5
 43055  017FA4  6AE3               	clrf	plusw1,c
 43056                           
 43057                           ;stkvar	_bexp @ sp[(-4)+1]
 43058  017FA6  0EFD               	movlw	-3
 43059  017FA8  50E3               	movf	plusw1,w,c
 43060  017FAA  A4D8               	btfss	status,2,c
 43061  017FAC  D002               	goto	l10071
 43062                           
 43063                           ;stkvar	_signs @ sp[(-4)+3]
 43064  017FAE  0EFF               	movlw	-1
 43065  017FB0  6AE3               	clrf	plusw1,c
 43066  017FB2                     l10071:
 43067                           
 43068                           ;stkvar	_bexp @ sp[(-4)+1]
 43069  017FB2  0EFD               	movlw	-3
 43070  017FB4  A0E3               	btfss	plusw1,0,c
 43071  017FB6  D009               	goto	l10075
 43072                           
 43073                           ;stkvar	_b @ sp[(-4)+-4]
 43074  017FB8  0EFA               	movlw	250
 43075  017FBA  24E1               	addwf	fsr1l,w,c
 43076  017FBC  6ED9               	movwf	fsr2l,c
 43077  017FBE  0EFF               	movlw	255
 43078  017FC0  20E2               	addwfc	fsr1h,w,c
 43079  017FC2  6EDA               	movwf	fsr2h,c
 43080  017FC4  0E00               	movlw	0
 43081  017FC6  8EDB               	bsf	plusw2,7,c
 43082  017FC8  D008               	goto	l10077
 43083  017FCA                     l10075:
 43084                           
 43085                           ;stkvar	_b @ sp[(-4)+-4]
 43086  017FCA  0EFA               	movlw	250
 43087  017FCC  24E1               	addwf	fsr1l,w,c
 43088  017FCE  6ED9               	movwf	fsr2l,c
 43089  017FD0  0EFF               	movlw	255
 43090  017FD2  20E2               	addwfc	fsr1h,w,c
 43091  017FD4  6EDA               	movwf	fsr2h,c
 43092  017FD6  0E7F               	movlw	127
 43093  017FD8  16DF               	andwf	indf2,f,c
 43094  017FDA                     l10077:
 43095                           
 43096                           ;stkvar	_b @ sp[(-4)+-4]
 43097  017FDA  0EFB               	movlw	251
 43098  017FDC  24E1               	addwf	fsr1l,w,c
 43099  017FDE  6ED9               	movwf	fsr2l,c
 43100  017FE0  0EFF               	movlw	255
 43101  017FE2  20E2               	addwfc	fsr1h,w,c
 43102  017FE4  6EDA               	movwf	fsr2h,c
 43103                           
 43104                           ;stkvar	_bexp @ sp[(-4)+1]
 43105  017FE6  0EFD               	movlw	-3
 43106  017FE8  006F FF8C  F035    	movff	plusw1,btemp+11
 43107  017FEE  90D8               	bcf	status,0,c
 43108  017FF0  3035               	rrcf	(btemp+11)^0,w,c
 43109  017FF2  6EDF               	movwf	indf2,c
 43110                           
 43111                           ;stkvar	_signs @ sp[(-4)+3]
 43112  017FF4  0EFF               	movlw	-1
 43113  017FF6  AEE3               	btfss	plusw1,7,c
 43114  017FF8  D008               	goto	l10083
 43115                           
 43116                           ;stkvar	_b @ sp[(-4)+-4]
 43117  017FFA  0EFB               	movlw	251
 43118  017FFC  24E1               	addwf	fsr1l,w,c
 43119  017FFE  6ED9               	movwf	fsr2l,c
 43120  018000  0EFF               	movlw	255
 43121  018002  20E2               	addwfc	fsr1h,w,c
 43122  018004  6EDA               	movwf	fsr2h,c
 43123  018006  0E00               	movlw	0
 43124  018008  8EDB               	bsf	plusw2,7,c
 43125  01800A                     l10083:
 43126                           
 43127                           ;stkvar	_b @ sp[(-4)+-4]
 43128  01800A  0EF8               	movlw	-8
 43129  01800C  006F FF8C  F02A    	movff	plusw1,btemp
 43130  018012  0EF9               	movlw	-7
 43131  018014  006F FF8C  F02B    	movff	plusw1,btemp+1
 43132  01801A  0EFA               	movlw	-6
 43133  01801C  006F FF8C  F02C    	movff	plusw1,btemp+2
 43134  018022  0EFB               	movlw	-5
 43135  018024  006F FF8C  F02D    	movff	plusw1,btemp+3
 43136  01802A                     l3270:
 43137                           
 43138                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 43139  01802A  0EF4               	movlw	244
 43140  01802C  26E1               	addwf	fsr1l,f,c
 43141  01802E  0EFF               	movlw	255
 43142  018030  22E2               	addwfc	fsr1h,f,c
 43143  018032  0012               	return		;funcret
 43144  018034                     __end_of___fladd:
 43145                           	opt callstack 0
 43146                           
 43147 ;; *************** function ___flmul *****************
 43148 ;; Defined at:
 43149 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 43150 ;; Parameters:    Size  Location     Type
 43151 ;;  b               4  [STACK] unsigned char 
 43152 ;;  a               4  [STACK] unsigned char 
 43153 ;; Auto vars:     Size  Location     Type
 43154 ;;  prod            4  [STACK] struct .
 43155 ;;  grs             4  [STACK] unsigned long 
 43156 ;;  temp            2  [STACK] struct .
 43157 ;;  bexp            1  [STACK] unsigned char 
 43158 ;;  aexp            1  [STACK] unsigned char 
 43159 ;;  sign            1  [STACK] unsigned char 
 43160 ;; Return value:  Size  Location     Type
 43161 ;;                  4  [STACK] unsigned char 
 43162 ;; Registers used:
 43163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 43164 ;; Tracked objects:
 43165 ;;		On entry : 0/39
 43166 ;;		On exit  : 0/0
 43167 ;;		Unchanged: 0/0
 43168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43173 ;;Total ram usage:        0 bytes
 43174 ;; Hardware stack levels used:    1
 43175 ;; Hardware stack levels required when called:   15
 43176 ;; This function calls:
 43177 ;;		Nothing
 43178 ;; This function is called by:
 43179 ;;		_conv_raw_result
 43180 ;;		_lp_filter
 43181 ;;		_calc_model_data
 43182 ;;		_load_hist_data
 43183 ;;		_calc_bsoc
 43184 ;;		_init_bsoc
 43185 ;;		_efgtoa
 43186 ;; This function uses a reentrant model
 43187 ;;
 43188                           
 43189                           	psect	text156
 43190  01704E                     __ptext156:
 43191                           	opt callstack 0
 43192  01704E                     ___flmul:
 43193                           	opt callstack 0
 43194                           
 43195                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 43196  01704E  0E0D               	movlw	13
 43197  017050  26E1               	addwf	fsr1l,f,c
 43198  017052  0E00               	movlw	0
 43199  017054  22E2               	addwfc	fsr1h,f,c
 43200                           
 43201                           ;stkvar	_b @ sp[(-13)+-4]
 43202                           
 43203                           ;incstack = 0
 43204 ;; hardware stack exceeded
 43205  017056  0EF2               	movlw	242
 43206  017058  24E1               	addwf	fsr1l,w,c
 43207  01705A  6ED9               	movwf	fsr2l,c
 43208  01705C  0EFF               	movlw	255
 43209  01705E  20E2               	addwfc	fsr1h,w,c
 43210  017060  6EDA               	movwf	fsr2h,c
 43211  017062  50DF               	movf	indf2,w,c
 43212  017064  6E35               	movwf	(btemp+11)^0,c
 43213  017066  0E80               	movlw	128
 43214  017068  1635               	andwf	(btemp+11)^0,f,c
 43215                           
 43216                           ;stkvar	_sign @ sp[(-13)+12]
 43217  01706A  0EFF               	movlw	-1
 43218  01706C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43219                           
 43220                           ;stkvar	_b @ sp[(-13)+-4]
 43221  017072  0EF2               	movlw	242
 43222  017074  24E1               	addwf	fsr1l,w,c
 43223  017076  6ED9               	movwf	fsr2l,c
 43224  017078  0EFF               	movlw	255
 43225  01707A  20E2               	addwfc	fsr1h,w,c
 43226  01707C  6EDA               	movwf	fsr2h,c
 43227  01707E  50DF               	movf	indf2,w,c
 43228  017080  6E35               	movwf	(btemp+11)^0,c
 43229  017082  90D8               	bcf	status,0,c
 43230  017084  3435               	rlcf	(btemp+11)^0,w,c
 43231  017086  6E34               	movwf	(btemp+10)^0,c
 43232                           
 43233                           ;stkvar	_bexp @ sp[(-13)+10]
 43234  017088  0EFD               	movlw	-3
 43235  01708A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43236                           
 43237                           ;stkvar	_b @ sp[(-13)+-4]
 43238  017090  0EF1               	movlw	241
 43239  017092  24E1               	addwf	fsr1l,w,c
 43240  017094  6ED9               	movwf	fsr2l,c
 43241  017096  0EFF               	movlw	255
 43242  017098  20E2               	addwfc	fsr1h,w,c
 43243  01709A  6EDA               	movwf	fsr2h,c
 43244  01709C  AEDF               	btfss	indf2,7,c
 43245  01709E  D002               	goto	l10547
 43246                           
 43247                           ;stkvar	_bexp @ sp[(-13)+10]
 43248  0170A0  0EFD               	movlw	-3
 43249  0170A2  80E3               	bsf	plusw1,0,c
 43250  0170A4                     l10547:
 43251                           
 43252                           ;stkvar	_bexp @ sp[(-13)+10]
 43253  0170A4  0EFD               	movlw	-3
 43254  0170A6  50E3               	movf	plusw1,w,c
 43255  0170A8  B4D8               	btfsc	status,2,c
 43256  0170AA  D01F               	goto	l10555
 43257                           
 43258                           ;stkvar	_bexp @ sp[(-13)+10]
 43259  0170AC  0EFD               	movlw	-3
 43260  0170AE  28E3               	incf	plusw1,w,c
 43261  0170B0  A4D8               	btfss	status,2,c
 43262  0170B2  D018               	goto	l10553
 43263  0170B4  0E00               	movlw	0
 43264  0170B6  6E32               	movwf	(btemp+8)^0,c
 43265  0170B8  0E00               	movlw	0
 43266  0170BA  6E33               	movwf	(btemp+9)^0,c
 43267  0170BC  0E00               	movlw	0
 43268  0170BE  6E34               	movwf	(btemp+10)^0,c
 43269  0170C0  0E00               	movlw	0
 43270  0170C2  6E35               	movwf	(btemp+11)^0,c
 43271                           
 43272                           ;stkvar	_b @ sp[(-13)+-4]
 43273  0170C4  0EEF               	movlw	-17
 43274  0170C6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43275  0170CC  0EF0               	movlw	-16
 43276  0170CE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43277  0170D4  0EF1               	movlw	-15
 43278  0170D6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43279  0170DC  0EF2               	movlw	-14
 43280  0170DE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43281  0170E4                     l10553:
 43282                           
 43283                           ;stkvar	_b @ sp[(-13)+-4]
 43284  0170E4  0EF1               	movlw	-15
 43285  0170E6  8EE3               	bsf	plusw1,7,c
 43286  0170E8  D018               	goto	l10557
 43287  0170EA                     l10555:
 43288  0170EA  0E00               	movlw	0
 43289  0170EC  6E32               	movwf	(btemp+8)^0,c
 43290  0170EE  0E00               	movlw	0
 43291  0170F0  6E33               	movwf	(btemp+9)^0,c
 43292  0170F2  0E00               	movlw	0
 43293  0170F4  6E34               	movwf	(btemp+10)^0,c
 43294  0170F6  0E00               	movlw	0
 43295  0170F8  6E35               	movwf	(btemp+11)^0,c
 43296                           
 43297                           ;stkvar	_b @ sp[(-13)+-4]
 43298  0170FA  0EEF               	movlw	-17
 43299  0170FC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43300  017102  0EF0               	movlw	-16
 43301  017104  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43302  01710A  0EF1               	movlw	-15
 43303  01710C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43304  017112  0EF2               	movlw	-14
 43305  017114  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43306  01711A                     l10557:
 43307                           
 43308                           ;stkvar	_a @ sp[(-13)+-8]
 43309  01711A  0EEE               	movlw	238
 43310  01711C  24E1               	addwf	fsr1l,w,c
 43311  01711E  6ED9               	movwf	fsr2l,c
 43312  017120  0EFF               	movlw	255
 43313  017122  20E2               	addwfc	fsr1h,w,c
 43314  017124  6EDA               	movwf	fsr2h,c
 43315  017126  50DF               	movf	indf2,w,c
 43316  017128  6E35               	movwf	(btemp+11)^0,c
 43317  01712A  0E80               	movlw	128
 43318  01712C  1635               	andwf	(btemp+11)^0,f,c
 43319                           
 43320                           ;stkvar	_sign @ sp[(-13)+12]
 43321  01712E  50E1               	movf	fsr1l,w,c
 43322  017130  0FFF               	addlw	-1
 43323  017132  6ED9               	movwf	fsr2l,c
 43324  017134  50E2               	movf	fsr1h,w,c
 43325  017136  6EDA               	movwf	fsr2h,c
 43326  017138  0EFF               	movlw	255
 43327  01713A  22DA               	addwfc	fsr2h,f,c
 43328  01713C  5035               	movf	(btemp+11)^0,w,c
 43329  01713E  1ADF               	xorwf	indf2,f,c
 43330                           
 43331                           ;stkvar	_a @ sp[(-13)+-8]
 43332  017140  0EEE               	movlw	238
 43333  017142  24E1               	addwf	fsr1l,w,c
 43334  017144  6ED9               	movwf	fsr2l,c
 43335  017146  0EFF               	movlw	255
 43336  017148  20E2               	addwfc	fsr1h,w,c
 43337  01714A  6EDA               	movwf	fsr2h,c
 43338  01714C  50DF               	movf	indf2,w,c
 43339  01714E  6E35               	movwf	(btemp+11)^0,c
 43340  017150  90D8               	bcf	status,0,c
 43341  017152  3435               	rlcf	(btemp+11)^0,w,c
 43342  017154  6E34               	movwf	(btemp+10)^0,c
 43343                           
 43344                           ;stkvar	_aexp @ sp[(-13)+11]
 43345  017156  0EFE               	movlw	-2
 43346  017158  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43347                           
 43348                           ;stkvar	_a @ sp[(-13)+-8]
 43349  01715E  0EED               	movlw	237
 43350  017160  24E1               	addwf	fsr1l,w,c
 43351  017162  6ED9               	movwf	fsr2l,c
 43352  017164  0EFF               	movlw	255
 43353  017166  20E2               	addwfc	fsr1h,w,c
 43354  017168  6EDA               	movwf	fsr2h,c
 43355  01716A  AEDF               	btfss	indf2,7,c
 43356  01716C  D002               	goto	l10565
 43357                           
 43358                           ;stkvar	_aexp @ sp[(-13)+11]
 43359  01716E  0EFE               	movlw	-2
 43360  017170  80E3               	bsf	plusw1,0,c
 43361  017172                     l10565:
 43362                           
 43363                           ;stkvar	_aexp @ sp[(-13)+11]
 43364  017172  0EFE               	movlw	-2
 43365  017174  50E3               	movf	plusw1,w,c
 43366  017176  B4D8               	btfsc	status,2,c
 43367  017178  D01F               	goto	l10573
 43368                           
 43369                           ;stkvar	_aexp @ sp[(-13)+11]
 43370  01717A  0EFE               	movlw	-2
 43371  01717C  28E3               	incf	plusw1,w,c
 43372  01717E  A4D8               	btfss	status,2,c
 43373  017180  D018               	goto	l10571
 43374  017182  0E00               	movlw	0
 43375  017184  6E32               	movwf	(btemp+8)^0,c
 43376  017186  0E00               	movlw	0
 43377  017188  6E33               	movwf	(btemp+9)^0,c
 43378  01718A  0E00               	movlw	0
 43379  01718C  6E34               	movwf	(btemp+10)^0,c
 43380  01718E  0E00               	movlw	0
 43381  017190  6E35               	movwf	(btemp+11)^0,c
 43382                           
 43383                           ;stkvar	_a @ sp[(-13)+-8]
 43384  017192  0EEB               	movlw	-21
 43385  017194  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43386  01719A  0EEC               	movlw	-20
 43387  01719C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43388  0171A2  0EED               	movlw	-19
 43389  0171A4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43390  0171AA  0EEE               	movlw	-18
 43391  0171AC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43392  0171B2                     l10571:
 43393                           
 43394                           ;stkvar	_a @ sp[(-13)+-8]
 43395  0171B2  0EED               	movlw	-19
 43396  0171B4  8EE3               	bsf	plusw1,7,c
 43397  0171B6  D018               	goto	l10575
 43398  0171B8                     l10573:
 43399  0171B8  0E00               	movlw	0
 43400  0171BA  6E32               	movwf	(btemp+8)^0,c
 43401  0171BC  0E00               	movlw	0
 43402  0171BE  6E33               	movwf	(btemp+9)^0,c
 43403  0171C0  0E00               	movlw	0
 43404  0171C2  6E34               	movwf	(btemp+10)^0,c
 43405  0171C4  0E00               	movlw	0
 43406  0171C6  6E35               	movwf	(btemp+11)^0,c
 43407                           
 43408                           ;stkvar	_a @ sp[(-13)+-8]
 43409  0171C8  0EEB               	movlw	-21
 43410  0171CA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43411  0171D0  0EEC               	movlw	-20
 43412  0171D2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43413  0171D8  0EED               	movlw	-19
 43414  0171DA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43415  0171E0  0EEE               	movlw	-18
 43416  0171E2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43417  0171E8                     l10575:
 43418                           
 43419                           ;stkvar	_aexp @ sp[(-13)+11]
 43420  0171E8  0EFE               	movlw	-2
 43421  0171EA  50E3               	movf	plusw1,w,c
 43422  0171EC  B4D8               	btfsc	status,2,c
 43423  0171EE  D004               	goto	u8720
 43424                           
 43425                           ;stkvar	_bexp @ sp[(-13)+10]
 43426  0171F0  0EFD               	movlw	-3
 43427  0171F2  50E3               	movf	plusw1,w,c
 43428  0171F4  A4D8               	btfss	status,2,c
 43429  0171F6  D009               	goto	l10583
 43430  0171F8                     u8720:
 43431  0171F8  0E00               	movlw	0
 43432  0171FA  6E2A               	movwf	btemp^0,c
 43433  0171FC  0E00               	movlw	0
 43434  0171FE  6E2B               	movwf	(btemp+1)^0,c
 43435  017200  0E00               	movlw	0
 43436  017202  6E2C               	movwf	(btemp+2)^0,c
 43437  017204  0E00               	movlw	0
 43438  017206  6E2D               	movwf	(btemp+3)^0,c
 43439  017208  D332               	goto	l3351
 43440  01720A                     l10583:
 43441                           
 43442                           ;stkvar	_b @ sp[(-13)+-4]
 43443  01720A  0EEF               	movlw	-17
 43444  01720C  006F FF8C  F035    	movff	plusw1,btemp+11
 43445                           
 43446                           ;stkvar	_a @ sp[(-13)+-8]
 43447  017212  0EED               	movlw	237
 43448  017214  24E1               	addwf	fsr1l,w,c
 43449  017216  6ED9               	movwf	fsr2l,c
 43450  017218  0EFF               	movlw	255
 43451  01721A  20E2               	addwfc	fsr1h,w,c
 43452  01721C  6EDA               	movwf	fsr2h,c
 43453  01721E  50DF               	movf	indf2,w,c
 43454  017220  0235               	mulwf	(btemp+11)^0,c
 43455                           
 43456                           ;stkvar	_temp @ sp[(-13)+8]
 43457  017222  0EFB               	movlw	-5
 43458  017224  006F FFCF FFE3     	movff	prodl,plusw1
 43459  01722A  0EFC               	movlw	-4
 43460  01722C  006F FFD3 FFE3     	movff	prodh,plusw1
 43461                           
 43462                           ;stkvar	_temp @ sp[(-13)+8]
 43463  017232  0EFB               	movlw	-5
 43464  017234  006F FF8C  F035    	movff	plusw1,btemp+11
 43465  01723A  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 43466  017240  6A2F               	clrf	(btemp+5)^0,c
 43467  017242  6A30               	clrf	(btemp+6)^0,c
 43468  017244  6A31               	clrf	(btemp+7)^0,c
 43469                           
 43470                           ;stkvar	_grs @ sp[(-13)+4]
 43471  017246  0EF7               	movlw	-9
 43472  017248  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 43473  01724E  0EF8               	movlw	-8
 43474  017250  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 43475  017256  0EF9               	movlw	-7
 43476  017258  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 43477  01725E  0EFA               	movlw	-6
 43478  017260  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 43479                           
 43480                           ;stkvar	_temp @ sp[(-13)+8]
 43481  017266  0EFC               	movlw	252
 43482  017268  24E1               	addwf	fsr1l,w,c
 43483  01726A  6ED9               	movwf	fsr2l,c
 43484  01726C  0EFF               	movlw	255
 43485  01726E  20E2               	addwfc	fsr1h,w,c
 43486  017270  6EDA               	movwf	fsr2h,c
 43487  017272  50DF               	movf	indf2,w,c
 43488  017274  6E35               	movwf	(btemp+11)^0,c
 43489  017276  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 43490  01727C  6A2F               	clrf	(btemp+5)^0,c
 43491  01727E  6A30               	clrf	(btemp+6)^0,c
 43492  017280  6A31               	clrf	(btemp+7)^0,c
 43493                           
 43494                           ;stkvar	_prod @ sp[(-13)+0]
 43495  017282  0EF3               	movlw	-13
 43496  017284  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 43497  01728A  0EF4               	movlw	-12
 43498  01728C  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 43499  017292  0EF5               	movlw	-11
 43500  017294  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 43501  01729A  0EF6               	movlw	-10
 43502  01729C  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 43503                           
 43504                           ;stkvar	_b @ sp[(-13)+-4]
 43505  0172A2  0EF0               	movlw	240
 43506  0172A4  24E1               	addwf	fsr1l,w,c
 43507  0172A6  6ED9               	movwf	fsr2l,c
 43508  0172A8  0EFF               	movlw	255
 43509  0172AA  20E2               	addwfc	fsr1h,w,c
 43510  0172AC  6EDA               	movwf	fsr2h,c
 43511  0172AE  50DF               	movf	indf2,w,c
 43512  0172B0  6E35               	movwf	(btemp+11)^0,c
 43513                           
 43514                           ;stkvar	_a @ sp[(-13)+-8]
 43515  0172B2  0EEC               	movlw	236
 43516  0172B4  24E1               	addwf	fsr1l,w,c
 43517  0172B6  6ED9               	movwf	fsr2l,c
 43518  0172B8  0EFF               	movlw	255
 43519  0172BA  20E2               	addwfc	fsr1h,w,c
 43520  0172BC  6EDA               	movwf	fsr2h,c
 43521  0172BE  50DF               	movf	indf2,w,c
 43522  0172C0  0235               	mulwf	(btemp+11)^0,c
 43523                           
 43524                           ;stkvar	_temp @ sp[(-13)+8]
 43525  0172C2  0EFB               	movlw	-5
 43526  0172C4  006F FFCF FFE3     	movff	prodl,plusw1
 43527  0172CA  0EFC               	movlw	-4
 43528  0172CC  006F FFD3 FFE3     	movff	prodh,plusw1
 43529                           
 43530                           ;stkvar	_grs @ sp[(-13)+4]
 43531  0172D2  50E1               	movf	fsr1l,w,c
 43532  0172D4  0FF7               	addlw	-9
 43533  0172D6  6ED9               	movwf	fsr2l,c
 43534  0172D8  50E2               	movf	fsr1h,w,c
 43535  0172DA  6EDA               	movwf	fsr2h,c
 43536  0172DC  0EFF               	movlw	255
 43537  0172DE  22DA               	addwfc	fsr2h,f,c
 43538                           
 43539                           ;stkvar	_temp @ sp[(-13)+8]
 43540  0172E0  0EFB               	movlw	-5
 43541  0172E2  50E3               	movf	plusw1,w,c
 43542  0172E4  26DE               	addwf	postinc2,f,c
 43543  0172E6  0E00               	movlw	0
 43544  0172E8  22DE               	addwfc	postinc2,f,c
 43545  0172EA  22DE               	addwfc	postinc2,f,c
 43546  0172EC  22DE               	addwfc	postinc2,f,c
 43547                           
 43548                           ;stkvar	_prod @ sp[(-13)+0]
 43549  0172EE  50E1               	movf	fsr1l,w,c
 43550  0172F0  0FF3               	addlw	-13
 43551  0172F2  6ED9               	movwf	fsr2l,c
 43552  0172F4  50E2               	movf	fsr1h,w,c
 43553  0172F6  6EDA               	movwf	fsr2h,c
 43554  0172F8  0EFF               	movlw	255
 43555  0172FA  22DA               	addwfc	fsr2h,f,c
 43556                           
 43557                           ;stkvar	_temp @ sp[(-13)+8]
 43558  0172FC  0EFC               	movlw	252
 43559  0172FE  24E1               	addwf	fsr1l,w,c
 43560  017300  6EE9               	movwf	fsr0l,c
 43561  017302  0EFF               	movlw	255
 43562  017304  20E2               	addwfc	fsr1h,w,c
 43563  017306  6EEA               	movwf	fsr0h,c
 43564  017308  50EF               	movf	indf0,w,c
 43565  01730A  26DE               	addwf	postinc2,f,c
 43566  01730C  0E00               	movlw	0
 43567  01730E  22DE               	addwfc	postinc2,f,c
 43568  017310  22DE               	addwfc	postinc2,f,c
 43569  017312  22DE               	addwfc	postinc2,f,c
 43570                           
 43571                           ;stkvar	_b @ sp[(-13)+-4]
 43572  017314  0EF1               	movlw	241
 43573  017316  24E1               	addwf	fsr1l,w,c
 43574  017318  6ED9               	movwf	fsr2l,c
 43575  01731A  0EFF               	movlw	255
 43576  01731C  20E2               	addwfc	fsr1h,w,c
 43577  01731E  6EDA               	movwf	fsr2h,c
 43578  017320  50DF               	movf	indf2,w,c
 43579  017322  6E35               	movwf	(btemp+11)^0,c
 43580                           
 43581                           ;stkvar	_a @ sp[(-13)+-8]
 43582  017324  0EEB               	movlw	-21
 43583  017326  50E3               	movf	plusw1,w,c
 43584  017328  0235               	mulwf	(btemp+11)^0,c
 43585                           
 43586                           ;stkvar	_temp @ sp[(-13)+8]
 43587  01732A  0EFB               	movlw	-5
 43588  01732C  006F FFCF FFE3     	movff	prodl,plusw1
 43589  017332  0EFC               	movlw	-4
 43590  017334  006F FFD3 FFE3     	movff	prodh,plusw1
 43591                           
 43592                           ;stkvar	_grs @ sp[(-13)+4]
 43593  01733A  50E1               	movf	fsr1l,w,c
 43594  01733C  0FF7               	addlw	-9
 43595  01733E  6ED9               	movwf	fsr2l,c
 43596  017340  50E2               	movf	fsr1h,w,c
 43597  017342  6EDA               	movwf	fsr2h,c
 43598  017344  0EFF               	movlw	255
 43599  017346  22DA               	addwfc	fsr2h,f,c
 43600                           
 43601                           ;stkvar	_temp @ sp[(-13)+8]
 43602  017348  0EFB               	movlw	-5
 43603  01734A  50E3               	movf	plusw1,w,c
 43604  01734C  26DE               	addwf	postinc2,f,c
 43605  01734E  0E00               	movlw	0
 43606  017350  22DE               	addwfc	postinc2,f,c
 43607  017352  22DE               	addwfc	postinc2,f,c
 43608  017354  22DE               	addwfc	postinc2,f,c
 43609                           
 43610                           ;stkvar	_prod @ sp[(-13)+0]
 43611  017356  50E1               	movf	fsr1l,w,c
 43612  017358  0FF3               	addlw	-13
 43613  01735A  6ED9               	movwf	fsr2l,c
 43614  01735C  50E2               	movf	fsr1h,w,c
 43615  01735E  6EDA               	movwf	fsr2h,c
 43616  017360  0EFF               	movlw	255
 43617  017362  22DA               	addwfc	fsr2h,f,c
 43618                           
 43619                           ;stkvar	_temp @ sp[(-13)+8]
 43620  017364  0EFC               	movlw	252
 43621  017366  24E1               	addwf	fsr1l,w,c
 43622  017368  6EE9               	movwf	fsr0l,c
 43623  01736A  0EFF               	movlw	255
 43624  01736C  20E2               	addwfc	fsr1h,w,c
 43625  01736E  6EEA               	movwf	fsr0h,c
 43626  017370  50EF               	movf	indf0,w,c
 43627  017372  26DE               	addwf	postinc2,f,c
 43628  017374  0E00               	movlw	0
 43629  017376  22DE               	addwfc	postinc2,f,c
 43630  017378  22DE               	addwfc	postinc2,f,c
 43631  01737A  22DE               	addwfc	postinc2,f,c
 43632                           
 43633                           ;stkvar	_grs @ sp[(-13)+4]
 43634  01737C  50E1               	movf	fsr1l,w,c
 43635  01737E  0FF7               	addlw	-9
 43636  017380  6ED9               	movwf	fsr2l,c
 43637  017382  50E2               	movf	fsr1h,w,c
 43638  017384  6EDA               	movwf	fsr2h,c
 43639  017386  0EFF               	movlw	255
 43640  017388  22DA               	addwfc	fsr2h,f,c
 43641  01738A  0E08               	movlw	8
 43642  01738C                     u8735:
 43643  01738C  90D8               	bcf	status,0,c
 43644  01738E  36DE               	rlcf	postinc2,f,c
 43645  017390  36DE               	rlcf	postinc2,f,c
 43646  017392  36DE               	rlcf	postinc2,f,c
 43647  017394  36DD               	rlcf	postdec2,f,c
 43648  017396  52DD               	movf	postdec2,f,c
 43649  017398  52DD               	movf	postdec2,f,c
 43650  01739A  2EE8               	decfsz	wreg,f,c
 43651  01739C  D7F7               	goto	u8735
 43652                           
 43653                           ;stkvar	_b @ sp[(-13)+-4]
 43654  01739E  0EF0               	movlw	240
 43655  0173A0  24E1               	addwf	fsr1l,w,c
 43656  0173A2  6ED9               	movwf	fsr2l,c
 43657  0173A4  0EFF               	movlw	255
 43658  0173A6  20E2               	addwfc	fsr1h,w,c
 43659  0173A8  6EDA               	movwf	fsr2h,c
 43660  0173AA  50DF               	movf	indf2,w,c
 43661  0173AC  6E35               	movwf	(btemp+11)^0,c
 43662                           
 43663                           ;stkvar	_a @ sp[(-13)+-8]
 43664  0173AE  0EEB               	movlw	-21
 43665  0173B0  50E3               	movf	plusw1,w,c
 43666  0173B2  0235               	mulwf	(btemp+11)^0,c
 43667                           
 43668                           ;stkvar	_temp @ sp[(-13)+8]
 43669  0173B4  0EFB               	movlw	-5
 43670  0173B6  006F FFCF FFE3     	movff	prodl,plusw1
 43671  0173BC  0EFC               	movlw	-4
 43672  0173BE  006F FFD3 FFE3     	movff	prodh,plusw1
 43673                           
 43674                           ;stkvar	_temp @ sp[(-13)+8]
 43675  0173C4  0EFB               	movlw	-5
 43676  0173C6  006F FF8C  F034    	movff	plusw1,btemp+10
 43677  0173CC  0EFC               	movlw	-4
 43678  0173CE  006F FF8C  F035    	movff	plusw1,btemp+11
 43679                           
 43680                           ;stkvar	_grs @ sp[(-13)+4]
 43681  0173D4  50E1               	movf	fsr1l,w,c
 43682  0173D6  0FF7               	addlw	-9
 43683  0173D8  6ED9               	movwf	fsr2l,c
 43684  0173DA  50E2               	movf	fsr1h,w,c
 43685  0173DC  6EDA               	movwf	fsr2h,c
 43686  0173DE  0EFF               	movlw	255
 43687  0173E0  22DA               	addwfc	fsr2h,f,c
 43688  0173E2  5034               	movf	(btemp+10)^0,w,c
 43689  0173E4  26DE               	addwf	postinc2,f,c
 43690  0173E6  5035               	movf	(btemp+11)^0,w,c
 43691  0173E8  22DE               	addwfc	postinc2,f,c
 43692  0173EA  0E00               	movlw	0
 43693  0173EC  22DE               	addwfc	postinc2,f,c
 43694  0173EE  22DE               	addwfc	postinc2,f,c
 43695                           
 43696                           ;stkvar	_b @ sp[(-13)+-4]
 43697  0173F0  0EEF               	movlw	-17
 43698  0173F2  006F FF8C  F035    	movff	plusw1,btemp+11
 43699                           
 43700                           ;stkvar	_a @ sp[(-13)+-8]
 43701  0173F8  0EEC               	movlw	236
 43702  0173FA  24E1               	addwf	fsr1l,w,c
 43703  0173FC  6ED9               	movwf	fsr2l,c
 43704  0173FE  0EFF               	movlw	255
 43705  017400  20E2               	addwfc	fsr1h,w,c
 43706  017402  6EDA               	movwf	fsr2h,c
 43707  017404  50DF               	movf	indf2,w,c
 43708  017406  0235               	mulwf	(btemp+11)^0,c
 43709                           
 43710                           ;stkvar	_temp @ sp[(-13)+8]
 43711  017408  0EFB               	movlw	-5
 43712  01740A  006F FFCF FFE3     	movff	prodl,plusw1
 43713  017410  0EFC               	movlw	-4
 43714  017412  006F FFD3 FFE3     	movff	prodh,plusw1
 43715                           
 43716                           ;stkvar	_temp @ sp[(-13)+8]
 43717  017418  0EFB               	movlw	-5
 43718  01741A  006F FF8C  F034    	movff	plusw1,btemp+10
 43719  017420  0EFC               	movlw	-4
 43720  017422  006F FF8C  F035    	movff	plusw1,btemp+11
 43721                           
 43722                           ;stkvar	_grs @ sp[(-13)+4]
 43723  017428  50E1               	movf	fsr1l,w,c
 43724  01742A  0FF7               	addlw	-9
 43725  01742C  6ED9               	movwf	fsr2l,c
 43726  01742E  50E2               	movf	fsr1h,w,c
 43727  017430  6EDA               	movwf	fsr2h,c
 43728  017432  0EFF               	movlw	255
 43729  017434  22DA               	addwfc	fsr2h,f,c
 43730  017436  5034               	movf	(btemp+10)^0,w,c
 43731  017438  26DE               	addwf	postinc2,f,c
 43732  01743A  5035               	movf	(btemp+11)^0,w,c
 43733  01743C  22DE               	addwfc	postinc2,f,c
 43734  01743E  0E00               	movlw	0
 43735  017440  22DE               	addwfc	postinc2,f,c
 43736  017442  22DE               	addwfc	postinc2,f,c
 43737                           
 43738                           ;stkvar	_grs @ sp[(-13)+4]
 43739  017444  50E1               	movf	fsr1l,w,c
 43740  017446  0FF7               	addlw	-9
 43741  017448  6ED9               	movwf	fsr2l,c
 43742  01744A  50E2               	movf	fsr1h,w,c
 43743  01744C  6EDA               	movwf	fsr2h,c
 43744  01744E  0EFF               	movlw	255
 43745  017450  22DA               	addwfc	fsr2h,f,c
 43746  017452  0E08               	movlw	8
 43747  017454                     u8745:
 43748  017454  90D8               	bcf	status,0,c
 43749  017456  36DE               	rlcf	postinc2,f,c
 43750  017458  36DE               	rlcf	postinc2,f,c
 43751  01745A  36DE               	rlcf	postinc2,f,c
 43752  01745C  36DD               	rlcf	postdec2,f,c
 43753  01745E  52DD               	movf	postdec2,f,c
 43754  017460  52DD               	movf	postdec2,f,c
 43755  017462  2EE8               	decfsz	wreg,f,c
 43756  017464  D7F7               	goto	u8745
 43757                           
 43758                           ;stkvar	_b @ sp[(-13)+-4]
 43759  017466  0EEF               	movlw	-17
 43760  017468  006F FF8C  F035    	movff	plusw1,btemp+11
 43761                           
 43762                           ;stkvar	_a @ sp[(-13)+-8]
 43763  01746E  0EEB               	movlw	-21
 43764  017470  50E3               	movf	plusw1,w,c
 43765  017472  0235               	mulwf	(btemp+11)^0,c
 43766                           
 43767                           ;stkvar	_temp @ sp[(-13)+8]
 43768  017474  0EFB               	movlw	-5
 43769  017476  006F FFCF FFE3     	movff	prodl,plusw1
 43770  01747C  0EFC               	movlw	-4
 43771  01747E  006F FFD3 FFE3     	movff	prodh,plusw1
 43772                           
 43773                           ;stkvar	_temp @ sp[(-13)+8]
 43774  017484  0EFB               	movlw	-5
 43775  017486  006F FF8C  F034    	movff	plusw1,btemp+10
 43776  01748C  0EFC               	movlw	-4
 43777  01748E  006F FF8C  F035    	movff	plusw1,btemp+11
 43778                           
 43779                           ;stkvar	_grs @ sp[(-13)+4]
 43780  017494  50E1               	movf	fsr1l,w,c
 43781  017496  0FF7               	addlw	-9
 43782  017498  6ED9               	movwf	fsr2l,c
 43783  01749A  50E2               	movf	fsr1h,w,c
 43784  01749C  6EDA               	movwf	fsr2h,c
 43785  01749E  0EFF               	movlw	255
 43786  0174A0  22DA               	addwfc	fsr2h,f,c
 43787  0174A2  5034               	movf	(btemp+10)^0,w,c
 43788  0174A4  26DE               	addwf	postinc2,f,c
 43789  0174A6  5035               	movf	(btemp+11)^0,w,c
 43790  0174A8  22DE               	addwfc	postinc2,f,c
 43791  0174AA  0E00               	movlw	0
 43792  0174AC  22DE               	addwfc	postinc2,f,c
 43793  0174AE  22DE               	addwfc	postinc2,f,c
 43794                           
 43795                           ;stkvar	_b @ sp[(-13)+-4]
 43796  0174B0  0EF0               	movlw	240
 43797  0174B2  24E1               	addwf	fsr1l,w,c
 43798  0174B4  6ED9               	movwf	fsr2l,c
 43799  0174B6  0EFF               	movlw	255
 43800  0174B8  20E2               	addwfc	fsr1h,w,c
 43801  0174BA  6EDA               	movwf	fsr2h,c
 43802  0174BC  50DF               	movf	indf2,w,c
 43803  0174BE  6E35               	movwf	(btemp+11)^0,c
 43804                           
 43805                           ;stkvar	_a @ sp[(-13)+-8]
 43806  0174C0  0EED               	movlw	237
 43807  0174C2  24E1               	addwf	fsr1l,w,c
 43808  0174C4  6ED9               	movwf	fsr2l,c
 43809  0174C6  0EFF               	movlw	255
 43810  0174C8  20E2               	addwfc	fsr1h,w,c
 43811  0174CA  6EDA               	movwf	fsr2h,c
 43812  0174CC  50DF               	movf	indf2,w,c
 43813  0174CE  0235               	mulwf	(btemp+11)^0,c
 43814                           
 43815                           ;stkvar	_temp @ sp[(-13)+8]
 43816  0174D0  0EFB               	movlw	-5
 43817  0174D2  006F FFCF FFE3     	movff	prodl,plusw1
 43818  0174D8  0EFC               	movlw	-4
 43819  0174DA  006F FFD3 FFE3     	movff	prodh,plusw1
 43820                           
 43821                           ;stkvar	_temp @ sp[(-13)+8]
 43822  0174E0  0EFB               	movlw	-5
 43823  0174E2  006F FF8C  F034    	movff	plusw1,btemp+10
 43824  0174E8  0EFC               	movlw	-4
 43825  0174EA  006F FF8C  F035    	movff	plusw1,btemp+11
 43826                           
 43827                           ;stkvar	_prod @ sp[(-13)+0]
 43828  0174F0  50E1               	movf	fsr1l,w,c
 43829  0174F2  0FF3               	addlw	-13
 43830  0174F4  6ED9               	movwf	fsr2l,c
 43831  0174F6  50E2               	movf	fsr1h,w,c
 43832  0174F8  6EDA               	movwf	fsr2h,c
 43833  0174FA  0EFF               	movlw	255
 43834  0174FC  22DA               	addwfc	fsr2h,f,c
 43835  0174FE  5034               	movf	(btemp+10)^0,w,c
 43836  017500  26DE               	addwf	postinc2,f,c
 43837  017502  5035               	movf	(btemp+11)^0,w,c
 43838  017504  22DE               	addwfc	postinc2,f,c
 43839  017506  0E00               	movlw	0
 43840  017508  22DE               	addwfc	postinc2,f,c
 43841  01750A  22DE               	addwfc	postinc2,f,c
 43842                           
 43843                           ;stkvar	_b @ sp[(-13)+-4]
 43844  01750C  0EF1               	movlw	241
 43845  01750E  24E1               	addwf	fsr1l,w,c
 43846  017510  6ED9               	movwf	fsr2l,c
 43847  017512  0EFF               	movlw	255
 43848  017514  20E2               	addwfc	fsr1h,w,c
 43849  017516  6EDA               	movwf	fsr2h,c
 43850  017518  50DF               	movf	indf2,w,c
 43851  01751A  6E35               	movwf	(btemp+11)^0,c
 43852                           
 43853                           ;stkvar	_a @ sp[(-13)+-8]
 43854  01751C  0EEC               	movlw	236
 43855  01751E  24E1               	addwf	fsr1l,w,c
 43856  017520  6ED9               	movwf	fsr2l,c
 43857  017522  0EFF               	movlw	255
 43858  017524  20E2               	addwfc	fsr1h,w,c
 43859  017526  6EDA               	movwf	fsr2h,c
 43860  017528  50DF               	movf	indf2,w,c
 43861  01752A  0235               	mulwf	(btemp+11)^0,c
 43862                           
 43863                           ;stkvar	_temp @ sp[(-13)+8]
 43864  01752C  0EFB               	movlw	-5
 43865  01752E  006F FFCF FFE3     	movff	prodl,plusw1
 43866  017534  0EFC               	movlw	-4
 43867  017536  006F FFD3 FFE3     	movff	prodh,plusw1
 43868                           
 43869                           ;stkvar	_temp @ sp[(-13)+8]
 43870  01753C  0EFB               	movlw	-5
 43871  01753E  006F FF8C  F034    	movff	plusw1,btemp+10
 43872  017544  0EFC               	movlw	-4
 43873  017546  006F FF8C  F035    	movff	plusw1,btemp+11
 43874                           
 43875                           ;stkvar	_prod @ sp[(-13)+0]
 43876  01754C  50E1               	movf	fsr1l,w,c
 43877  01754E  0FF3               	addlw	-13
 43878  017550  6ED9               	movwf	fsr2l,c
 43879  017552  50E2               	movf	fsr1h,w,c
 43880  017554  6EDA               	movwf	fsr2h,c
 43881  017556  0EFF               	movlw	255
 43882  017558  22DA               	addwfc	fsr2h,f,c
 43883  01755A  5034               	movf	(btemp+10)^0,w,c
 43884  01755C  26DE               	addwf	postinc2,f,c
 43885  01755E  5035               	movf	(btemp+11)^0,w,c
 43886  017560  22DE               	addwfc	postinc2,f,c
 43887  017562  0E00               	movlw	0
 43888  017564  22DE               	addwfc	postinc2,f,c
 43889  017566  22DE               	addwfc	postinc2,f,c
 43890                           
 43891                           ;stkvar	_b @ sp[(-13)+-4]
 43892  017568  0EF1               	movlw	241
 43893  01756A  24E1               	addwf	fsr1l,w,c
 43894  01756C  6ED9               	movwf	fsr2l,c
 43895  01756E  0EFF               	movlw	255
 43896  017570  20E2               	addwfc	fsr1h,w,c
 43897  017572  6EDA               	movwf	fsr2h,c
 43898  017574  50DF               	movf	indf2,w,c
 43899  017576  6E35               	movwf	(btemp+11)^0,c
 43900                           
 43901                           ;stkvar	_a @ sp[(-13)+-8]
 43902  017578  0EED               	movlw	237
 43903  01757A  24E1               	addwf	fsr1l,w,c
 43904  01757C  6ED9               	movwf	fsr2l,c
 43905  01757E  0EFF               	movlw	255
 43906  017580  20E2               	addwfc	fsr1h,w,c
 43907  017582  6EDA               	movwf	fsr2h,c
 43908  017584  50DF               	movf	indf2,w,c
 43909  017586  0235               	mulwf	(btemp+11)^0,c
 43910                           
 43911                           ;stkvar	_temp @ sp[(-13)+8]
 43912  017588  0EFB               	movlw	-5
 43913  01758A  006F FFCF FFE3     	movff	prodl,plusw1
 43914  017590  0EFC               	movlw	-4
 43915  017592  006F FFD3 FFE3     	movff	prodh,plusw1
 43916                           
 43917                           ;stkvar	_temp @ sp[(-13)+8]
 43918  017598  0EFB               	movlw	-5
 43919  01759A  006F FF8C  F034    	movff	plusw1,btemp+10
 43920  0175A0  0EFC               	movlw	-4
 43921  0175A2  006F FF8C  F035    	movff	plusw1,btemp+11
 43922  0175A8  5034               	movf	(btemp+10)^0,w,c
 43923  0175AA  6E2E               	movwf	(btemp+4)^0,c
 43924  0175AC  5035               	movf	(btemp+11)^0,w,c
 43925  0175AE  6E2F               	movwf	(btemp+5)^0,c
 43926  0175B0  6A30               	clrf	(btemp+6)^0,c
 43927  0175B2  6A31               	clrf	(btemp+7)^0,c
 43928  0175B4  0060  F0C0  F031   	movff	btemp+6,btemp+7
 43929  0175BA  0060  F0BC  F030   	movff	btemp+5,btemp+6
 43930  0175C0  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 43931  0175C6  6A2E               	clrf	(btemp+4)^0,c
 43932                           
 43933                           ;stkvar	_prod @ sp[(-13)+0]
 43934  0175C8  50E1               	movf	fsr1l,w,c
 43935  0175CA  0FF3               	addlw	-13
 43936  0175CC  6ED9               	movwf	fsr2l,c
 43937  0175CE  50E2               	movf	fsr1h,w,c
 43938  0175D0  6EDA               	movwf	fsr2h,c
 43939  0175D2  0EFF               	movlw	255
 43940  0175D4  22DA               	addwfc	fsr2h,f,c
 43941  0175D6  502E               	movf	(btemp+4)^0,w,c
 43942  0175D8  26DE               	addwf	postinc2,f,c
 43943  0175DA  502F               	movf	(btemp+5)^0,w,c
 43944  0175DC  22DE               	addwfc	postinc2,f,c
 43945  0175DE  5030               	movf	(btemp+6)^0,w,c
 43946  0175E0  22DE               	addwfc	postinc2,f,c
 43947  0175E2  5031               	movf	(btemp+7)^0,w,c
 43948  0175E4  22DE               	addwfc	postinc2,f,c
 43949                           
 43950                           ;stkvar	_prod @ sp[(-13)+0]
 43951  0175E6  50E1               	movf	fsr1l,w,c
 43952  0175E8  0FF3               	addlw	-13
 43953  0175EA  6ED9               	movwf	fsr2l,c
 43954  0175EC  50E2               	movf	fsr1h,w,c
 43955  0175EE  6EDA               	movwf	fsr2h,c
 43956  0175F0  0EFF               	movlw	255
 43957  0175F2  22DA               	addwfc	fsr2h,f,c
 43958                           
 43959                           ;stkvar	_grs @ sp[(-13)+4]
 43960  0175F4  0EFA               	movlw	250
 43961  0175F6  24E1               	addwf	fsr1l,w,c
 43962  0175F8  6EE9               	movwf	fsr0l,c
 43963  0175FA  0EFF               	movlw	255
 43964  0175FC  20E2               	addwfc	fsr1h,w,c
 43965  0175FE  6EEA               	movwf	fsr0h,c
 43966  017600  50EF               	movf	indf0,w,c
 43967  017602  26DE               	addwf	postinc2,f,c
 43968  017604  0E00               	movlw	0
 43969  017606  22DE               	addwfc	postinc2,f,c
 43970  017608  22DE               	addwfc	postinc2,f,c
 43971  01760A  22DE               	addwfc	postinc2,f,c
 43972                           
 43973                           ;stkvar	_grs @ sp[(-13)+4]
 43974  01760C  50E1               	movf	fsr1l,w,c
 43975  01760E  0FF7               	addlw	-9
 43976  017610  6ED9               	movwf	fsr2l,c
 43977  017612  50E2               	movf	fsr1h,w,c
 43978  017614  6EDA               	movwf	fsr2h,c
 43979  017616  0EFF               	movlw	255
 43980  017618  22DA               	addwfc	fsr2h,f,c
 43981  01761A  0E08               	movlw	8
 43982  01761C                     u8755:
 43983  01761C  90D8               	bcf	status,0,c
 43984  01761E  36DE               	rlcf	postinc2,f,c
 43985  017620  36DE               	rlcf	postinc2,f,c
 43986  017622  36DE               	rlcf	postinc2,f,c
 43987  017624  36DD               	rlcf	postdec2,f,c
 43988  017626  52DD               	movf	postdec2,f,c
 43989  017628  52DD               	movf	postdec2,f,c
 43990  01762A  2EE8               	decfsz	wreg,f,c
 43991  01762C  D7F7               	goto	u8755
 43992  01762E  0E82               	movlw	130
 43993  017630  6E34               	movwf	(btemp+10)^0,c
 43994  017632  0EFF               	movlw	255
 43995  017634  6E35               	movwf	(btemp+11)^0,c
 43996                           
 43997                           ;stkvar	_bexp @ sp[(-13)+10]
 43998  017636  0EFD               	movlw	-3
 43999  017638  50E3               	movf	plusw1,w,c
 44000  01763A  6E32               	movwf	(btemp+8)^0,c
 44001  01763C  6A33               	clrf	(btemp+9)^0,c
 44002                           
 44003                           ;stkvar	_aexp @ sp[(-13)+11]
 44004  01763E  0EFE               	movlw	-2
 44005  017640  50E3               	movf	plusw1,w,c
 44006  017642  2632               	addwf	(btemp+8)^0,f,c
 44007  017644  0E00               	movlw	0
 44008  017646  2233               	addwfc	(btemp+9)^0,f,c
 44009  017648  5034               	movf	(btemp+10)^0,w,c
 44010  01764A  2632               	addwf	(btemp+8)^0,f,c
 44011  01764C  5035               	movf	(btemp+11)^0,w,c
 44012  01764E  2233               	addwfc	(btemp+9)^0,f,c
 44013                           
 44014                           ;stkvar	_temp @ sp[(-13)+8]
 44015  017650  0EFB               	movlw	-5
 44016  017652  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 44017  017658  0EFC               	movlw	-4
 44018  01765A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 44019  017660  D021               	goto	l10645
 44020  017662                     l10635:
 44021                           
 44022                           ;stkvar	_prod @ sp[(-13)+0]
 44023  017662  90D8               	bcf	status,0,c
 44024  017664  0EF3               	movlw	-13
 44025  017666  36E3               	rlcf	plusw1,f,c
 44026  017668  0EF4               	movlw	-12
 44027  01766A  36E3               	rlcf	plusw1,f,c
 44028  01766C  0EF5               	movlw	-11
 44029  01766E  36E3               	rlcf	plusw1,f,c
 44030  017670  0EF6               	movlw	-10
 44031  017672  36E3               	rlcf	plusw1,f,c
 44032                           
 44033                           ;stkvar	_grs @ sp[(-13)+4]
 44034  017674  0EFA               	movlw	-6
 44035  017676  AEE3               	btfss	plusw1,7,c
 44036  017678  D002               	goto	l10641
 44037                           
 44038                           ;stkvar	_prod @ sp[(-13)+0]
 44039  01767A  0EF3               	movlw	-13
 44040  01767C  80E3               	bsf	plusw1,0,c
 44041  01767E                     l10641:
 44042                           
 44043                           ;stkvar	_grs @ sp[(-13)+4]
 44044  01767E  90D8               	bcf	status,0,c
 44045  017680  0EF7               	movlw	-9
 44046  017682  36E3               	rlcf	plusw1,f,c
 44047  017684  0EF8               	movlw	-8
 44048  017686  36E3               	rlcf	plusw1,f,c
 44049  017688  0EF9               	movlw	-7
 44050  01768A  36E3               	rlcf	plusw1,f,c
 44051  01768C  0EFA               	movlw	-6
 44052  01768E  36E3               	rlcf	plusw1,f,c
 44053                           
 44054                           ;stkvar	_temp @ sp[(-13)+8]
 44055  017690  50E1               	movf	fsr1l,w,c
 44056  017692  0FFB               	addlw	-5
 44057  017694  6ED9               	movwf	fsr2l,c
 44058  017696  50E2               	movf	fsr1h,w,c
 44059  017698  6EDA               	movwf	fsr2h,c
 44060  01769A  0EFF               	movlw	255
 44061  01769C  22DA               	addwfc	fsr2h,f,c
 44062  01769E  06DE               	decf	postinc2,f,c
 44063  0176A0  0E00               	movlw	0
 44064  0176A2  5ADD               	subwfb	postdec2,f,c
 44065  0176A4                     l10645:
 44066                           
 44067                           ;stkvar	_prod @ sp[(-13)+0]
 44068  0176A4  0EF5               	movlw	-11
 44069  0176A6  AEE3               	btfss	plusw1,7,c
 44070  0176A8  D7DC               	goto	l10635
 44071                           
 44072                           ;stkvar	_aexp @ sp[(-13)+11]
 44073  0176AA  0EFE               	movlw	-2
 44074  0176AC  6AE3               	clrf	plusw1,c
 44075                           
 44076                           ;stkvar	_grs @ sp[(-13)+4]
 44077  0176AE  0EFA               	movlw	-6
 44078  0176B0  AEE3               	btfss	plusw1,7,c
 44079  0176B2  D020               	goto	l10659
 44080                           
 44081                           ;stkvar	_grs @ sp[(-13)+4]
 44082  0176B4  50E1               	movf	fsr1l,w,c
 44083  0176B6  0FF7               	addlw	-9
 44084  0176B8  6ED9               	movwf	fsr2l,c
 44085  0176BA  50E2               	movf	fsr1h,w,c
 44086  0176BC  6EDA               	movwf	fsr2h,c
 44087  0176BE  0EFF               	movlw	255
 44088  0176C0  22DA               	addwfc	fsr2h,f,c
 44089  0176C2  0EFF               	movlw	255
 44090  0176C4  14DE               	andwf	postinc2,w,c
 44091  0176C6  6E32               	movwf	(btemp+8)^0,c
 44092  0176C8  0EFF               	movlw	255
 44093  0176CA  14DE               	andwf	postinc2,w,c
 44094  0176CC  6E33               	movwf	(btemp+9)^0,c
 44095  0176CE  0EFF               	movlw	255
 44096  0176D0  14DE               	andwf	postinc2,w,c
 44097  0176D2  6E34               	movwf	(btemp+10)^0,c
 44098  0176D4  0E7F               	movlw	127
 44099  0176D6  14DE               	andwf	postinc2,w,c
 44100  0176D8  6E35               	movwf	(btemp+11)^0,c
 44101  0176DA  5032               	movf	(btemp+8)^0,w,c
 44102  0176DC  1033               	iorwf	(btemp+9)^0,w,c
 44103  0176DE  1034               	iorwf	(btemp+10)^0,w,c
 44104  0176E0  1035               	iorwf	(btemp+11)^0,w,c
 44105  0176E2  B4D8               	btfsc	status,2,c
 44106  0176E4  D004               	goto	l10655
 44107  0176E6                     u8790:
 44108                           
 44109                           ;stkvar	_aexp @ sp[(-13)+11]
 44110  0176E6  0EFE               	movlw	-2
 44111  0176E8  6AE3               	clrf	plusw1,c
 44112  0176EA  2AE3               	incf	plusw1,f,c
 44113  0176EC  D003               	goto	l10659
 44114  0176EE                     l10655:
 44115                           
 44116                           ;stkvar	_prod @ sp[(-13)+0]
 44117  0176EE  0EF3               	movlw	-13
 44118  0176F0  B0E3               	btfsc	plusw1,0,c
 44119  0176F2  D7F9               	goto	u8790
 44120  0176F4                     l10659:
 44121                           
 44122                           ;stkvar	_aexp @ sp[(-13)+11]
 44123  0176F4  0EFE               	movlw	-2
 44124  0176F6  50E3               	movf	plusw1,w,c
 44125  0176F8  B4D8               	btfsc	status,2,c
 44126  0176FA  D036               	goto	l10669
 44127                           
 44128                           ;stkvar	_prod @ sp[(-13)+0]
 44129  0176FC  50E1               	movf	fsr1l,w,c
 44130  0176FE  0FF3               	addlw	-13
 44131  017700  6ED9               	movwf	fsr2l,c
 44132  017702  50E2               	movf	fsr1h,w,c
 44133  017704  6EDA               	movwf	fsr2h,c
 44134  017706  0EFF               	movlw	255
 44135  017708  22DA               	addwfc	fsr2h,f,c
 44136  01770A  2ADE               	incf	postinc2,f,c
 44137  01770C  0E00               	movlw	0
 44138  01770E  22DE               	addwfc	postinc2,f,c
 44139  017710  22DE               	addwfc	postinc2,f,c
 44140  017712  22DE               	addwfc	postinc2,f,c
 44141                           
 44142                           ;stkvar	_prod @ sp[(-13)+0]
 44143  017714  0EF6               	movlw	-10
 44144  017716  A0E3               	btfss	plusw1,0,c
 44145  017718  D027               	goto	l10669
 44146  01771A  0E01               	movlw	1
 44147  01771C  6E35               	movwf	(btemp+11)^0,c
 44148                           
 44149                           ;stkvar	_prod @ sp[(-13)+0]
 44150  01771E  50E1               	movf	fsr1l,w,c
 44151  017720  0FF3               	addlw	-13
 44152  017722  6ED9               	movwf	fsr2l,c
 44153  017724  50E2               	movf	fsr1h,w,c
 44154  017726  6EDA               	movwf	fsr2h,c
 44155  017728  0EFF               	movlw	255
 44156  01772A  22DA               	addwfc	fsr2h,f,c
 44157  01772C  2835               	incf	(btemp+11)^0,w,c
 44158  01772E  52DE               	movf	postinc2,f,c
 44159  017730  D008               	goto	u8830
 44160  017732                     u8835:
 44161  017732  52DE               	movf	postinc2,f,c
 44162  017734  90D8               	bcf	status,0,c
 44163  017736  BEDC               	btfsc	preinc2,7,c
 44164  017738  80D8               	bsf	status,0,c
 44165  01773A  32DD               	rrcf	postdec2,f,c
 44166  01773C  32DD               	rrcf	postdec2,f,c
 44167  01773E  32DD               	rrcf	postdec2,f,c
 44168  017740  32DE               	rrcf	postinc2,f,c
 44169  017742                     u8830:
 44170  017742  2EE8               	decfsz	wreg,f,c
 44171  017744  D7F6               	goto	u8835
 44172                           
 44173                           ;stkvar	_temp @ sp[(-13)+8]
 44174  017746  0EFB               	movlw	-5
 44175  017748  50E3               	movf	plusw1,w,c
 44176  01774A  0F01               	addlw	1
 44177  01774C  6E2A               	movwf	btemp^0,c
 44178  01774E  0EFB               	movlw	-5
 44179  017750  0060  F0AB  FFE3   	movff	btemp,plusw1
 44180  017756  6A2A               	clrf	btemp^0,c
 44181  017758  0EFC               	movlw	-4
 44182  01775A  50E3               	movf	plusw1,w,c
 44183  01775C  202A               	addwfc	btemp^0,w,c
 44184  01775E  6E2A               	movwf	btemp^0,c
 44185  017760  0EFC               	movlw	-4
 44186  017762  0060  F0AB  FFE3   	movff	btemp,plusw1
 44187  017768                     l10669:
 44188                           
 44189                           ;stkvar	_temp @ sp[(-13)+8]
 44190  017768  0EFC               	movlw	-4
 44191  01776A  BEE3               	btfsc	plusw1,7,c
 44192  01776C  D020               	goto	l10673
 44193  01776E  0EFC               	movlw	-4
 44194  017770  50E3               	movf	plusw1,w,c
 44195  017772  E104               	bnz	u8840
 44196  017774  0EFB               	movlw	-5
 44197  017776  28E3               	incf	plusw1,w,c
 44198  017778  A0D8               	btfss	status,0,c
 44199  01777A  D019               	goto	l10673
 44200  01777C                     u8840:
 44201  01777C  0E00               	movlw	0
 44202  01777E  6E32               	movwf	(btemp+8)^0,c
 44203  017780  0E00               	movlw	0
 44204  017782  6E33               	movwf	(btemp+9)^0,c
 44205  017784  0E80               	movlw	128
 44206  017786  6E34               	movwf	(btemp+10)^0,c
 44207  017788  0E7F               	movlw	127
 44208  01778A  6E35               	movwf	(btemp+11)^0,c
 44209                           
 44210                           ;stkvar	_prod @ sp[(-13)+0]
 44211  01778C  0EF3               	movlw	-13
 44212  01778E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 44213  017794  0EF4               	movlw	-12
 44214  017796  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 44215  01779C  0EF5               	movlw	-11
 44216  01779E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 44217  0177A4  0EF6               	movlw	-10
 44218  0177A6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 44219  0177AC  D044               	goto	l10689
 44220  0177AE                     l10673:
 44221                           
 44222                           ;stkvar	_temp @ sp[(-13)+8]
 44223  0177AE  0EFC               	movlw	-4
 44224  0177B0  BEE3               	btfsc	plusw1,7,c
 44225  0177B2  D007               	goto	u8850
 44226  0177B4  0EFC               	movlw	-4
 44227  0177B6  50E3               	movf	plusw1,w,c
 44228  0177B8  E10F               	bnz	l10679
 44229  0177BA  0EFB               	movlw	-5
 44230  0177BC  04E3               	decf	plusw1,w,c
 44231  0177BE  B0D8               	btfsc	status,0,c
 44232  0177C0  D00B               	goto	l10679
 44233  0177C2                     u8850:
 44234                           
 44235                           ;stkvar	_prod @ sp[(-13)+0]
 44236  0177C2  0EF3               	movlw	-13
 44237  0177C4  6AE3               	clrf	plusw1,c
 44238  0177C6  0EF4               	movlw	-12
 44239  0177C8  6AE3               	clrf	plusw1,c
 44240  0177CA  0EF5               	movlw	-11
 44241  0177CC  6AE3               	clrf	plusw1,c
 44242  0177CE  0EF6               	movlw	-10
 44243  0177D0  6AE3               	clrf	plusw1,c
 44244                           
 44245                           ;stkvar	_sign @ sp[(-13)+12]
 44246  0177D2  0EFF               	movlw	-1
 44247  0177D4  6AE3               	clrf	plusw1,c
 44248  0177D6  D02F               	goto	l10689
 44249  0177D8                     l10679:
 44250                           
 44251                           ;stkvar	_temp @ sp[(-13)+8]
 44252                           ;stkvar	_bexp @ sp[(-13)+10]
 44253  0177D8  0EFB               	movlw	-5
 44254  0177DA  006F FF8C  F02A    	movff	plusw1,btemp
 44255  0177E0  0EFD               	movlw	-3
 44256  0177E2  0060  F0AB  FFE3   	movff	btemp,plusw1
 44257                           
 44258                           ;stkvar	_prod @ sp[(-13)+0]
 44259  0177E8  50E1               	movf	fsr1l,w,c
 44260  0177EA  0FF3               	addlw	-13
 44261  0177EC  6ED9               	movwf	fsr2l,c
 44262  0177EE  50E2               	movf	fsr1h,w,c
 44263  0177F0  6EDA               	movwf	fsr2h,c
 44264  0177F2  0EFF               	movlw	255
 44265  0177F4  22DA               	addwfc	fsr2h,f,c
 44266  0177F6  0EFF               	movlw	255
 44267  0177F8  16DE               	andwf	postinc2,f,c
 44268  0177FA  0EFF               	movlw	255
 44269  0177FC  16DE               	andwf	postinc2,f,c
 44270  0177FE  0E7F               	movlw	127
 44271  017800  16DE               	andwf	postinc2,f,c
 44272  017802  0E00               	movlw	0
 44273  017804  16DE               	andwf	postinc2,f,c
 44274                           
 44275                           ;stkvar	_bexp @ sp[(-13)+10]
 44276  017806  0EFD               	movlw	-3
 44277  017808  A0E3               	btfss	plusw1,0,c
 44278  01780A  D008               	goto	l10687
 44279                           
 44280                           ;stkvar	_prod @ sp[(-13)+0]
 44281  01780C  0EF5               	movlw	245
 44282  01780E  24E1               	addwf	fsr1l,w,c
 44283  017810  6ED9               	movwf	fsr2l,c
 44284  017812  0EFF               	movlw	255
 44285  017814  20E2               	addwfc	fsr1h,w,c
 44286  017816  6EDA               	movwf	fsr2h,c
 44287  017818  0E00               	movlw	0
 44288  01781A  8EDB               	bsf	plusw2,7,c
 44289  01781C                     l10687:
 44290                           
 44291                           ;stkvar	_prod @ sp[(-13)+0]
 44292  01781C  0EF6               	movlw	246
 44293  01781E  24E1               	addwf	fsr1l,w,c
 44294  017820  6ED9               	movwf	fsr2l,c
 44295  017822  0EFF               	movlw	255
 44296  017824  20E2               	addwfc	fsr1h,w,c
 44297  017826  6EDA               	movwf	fsr2h,c
 44298                           
 44299                           ;stkvar	_bexp @ sp[(-13)+10]
 44300  017828  0EFD               	movlw	-3
 44301  01782A  006F FF8C  F035    	movff	plusw1,btemp+11
 44302  017830  90D8               	bcf	status,0,c
 44303  017832  3035               	rrcf	(btemp+11)^0,w,c
 44304  017834  6EDF               	movwf	indf2,c
 44305  017836                     l10689:
 44306                           
 44307                           ;stkvar	_sign @ sp[(-13)+12]
 44308  017836  0EFF               	movlw	-1
 44309  017838  006F FF8C  F035    	movff	plusw1,btemp+11
 44310                           
 44311                           ;stkvar	_prod @ sp[(-13)+0]
 44312  01783E  0EF6               	movlw	246
 44313  017840  24E1               	addwf	fsr1l,w,c
 44314  017842  6ED9               	movwf	fsr2l,c
 44315  017844  0EFF               	movlw	255
 44316  017846  20E2               	addwfc	fsr1h,w,c
 44317  017848  6EDA               	movwf	fsr2h,c
 44318  01784A  5035               	movf	(btemp+11)^0,w,c
 44319  01784C  12DF               	iorwf	indf2,f,c
 44320                           
 44321                           ;stkvar	_prod @ sp[(-13)+0]
 44322  01784E  0EF3               	movlw	-13
 44323  017850  006F FF8C  F02A    	movff	plusw1,btemp
 44324  017856  0EF4               	movlw	-12
 44325  017858  006F FF8C  F02B    	movff	plusw1,btemp+1
 44326  01785E  0EF5               	movlw	-11
 44327  017860  006F FF8C  F02C    	movff	plusw1,btemp+2
 44328  017866  0EF6               	movlw	-10
 44329  017868  006F FF8C  F02D    	movff	plusw1,btemp+3
 44330  01786E                     l3351:
 44331                           
 44332                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 44333  01786E  0EEB               	movlw	235
 44334  017870  26E1               	addwf	fsr1l,f,c
 44335  017872  0EFF               	movlw	255
 44336  017874  22E2               	addwfc	fsr1h,f,c
 44337  017876  0012               	return		;funcret
 44338  017878                     __end_of___flmul:
 44339                           	opt callstack 0
 44340                           
 44341 ;; *************** function _SYSTEM_Initialize *****************
 44342 ;; Defined at:
 44343 ;;		line 50 in file "mcc_generated_files/mcc.c"
 44344 ;; Parameters:    Size  Location     Type
 44345 ;;		None
 44346 ;; Auto vars:     Size  Location     Type
 44347 ;;		None
 44348 ;; Return value:  Size  Location     Type
 44349 ;;                  1  [STACK] void 
 44350 ;; Registers used:
 44351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 44352 ;; Tracked objects:
 44353 ;;		On entry : 0/0
 44354 ;;		On exit  : 3F/3C
 44355 ;;		Unchanged: 0/0
 44356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44361 ;;Total ram usage:        0 bytes
 44362 ;; Hardware stack levels used:    1
 44363 ;; Hardware stack levels required when called:   17
 44364 ;; This function calls:
 44365 ;;		_ADCC_Initialize
 44366 ;;		_CLKREF_Initialize
 44367 ;;		_CRC_Initialize
 44368 ;;		_DMA1_Initialize
 44369 ;;		_DMA2_Initialize
 44370 ;;		_EXT_INT_Initialize
 44371 ;;		_FVR_Initialize
 44372 ;;		_INTERRUPT_Initialize
 44373 ;;		_OSCILLATOR_Initialize
 44374 ;;		_PIN_MANAGER_Initialize
 44375 ;;		_PMD_Initialize
 44376 ;;		_PWM8_Initialize
 44377 ;;		_SPI1_Initialize
 44378 ;;		_TMR2_Initialize
 44379 ;;		_TMR3_Initialize
 44380 ;;		_TMR5_Initialize
 44381 ;;		_TMR6_Initialize
 44382 ;;		_UART1_Initialize
 44383 ;;		_UART2_Initialize
 44384 ;; This function is called by:
 44385 ;;		_main
 44386 ;; This function uses a reentrant model
 44387 ;;
 44388                           
 44389                           	psect	text157
 44390  0020C2                     __ptext157:
 44391                           	opt callstack 0
 44392  0020C2                     _SYSTEM_Initialize:
 44393                           	opt callstack 13
 44394                           
 44395                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 44396                           
 44397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44398                           ;incstack = 0
 44399  0020C2  ECDE  F00D         	call	_INTERRUPT_Initialize	;wreg free
 44400                           
 44401                           ; BSR set to: 57
 44402                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 44403  0020C6  EC19  F017         	call	_PMD_Initialize	;wreg free
 44404                           
 44405                           ; BSR set to: 57
 44406                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 44407  0020CA  EC0C  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
 44408                           
 44409                           ; BSR set to: 58
 44410                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 44411  0020CE  EC0E  F017         	call	_OSCILLATOR_Initialize	;wreg free
 44412                           
 44413                           ; BSR set to: 57
 44414                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 44415  0020D2  ECAD  F017         	call	_FVR_Initialize	;wreg free
 44416                           
 44417                           ; BSR set to: 62
 44418                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 44419  0020D6  EC55  F00A         	call	_CRC_Initialize	;wreg free
 44420                           
 44421                           ; BSR set to: 0
 44422                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 44423  0020DA  EC0C  F00D         	call	_ADCC_Initialize	;wreg free
 44424                           
 44425                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 44426  0020DE  ECE1  F016         	call	_TMR2_Initialize	;wreg free
 44427                           
 44428                           ; BSR set to: 57
 44429                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 44430  0020E2  EC03  F017         	call	_PWM8_Initialize	;wreg free
 44431                           
 44432                           ; BSR set to: 63
 44433                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 44434  0020E6  EC80  F013         	call	_EXT_INT_Initialize	;wreg free
 44435                           
 44436                           ; BSR set to: 57
 44437                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 44438  0020EA  EC6C  F014         	call	_TMR6_Initialize	;wreg free
 44439                           
 44440                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 44441  0020EE  EC1B  F011         	call	_TMR3_Initialize	;wreg free
 44442                           
 44443                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 44444  0020F2  ECF7  F010         	call	_TMR5_Initialize	;wreg free
 44445                           
 44446                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 44447  0020F6  ECD3  F010         	call	_UART1_Initialize	;wreg free
 44448                           
 44449                           ; BSR set to: 57
 44450                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 44451  0020FA  ECD7  F00E         	call	_UART2_Initialize	;wreg free
 44452                           
 44453                           ; BSR set to: 57
 44454                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 44455  0020FE  ECF8  F016         	call	_SPI1_Initialize	;wreg free
 44456                           
 44457                           ; BSR set to: 61
 44458                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 44459  002102  EC90  F00F         	call	_DMA2_Initialize	;wreg free
 44460                           
 44461                           ; BSR set to: 59
 44462                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 44463  002106  ECD7  F00C         	call	_DMA1_Initialize	;wreg free
 44464                           
 44465                           ; BSR set to: 59
 44466                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 44467  00210A  EC81  F017         	call	_CLKREF_Initialize	;wreg free
 44468                           
 44469                           ; BSR set to: 60
 44470                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 44471  00210E  0012               	return		;funcret
 44472  002110                     __end_of_SYSTEM_Initialize:
 44473                           	opt callstack 0
 44474                           
 44475 ;; *************** function _UART2_Initialize *****************
 44476 ;; Defined at:
 44477 ;;		line 78 in file "mcc_generated_files/uart2.c"
 44478 ;; Parameters:    Size  Location     Type
 44479 ;;		None
 44480 ;; Auto vars:     Size  Location     Type
 44481 ;;		None
 44482 ;; Return value:  Size  Location     Type
 44483 ;;                  1  [STACK] void 
 44484 ;; Registers used:
 44485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44486 ;; Tracked objects:
 44487 ;;		On entry : 3F/39
 44488 ;;		On exit  : 3F/39
 44489 ;;		Unchanged: 0/0
 44490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44495 ;;Total ram usage:        0 bytes
 44496 ;; Hardware stack levels used:    1
 44497 ;; Hardware stack levels required when called:   16
 44498 ;; This function calls:
 44499 ;;		_UART2_SetRxInterruptHandler
 44500 ;;		_UART2_SetTxInterruptHandler
 44501 ;; This function is called by:
 44502 ;;		_SYSTEM_Initialize
 44503 ;; This function uses a reentrant model
 44504 ;;
 44505                           
 44506                           	psect	text158
 44507  001DAE                     __ptext158:
 44508                           	opt callstack 0
 44509  001DAE                     _UART2_Initialize:
 44510                           	opt callstack 13
 44511                           
 44512                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 44513                           
 44514                           ; BSR set to: 60
 44515                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44516                           ;incstack = 0
 44517  001DAE  0139               	movlb	57	; () banked
 44518  001DB0  9596               	bcf	150,2,b	;volatile
 44519                           
 44520                           ; BSR set to: 57
 44521                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 44522  001DB2  0EDC               	movlw	low _UART2_Receive_ISR
 44523  001DB4  6EE6               	movwf	postinc1,c
 44524  001DB6  0E2C               	movlw	high _UART2_Receive_ISR
 44525  001DB8  6EE6               	movwf	postinc1,c
 44526  001DBA  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 44527  001DBC  6EE6               	movwf	postinc1,c
 44528  001DBE  ECBD  F014         	call	_UART2_SetRxInterruptHandler	;wreg free
 44529                           
 44530                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 44531  001DC2  0139               	movlb	57	; () banked
 44532  001DC4  9796               	bcf	150,3,b	;volatile
 44533                           
 44534                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 44535  001DC6  0EAC               	movlw	low _UART2_Transmit_ISR
 44536  001DC8  6EE6               	movwf	postinc1,c
 44537  001DCA  0E28               	movlw	high _UART2_Transmit_ISR
 44538  001DCC  6EE6               	movwf	postinc1,c
 44539  001DCE  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 44540  001DD0  6EE6               	movwf	postinc1,c
 44541  001DD2  ECA9  F014         	call	_UART2_SetTxInterruptHandler	;wreg free
 44542                           
 44543                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 44544  001DD6  013D               	movlb	61	; () banked
 44545  001DD8  6BD4               	clrf	212,b	;volatile
 44546                           
 44547                           ; BSR set to: 61
 44548                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 44549  001DDA  6BD6               	clrf	214,b	;volatile
 44550                           
 44551                           ; BSR set to: 61
 44552                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 44553  001DDC  6BD8               	clrf	216,b	;volatile
 44554                           
 44555                           ; BSR set to: 61
 44556                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 44557  001DDE  0EB0               	movlw	176
 44558  001DE0  6FDA               	movwf	218,b	;volatile
 44559                           
 44560                           ; BSR set to: 61
 44561                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 44562  001DE2  0E80               	movlw	128
 44563  001DE4  6FDB               	movwf	219,b	;volatile
 44564                           
 44565                           ; BSR set to: 61
 44566                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 44567  001DE6  6BDC               	clrf	220,b	;volatile
 44568                           
 44569                           ; BSR set to: 61
 44570                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 44571  001DE8  0E82               	movlw	130
 44572  001DEA  6FDD               	movwf	221,b	;volatile
 44573                           
 44574                           ; BSR set to: 61
 44575                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 44576  001DEC  0E06               	movlw	6
 44577  001DEE  6FDE               	movwf	222,b	;volatile
 44578                           
 44579                           ; BSR set to: 61
 44580                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 44581  001DF0  6BDF               	clrf	223,b	;volatile
 44582                           
 44583                           ; BSR set to: 61
 44584                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 44585  001DF2  6BE0               	clrf	224,b	;volatile
 44586                           
 44587                           ; BSR set to: 61
 44588                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 44589  001DF4  6BE1               	clrf	225,b	;volatile
 44590                           
 44591                           ; BSR set to: 61
 44592                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 44593  001DF6  6BE2               	clrf	226,b	;volatile
 44594                           
 44595                           ; BSR set to: 61
 44596                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 44597  001DF8  0100               	movlb	0	; () banked
 44598  001DFA  6BCF               	clrf	_uart2TxHead& (0+255),b	;volatile
 44599                           
 44600                           ; BSR set to: 0
 44601                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 44602  001DFC  6A56               	clrf	_uart2TxTail^0,c	;volatile
 44603                           
 44604                           ; BSR set to: 0
 44605                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 44606  001DFE  0E40               	movlw	64
 44607  001E00  6E55               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 44608                           
 44609                           ; BSR set to: 0
 44610                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 44611  001E02  6A54               	clrf	_uart2RxHead^0,c	;volatile
 44612                           
 44613                           ; BSR set to: 0
 44614                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 44615  001E04  6BCE               	clrf	_uart2RxTail& (0+255),b	;volatile
 44616                           
 44617                           ; BSR set to: 0
 44618                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 44619  001E06  6BCD               	clrf	_uart2RxCount& (0+255),b	;volatile
 44620                           
 44621                           ; BSR set to: 0
 44622                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 44623  001E08  0139               	movlb	57	; () banked
 44624  001E0A  8596               	bsf	150,2,b	;volatile
 44625                           
 44626                           ; BSR set to: 57
 44627                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 44628  001E0C  0012               	return		;funcret
 44629  001E0E                     __end_of_UART2_Initialize:
 44630                           	opt callstack 0
 44631                           
 44632 ;; *************** function _UART2_SetTxInterruptHandler *****************
 44633 ;; Defined at:
 44634 ;;		line 252 in file "mcc_generated_files/uart2.c"
 44635 ;; Parameters:    Size  Location     Type
 44636 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44637 ;;		 -> UART2_Transmit_ISR(1), 
 44638 ;; Auto vars:     Size  Location     Type
 44639 ;;		None
 44640 ;; Return value:  Size  Location     Type
 44641 ;;                  1  [STACK] void 
 44642 ;; Registers used:
 44643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44644 ;; Tracked objects:
 44645 ;;		On entry : 3F/39
 44646 ;;		On exit  : 0/0
 44647 ;;		Unchanged: 0/0
 44648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44653 ;;Total ram usage:        0 bytes
 44654 ;; Hardware stack levels used:    1
 44655 ;; Hardware stack levels required when called:   15
 44656 ;; This function calls:
 44657 ;;		Nothing
 44658 ;; This function is called by:
 44659 ;;		_UART2_Initialize
 44660 ;; This function uses a reentrant model
 44661 ;;
 44662                           
 44663                           	psect	text159
 44664  002952                     __ptext159:
 44665                           	opt callstack 0
 44666  002952                     _UART2_SetTxInterruptHandler:
 44667                           	opt callstack 13
 44668                           
 44669                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 44670                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44671                           
 44672                           ; BSR set to: 57
 44673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44674                           ;incstack = 0
 44675  002952  50E1               	movf	fsr1l,w,c
 44676  002954  0FFD               	addlw	-3
 44677  002956  6ED9               	movwf	fsr2l,c
 44678  002958  50E2               	movf	fsr1h,w,c
 44679  00295A  6EDA               	movwf	fsr2h,c
 44680  00295C  0EFF               	movlw	255
 44681  00295E  22DA               	addwfc	fsr2h,f,c
 44682  002960  006F FF78  F0AA    	movff	postinc2,_UART2_TxInterruptHandler
 44683  002966  006F FF78  F0AB    	movff	postinc2,_UART2_TxInterruptHandler+1
 44684  00296C  006F FF74  F0AC    	movff	postdec2,_UART2_TxInterruptHandler+2
 44685                           
 44686                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44687  002972  52E5               	movf	postdec1,f,c
 44688  002974  52E5               	movf	postdec1,f,c
 44689  002976  52E5               	movf	postdec1,f,c
 44690  002978  0012               	return		;funcret
 44691  00297A                     __end_of_UART2_SetTxInterruptHandler:
 44692                           	opt callstack 0
 44693                           
 44694 ;; *************** function _UART2_SetRxInterruptHandler *****************
 44695 ;; Defined at:
 44696 ;;		line 248 in file "mcc_generated_files/uart2.c"
 44697 ;; Parameters:    Size  Location     Type
 44698 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44699 ;;		 -> UART2_Receive_ISR(1), 
 44700 ;; Auto vars:     Size  Location     Type
 44701 ;;		None
 44702 ;; Return value:  Size  Location     Type
 44703 ;;                  1  [STACK] void 
 44704 ;; Registers used:
 44705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44706 ;; Tracked objects:
 44707 ;;		On entry : 3F/39
 44708 ;;		On exit  : 0/0
 44709 ;;		Unchanged: 0/0
 44710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44715 ;;Total ram usage:        0 bytes
 44716 ;; Hardware stack levels used:    1
 44717 ;; Hardware stack levels required when called:   15
 44718 ;; This function calls:
 44719 ;;		Nothing
 44720 ;; This function is called by:
 44721 ;;		_UART2_Initialize
 44722 ;; This function uses a reentrant model
 44723 ;;
 44724                           
 44725                           	psect	text160
 44726  00297A                     __ptext160:
 44727                           	opt callstack 0
 44728  00297A                     _UART2_SetRxInterruptHandler:
 44729                           	opt callstack 13
 44730                           
 44731                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 44732                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44733                           
 44734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44735                           ;incstack = 0
 44736  00297A  50E1               	movf	fsr1l,w,c
 44737  00297C  0FFD               	addlw	-3
 44738  00297E  6ED9               	movwf	fsr2l,c
 44739  002980  50E2               	movf	fsr1h,w,c
 44740  002982  6EDA               	movwf	fsr2h,c
 44741  002984  0EFF               	movlw	255
 44742  002986  22DA               	addwfc	fsr2h,f,c
 44743  002988  006F FF78  F0AD    	movff	postinc2,_UART2_RxInterruptHandler
 44744  00298E  006F FF78  F0AE    	movff	postinc2,_UART2_RxInterruptHandler+1
 44745  002994  006F FF74  F0AF    	movff	postdec2,_UART2_RxInterruptHandler+2
 44746                           
 44747                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44748  00299A  52E5               	movf	postdec1,f,c
 44749  00299C  52E5               	movf	postdec1,f,c
 44750  00299E  52E5               	movf	postdec1,f,c
 44751  0029A0  0012               	return		;funcret
 44752  0029A2                     __end_of_UART2_SetRxInterruptHandler:
 44753                           	opt callstack 0
 44754                           
 44755 ;; *************** function _UART1_Initialize *****************
 44756 ;; Defined at:
 44757 ;;		line 75 in file "mcc_generated_files/uart1.c"
 44758 ;; Parameters:    Size  Location     Type
 44759 ;;		None
 44760 ;; Auto vars:     Size  Location     Type
 44761 ;;		None
 44762 ;; Return value:  Size  Location     Type
 44763 ;;                  1  [STACK] void 
 44764 ;; Registers used:
 44765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44766 ;; Tracked objects:
 44767 ;;		On entry : 0/39
 44768 ;;		On exit  : 3F/39
 44769 ;;		Unchanged: 0/0
 44770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44775 ;;Total ram usage:        0 bytes
 44776 ;; Hardware stack levels used:    1
 44777 ;; Hardware stack levels required when called:   16
 44778 ;; This function calls:
 44779 ;;		_UART1_SetRxInterruptHandler
 44780 ;; This function is called by:
 44781 ;;		_SYSTEM_Initialize
 44782 ;; This function uses a reentrant model
 44783 ;;
 44784                           
 44785                           	psect	text161
 44786  0021A6                     __ptext161:
 44787                           	opt callstack 0
 44788  0021A6                     _UART1_Initialize:
 44789                           	opt callstack 13
 44790                           
 44791                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 44792                           
 44793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44794                           ;incstack = 0
 44795  0021A6  0139               	movlb	57	; () banked
 44796  0021A8  9793               	bcf	147,3,b	;volatile
 44797                           
 44798                           ; BSR set to: 57
 44799                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 44800  0021AA  0E9A               	movlw	low _UART1_Receive_ISR
 44801  0021AC  6EE6               	movwf	postinc1,c
 44802  0021AE  0E2C               	movlw	high _UART1_Receive_ISR
 44803  0021B0  6EE6               	movwf	postinc1,c
 44804  0021B2  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 44805  0021B4  6EE6               	movwf	postinc1,c
 44806  0021B6  ECD1  F014         	call	_UART1_SetRxInterruptHandler	;wreg free
 44807                           
 44808                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 44809  0021BA  013D               	movlb	61	; () banked
 44810  0021BC  6BEC               	clrf	236,b	;volatile
 44811                           
 44812                           ; BSR set to: 61
 44813                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 44814  0021BE  6BED               	clrf	237,b	;volatile
 44815                           
 44816                           ; BSR set to: 61
 44817                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 44818  0021C0  6BEE               	clrf	238,b	;volatile
 44819                           
 44820                           ; BSR set to: 61
 44821                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 44822  0021C2  6BEF               	clrf	239,b	;volatile
 44823                           
 44824                           ; BSR set to: 61
 44825                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 44826  0021C4  6BF0               	clrf	240,b	;volatile
 44827                           
 44828                           ; BSR set to: 61
 44829                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 44830  0021C6  6BF1               	clrf	241,b	;volatile
 44831                           
 44832                           ; BSR set to: 61
 44833                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 44834  0021C8  0EB0               	movlw	176
 44835  0021CA  6FF2               	movwf	242,b	;volatile
 44836                           
 44837                           ; BSR set to: 61
 44838                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 44839  0021CC  0E80               	movlw	128
 44840  0021CE  6FF3               	movwf	243,b	;volatile
 44841                           
 44842                           ; BSR set to: 61
 44843                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 44844  0021D0  6BF4               	clrf	244,b	;volatile
 44845                           
 44846                           ; BSR set to: 61
 44847                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 44848  0021D2  0E8A               	movlw	138
 44849  0021D4  6FF5               	movwf	245,b	;volatile
 44850                           
 44851                           ; BSR set to: 61
 44852                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 44853  0021D6  6BF6               	clrf	246,b	;volatile
 44854                           
 44855                           ; BSR set to: 61
 44856                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 44857  0021D8  6BF7               	clrf	247,b	;volatile
 44858                           
 44859                           ; BSR set to: 61
 44860                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 44861  0021DA  6BF8               	clrf	248,b	;volatile
 44862                           
 44863                           ; BSR set to: 61
 44864                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 44865  0021DC  6BF9               	clrf	249,b	;volatile
 44866                           
 44867                           ; BSR set to: 61
 44868                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 44869  0021DE  6BFA               	clrf	250,b	;volatile
 44870                           
 44871                           ; BSR set to: 61
 44872                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 44873  0021E0  6A57               	clrf	_uart1RxHead^0,c	;volatile
 44874                           
 44875                           ; BSR set to: 61
 44876                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 44877  0021E2  0100               	movlb	0	; () banked
 44878  0021E4  6BD1               	clrf	_uart1RxTail& (0+255),b	;volatile
 44879                           
 44880                           ; BSR set to: 0
 44881                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 44882  0021E6  6BD0               	clrf	_uart1RxCount& (0+255),b	;volatile
 44883                           
 44884                           ; BSR set to: 0
 44885                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 44886  0021E8  0139               	movlb	57	; () banked
 44887  0021EA  8793               	bsf	147,3,b	;volatile
 44888                           
 44889                           ; BSR set to: 57
 44890                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 44891  0021EC  0012               	return		;funcret
 44892  0021EE                     __end_of_UART1_Initialize:
 44893                           	opt callstack 0
 44894                           
 44895 ;; *************** function _UART1_SetRxInterruptHandler *****************
 44896 ;; Defined at:
 44897 ;;		line 207 in file "mcc_generated_files/uart1.c"
 44898 ;; Parameters:    Size  Location     Type
 44899 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44900 ;;		 -> UART1_Receive_ISR(1), 
 44901 ;; Auto vars:     Size  Location     Type
 44902 ;;		None
 44903 ;; Return value:  Size  Location     Type
 44904 ;;                  1  [STACK] void 
 44905 ;; Registers used:
 44906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44907 ;; Tracked objects:
 44908 ;;		On entry : 3F/39
 44909 ;;		On exit  : 0/0
 44910 ;;		Unchanged: 0/0
 44911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44916 ;;Total ram usage:        0 bytes
 44917 ;; Hardware stack levels used:    1
 44918 ;; Hardware stack levels required when called:   15
 44919 ;; This function calls:
 44920 ;;		Nothing
 44921 ;; This function is called by:
 44922 ;;		_UART1_Initialize
 44923 ;; This function uses a reentrant model
 44924 ;;
 44925                           
 44926                           	psect	text162
 44927  0029A2                     __ptext162:
 44928                           	opt callstack 0
 44929  0029A2                     _UART1_SetRxInterruptHandler:
 44930                           	opt callstack 13
 44931                           
 44932                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 44933                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44934                           
 44935                           ; BSR set to: 57
 44936                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44937                           ;incstack = 0
 44938  0029A2  50E1               	movf	fsr1l,w,c
 44939  0029A4  0FFD               	addlw	-3
 44940  0029A6  6ED9               	movwf	fsr2l,c
 44941  0029A8  50E2               	movf	fsr1h,w,c
 44942  0029AA  6EDA               	movwf	fsr2h,c
 44943  0029AC  0EFF               	movlw	255
 44944  0029AE  22DA               	addwfc	fsr2h,f,c
 44945  0029B0  006F FF78  F0A7    	movff	postinc2,_UART1_RxInterruptHandler
 44946  0029B6  006F FF78  F0A8    	movff	postinc2,_UART1_RxInterruptHandler+1
 44947  0029BC  006F FF74  F0A9    	movff	postdec2,_UART1_RxInterruptHandler+2
 44948                           
 44949                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44950  0029C2  52E5               	movf	postdec1,f,c
 44951  0029C4  52E5               	movf	postdec1,f,c
 44952  0029C6  52E5               	movf	postdec1,f,c
 44953  0029C8  0012               	return		;funcret
 44954  0029CA                     __end_of_UART1_SetRxInterruptHandler:
 44955                           	opt callstack 0
 44956                           
 44957 ;; *************** function _TMR6_Initialize *****************
 44958 ;; Defined at:
 44959 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 44960 ;; Parameters:    Size  Location     Type
 44961 ;;		None
 44962 ;; Auto vars:     Size  Location     Type
 44963 ;;		None
 44964 ;; Return value:  Size  Location     Type
 44965 ;;                  1  [STACK] void 
 44966 ;; Registers used:
 44967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44968 ;; Tracked objects:
 44969 ;;		On entry : 3F/39
 44970 ;;		On exit  : 0/0
 44971 ;;		Unchanged: 0/0
 44972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44977 ;;Total ram usage:        0 bytes
 44978 ;; Hardware stack levels used:    1
 44979 ;; Hardware stack levels required when called:   16
 44980 ;; This function calls:
 44981 ;;		_TMR6_SetInterruptHandler
 44982 ;; This function is called by:
 44983 ;;		_SYSTEM_Initialize
 44984 ;; This function uses a reentrant model
 44985 ;;
 44986                           
 44987                           	psect	text163
 44988  0028D8                     __ptext163:
 44989                           	opt callstack 0
 44990  0028D8                     _TMR6_Initialize:
 44991                           	opt callstack 13
 44992                           
 44993                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 44994                           
 44995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44996                           ;incstack = 0
 44997  0028D8  0E01               	movlw	1
 44998  0028DA  6E96               	movwf	150,c	;volatile
 44999                           
 45000                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 45001  0028DC  6A95               	clrf	149,c	;volatile
 45002                           
 45003                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 45004  0028DE  6A97               	clrf	151,c	;volatile
 45005                           
 45006                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 45007  0028E0  0E7C               	movlw	124
 45008  0028E2  6E93               	movwf	147,c	;volatile
 45009                           
 45010                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 45011  0028E4  6A92               	clrf	146,c	;volatile
 45012                           
 45013                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 45014  0028E6  0139               	movlb	57	; () banked
 45015  0028E8  91A9               	bcf	169,0,b	;volatile
 45016                           
 45017                           ; BSR set to: 57
 45018                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 45019  0028EA  8199               	bsf	153,0,b	;volatile
 45020                           
 45021                           ; BSR set to: 57
 45022                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 45023  0028EC  0E10               	movlw	low _TMR6_DefaultInterruptHandler
 45024  0028EE  6EE6               	movwf	postinc1,c
 45025  0028F0  0E21               	movlw	high _TMR6_DefaultInterruptHandler
 45026  0028F2  6EE6               	movwf	postinc1,c
 45027  0028F4  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 45028  0028F6  6EE6               	movwf	postinc1,c
 45029  0028F8  ECE5  F014         	call	_TMR6_SetInterruptHandler	;wreg free
 45030                           
 45031                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 45032  0028FC  0EE0               	movlw	224
 45033  0028FE  6E94               	movwf	148,c	;volatile
 45034                           
 45035                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45036  002900  0012               	return		;funcret
 45037  002902                     __end_of_TMR6_Initialize:
 45038                           	opt callstack 0
 45039                           
 45040 ;; *************** function _TMR6_SetInterruptHandler *****************
 45041 ;; Defined at:
 45042 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 45043 ;; Parameters:    Size  Location     Type
 45044 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45045 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 45046 ;; Auto vars:     Size  Location     Type
 45047 ;;		None
 45048 ;; Return value:  Size  Location     Type
 45049 ;;                  1  [STACK] void 
 45050 ;; Registers used:
 45051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45052 ;; Tracked objects:
 45053 ;;		On entry : 3F/39
 45054 ;;		On exit  : 0/0
 45055 ;;		Unchanged: 0/0
 45056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45061 ;;Total ram usage:        0 bytes
 45062 ;; Hardware stack levels used:    1
 45063 ;; Hardware stack levels required when called:   15
 45064 ;; This function calls:
 45065 ;;		Nothing
 45066 ;; This function is called by:
 45067 ;;		_TMR6_Initialize
 45068 ;; This function uses a reentrant model
 45069 ;;
 45070                           
 45071                           	psect	text164
 45072  0029CA                     __ptext164:
 45073                           	opt callstack 0
 45074  0029CA                     _TMR6_SetInterruptHandler:
 45075                           	opt callstack 13
 45076                           
 45077                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 45078                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45079                           
 45080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45081                           ;incstack = 0
 45082  0029CA  50E1               	movf	fsr1l,w,c
 45083  0029CC  0FFD               	addlw	-3
 45084  0029CE  6ED9               	movwf	fsr2l,c
 45085  0029D0  50E2               	movf	fsr1h,w,c
 45086  0029D2  6EDA               	movwf	fsr2h,c
 45087  0029D4  0EFF               	movlw	255
 45088  0029D6  22DA               	addwfc	fsr2h,f,c
 45089  0029D8  006F FF78  F09E    	movff	postinc2,_TMR6_InterruptHandler
 45090  0029DE  006F FF78  F09F    	movff	postinc2,_TMR6_InterruptHandler+1
 45091  0029E4  006F FF74  F0A0    	movff	postdec2,_TMR6_InterruptHandler+2
 45092                           
 45093                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45094  0029EA  52E5               	movf	postdec1,f,c
 45095  0029EC  52E5               	movf	postdec1,f,c
 45096  0029EE  52E5               	movf	postdec1,f,c
 45097  0029F0  0012               	return		;funcret
 45098  0029F2                     __end_of_TMR6_SetInterruptHandler:
 45099                           	opt callstack 0
 45100                           
 45101 ;; *************** function _TMR5_Initialize *****************
 45102 ;; Defined at:
 45103 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 45104 ;; Parameters:    Size  Location     Type
 45105 ;;		None
 45106 ;; Auto vars:     Size  Location     Type
 45107 ;;		None
 45108 ;; Return value:  Size  Location     Type
 45109 ;;                  1  [STACK] void 
 45110 ;; Registers used:
 45111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 45112 ;; Tracked objects:
 45113 ;;		On entry : 0/39
 45114 ;;		On exit  : 0/0
 45115 ;;		Unchanged: 0/0
 45116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45121 ;;Total ram usage:        0 bytes
 45122 ;; Hardware stack levels used:    1
 45123 ;; Hardware stack levels required when called:   16
 45124 ;; This function calls:
 45125 ;;		_TMR5_SetInterruptHandler
 45126 ;; This function is called by:
 45127 ;;		_SYSTEM_Initialize
 45128 ;; This function uses a reentrant model
 45129 ;;
 45130                           
 45131                           	psect	text165
 45132  0021EE                     __ptext165:
 45133                           	opt callstack 0
 45134  0021EE                     _TMR5_Initialize:
 45135                           	opt callstack 13
 45136                           
 45137                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 45138                           
 45139                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45140                           ;incstack = 0
 45141  0021EE  6A9B               	clrf	155,c	;volatile
 45142                           
 45143                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 45144  0021F0  6A9C               	clrf	156,c	;volatile
 45145                           
 45146                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 45147  0021F2  0E01               	movlw	1
 45148  0021F4  6E9D               	movwf	157,c	;volatile
 45149                           
 45150                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 45151  0021F6  0E63               	movlw	99
 45152  0021F8  6E99               	movwf	153,c	;volatile
 45153                           
 45154                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 45155  0021FA  0EC0               	movlw	192
 45156  0021FC  6E98               	movwf	152,c	;volatile
 45157                           
 45158                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 45159  0021FE  5098               	movf	152,w,c	;volatile
 45160  002200  006F FE64  F02A    	movff	16281,btemp	;volatile
 45161  002206  6A2B               	clrf	(btemp+1)^0,c
 45162  002208  0060  F0A8  F02B   	movff	btemp,btemp+1
 45163  00220E  6A2A               	clrf	btemp^0,c
 45164  002210  102A               	iorwf	btemp^0,w,c
 45165  002212  0100               	movlb	0	; () banked
 45166  002214  6FC4               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 45167  002216  502B               	movf	(btemp+1)^0,w,c
 45168  002218  6FC5               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 45169                           
 45170                           ; BSR set to: 0
 45171                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 45172  00221A  0139               	movlb	57	; () banked
 45173  00221C  9DA8               	bcf	168,6,b	;volatile
 45174                           
 45175                           ; BSR set to: 57
 45176                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 45177  00221E  8D98               	bsf	152,6,b	;volatile
 45178                           
 45179                           ; BSR set to: 57
 45180                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 45181  002220  0EC0               	movlw	low _TMR5_DefaultInterruptHandler
 45182  002222  6EE6               	movwf	postinc1,c
 45183  002224  0E25               	movlw	high _TMR5_DefaultInterruptHandler
 45184  002226  6EE6               	movwf	postinc1,c
 45185  002228  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 45186  00222A  6EE6               	movwf	postinc1,c
 45187  00222C  ECF9  F014         	call	_TMR5_SetInterruptHandler	;wreg free
 45188                           
 45189                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 45190  002230  0E31               	movlw	49
 45191  002232  6E9A               	movwf	154,c	;volatile
 45192                           
 45193                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45194  002234  0012               	return		;funcret
 45195  002236                     __end_of_TMR5_Initialize:
 45196                           	opt callstack 0
 45197                           
 45198 ;; *************** function _TMR5_SetInterruptHandler *****************
 45199 ;; Defined at:
 45200 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 45201 ;; Parameters:    Size  Location     Type
 45202 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45203 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 45204 ;; Auto vars:     Size  Location     Type
 45205 ;;		None
 45206 ;; Return value:  Size  Location     Type
 45207 ;;                  1  [STACK] void 
 45208 ;; Registers used:
 45209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45210 ;; Tracked objects:
 45211 ;;		On entry : 3F/39
 45212 ;;		On exit  : 0/0
 45213 ;;		Unchanged: 0/0
 45214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45219 ;;Total ram usage:        0 bytes
 45220 ;; Hardware stack levels used:    1
 45221 ;; Hardware stack levels required when called:   15
 45222 ;; This function calls:
 45223 ;;		Nothing
 45224 ;; This function is called by:
 45225 ;;		_TMR5_Initialize
 45226 ;; This function uses a reentrant model
 45227 ;;
 45228                           
 45229                           	psect	text166
 45230  0029F2                     __ptext166:
 45231                           	opt callstack 0
 45232  0029F2                     _TMR5_SetInterruptHandler:
 45233                           	opt callstack 13
 45234                           
 45235                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 45236                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45237                           
 45238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45239                           ;incstack = 0
 45240  0029F2  50E1               	movf	fsr1l,w,c
 45241  0029F4  0FFD               	addlw	-3
 45242  0029F6  6ED9               	movwf	fsr2l,c
 45243  0029F8  50E2               	movf	fsr1h,w,c
 45244  0029FA  6EDA               	movwf	fsr2h,c
 45245  0029FC  0EFF               	movlw	255
 45246  0029FE  22DA               	addwfc	fsr2h,f,c
 45247  002A00  006F FF78  F09B    	movff	postinc2,_TMR5_InterruptHandler
 45248  002A06  006F FF78  F09C    	movff	postinc2,_TMR5_InterruptHandler+1
 45249  002A0C  006F FF74  F09D    	movff	postdec2,_TMR5_InterruptHandler+2
 45250                           
 45251                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45252  002A12  52E5               	movf	postdec1,f,c
 45253  002A14  52E5               	movf	postdec1,f,c
 45254  002A16  52E5               	movf	postdec1,f,c
 45255  002A18  0012               	return		;funcret
 45256  002A1A                     __end_of_TMR5_SetInterruptHandler:
 45257                           	opt callstack 0
 45258                           
 45259 ;; *************** function _TMR3_Initialize *****************
 45260 ;; Defined at:
 45261 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 45262 ;; Parameters:    Size  Location     Type
 45263 ;;		None
 45264 ;; Auto vars:     Size  Location     Type
 45265 ;;		None
 45266 ;; Return value:  Size  Location     Type
 45267 ;;                  1  [STACK] void 
 45268 ;; Registers used:
 45269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 45270 ;; Tracked objects:
 45271 ;;		On entry : 0/39
 45272 ;;		On exit  : 0/0
 45273 ;;		Unchanged: 0/0
 45274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45279 ;;Total ram usage:        0 bytes
 45280 ;; Hardware stack levels used:    1
 45281 ;; Hardware stack levels required when called:   16
 45282 ;; This function calls:
 45283 ;;		_TMR3_SetInterruptHandler
 45284 ;; This function is called by:
 45285 ;;		_SYSTEM_Initialize
 45286 ;; This function uses a reentrant model
 45287 ;;
 45288                           
 45289                           	psect	text167
 45290  002236                     __ptext167:
 45291                           	opt callstack 0
 45292  002236                     _TMR3_Initialize:
 45293                           	opt callstack 13
 45294                           
 45295                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 45296                           
 45297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45298                           ;incstack = 0
 45299  002236  6AA7               	clrf	167,c	;volatile
 45300                           
 45301                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 45302  002238  6AA8               	clrf	168,c	;volatile
 45303                           
 45304                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 45305  00223A  0E01               	movlw	1
 45306  00223C  6EA9               	movwf	169,c	;volatile
 45307                           
 45308                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 45309  00223E  0E3C               	movlw	60
 45310  002240  6EA5               	movwf	165,c	;volatile
 45311                           
 45312                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 45313  002242  0EB0               	movlw	176
 45314  002244  6EA4               	movwf	164,c	;volatile
 45315                           
 45316                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 45317  002246  50A4               	movf	164,w,c	;volatile
 45318  002248  006F FE94  F02A    	movff	16293,btemp	;volatile
 45319  00224E  6A2B               	clrf	(btemp+1)^0,c
 45320  002250  0060  F0A8  F02B   	movff	btemp,btemp+1
 45321  002256  6A2A               	clrf	btemp^0,c
 45322  002258  102A               	iorwf	btemp^0,w,c
 45323  00225A  0100               	movlb	0	; () banked
 45324  00225C  6FC0               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 45325  00225E  502B               	movf	(btemp+1)^0,w,c
 45326  002260  6FC1               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 45327                           
 45328                           ; BSR set to: 0
 45329                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 45330  002262  0139               	movlb	57	; () banked
 45331  002264  9DA6               	bcf	166,6,b	;volatile
 45332                           
 45333                           ; BSR set to: 57
 45334                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 45335  002266  8D96               	bsf	150,6,b	;volatile
 45336                           
 45337                           ; BSR set to: 57
 45338                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 45339  002268  0E90               	movlw	low _TMR3_DefaultInterruptHandler
 45340  00226A  6EE6               	movwf	postinc1,c
 45341  00226C  0E2F               	movlw	high _TMR3_DefaultInterruptHandler
 45342  00226E  6EE6               	movwf	postinc1,c
 45343  002270  0E00               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 45344  002272  6EE6               	movwf	postinc1,c
 45345  002274  EC0D  F015         	call	_TMR3_SetInterruptHandler	;wreg free
 45346                           
 45347                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 45348  002278  0E31               	movlw	49
 45349  00227A  6EA6               	movwf	166,c	;volatile
 45350                           
 45351                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45352  00227C  0012               	return		;funcret
 45353  00227E                     __end_of_TMR3_Initialize:
 45354                           	opt callstack 0
 45355                           
 45356 ;; *************** function _TMR3_SetInterruptHandler *****************
 45357 ;; Defined at:
 45358 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 45359 ;; Parameters:    Size  Location     Type
 45360 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45361 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 45362 ;; Auto vars:     Size  Location     Type
 45363 ;;		None
 45364 ;; Return value:  Size  Location     Type
 45365 ;;                  1  [STACK] void 
 45366 ;; Registers used:
 45367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45368 ;; Tracked objects:
 45369 ;;		On entry : 0/1
 45370 ;;		On exit  : 0/0
 45371 ;;		Unchanged: 0/0
 45372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45377 ;;Total ram usage:        0 bytes
 45378 ;; Hardware stack levels used:    1
 45379 ;; Hardware stack levels required when called:   15
 45380 ;; This function calls:
 45381 ;;		Nothing
 45382 ;; This function is called by:
 45383 ;;		_TMR3_Initialize
 45384 ;;		_init_bsoc
 45385 ;; This function uses a reentrant model
 45386 ;;
 45387                           
 45388                           	psect	text168
 45389  002A1A                     __ptext168:
 45390                           	opt callstack 0
 45391  002A1A                     _TMR3_SetInterruptHandler:
 45392                           	opt callstack 14
 45393                           
 45394                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 45395                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45396                           
 45397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45398                           ;incstack = 0
 45399  002A1A  50E1               	movf	fsr1l,w,c
 45400  002A1C  0FFD               	addlw	-3
 45401  002A1E  6ED9               	movwf	fsr2l,c
 45402  002A20  50E2               	movf	fsr1h,w,c
 45403  002A22  6EDA               	movwf	fsr2h,c
 45404  002A24  0EFF               	movlw	255
 45405  002A26  22DA               	addwfc	fsr2h,f,c
 45406  002A28  006F FF78  F098    	movff	postinc2,_TMR3_InterruptHandler
 45407  002A2E  006F FF78  F099    	movff	postinc2,_TMR3_InterruptHandler+1
 45408  002A34  006F FF74  F09A    	movff	postdec2,_TMR3_InterruptHandler+2
 45409                           
 45410                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45411  002A3A  52E5               	movf	postdec1,f,c
 45412  002A3C  52E5               	movf	postdec1,f,c
 45413  002A3E  52E5               	movf	postdec1,f,c
 45414  002A40  0012               	return		;funcret
 45415  002A42                     __end_of_TMR3_SetInterruptHandler:
 45416                           	opt callstack 0
 45417                           
 45418 ;; *************** function _TMR2_Initialize *****************
 45419 ;; Defined at:
 45420 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 45421 ;; Parameters:    Size  Location     Type
 45422 ;;		None
 45423 ;; Auto vars:     Size  Location     Type
 45424 ;;		None
 45425 ;; Return value:  Size  Location     Type
 45426 ;;                  1  [STACK] void 
 45427 ;; Registers used:
 45428 ;;		wreg, status,2
 45429 ;; Tracked objects:
 45430 ;;		On entry : 0/0
 45431 ;;		On exit  : 3F/39
 45432 ;;		Unchanged: 0/0
 45433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45438 ;;Total ram usage:        0 bytes
 45439 ;; Hardware stack levels used:    1
 45440 ;; Hardware stack levels required when called:   15
 45441 ;; This function calls:
 45442 ;;		Nothing
 45443 ;; This function is called by:
 45444 ;;		_SYSTEM_Initialize
 45445 ;; This function uses a reentrant model
 45446 ;;
 45447                           
 45448                           	psect	text169
 45449  002DC2                     __ptext169:
 45450                           	opt callstack 0
 45451  002DC2                     _TMR2_Initialize:
 45452                           	opt callstack 14
 45453                           
 45454                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 45455                           
 45456                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45457                           ;incstack = 0
 45458  002DC2  0E01               	movlw	1
 45459  002DC4  6EAE               	movwf	174,c	;volatile
 45460                           
 45461                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 45462  002DC6  6AAD               	clrf	173,c	;volatile
 45463                           
 45464                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 45465  002DC8  6AAF               	clrf	175,c	;volatile
 45466                           
 45467                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 45468  002DCA  0E63               	movlw	99
 45469  002DCC  6EAB               	movwf	171,c	;volatile
 45470                           
 45471                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 45472  002DCE  6AAA               	clrf	170,c	;volatile
 45473                           
 45474                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 45475  002DD0  0139               	movlb	57	; () banked
 45476  002DD2  95A4               	bcf	164,2,b	;volatile
 45477                           
 45478                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 45479  002DD4  0EC0               	movlw	192
 45480  002DD6  6EAC               	movwf	172,c	;volatile
 45481                           
 45482                           ; BSR set to: 57
 45483                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45484  002DD8  0012               	return		;funcret
 45485  002DDA                     __end_of_TMR2_Initialize:
 45486                           	opt callstack 0
 45487                           
 45488 ;; *************** function _SPI1_Initialize *****************
 45489 ;; Defined at:
 45490 ;;		line 64 in file "mcc_generated_files/spi1.c"
 45491 ;; Parameters:    Size  Location     Type
 45492 ;;		None
 45493 ;; Auto vars:     Size  Location     Type
 45494 ;;		None
 45495 ;; Return value:  Size  Location     Type
 45496 ;;                  1  [STACK] void 
 45497 ;; Registers used:
 45498 ;;		wreg, status,2
 45499 ;; Tracked objects:
 45500 ;;		On entry : 3F/39
 45501 ;;		On exit  : 3F/3D
 45502 ;;		Unchanged: 0/0
 45503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45508 ;;Total ram usage:        0 bytes
 45509 ;; Hardware stack levels used:    1
 45510 ;; Hardware stack levels required when called:   15
 45511 ;; This function calls:
 45512 ;;		Nothing
 45513 ;; This function is called by:
 45514 ;;		_SYSTEM_Initialize
 45515 ;; This function uses a reentrant model
 45516 ;;
 45517                           
 45518                           	psect	text170
 45519  002DF0                     __ptext170:
 45520                           	opt callstack 0
 45521  002DF0                     _SPI1_Initialize:
 45522                           	opt callstack 14
 45523                           
 45524                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 45525                           
 45526                           ; BSR set to: 57
 45527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45528                           ;incstack = 0
 45529  002DF0  0E40               	movlw	64
 45530  002DF2  013D               	movlb	61	; () banked
 45531  002DF4  6F15               	movwf	21,b	;volatile
 45532                           
 45533                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 45534  002DF6  0E03               	movlw	3
 45535  002DF8  6F16               	movwf	22,b	;volatile
 45536                           
 45537                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 45538  002DFA  0E4F               	movlw	79
 45539  002DFC  6F19               	movwf	25,b	;volatile
 45540                           
 45541                           ; BSR set to: 61
 45542                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 45543  002DFE  6B1C               	clrf	28,b	;volatile
 45544                           
 45545                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 45546  002E00  0E83               	movlw	131
 45547  002E02  6F14               	movwf	20,b	;volatile
 45548                           
 45549                           ; BSR set to: 61
 45550                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45551  002E04  0012               	return		;funcret
 45552  002E06                     __end_of_SPI1_Initialize:
 45553                           	opt callstack 0
 45554                           
 45555 ;; *************** function _PWM8_Initialize *****************
 45556 ;; Defined at:
 45557 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 45558 ;; Parameters:    Size  Location     Type
 45559 ;;		None
 45560 ;; Auto vars:     Size  Location     Type
 45561 ;;		None
 45562 ;; Return value:  Size  Location     Type
 45563 ;;                  1  [STACK] void 
 45564 ;; Registers used:
 45565 ;;		wreg, status,2
 45566 ;; Tracked objects:
 45567 ;;		On entry : 3F/39
 45568 ;;		On exit  : 3F/3F
 45569 ;;		Unchanged: 0/0
 45570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45575 ;;Total ram usage:        0 bytes
 45576 ;; Hardware stack levels used:    1
 45577 ;; Hardware stack levels required when called:   15
 45578 ;; This function calls:
 45579 ;;		Nothing
 45580 ;; This function is called by:
 45581 ;;		_SYSTEM_Initialize
 45582 ;; This function uses a reentrant model
 45583 ;;
 45584                           
 45585                           	psect	text171
 45586  002E06                     __ptext171:
 45587                           	opt callstack 0
 45588  002E06                     _PWM8_Initialize:
 45589                           	opt callstack 14
 45590                           
 45591                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 45592                           
 45593                           ; BSR set to: 61
 45594                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45595                           ;incstack = 0
 45596  002E06  0E80               	movlw	128
 45597  002E08  6E62               	movwf	98,c	;volatile
 45598                           
 45599                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 45600  002E0A  6A61               	clrf	97,c	;volatile
 45601                           
 45602                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 45603  002E0C  0E40               	movlw	64
 45604  002E0E  6E60               	movwf	96,c	;volatile
 45605                           
 45606                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 45607  002E10  013F               	movlb	63	; () banked
 45608  002E12  515F               	movf	95,w,b	;volatile
 45609  002E14  0B3F               	andlw	-193
 45610  002E16  0940               	iorlw	64
 45611  002E18  6F5F               	movwf	95,b	;volatile
 45612                           
 45613                           ; BSR set to: 63
 45614                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45615  002E1A  0012               	return		;funcret
 45616  002E1C                     __end_of_PWM8_Initialize:
 45617                           	opt callstack 0
 45618                           
 45619 ;; *************** function _PMD_Initialize *****************
 45620 ;; Defined at:
 45621 ;;		line 91 in file "mcc_generated_files/mcc.c"
 45622 ;; Parameters:    Size  Location     Type
 45623 ;;		None
 45624 ;; Auto vars:     Size  Location     Type
 45625 ;;		None
 45626 ;; Return value:  Size  Location     Type
 45627 ;;                  1  [STACK] void 
 45628 ;; Registers used:
 45629 ;;		None
 45630 ;; Tracked objects:
 45631 ;;		On entry : 3F/39
 45632 ;;		On exit  : 3F/39
 45633 ;;		Unchanged: 0/0
 45634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45639 ;;Total ram usage:        0 bytes
 45640 ;; Hardware stack levels used:    1
 45641 ;; Hardware stack levels required when called:   15
 45642 ;; This function calls:
 45643 ;;		Nothing
 45644 ;; This function is called by:
 45645 ;;		_SYSTEM_Initialize
 45646 ;; This function uses a reentrant model
 45647 ;;
 45648                           
 45649                           	psect	text172
 45650  002E32                     __ptext172:
 45651                           	opt callstack 0
 45652  002E32                     _PMD_Initialize:
 45653                           	opt callstack 14
 45654                           
 45655                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 45656                           
 45657                           ; BSR set to: 63
 45658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45659                           ;incstack = 0
 45660  002E32  0139               	movlb	57	; () banked
 45661  002E34  6BC0               	clrf	192,b	;volatile
 45662                           
 45663                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 45664  002E36  6BC1               	clrf	193,b	;volatile
 45665                           
 45666                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 45667  002E38  6BC2               	clrf	194,b	;volatile
 45668                           
 45669                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 45670  002E3A  6BC3               	clrf	195,b	;volatile
 45671                           
 45672                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 45673  002E3C  6BC4               	clrf	196,b	;volatile
 45674                           
 45675                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 45676  002E3E  6BC5               	clrf	197,b	;volatile
 45677                           
 45678                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 45679  002E40  6BC6               	clrf	198,b	;volatile
 45680                           
 45681                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 45682  002E42  6BC7               	clrf	199,b	;volatile
 45683                           
 45684                           ; BSR set to: 57
 45685                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45686  002E44  0012               	return		;funcret
 45687  002E46                     __end_of_PMD_Initialize:
 45688                           	opt callstack 0
 45689                           
 45690 ;; *************** function _PIN_MANAGER_Initialize *****************
 45691 ;; Defined at:
 45692 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 45693 ;; Parameters:    Size  Location     Type
 45694 ;;		None
 45695 ;; Auto vars:     Size  Location     Type
 45696 ;;		None
 45697 ;; Return value:  Size  Location     Type
 45698 ;;                  1  [STACK] void 
 45699 ;; Registers used:
 45700 ;;		wreg, status,2
 45701 ;; Tracked objects:
 45702 ;;		On entry : 3F/39
 45703 ;;		On exit  : 3F/3A
 45704 ;;		Unchanged: 0/0
 45705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45710 ;;Total ram usage:        0 bytes
 45711 ;; Hardware stack levels used:    1
 45712 ;; Hardware stack levels required when called:   15
 45713 ;; This function calls:
 45714 ;;		Nothing
 45715 ;; This function is called by:
 45716 ;;		_SYSTEM_Initialize
 45717 ;; This function uses a reentrant model
 45718 ;;
 45719                           
 45720                           	psect	text173
 45721  001418                     __ptext173:
 45722                           	opt callstack 0
 45723  001418                     _PIN_MANAGER_Initialize:
 45724                           	opt callstack 14
 45725                           
 45726                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 45727                           
 45728                           ; BSR set to: 57
 45729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45730                           ;incstack = 0
 45731  001418  0E07               	movlw	7
 45732  00141A  6EBE               	movwf	190,c	;volatile
 45733                           
 45734                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 45735  00141C  6ABD               	clrf	189,c	;volatile
 45736                           
 45737                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 45738  00141E  6ABA               	clrf	186,c	;volatile
 45739                           
 45740                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 45741  001420  0E23               	movlw	35
 45742  001422  6EBF               	movwf	191,c	;volatile
 45743                           
 45744                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 45745  001424  6ABB               	clrf	187,c	;volatile
 45746                           
 45747                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 45748  001426  0E07               	movlw	7
 45749  001428  6EBC               	movwf	188,c	;volatile
 45750                           
 45751                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 45752  00142A  6AC6               	clrf	198,c	;volatile
 45753                           
 45754                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 45755  00142C  0E0C               	movlw	12
 45756  00142E  6EC7               	movwf	199,c	;volatile
 45757                           
 45758                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 45759  001430  68C2               	setf	194,c	;volatile
 45760                           
 45761                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 45762  001432  0EBF               	movlw	191
 45763  001434  6EC3               	movwf	195,c	;volatile
 45764                           
 45765                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 45766  001436  0E90               	movlw	144
 45767  001438  6EC4               	movwf	196,c	;volatile
 45768                           
 45769                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 45770  00143A  0E0C               	movlw	12
 45771  00143C  6EC5               	movwf	197,c	;volatile
 45772                           
 45773                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 45774  00143E  013A               	movlb	58	; () banked
 45775  001440  6B70               	clrf	112,b	;volatile
 45776                           
 45777                           ; BSR set to: 58
 45778                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 45779  001442  6B60               	clrf	96,b	;volatile
 45780                           
 45781                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 45782  001444  0E3C               	movlw	60
 45783  001446  6F50               	movwf	80,b	;volatile
 45784                           
 45785                           ; BSR set to: 58
 45786                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 45787  001448  6B80               	clrf	128,b	;volatile
 45788                           
 45789                           ; BSR set to: 58
 45790                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 45791  00144A  6B90               	clrf	144,b	;volatile
 45792                           
 45793                           ; BSR set to: 58
 45794                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 45795  00144C  6940               	setf	64,b	;volatile
 45796                           
 45797                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 45798  00144E  0E0C               	movlw	12
 45799  001450  6F71               	movwf	113,b	;volatile
 45800                           
 45801                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 45802  001452  0E0C               	movlw	12
 45803  001454  6F91               	movwf	145,b	;volatile
 45804                           
 45805                           ; BSR set to: 58
 45806                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 45807  001456  6B81               	clrf	129,b	;volatile
 45808                           
 45809                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 45810  001458  0E83               	movlw	131
 45811  00145A  6F51               	movwf	81,b	;volatile
 45812                           
 45813                           ; BSR set to: 58
 45814                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 45815  00145C  6B41               	clrf	65,b	;volatile
 45816                           
 45817                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 45818  00145E  0E97               	movlw	151
 45819  001460  6F61               	movwf	97,b	;volatile
 45820                           
 45821                           ; BSR set to: 58
 45822                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 45823  001462  6B82               	clrf	130,b	;volatile
 45824                           
 45825                           ; BSR set to: 58
 45826                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 45827  001464  6B92               	clrf	146,b	;volatile
 45828                           
 45829                           ; BSR set to: 58
 45830                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 45831  001466  6B42               	clrf	66,b	;volatile
 45832                           
 45833                           ; BSR set to: 58
 45834                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 45835  001468  6B52               	clrf	82,b	;volatile
 45836                           
 45837                           ; BSR set to: 58
 45838                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 45839  00146A  6B62               	clrf	98,b	;volatile
 45840                           
 45841                           ; BSR set to: 58
 45842                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 45843  00146C  6B72               	clrf	114,b	;volatile
 45844                           
 45845                           ; BSR set to: 58
 45846                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 45847  00146E  6943               	setf	67,b	;volatile
 45848                           
 45849                           ; BSR set to: 58
 45850                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 45851  001470  6953               	setf	83,b	;volatile
 45852                           
 45853                           ; BSR set to: 58
 45854                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 45855  001472  6963               	setf	99,b	;volatile
 45856                           
 45857                           ; BSR set to: 58
 45858                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 45859  001474  6973               	setf	115,b	;volatile
 45860                           
 45861                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 45862  001476  0E07               	movlw	7
 45863  001478  6F83               	movwf	131,b	;volatile
 45864                           
 45865                           ; BSR set to: 58
 45866                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 45867  00147A  6993               	setf	147,b	;volatile
 45868                           
 45869                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 45870  00147C  0E0F               	movlw	15
 45871  00147E  6FE8               	movwf	232,b	;volatile
 45872                           
 45873                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 45874  001480  0E13               	movlw	19
 45875  001482  6FDE               	movwf	222,b	;volatile
 45876                           
 45877                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 45878  001484  0E16               	movlw	22
 45879  001486  6F0E               	movwf	14,b	;volatile
 45880                           
 45881                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 45882  001488  0E1E               	movlw	30
 45883  00148A  6F13               	movwf	19,b	;volatile
 45884                           
 45885                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 45886  00148C  0E08               	movlw	8
 45887  00148E  6FC0               	movwf	192,b	;volatile
 45888                           
 45889                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 45890  001490  0E10               	movlw	16
 45891  001492  6F19               	movwf	25,b	;volatile
 45892                           
 45893                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 45894  001494  0E09               	movlw	9
 45895  001496  6FC1               	movwf	193,b	;volatile
 45896                           
 45897                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 45898  001498  0E1F               	movlw	31
 45899  00149A  6F15               	movwf	21,b	;volatile
 45900                           
 45901                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 45902  00149C  0E13               	movlw	19
 45903  00149E  6F16               	movwf	22,b	;volatile
 45904                           
 45905                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 45906  0014A0  0E17               	movlw	23
 45907  0014A2  6FE5               	movwf	229,b	;volatile
 45908                           
 45909                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 45910  0014A4  0E14               	movlw	20
 45911  0014A6  6FDF               	movwf	223,b	;volatile
 45912                           
 45913                           ; BSR set to: 58
 45914                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 45915  0014A8  0012               	return		;funcret
 45916  0014AA                     __end_of_PIN_MANAGER_Initialize:
 45917                           	opt callstack 0
 45918                           
 45919 ;; *************** function _OSCILLATOR_Initialize *****************
 45920 ;; Defined at:
 45921 ;;		line 73 in file "mcc_generated_files/mcc.c"
 45922 ;; Parameters:    Size  Location     Type
 45923 ;;		None
 45924 ;; Auto vars:     Size  Location     Type
 45925 ;;		None
 45926 ;; Return value:  Size  Location     Type
 45927 ;;                  1  [STACK] void 
 45928 ;; Registers used:
 45929 ;;		wreg, status,2
 45930 ;; Tracked objects:
 45931 ;;		On entry : 3F/3A
 45932 ;;		On exit  : 3F/39
 45933 ;;		Unchanged: 0/0
 45934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45939 ;;Total ram usage:        0 bytes
 45940 ;; Hardware stack levels used:    1
 45941 ;; Hardware stack levels required when called:   15
 45942 ;; This function calls:
 45943 ;;		Nothing
 45944 ;; This function is called by:
 45945 ;;		_SYSTEM_Initialize
 45946 ;; This function uses a reentrant model
 45947 ;;
 45948                           
 45949                           	psect	text174
 45950  002E1C                     __ptext174:
 45951                           	opt callstack 0
 45952  002E1C                     _OSCILLATOR_Initialize:
 45953                           	opt callstack 14
 45954                           
 45955                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 45956                           
 45957                           ; BSR set to: 58
 45958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45959                           ;incstack = 0
 45960  002E1C  0E20               	movlw	32
 45961  002E1E  0139               	movlb	57	; () banked
 45962  002E20  6FD9               	movwf	217,b	;volatile
 45963                           
 45964                           ; BSR set to: 57
 45965                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 45966  002E22  6BDB               	clrf	219,b	;volatile
 45967                           
 45968                           ; BSR set to: 57
 45969                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 45970  002E24  6BDD               	clrf	221,b	;volatile
 45971                           
 45972                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 45973  002E26  0E02               	movlw	2
 45974  002E28  6FDF               	movwf	223,b	;volatile
 45975                           
 45976                           ; BSR set to: 57
 45977                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 45978  002E2A  6BDE               	clrf	222,b	;volatile
 45979  002E2C                     l171:
 45980                           
 45981                           ; BSR set to: 57
 45982                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 45983  002E2C  B1DC               	btfsc	220,0,b	;volatile
 45984  002E2E  0012               	return	
 45985  002E30  D7FD               	goto	l171
 45986  002E32                     __end_of_OSCILLATOR_Initialize:
 45987                           	opt callstack 0
 45988                           
 45989 ;; *************** function _INTERRUPT_Initialize *****************
 45990 ;; Defined at:
 45991 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 45992 ;; Parameters:    Size  Location     Type
 45993 ;;		None
 45994 ;; Auto vars:     Size  Location     Type
 45995 ;;  state           1  [STACK] _Bool 
 45996 ;; Return value:  Size  Location     Type
 45997 ;;                  1  [STACK] void 
 45998 ;; Registers used:
 45999 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 46000 ;; Tracked objects:
 46001 ;;		On entry : 0/0
 46002 ;;		On exit  : 3F/39
 46003 ;;		Unchanged: 0/0
 46004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46009 ;;Total ram usage:        0 bytes
 46010 ;; Hardware stack levels used:    1
 46011 ;; Hardware stack levels required when called:   15
 46012 ;; This function calls:
 46013 ;;		Nothing
 46014 ;; This function is called by:
 46015 ;;		_SYSTEM_Initialize
 46016 ;; This function uses a reentrant model
 46017 ;;
 46018                           
 46019                           	psect	text175
 46020  001BBC                     __ptext175:
 46021                           	opt callstack 0
 46022  001BBC                     _INTERRUPT_Initialize:
 46023                           	opt callstack 0
 46024                           
 46025                           ; BSR set to: 57
 46026                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46027  001BBC  52E6               	movf	postinc1,f,c
 46028                           
 46029                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 46030                           
 46031                           ;incstack = 0
 46032  001BBE  8AD2               	bsf	210,5,c	;volatile
 46033                           
 46034                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 46035  001BC0  AED2               	btfss	16338,7,c	;volatile
 46036  001BC2  D003               	goto	u12500
 46037  001BC4  6A35               	clrf	(btemp+11)^0,c
 46038  001BC6  2A35               	incf	(btemp+11)^0,f,c
 46039  001BC8  D001               	goto	u12518
 46040  001BCA                     u12500:
 46041  001BCA  6A35               	clrf	(btemp+11)^0,c
 46042  001BCC                     u12518:
 46043                           
 46044                           ;stkvar	_state @ sp[(-1)+0]
 46045  001BCC  0EFF               	movlw	-1
 46046  001BCE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 46047                           
 46048                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 46049  001BD4  9ED2               	bcf	16338,7,c	;volatile
 46050                           
 46051                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 46052  001BD6  0E55               	movlw	85
 46053  001BD8  6ED4               	movwf	212,c	;volatile
 46054                           
 46055                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 46056  001BDA  0EAA               	movlw	170
 46057  001BDC  6ED4               	movwf	212,c	;volatile
 46058                           
 46059                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 46060  001BDE  90D4               	bcf	212,0,c	;volatile
 46061                           
 46062                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 46063  001BE0  0138               	movlb	56	; () banked
 46064  001BE2  6B9F               	clrf	159,b	;volatile
 46065                           
 46066                           ; BSR set to: 56
 46067                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 46068  001BE4  6B9E               	clrf	158,b	;volatile
 46069                           
 46070                           ; BSR set to: 56
 46071                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 46072  001BE6  0E08               	movlw	8
 46073  001BE8  6F9D               	movwf	157,b	;volatile
 46074                           
 46075                           ; BSR set to: 56
 46076                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 46077  001BEA  0E55               	movlw	85
 46078  001BEC  6ED4               	movwf	212,c	;volatile
 46079                           
 46080                           ; BSR set to: 56
 46081                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 46082  001BEE  0EAA               	movlw	170
 46083  001BF0  6ED4               	movwf	212,c	;volatile
 46084                           
 46085                           ; BSR set to: 56
 46086                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 46087  001BF2  80D4               	bsf	212,0,c	;volatile
 46088                           
 46089                           ; BSR set to: 56
 46090                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 46091                           ;stkvar	_state @ sp[(-1)+0]
 46092  001BF4  0EFF               	movlw	-1
 46093  001BF6  B0E3               	btfsc	plusw1,0,c
 46094  001BF8  D002               	bra	u12525
 46095  001BFA  9ED2               	bcf	16338,7,c	;volatile
 46096  001BFC  D001               	bra	u12526
 46097  001BFE                     u12525:
 46098  001BFE  8ED2               	bsf	16338,7,c	;volatile
 46099  001C00                     u12526:
 46100                           
 46101                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 46102  001C00  0139               	movlb	57	; () banked
 46103  001C02  8782               	bsf	130,3,b	;volatile
 46104                           
 46105                           ; BSR set to: 57
 46106                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 46107  001C04  8382               	bsf	130,1,b	;volatile
 46108                           
 46109                           ; BSR set to: 57
 46110                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 46111  001C06  8182               	bsf	130,0,b	;volatile
 46112                           
 46113                           ; BSR set to: 57
 46114                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 46115  001C08  8582               	bsf	130,2,b	;volatile
 46116                           
 46117                           ; BSR set to: 57
 46118                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 46119  001C0A  8786               	bsf	134,3,b	;volatile
 46120                           
 46121                           ; BSR set to: 57
 46122                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 46123  001C0C  8586               	bsf	134,2,b	;volatile
 46124                           
 46125                           ; BSR set to: 57
 46126                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 46127  001C0E  8783               	bsf	131,3,b	;volatile
 46128                           
 46129                           ; BSR set to: 57
 46130                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 46131  001C10  8181               	bsf	129,0,b	;volatile
 46132                           
 46133                           ; BSR set to: 57
 46134                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 46135  001C12  9185               	bcf	133,0,b	;volatile
 46136                           
 46137                           ; BSR set to: 57
 46138                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 46139  001C14  8189               	bsf	137,0,b	;volatile
 46140                           
 46141                           ; BSR set to: 57
 46142                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 46143  001C16  9D88               	bcf	136,6,b	;volatile
 46144                           
 46145                           ; BSR set to: 57
 46146                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 46147  001C18  8581               	bsf	129,2,b	;volatile
 46148                           
 46149                           ; BSR set to: 57
 46150                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 46151  001C1A  8781               	bsf	129,3,b	;volatile
 46152                           
 46153                           ; BSR set to: 57
 46154                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 46155  001C1C  9D86               	bcf	134,6,b	;volatile
 46156                           
 46157                           ; BSR set to: 57
 46158                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 46159  001C1E  52E5               	movf	postdec1,f,c
 46160  001C20  0012               	return		;funcret
 46161  001C22                     __end_of_INTERRUPT_Initialize:
 46162                           	opt callstack 0
 46163                           
 46164 ;; *************** function _FVR_Initialize *****************
 46165 ;; Defined at:
 46166 ;;		line 58 in file "mcc_generated_files/fvr.c"
 46167 ;; Parameters:    Size  Location     Type
 46168 ;;		None
 46169 ;; Auto vars:     Size  Location     Type
 46170 ;;		None
 46171 ;; Return value:  Size  Location     Type
 46172 ;;                  1  [STACK] void 
 46173 ;; Registers used:
 46174 ;;		wreg, status,2
 46175 ;; Tracked objects:
 46176 ;;		On entry : 3F/39
 46177 ;;		On exit  : 3F/3E
 46178 ;;		Unchanged: 0/0
 46179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46184 ;;Total ram usage:        0 bytes
 46185 ;; Hardware stack levels used:    1
 46186 ;; Hardware stack levels required when called:   15
 46187 ;; This function calls:
 46188 ;;		Nothing
 46189 ;; This function is called by:
 46190 ;;		_SYSTEM_Initialize
 46191 ;; This function uses a reentrant model
 46192 ;;
 46193                           
 46194                           	psect	text176
 46195  002F5A                     __ptext176:
 46196                           	opt callstack 0
 46197  002F5A                     _FVR_Initialize:
 46198                           	opt callstack 14
 46199                           
 46200                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 46201                           
 46202                           ; BSR set to: 57
 46203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46204                           ;incstack = 0
 46205  002F5A  0EAF               	movlw	175
 46206  002F5C  013E               	movlb	62	; () banked
 46207  002F5E  6FC1               	movwf	193,b	;volatile
 46208                           
 46209                           ; BSR set to: 62
 46210                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46211  002F60  0012               	return		;funcret
 46212  002F62                     __end_of_FVR_Initialize:
 46213                           	opt callstack 0
 46214                           
 46215 ;; *************** function _EXT_INT_Initialize *****************
 46216 ;; Defined at:
 46217 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 46218 ;; Parameters:    Size  Location     Type
 46219 ;;		None
 46220 ;; Auto vars:     Size  Location     Type
 46221 ;;		None
 46222 ;; Return value:  Size  Location     Type
 46223 ;;                  1  [STACK] void 
 46224 ;; Registers used:
 46225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46226 ;; Tracked objects:
 46227 ;;		On entry : 3F/3F
 46228 ;;		On exit  : 3F/39
 46229 ;;		Unchanged: 0/0
 46230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46235 ;;Total ram usage:        0 bytes
 46236 ;; Hardware stack levels used:    1
 46237 ;; Hardware stack levels required when called:   16
 46238 ;; This function calls:
 46239 ;;		_INT0_SetInterruptHandler
 46240 ;;		_INT1_SetInterruptHandler
 46241 ;; This function is called by:
 46242 ;;		_SYSTEM_Initialize
 46243 ;; This function uses a reentrant model
 46244 ;;
 46245                           
 46246                           	psect	text177
 46247  002700                     __ptext177:
 46248                           	opt callstack 0
 46249  002700                     _EXT_INT_Initialize:
 46250                           	opt callstack 13
 46251                           
 46252                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 46253                           
 46254                           ; BSR set to: 62
 46255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46256                           ;incstack = 0
 46257  002700  0139               	movlb	57	; () banked
 46258  002702  91A1               	bcf	161,0,b	;volatile
 46259                           
 46260                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 46261  002704  90D2               	bcf	210,0,c	;volatile
 46262                           
 46263                           ; BSR set to: 57
 46264                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 46265  002706  0E92               	movlw	low _INT0_DefaultInterruptHandler
 46266  002708  6EE6               	movwf	postinc1,c
 46267  00270A  0E2F               	movlw	high _INT0_DefaultInterruptHandler
 46268  00270C  6EE6               	movwf	postinc1,c
 46269  00270E  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 46270  002710  6EE6               	movwf	postinc1,c
 46271  002712  EC35  F015         	call	_INT0_SetInterruptHandler	;wreg free
 46272                           
 46273                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 46274  002716  0139               	movlb	57	; () banked
 46275  002718  8191               	bsf	145,0,b	;volatile
 46276                           
 46277                           ; BSR set to: 57
 46278                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 46279  00271A  91A5               	bcf	165,0,b	;volatile
 46280                           
 46281                           ; BSR set to: 57
 46282                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 46283  00271C  92D2               	bcf	210,1,c	;volatile
 46284                           
 46285                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 46286  00271E  0E8E               	movlw	low _INT1_DefaultInterruptHandler
 46287  002720  6EE6               	movwf	postinc1,c
 46288  002722  0E2F               	movlw	high _INT1_DefaultInterruptHandler
 46289  002724  6EE6               	movwf	postinc1,c
 46290  002726  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 46291  002728  6EE6               	movwf	postinc1,c
 46292  00272A  EC21  F015         	call	_INT1_SetInterruptHandler	;wreg free
 46293                           
 46294                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 46295  00272E  0139               	movlb	57	; () banked
 46296  002730  8195               	bsf	149,0,b	;volatile
 46297                           
 46298                           ; BSR set to: 57
 46299                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 46300  002732  0012               	return		;funcret
 46301  002734                     __end_of_EXT_INT_Initialize:
 46302                           	opt callstack 0
 46303                           
 46304 ;; *************** function _INT1_SetInterruptHandler *****************
 46305 ;; Defined at:
 46306 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 46307 ;; Parameters:    Size  Location     Type
 46308 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46309 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 46310 ;; Auto vars:     Size  Location     Type
 46311 ;;		None
 46312 ;; Return value:  Size  Location     Type
 46313 ;;                  1  [STACK] void 
 46314 ;; Registers used:
 46315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46316 ;; Tracked objects:
 46317 ;;		On entry : 3F/39
 46318 ;;		On exit  : 0/0
 46319 ;;		Unchanged: 0/0
 46320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46325 ;;Total ram usage:        0 bytes
 46326 ;; Hardware stack levels used:    1
 46327 ;; Hardware stack levels required when called:   15
 46328 ;; This function calls:
 46329 ;;		Nothing
 46330 ;; This function is called by:
 46331 ;;		_EXT_INT_Initialize
 46332 ;;		_start_switch_handler
 46333 ;; This function uses a reentrant model
 46334 ;;
 46335                           
 46336                           	psect	text178
 46337  002A42                     __ptext178:
 46338                           	opt callstack 0
 46339  002A42                     _INT1_SetInterruptHandler:
 46340                           	opt callstack 14
 46341                           
 46342                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 46343                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46344                           
 46345                           ; BSR set to: 57
 46346                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46347                           ;incstack = 0
 46348  002A42  50E1               	movf	fsr1l,w,c
 46349  002A44  0FFD               	addlw	-3
 46350  002A46  6ED9               	movwf	fsr2l,c
 46351  002A48  50E2               	movf	fsr1h,w,c
 46352  002A4A  6EDA               	movwf	fsr2h,c
 46353  002A4C  0EFF               	movlw	255
 46354  002A4E  22DA               	addwfc	fsr2h,f,c
 46355  002A50  006F FF78  F0B0    	movff	postinc2,_INT1_InterruptHandler
 46356  002A56  006F FF78  F0B1    	movff	postinc2,_INT1_InterruptHandler+1
 46357  002A5C  006F FF74  F0B2    	movff	postdec2,_INT1_InterruptHandler+2
 46358                           
 46359                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 46360  002A62  52E5               	movf	postdec1,f,c
 46361  002A64  52E5               	movf	postdec1,f,c
 46362  002A66  52E5               	movf	postdec1,f,c
 46363  002A68  0012               	return		;funcret
 46364  002A6A                     __end_of_INT1_SetInterruptHandler:
 46365                           	opt callstack 0
 46366                           
 46367 ;; *************** function _INT0_SetInterruptHandler *****************
 46368 ;; Defined at:
 46369 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 46370 ;; Parameters:    Size  Location     Type
 46371 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46372 ;;		 -> INT0_DefaultInterruptHandler(1), 
 46373 ;; Auto vars:     Size  Location     Type
 46374 ;;		None
 46375 ;; Return value:  Size  Location     Type
 46376 ;;                  1  [STACK] void 
 46377 ;; Registers used:
 46378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46379 ;; Tracked objects:
 46380 ;;		On entry : 3F/39
 46381 ;;		On exit  : 0/0
 46382 ;;		Unchanged: 0/0
 46383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46388 ;;Total ram usage:        0 bytes
 46389 ;; Hardware stack levels used:    1
 46390 ;; Hardware stack levels required when called:   15
 46391 ;; This function calls:
 46392 ;;		Nothing
 46393 ;; This function is called by:
 46394 ;;		_EXT_INT_Initialize
 46395 ;; This function uses a reentrant model
 46396 ;;
 46397                           
 46398                           	psect	text179
 46399  002A6A                     __ptext179:
 46400                           	opt callstack 0
 46401  002A6A                     _INT0_SetInterruptHandler:
 46402                           	opt callstack 13
 46403                           
 46404                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 46405                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46406                           
 46407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46408                           ;incstack = 0
 46409  002A6A  50E1               	movf	fsr1l,w,c
 46410  002A6C  0FFD               	addlw	-3
 46411  002A6E  6ED9               	movwf	fsr2l,c
 46412  002A70  50E2               	movf	fsr1h,w,c
 46413  002A72  6EDA               	movwf	fsr2h,c
 46414  002A74  0EFF               	movlw	255
 46415  002A76  22DA               	addwfc	fsr2h,f,c
 46416  002A78  006F FF78  F0B3    	movff	postinc2,_INT0_InterruptHandler
 46417  002A7E  006F FF78  F0B4    	movff	postinc2,_INT0_InterruptHandler+1
 46418  002A84  006F FF74  F0B5    	movff	postdec2,_INT0_InterruptHandler+2
 46419                           
 46420                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 46421  002A8A  52E5               	movf	postdec1,f,c
 46422  002A8C  52E5               	movf	postdec1,f,c
 46423  002A8E  52E5               	movf	postdec1,f,c
 46424  002A90  0012               	return		;funcret
 46425  002A92                     __end_of_INT0_SetInterruptHandler:
 46426                           	opt callstack 0
 46427                           
 46428 ;; *************** function _DMA2_Initialize *****************
 46429 ;; Defined at:
 46430 ;;		line 61 in file "mcc_generated_files/dma2.c"
 46431 ;; Parameters:    Size  Location     Type
 46432 ;;		None
 46433 ;; Auto vars:     Size  Location     Type
 46434 ;;		None
 46435 ;; Return value:  Size  Location     Type
 46436 ;;                  1  [STACK] void 
 46437 ;; Registers used:
 46438 ;;		wreg, status,2
 46439 ;; Tracked objects:
 46440 ;;		On entry : 3F/3D
 46441 ;;		On exit  : 3F/3B
 46442 ;;		Unchanged: 0/0
 46443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46448 ;;Total ram usage:        0 bytes
 46449 ;; Hardware stack levels used:    1
 46450 ;; Hardware stack levels required when called:   15
 46451 ;; This function calls:
 46452 ;;		Nothing
 46453 ;; This function is called by:
 46454 ;;		_SYSTEM_Initialize
 46455 ;; This function uses a reentrant model
 46456 ;;
 46457                           
 46458                           	psect	text180
 46459  001F20                     __ptext180:
 46460                           	opt callstack 0
 46461  001F20                     _DMA2_Initialize:
 46462                           	opt callstack 14
 46463                           
 46464                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 46465                           
 46466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46467                           ;incstack = 0
 46468  001F20  0E00               	movlw	0
 46469  001F22  013B               	movlb	59	; () banked
 46470  001F24  6FD9               	movwf	217,b	;volatile
 46471  001F26  0E10               	movlw	16
 46472  001F28  6FDA               	movwf	218,b	;volatile
 46473  001F2A  0E00               	movlw	0
 46474  001F2C  6FDB               	movwf	219,b	;volatile
 46475                           
 46476                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 46477  001F2E  0E3F               	movlw	63
 46478  001F30  6FD1               	movwf	209,b	;volatile
 46479  001F32  0EBB               	movlw	187
 46480  001F34  6FD0               	movwf	208,b	;volatile
 46481                           
 46482                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 46483  001F36  0E03               	movlw	3
 46484  001F38  6FDD               	movwf	221,b	;volatile
 46485                           
 46486                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 46487  001F3A  0E00               	movlw	0
 46488  001F3C  6FD8               	movwf	216,b	;volatile
 46489  001F3E  0E01               	movlw	1
 46490  001F40  6FD7               	movwf	215,b	;volatile
 46491                           
 46492                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 46493  001F42  0E00               	movlw	0
 46494  001F44  6FCF               	movwf	207,b	;volatile
 46495  001F46  0E01               	movlw	1
 46496  001F48  6FCE               	movwf	206,b	;volatile
 46497                           
 46498                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 46499  001F4A  0E1C               	movlw	28
 46500  001F4C  6FDF               	movwf	223,b	;volatile
 46501                           
 46502                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 46503  001F4E  0E3D               	movlw	61
 46504  001F50  6FDE               	movwf	222,b	;volatile
 46505                           
 46506                           ; BSR set to: 59
 46507                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 46508  001F52  0139               	movlb	57	; () banked
 46509  001F54  97A5               	bcf	165,3,b	;volatile
 46510                           
 46511                           ; BSR set to: 57
 46512                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 46513  001F56  95A5               	bcf	165,2,b	;volatile
 46514                           
 46515                           ; BSR set to: 57
 46516                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 46517  001F58  9BA5               	bcf	165,5,b	;volatile
 46518                           
 46519                           ; BSR set to: 57
 46520                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 46521  001F5A  99A5               	bcf	165,4,b	;volatile
 46522                           
 46523                           ; BSR set to: 57
 46524                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 46525  001F5C  9795               	bcf	149,3,b	;volatile
 46526                           
 46527                           ; BSR set to: 57
 46528                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 46529  001F5E  9595               	bcf	149,2,b	;volatile
 46530                           
 46531                           ; BSR set to: 57
 46532                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 46533  001F60  9B95               	bcf	149,5,b	;volatile
 46534                           
 46535                           ; BSR set to: 57
 46536                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 46537  001F62  9995               	bcf	149,4,b	;volatile
 46538  001F64  9ED2               	bcf	16338,7,c	;# 
 46539  001F66  0139               	banksel	14831	;# 
 46540  001F68  0E55               	movlw	85	;# 
 46541  001F6A  6FEF               	movwf	14831,b	;# 
 46542  001F6C  0EAA               	movlw	170	;# 
 46543  001F6E  6FEF               	movwf	14831,b	;# 
 46544  001F70  81EF               	bsf	14831,0,b	;# 
 46545  001F72  8ED2               	bsf	16338,7,c	;# 
 46546                           
 46547                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 46548  001F74  013B               	movlb	59	; () banked
 46549  001F76  6BDC               	clrf	220,b	;volatile
 46550                           
 46551                           ; BSR set to: 59
 46552                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46553  001F78  0012               	return		;funcret
 46554  001F7A                     __end_of_DMA2_Initialize:
 46555                           	opt callstack 0
 46556                           
 46557 ;; *************** function _DMA1_Initialize *****************
 46558 ;; Defined at:
 46559 ;;		line 86 in file "mcc_generated_files/dma1.c"
 46560 ;; Parameters:    Size  Location     Type
 46561 ;;		None
 46562 ;; Auto vars:     Size  Location     Type
 46563 ;;		None
 46564 ;; Return value:  Size  Location     Type
 46565 ;;                  1  [STACK] void 
 46566 ;; Registers used:
 46567 ;;		wreg, status,2
 46568 ;; Tracked objects:
 46569 ;;		On entry : 3F/3B
 46570 ;;		On exit  : 3F/3B
 46571 ;;		Unchanged: 0/0
 46572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46577 ;;Total ram usage:        0 bytes
 46578 ;; Hardware stack levels used:    1
 46579 ;; Hardware stack levels required when called:   15
 46580 ;; This function calls:
 46581 ;;		Nothing
 46582 ;; This function is called by:
 46583 ;;		_SYSTEM_Initialize
 46584 ;; This function uses a reentrant model
 46585 ;;
 46586                           
 46587                           	psect	text181
 46588  0019AE                     __ptext181:
 46589                           	opt callstack 0
 46590  0019AE                     _DMA1_Initialize:
 46591                           	opt callstack 14
 46592                           
 46593                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 46594                           
 46595                           ; BSR set to: 59
 46596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46597                           ;incstack = 0
 46598  0019AE  0E00               	movlw	0
 46599  0019B0  013B               	movlb	59	; () banked
 46600  0019B2  6FF9               	movwf	249,b	;volatile
 46601  0019B4  0E10               	movlw	16
 46602  0019B6  6FFA               	movwf	250,b	;volatile
 46603  0019B8  0E00               	movlw	0
 46604  0019BA  6FFB               	movwf	251,b	;volatile
 46605                           
 46606                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 46607  0019BC  0E3D               	movlw	61
 46608  0019BE  6FF1               	movwf	241,b	;volatile
 46609  0019C0  0E11               	movlw	17
 46610  0019C2  6FF0               	movwf	240,b	;volatile
 46611                           
 46612                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 46613  0019C4  0E03               	movlw	3
 46614  0019C6  6FFD               	movwf	253,b	;volatile
 46615                           
 46616                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 46617  0019C8  0E00               	movlw	0
 46618  0019CA  6FF8               	movwf	248,b	;volatile
 46619  0019CC  0E01               	movlw	1
 46620  0019CE  6FF7               	movwf	247,b	;volatile
 46621                           
 46622                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 46623  0019D0  0E00               	movlw	0
 46624  0019D2  6FEF               	movwf	239,b	;volatile
 46625  0019D4  0E01               	movlw	1
 46626  0019D6  6FEE               	movwf	238,b	;volatile
 46627                           
 46628                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 46629  0019D8  0E15               	movlw	21
 46630  0019DA  6FFF               	movwf	255,b	;volatile
 46631                           
 46632                           ; BSR set to: 59
 46633                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 46634  0019DC  6BFE               	clrf	254,b	;volatile
 46635                           
 46636                           ; BSR set to: 59
 46637                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 46638  0019DE  0139               	movlb	57	; () banked
 46639  0019E0  93A2               	bcf	162,1,b	;volatile
 46640                           
 46641                           ; BSR set to: 57
 46642                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 46643  0019E2  91A2               	bcf	162,0,b	;volatile
 46644                           
 46645                           ; BSR set to: 57
 46646                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 46647  0019E4  97A2               	bcf	162,3,b	;volatile
 46648                           
 46649                           ; BSR set to: 57
 46650                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 46651  0019E6  95A2               	bcf	162,2,b	;volatile
 46652                           
 46653                           ; BSR set to: 57
 46654                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 46655  0019E8  8392               	bsf	146,1,b	;volatile
 46656                           
 46657                           ; BSR set to: 57
 46658                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 46659  0019EA  8192               	bsf	146,0,b	;volatile
 46660                           
 46661                           ; BSR set to: 57
 46662                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 46663  0019EC  8792               	bsf	146,3,b	;volatile
 46664                           
 46665                           ; BSR set to: 57
 46666                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 46667  0019EE  8592               	bsf	146,2,b	;volatile
 46668                           
 46669                           ; BSR set to: 57
 46670                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 46671  0019F0  6BF1               	clrf	241,b	;volatile
 46672                           
 46673                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 46674  0019F2  0E01               	movlw	1
 46675  0019F4  6FF2               	movwf	242,b	;volatile
 46676                           
 46677                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 46678  0019F6  0E04               	movlw	4
 46679  0019F8  6FF3               	movwf	243,b	;volatile
 46680                           
 46681                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 46682  0019FA  0E02               	movlw	2
 46683  0019FC  6FF4               	movwf	244,b	;volatile
 46684                           
 46685                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 46686  0019FE  0E03               	movlw	3
 46687  001A00  6FF7               	movwf	247,b	;volatile
 46688  001A02  9ED2               	bcf	16338,7,c	;# 
 46689  001A04  0139               	banksel	14831	;# 
 46690  001A06  0E55               	movlw	85	;# 
 46691  001A08  6FEF               	movwf	14831,b	;# 
 46692  001A0A  0EAA               	movlw	170	;# 
 46693  001A0C  6FEF               	movwf	14831,b	;# 
 46694  001A0E  81EF               	bsf	14831,0,b	;# 
 46695  001A10  8ED2               	bsf	16338,7,c	;# 
 46696                           
 46697                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 46698  001A12  013B               	movlb	59	; () banked
 46699  001A14  6BFC               	clrf	252,b	;volatile
 46700                           
 46701                           ; BSR set to: 59
 46702                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46703  001A16  0012               	return		;funcret
 46704  001A18                     __end_of_DMA1_Initialize:
 46705                           	opt callstack 0
 46706                           
 46707 ;; *************** function _CRC_Initialize *****************
 46708 ;; Defined at:
 46709 ;;		line 76 in file "mcc_generated_files/crc.c"
 46710 ;; Parameters:    Size  Location     Type
 46711 ;;		None
 46712 ;; Auto vars:     Size  Location     Type
 46713 ;;  seed            2  [STACK] unsigned short 
 46714 ;;  poly            2  [STACK] unsigned short 
 46715 ;; Return value:  Size  Location     Type
 46716 ;;                  1  [STACK] void 
 46717 ;; Registers used:
 46718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 46719 ;; Tracked objects:
 46720 ;;		On entry : 0/39
 46721 ;;		On exit  : 3F/0
 46722 ;;		Unchanged: 0/0
 46723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46728 ;;Total ram usage:        0 bytes
 46729 ;; Hardware stack levels used:    1
 46730 ;; Hardware stack levels required when called:   15
 46731 ;; This function calls:
 46732 ;;		Nothing
 46733 ;; This function is called by:
 46734 ;;		_SYSTEM_Initialize
 46735 ;;		_read_cal_data
 46736 ;;		_write_cal_data
 46737 ;; This function uses a reentrant model
 46738 ;;
 46739                           
 46740                           	psect	text182
 46741  0014AA                     __ptext182:
 46742                           	opt callstack 0
 46743  0014AA                     _CRC_Initialize:
 46744                           	opt callstack 0
 46745                           
 46746                           ; BSR set to: 59
 46747                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46748  0014AA  52E6               	movf	postinc1,f,c
 46749  0014AC  52E6               	movf	postinc1,f,c
 46750  0014AE  52E6               	movf	postinc1,f,c
 46751  0014B0  52E6               	movf	postinc1,f,c
 46752                           
 46753                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 46754                           
 46755                           ;incstack = 0
 46756  0014B2  0E80               	movlw	128
 46757  0014B4  0139               	movlb	57	; () banked
 46758  0014B6  6F68               	movwf	104,b	;volatile
 46759                           
 46760                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 46761  0014B8  0E07               	movlw	7
 46762  0014BA  6F69               	movwf	105,b	;volatile
 46763                           
 46764                           ; BSR set to: 57
 46765                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 46766  0014BC  6B62               	clrf	98,b	;volatile
 46767                           
 46768                           ; BSR set to: 57
 46769                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 46770  0014BE  6B63               	clrf	99,b	;volatile
 46771                           
 46772                           ; BSR set to: 57
 46773                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 46774  0014C0  6B7C               	clrf	124,b	;volatile
 46775                           
 46776                           ; BSR set to: 57
 46777                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 46778  0014C2  6B78               	clrf	120,b	;volatile
 46779                           
 46780                           ; BSR set to: 57
 46781                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 46782  0014C4  6B77               	clrf	119,b	;volatile
 46783                           
 46784                           ; BSR set to: 57
 46785                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 46786  0014C6  6B76               	clrf	118,b	;volatile
 46787                           
 46788                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 46789  0014C8  0E3F               	movlw	63
 46790  0014CA  6F7B               	movwf	123,b	;volatile
 46791                           
 46792                           ; BSR set to: 57
 46793                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 46794  0014CC  697A               	setf	122,b	;volatile
 46795                           
 46796                           ; BSR set to: 57
 46797                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 46798  0014CE  6979               	setf	121,b	;volatile
 46799                           
 46800                           ; BSR set to: 57
 46801                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 46802  0014D0  6B7D               	clrf	125,b	;volatile
 46803                           
 46804                           ; BSR set to: 57
 46805                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 46806  0014D2  0ED5               	movlw	213
 46807  0014D4  6E34               	movwf	(btemp+10)^0,c
 46808  0014D6  0E00               	movlw	0
 46809  0014D8  6E35               	movwf	(btemp+11)^0,c
 46810                           
 46811                           ;stkvar	_poly @ sp[(-4)+2]
 46812  0014DA  0EFE               	movlw	-2
 46813  0014DC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 46814  0014E2  0EFF               	movlw	-1
 46815  0014E4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 46816                           
 46817                           ; BSR set to: 57
 46818                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 46819                           ;stkvar	_poly @ sp[(-4)+2]
 46820  0014EA  0EFF               	movlw	255
 46821  0014EC  24E1               	addwf	fsr1l,w,c
 46822  0014EE  6ED9               	movwf	fsr2l,c
 46823  0014F0  0EFF               	movlw	255
 46824  0014F2  20E2               	addwfc	fsr1h,w,c
 46825  0014F4  6EDA               	movwf	fsr2h,c
 46826  0014F6  50DF               	movf	indf2,w,c
 46827  0014F8  6F67               	movwf	103,b	;volatile
 46828                           
 46829                           ; BSR set to: 57
 46830                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 46831  0014FA  0ED5               	movlw	213
 46832  0014FC  6F66               	movwf	102,b	;volatile
 46833                           
 46834                           ; BSR set to: 57
 46835                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 46836                           ;stkvar	_seed @ sp[(-4)+0]
 46837  0014FE  0EFC               	movlw	-4
 46838  001500  6AE3               	clrf	plusw1,c
 46839  001502  0EFD               	movlw	-3
 46840  001504  6AE3               	clrf	plusw1,c
 46841                           
 46842                           ; BSR set to: 57
 46843                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 46844                           ;stkvar	_seed @ sp[(-4)+0]
 46845  001506  0EFD               	movlw	253
 46846  001508  24E1               	addwf	fsr1l,w,c
 46847  00150A  6ED9               	movwf	fsr2l,c
 46848  00150C  0EFF               	movlw	255
 46849  00150E  20E2               	addwfc	fsr1h,w,c
 46850  001510  6EDA               	movwf	fsr2h,c
 46851  001512  50DF               	movf	indf2,w,c
 46852  001514  6F63               	movwf	99,b	;volatile
 46853                           
 46854                           ; BSR set to: 57
 46855                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 46856  001516  6B62               	clrf	98,b	;volatile
 46857                           
 46858                           ; BSR set to: 57
 46859                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 46860  001518  3969               	swapf	105,w,b	;volatile
 46861  00151A  0B0F               	andlw	15
 46862  00151C  6E35               	movwf	(btemp+11)^0,c
 46863  00151E  2835               	incf	(btemp+11)^0,w,c
 46864  001520  0100               	movlb	0	; () banked
 46865  001522  6FE2               	movwf	_crcObj& (0+255),b
 46866                           
 46867                           ; BSR set to: 0
 46868                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 46869  001524  0139               	movlb	57	; () banked
 46870  001526  5169               	movf	105,w,b	;volatile
 46871  001528  0B0F               	andlw	15
 46872  00152A  6E35               	movwf	(btemp+11)^0,c
 46873  00152C  2835               	incf	(btemp+11)^0,w,c
 46874  00152E  0100               	movlb	0	; () banked
 46875  001530  6FE3               	movwf	(_crcObj+1)& (0+255),b
 46876                           
 46877                           ; BSR set to: 0
 46878                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46879  001532  52E5               	movf	postdec1,f,c
 46880  001534  52E5               	movf	postdec1,f,c
 46881  001536  52E5               	movf	postdec1,f,c
 46882  001538  52E5               	movf	postdec1,f,c
 46883  00153A  0012               	return		;funcret
 46884  00153C                     __end_of_CRC_Initialize:
 46885                           	opt callstack 0
 46886                           
 46887 ;; *************** function _CLKREF_Initialize *****************
 46888 ;; Defined at:
 46889 ;;		line 58 in file "mcc_generated_files/clkref.c"
 46890 ;; Parameters:    Size  Location     Type
 46891 ;;		None
 46892 ;; Auto vars:     Size  Location     Type
 46893 ;;		None
 46894 ;; Return value:  Size  Location     Type
 46895 ;;                  1  [STACK] void 
 46896 ;; Registers used:
 46897 ;;		wreg, status,2
 46898 ;; Tracked objects:
 46899 ;;		On entry : 3F/3B
 46900 ;;		On exit  : 3F/3C
 46901 ;;		Unchanged: 0/0
 46902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46907 ;;Total ram usage:        0 bytes
 46908 ;; Hardware stack levels used:    1
 46909 ;; Hardware stack levels required when called:   15
 46910 ;; This function calls:
 46911 ;;		Nothing
 46912 ;; This function is called by:
 46913 ;;		_SYSTEM_Initialize
 46914 ;; This function uses a reentrant model
 46915 ;;
 46916                           
 46917                           	psect	text183
 46918  002F02                     __ptext183:
 46919                           	opt callstack 0
 46920  002F02                     _CLKREF_Initialize:
 46921                           	opt callstack 14
 46922                           
 46923                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 46924                           
 46925                           ; BSR set to: 0
 46926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46927                           ;incstack = 0
 46928  002F02  013C               	movlb	60	; () banked
 46929  002F04  6BE6               	clrf	230,b	;volatile
 46930                           
 46931                           ; BSR set to: 60
 46932                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 46933  002F06  0E94               	movlw	148
 46934  002F08  6FE5               	movwf	229,b	;volatile
 46935                           
 46936                           ; BSR set to: 60
 46937                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 46938  002F0A  0012               	return		;funcret
 46939  002F0C                     __end_of_CLKREF_Initialize:
 46940                           	opt callstack 0
 46941                           
 46942 ;; *************** function _ADCC_Initialize *****************
 46943 ;; Defined at:
 46944 ;;		line 65 in file "mcc_generated_files/adcc.c"
 46945 ;; Parameters:    Size  Location     Type
 46946 ;;		None
 46947 ;; Auto vars:     Size  Location     Type
 46948 ;;		None
 46949 ;; Return value:  Size  Location     Type
 46950 ;;                  1  [STACK] void 
 46951 ;; Registers used:
 46952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 46953 ;; Tracked objects:
 46954 ;;		On entry : 3F/0
 46955 ;;		On exit  : 0/0
 46956 ;;		Unchanged: 0/0
 46957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46962 ;;Total ram usage:        0 bytes
 46963 ;; Hardware stack levels used:    1
 46964 ;; Hardware stack levels required when called:   16
 46965 ;; This function calls:
 46966 ;;		_ADCC_SetADIInterruptHandler
 46967 ;;		_ADCC_SetADTIInterruptHandler
 46968 ;; This function is called by:
 46969 ;;		_SYSTEM_Initialize
 46970 ;; This function uses a reentrant model
 46971 ;;
 46972                           
 46973                           	psect	text184
 46974  001A18                     __ptext184:
 46975                           	opt callstack 0
 46976  001A18                     _ADCC_Initialize:
 46977                           	opt callstack 13
 46978                           
 46979                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 46980                           
 46981                           ; BSR set to: 60
 46982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46983                           ;incstack = 0
 46984  001A18  013E               	movlb	62	; () banked
 46985  001A1A  6BDE               	clrf	222,b	;volatile
 46986                           
 46987                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 46988  001A1C  6BDF               	clrf	223,b	;volatile
 46989                           
 46990                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 46991  001A1E  6BE0               	clrf	224,b	;volatile
 46992                           
 46993                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 46994  001A20  6BE1               	clrf	225,b	;volatile
 46995                           
 46996                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 46997  001A22  6BE4               	clrf	228,b	;volatile
 46998                           
 46999                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 47000  001A24  6BE5               	clrf	229,b	;volatile
 47001                           
 47002                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 47003  001A26  6BEA               	clrf	234,b	;volatile
 47004                           
 47005                           ; BSR set to: 62
 47006                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 47007  001A28  0E40               	movlw	64
 47008  001A2A  6FEC               	movwf	236,b	;volatile
 47009                           
 47010                           ; BSR set to: 62
 47011                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 47012  001A2C  6BF1               	clrf	241,b	;volatile
 47013                           
 47014                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 47015  001A2E  0E20               	movlw	32
 47016  001A30  6FF3               	movwf	243,b	;volatile
 47017                           
 47018                           ; BSR set to: 62
 47019                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 47020  001A32  6BF4               	clrf	244,b	;volatile
 47021                           
 47022                           ; BSR set to: 62
 47023                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 47024  001A34  6BF5               	clrf	245,b	;volatile
 47025                           
 47026                           ; BSR set to: 62
 47027                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 47028  001A36  6BF6               	clrf	246,b	;volatile
 47029                           
 47030                           ; BSR set to: 62
 47031                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 47032  001A38  6BF7               	clrf	247,b	;volatile
 47033                           
 47034                           ; BSR set to: 62
 47035                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 47036  001A3A  6BF9               	clrf	249,b	;volatile
 47037                           
 47038                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 47039  001A3C  0E5B               	movlw	91
 47040  001A3E  6FFA               	movwf	250,b	;volatile
 47041                           
 47042                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 47043  001A40  0E27               	movlw	39
 47044  001A42  6FFB               	movwf	251,b	;volatile
 47045                           
 47046                           ; BSR set to: 62
 47047                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 47048  001A44  6BFC               	clrf	252,b	;volatile
 47049                           
 47050                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 47051  001A46  0E02               	movlw	2
 47052  001A48  6FFD               	movwf	253,b	;volatile
 47053                           
 47054                           ; BSR set to: 62
 47055                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 47056  001A4A  6BFE               	clrf	254,b	;volatile
 47057                           
 47058                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 47059  001A4C  0E07               	movlw	7
 47060  001A4E  6FFF               	movwf	255,b	;volatile
 47061                           
 47062                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 47063  001A50  0E84               	movlw	132
 47064  001A52  6FF8               	movwf	248,b	;volatile
 47065                           
 47066                           ; BSR set to: 62
 47067                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 47068  001A54  0139               	movlb	57	; () banked
 47069  001A56  95A1               	bcf	161,2,b	;volatile
 47070                           
 47071                           ; BSR set to: 57
 47072                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 47073  001A58  8591               	bsf	145,2,b	;volatile
 47074                           
 47075                           ; BSR set to: 57
 47076                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 47077  001A5A  0E94               	movlw	low _ADCC_DefaultInterruptHandler
 47078  001A5C  6EE6               	movwf	postinc1,c
 47079  001A5E  0E2F               	movlw	high _ADCC_DefaultInterruptHandler
 47080  001A60  6EE6               	movwf	postinc1,c
 47081  001A62  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 47082  001A64  6EE6               	movwf	postinc1,c
 47083  001A66  EC5D  F015         	call	_ADCC_SetADIInterruptHandler	;wreg free
 47084                           
 47085                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 47086  001A6A  0139               	movlb	57	; () banked
 47087  001A6C  97A1               	bcf	161,3,b	;volatile
 47088                           
 47089                           ; BSR set to: 57
 47090                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 47091  001A6E  8791               	bsf	145,3,b	;volatile
 47092                           
 47093                           ; BSR set to: 57
 47094                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 47095  001A70  0E94               	movlw	low _ADCC_DefaultInterruptHandler
 47096  001A72  6EE6               	movwf	postinc1,c
 47097  001A74  0E2F               	movlw	high _ADCC_DefaultInterruptHandler
 47098  001A76  6EE6               	movwf	postinc1,c
 47099  001A78  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 47100  001A7A  6EE6               	movwf	postinc1,c
 47101  001A7C  EC49  F015         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 47102                           
 47103                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 47104  001A80  0012               	return		;funcret
 47105  001A82                     __end_of_ADCC_Initialize:
 47106                           	opt callstack 0
 47107                           
 47108 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 47109 ;; Defined at:
 47110 ;;		line 336 in file "mcc_generated_files/adcc.c"
 47111 ;; Parameters:    Size  Location     Type
 47112 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 47113 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 47114 ;; Auto vars:     Size  Location     Type
 47115 ;;		None
 47116 ;; Return value:  Size  Location     Type
 47117 ;;                  1  [STACK] void 
 47118 ;; Registers used:
 47119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 47120 ;; Tracked objects:
 47121 ;;		On entry : 0/1
 47122 ;;		On exit  : 0/0
 47123 ;;		Unchanged: 0/0
 47124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47129 ;;Total ram usage:        0 bytes
 47130 ;; Hardware stack levels used:    1
 47131 ;; Hardware stack levels required when called:   15
 47132 ;; This function calls:
 47133 ;;		Nothing
 47134 ;; This function is called by:
 47135 ;;		_ADCC_Initialize
 47136 ;;		_start_adc_scan
 47137 ;; This function uses a reentrant model
 47138 ;;
 47139                           
 47140                           	psect	text185
 47141  002A92                     __ptext185:
 47142                           	opt callstack 0
 47143  002A92                     _ADCC_SetADTIInterruptHandler:
 47144                           	opt callstack 14
 47145                           
 47146                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 47147                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 47148                           
 47149                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47150                           ;incstack = 0
 47151  002A92  50E1               	movf	fsr1l,w,c
 47152  002A94  0FFD               	addlw	-3
 47153  002A96  6ED9               	movwf	fsr2l,c
 47154  002A98  50E2               	movf	fsr1h,w,c
 47155  002A9A  6EDA               	movwf	fsr2h,c
 47156  002A9C  0EFF               	movlw	255
 47157  002A9E  22DA               	addwfc	fsr2h,f,c
 47158  002AA0  006F FF78  F0A1    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 47159  002AA6  006F FF78  F0A2    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 47160  002AAC  006F FF74  F0A3    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 47161                           
 47162                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 47163  002AB2  52E5               	movf	postdec1,f,c
 47164  002AB4  52E5               	movf	postdec1,f,c
 47165  002AB6  52E5               	movf	postdec1,f,c
 47166  002AB8  0012               	return		;funcret
 47167  002ABA                     __end_of_ADCC_SetADTIInterruptHandler:
 47168                           	opt callstack 0
 47169                           
 47170 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 47171 ;; Defined at:
 47172 ;;		line 323 in file "mcc_generated_files/adcc.c"
 47173 ;; Parameters:    Size  Location     Type
 47174 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 47175 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 47176 ;; Auto vars:     Size  Location     Type
 47177 ;;		None
 47178 ;; Return value:  Size  Location     Type
 47179 ;;                  1  [STACK] void 
 47180 ;; Registers used:
 47181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 47182 ;; Tracked objects:
 47183 ;;		On entry : 7/1
 47184 ;;		On exit  : 0/0
 47185 ;;		Unchanged: 0/0
 47186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47191 ;;Total ram usage:        0 bytes
 47192 ;; Hardware stack levels used:    1
 47193 ;; Hardware stack levels required when called:   15
 47194 ;; This function calls:
 47195 ;;		Nothing
 47196 ;; This function is called by:
 47197 ;;		_ADCC_Initialize
 47198 ;;		_start_adc_scan
 47199 ;; This function uses a reentrant model
 47200 ;;
 47201                           
 47202                           	psect	text186
 47203  002ABA                     __ptext186:
 47204                           	opt callstack 0
 47205  002ABA                     _ADCC_SetADIInterruptHandler:
 47206                           	opt callstack 14
 47207                           
 47208                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 47209                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 47210                           
 47211                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47212                           ;incstack = 0
 47213  002ABA  50E1               	movf	fsr1l,w,c
 47214  002ABC  0FFD               	addlw	-3
 47215  002ABE  6ED9               	movwf	fsr2l,c
 47216  002AC0  50E2               	movf	fsr1h,w,c
 47217  002AC2  6EDA               	movwf	fsr2h,c
 47218  002AC4  0EFF               	movlw	255
 47219  002AC6  22DA               	addwfc	fsr2h,f,c
 47220  002AC8  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 47221  002ACE  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 47222  002AD4  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 47223                           
 47224                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 47225  002ADA  52E5               	movf	postdec1,f,c
 47226  002ADC  52E5               	movf	postdec1,f,c
 47227  002ADE  52E5               	movf	postdec1,f,c
 47228  002AE0  0012               	return		;funcret
 47229  002AE2                     __end_of_ADCC_SetADIInterruptHandler:
 47230                           	opt callstack 0
 47231                           
 47232 ;; *************** function _INT1_ISR *****************
 47233 ;; Defined at:
 47234 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 47235 ;; Parameters:    Size  Location     Type
 47236 ;;		None
 47237 ;; Auto vars:     Size  Location     Type
 47238 ;;		None
 47239 ;; Return value:  Size  Location     Type
 47240 ;;                  1    wreg      void 
 47241 ;; Registers used:
 47242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 47243 ;; Tracked objects:
 47244 ;;		On entry : 0/0
 47245 ;;		On exit  : 0/0
 47246 ;;		Unchanged: 0/0
 47247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47250 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47251 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47252 ;;Total ram usage:        4 bytes
 47253 ;; Hardware stack levels used:    1
 47254 ;; Hardware stack levels required when called:    5
 47255 ;; This function calls:
 47256 ;;		_INT1_CallBack
 47257 ;; This function is called by:
 47258 ;;		Interrupt level 1
 47259 ;; This function uses a non-reentrant model
 47260 ;;
 47261                           
 47262                           	psect	text187
 47263  0024D4                     __ptext187:
 47264                           	opt callstack 0
 47265  0024D4                     _INT1_ISR:
 47266                           	opt callstack 12
 47267                           
 47268                           ;incstack = 0
 47269  0024D4  006F FF60  F007    	movff	status,??_INT1_ISR
 47270  0024DA  0060  F0A8  F008   	movff	btemp,??_INT1_ISR+1
 47271  0024E0  0060  F0D0  F009   	movff	btemp+10,??_INT1_ISR+2
 47272  0024E6  0060  F0D4  F00A   	movff	btemp+11,??_INT1_ISR+3
 47273  0024EC  EE16  F196         	lfsr	1,___intlo_sp
 47274                           
 47275                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 47276  0024F0  0139               	movlb	57	; () banked
 47277  0024F2  91A5               	bcf	165,0,b	;volatile
 47278                           
 47279                           ; BSR set to: 57
 47280                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 47281  0024F4  ECC0  F015         	call	_INT1_CallBack	;wreg free
 47282  0024F8  0060  F028  F035   	movff	??_INT1_ISR+3,btemp+11
 47283  0024FE  0060  F024  F034   	movff	??_INT1_ISR+2,btemp+10
 47284  002504  0060  F020  F02A   	movff	??_INT1_ISR+1,btemp
 47285  00250A  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 47286  002510  0011               	retfie		f
 47287  002512                     __end_of_INT1_ISR:
 47288                           	opt callstack 0
 47289                           
 47290 ;; *************** function _INT1_CallBack *****************
 47291 ;; Defined at:
 47292 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 47293 ;; Parameters:    Size  Location     Type
 47294 ;;		None
 47295 ;; Auto vars:     Size  Location     Type
 47296 ;;		None
 47297 ;; Return value:  Size  Location     Type
 47298 ;;                  1  [STACK] void 
 47299 ;; Registers used:
 47300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 47301 ;; Tracked objects:
 47302 ;;		On entry : 3F/39
 47303 ;;		On exit  : 0/0
 47304 ;;		Unchanged: 0/0
 47305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47310 ;;Total ram usage:        0 bytes
 47311 ;; Hardware stack levels used:    1
 47312 ;; Hardware stack levels required when called:    4
 47313 ;; This function calls:
 47314 ;;		Absolute function
 47315 ;;		_INT1_DefaultInterruptHandler
 47316 ;;		_switch_handler
 47317 ;; This function is called by:
 47318 ;;		_INT1_ISR
 47319 ;; This function uses a reentrant model
 47320 ;;
 47321                           
 47322                           	psect	text188
 47323  002B80                     __ptext188:
 47324                           	opt callstack 0
 47325  002B80                     _INT1_CallBack:
 47326                           	opt callstack 12
 47327                           
 47328                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 47329                           
 47330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47331                           ;incstack = 0
 47332  002B80  0100               	movlb	0	; () banked
 47333  002B82  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 47334  002B84  11B1               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 47335  002B86  11B2               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 47336  002B88  B4D8               	btfsc	status,2,c
 47337  002B8A  0012               	return	
 47338                           
 47339                           ; BSR set to: 0
 47340                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 47341  002B8C  D801               	call	u1326_28
 47342  002B8E  0012               	return	
 47343  002B90                     u1326_28:
 47344  002B90  0005               	push	
 47345  002B92  6EFA               	movwf	pclath,c
 47346  002B94  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 47347  002B96  6EFD               	movwf	tosl,c
 47348  002B98  51B1               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 47349  002B9A  6EFE               	movwf	tosh,c
 47350  002B9C  51B2               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 47351  002B9E  6EFF               	movwf	tosu,c
 47352  002BA0  50FA               	movf	pclath,w,c
 47353  002BA2  0012               	return		;indir
 47354  002BA4                     __end_of_INT1_CallBack:
 47355                           	opt callstack 0
 47356                           
 47357 ;; *************** function _INT1_DefaultInterruptHandler *****************
 47358 ;; Defined at:
 47359 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 47360 ;; Parameters:    Size  Location     Type
 47361 ;;		None
 47362 ;; Auto vars:     Size  Location     Type
 47363 ;;		None
 47364 ;; Return value:  Size  Location     Type
 47365 ;;                  1  [STACK] void 
 47366 ;; Registers used:
 47367 ;;		None
 47368 ;; Tracked objects:
 47369 ;;		On entry : 3F/0
 47370 ;;		On exit  : 0/0
 47371 ;;		Unchanged: 0/0
 47372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47377 ;;Total ram usage:        0 bytes
 47378 ;; Hardware stack levels used:    1
 47379 ;; Hardware stack levels required when called:    3
 47380 ;; This function calls:
 47381 ;;		Nothing
 47382 ;; This function is called by:
 47383 ;;		_EXT_INT_Initialize
 47384 ;;		_INT1_CallBack
 47385 ;; This function uses a reentrant model
 47386 ;;
 47387                           
 47388                           	psect	text189
 47389  002F8E                     __ptext189:
 47390                           	opt callstack 0
 47391  002F8E                     _INT1_DefaultInterruptHandler:
 47392                           	opt callstack 12
 47393                           
 47394                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47395                           
 47396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47397                           ;incstack = 0
 47398  002F8E  0012               	return		;funcret
 47399  002F90                     __end_of_INT1_DefaultInterruptHandler:
 47400                           	opt callstack 0
 47401                           
 47402 ;; *************** function _switch_handler *****************
 47403 ;; Defined at:
 47404 ;;		line 58 in file "dio.c"
 47405 ;; Parameters:    Size  Location     Type
 47406 ;;		None
 47407 ;; Auto vars:     Size  Location     Type
 47408 ;;  i               1  [STACK] unsigned char 
 47409 ;;  sw_value        1  [STACK] unsigned char 
 47410 ;; Return value:  Size  Location     Type
 47411 ;;                  1  [STACK] void 
 47412 ;; Registers used:
 47413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 47414 ;; Tracked objects:
 47415 ;;		On entry : 3F/0
 47416 ;;		On exit  : 0/0
 47417 ;;		Unchanged: 0/0
 47418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47423 ;;Total ram usage:        0 bytes
 47424 ;; Hardware stack levels used:    1
 47425 ;; Hardware stack levels required when called:    3
 47426 ;; This function calls:
 47427 ;;		Nothing
 47428 ;; This function is called by:
 47429 ;;		_start_switch_handler
 47430 ;;		_INT1_CallBack
 47431 ;; This function uses a reentrant model
 47432 ;;
 47433                           
 47434                           	psect	text190
 47435  01F576                     __ptext190:
 47436                           	opt callstack 0
 47437  01F576                     _switch_handler:
 47438                           	opt callstack 0
 47439                           
 47440                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47441  01F576  52E6               	movf	postinc1,f,c
 47442  01F578  52E6               	movf	postinc1,f,c
 47443                           
 47444                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 47445                           ;stkvar	_i @ sp[(-2)+0]
 47446                           
 47447                           ;incstack = 0
 47448  01F57A  0EFE               	movlw	-2
 47449  01F57C  6AE3               	clrf	plusw1,c
 47450  01F57E  9ABF               	bcf	191,5,c	;volatile
 47451                           
 47452                           ;dio.c: 72:  __nop();
 47453  01F580  F000               	nop	
 47454                           
 47455                           ;dio.c: 73:  __nop();
 47456  01F582  F000               	nop	
 47457                           
 47458                           ;dio.c: 74:  __nop();
 47459  01F584  F000               	nop	
 47460                           
 47461                           ;dio.c: 75:  __nop();
 47462  01F586  F000               	nop	
 47463                           
 47464                           ;dio.c: 76:  __nop();
 47465  01F588  F000               	nop	
 47466                           
 47467                           ;dio.c: 77:  __nop();
 47468  01F58A  F000               	nop	
 47469  01F58C  D016               	goto	l13853
 47470  01F58E                     l13839:
 47471                           
 47472                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 47473  01F58E  A6CF               	btfss	207,3,c	;volatile
 47474  01F590  D00E               	goto	u1292_20
 47475  01F592  D00A               	goto	u1292_21
 47476  01F594                     u1290_28:
 47477                           
 47478                           ;stkvar	_sw_value @ sp[(-2)+1]
 47479  01F594  0EFF               	movlw	-1
 47480  01F596  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47481                           
 47482                           ;dio.c: 83:    break;
 47483  01F59C  D027               	goto	l13855
 47484  01F59E                     l13841:
 47485                           
 47486                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 47487  01F59E  A4CF               	btfss	207,2,c	;volatile
 47488  01F5A0  D006               	goto	u1292_20
 47489  01F5A2  D002               	goto	u1292_21
 47490  01F5A4                     l13843:
 47491                           
 47492                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 47493  01F5A4  A6CD               	btfss	205,3,c	;volatile
 47494  01F5A6  D003               	goto	u1292_20
 47495  01F5A8                     u1292_21:
 47496  01F5A8  6A35               	clrf	(btemp+11)^0,c
 47497  01F5AA  2A35               	incf	(btemp+11)^0,f,c
 47498  01F5AC  D7F3               	goto	u1290_28
 47499  01F5AE                     u1292_20:
 47500  01F5AE  6A35               	clrf	(btemp+11)^0,c
 47501  01F5B0  D7F1               	goto	u1290_28
 47502  01F5B2                     l13845:
 47503                           
 47504                           ;dio.c: 91:    sw_value = 1;
 47505                           ;stkvar	_sw_value @ sp[(-2)+1]
 47506  01F5B2  0EFF               	movlw	-1
 47507  01F5B4  6AE3               	clrf	plusw1,c
 47508  01F5B6  2AE3               	incf	plusw1,f,c
 47509                           
 47510                           ;dio.c: 92:    break;
 47511  01F5B8  D019               	goto	l13855
 47512  01F5BA                     l13853:
 47513                           
 47514                           ;stkvar	_i @ sp[(-2)+0]
 47515  01F5BA  0EFE               	movlw	-2
 47516  01F5BC  50E3               	movf	plusw1,w,c
 47517  01F5BE  6E34               	movwf	(btemp+10)^0,c
 47518  01F5C0  6A35               	clrf	(btemp+11)^0,c
 47519                           
 47520                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 47521                           ; Switch size 1, requested type "simple"
 47522                           ; Number of cases is 1, Range of values is 0 to 0
 47523                           ; switch strategies available:
 47524                           ; Name         Instructions Cycles
 47525                           ; simple_byte            4     3 (average)
 47526                           ;	Chosen strategy is simple_byte
 47527  01F5C2  5035               	movf	(btemp+11)^0,w,c
 47528  01F5C4  0A00               	xorlw	0	; case 0
 47529  01F5C6  A4D8               	btfss	status,2,c
 47530  01F5C8  D7F4               	goto	l13845
 47531                           
 47532                           ; Switch size 1, requested type "simple"
 47533                           ; Number of cases is 5, Range of values is 0 to 4
 47534                           ; switch strategies available:
 47535                           ; Name         Instructions Cycles
 47536                           ; simple_byte           16     9 (average)
 47537                           ;	Chosen strategy is simple_byte
 47538  01F5CA  5034               	movf	(btemp+10)^0,w,c
 47539  01F5CC  0A00               	xorlw	0	; case 0
 47540  01F5CE  B4D8               	btfsc	status,2,c
 47541  01F5D0  D7F0               	goto	l13845
 47542  01F5D2  0A01               	xorlw	1	; case 1
 47543  01F5D4  B4D8               	btfsc	status,2,c
 47544  01F5D6  D7ED               	goto	l13845
 47545  01F5D8  0A03               	xorlw	3	; case 2
 47546  01F5DA  B4D8               	btfsc	status,2,c
 47547  01F5DC  D7E0               	goto	l13841
 47548  01F5DE  0A01               	xorlw	1	; case 3
 47549  01F5E0  B4D8               	btfsc	status,2,c
 47550  01F5E2  D7D5               	goto	l13839
 47551  01F5E4  0A07               	xorlw	7	; case 4
 47552  01F5E6  B4D8               	btfsc	status,2,c
 47553  01F5E8  D7DD               	goto	l13843
 47554  01F5EA  D7E3               	goto	l13845
 47555  01F5EC                     l13855:
 47556                           
 47557                           ;dio.c: 102:   if (sw_value) {
 47558                           ;stkvar	_sw_value @ sp[(-2)+1]
 47559  01F5EC  0EFF               	movlw	-1
 47560  01F5EE  50E3               	movf	plusw1,w,c
 47561  01F5F0  B4D8               	btfsc	status,2,c
 47562  01F5F2  D018               	goto	l13861
 47563                           
 47564                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 47565                           ;stkvar	_i @ sp[(-2)+0]
 47566  01F5F4  0EFE               	movlw	-2
 47567  01F5F6  50E3               	movf	plusw1,w,c
 47568  01F5F8  0D05               	mullw	5
 47569  01F5FA  0EA4               	movlw	low _S
 47570  01F5FC  24F3               	addwf	243,w,c
 47571  01F5FE  6ED9               	movwf	fsr2l,c
 47572  01F600  0E01               	movlw	high _S
 47573  01F602  20F4               	addwfc	prodh,w,c
 47574  01F604  6EDA               	movwf	fsr2h,c
 47575  01F606  04DE               	decf	postinc2,w,c
 47576  01F608  A4D8               	btfss	status,2,c
 47577  01F60A  D049               	goto	l13869
 47578                           
 47579                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 47580                           ;stkvar	_i @ sp[(-2)+0]
 47581  01F60C  0EFE               	movlw	-2
 47582  01F60E  50E3               	movf	plusw1,w,c
 47583  01F610  0D05               	mullw	5
 47584  01F612  0EA4               	movlw	low _S
 47585  01F614  24F3               	addwf	243,w,c
 47586  01F616  6ED9               	movwf	fsr2l,c
 47587  01F618  0E01               	movlw	high _S
 47588  01F61A  20F4               	addwfc	prodh,w,c
 47589  01F61C  6EDA               	movwf	fsr2h,c
 47590  01F61E  0E00               	movlw	0
 47591  01F620  6EDF               	movwf	indf2,c
 47592  01F622  D03D               	goto	l13869
 47593  01F624                     l13861:
 47594                           
 47595                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 47596                           ;stkvar	_i @ sp[(-2)+0]
 47597  01F624  0EFE               	movlw	-2
 47598  01F626  50E3               	movf	plusw1,w,c
 47599  01F628  0D05               	mullw	5
 47600  01F62A  0EA4               	movlw	low _S
 47601  01F62C  24F3               	addwf	243,w,c
 47602  01F62E  6ED9               	movwf	fsr2l,c
 47603  01F630  0E01               	movlw	high _S
 47604  01F632  20F4               	addwfc	prodh,w,c
 47605  01F634  6EDA               	movwf	fsr2h,c
 47606  01F636  50DF               	movf	indf2,w,c
 47607  01F638  A4D8               	btfss	status,2,c
 47608  01F63A  D031               	goto	l13869
 47609                           
 47610                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 47611                           ;stkvar	_i @ sp[(-2)+0]
 47612  01F63C  0EFE               	movlw	-2
 47613  01F63E  50E3               	movf	plusw1,w,c
 47614  01F640  0D05               	mullw	5
 47615  01F642  0EA4               	movlw	low _S
 47616  01F644  24F3               	addwf	243,w,c
 47617  01F646  6ED9               	movwf	fsr2l,c
 47618  01F648  0E01               	movlw	high _S
 47619  01F64A  20F4               	addwfc	prodh,w,c
 47620  01F64C  6EDA               	movwf	fsr2h,c
 47621  01F64E  0E01               	movlw	1
 47622  01F650  6EDF               	movwf	indf2,c
 47623                           
 47624                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 47625  01F652  EE20  F2B8         	lfsr	2,_V+177	;volatile
 47626                           
 47627                           ;stkvar	_i @ sp[(-2)+0]
 47628  01F656  0EFE               	movlw	-2
 47629  01F658  50E3               	movf	plusw1,w,c
 47630  01F65A  0D05               	mullw	5
 47631  01F65C  0EA5               	movlw	low (_S+1)
 47632  01F65E  24F3               	addwf	243,w,c
 47633  01F660  6EE9               	movwf	fsr0l,c
 47634  01F662  0E01               	movlw	high (_S+1)
 47635  01F664  20F4               	addwfc	prodh,w,c
 47636  01F666  6EEA               	movwf	fsr0h,c
 47637  01F668  006F FF7B FFEE     	movff	postinc2,postinc0
 47638  01F66E  006F FF7B FFEE     	movff	postinc2,postinc0
 47639  01F674  006F FF7B FFEE     	movff	postinc2,postinc0
 47640  01F67A  006F FF7B FFEE     	movff	postinc2,postinc0
 47641                           
 47642                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 47643                           ;stkvar	_i @ sp[(-2)+0]
 47644  01F680  0EFE               	movlw	-2
 47645  01F682  006F FF8C  F035    	movff	plusw1,btemp+11
 47646  01F688  0E01               	movlw	1
 47647  01F68A  6E34               	movwf	(btemp+10)^0,c
 47648  01F68C  2A35               	incf	(btemp+11)^0,f,c
 47649  01F68E  D002               	goto	u1296_24
 47650  01F690                     u1296_25:
 47651  01F690  90D8               	bcf	status,0,c
 47652  01F692  3634               	rlcf	(btemp+10)^0,f,c
 47653  01F694                     u1296_24:
 47654  01F694  2E35               	decfsz	(btemp+11)^0,f,c
 47655  01F696  D7FC               	goto	u1296_25
 47656  01F698  5034               	movf	(btemp+10)^0,w,c
 47657  01F69A  0101               	movlb	1	; () banked
 47658  01F69C  13CC               	iorwf	(_S+40)& (0+255),f,b	;volatile
 47659  01F69E                     l13869:
 47660                           
 47661                           ;dio.c: 113:  } while (++i < 6);
 47662                           ;stkvar	_i @ sp[(-2)+0]
 47663  01F69E  0EFE               	movlw	-2
 47664  01F6A0  2AE3               	incf	plusw1,f,c
 47665  01F6A2  0EFE               	movlw	-2
 47666  01F6A4  006F FF8C  F02A    	movff	plusw1,btemp
 47667  01F6AA  0E05               	movlw	5
 47668  01F6AC  642A               	cpfsgt	btemp^0,c
 47669  01F6AE  D785               	goto	l13853
 47670                           
 47671                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 47672  01F6B0  8ABF               	bsf	191,5,c	;volatile
 47673                           
 47674                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 47675  01F6B2  52E5               	movf	postdec1,f,c
 47676  01F6B4  52E5               	movf	postdec1,f,c
 47677  01F6B6  0012               	return		;funcret
 47678  01F6B8                     __end_of_switch_handler:
 47679                           	opt callstack 0
 47680                           
 47681 ;; *************** function _TMR5_ISR *****************
 47682 ;; Defined at:
 47683 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 47684 ;; Parameters:    Size  Location     Type
 47685 ;;		None
 47686 ;; Auto vars:     Size  Location     Type
 47687 ;;		None
 47688 ;; Return value:  Size  Location     Type
 47689 ;;                  1    wreg      void 
 47690 ;; Registers used:
 47691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 47692 ;; Tracked objects:
 47693 ;;		On entry : 0/0
 47694 ;;		On exit  : 3F/0
 47695 ;;		Unchanged: 0/0
 47696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47699 ;;      Temps:         31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47700 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47701 ;;Total ram usage:       31 bytes
 47702 ;; Hardware stack levels used:    1
 47703 ;; Hardware stack levels required when called:    9
 47704 ;; This function calls:
 47705 ;;		_TMR5_CallBack
 47706 ;;		_TMR5_WriteTimer
 47707 ;; This function is called by:
 47708 ;;		Interrupt level 1
 47709 ;; This function uses a non-reentrant model
 47710 ;;
 47711                           
 47712                           	psect	text191
 47713  01DFA8                     __ptext191:
 47714                           	opt callstack 0
 47715  01DFA8                     _TMR5_ISR:
 47716                           	opt callstack 8
 47717                           
 47718                           ;incstack = 0
 47719  01DFA8  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 47720  01DFAE  0060  F0A8  F00E   	movff	btemp,??_TMR5_ISR+3
 47721  01DFB4  0060  F0AC  F00F   	movff	btemp+1,??_TMR5_ISR+4
 47722  01DFBA  0060  F0B0  F010   	movff	btemp+2,??_TMR5_ISR+5
 47723  01DFC0  0060  F0B4  F011   	movff	btemp+3,??_TMR5_ISR+6
 47724  01DFC6  0060  F0B8  F012   	movff	btemp+4,??_TMR5_ISR+7
 47725  01DFCC  0060  F0BC  F013   	movff	btemp+5,??_TMR5_ISR+8
 47726  01DFD2  0060  F0C0  F014   	movff	btemp+6,??_TMR5_ISR+9
 47727  01DFD8  0060  F0C4  F015   	movff	btemp+7,??_TMR5_ISR+10
 47728  01DFDE  0060  F0C8  F016   	movff	btemp+8,??_TMR5_ISR+11
 47729  01DFE4  0060  F0CC  F017   	movff	btemp+9,??_TMR5_ISR+12
 47730  01DFEA  0060  F0D0  F018   	movff	btemp+10,??_TMR5_ISR+13
 47731  01DFF0  0060  F0D4  F019   	movff	btemp+11,??_TMR5_ISR+14
 47732  01DFF6  0060  F0E8  F01A   	movff	btemp+16,??_TMR5_ISR+15
 47733  01DFFC  0060  F0EC  F01B   	movff	btemp+17,??_TMR5_ISR+16
 47734  01E002  0060  F0F0  F01C   	movff	btemp+18,??_TMR5_ISR+17
 47735  01E008  0060  F0F4  F01D   	movff	btemp+19,??_TMR5_ISR+18
 47736  01E00E  0060  F0F8  F01E   	movff	btemp+20,??_TMR5_ISR+19
 47737  01E014  0060  F0FC  F01F   	movff	btemp+21,??_TMR5_ISR+20
 47738  01E01A  0060  F100  F020   	movff	btemp+22,??_TMR5_ISR+21
 47739  01E020  0060  F104  F021   	movff	btemp+23,??_TMR5_ISR+22
 47740  01E026  0060  F108  F022   	movff	btemp+24,??_TMR5_ISR+23
 47741  01E02C  0060  F10C  F023   	movff	btemp+25,??_TMR5_ISR+24
 47742  01E032  0060  F110  F024   	movff	btemp+26,??_TMR5_ISR+25
 47743  01E038  0060  F114  F025   	movff	btemp+27,??_TMR5_ISR+26
 47744  01E03E  0060  F118  F026   	movff	btemp+28,??_TMR5_ISR+27
 47745  01E044  0060  F11C  F027   	movff	btemp+29,??_TMR5_ISR+28
 47746  01E04A  0060  F120  F028   	movff	btemp+30,??_TMR5_ISR+29
 47747  01E050  0060  F124  F029   	movff	btemp+31,??_TMR5_ISR+30
 47748  01E056  EE16  F196         	lfsr	1,___intlo_sp
 47749                           
 47750                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 47751  01E05A  0139               	movlb	57	; () banked
 47752  01E05C  9DA8               	bcf	168,6,b	;volatile
 47753                           
 47754                           ; BSR set to: 57
 47755                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 47756  01E05E  0060  F313  FFE6   	movff	_timer5ReloadVal,postinc1
 47757  01E064  0060  F317  FFE6   	movff	_timer5ReloadVal+1,postinc1
 47758  01E06A  EC29  F012         	call	_TMR5_WriteTimer	;wreg free
 47759                           
 47760                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 47761  01E06E  0102               	movlb	2	; () banked
 47762  01E070  51AE               	movf	(_V+167)& (0+255),w,b	;volatile
 47763  01E072  6E0B               	movwf	??_TMR5_ISR^0,c
 47764  01E074  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 47765  01E076  0E05               	movlw	5
 47766  01E078  260B               	addwf	??_TMR5_ISR^0,f,c
 47767  01E07A  0E00               	movlw	0
 47768  01E07C  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 47769  01E07E  0100               	movlb	0	; () banked
 47770  01E080  4BC2               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 47771  01E082  2BC3               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 47772  01E084  500B               	movf	??_TMR5_ISR^0,w,c
 47773  01E086  5DC2               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 47774  01E088  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 47775  01E08A  59C3               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 47776  01E08C  A0D8               	btfss	status,0,c
 47777  01E08E  D005               	goto	i1l1021
 47778                           
 47779                           ; BSR set to: 0
 47780                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 47781  01E090  ECD2  F015         	call	_TMR5_CallBack	;wreg free
 47782                           
 47783                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 47784  01E094  0100               	movlb	0	; () banked
 47785  01E096  6BC2               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 47786  01E098  6BC3               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 47787  01E09A                     i1l1021:
 47788                           
 47789                           ; BSR set to: 0
 47790  01E09A  0060  F0A4  F049   	movff	??_TMR5_ISR+30,btemp+31
 47791  01E0A0  0060  F0A0  F048   	movff	??_TMR5_ISR+29,btemp+30
 47792  01E0A6  0060  F09C  F047   	movff	??_TMR5_ISR+28,btemp+29
 47793  01E0AC  0060  F098  F046   	movff	??_TMR5_ISR+27,btemp+28
 47794  01E0B2  0060  F094  F045   	movff	??_TMR5_ISR+26,btemp+27
 47795  01E0B8  0060  F090  F044   	movff	??_TMR5_ISR+25,btemp+26
 47796  01E0BE  0060  F08C  F043   	movff	??_TMR5_ISR+24,btemp+25
 47797  01E0C4  0060  F088  F042   	movff	??_TMR5_ISR+23,btemp+24
 47798  01E0CA  0060  F084  F041   	movff	??_TMR5_ISR+22,btemp+23
 47799  01E0D0  0060  F080  F040   	movff	??_TMR5_ISR+21,btemp+22
 47800  01E0D6  0060  F07C  F03F   	movff	??_TMR5_ISR+20,btemp+21
 47801  01E0DC  0060  F078  F03E   	movff	??_TMR5_ISR+19,btemp+20
 47802  01E0E2  0060  F074  F03D   	movff	??_TMR5_ISR+18,btemp+19
 47803  01E0E8  0060  F070  F03C   	movff	??_TMR5_ISR+17,btemp+18
 47804  01E0EE  0060  F06C  F03B   	movff	??_TMR5_ISR+16,btemp+17
 47805  01E0F4  0060  F068  F03A   	movff	??_TMR5_ISR+15,btemp+16
 47806  01E0FA  0060  F064  F035   	movff	??_TMR5_ISR+14,btemp+11
 47807  01E100  0060  F060  F034   	movff	??_TMR5_ISR+13,btemp+10
 47808  01E106  0060  F05C  F033   	movff	??_TMR5_ISR+12,btemp+9
 47809  01E10C  0060  F058  F032   	movff	??_TMR5_ISR+11,btemp+8
 47810  01E112  0060  F054  F031   	movff	??_TMR5_ISR+10,btemp+7
 47811  01E118  0060  F050  F030   	movff	??_TMR5_ISR+9,btemp+6
 47812  01E11E  0060  F04C  F02F   	movff	??_TMR5_ISR+8,btemp+5
 47813  01E124  0060  F048  F02E   	movff	??_TMR5_ISR+7,btemp+4
 47814  01E12A  0060  F044  F02D   	movff	??_TMR5_ISR+6,btemp+3
 47815  01E130  0060  F040  F02C   	movff	??_TMR5_ISR+5,btemp+2
 47816  01E136  0060  F03C  F02B   	movff	??_TMR5_ISR+4,btemp+1
 47817  01E13C  0060  F038  F02A   	movff	??_TMR5_ISR+3,btemp
 47818  01E142  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 47819  01E148  0011               	retfie		f
 47820  01E14A                     __end_of_TMR5_ISR:
 47821                           	opt callstack 0
 47822                           
 47823 ;; *************** function _TMR5_WriteTimer *****************
 47824 ;; Defined at:
 47825 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 47826 ;; Parameters:    Size  Location     Type
 47827 ;;  timerVal        2  [STACK] unsigned short 
 47828 ;; Auto vars:     Size  Location     Type
 47829 ;;		None
 47830 ;; Return value:  Size  Location     Type
 47831 ;;                  1  [STACK] void 
 47832 ;; Registers used:
 47833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47834 ;; Tracked objects:
 47835 ;;		On entry : 3F/39
 47836 ;;		On exit  : 0/0
 47837 ;;		Unchanged: 0/0
 47838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47843 ;;Total ram usage:        0 bytes
 47844 ;; Hardware stack levels used:    1
 47845 ;; Hardware stack levels required when called:    3
 47846 ;; This function calls:
 47847 ;;		Nothing
 47848 ;; This function is called by:
 47849 ;;		_TMR5_ISR
 47850 ;; This function uses a reentrant model
 47851 ;;
 47852                           
 47853                           	psect	text192
 47854  002452                     __ptext192:
 47855                           	opt callstack 0
 47856  002452                     _TMR5_WriteTimer:
 47857                           	opt callstack 13
 47858                           
 47859                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 47860                           
 47861                           ; BSR set to: 0
 47862                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47863                           ;incstack = 0
 47864  002452  A49A               	btfss	154,2,c	;volatile
 47865  002454  D00F               	goto	l14081
 47866                           
 47867                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 47868  002456  909A               	bcf	154,0,c	;volatile
 47869                           
 47870                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 47871                           ;stkvar	_timerVal @ sp[(0)+-2]
 47872  002458  0EFF               	movlw	255
 47873  00245A  24E1               	addwf	fsr1l,w,c
 47874  00245C  6ED9               	movwf	fsr2l,c
 47875  00245E  0EFF               	movlw	255
 47876  002460  20E2               	addwfc	fsr1h,w,c
 47877  002462  6EDA               	movwf	fsr2h,c
 47878  002464  50DF               	movf	indf2,w,c
 47879  002466  6E99               	movwf	153,c	;volatile
 47880                           
 47881                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 47882                           ;stkvar	_timerVal @ sp[(0)+-2]
 47883  002468  0EFE               	movlw	-2
 47884  00246A  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47885                           
 47886                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 47887  002470  809A               	bsf	154,0,c	;volatile
 47888                           
 47889                           ;mcc_generated_files/tmr5.c: 144:  } else {
 47890  002472  D00C               	goto	l1004
 47891  002474                     l14081:
 47892                           
 47893                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 47894                           ;stkvar	_timerVal @ sp[(0)+-2]
 47895  002474  0EFF               	movlw	255
 47896  002476  24E1               	addwf	fsr1l,w,c
 47897  002478  6ED9               	movwf	fsr2l,c
 47898  00247A  0EFF               	movlw	255
 47899  00247C  20E2               	addwfc	fsr1h,w,c
 47900  00247E  6EDA               	movwf	fsr2h,c
 47901  002480  50DF               	movf	indf2,w,c
 47902  002482  6E99               	movwf	153,c	;volatile
 47903                           
 47904                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 47905                           ;stkvar	_timerVal @ sp[(0)+-2]
 47906  002484  0EFE               	movlw	-2
 47907  002486  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47908  00248C                     l1004:
 47909                           
 47910                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47911  00248C  52E5               	movf	postdec1,f,c
 47912  00248E  52E5               	movf	postdec1,f,c
 47913  002490  0012               	return		;funcret
 47914  002492                     __end_of_TMR5_WriteTimer:
 47915                           	opt callstack 0
 47916                           
 47917 ;; *************** function _TMR5_CallBack *****************
 47918 ;; Defined at:
 47919 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 47920 ;; Parameters:    Size  Location     Type
 47921 ;;		None
 47922 ;; Auto vars:     Size  Location     Type
 47923 ;;		None
 47924 ;; Return value:  Size  Location     Type
 47925 ;;                  1  [STACK] void 
 47926 ;; Registers used:
 47927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 47928 ;; Tracked objects:
 47929 ;;		On entry : 3F/0
 47930 ;;		On exit  : 0/0
 47931 ;;		Unchanged: 0/0
 47932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47937 ;;Total ram usage:        0 bytes
 47938 ;; Hardware stack levels used:    1
 47939 ;; Hardware stack levels required when called:    8
 47940 ;; This function calls:
 47941 ;;		Absolute function
 47942 ;;		_TMR5_DefaultInterruptHandler
 47943 ;; This function is called by:
 47944 ;;		_TMR5_ISR
 47945 ;; This function uses a reentrant model
 47946 ;;
 47947                           
 47948                           	psect	text193
 47949  002BA4                     __ptext193:
 47950                           	opt callstack 0
 47951  002BA4                     _TMR5_CallBack:
 47952                           	opt callstack 8
 47953                           
 47954                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 47955                           
 47956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47957                           ;incstack = 0
 47958  002BA4  0100               	movlb	0	; () banked
 47959  002BA6  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47960  002BA8  119C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47961  002BAA  119D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47962  002BAC  B4D8               	btfsc	status,2,c
 47963  002BAE  0012               	return	
 47964                           
 47965                           ; BSR set to: 0
 47966                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 47967  002BB0  D801               	call	u1335_28
 47968  002BB2  0012               	return	
 47969  002BB4                     u1335_28:
 47970  002BB4  0005               	push	
 47971  002BB6  6EFA               	movwf	pclath,c
 47972  002BB8  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47973  002BBA  6EFD               	movwf	tosl,c
 47974  002BBC  519C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47975  002BBE  6EFE               	movwf	tosh,c
 47976  002BC0  519D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47977  002BC2  6EFF               	movwf	tosu,c
 47978  002BC4  50FA               	movf	pclath,w,c
 47979  002BC6  0012               	return		;indir
 47980  002BC8                     __end_of_TMR5_CallBack:
 47981                           	opt callstack 0
 47982                           
 47983 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 47984 ;; Defined at:
 47985 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 47986 ;; Parameters:    Size  Location     Type
 47987 ;;		None
 47988 ;; Auto vars:     Size  Location     Type
 47989 ;;		None
 47990 ;; Return value:  Size  Location     Type
 47991 ;;                  1  [STACK] void 
 47992 ;; Registers used:
 47993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 47994 ;; Tracked objects:
 47995 ;;		On entry : 3F/0
 47996 ;;		On exit  : 0/0
 47997 ;;		Unchanged: 0/0
 47998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48003 ;;Total ram usage:        0 bytes
 48004 ;; Hardware stack levels used:    1
 48005 ;; Hardware stack levels required when called:    7
 48006 ;; This function calls:
 48007 ;;		_check_day_time
 48008 ;; This function is called by:
 48009 ;;		_TMR5_Initialize
 48010 ;;		_TMR5_CallBack
 48011 ;; This function uses a reentrant model
 48012 ;;
 48013                           
 48014                           	psect	text194
 48015  0025C0                     __ptext194:
 48016                           	opt callstack 0
 48017  0025C0                     _TMR5_DefaultInterruptHandler:
 48018                           	opt callstack 8
 48019                           
 48020                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 48021                           
 48022                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48023                           ;incstack = 0
 48024  0025C0  A0BE               	btfss	190,0,c	;volatile
 48025  0025C2  D002               	goto	u1256_20
 48026  0025C4  0E01               	movlw	1
 48027  0025C6  D001               	goto	u1256_26
 48028  0025C8                     u1256_20:
 48029  0025C8  0E00               	movlw	0
 48030  0025CA                     u1256_26:
 48031  0025CA  0AFF               	xorlw	255
 48032  0025CC  6E35               	movwf	(btemp+11)^0,c
 48033  0025CE  50BE               	movf	190,w,c	;volatile
 48034  0025D0  1835               	xorwf	(btemp+11)^0,w,c
 48035  0025D2  0BFE               	andlw	-2
 48036  0025D4  1835               	xorwf	(btemp+11)^0,w,c
 48037  0025D6  6EBE               	movwf	190,c	;volatile
 48038                           
 48039                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 48040  0025D8  0E01               	movlw	1
 48041  0025DA  0102               	movlb	2	; () banked
 48042  0025DC  27B8               	addwf	(_V+177)& (0+255),f,b	;volatile
 48043  0025DE  0E00               	movlw	0
 48044  0025E0  23B9               	addwfc	(_V+178)& (0+255),f,b	;volatile
 48045  0025E2  23BA               	addwfc	(_V+179)& (0+255),f,b	;volatile
 48046  0025E4  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 48047                           
 48048                           ; BSR set to: 2
 48049                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 48050  0025E6  0E01               	movlw	1
 48051  0025E8  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 48052  0025EA  0E00               	movlw	0
 48053  0025EC  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 48054  0025EE  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 48055  0025F0  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 48056                           
 48057                           ; BSR set to: 2
 48058                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 48059  0025F2  EC68  F0D1         	call	_check_day_time	;wreg free
 48060                           
 48061                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48062  0025F6  0012               	return		;funcret
 48063  0025F8                     __end_of_TMR5_DefaultInterruptHandler:
 48064                           	opt callstack 0
 48065                           
 48066 ;; *************** function _check_day_time *****************
 48067 ;; Defined at:
 48068 ;;		line 167 in file "mbmc.c"
 48069 ;; Parameters:    Size  Location     Type
 48070 ;;		None
 48071 ;; Auto vars:     Size  Location     Type
 48072 ;;  light           4  [STACK] float 
 48073 ;; Return value:  Size  Location     Type
 48074 ;;                  1  [STACK] _Bool 
 48075 ;; Registers used:
 48076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 48077 ;; Tracked objects:
 48078 ;;		On entry : 3F/2
 48079 ;;		On exit  : 0/0
 48080 ;;		Unchanged: 0/0
 48081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48086 ;;Total ram usage:        0 bytes
 48087 ;; Hardware stack levels used:    1
 48088 ;; Hardware stack levels required when called:    6
 48089 ;; This function calls:
 48090 ;;		___flge
 48091 ;;		_conv_raw_result
 48092 ;;		_get_ac_charger_relay
 48093 ;;		_set_ac_charger_relay
 48094 ;;		_time
 48095 ;; This function is called by:
 48096 ;;		_TMR5_DefaultInterruptHandler
 48097 ;; This function uses a reentrant model
 48098 ;;
 48099                           
 48100                           	psect	text195
 48101  01A2D0                     __ptext195:
 48102                           	opt callstack 0
 48103  01A2D0                     _check_day_time:
 48104                           	opt callstack 0
 48105                           
 48106                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48107  01A2D0  52E6               	movf	postinc1,f,c
 48108  01A2D2  52E6               	movf	postinc1,f,c
 48109  01A2D4  52E6               	movf	postinc1,f,c
 48110  01A2D6  52E6               	movf	postinc1,f,c
 48111                           
 48112                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 48113                           
 48114                           ;incstack = 0
 48115  01A2D8  0E00               	movlw	0
 48116  01A2DA  6EE6               	movwf	postinc1,c
 48117  01A2DC  0E0D               	movlw	13
 48118  01A2DE  6EE6               	movwf	postinc1,c
 48119  01A2E0  ECC0  F0C8         	call	_conv_raw_result	;wreg free
 48120                           
 48121                           ;stkvar	_light @ sp[(-4)+0]
 48122  01A2E4  0EFC               	movlw	-4
 48123  01A2E6  0060  F0AB  FFE3   	movff	btemp,plusw1
 48124  01A2EC  0EFD               	movlw	-3
 48125  01A2EE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 48126  01A2F4  0EFE               	movlw	-2
 48127  01A2F6  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 48128  01A2FC  0EFF               	movlw	-1
 48129  01A2FE  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 48130                           
 48131                           ;mbmc.c: 176:  if (C.day_update) {
 48132  01A304  EE22  F237         	lfsr	2,_C+312	;volatile
 48133  01A308  50DE               	movf	postinc2,w,c
 48134  01A30A  10DE               	iorwf	postinc2,w,c
 48135  01A30C  10DE               	iorwf	postinc2,w,c
 48136  01A30E  10DE               	iorwf	postinc2,w,c
 48137  01A310  B4D8               	btfsc	status,2,c
 48138  01A312  D068               	goto	l12799
 48139                           
 48140                           ;mbmc.c: 177:   if (time(((void*)0)) >= C.day_update) {
 48141  01A314  0062  F8DC  F032   	movff	_C+312,btemp+8	;volatile
 48142  01A31A  0062  F8E0  F033   	movff	_C+313,btemp+9	;volatile
 48143  01A320  0062  F8E4  F034   	movff	_C+314,btemp+10	;volatile
 48144  01A326  0062  F8E8  F035   	movff	_C+315,btemp+11	;volatile
 48145  01A32C  5032               	movf	(btemp+8)^0,w,c
 48146  01A32E  6E3A               	movwf	(btemp+16)^0,c
 48147  01A330  5033               	movf	(btemp+9)^0,w,c
 48148  01A332  6E3B               	movwf	(btemp+17)^0,c
 48149  01A334  5034               	movf	(btemp+10)^0,w,c
 48150  01A336  6E3C               	movwf	(btemp+18)^0,c
 48151  01A338  5035               	movf	(btemp+11)^0,w,c
 48152  01A33A  6E3D               	movwf	(btemp+19)^0,c
 48153  01A33C  6A3E               	clrf	(btemp+20)^0,c
 48154  01A33E  6A3F               	clrf	(btemp+21)^0,c
 48155  01A340  6A40               	clrf	(btemp+22)^0,c
 48156  01A342  6A41               	clrf	(btemp+23)^0,c
 48157  01A344  0E00               	movlw	0
 48158  01A346  6EE6               	movwf	postinc1,c
 48159  01A348  0E00               	movlw	0
 48160  01A34A  6EE6               	movwf	postinc1,c
 48161  01A34C  EC07  F00F         	call	_time	;wreg free
 48162  01A350  52E5               	movf	postdec1,f,c
 48163  01A352  006F FF9C  F049    	movff	indf1,btemp+31
 48164  01A358  52E5               	movf	postdec1,f,c
 48165  01A35A  006F FF9C  F048    	movff	indf1,btemp+30
 48166  01A360  52E5               	movf	postdec1,f,c
 48167  01A362  006F FF9C  F047    	movff	indf1,btemp+29
 48168  01A368  52E5               	movf	postdec1,f,c
 48169  01A36A  006F FF9C  F046    	movff	indf1,btemp+28
 48170  01A370  52E5               	movf	postdec1,f,c
 48171  01A372  006F FF9C  F045    	movff	indf1,btemp+27
 48172  01A378  52E5               	movf	postdec1,f,c
 48173  01A37A  006F FF9C  F044    	movff	indf1,btemp+26
 48174  01A380  52E5               	movf	postdec1,f,c
 48175  01A382  006F FF9C  F043    	movff	indf1,btemp+25
 48176  01A388  52E5               	movf	postdec1,f,c
 48177  01A38A  006F FF9C  F042    	movff	indf1,btemp+24
 48178  01A390  503A               	movf	(btemp+16)^0,w,c
 48179  01A392  5C42               	subwf	(btemp+24)^0,w,c
 48180  01A394  503B               	movf	(btemp+17)^0,w,c
 48181  01A396  5843               	subwfb	(btemp+25)^0,w,c
 48182  01A398  503C               	movf	(btemp+18)^0,w,c
 48183  01A39A  5844               	subwfb	(btemp+26)^0,w,c
 48184  01A39C  503D               	movf	(btemp+19)^0,w,c
 48185  01A39E  5845               	subwfb	(btemp+27)^0,w,c
 48186  01A3A0  503E               	movf	(btemp+20)^0,w,c
 48187  01A3A2  5846               	subwfb	(btemp+28)^0,w,c
 48188  01A3A4  503F               	movf	(btemp+21)^0,w,c
 48189  01A3A6  5847               	subwfb	(btemp+29)^0,w,c
 48190  01A3A8  5040               	movf	(btemp+22)^0,w,c
 48191  01A3AA  5848               	subwfb	(btemp+30)^0,w,c
 48192  01A3AC  5049               	movf	(btemp+31)^0,w,c
 48193  01A3AE  0A80               	xorlw	128
 48194  01A3B0  6E2A               	movwf	btemp^0,c
 48195  01A3B2  5041               	movf	(btemp+23)^0,w,c
 48196  01A3B4  0A80               	xorlw	128
 48197  01A3B6  582A               	subwfb	btemp^0,w,c
 48198  01A3B8  A0D8               	btfss	status,0,c
 48199  01A3BA  D014               	goto	l12799
 48200                           
 48201                           ; BSR set to: 57
 48202                           ;mbmc.c: 178:    C.day_update = 0;
 48203  01A3BC  0E00               	movlw	0
 48204  01A3BE  006F FFA0  FA37    	movff	wreg,_C+312	;volatile
 48205  01A3C4  0E00               	movlw	0
 48206  01A3C6  006F FFA0  FA38    	movff	wreg,_C+313	;volatile
 48207  01A3CC  0E00               	movlw	0
 48208  01A3CE  006F FFA0  FA39    	movff	wreg,_C+314	;volatile
 48209  01A3D4  0E00               	movlw	0
 48210  01A3D6  006F FFA0  FA3A    	movff	wreg,_C+315	;volatile
 48211                           
 48212                           ;mbmc.c: 179:    C.dupdate = 1;
 48213  01A3DC  0E01               	movlw	1
 48214  01A3DE  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
 48215  01A3E4                     l12799:
 48216                           
 48217                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 48218  01A3E4  2A51               	incf	check_day_time@day_delay^0,f,c
 48219  01A3E6  0451               	decf	check_day_time@day_delay^0,w,c
 48220  01A3E8  A4D8               	btfss	status,2,c
 48221  01A3EA  D123               	goto	l2214
 48222  01A3EC  0102               	movlb	2	; () banked
 48223  01A3EE  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 48224  01A3F0  B4D8               	btfsc	status,2,c
 48225  01A3F2  D11F               	goto	l2214
 48226                           
 48227                           ; BSR set to: 2
 48228                           ;mbmc.c: 184:   if (C.soc > 3) {
 48229  01A3F4  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48230  01A3F8  0E01               	movlw	1
 48231  01A3FA  50DB               	movf	plusw2,w,c
 48232  01A3FC  E104               	bnz	u1222_20
 48233  01A3FE  0E04               	movlw	4
 48234  01A400  5CDE               	subwf	postinc2,w,c
 48235  01A402  A0D8               	btfss	status,0,c
 48236  01A404  D0ED               	goto	l12833
 48237  01A406                     u1222_20:
 48238                           
 48239                           ; BSR set to: 2
 48240                           ;mbmc.c: 185:    if (!C.day) {
 48241  01A406  EE22  F22D         	lfsr	2,_C+302	;volatile
 48242  01A40A  50DF               	movf	indf2,w,c
 48243  01A40C  A4D8               	btfss	status,2,c
 48244  01A40E  D065               	goto	l12819
 48245                           
 48246                           ; BSR set to: 2
 48247                           ;mbmc.c: 186:     if (light > 22.0) {
 48248                           ;stkvar	_light @ sp[(-4)+0]
 48249  01A410  0EFC               	movlw	-4
 48250  01A412  006F FF8F FFE6     	movff	plusw1,postinc1
 48251  01A418  006F FF8F FFE6     	movff	plusw1,postinc1
 48252  01A41E  006F FF8F FFE6     	movff	plusw1,postinc1
 48253  01A424  006F FF8F FFE6     	movff	plusw1,postinc1
 48254  01A42A  0E00               	movlw	0
 48255  01A42C  6EE6               	movwf	postinc1,c
 48256  01A42E  0E00               	movlw	0
 48257  01A430  6EE6               	movwf	postinc1,c
 48258  01A432  0EB0               	movlw	176
 48259  01A434  6EE6               	movwf	postinc1,c
 48260  01A436  0E41               	movlw	65
 48261  01A438  6EE6               	movwf	postinc1,c
 48262  01A43A  ECA9  F0F6         	call	___flge	;wreg free
 48263  01A43E  B02A               	btfsc	btemp& (0+255),0,c
 48264  01A440  D0F8               	goto	l2214
 48265                           
 48266                           ;mbmc.c: 187:      C.day = 1;
 48267  01A442  0E01               	movlw	1
 48268  01A444  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 48269                           
 48270                           ;mbmc.c: 188:      C.day_start = time(((void*)0));
 48271  01A44A  0E00               	movlw	0
 48272  01A44C  6EE6               	movwf	postinc1,c
 48273  01A44E  0E00               	movlw	0
 48274  01A450  6EE6               	movwf	postinc1,c
 48275  01A452  EC07  F00F         	call	_time	;wreg free
 48276  01A456  52E5               	movf	postdec1,f,c
 48277  01A458  006F FF9C  F041    	movff	indf1,btemp+23
 48278  01A45E  52E5               	movf	postdec1,f,c
 48279  01A460  006F FF9C  F040    	movff	indf1,btemp+22
 48280  01A466  52E5               	movf	postdec1,f,c
 48281  01A468  006F FF9C  F03F    	movff	indf1,btemp+21
 48282  01A46E  52E5               	movf	postdec1,f,c
 48283  01A470  006F FF9C  F03E    	movff	indf1,btemp+20
 48284  01A476  52E5               	movf	postdec1,f,c
 48285  01A478  006F FF9C  F03D    	movff	indf1,btemp+19
 48286  01A47E  52E5               	movf	postdec1,f,c
 48287  01A480  006F FF9C  F03C    	movff	indf1,btemp+18
 48288  01A486  52E5               	movf	postdec1,f,c
 48289  01A488  006F FF9C  F03B    	movff	indf1,btemp+17
 48290  01A48E  52E5               	movf	postdec1,f,c
 48291  01A490  006F FF9C  F03A    	movff	indf1,btemp+16
 48292  01A496  0060  F0E8  F032   	movff	btemp+16,btemp+8
 48293  01A49C  0060  F0EC  F033   	movff	btemp+17,btemp+9
 48294  01A4A2  0060  F0F0  F034   	movff	btemp+18,btemp+10
 48295  01A4A8  0060  F0F4  F035   	movff	btemp+19,btemp+11
 48296  01A4AE  0060  F0C8  FA2F   	movff	btemp+8,_C+304	;volatile
 48297  01A4B4  0060  F0CC  FA30   	movff	btemp+9,_C+305	;volatile
 48298  01A4BA  0060  F0D0  FA31   	movff	btemp+10,_C+306	;volatile
 48299  01A4C0  0060  F0D4  FA32   	movff	btemp+11,_C+307	;volatile
 48300                           
 48301                           ; BSR set to: 57
 48302                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 48303  01A4C6  EC6B  F017         	call	_get_ac_charger_relay	;wreg free
 48304  01A4CA  502A               	movf	btemp^0,w,c
 48305  01A4CC  B4D8               	btfsc	status,2,c
 48306  01A4CE  D0B5               	goto	l2210
 48307                           
 48308                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 48309  01A4D0  0E00               	movlw	0
 48310  01A4D2  6EE6               	movwf	postinc1,c
 48311  01A4D4  EC55  F017         	call	_set_ac_charger_relay	;wreg free
 48312  01A4D8  D0B0               	goto	l2210
 48313  01A4DA                     l12819:
 48314                           
 48315                           ; BSR set to: 2
 48316                           ;mbmc.c: 195:     if (light < 12.0) {
 48317  01A4DA  0E00               	movlw	0
 48318  01A4DC  6EE6               	movwf	postinc1,c
 48319  01A4DE  0E00               	movlw	0
 48320  01A4E0  6EE6               	movwf	postinc1,c
 48321  01A4E2  0E40               	movlw	64
 48322  01A4E4  6EE6               	movwf	postinc1,c
 48323  01A4E6  0E41               	movlw	65
 48324  01A4E8  6EE6               	movwf	postinc1,c
 48325                           
 48326                           ;stkvar	_light @ sp[(-8)+0]
 48327  01A4EA  0EF8               	movlw	-8
 48328  01A4EC  006F FF8F FFE6     	movff	plusw1,postinc1
 48329  01A4F2  006F FF8F FFE6     	movff	plusw1,postinc1
 48330  01A4F8  006F FF8F FFE6     	movff	plusw1,postinc1
 48331  01A4FE  006F FF8F FFE6     	movff	plusw1,postinc1
 48332  01A504  ECA9  F0F6         	call	___flge	;wreg free
 48333  01A508  B02A               	btfsc	btemp& (0+255),0,c
 48334  01A50A  D093               	goto	l2214
 48335                           
 48336                           ;mbmc.c: 196:      C.day = 0;
 48337  01A50C  0E00               	movlw	0
 48338  01A50E  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 48339                           
 48340                           ;mbmc.c: 197:      C.day_end = time(((void*)0));
 48341  01A514  0E00               	movlw	0
 48342  01A516  6EE6               	movwf	postinc1,c
 48343  01A518  0E00               	movlw	0
 48344  01A51A  6EE6               	movwf	postinc1,c
 48345  01A51C  EC07  F00F         	call	_time	;wreg free
 48346  01A520  52E5               	movf	postdec1,f,c
 48347  01A522  006F FF9C  F041    	movff	indf1,btemp+23
 48348  01A528  52E5               	movf	postdec1,f,c
 48349  01A52A  006F FF9C  F040    	movff	indf1,btemp+22
 48350  01A530  52E5               	movf	postdec1,f,c
 48351  01A532  006F FF9C  F03F    	movff	indf1,btemp+21
 48352  01A538  52E5               	movf	postdec1,f,c
 48353  01A53A  006F FF9C  F03E    	movff	indf1,btemp+20
 48354  01A540  52E5               	movf	postdec1,f,c
 48355  01A542  006F FF9C  F03D    	movff	indf1,btemp+19
 48356  01A548  52E5               	movf	postdec1,f,c
 48357  01A54A  006F FF9C  F03C    	movff	indf1,btemp+18
 48358  01A550  52E5               	movf	postdec1,f,c
 48359  01A552  006F FF9C  F03B    	movff	indf1,btemp+17
 48360  01A558  52E5               	movf	postdec1,f,c
 48361  01A55A  006F FF9C  F03A    	movff	indf1,btemp+16
 48362  01A560  0060  F0E8  F032   	movff	btemp+16,btemp+8
 48363  01A566  0060  F0EC  F033   	movff	btemp+17,btemp+9
 48364  01A56C  0060  F0F0  F034   	movff	btemp+18,btemp+10
 48365  01A572  0060  F0F4  F035   	movff	btemp+19,btemp+11
 48366  01A578  0060  F0C8  FA33   	movff	btemp+8,_C+308	;volatile
 48367  01A57E  0060  F0CC  FA34   	movff	btemp+9,_C+309	;volatile
 48368  01A584  0060  F0D0  FA35   	movff	btemp+10,_C+310	;volatile
 48369  01A58A  0060  F0D4  FA36   	movff	btemp+11,_C+311	;volatile
 48370                           
 48371                           ; BSR set to: 57
 48372                           ;mbmc.c: 198:      C.day_update = C.day_end + 14400;
 48373  01A590  EE22  F233         	lfsr	2,_C+308	;volatile
 48374  01A594  0E40               	movlw	64
 48375  01A596  24DE               	addwf	postinc2,w,c
 48376  01A598  6E32               	movwf	(btemp+8)^0,c
 48377  01A59A  0E38               	movlw	56
 48378  01A59C  20DE               	addwfc	postinc2,w,c
 48379  01A59E  6E33               	movwf	(btemp+9)^0,c
 48380  01A5A0  0E00               	movlw	0
 48381  01A5A2  20DE               	addwfc	postinc2,w,c
 48382  01A5A4  6E34               	movwf	(btemp+10)^0,c
 48383  01A5A6  0E00               	movlw	0
 48384  01A5A8  20DE               	addwfc	postinc2,w,c
 48385  01A5AA  6E35               	movwf	(btemp+11)^0,c
 48386  01A5AC  0060  F0C8  FA37   	movff	btemp+8,_C+312	;volatile
 48387  01A5B2  0060  F0CC  FA38   	movff	btemp+9,_C+313	;volatile
 48388  01A5B8  0060  F0D0  FA39   	movff	btemp+10,_C+314	;volatile
 48389  01A5BE  0060  F0D4  FA3A   	movff	btemp+11,_C+315	;volatile
 48390                           
 48391                           ; BSR set to: 57
 48392                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 48393  01A5C4  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48394  01A5C8  0E01               	movlw	1
 48395  01A5CA  50DB               	movf	plusw2,w,c
 48396  01A5CC  E136               	bnz	l2210
 48397  01A5CE  0E14               	movlw	20
 48398  01A5D0  5CDE               	subwf	postinc2,w,c
 48399  01A5D2  B0D8               	btfsc	status,0,c
 48400  01A5D4  D032               	goto	l2210
 48401                           
 48402                           ; BSR set to: 57
 48403                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 48404  01A5D6  0E01               	movlw	1
 48405  01A5D8  6EE6               	movwf	postinc1,c
 48406  01A5DA  EC55  F017         	call	_set_ac_charger_relay	;wreg free
 48407  01A5DE  D02D               	goto	l2210
 48408  01A5E0                     l12833:
 48409                           
 48410                           ; BSR set to: 2
 48411                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 48412  01A5E0  EE22  F177         	lfsr	2,_C+120	;volatile
 48413  01A5E4  006F FF7B FFE6     	movff	postinc2,postinc1
 48414  01A5EA  006F FF7B FFE6     	movff	postinc2,postinc1
 48415  01A5F0  006F FF7B FFE6     	movff	postinc2,postinc1
 48416  01A5F6  006F FF7B FFE6     	movff	postinc2,postinc1
 48417  01A5FC  EE22  F17B         	lfsr	2,_C+124	;volatile
 48418  01A600  006F FF7B FFE6     	movff	postinc2,postinc1
 48419  01A606  006F FF7B FFE6     	movff	postinc2,postinc1
 48420  01A60C  006F FF7B FFE6     	movff	postinc2,postinc1
 48421  01A612  006F FF7B FFE6     	movff	postinc2,postinc1
 48422  01A618  ECA9  F0F6         	call	___flge	;wreg free
 48423  01A61C  B02A               	btfsc	btemp& (0+255),0,c
 48424  01A61E  D009               	goto	l2214
 48425                           
 48426                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 48427  01A620  EC6B  F017         	call	_get_ac_charger_relay	;wreg free
 48428  01A624  502A               	movf	btemp^0,w,c
 48429  01A626  A4D8               	btfss	status,2,c
 48430  01A628  D004               	goto	l2214
 48431                           
 48432                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 48433  01A62A  0E01               	movlw	1
 48434  01A62C  6EE6               	movwf	postinc1,c
 48435  01A62E  EC55  F017         	call	_set_ac_charger_relay	;wreg free
 48436  01A632                     l2214:
 48437                           
 48438                           ;mbmc.c: 216:  if (day_delay >= 240)
 48439  01A632  0EEF               	movlw	239
 48440  01A634  6451               	cpfsgt	check_day_time@day_delay^0,c
 48441  01A636  D001               	goto	l2210
 48442                           
 48443                           ;mbmc.c: 217:   day_delay = 0;
 48444  01A638  6A51               	clrf	check_day_time@day_delay^0,c
 48445  01A63A                     l2210:
 48446                           
 48447                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 48448  01A63A  52E5               	movf	postdec1,f,c
 48449  01A63C  52E5               	movf	postdec1,f,c
 48450  01A63E  52E5               	movf	postdec1,f,c
 48451  01A640  52E5               	movf	postdec1,f,c
 48452  01A642  0012               	return		;funcret
 48453  01A644                     __end_of_check_day_time:
 48454                           	opt callstack 0
 48455                           
 48456 ;; *************** function _set_ac_charger_relay *****************
 48457 ;; Defined at:
 48458 ;;		line 136 in file "mbmc.c"
 48459 ;; Parameters:    Size  Location     Type
 48460 ;;  mode            1  [STACK] const _Bool 
 48461 ;; Auto vars:     Size  Location     Type
 48462 ;;		None
 48463 ;; Return value:  Size  Location     Type
 48464 ;;                  1  [STACK] void 
 48465 ;; Registers used:
 48466 ;;		wreg, fsr1l, fsr1h
 48467 ;; Tracked objects:
 48468 ;;		On entry : 0/39
 48469 ;;		On exit  : 0/0
 48470 ;;		Unchanged: 0/0
 48471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48476 ;;Total ram usage:        0 bytes
 48477 ;; Hardware stack levels used:    1
 48478 ;; Hardware stack levels required when called:    3
 48479 ;; This function calls:
 48480 ;;		Nothing
 48481 ;; This function is called by:
 48482 ;;		_check_day_time
 48483 ;; This function uses a reentrant model
 48484 ;;
 48485                           
 48486                           	psect	text196
 48487  002EAA                     __ptext196:
 48488                           	opt callstack 0
 48489  002EAA                     _set_ac_charger_relay:
 48490                           	opt callstack 10
 48491                           
 48492                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 48493                           ;stkvar	_mode @ sp[(0)+-1]
 48494                           
 48495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48496                           ;incstack = 0
 48497  002EAA  0EFF               	movlw	-1
 48498  002EAC  B0E3               	btfsc	plusw1,0,c
 48499  002EAE  D002               	bra	u1182_25
 48500  002EB0  9CBD               	bcf	189,6,c	;volatile
 48501  002EB2  D001               	bra	u1182_26
 48502  002EB4                     u1182_25:
 48503  002EB4  8CBD               	bsf	189,6,c	;volatile
 48504  002EB6                     u1182_26:
 48505                           
 48506                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 48507  002EB6  52E5               	movf	postdec1,f,c
 48508  002EB8  0012               	return		;funcret
 48509  002EBA                     __end_of_set_ac_charger_relay:
 48510                           	opt callstack 0
 48511                           
 48512 ;; *************** function _get_ac_charger_relay *****************
 48513 ;; Defined at:
 48514 ;;		line 141 in file "mbmc.c"
 48515 ;; Parameters:    Size  Location     Type
 48516 ;;		None
 48517 ;; Auto vars:     Size  Location     Type
 48518 ;;		None
 48519 ;; Return value:  Size  Location     Type
 48520 ;;                  1  [STACK] _Bool 
 48521 ;; Registers used:
 48522 ;;		btemp
 48523 ;; Tracked objects:
 48524 ;;		On entry : 0/39
 48525 ;;		On exit  : 0/0
 48526 ;;		Unchanged: 0/0
 48527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48532 ;;Total ram usage:        0 bytes
 48533 ;; Hardware stack levels used:    1
 48534 ;; Hardware stack levels required when called:    3
 48535 ;; This function calls:
 48536 ;;		Nothing
 48537 ;; This function is called by:
 48538 ;;		_check_day_time
 48539 ;;		_calc_bsoc
 48540 ;; This function uses a reentrant model
 48541 ;;
 48542                           
 48543                           	psect	text197
 48544  002ED6                     __ptext197:
 48545                           	opt callstack 0
 48546  002ED6                     _get_ac_charger_relay:
 48547                           	opt callstack 11
 48548                           
 48549                           ;mbmc.c: 143:  return LATDbits.LATD6;
 48550                           
 48551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48552                           ;incstack = 0
 48553  002ED6  ACBD               	btfss	189,6,c	;volatile
 48554  002ED8  D003               	goto	u1245_20
 48555  002EDA  6A2A               	clrf	btemp^0,c
 48556  002EDC  2A2A               	incf	btemp^0,f,c
 48557  002EDE  0012               	return	
 48558  002EE0                     u1245_20:
 48559  002EE0  6A2A               	clrf	btemp^0,c
 48560                           
 48561                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 48562  002EE2  0012               	return		;funcret
 48563  002EE4                     __end_of_get_ac_charger_relay:
 48564                           	opt callstack 0
 48565                           
 48566 ;; *************** function _TMR3_ISR *****************
 48567 ;; Defined at:
 48568 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 48569 ;; Parameters:    Size  Location     Type
 48570 ;;		None
 48571 ;; Auto vars:     Size  Location     Type
 48572 ;;		None
 48573 ;; Return value:  Size  Location     Type
 48574 ;;                  1    wreg      void 
 48575 ;; Registers used:
 48576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 48577 ;; Tracked objects:
 48578 ;;		On entry : 0/0
 48579 ;;		On exit  : 3F/0
 48580 ;;		Unchanged: 0/0
 48581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48584 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48585 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48586 ;;Total ram usage:       25 bytes
 48587 ;; Hardware stack levels used:    1
 48588 ;; Hardware stack levels required when called:   14
 48589 ;; This function calls:
 48590 ;;		_TMR3_CallBack
 48591 ;;		_TMR3_WriteTimer
 48592 ;; This function is called by:
 48593 ;;		Interrupt level 1
 48594 ;; This function uses a non-reentrant model
 48595 ;;
 48596                           
 48597                           	psect	text198
 48598  01EEB4                     __ptext198:
 48599                           	opt callstack 0
 48600  01EEB4                     _TMR3_ISR:
 48601                           	opt callstack 3
 48602                           
 48603                           ;incstack = 0
 48604  01EEB4  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 48605  01EEBA  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 48606  01EEC0  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 48607  01EEC6  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 48608  01EECC  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 48609  01EED2  0060  F0A8  F0EA   	movff	btemp,??_TMR3_ISR+5
 48610  01EED8  0060  F0AC  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 48611  01EEDE  0060  F0B0  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 48612  01EEE4  0060  F0B4  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 48613  01EEEA  0060  F0B8  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 48614  01EEF0  0060  F0BC  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 48615  01EEF6  0060  F0C0  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 48616  01EEFC  0060  F0C4  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 48617  01EF02  0060  F0C8  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 48618  01EF08  0060  F0CC  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 48619  01EF0E  0060  F0D0  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 48620  01EF14  0060  F0D4  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 48621  01EF1A  0060  F0E8  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 48622  01EF20  0060  F0EC  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 48623  01EF26  0060  F0F0  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 48624  01EF2C  0060  F0F4  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 48625  01EF32  0060  F0F8  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 48626  01EF38  0060  F0FC  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 48627  01EF3E  0060  F100  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 48628  01EF44  0060  F104  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 48629  01EF4A  EE16  F196         	lfsr	1,___intlo_sp
 48630                           
 48631                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 48632  01EF4E  0139               	movlb	57	; () banked
 48633  01EF50  9DA6               	bcf	166,6,b	;volatile
 48634                           
 48635                           ; BSR set to: 57
 48636                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 48637  01EF52  0060  F303  FFE6   	movff	_timer3ReloadVal,postinc1
 48638  01EF58  0060  F307  FFE6   	movff	_timer3ReloadVal+1,postinc1
 48639  01EF5E  EC49  F012         	call	_TMR3_WriteTimer	;wreg free
 48640                           
 48641                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 48642  01EF62  0100               	movlb	0	; () banked
 48643  01EF64  4BBE               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 48644  01EF66  2BBF               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 48645  01EF68  51BF               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 48646  01EF6A  E104               	bnz	i1u1722_20
 48647  01EF6C  0E28               	movlw	40
 48648  01EF6E  5DBE               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 48649  01EF70  A0D8               	btfss	status,0,c
 48650  01EF72  D005               	goto	i1l1209
 48651  01EF74                     i1u1722_20:
 48652                           
 48653                           ; BSR set to: 0
 48654                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 48655  01EF74  ECE4  F015         	call	_TMR3_CallBack	;wreg free
 48656                           
 48657                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 48658  01EF78  0100               	movlb	0	; () banked
 48659  01EF7A  6BBE               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 48660  01EF7C  6BBF               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 48661  01EF7E                     i1l1209:
 48662                           
 48663                           ; BSR set to: 0
 48664  01EF7E  0060  F3F4  F041   	movff	??_TMR3_ISR+24,btemp+23
 48665  01EF84  0060  F3F0  F040   	movff	??_TMR3_ISR+23,btemp+22
 48666  01EF8A  0060  F3EC  F03F   	movff	??_TMR3_ISR+22,btemp+21
 48667  01EF90  0060  F3E8  F03E   	movff	??_TMR3_ISR+21,btemp+20
 48668  01EF96  0060  F3E4  F03D   	movff	??_TMR3_ISR+20,btemp+19
 48669  01EF9C  0060  F3E0  F03C   	movff	??_TMR3_ISR+19,btemp+18
 48670  01EFA2  0060  F3DC  F03B   	movff	??_TMR3_ISR+18,btemp+17
 48671  01EFA8  0060  F3D8  F03A   	movff	??_TMR3_ISR+17,btemp+16
 48672  01EFAE  0060  F3D4  F035   	movff	??_TMR3_ISR+16,btemp+11
 48673  01EFB4  0060  F3D0  F034   	movff	??_TMR3_ISR+15,btemp+10
 48674  01EFBA  0060  F3CC  F033   	movff	??_TMR3_ISR+14,btemp+9
 48675  01EFC0  0060  F3C8  F032   	movff	??_TMR3_ISR+13,btemp+8
 48676  01EFC6  0060  F3C4  F031   	movff	??_TMR3_ISR+12,btemp+7
 48677  01EFCC  0060  F3C0  F030   	movff	??_TMR3_ISR+11,btemp+6
 48678  01EFD2  0060  F3BC  F02F   	movff	??_TMR3_ISR+10,btemp+5
 48679  01EFD8  0060  F3B8  F02E   	movff	??_TMR3_ISR+9,btemp+4
 48680  01EFDE  0060  F3B4  F02D   	movff	??_TMR3_ISR+8,btemp+3
 48681  01EFE4  0060  F3B0  F02C   	movff	??_TMR3_ISR+7,btemp+2
 48682  01EFEA  0060  F3AC  F02B   	movff	??_TMR3_ISR+6,btemp+1
 48683  01EFF0  0060  F3A8  F02A   	movff	??_TMR3_ISR+5,btemp
 48684  01EFF6  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 48685  01EFFC  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 48686  01F002  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 48687  01F008  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 48688  01F00E  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 48689  01F014  0011               	retfie		f
 48690  01F016                     __end_of_TMR3_ISR:
 48691                           	opt callstack 0
 48692                           
 48693 ;; *************** function _TMR3_WriteTimer *****************
 48694 ;; Defined at:
 48695 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 48696 ;; Parameters:    Size  Location     Type
 48697 ;;  timerVal        2  [STACK] unsigned short 
 48698 ;; Auto vars:     Size  Location     Type
 48699 ;;		None
 48700 ;; Return value:  Size  Location     Type
 48701 ;;                  1  [STACK] void 
 48702 ;; Registers used:
 48703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 48704 ;; Tracked objects:
 48705 ;;		On entry : 3F/39
 48706 ;;		On exit  : 0/0
 48707 ;;		Unchanged: 0/0
 48708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48713 ;;Total ram usage:        0 bytes
 48714 ;; Hardware stack levels used:    1
 48715 ;; Hardware stack levels required when called:    3
 48716 ;; This function calls:
 48717 ;;		Nothing
 48718 ;; This function is called by:
 48719 ;;		_TMR3_ISR
 48720 ;; This function uses a reentrant model
 48721 ;;
 48722                           
 48723                           	psect	text199
 48724  002492                     __ptext199:
 48725                           	opt callstack 0
 48726  002492                     _TMR3_WriteTimer:
 48727                           	opt callstack 13
 48728                           
 48729                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 48730                           
 48731                           ; BSR set to: 0
 48732                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48733                           ;incstack = 0
 48734  002492  A4A6               	btfss	166,2,c	;volatile
 48735  002494  D00F               	goto	l14099
 48736                           
 48737                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 48738  002496  90A6               	bcf	166,0,c	;volatile
 48739                           
 48740                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 48741                           ;stkvar	_timerVal @ sp[(0)+-2]
 48742  002498  0EFF               	movlw	255
 48743  00249A  24E1               	addwf	fsr1l,w,c
 48744  00249C  6ED9               	movwf	fsr2l,c
 48745  00249E  0EFF               	movlw	255
 48746  0024A0  20E2               	addwfc	fsr1h,w,c
 48747  0024A2  6EDA               	movwf	fsr2h,c
 48748  0024A4  50DF               	movf	indf2,w,c
 48749  0024A6  6EA5               	movwf	165,c	;volatile
 48750                           
 48751                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 48752                           ;stkvar	_timerVal @ sp[(0)+-2]
 48753  0024A8  0EFE               	movlw	-2
 48754  0024AA  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 48755                           
 48756                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 48757  0024B0  80A6               	bsf	166,0,c	;volatile
 48758                           
 48759                           ;mcc_generated_files/tmr3.c: 141:     }
 48760  0024B2  D00C               	goto	l1192
 48761  0024B4                     l14099:
 48762                           
 48763                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 48764                           ;stkvar	_timerVal @ sp[(0)+-2]
 48765  0024B4  0EFF               	movlw	255
 48766  0024B6  24E1               	addwf	fsr1l,w,c
 48767  0024B8  6ED9               	movwf	fsr2l,c
 48768  0024BA  0EFF               	movlw	255
 48769  0024BC  20E2               	addwfc	fsr1h,w,c
 48770  0024BE  6EDA               	movwf	fsr2h,c
 48771  0024C0  50DF               	movf	indf2,w,c
 48772  0024C2  6EA5               	movwf	165,c	;volatile
 48773                           
 48774                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 48775                           ;stkvar	_timerVal @ sp[(0)+-2]
 48776  0024C4  0EFE               	movlw	-2
 48777  0024C6  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 48778  0024CC                     l1192:
 48779                           
 48780                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 48781  0024CC  52E5               	movf	postdec1,f,c
 48782  0024CE  52E5               	movf	postdec1,f,c
 48783  0024D0  0012               	return		;funcret
 48784  0024D2                     __end_of_TMR3_WriteTimer:
 48785                           	opt callstack 0
 48786                           
 48787 ;; *************** function _TMR3_CallBack *****************
 48788 ;; Defined at:
 48789 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 48790 ;; Parameters:    Size  Location     Type
 48791 ;;		None
 48792 ;; Auto vars:     Size  Location     Type
 48793 ;;		None
 48794 ;; Return value:  Size  Location     Type
 48795 ;;                  1  [STACK] void 
 48796 ;; Registers used:
 48797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 48798 ;; Tracked objects:
 48799 ;;		On entry : 3F/0
 48800 ;;		On exit  : 0/0
 48801 ;;		Unchanged: 0/0
 48802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48807 ;;Total ram usage:        0 bytes
 48808 ;; Hardware stack levels used:    1
 48809 ;; Hardware stack levels required when called:   13
 48810 ;; This function calls:
 48811 ;;		Absolute function
 48812 ;;		_TMR3_DefaultInterruptHandler
 48813 ;;		_calc_bsoc
 48814 ;; This function is called by:
 48815 ;;		_TMR3_ISR
 48816 ;; This function uses a reentrant model
 48817 ;;
 48818                           
 48819                           	psect	text200
 48820  002BC8                     __ptext200:
 48821                           	opt callstack 0
 48822  002BC8                     _TMR3_CallBack:
 48823                           	opt callstack 3
 48824                           
 48825                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 48826                           
 48827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48828                           ;incstack = 0
 48829  002BC8  0100               	movlb	0	; () banked
 48830  002BCA  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 48831  002BCC  1199               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 48832  002BCE  119A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 48833  002BD0  B4D8               	btfsc	status,2,c
 48834  002BD2  0012               	return	
 48835                           
 48836                           ; BSR set to: 0
 48837                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 48838  002BD4  D801               	call	u1694_28
 48839  002BD6  0012               	return	
 48840  002BD8                     u1694_28:
 48841  002BD8  0005               	push	
 48842  002BDA  6EFA               	movwf	pclath,c
 48843  002BDC  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 48844  002BDE  6EFD               	movwf	tosl,c
 48845  002BE0  5199               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 48846  002BE2  6EFE               	movwf	tosh,c
 48847  002BE4  519A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 48848  002BE6  6EFF               	movwf	tosu,c
 48849  002BE8  50FA               	movf	pclath,w,c
 48850  002BEA  0012               	return		;indir
 48851  002BEC                     __end_of_TMR3_CallBack:
 48852                           	opt callstack 0
 48853                           
 48854 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 48855 ;; Defined at:
 48856 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 48857 ;; Parameters:    Size  Location     Type
 48858 ;;		None
 48859 ;; Auto vars:     Size  Location     Type
 48860 ;;		None
 48861 ;; Return value:  Size  Location     Type
 48862 ;;                  1  [STACK] void 
 48863 ;; Registers used:
 48864 ;;		None
 48865 ;; Tracked objects:
 48866 ;;		On entry : 3F/0
 48867 ;;		On exit  : 0/0
 48868 ;;		Unchanged: 0/0
 48869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48874 ;;Total ram usage:        0 bytes
 48875 ;; Hardware stack levels used:    1
 48876 ;; Hardware stack levels required when called:    3
 48877 ;; This function calls:
 48878 ;;		Nothing
 48879 ;; This function is called by:
 48880 ;;		_TMR3_Initialize
 48881 ;;		_TMR3_CallBack
 48882 ;; This function uses a reentrant model
 48883 ;;
 48884                           
 48885                           	psect	text201
 48886  002F90                     __ptext201:
 48887                           	opt callstack 0
 48888  002F90                     _TMR3_DefaultInterruptHandler:
 48889                           	opt callstack 12
 48890                           
 48891                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48892                           
 48893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48894                           ;incstack = 0
 48895  002F90  0012               	return		;funcret
 48896  002F92                     __end_of_TMR3_DefaultInterruptHandler:
 48897                           	opt callstack 0
 48898                           
 48899 ;; *************** function _calc_bsoc *****************
 48900 ;; Defined at:
 48901 ;;		line 39 in file "bsoc.c"
 48902 ;; Parameters:    Size  Location     Type
 48903 ;;		None
 48904 ;; Auto vars:     Size  Location     Type
 48905 ;;  adj             4  [STACK] float 
 48906 ;;  log_ptr         2  [STACK] PTR unsigned char 
 48907 ;;		 -> port_data(512), 
 48908 ;; Return value:  Size  Location     Type
 48909 ;;                  1  [STACK] void 
 48910 ;; Registers used:
 48911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 48912 ;; Tracked objects:
 48913 ;;		On entry : 3F/0
 48914 ;;		On exit  : 6/2
 48915 ;;		Unchanged: 0/0
 48916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48921 ;;Total ram usage:        0 bytes
 48922 ;; Hardware stack levels used:    1
 48923 ;; Hardware stack levels required when called:   12
 48924 ;; This function calls:
 48925 ;;		_StartTimer
 48926 ;;		___asfladd
 48927 ;;		___fldiv
 48928 ;;		___flge
 48929 ;;		___flmul
 48930 ;;		___flneg
 48931 ;;		___fltol
 48932 ;;		_fabsf
 48933 ;;		_get_ac_charger_relay
 48934 ;;		_port_data_dma_ptr
 48935 ;;		_send_port_data_dma
 48936 ;;		_sprintf
 48937 ;;		_strlen
 48938 ;; This function is called by:
 48939 ;;		_init_bsoc
 48940 ;;		_TMR3_CallBack
 48941 ;; This function uses a reentrant model
 48942 ;;
 48943                           
 48944                           	psect	text202
 48945  0153CC                     __ptext202:
 48946                           	opt callstack 0
 48947  0153CC                     _calc_bsoc:
 48948                           	opt callstack 0
 48949                           
 48950                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48951  0153CC  0E06               	movlw	6
 48952  0153CE  26E1               	addwf	fsr1l,f,c
 48953  0153D0  0E00               	movlw	0
 48954  0153D2  22E2               	addwfc	fsr1h,f,c
 48955                           
 48956                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 48957                           
 48958                           ;incstack = 0
 48959  0153D4  0E00               	movlw	0
 48960  0153D6  6E32               	movwf	(btemp+8)^0,c
 48961  0153D8  0E00               	movlw	0
 48962  0153DA  6E33               	movwf	(btemp+9)^0,c
 48963  0153DC  0E80               	movlw	128
 48964  0153DE  6E34               	movwf	(btemp+10)^0,c
 48965  0153E0  0E3F               	movlw	63
 48966  0153E2  6E35               	movwf	(btemp+11)^0,c
 48967                           
 48968                           ;stkvar	_adj @ sp[(-6)+0]
 48969  0153E4  0EFA               	movlw	-6
 48970  0153E6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48971  0153EC  0EFB               	movlw	-5
 48972  0153EE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48973  0153F4  0EFC               	movlw	-4
 48974  0153F6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48975  0153FC  0EFD               	movlw	-3
 48976  0153FE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48977  015404  82BE               	bsf	190,1,c	;volatile
 48978                           
 48979                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 48980  015406  0E00               	movlw	0
 48981  015408  6EE6               	movwf	postinc1,c
 48982  01540A  0E00               	movlw	0
 48983  01540C  6EE6               	movwf	postinc1,c
 48984  01540E  0E61               	movlw	97
 48985  015410  6EE6               	movwf	postinc1,c
 48986  015412  0E45               	movlw	69
 48987  015414  6EE6               	movwf	postinc1,c
 48988  015416  EE22  F143         	lfsr	2,_C+68	;volatile
 48989  01541A  006F FF7B FFE6     	movff	postinc2,postinc1
 48990  015420  006F FF7B FFE6     	movff	postinc2,postinc1
 48991  015426  006F FF7B FFE6     	movff	postinc2,postinc1
 48992  01542C  006F FF7B FFE6     	movff	postinc2,postinc1
 48993  015432  EC78  F0C3         	call	___fldiv	;wreg free
 48994  015436  0060  F0AB  FFE6   	movff	btemp,postinc1
 48995  01543C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48996  015442  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48997  015448  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48998  01544E  0E8F               	movlw	low (_C+144)
 48999  015450  6EE6               	movwf	postinc1,c
 49000  015452  0E09               	movlw	high (_C+144)
 49001  015454  6EE6               	movwf	postinc1,c
 49002  015456  EC62  F00C         	call	___asfladd	;wreg free
 49003                           
 49004                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 49005  01545A  EE22  F18F         	lfsr	2,_C+144	;volatile
 49006  01545E  006F FF7B FFE6     	movff	postinc2,postinc1
 49007  015464  006F FF7B FFE6     	movff	postinc2,postinc1
 49008  01546A  006F FF7B FFE6     	movff	postinc2,postinc1
 49009  015470  006F FF7B FFE6     	movff	postinc2,postinc1
 49010  015476  EE22  F18B         	lfsr	2,_C+140	;volatile
 49011  01547A  006F FF7B FFE6     	movff	postinc2,postinc1
 49012  015480  006F FF7B FFE6     	movff	postinc2,postinc1
 49013  015486  006F FF7B FFE6     	movff	postinc2,postinc1
 49014  01548C  006F FF7B FFE6     	movff	postinc2,postinc1
 49015  015492  ECA9  F0F6         	call	___flge	;wreg free
 49016  015496  B02A               	btfsc	btemp& (0+255),0,c
 49017  015498  D00E               	goto	l17229
 49018                           
 49019                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 49020  01549A  EE22  F18B         	lfsr	2,_C+140	;volatile
 49021  01549E  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
 49022  0154A4  006F FF78  F990    	movff	postinc2,_C+145	;volatile
 49023  0154AA  006F FF78  F991    	movff	postinc2,_C+146	;volatile
 49024  0154B0  006F FF74  F992    	movff	postdec2,_C+147	;volatile
 49025  0154B6                     l17229:
 49026                           
 49027                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 49028  0154B6  0ECD               	movlw	205
 49029  0154B8  6EE6               	movwf	postinc1,c
 49030  0154BA  0ECC               	movlw	204
 49031  0154BC  6EE6               	movwf	postinc1,c
 49032  0154BE  0ECC               	movlw	204
 49033  0154C0  6EE6               	movwf	postinc1,c
 49034  0154C2  0E3D               	movlw	61
 49035  0154C4  6EE6               	movwf	postinc1,c
 49036  0154C6  EE22  F18F         	lfsr	2,_C+144	;volatile
 49037  0154CA  006F FF7B FFE6     	movff	postinc2,postinc1
 49038  0154D0  006F FF7B FFE6     	movff	postinc2,postinc1
 49039  0154D6  006F FF7B FFE6     	movff	postinc2,postinc1
 49040  0154DC  006F FF7B FFE6     	movff	postinc2,postinc1
 49041  0154E2  ECA9  F0F6         	call	___flge	;wreg free
 49042  0154E6  B02A               	btfsc	btemp& (0+255),0,c
 49043  0154E8  D010               	goto	l17233
 49044                           
 49045                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 49046  0154EA  0ECD               	movlw	205
 49047  0154EC  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
 49048  0154F2  0ECC               	movlw	204
 49049  0154F4  006F FFA0  F990    	movff	wreg,_C+145	;volatile
 49050  0154FA  0ECC               	movlw	204
 49051  0154FC  006F FFA0  F991    	movff	wreg,_C+146	;volatile
 49052  015502  0E3D               	movlw	61
 49053  015504  006F FFA0  F992    	movff	wreg,_C+147	;volatile
 49054  01550A                     l17233:
 49055                           
 49056                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 49057  01550A  EE22  F143         	lfsr	2,_C+68	;volatile
 49058  01550E  006F FF7B FFE6     	movff	postinc2,postinc1
 49059  015514  006F FF7B FFE6     	movff	postinc2,postinc1
 49060  01551A  006F FF7B FFE6     	movff	postinc2,postinc1
 49061  015520  006F FF7B FFE6     	movff	postinc2,postinc1
 49062  015526  0E0A               	movlw	10
 49063  015528  6EE6               	movwf	postinc1,c
 49064  01552A  0ED7               	movlw	215
 49065  01552C  6EE6               	movwf	postinc1,c
 49066  01552E  0E23               	movlw	35
 49067  015530  6EE6               	movwf	postinc1,c
 49068  015532  0E3C               	movlw	60
 49069  015534  6EE6               	movwf	postinc1,c
 49070  015536  ECA9  F0F6         	call	___flge	;wreg free
 49071  01553A  B02A               	btfsc	btemp& (0+255),0,c
 49072  01553C  D01C               	goto	l17237
 49073                           
 49074                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 49075  01553E  0062  F714  F032   	movff	_C+198,btemp+8	;volatile
 49076  015544  0062  F718  F033   	movff	_C+199,btemp+9	;volatile
 49077  01554A  0062  F71C  F034   	movff	_C+200,btemp+10	;volatile
 49078  015550  0062  F720  F035   	movff	_C+201,btemp+11	;volatile
 49079                           
 49080                           ;stkvar	_adj @ sp[(-6)+0]
 49081  015556  0EFA               	movlw	-6
 49082  015558  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 49083  01555E  0EFB               	movlw	-5
 49084  015560  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 49085  015566  0EFC               	movlw	-4
 49086  015568  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 49087  01556E  0EFD               	movlw	-3
 49088  015570  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 49089  015576                     l17237:
 49090                           
 49091                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 49092  015576  0E0A               	movlw	10
 49093  015578  6EE6               	movwf	postinc1,c
 49094  01557A  0ED7               	movlw	215
 49095  01557C  6EE6               	movwf	postinc1,c
 49096  01557E  0E23               	movlw	35
 49097  015580  6EE6               	movwf	postinc1,c
 49098  015582  0E3C               	movlw	60
 49099  015584  6EE6               	movwf	postinc1,c
 49100  015586  EE22  F143         	lfsr	2,_C+68	;volatile
 49101  01558A  006F FF7B FFE6     	movff	postinc2,postinc1
 49102  015590  006F FF7B FFE6     	movff	postinc2,postinc1
 49103  015596  006F FF7B FFE6     	movff	postinc2,postinc1
 49104  01559C  006F FF7B FFE6     	movff	postinc2,postinc1
 49105  0155A2  ECA9  F0F6         	call	___flge	;wreg free
 49106  0155A6  B02A               	btfsc	btemp& (0+255),0,c
 49107  0155A8  D01C               	goto	l17241
 49108                           
 49109                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 49110  0155AA  0062  F704  F032   	movff	_C+194,btemp+8	;volatile
 49111  0155B0  0062  F708  F033   	movff	_C+195,btemp+9	;volatile
 49112  0155B6  0062  F70C  F034   	movff	_C+196,btemp+10	;volatile
 49113  0155BC  0062  F710  F035   	movff	_C+197,btemp+11	;volatile
 49114                           
 49115                           ;stkvar	_adj @ sp[(-6)+0]
 49116  0155C2  0EFA               	movlw	-6
 49117  0155C4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 49118  0155CA  0EFB               	movlw	-5
 49119  0155CC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 49120  0155D2  0EFC               	movlw	-4
 49121  0155D4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 49122  0155DA  0EFD               	movlw	-3
 49123  0155DC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 49124  0155E2                     l17241:
 49125                           
 49126                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 49127  0155E2  0E00               	movlw	0
 49128  0155E4  6EE6               	movwf	postinc1,c
 49129  0155E6  0E00               	movlw	0
 49130  0155E8  6EE6               	movwf	postinc1,c
 49131  0155EA  0E61               	movlw	97
 49132  0155EC  6EE6               	movwf	postinc1,c
 49133  0155EE  0E45               	movlw	69
 49134  0155F0  6EE6               	movwf	postinc1,c
 49135                           
 49136                           ;stkvar	_adj @ sp[(-10)+0]
 49137  0155F2  0EF6               	movlw	-10
 49138  0155F4  006F FF8F FFE6     	movff	plusw1,postinc1
 49139  0155FA  006F FF8F FFE6     	movff	plusw1,postinc1
 49140  015600  006F FF8F FFE6     	movff	plusw1,postinc1
 49141  015606  006F FF8F FFE6     	movff	plusw1,postinc1
 49142  01560C  EE22  F143         	lfsr	2,_C+68	;volatile
 49143  015610  006F FF7B FFE6     	movff	postinc2,postinc1
 49144  015616  006F FF7B FFE6     	movff	postinc2,postinc1
 49145  01561C  006F FF7B FFE6     	movff	postinc2,postinc1
 49146  015622  006F FF7B FFE6     	movff	postinc2,postinc1
 49147  015628  EC27  F0B8         	call	___flmul	;wreg free
 49148  01562C  0060  F0AB  FFE6   	movff	btemp,postinc1
 49149  015632  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49150  015638  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49151  01563E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49152  015644  EC78  F0C3         	call	___fldiv	;wreg free
 49153  015648  0060  F0AB  FFE6   	movff	btemp,postinc1
 49154  01564E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49155  015654  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49156  01565A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49157  015660  0E8F               	movlw	low (_C+144)
 49158  015662  6EE6               	movwf	postinc1,c
 49159  015664  0E09               	movlw	high (_C+144)
 49160  015666  6EE6               	movwf	postinc1,c
 49161  015668  EC62  F00C         	call	___asfladd	;wreg free
 49162                           
 49163                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 49164  01566C  EE22  F18F         	lfsr	2,_C+144	;volatile
 49165  015670  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 49166  015676  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 49167  01567C  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 49168  015682  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 49169                           
 49170                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 49171  015688  EE22  F19B         	lfsr	2,_C+156	;volatile
 49172  01568C  006F FF7B FFE6     	movff	postinc2,postinc1
 49173  015692  006F FF7B FFE6     	movff	postinc2,postinc1
 49174  015698  006F FF7B FFE6     	movff	postinc2,postinc1
 49175  01569E  006F FF7B FFE6     	movff	postinc2,postinc1
 49176  0156A4  EE22  F18B         	lfsr	2,_C+140	;volatile
 49177  0156A8  006F FF7B FFE6     	movff	postinc2,postinc1
 49178  0156AE  006F FF7B FFE6     	movff	postinc2,postinc1
 49179  0156B4  006F FF7B FFE6     	movff	postinc2,postinc1
 49180  0156BA  006F FF7B FFE6     	movff	postinc2,postinc1
 49181  0156C0  ECA9  F0F6         	call	___flge	;wreg free
 49182  0156C4  B02A               	btfsc	btemp& (0+255),0,c
 49183  0156C6  D00E               	goto	l17249
 49184                           
 49185                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 49186  0156C8  EE22  F18B         	lfsr	2,_C+140	;volatile
 49187  0156CC  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 49188  0156D2  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 49189  0156D8  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 49190  0156DE  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 49191  0156E4                     l17249:
 49192                           
 49193                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 49194  0156E4  0ECD               	movlw	205
 49195  0156E6  6EE6               	movwf	postinc1,c
 49196  0156E8  0ECC               	movlw	204
 49197  0156EA  6EE6               	movwf	postinc1,c
 49198  0156EC  0ECC               	movlw	204
 49199  0156EE  6EE6               	movwf	postinc1,c
 49200  0156F0  0E3D               	movlw	61
 49201  0156F2  6EE6               	movwf	postinc1,c
 49202  0156F4  EE22  F19B         	lfsr	2,_C+156	;volatile
 49203  0156F8  006F FF7B FFE6     	movff	postinc2,postinc1
 49204  0156FE  006F FF7B FFE6     	movff	postinc2,postinc1
 49205  015704  006F FF7B FFE6     	movff	postinc2,postinc1
 49206  01570A  006F FF7B FFE6     	movff	postinc2,postinc1
 49207  015710  ECA9  F0F6         	call	___flge	;wreg free
 49208  015714  B02A               	btfsc	btemp& (0+255),0,c
 49209  015716  D010               	goto	l17253
 49210                           
 49211                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 49212  015718  0ECD               	movlw	205
 49213  01571A  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
 49214  015720  0ECC               	movlw	204
 49215  015722  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
 49216  015728  0ECC               	movlw	204
 49217  01572A  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
 49218  015730  0E3D               	movlw	61
 49219  015732  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
 49220  015738                     l17253:
 49221                           
 49222                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 49223  015738  0E00               	movlw	0
 49224  01573A  6EE6               	movwf	postinc1,c
 49225  01573C  0E00               	movlw	0
 49226  01573E  6EE6               	movwf	postinc1,c
 49227  015740  0E61               	movlw	97
 49228  015742  6EE6               	movwf	postinc1,c
 49229  015744  0E45               	movlw	69
 49230  015746  6EE6               	movwf	postinc1,c
 49231  015748  EE22  F147         	lfsr	2,_C+72	;volatile
 49232  01574C  006F FF7B FFE6     	movff	postinc2,postinc1
 49233  015752  006F FF7B FFE6     	movff	postinc2,postinc1
 49234  015758  006F FF7B FFE6     	movff	postinc2,postinc1
 49235  01575E  006F FF7B FFE6     	movff	postinc2,postinc1
 49236  015764  EC78  F0C3         	call	___fldiv	;wreg free
 49237  015768  0060  F0AB  FFE6   	movff	btemp,postinc1
 49238  01576E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49239  015774  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49240  01577A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49241  015780  0E93               	movlw	low (_C+148)
 49242  015782  6EE6               	movwf	postinc1,c
 49243  015784  0E09               	movlw	high (_C+148)
 49244  015786  6EE6               	movwf	postinc1,c
 49245  015788  EC62  F00C         	call	___asfladd	;wreg free
 49246                           
 49247                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 49248  01578C  0E00               	movlw	0
 49249  01578E  6EE6               	movwf	postinc1,c
 49250  015790  0E00               	movlw	0
 49251  015792  6EE6               	movwf	postinc1,c
 49252  015794  0E61               	movlw	97
 49253  015796  6EE6               	movwf	postinc1,c
 49254  015798  0E45               	movlw	69
 49255  01579A  6EE6               	movwf	postinc1,c
 49256  01579C  EE22  F17B         	lfsr	2,_C+124	;volatile
 49257  0157A0  006F FF7B FFE6     	movff	postinc2,postinc1
 49258  0157A6  006F FF7B FFE6     	movff	postinc2,postinc1
 49259  0157AC  006F FF7B FFE6     	movff	postinc2,postinc1
 49260  0157B2  006F FF7B FFE6     	movff	postinc2,postinc1
 49261  0157B8  EC78  F0C3         	call	___fldiv	;wreg free
 49262  0157BC  0060  F0AB  FFE6   	movff	btemp,postinc1
 49263  0157C2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49264  0157C8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49265  0157CE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49266  0157D4  0EA7               	movlw	low (_C+168)
 49267  0157D6  6EE6               	movwf	postinc1,c
 49268  0157D8  0E09               	movlw	high (_C+168)
 49269  0157DA  6EE6               	movwf	postinc1,c
 49270  0157DC  EC62  F00C         	call	___asfladd	;wreg free
 49271                           
 49272                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 49273  0157E0  0E00               	movlw	0
 49274  0157E2  6EE6               	movwf	postinc1,c
 49275  0157E4  0E00               	movlw	0
 49276  0157E6  6EE6               	movwf	postinc1,c
 49277  0157E8  0E61               	movlw	97
 49278  0157EA  6EE6               	movwf	postinc1,c
 49279  0157EC  0E45               	movlw	69
 49280  0157EE  6EE6               	movwf	postinc1,c
 49281  0157F0  EE22  F177         	lfsr	2,_C+120	;volatile
 49282  0157F4  006F FF7B FFE6     	movff	postinc2,postinc1
 49283  0157FA  006F FF7B FFE6     	movff	postinc2,postinc1
 49284  015800  006F FF7B FFE6     	movff	postinc2,postinc1
 49285  015806  006F FF7B FFE6     	movff	postinc2,postinc1
 49286  01580C  EC78  F0C3         	call	___fldiv	;wreg free
 49287  015810  0060  F0AB  FFE6   	movff	btemp,postinc1
 49288  015816  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49289  01581C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49290  015822  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49291  015828  0EAB               	movlw	low (_C+172)
 49292  01582A  6EE6               	movwf	postinc1,c
 49293  01582C  0E09               	movlw	high (_C+172)
 49294  01582E  6EE6               	movwf	postinc1,c
 49295  015830  EC62  F00C         	call	___asfladd	;wreg free
 49296                           
 49297                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 49298  015834  0E00               	movlw	0
 49299  015836  6EE6               	movwf	postinc1,c
 49300  015838  0E00               	movlw	0
 49301  01583A  6EE6               	movwf	postinc1,c
 49302  01583C  0E61               	movlw	97
 49303  01583E  6EE6               	movwf	postinc1,c
 49304  015840  0E45               	movlw	69
 49305  015842  6EE6               	movwf	postinc1,c
 49306  015844  EE22  F173         	lfsr	2,_C+116	;volatile
 49307  015848  006F FF7B FFE6     	movff	postinc2,postinc1
 49308  01584E  006F FF7B FFE6     	movff	postinc2,postinc1
 49309  015854  006F FF7B FFE6     	movff	postinc2,postinc1
 49310  01585A  006F FF7B FFE6     	movff	postinc2,postinc1
 49311  015860  EC78  F0C3         	call	___fldiv	;wreg free
 49312  015864  0060  F0AB  FFE6   	movff	btemp,postinc1
 49313  01586A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49314  015870  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49315  015876  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49316  01587C  0EAF               	movlw	low (_C+176)
 49317  01587E  6EE6               	movwf	postinc1,c
 49318  015880  0E09               	movlw	high (_C+176)
 49319  015882  6EE6               	movwf	postinc1,c
 49320  015884  EC62  F00C         	call	___asfladd	;wreg free
 49321                           
 49322                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 49323  015888  EE22  F17F         	lfsr	2,_C+128	;volatile
 49324  01588C  006F FF7B FFE6     	movff	postinc2,postinc1
 49325  015892  006F FF7B FFE6     	movff	postinc2,postinc1
 49326  015898  006F FF7B FFE6     	movff	postinc2,postinc1
 49327  01589E  006F FF7B FFE6     	movff	postinc2,postinc1
 49328  0158A4  0E00               	movlw	0
 49329  0158A6  6EE6               	movwf	postinc1,c
 49330  0158A8  0E00               	movlw	0
 49331  0158AA  6EE6               	movwf	postinc1,c
 49332  0158AC  0E00               	movlw	0
 49333  0158AE  6EE6               	movwf	postinc1,c
 49334  0158B0  0E00               	movlw	0
 49335  0158B2  6EE6               	movwf	postinc1,c
 49336  0158B4  ECA9  F0F6         	call	___flge	;wreg free
 49337  0158B8  B02A               	btfsc	btemp& (0+255),0,c
 49338  0158BA  D02A               	goto	l17259
 49339                           
 49340                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 49341  0158BC  0E00               	movlw	0
 49342  0158BE  6EE6               	movwf	postinc1,c
 49343  0158C0  0E00               	movlw	0
 49344  0158C2  6EE6               	movwf	postinc1,c
 49345  0158C4  0E61               	movlw	97
 49346  0158C6  6EE6               	movwf	postinc1,c
 49347  0158C8  0E45               	movlw	69
 49348  0158CA  6EE6               	movwf	postinc1,c
 49349  0158CC  EE22  F17F         	lfsr	2,_C+128	;volatile
 49350  0158D0  006F FF7B FFE6     	movff	postinc2,postinc1
 49351  0158D6  006F FF7B FFE6     	movff	postinc2,postinc1
 49352  0158DC  006F FF7B FFE6     	movff	postinc2,postinc1
 49353  0158E2  006F FF7B FFE6     	movff	postinc2,postinc1
 49354  0158E8  EC78  F0C3         	call	___fldiv	;wreg free
 49355  0158EC  0060  F0AB  FFE6   	movff	btemp,postinc1
 49356  0158F2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49357  0158F8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49358  0158FE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49359  015904  0E9F               	movlw	low (_C+160)
 49360  015906  6EE6               	movwf	postinc1,c
 49361  015908  0E09               	movlw	high (_C+160)
 49362  01590A  6EE6               	movwf	postinc1,c
 49363  01590C  EC62  F00C         	call	___asfladd	;wreg free
 49364  015910                     l17259:
 49365                           
 49366                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 49367  015910  EE22  F17F         	lfsr	2,_C+128	;volatile
 49368  015914  0E03               	movlw	3
 49369  015916  AEDB               	btfss	plusw2,7,c
 49370  015918  D038               	goto	l17263
 49371                           
 49372                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 49373  01591A  0E00               	movlw	0
 49374  01591C  6EE6               	movwf	postinc1,c
 49375  01591E  0E00               	movlw	0
 49376  015920  6EE6               	movwf	postinc1,c
 49377  015922  0E61               	movlw	97
 49378  015924  6EE6               	movwf	postinc1,c
 49379  015926  0E45               	movlw	69
 49380  015928  6EE6               	movwf	postinc1,c
 49381  01592A  EE22  F17F         	lfsr	2,_C+128	;volatile
 49382  01592E  006F FF7B FFE6     	movff	postinc2,postinc1
 49383  015934  006F FF7B FFE6     	movff	postinc2,postinc1
 49384  01593A  006F FF7B FFE6     	movff	postinc2,postinc1
 49385  015940  006F FF7B FFE6     	movff	postinc2,postinc1
 49386  015946  EC78  F0C3         	call	___fldiv	;wreg free
 49387  01594A  0060  F0AB  FFE6   	movff	btemp,postinc1
 49388  015950  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49389  015956  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49390  01595C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49391  015962  ECA0  F006         	call	_fabsf	;wreg free
 49392  015966  0060  F0AB  FFE6   	movff	btemp,postinc1
 49393  01596C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49394  015972  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49395  015978  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49396  01597E  0EA3               	movlw	low (_C+164)
 49397  015980  6EE6               	movwf	postinc1,c
 49398  015982  0E09               	movlw	high (_C+164)
 49399  015984  6EE6               	movwf	postinc1,c
 49400  015986  EC62  F00C         	call	___asfladd	;wreg free
 49401  01598A                     l17263:
 49402                           
 49403                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 49404  01598A  0E00               	movlw	0
 49405  01598C  6EE6               	movwf	postinc1,c
 49406  01598E  0E00               	movlw	0
 49407  015990  6EE6               	movwf	postinc1,c
 49408  015992  0EC8               	movlw	200
 49409  015994  6EE6               	movwf	postinc1,c
 49410  015996  0E42               	movlw	66
 49411  015998  6EE6               	movwf	postinc1,c
 49412  01599A  EE22  F18B         	lfsr	2,_C+140	;volatile
 49413  01599E  006F FF7B FFE6     	movff	postinc2,postinc1
 49414  0159A4  006F FF7B FFE6     	movff	postinc2,postinc1
 49415  0159AA  006F FF7B FFE6     	movff	postinc2,postinc1
 49416  0159B0  006F FF7B FFE6     	movff	postinc2,postinc1
 49417  0159B6  EE22  F19B         	lfsr	2,_C+156	;volatile
 49418  0159BA  006F FF7B FFE6     	movff	postinc2,postinc1
 49419  0159C0  006F FF7B FFE6     	movff	postinc2,postinc1
 49420  0159C6  006F FF7B FFE6     	movff	postinc2,postinc1
 49421  0159CC  006F FF7B FFE6     	movff	postinc2,postinc1
 49422  0159D2  EC78  F0C3         	call	___fldiv	;wreg free
 49423  0159D6  0060  F0AB  FFE6   	movff	btemp,postinc1
 49424  0159DC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49425  0159E2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49426  0159E8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49427  0159EE  EC27  F0B8         	call	___flmul	;wreg free
 49428  0159F2  0060  F0AB  FFE6   	movff	btemp,postinc1
 49429  0159F8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49430  0159FE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49431  015A04  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49432  015A0A  EC3D  F0F5         	call	___fltol	;wreg free
 49433  015A0E  0060  F0A8  F034   	movff	btemp,btemp+10
 49434  015A14  0060  F0AC  F035   	movff	btemp+1,btemp+11
 49435  015A1A  0E01               	movlw	1
 49436  015A1C  2634               	addwf	(btemp+10)^0,f,c
 49437  015A1E  0E00               	movlw	0
 49438  015A20  2235               	addwfc	(btemp+11)^0,f,c
 49439  015A22  0060  F0D0  F9B5   	movff	btemp+10,_C+182	;volatile
 49440  015A28  0060  F0D4  F9B6   	movff	btemp+11,_C+183	;volatile
 49441                           
 49442                           ;bsoc.c: 76:  if (C.soc > 100)
 49443  015A2E  EE22  F1B5         	lfsr	2,_C+182	;volatile
 49444  015A32  0E01               	movlw	1
 49445  015A34  50DB               	movf	plusw2,w,c
 49446  015A36  E104               	bnz	u1687_20
 49447  015A38  0E65               	movlw	101
 49448  015A3A  5CDE               	subwf	postinc2,w,c
 49449  015A3C  A0D8               	btfss	status,0,c
 49450  015A3E  D008               	goto	l17269
 49451  015A40                     u1687_20:
 49452                           
 49453                           ;bsoc.c: 77:   C.soc = 100;
 49454  015A40  0E64               	movlw	100
 49455  015A42  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
 49456  015A48  0E00               	movlw	0
 49457  015A4A  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
 49458  015A50                     l17269:
 49459                           
 49460                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 49461  015A50  EE22  F143         	lfsr	2,_C+68	;volatile
 49462  015A54  0E03               	movlw	3
 49463  015A56  AEDB               	btfss	plusw2,7,c
 49464  015A58  D047               	goto	l2371
 49465                           
 49466                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 49467  015A5A  EE22  F143         	lfsr	2,_C+68	;volatile
 49468  015A5E  006F FF7B FFE6     	movff	postinc2,postinc1
 49469  015A64  006F FF7B FFE6     	movff	postinc2,postinc1
 49470  015A6A  006F FF7B FFE6     	movff	postinc2,postinc1
 49471  015A70  006F FF7B FFE6     	movff	postinc2,postinc1
 49472  015A76  EE22  F19B         	lfsr	2,_C+156	;volatile
 49473  015A7A  006F FF7B FFE6     	movff	postinc2,postinc1
 49474  015A80  006F FF7B FFE6     	movff	postinc2,postinc1
 49475  015A86  006F FF7B FFE6     	movff	postinc2,postinc1
 49476  015A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 49477  015A92  EC78  F0C3         	call	___fldiv	;wreg free
 49478  015A96  0060  F0AB  FFE6   	movff	btemp,postinc1
 49479  015A9C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49480  015AA2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49481  015AA8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49482  015AAE  ECAF  F010         	call	___flneg	;wreg free
 49483  015AB2  0060  F0AB  FFE6   	movff	btemp,postinc1
 49484  015AB8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49485  015ABE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49486  015AC4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49487  015ACA  EC3D  F0F5         	call	___fltol	;wreg free
 49488  015ACE  0060  F0A8  F034   	movff	btemp,btemp+10
 49489  015AD4  0060  F0AC  F035   	movff	btemp+1,btemp+11
 49490  015ADA  0060  F0D0  F9B3   	movff	btemp+10,_C+180	;volatile
 49491  015AE0  0060  F0D4  F9B4   	movff	btemp+11,_C+181	;volatile
 49492                           
 49493                           ;bsoc.c: 81:  } else {
 49494  015AE6  D008               	goto	l17273
 49495  015AE8                     l2371:
 49496                           
 49497                           ;bsoc.c: 82:   C.runtime = 99;
 49498  015AE8  0E63               	movlw	99
 49499  015AEA  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 49500  015AF0  0E00               	movlw	0
 49501  015AF2  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 49502  015AF8                     l17273:
 49503                           
 49504                           ;bsoc.c: 84:  if (C.runtime > 99)
 49505  015AF8  EE22  F1B3         	lfsr	2,_C+180	;volatile
 49506  015AFC  0E01               	movlw	1
 49507  015AFE  50DB               	movf	plusw2,w,c
 49508  015B00  E104               	bnz	u1689_20
 49509  015B02  0E64               	movlw	100
 49510  015B04  5CDE               	subwf	postinc2,w,c
 49511  015B06  A0D8               	btfss	status,0,c
 49512  015B08  D008               	goto	l17277
 49513  015B0A                     u1689_20:
 49514                           
 49515                           ;bsoc.c: 85:   C.runtime = 99;
 49516  015B0A  0E63               	movlw	99
 49517  015B0C  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 49518  015B12  0E00               	movlw	0
 49519  015B14  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 49520  015B1A                     l17277:
 49521                           
 49522                           ;bsoc.c: 87:  V.lowint_count++;
 49523  015B1A  0E01               	movlw	1
 49524  015B1C  0102               	movlb	2	; () banked
 49525  015B1E  27B4               	addwf	(_V+173)& (0+255),f,b	;volatile
 49526  015B20  0E00               	movlw	0
 49527  015B22  23B5               	addwfc	(_V+174)& (0+255),f,b	;volatile
 49528  015B24  23B6               	addwfc	(_V+175)& (0+255),f,b	;volatile
 49529  015B26  23B7               	addwfc	(_V+176)& (0+255),f,b	;volatile
 49530                           
 49531                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 49532  015B28  2A50               	incf	calc_bsoc@log_update_wait^0,f,c
 49533  015B2A  0450               	decf	calc_bsoc@log_update_wait^0,w,c
 49534  015B2C  A4D8               	btfss	status,2,c
 49535  015B2E  D177               	goto	l17289
 49536                           
 49537                           ; BSR set to: 2
 49538  015B30  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 49539  015B32  B4D8               	btfsc	status,2,c
 49540  015B34  D174               	goto	l17289
 49541                           
 49542                           ; BSR set to: 2
 49543                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 49544  015B36  EC86  F017         	call	_port_data_dma_ptr	;wreg free
 49545                           
 49546                           ;stkvar	_log_ptr @ sp[(-6)+4]
 49547  015B3A  0EFF               	movlw	-1
 49548  015B3C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 49549  015B42  0EFE               	movlw	-2
 49550  015B44  0060  F0AB  FFE3   	movff	btemp,plusw1
 49551                           
 49552                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 49553  015B4A  EE22  F1C1         	lfsr	2,_C+194	;volatile
 49554  015B4E  006F FF7B FFE6     	movff	postinc2,postinc1
 49555  015B54  006F FF7B FFE6     	movff	postinc2,postinc1
 49556  015B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 49557  015B60  006F FF7B FFE6     	movff	postinc2,postinc1
 49558  015B66  EE22  F1C5         	lfsr	2,_C+198	;volatile
 49559  015B6A  006F FF7B FFE6     	movff	postinc2,postinc1
 49560  015B70  006F FF7B FFE6     	movff	postinc2,postinc1
 49561  015B76  006F FF7B FFE6     	movff	postinc2,postinc1
 49562  015B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 49563  015B82  EE22  F19B         	lfsr	2,_C+156	;volatile
 49564  015B86  006F FF7B FFE6     	movff	postinc2,postinc1
 49565  015B8C  006F FF7B FFE6     	movff	postinc2,postinc1
 49566  015B92  006F FF7B FFE6     	movff	postinc2,postinc1
 49567  015B98  006F FF7B FFE6     	movff	postinc2,postinc1
 49568  015B9E  EE22  F233         	lfsr	2,_C+308	;volatile
 49569  015BA2  006F FF7B FFE6     	movff	postinc2,postinc1
 49570  015BA8  006F FF7B FFE6     	movff	postinc2,postinc1
 49571  015BAE  006F FF7B FFE6     	movff	postinc2,postinc1
 49572  015BB4  006F FF7B FFE6     	movff	postinc2,postinc1
 49573  015BBA  EE22  F22F         	lfsr	2,_C+304	;volatile
 49574  015BBE  006F FF7B FFE6     	movff	postinc2,postinc1
 49575  015BC4  006F FF7B FFE6     	movff	postinc2,postinc1
 49576  015BCA  006F FF7B FFE6     	movff	postinc2,postinc1
 49577  015BD0  006F FF7B FFE6     	movff	postinc2,postinc1
 49578  015BD6  EE22  F22D         	lfsr	2,_C+302	;volatile
 49579  015BDA  50DF               	movf	indf2,w,c
 49580  015BDC  6EE6               	movwf	postinc1,c
 49581  015BDE  0E00               	movlw	0
 49582  015BE0  6EE6               	movwf	postinc1,c
 49583  015BE2  EC6B  F017         	call	_get_ac_charger_relay	;wreg free
 49584  015BE6  502A               	movf	btemp^0,w,c
 49585  015BE8  6EE6               	movwf	postinc1,c
 49586  015BEA  0E00               	movlw	0
 49587  015BEC  6EE6               	movwf	postinc1,c
 49588  015BEE  EE22  F167         	lfsr	2,_C+104	;volatile
 49589  015BF2  006F FF7B FFE6     	movff	postinc2,postinc1
 49590  015BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 49591  015BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 49592  015C04  006F FF7B FFE6     	movff	postinc2,postinc1
 49593  015C0A  EE22  F187         	lfsr	2,_C+136	;volatile
 49594  015C0E  006F FF7B FFE6     	movff	postinc2,postinc1
 49595  015C14  006F FF7B FFE6     	movff	postinc2,postinc1
 49596  015C1A  006F FF7B FFE6     	movff	postinc2,postinc1
 49597  015C20  006F FF7B FFE6     	movff	postinc2,postinc1
 49598  015C26  EE22  F1B3         	lfsr	2,_C+180	;volatile
 49599  015C2A  006F FF78  F034    	movff	postinc2,btemp+10
 49600  015C30  006F FF74  F035    	movff	postdec2,btemp+11
 49601  015C36  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 49602  015C3C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 49603  015C42  EE22  F1B5         	lfsr	2,_C+182	;volatile
 49604  015C46  006F FF78  F034    	movff	postinc2,btemp+10
 49605  015C4C  006F FF74  F035    	movff	postdec2,btemp+11
 49606  015C52  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 49607  015C58  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 49608  015C5E  EE22  F193         	lfsr	2,_C+148	;volatile
 49609  015C62  006F FF7B FFE6     	movff	postinc2,postinc1
 49610  015C68  006F FF7B FFE6     	movff	postinc2,postinc1
 49611  015C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 49612  015C74  006F FF7B FFE6     	movff	postinc2,postinc1
 49613  015C7A  EE22  F18F         	lfsr	2,_C+144	;volatile
 49614  015C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 49615  015C84  006F FF7B FFE6     	movff	postinc2,postinc1
 49616  015C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 49617  015C90  006F FF7B FFE6     	movff	postinc2,postinc1
 49618  015C96  EE22  F177         	lfsr	2,_C+120	;volatile
 49619  015C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 49620  015CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 49621  015CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 49622  015CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 49623  015CB2  EE22  F173         	lfsr	2,_C+116	;volatile
 49624  015CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 49625  015CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 49626  015CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 49627  015CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 49628  015CCE  EE22  F17B         	lfsr	2,_C+124	;volatile
 49629  015CD2  006F FF7B FFE6     	movff	postinc2,postinc1
 49630  015CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 49631  015CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 49632  015CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 49633  015CEA  EE22  F17F         	lfsr	2,_C+128	;volatile
 49634  015CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 49635  015CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 49636  015CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 49637  015D00  006F FF7B FFE6     	movff	postinc2,postinc1
 49638  015D06  EE22  F147         	lfsr	2,_C+72	;volatile
 49639  015D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 49640  015D10  006F FF7B FFE6     	movff	postinc2,postinc1
 49641  015D16  006F FF7B FFE6     	movff	postinc2,postinc1
 49642  015D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 49643  015D22  EE22  F143         	lfsr	2,_C+68	;volatile
 49644  015D26  006F FF7B FFE6     	movff	postinc2,postinc1
 49645  015D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 49646  015D32  006F FF7B FFE6     	movff	postinc2,postinc1
 49647  015D38  006F FF7B FFE6     	movff	postinc2,postinc1
 49648  015D3E  EE22  F163         	lfsr	2,_C+100	;volatile
 49649  015D42  006F FF7B FFE6     	movff	postinc2,postinc1
 49650  015D48  006F FF7B FFE6     	movff	postinc2,postinc1
 49651  015D4E  006F FF7B FFE6     	movff	postinc2,postinc1
 49652  015D54  006F FF7B FFE6     	movff	postinc2,postinc1
 49653  015D5A  EE22  F14B         	lfsr	2,_C+76	;volatile
 49654  015D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 49655  015D64  006F FF7B FFE6     	movff	postinc2,postinc1
 49656  015D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 49657  015D70  006F FF7B FFE6     	movff	postinc2,postinc1
 49658  015D76  EE22  F14F         	lfsr	2,_C+80	;volatile
 49659  015D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 49660  015D80  006F FF7B FFE6     	movff	postinc2,postinc1
 49661  015D86  006F FF7B FFE6     	movff	postinc2,postinc1
 49662  015D8C  006F FF7B FFE6     	movff	postinc2,postinc1
 49663  015D92  EE22  F153         	lfsr	2,_C+84	;volatile
 49664  015D96  006F FF7B FFE6     	movff	postinc2,postinc1
 49665  015D9C  006F FF7B FFE6     	movff	postinc2,postinc1
 49666  015DA2  006F FF7B FFE6     	movff	postinc2,postinc1
 49667  015DA8  006F FF7B FFE6     	movff	postinc2,postinc1
 49668  015DAE  0060  FA23  FFE6   	movff	_V+129,postinc1
 49669  015DB4  0060  FA27  FFE6   	movff	_V+130,postinc1
 49670  015DBA  0060  FA2B  FFE6   	movff	_V+131,postinc1
 49671  015DC0  0060  FA2F  FFE6   	movff	_V+132,postinc1
 49672  015DC6  0E32               	movlw	50
 49673  015DC8  6EE6               	movwf	postinc1,c
 49674  015DCA  0E00               	movlw	0
 49675  015DCC  6EE6               	movwf	postinc1,c
 49676  015DCE  0E63               	movlw	low STR_103
 49677  015DD0  6EE6               	movwf	postinc1,c
 49678  015DD2  0EF9               	movlw	high STR_103
 49679  015DD4  6EE6               	movwf	postinc1,c
 49680                           
 49681                           ;stkvar	_log_ptr @ sp[(-98)+4]
 49682  015DD6  0EA2               	movlw	-94
 49683  015DD8  006F FF8F FFE6     	movff	plusw1,postinc1
 49684  015DDE  006F FF8F FFE6     	movff	plusw1,postinc1
 49685  015DE4  0E5E               	movlw	94
 49686  015DE6  6EE6               	movwf	postinc1,c
 49687  015DE8  EC59  F0FF         	call	_sprintf	;wreg free
 49688                           
 49689                           ; BSR set to: 0
 49690                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 49691  015DEC  0E7D               	movlw	125
 49692  015DEE  6EE6               	movwf	postinc1,c
 49693  015DF0  0E00               	movlw	0
 49694  015DF2  6EE6               	movwf	postinc1,c
 49695  015DF4  0E0A               	movlw	10
 49696  015DF6  6EE6               	movwf	postinc1,c
 49697  015DF8  EC09  F012         	call	_StartTimer	;wreg free
 49698                           
 49699                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 49700                           ;stkvar	_log_ptr @ sp[(-6)+4]
 49701  015DFC  0EFE               	movlw	-2
 49702  015DFE  006F FF8F FFE6     	movff	plusw1,postinc1
 49703  015E04  006F FF8F FFE6     	movff	plusw1,postinc1
 49704  015E0A  EC47  F008         	call	_strlen	;wreg free
 49705  015E0E  0060  F0AB  FFE6   	movff	btemp,postinc1
 49706  015E14  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49707  015E1A  EC11  F010         	call	_send_port_data_dma	;wreg free
 49708  015E1E                     l17289:
 49709                           
 49710                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 49711  015E1E  0E09               	movlw	9
 49712  015E20  6450               	cpfsgt	calc_bsoc@log_update_wait^0,c
 49713  015E22  D001               	goto	l2375
 49714                           
 49715                           ;bsoc.c: 102:   log_update_wait = 0;
 49716  015E24  6A50               	clrf	calc_bsoc@log_update_wait^0,c
 49717  015E26                     l2375:
 49718                           
 49719                           ;bsoc.c: 104:  C.update = 0;
 49720  015E26  0E00               	movlw	0
 49721  015E28  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 49722                           
 49723                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 49724  015E2E  92BE               	bcf	190,1,c	;volatile
 49725                           
 49726                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 49727  015E30  0EFA               	movlw	250
 49728  015E32  26E1               	addwf	fsr1l,f,c
 49729  015E34  0EFF               	movlw	255
 49730  015E36  22E2               	addwfc	fsr1h,f,c
 49731  015E38  0012               	return		;funcret
 49732  015E3A                     __end_of_calc_bsoc:
 49733                           	opt callstack 0
 49734                           
 49735 ;; *************** function _send_port_data_dma *****************
 49736 ;; Defined at:
 49737 ;;		line 397 in file "eadog.c"
 49738 ;; Parameters:    Size  Location     Type
 49739 ;;  dsize           2  [STACK] unsigned short 
 49740 ;; Auto vars:     Size  Location     Type
 49741 ;;		None
 49742 ;; Return value:  Size  Location     Type
 49743 ;;                  1  [STACK] void 
 49744 ;; Registers used:
 49745 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 49746 ;; Tracked objects:
 49747 ;;		On entry : 0/0
 49748 ;;		On exit  : 3F/3B
 49749 ;;		Unchanged: 0/0
 49750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49755 ;;Total ram usage:        0 bytes
 49756 ;; Hardware stack levels used:    1
 49757 ;; Hardware stack levels required when called:    3
 49758 ;; This function calls:
 49759 ;;		Nothing
 49760 ;; This function is called by:
 49761 ;;		_calc_bsoc
 49762 ;; This function uses a reentrant model
 49763 ;;
 49764                           
 49765                           	psect	text203
 49766  002022                     __ptext203:
 49767                           	opt callstack 0
 49768  002022                     _send_port_data_dma:
 49769                           	opt callstack 11
 49770                           
 49771                           ;eadog.c: 397: void send_port_data_dma(uint16_t dsize);eadog.c: 398: {;eadog.c: 399:  if
      +                           (dsize > 512)
 49772                           ;stkvar	_dsize @ sp[(0)+-2]
 49773                           
 49774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49775                           ;incstack = 0
 49776  002022  0EFE               	movlw	-2
 49777  002024  04E3               	decf	plusw1,w,c
 49778  002026  0EFF               	movlw	-1
 49779  002028  006F FF8C  F02A    	movff	plusw1,btemp
 49780  00202E  0E02               	movlw	2
 49781  002030  5A2A               	subwfb	btemp^0,f,c
 49782  002032  A0D8               	btfss	status,0,c
 49783  002034  D00C               	goto	l12985
 49784                           
 49785                           ;eadog.c: 400:   dsize = 512;
 49786  002036  0E00               	movlw	0
 49787  002038  6E34               	movwf	(btemp+10)^0,c
 49788  00203A  0E02               	movlw	2
 49789  00203C  6E35               	movwf	(btemp+11)^0,c
 49790                           
 49791                           ;stkvar	_dsize @ sp[(0)+-2]
 49792  00203E  0EFE               	movlw	-2
 49793  002040  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 49794  002046  0EFF               	movlw	-1
 49795  002048  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 49796  00204E                     l12985:
 49797                           
 49798                           ;eadog.c: 402:  DMA2CON0bits.EN = 0;
 49799  00204E  013B               	movlb	59	; () banked
 49800  002050  9FDC               	bcf	220,7,b	;volatile
 49801                           
 49802                           ; BSR set to: 59
 49803                           ;eadog.c: 403:  DMA2SSZ = dsize;
 49804                           ;stkvar	_dsize @ sp[(0)+-2]
 49805  002052  0EFE               	movlw	-2
 49806  002054  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 49807  00205A  0EFF               	movlw	-1
 49808  00205C  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 49809                           
 49810                           ; BSR set to: 59
 49811                           ;eadog.c: 404:  DMA2DSZ = 1;
 49812  002062  0E00               	movlw	0
 49813  002064  6FCF               	movwf	207,b	;volatile
 49814  002066  0E01               	movlw	1
 49815  002068  6FCE               	movwf	206,b	;volatile
 49816                           
 49817                           ; BSR set to: 59
 49818                           ;eadog.c: 405:  DMA2CON0bits.EN = 1;
 49819  00206A  8FDC               	bsf	220,7,b	;volatile
 49820                           
 49821                           ; BSR set to: 59
 49822                           ;eadog.c: 406:  DMA2CON0bits.DMA2SIRQEN = 1;
 49823  00206C  8DDC               	bsf	220,6,b	;volatile
 49824                           
 49825                           ; BSR set to: 59
 49826                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 49827  00206E  52E5               	movf	postdec1,f,c
 49828  002070  52E5               	movf	postdec1,f,c
 49829  002072  0012               	return		;funcret
 49830  002074                     __end_of_send_port_data_dma:
 49831                           	opt callstack 0
 49832                           
 49833 ;; *************** function _port_data_dma_ptr *****************
 49834 ;; Defined at:
 49835 ;;		line 412 in file "eadog.c"
 49836 ;; Parameters:    Size  Location     Type
 49837 ;;		None
 49838 ;; Auto vars:     Size  Location     Type
 49839 ;;		None
 49840 ;; Return value:  Size  Location     Type
 49841 ;;                  2  [STACK] PTR unsigned char 
 49842 ;; Registers used:
 49843 ;;		wreg, status,2, status,0, btemp, btemp+1
 49844 ;; Tracked objects:
 49845 ;;		On entry : 3F/2
 49846 ;;		On exit  : 0/0
 49847 ;;		Unchanged: 0/0
 49848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49853 ;;Total ram usage:        0 bytes
 49854 ;; Hardware stack levels used:    1
 49855 ;; Hardware stack levels required when called:    3
 49856 ;; This function calls:
 49857 ;;		Nothing
 49858 ;; This function is called by:
 49859 ;;		_calc_bsoc
 49860 ;; This function uses a reentrant model
 49861 ;;
 49862                           
 49863                           	psect	text204
 49864  002F0C                     __ptext204:
 49865                           	opt callstack 0
 49866  002F0C                     _port_data_dma_ptr:
 49867                           	opt callstack 11
 49868                           
 49869                           ;eadog.c: 414:  return port_data;
 49870                           
 49871                           ; BSR set to: 59
 49872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49873                           ;incstack = 0
 49874  002F0C  0EFF               	movlw	low _port_data
 49875  002F0E  6E2A               	movwf	btemp^0,c
 49876  002F10  0E06               	movlw	high _port_data
 49877  002F12  6E2B               	movwf	(btemp+1)^0,c
 49878                           
 49879                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49880  002F14  0012               	return		;funcret
 49881  002F16                     __end_of_port_data_dma_ptr:
 49882                           	opt callstack 0
 49883                           
 49884 ;; *************** function ___asfladd *****************
 49885 ;; Defined at:
 49886 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 49887 ;; Parameters:    Size  Location     Type
 49888 ;;  f1p             2  [STACK] PTR 
 49889 ;;		 -> C(320), 
 49890 ;;  f2              4  [STACK] PTR 
 49891 ;; Auto vars:     Size  Location     Type
 49892 ;;		None
 49893 ;; Return value:  Size  Location     Type
 49894 ;;                  4  [STACK] PTR 
 49895 ;; Registers used:
 49896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 49897 ;; Tracked objects:
 49898 ;;		On entry : 0/0
 49899 ;;		On exit  : 0/0
 49900 ;;		Unchanged: 0/0
 49901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49906 ;;Total ram usage:        0 bytes
 49907 ;; Hardware stack levels used:    1
 49908 ;; Hardware stack levels required when called:    4
 49909 ;; This function calls:
 49910 ;;		___fladd
 49911 ;; This function is called by:
 49912 ;;		_calc_bsoc
 49913 ;; This function uses a reentrant model
 49914 ;;
 49915                           
 49916                           	psect	text205
 49917  0018C4                     __ptext205:
 49918                           	opt callstack 0
 49919  0018C4                     ___asfladd:
 49920                           	opt callstack 10
 49921                           
 49922                           ;	Return value of ___asfladd is never used
 49923                           ;stkvar	_f2 @ sp[(0)+-6]
 49924                           
 49925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49926                           ;incstack = 0
 49927  0018C4  0EFA               	movlw	-6
 49928  0018C6  006F FF8F FFE6     	movff	plusw1,postinc1
 49929  0018CC  006F FF8F FFE6     	movff	plusw1,postinc1
 49930  0018D2  006F FF8F FFE6     	movff	plusw1,postinc1
 49931  0018D8  006F FF8F FFE6     	movff	plusw1,postinc1
 49932                           
 49933                           ;stkvar	_f1p @ sp[(-4)+-2]
 49934  0018DE  0EFA               	movlw	-6
 49935  0018E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 49936  0018E6  0EFB               	movlw	-5
 49937  0018E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 49938  0018EE  006F FF7B FFE6     	movff	postinc2,postinc1
 49939  0018F4  006F FF7B FFE6     	movff	postinc2,postinc1
 49940  0018FA  006F FF7B FFE6     	movff	postinc2,postinc1
 49941  001900  006F FF7B FFE6     	movff	postinc2,postinc1
 49942  001906  EC3C  F0BC         	call	___fladd	;wreg free
 49943                           
 49944                           ;stkvar	_f1p @ sp[(0)+-2]
 49945  00190A  0EFE               	movlw	-2
 49946  00190C  006F FF8F FFD9     	movff	plusw1,fsr2l
 49947  001912  0EFF               	movlw	-1
 49948  001914  006F FF8F FFDA     	movff	plusw1,fsr2h
 49949  00191A  0060  F0AB  FFDE   	movff	btemp,postinc2
 49950  001920  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 49951  001926  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 49952  00192C  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 49953                           
 49954                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 49955  001932  0EFA               	movlw	250
 49956  001934  26E1               	addwf	fsr1l,f,c
 49957  001936  0EFF               	movlw	255
 49958  001938  22E2               	addwfc	fsr1h,f,c
 49959  00193A  0012               	return		;funcret
 49960  00193C                     __end_of___asfladd:
 49961                           	opt callstack 0
 49962                           
 49963 ;; *************** function _INT0_ISR *****************
 49964 ;; Defined at:
 49965 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 49966 ;; Parameters:    Size  Location     Type
 49967 ;;		None
 49968 ;; Auto vars:     Size  Location     Type
 49969 ;;		None
 49970 ;; Return value:  Size  Location     Type
 49971 ;;                  1    wreg      void 
 49972 ;; Registers used:
 49973 ;;		wreg, status,2, status,0, pclath, tosl
 49974 ;; Tracked objects:
 49975 ;;		On entry : 0/0
 49976 ;;		On exit  : 0/0
 49977 ;;		Unchanged: 0/0
 49978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49983 ;;Total ram usage:        0 bytes
 49984 ;; Hardware stack levels used:    1
 49985 ;; Hardware stack levels required when called:    2
 49986 ;; This function calls:
 49987 ;;		_INT0_CallBack
 49988 ;; This function is called by:
 49989 ;;		Interrupt level 2
 49990 ;; This function uses a non-reentrant model
 49991 ;;
 49992                           
 49993                           	psect	text206
 49994  002EE4                     __ptext206:
 49995                           	opt callstack 0
 49996  002EE4                     _INT0_ISR:
 49997                           	opt callstack 3
 49998                           
 49999                           ;incstack = 0
 50000  002EE4  EE14  F32C         	lfsr	1,___inthi_sp
 50001                           
 50002                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 50003  002EE8  0139               	movlb	57	; () banked
 50004  002EEA  91A1               	bcf	161,0,b	;volatile
 50005                           
 50006                           ; BSR set to: 57
 50007                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 50008  002EEC  ECF6  F015         	call	_INT0_CallBack	;wreg free
 50009  002EF0  0011               	retfie		f
 50010  002EF2                     __end_of_INT0_ISR:
 50011                           	opt callstack 0
 50012                           
 50013 ;; *************** function _INT0_CallBack *****************
 50014 ;; Defined at:
 50015 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 50016 ;; Parameters:    Size  Location     Type
 50017 ;;		None
 50018 ;; Auto vars:     Size  Location     Type
 50019 ;;		None
 50020 ;; Return value:  Size  Location     Type
 50021 ;;                  1  [STACK] void 
 50022 ;; Registers used:
 50023 ;;		wreg, status,2, status,0, pclath, tosl
 50024 ;; Tracked objects:
 50025 ;;		On entry : 3F/39
 50026 ;;		On exit  : 0/0
 50027 ;;		Unchanged: 0/0
 50028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50033 ;;Total ram usage:        0 bytes
 50034 ;; Hardware stack levels used:    1
 50035 ;; Hardware stack levels required when called:    1
 50036 ;; This function calls:
 50037 ;;		Absolute function
 50038 ;;		_INT0_DefaultInterruptHandler
 50039 ;; This function is called by:
 50040 ;;		_INT0_ISR
 50041 ;; This function uses a reentrant model
 50042 ;;
 50043                           
 50044                           	psect	text207
 50045  002BEC                     __ptext207:
 50046                           	opt callstack 0
 50047  002BEC                     _INT0_CallBack:
 50048                           	opt callstack 3
 50049                           
 50050                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 50051                           
 50052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50053                           ;incstack = 0
 50054  002BEC  0100               	movlb	0	; () banked
 50055  002BEE  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 50056  002BF0  11B4               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 50057  002BF2  11B5               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 50058  002BF4  B4D8               	btfsc	status,2,c
 50059  002BF6  0012               	return	
 50060                           
 50061                           ; BSR set to: 0
 50062                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 50063  002BF8  D801               	call	u1324_48
 50064  002BFA  0012               	return	
 50065  002BFC                     u1324_48:
 50066  002BFC  0005               	push	
 50067  002BFE  6EFA               	movwf	pclath,c
 50068  002C00  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 50069  002C02  6EFD               	movwf	tosl,c
 50070  002C04  51B4               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 50071  002C06  6EFE               	movwf	tosh,c
 50072  002C08  51B5               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 50073  002C0A  6EFF               	movwf	tosu,c
 50074  002C0C  50FA               	movf	pclath,w,c
 50075  002C0E  0012               	return		;indir
 50076  002C10                     __end_of_INT0_CallBack:
 50077                           	opt callstack 0
 50078                           
 50079 ;; *************** function _INT0_DefaultInterruptHandler *****************
 50080 ;; Defined at:
 50081 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 50082 ;; Parameters:    Size  Location     Type
 50083 ;;		None
 50084 ;; Auto vars:     Size  Location     Type
 50085 ;;		None
 50086 ;; Return value:  Size  Location     Type
 50087 ;;                  1  [STACK] void 
 50088 ;; Registers used:
 50089 ;;		None
 50090 ;; Tracked objects:
 50091 ;;		On entry : 3F/0
 50092 ;;		On exit  : 0/0
 50093 ;;		Unchanged: 0/0
 50094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50099 ;;Total ram usage:        0 bytes
 50100 ;; Hardware stack levels used:    1
 50101 ;; This function calls:
 50102 ;;		Nothing
 50103 ;; This function is called by:
 50104 ;;		_EXT_INT_Initialize
 50105 ;;		_INT0_CallBack
 50106 ;; This function uses a reentrant model
 50107 ;;
 50108                           
 50109                           	psect	text208
 50110  002F92                     __ptext208:
 50111                           	opt callstack 0
 50112  002F92                     _INT0_DefaultInterruptHandler:
 50113                           	opt callstack 3
 50114                           
 50115                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 50116                           
 50117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50118                           ;incstack = 0
 50119  002F92  0012               	return		;funcret
 50120  002F94                     __end_of_INT0_DefaultInterruptHandler:
 50121                           	opt callstack 0
 50122                           
 50123 ;; *************** function _Default_ISR *****************
 50124 ;; Defined at:
 50125 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 50126 ;; Parameters:    Size  Location     Type
 50127 ;;		None
 50128 ;; Auto vars:     Size  Location     Type
 50129 ;;		None
 50130 ;; Return value:  Size  Location     Type
 50131 ;;                  1    wreg      void 
 50132 ;; Registers used:
 50133 ;;		None
 50134 ;; Tracked objects:
 50135 ;;		On entry : 0/0
 50136 ;;		On exit  : 0/0
 50137 ;;		Unchanged: 0/0
 50138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50143 ;;Total ram usage:        0 bytes
 50144 ;; Hardware stack levels used:    1
 50145 ;; This function calls:
 50146 ;;		Nothing
 50147 ;; This function is called by:
 50148 ;;		Interrupt level 2
 50149 ;; This function uses a non-reentrant model
 50150 ;;
 50151                           
 50152                           	psect	text209
 50153  002F88                     __ptext209:
 50154                           	opt callstack 0
 50155  002F88                     _Default_ISR:
 50156                           	opt callstack 5
 50157                           
 50158                           ;incstack = 0
 50159  002F88  EE14  F32C         	lfsr	1,___inthi_sp
 50160  002F8C  0011               	retfie		f
 50161  002F8E                     __end_of_Default_ISR:
 50162                           	opt callstack 0
 50163                           
 50164 ;; *************** function _ADCC_ISR *****************
 50165 ;; Defined at:
 50166 ;;		line 314 in file "mcc_generated_files/adcc.c"
 50167 ;; Parameters:    Size  Location     Type
 50168 ;;		None
 50169 ;; Auto vars:     Size  Location     Type
 50170 ;;		None
 50171 ;; Return value:  Size  Location     Type
 50172 ;;                  1    wreg      void 
 50173 ;; Registers used:
 50174 ;;		wreg, status,2, status,0, pclath, tosl
 50175 ;; Tracked objects:
 50176 ;;		On entry : 0/0
 50177 ;;		On exit  : 0/0
 50178 ;;		Unchanged: 0/0
 50179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50184 ;;Total ram usage:        0 bytes
 50185 ;; Hardware stack levels used:    1
 50186 ;; Hardware stack levels required when called:    1
 50187 ;; This function calls:
 50188 ;;		Absolute function
 50189 ;;		_ADCC_DefaultInterruptHandler
 50190 ;;		_adc_int_handler
 50191 ;; This function is called by:
 50192 ;;		Interrupt level 2
 50193 ;; This function uses a non-reentrant model
 50194 ;;
 50195                           
 50196                           	psect	text210
 50197  002880                     __ptext210:
 50198                           	opt callstack 0
 50199  002880                     _ADCC_ISR:
 50200                           	opt callstack 4
 50201                           
 50202                           ;incstack = 0
 50203  002880  EE14  F32C         	lfsr	1,___inthi_sp
 50204                           
 50205                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 50206  002884  0139               	movlb	57	; () banked
 50207  002886  95A1               	bcf	161,2,b	;volatile
 50208                           
 50209                           ; BSR set to: 57
 50210                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 50211  002888  0100               	movlb	0	; () banked
 50212  00288A  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 50213  00288C  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 50214  00288E  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 50215  002890  B4D8               	btfsc	status,2,c
 50216  002892  0011               	retfie		f
 50217                           
 50218                           ; BSR set to: 0
 50219                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 50220  002894  D801               	call	i2u1395_48
 50221  002896  0011               	retfie		f
 50222  002898                     i2u1395_48:
 50223  002898  0005               	push	
 50224  00289A  6EFA               	movwf	pclath,c
 50225  00289C  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 50226  00289E  6EFD               	movwf	tosl,c
 50227  0028A0  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 50228  0028A2  6EFE               	movwf	tosh,c
 50229  0028A4  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 50230  0028A6  6EFF               	movwf	tosu,c
 50231  0028A8  50FA               	movf	pclath,w,c
 50232  0028AA  0012               	return		;indir
 50233  0028AC                     __end_of_ADCC_ISR:
 50234                           	opt callstack 0
 50235                           
 50236 ;; *************** function _adc_int_t_handler *****************
 50237 ;; Defined at:
 50238 ;;		line 183 in file "daq.c"
 50239 ;; Parameters:    Size  Location     Type
 50240 ;;		None
 50241 ;; Auto vars:     Size  Location     Type
 50242 ;;		None
 50243 ;; Return value:  Size  Location     Type
 50244 ;;                  1  [STACK] void 
 50245 ;; Registers used:
 50246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 50247 ;; Tracked objects:
 50248 ;;		On entry : 3F/0
 50249 ;;		On exit  : 0/0
 50250 ;;		Unchanged: 0/0
 50251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50256 ;;Total ram usage:        0 bytes
 50257 ;; Hardware stack levels used:    1
 50258 ;; Hardware stack levels required when called:    1
 50259 ;; This function calls:
 50260 ;;		_ADCC_DischargeSampleCapacitor
 50261 ;;		_ADCC_StartConversion
 50262 ;; This function is called by:
 50263 ;;		_start_adc_scan
 50264 ;;		_ADCC_ThresholdISR
 50265 ;; This function uses a reentrant model
 50266 ;;
 50267                           
 50268                           	psect	text211
 50269  0016CC                     __ptext211:
 50270                           	opt callstack 0
 50271  0016CC                     _adc_int_t_handler:
 50272                           	opt callstack 3
 50273                           
 50274                           ;daq.c: 188:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 50275                           
 50276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50277                           ;incstack = 0
 50278  0016CC  013E               	movlb	62	; () banked
 50279  0016CE  51E6               	movf	230,w,b	;volatile
 50280  0016D0  006F FB9C  F02A    	movff	16103,btemp	;volatile
 50281  0016D6  6A2B               	clrf	(btemp+1)^0,c
 50282  0016D8  0060  F0A8  F02B   	movff	btemp,btemp+1
 50283  0016DE  6A2A               	clrf	btemp^0,c
 50284  0016E0  262A               	addwf	btemp^0,f,c
 50285  0016E2  0E00               	movlw	0
 50286  0016E4  222B               	addwfc	(btemp+1)^0,f,c
 50287  0016E6  0101               	movlb	1	; () banked
 50288  0016E8  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 50289  0016EA  0D02               	mullw	2
 50290  0016EC  0E00               	movlw	low _R
 50291  0016EE  24F3               	addwf	243,w,c
 50292  0016F0  6ED9               	movwf	fsr2l,c
 50293  0016F2  0E01               	movlw	high _R
 50294  0016F4  20F4               	addwfc	prodh,w,c
 50295  0016F6  6EDA               	movwf	fsr2h,c
 50296  0016F8  0060  F0AB  FFDE   	movff	btemp,postinc2
 50297  0016FE  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 50298  001704                     l14797:
 50299                           
 50300                           ;daq.c: 190:   if (++R.scan_index > 0XD) {
 50301  001704  0101               	movlb	1	; () banked
 50302  001706  2B32               	incf	(_R+50)& (0+255),f,b	;volatile
 50303  001708  0E0D               	movlw	13
 50304  00170A  6532               	cpfsgt	(_R+50)& (0+255),b	;volatile
 50305  00170C  D003               	goto	l14803
 50306                           
 50307                           ; BSR set to: 1
 50308                           ;daq.c: 191:    R.done = 1;
 50309  00170E  0E01               	movlw	1
 50310  001710  6F35               	movwf	(_R+53)& (0+255),b	;volatile
 50311  001712  0012               	return	
 50312  001714                     l14803:
 50313                           
 50314                           ; BSR set to: 1
 50315                           ;daq.c: 197:  } while (!((R.scan_select >> R.scan_index) &0x1));
 50316  001714  0060  F4C8  F035   	movff	_R+50,btemp+11	;volatile
 50317  00171A  EE20  F133         	lfsr	2,_R+51	;volatile
 50318  00171E  006F FF78  F032    	movff	postinc2,btemp+8
 50319  001724  006F FF74  F033    	movff	postdec2,btemp+9
 50320  00172A  2A35               	incf	(btemp+11)^0,f,c
 50321  00172C  D003               	goto	u1392_44
 50322  00172E                     u1392_45:
 50323  00172E  90D8               	bcf	status,0,c
 50324  001730  3233               	rrcf	(btemp+9)^0,f,c
 50325  001732  3232               	rrcf	(btemp+8)^0,f,c
 50326  001734                     u1392_44:
 50327  001734  2E35               	decfsz	(btemp+11)^0,f,c
 50328  001736  D7FB               	goto	u1392_45
 50329  001738  A032               	btfss	(btemp+8)^0,0,c
 50330  00173A  D7E4               	goto	l14797
 50331                           
 50332                           ;daq.c: 198:  ADCC_DischargeSampleCapacitor();
 50333  00173C  ECA1  F017         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 50334                           
 50335                           ; BSR set to: 62
 50336                           ;daq.c: 199:  ADCC_StartConversion(R.scan_index & 0xf);
 50337  001740  0101               	movlb	1	; () banked
 50338  001742  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 50339  001744  0B0F               	andlw	15
 50340  001746  6EE6               	movwf	postinc1,c
 50341  001748  EC2C  F017         	call	_ADCC_StartConversion	;wreg free
 50342                           
 50343                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50344  00174C  0012               	return		;funcret
 50345  00174E                     __end_of_adc_int_t_handler:
 50346                           	opt callstack 0
 50347                           
 50348 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 50349 ;; Defined at:
 50350 ;;		line 339 in file "mcc_generated_files/adcc.c"
 50351 ;; Parameters:    Size  Location     Type
 50352 ;;		None
 50353 ;; Auto vars:     Size  Location     Type
 50354 ;;		None
 50355 ;; Return value:  Size  Location     Type
 50356 ;;                  1  [STACK] void 
 50357 ;; Registers used:
 50358 ;;		None
 50359 ;; Tracked objects:
 50360 ;;		On entry : 3F/0
 50361 ;;		On exit  : 0/0
 50362 ;;		Unchanged: 0/0
 50363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50368 ;;Total ram usage:        0 bytes
 50369 ;; Hardware stack levels used:    1
 50370 ;; This function calls:
 50371 ;;		Nothing
 50372 ;; This function is called by:
 50373 ;;		_ADCC_Initialize
 50374 ;;		_ADCC_ISR
 50375 ;;		_ADCC_ThresholdISR
 50376 ;; This function uses a reentrant model
 50377 ;;
 50378                           
 50379                           	psect	text212
 50380  002F94                     __ptext212:
 50381                           	opt callstack 0
 50382  002F94                     _ADCC_DefaultInterruptHandler:
 50383                           	opt callstack 4
 50384                           
 50385                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 50386                           
 50387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50388                           ;incstack = 0
 50389  002F94  0012               	return		;funcret
 50390  002F96                     __end_of_ADCC_DefaultInterruptHandler:
 50391                           	opt callstack 0
 50392                           
 50393 ;; *************** function _adc_int_handler *****************
 50394 ;; Defined at:
 50395 ;;		line 173 in file "daq.c"
 50396 ;; Parameters:    Size  Location     Type
 50397 ;;		None
 50398 ;; Auto vars:     Size  Location     Type
 50399 ;;		None
 50400 ;; Return value:  Size  Location     Type
 50401 ;;                  1  [STACK] void 
 50402 ;; Registers used:
 50403 ;;		None
 50404 ;; Tracked objects:
 50405 ;;		On entry : 3F/0
 50406 ;;		On exit  : 0/0
 50407 ;;		Unchanged: 0/0
 50408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50413 ;;Total ram usage:        0 bytes
 50414 ;; Hardware stack levels used:    1
 50415 ;; This function calls:
 50416 ;;		Nothing
 50417 ;; This function is called by:
 50418 ;;		_start_adc_scan
 50419 ;;		_ADCC_ISR
 50420 ;; This function uses a reentrant model
 50421 ;;
 50422                           
 50423                           	psect	text213
 50424  002F96                     __ptext213:
 50425                           	opt callstack 0
 50426  002F96                     _adc_int_handler:
 50427                           	opt callstack 4
 50428                           
 50429                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 50430                           
 50431                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50432                           ;incstack = 0
 50433  002F96  0012               	return		;funcret
 50434  002F98                     __end_of_adc_int_handler:
 50435                           	opt callstack 0
 50436                           
 50437 ;; *************** function _ADCC_ThresholdISR *****************
 50438 ;; Defined at:
 50439 ;;		line 327 in file "mcc_generated_files/adcc.c"
 50440 ;; Parameters:    Size  Location     Type
 50441 ;;		None
 50442 ;; Auto vars:     Size  Location     Type
 50443 ;;		None
 50444 ;; Return value:  Size  Location     Type
 50445 ;;                  1    wreg      void 
 50446 ;; Registers used:
 50447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 50448 ;; Tracked objects:
 50449 ;;		On entry : 0/0
 50450 ;;		On exit  : 0/0
 50451 ;;		Unchanged: 0/0
 50452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50455 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50456 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50457 ;;Total ram usage:        5 bytes
 50458 ;; Hardware stack levels used:    1
 50459 ;; Hardware stack levels required when called:    2
 50460 ;; This function calls:
 50461 ;;		Absolute function
 50462 ;;		_ADCC_DefaultInterruptHandler
 50463 ;;		_adc_int_t_handler
 50464 ;; This function is called by:
 50465 ;;		Interrupt level 2
 50466 ;; This function uses a non-reentrant model
 50467 ;;
 50468                           
 50469                           	psect	text214
 50470  001A84                     __ptext214:
 50471                           	opt callstack 0
 50472  001A84                     _ADCC_ThresholdISR:
 50473                           	opt callstack 3
 50474                           
 50475                           ;incstack = 0
 50476  001A84  0060  F0A8  F001   	movff	btemp,??_ADCC_ThresholdISR
 50477  001A8A  0060  F0AC  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 50478  001A90  0060  F0C8  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 50479  001A96  0060  F0CC  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 50480  001A9C  0060  F0D4  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 50481  001AA2  EE14  F32C         	lfsr	1,___inthi_sp
 50482                           
 50483                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 50484  001AA6  0139               	movlb	57	; () banked
 50485  001AA8  97A1               	bcf	161,3,b	;volatile
 50486                           
 50487                           ; BSR set to: 57
 50488                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 50489  001AAA  0100               	movlb	0	; () banked
 50490  001AAC  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 50491  001AAE  11A2               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 50492  001AB0  11A3               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 50493  001AB2  B4D8               	btfsc	status,2,c
 50494  001AB4  D00C               	goto	i2u1397_49
 50495                           
 50496                           ; BSR set to: 0
 50497                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 50498  001AB6  D801               	call	i2u1397_48
 50499  001AB8  D00A               	goto	i2u1397_49
 50500  001ABA                     i2u1397_48:
 50501  001ABA  0005               	push	
 50502  001ABC  6EFA               	movwf	pclath,c
 50503  001ABE  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 50504  001AC0  6EFD               	movwf	tosl,c
 50505  001AC2  51A2               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 50506  001AC4  6EFE               	movwf	tosh,c
 50507  001AC6  51A3               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 50508  001AC8  6EFF               	movwf	tosu,c
 50509  001ACA  50FA               	movf	pclath,w,c
 50510  001ACC  0012               	return		;indir
 50511  001ACE                     i2u1397_49:
 50512  001ACE  0060  F014  F035   	movff	??_ADCC_ThresholdISR+4,btemp+11
 50513  001AD4  0060  F010  F033   	movff	??_ADCC_ThresholdISR+3,btemp+9
 50514  001ADA  0060  F00C  F032   	movff	??_ADCC_ThresholdISR+2,btemp+8
 50515  001AE0  0060  F008  F02B   	movff	??_ADCC_ThresholdISR+1,btemp+1
 50516  001AE6  0060  F004  F02A   	movff	??_ADCC_ThresholdISR,btemp
 50517  001AEC  0011               	retfie		f
 50518  001AEE                     __end_of_ADCC_ThresholdISR:
 50519                           	opt callstack 0
 50520                           
 50521 ;; *************** function _UART1_rx_vect_isr *****************
 50522 ;; Defined at:
 50523 ;;		line 181 in file "mcc_generated_files/uart1.c"
 50524 ;; Parameters:    Size  Location     Type
 50525 ;;		None
 50526 ;; Auto vars:     Size  Location     Type
 50527 ;;		None
 50528 ;; Return value:  Size  Location     Type
 50529 ;;                  1    wreg      void 
 50530 ;; Registers used:
 50531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50532 ;; Tracked objects:
 50533 ;;		On entry : 0/0
 50534 ;;		On exit  : 0/0
 50535 ;;		Unchanged: 0/0
 50536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50541 ;;Total ram usage:        0 bytes
 50542 ;; Hardware stack levels used:    1
 50543 ;; Hardware stack levels required when called:    1
 50544 ;; This function calls:
 50545 ;;		Absolute function
 50546 ;;		_UART1_Receive_ISR
 50547 ;; This function is called by:
 50548 ;;		Interrupt level 2
 50549 ;; This function uses a non-reentrant model
 50550 ;;
 50551                           
 50552                           	psect	text215
 50553  002AE4                     __ptext215:
 50554                           	opt callstack 0
 50555  002AE4                     _UART1_rx_vect_isr:
 50556                           	opt callstack 4
 50557                           
 50558                           ;incstack = 0
 50559  002AE4  EE14  F32C         	lfsr	1,___inthi_sp
 50560                           
 50561                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 50562  002AE8  0100               	movlb	0	; () banked
 50563  002AEA  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 50564  002AEC  11A8               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 50565  002AEE  11A9               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 50566  002AF0  B4D8               	btfsc	status,2,c
 50567  002AF2  0011               	retfie		f
 50568                           
 50569                           ; BSR set to: 0
 50570                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 50571  002AF4  D801               	call	i2u1399_48
 50572  002AF6  0011               	retfie		f
 50573  002AF8                     i2u1399_48:
 50574  002AF8  0005               	push	
 50575  002AFA  6EFA               	movwf	pclath,c
 50576  002AFC  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 50577  002AFE  6EFD               	movwf	tosl,c
 50578  002B00  51A8               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 50579  002B02  6EFE               	movwf	tosh,c
 50580  002B04  51A9               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 50581  002B06  6EFF               	movwf	tosu,c
 50582  002B08  50FA               	movf	pclath,w,c
 50583  002B0A  0012               	return		;indir
 50584  002B0C                     __end_of_UART1_rx_vect_isr:
 50585                           	opt callstack 0
 50586                           
 50587 ;; *************** function _UART1_Receive_ISR *****************
 50588 ;; Defined at:
 50589 ;;		line 192 in file "mcc_generated_files/uart1.c"
 50590 ;; Parameters:    Size  Location     Type
 50591 ;;		None
 50592 ;; Auto vars:     Size  Location     Type
 50593 ;;		None
 50594 ;; Return value:  Size  Location     Type
 50595 ;;                  1  [STACK] void 
 50596 ;; Registers used:
 50597 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50598 ;; Tracked objects:
 50599 ;;		On entry : 3F/0
 50600 ;;		On exit  : 3F/0
 50601 ;;		Unchanged: 0/0
 50602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50607 ;;Total ram usage:        0 bytes
 50608 ;; Hardware stack levels used:    1
 50609 ;; This function calls:
 50610 ;;		Nothing
 50611 ;; This function is called by:
 50612 ;;		_UART1_Initialize
 50613 ;;		_UART1_rx_vect_isr
 50614 ;; This function uses a reentrant model
 50615 ;;
 50616                           
 50617                           	psect	text216
 50618  002C9A                     __ptext216:
 50619                           	opt callstack 0
 50620  002C9A                     _UART1_Receive_ISR:
 50621                           	opt callstack 4
 50622                           
 50623                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 50624                           
 50625                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50626                           ;incstack = 0
 50627  002C9A  0ED6               	movlw	low _uart1RxBuffer
 50628  002C9C  2457               	addwf	_uart1RxHead^0,w,c	;volatile
 50629  002C9E  6ED9               	movwf	fsr2l,c
 50630  002CA0  6ADA               	clrf	fsr2h,c
 50631  002CA2  0E02               	movlw	high _uart1RxBuffer
 50632  002CA4  22DA               	addwfc	fsr2h,f,c
 50633  002CA6  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 50634  002CAC  2A57               	incf	_uart1RxHead^0,f,c	;volatile
 50635                           
 50636                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 50637  002CAE  0E07               	movlw	7
 50638  002CB0  6457               	cpfsgt	_uart1RxHead^0,c
 50639  002CB2  D001               	goto	l14043
 50640                           
 50641                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 50642  002CB4  6A57               	clrf	_uart1RxHead^0,c	;volatile
 50643  002CB6                     l14043:
 50644                           
 50645                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 50646  002CB6  0100               	movlb	0	; () banked
 50647  002CB8  2BD0               	incf	_uart1RxCount& (0+255),f,b	;volatile
 50648                           
 50649                           ; BSR set to: 0
 50650                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50651  002CBA  0012               	return		;funcret
 50652  002CBC                     __end_of_UART1_Receive_ISR:
 50653                           	opt callstack 0
 50654                           
 50655 ;; *************** function _UART2_tx_vect_isr *****************
 50656 ;; Defined at:
 50657 ;;		line 195 in file "mcc_generated_files/uart2.c"
 50658 ;; Parameters:    Size  Location     Type
 50659 ;;		None
 50660 ;; Auto vars:     Size  Location     Type
 50661 ;;		None
 50662 ;; Return value:  Size  Location     Type
 50663 ;;                  1    wreg      void 
 50664 ;; Registers used:
 50665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50666 ;; Tracked objects:
 50667 ;;		On entry : 0/0
 50668 ;;		On exit  : 0/0
 50669 ;;		Unchanged: 0/0
 50670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50675 ;;Total ram usage:        0 bytes
 50676 ;; Hardware stack levels used:    1
 50677 ;; Hardware stack levels required when called:    1
 50678 ;; This function calls:
 50679 ;;		Absolute function
 50680 ;;		_UART2_Transmit_ISR
 50681 ;; This function is called by:
 50682 ;;		Interrupt level 2
 50683 ;; This function uses a non-reentrant model
 50684 ;;
 50685                           
 50686                           	psect	text217
 50687  002B0C                     __ptext217:
 50688                           	opt callstack 0
 50689  002B0C                     _UART2_tx_vect_isr:
 50690                           	opt callstack 4
 50691                           
 50692                           ; BSR set to: 0
 50693                           ;incstack = 0
 50694  002B0C  EE14  F32C         	lfsr	1,___inthi_sp
 50695                           
 50696                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 50697  002B10  0100               	movlb	0	; () banked
 50698  002B12  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 50699  002B14  11AB               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 50700  002B16  11AC               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 50701  002B18  B4D8               	btfsc	status,2,c
 50702  002B1A  0011               	retfie		f
 50703                           
 50704                           ; BSR set to: 0
 50705                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 50706  002B1C  D801               	call	i2u1401_48
 50707  002B1E  0011               	retfie		f
 50708  002B20                     i2u1401_48:
 50709  002B20  0005               	push	
 50710  002B22  6EFA               	movwf	pclath,c
 50711  002B24  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 50712  002B26  6EFD               	movwf	tosl,c
 50713  002B28  51AB               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 50714  002B2A  6EFE               	movwf	tosh,c
 50715  002B2C  51AC               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 50716  002B2E  6EFF               	movwf	tosu,c
 50717  002B30  50FA               	movf	pclath,w,c
 50718  002B32  0012               	return		;indir
 50719  002B34                     __end_of_UART2_tx_vect_isr:
 50720                           	opt callstack 0
 50721                           
 50722 ;; *************** function _UART2_Transmit_ISR *****************
 50723 ;; Defined at:
 50724 ;;		line 213 in file "mcc_generated_files/uart2.c"
 50725 ;; Parameters:    Size  Location     Type
 50726 ;;		None
 50727 ;; Auto vars:     Size  Location     Type
 50728 ;;		None
 50729 ;; Return value:  Size  Location     Type
 50730 ;;                  1  [STACK] void 
 50731 ;; Registers used:
 50732 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50733 ;; Tracked objects:
 50734 ;;		On entry : 3F/0
 50735 ;;		On exit  : 3B/39
 50736 ;;		Unchanged: 0/0
 50737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50742 ;;Total ram usage:        0 bytes
 50743 ;; Hardware stack levels used:    1
 50744 ;; This function calls:
 50745 ;;		Nothing
 50746 ;; This function is called by:
 50747 ;;		_UART2_Initialize
 50748 ;;		_UART2_tx_vect_isr
 50749 ;; This function uses a reentrant model
 50750 ;;
 50751                           
 50752                           	psect	text218
 50753  0028AC                     __ptext218:
 50754                           	opt callstack 0
 50755  0028AC                     _UART2_Transmit_ISR:
 50756                           	opt callstack 4
 50757                           
 50758                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 50759                           
 50760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50761                           ;incstack = 0
 50762  0028AC  0E40               	movlw	64
 50763  0028AE  6055               	cpfslt	_uart2TxBufferRemaining^0,c
 50764  0028B0  D010               	goto	l675
 50765                           
 50766                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 50767  0028B2  0E00               	movlw	low _uart2TxBuffer
 50768  0028B4  2456               	addwf	_uart2TxTail^0,w,c	;volatile
 50769  0028B6  6ED9               	movwf	fsr2l,c
 50770  0028B8  6ADA               	clrf	fsr2h,c
 50771  0028BA  0E04               	movlw	high _uart2TxBuffer
 50772  0028BC  22DA               	addwfc	fsr2h,f,c
 50773  0028BE  50DF               	movf	indf2,w,c
 50774  0028C0  013D               	movlb	61	; () banked
 50775  0028C2  6FD2               	movwf	210,b	;volatile
 50776                           
 50777                           ; BSR set to: 61
 50778  0028C4  2A56               	incf	_uart2TxTail^0,f,c	;volatile
 50779                           
 50780                           ; BSR set to: 61
 50781                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 50782  0028C6  0E3F               	movlw	63
 50783  0028C8  6456               	cpfsgt	_uart2TxTail^0,c
 50784  0028CA  D001               	goto	l14055
 50785                           
 50786                           ; BSR set to: 61
 50787                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 50788  0028CC  6A56               	clrf	_uart2TxTail^0,c	;volatile
 50789  0028CE                     l14055:
 50790                           
 50791                           ; BSR set to: 61
 50792                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 50793  0028CE  2A55               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 50794                           
 50795                           ;mcc_generated_files/uart2.c: 224:     }
 50796  0028D0  0012               	return	
 50797  0028D2                     l675:
 50798                           
 50799                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 50800  0028D2  0139               	movlb	57	; () banked
 50801  0028D4  9796               	bcf	150,3,b	;volatile
 50802                           
 50803                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 50804  0028D6  0012               	return		;funcret
 50805  0028D8                     __end_of_UART2_Transmit_ISR:
 50806                           	opt callstack 0
 50807                           
 50808 ;; *************** function _UART2_rx_vect_isr *****************
 50809 ;; Defined at:
 50810 ;;		line 203 in file "mcc_generated_files/uart2.c"
 50811 ;; Parameters:    Size  Location     Type
 50812 ;;		None
 50813 ;; Auto vars:     Size  Location     Type
 50814 ;;		None
 50815 ;; Return value:  Size  Location     Type
 50816 ;;                  1    wreg      void 
 50817 ;; Registers used:
 50818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50819 ;; Tracked objects:
 50820 ;;		On entry : 0/0
 50821 ;;		On exit  : 0/0
 50822 ;;		Unchanged: 0/0
 50823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50828 ;;Total ram usage:        0 bytes
 50829 ;; Hardware stack levels used:    1
 50830 ;; Hardware stack levels required when called:    1
 50831 ;; This function calls:
 50832 ;;		Absolute function
 50833 ;;		_UART2_Receive_ISR
 50834 ;; This function is called by:
 50835 ;;		Interrupt level 2
 50836 ;; This function uses a non-reentrant model
 50837 ;;
 50838                           
 50839                           	psect	text219
 50840  002B34                     __ptext219:
 50841                           	opt callstack 0
 50842  002B34                     _UART2_rx_vect_isr:
 50843                           	opt callstack 4
 50844                           
 50845                           ;incstack = 0
 50846  002B34  EE14  F32C         	lfsr	1,___inthi_sp
 50847                           
 50848                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 50849  002B38  0100               	movlb	0	; () banked
 50850  002B3A  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 50851  002B3C  11AE               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 50852  002B3E  11AF               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 50853  002B40  B4D8               	btfsc	status,2,c
 50854  002B42  0011               	retfie		f
 50855                           
 50856                           ; BSR set to: 0
 50857                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 50858  002B44  D801               	call	i2u1403_48
 50859  002B46  0011               	retfie		f
 50860  002B48                     i2u1403_48:
 50861  002B48  0005               	push	
 50862  002B4A  6EFA               	movwf	pclath,c
 50863  002B4C  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 50864  002B4E  6EFD               	movwf	tosl,c
 50865  002B50  51AE               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 50866  002B52  6EFE               	movwf	tosh,c
 50867  002B54  51AF               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 50868  002B56  6EFF               	movwf	tosu,c
 50869  002B58  50FA               	movf	pclath,w,c
 50870  002B5A  0012               	return		;indir
 50871  002B5C                     __end_of_UART2_rx_vect_isr:
 50872                           	opt callstack 0
 50873                           
 50874 ;; *************** function _UART2_Receive_ISR *****************
 50875 ;; Defined at:
 50876 ;;		line 233 in file "mcc_generated_files/uart2.c"
 50877 ;; Parameters:    Size  Location     Type
 50878 ;;		None
 50879 ;; Auto vars:     Size  Location     Type
 50880 ;;		None
 50881 ;; Return value:  Size  Location     Type
 50882 ;;                  1  [STACK] void 
 50883 ;; Registers used:
 50884 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50885 ;; Tracked objects:
 50886 ;;		On entry : 3F/0
 50887 ;;		On exit  : 3F/0
 50888 ;;		Unchanged: 0/0
 50889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50894 ;;Total ram usage:        0 bytes
 50895 ;; Hardware stack levels used:    1
 50896 ;; This function calls:
 50897 ;;		Nothing
 50898 ;; This function is called by:
 50899 ;;		_UART2_Initialize
 50900 ;;		_UART2_rx_vect_isr
 50901 ;; This function uses a reentrant model
 50902 ;;
 50903                           
 50904                           	psect	text220
 50905  002CDC                     __ptext220:
 50906                           	opt callstack 0
 50907  002CDC                     _UART2_Receive_ISR:
 50908                           	opt callstack 4
 50909                           
 50910                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 50911                           
 50912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50913                           ;incstack = 0
 50914  002CDC  0E00               	movlw	low _uart2RxBuffer
 50915  002CDE  2454               	addwf	_uart2RxHead^0,w,c	;volatile
 50916  002CE0  6ED9               	movwf	fsr2l,c
 50917  002CE2  6ADA               	clrf	fsr2h,c
 50918  002CE4  0E06               	movlw	high _uart2RxBuffer
 50919  002CE6  22DA               	addwfc	fsr2h,f,c
 50920  002CE8  006F F743 FFDF     	movff	15824,indf2	;volatile
 50921  002CEE  2A54               	incf	_uart2RxHead^0,f,c	;volatile
 50922                           
 50923                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 50924  002CF0  2854               	incf	_uart2RxHead^0,w,c
 50925  002CF2  B4D8               	btfsc	status,2,c
 50926                           
 50927                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 50928  002CF4  6A54               	clrf	_uart2RxHead^0,c	;volatile
 50929                           
 50930                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 50931  002CF6  0100               	movlb	0	; () banked
 50932  002CF8  2BCD               	incf	_uart2RxCount& (0+255),f,b	;volatile
 50933                           
 50934                           ; BSR set to: 0
 50935                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50936  002CFA  0012               	return		;funcret
 50937  002CFC                     __end_of_UART2_Receive_ISR:
 50938                           	opt callstack 0
 50939                           
 50940 ;; *************** function _TMR6_ISR *****************
 50941 ;; Defined at:
 50942 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 50943 ;; Parameters:    Size  Location     Type
 50944 ;;		None
 50945 ;; Auto vars:     Size  Location     Type
 50946 ;;		None
 50947 ;; Return value:  Size  Location     Type
 50948 ;;                  1    wreg      void 
 50949 ;; Registers used:
 50950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 50951 ;; Tracked objects:
 50952 ;;		On entry : 0/0
 50953 ;;		On exit  : 0/0
 50954 ;;		Unchanged: 0/0
 50955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50958 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50959 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50960 ;;Total ram usage:        1 bytes
 50961 ;; Hardware stack levels used:    1
 50962 ;; Hardware stack levels required when called:    2
 50963 ;; This function calls:
 50964 ;;		_TMR6_CallBack
 50965 ;; This function is called by:
 50966 ;;		Interrupt level 2
 50967 ;; This function uses a non-reentrant model
 50968 ;;
 50969                           
 50970                           	psect	text221
 50971  002D90                     __ptext221:
 50972                           	opt callstack 0
 50973  002D90                     _TMR6_ISR:
 50974                           	opt callstack 3
 50975                           
 50976                           ; BSR set to: 0
 50977                           ;incstack = 0
 50978  002D90  0060  F0A8  F006   	movff	btemp,??_TMR6_ISR
 50979  002D96  EE14  F32C         	lfsr	1,___inthi_sp
 50980                           
 50981                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 50982  002D9A  0139               	movlb	57	; () banked
 50983  002D9C  91A9               	bcf	169,0,b	;volatile
 50984                           
 50985                           ; BSR set to: 57
 50986                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 50987  002D9E  EC08  F016         	call	_TMR6_CallBack	;wreg free
 50988  002DA2  0060  F018  F02A   	movff	??_TMR6_ISR,btemp
 50989  002DA8  0011               	retfie		f
 50990  002DAA                     __end_of_TMR6_ISR:
 50991                           	opt callstack 0
 50992                           
 50993 ;; *************** function _TMR6_CallBack *****************
 50994 ;; Defined at:
 50995 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 50996 ;; Parameters:    Size  Location     Type
 50997 ;;		None
 50998 ;; Auto vars:     Size  Location     Type
 50999 ;;		None
 51000 ;; Return value:  Size  Location     Type
 51001 ;;                  1  [STACK] void 
 51002 ;; Registers used:
 51003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 51004 ;; Tracked objects:
 51005 ;;		On entry : 3F/39
 51006 ;;		On exit  : 0/0
 51007 ;;		Unchanged: 0/0
 51008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51013 ;;Total ram usage:        0 bytes
 51014 ;; Hardware stack levels used:    1
 51015 ;; Hardware stack levels required when called:    1
 51016 ;; This function calls:
 51017 ;;		Absolute function
 51018 ;;		_TMR6_DefaultInterruptHandler
 51019 ;; This function is called by:
 51020 ;;		_TMR6_ISR
 51021 ;; This function uses a reentrant model
 51022 ;;
 51023                           
 51024                           	psect	text222
 51025  002C10                     __ptext222:
 51026                           	opt callstack 0
 51027  002C10                     _TMR6_CallBack:
 51028                           	opt callstack 3
 51029                           
 51030                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 51031                           
 51032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 51033                           ;incstack = 0
 51034  002C10  0100               	movlb	0	; () banked
 51035  002C12  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 51036  002C14  119F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 51037  002C16  11A0               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 51038  002C18  B4D8               	btfsc	status,2,c
 51039  002C1A  0012               	return	
 51040                           
 51041                           ; BSR set to: 0
 51042                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 51043  002C1C  D801               	call	u1332_48
 51044  002C1E  0012               	return	
 51045  002C20                     u1332_48:
 51046  002C20  0005               	push	
 51047  002C22  6EFA               	movwf	pclath,c
 51048  002C24  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 51049  002C26  6EFD               	movwf	tosl,c
 51050  002C28  519F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 51051  002C2A  6EFE               	movwf	tosh,c
 51052  002C2C  51A0               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 51053  002C2E  6EFF               	movwf	tosu,c
 51054  002C30  50FA               	movf	pclath,w,c
 51055  002C32  0012               	return		;indir
 51056  002C34                     __end_of_TMR6_CallBack:
 51057                           	opt callstack 0
 51058                           
 51059 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 51060 ;; Defined at:
 51061 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 51062 ;; Parameters:    Size  Location     Type
 51063 ;;		None
 51064 ;; Auto vars:     Size  Location     Type
 51065 ;;  i               1  [STACK] unsigned char 
 51066 ;; Return value:  Size  Location     Type
 51067 ;;                  1  [STACK] void 
 51068 ;; Registers used:
 51069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 51070 ;; Tracked objects:
 51071 ;;		On entry : 3F/0
 51072 ;;		On exit  : 0/0
 51073 ;;		Unchanged: 0/0
 51074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51079 ;;Total ram usage:        0 bytes
 51080 ;; Hardware stack levels used:    1
 51081 ;; This function calls:
 51082 ;;		Nothing
 51083 ;; This function is called by:
 51084 ;;		_TMR6_Initialize
 51085 ;;		_TMR6_CallBack
 51086 ;; This function uses a reentrant model
 51087 ;;
 51088                           
 51089                           	psect	text223
 51090  002110                     __ptext223:
 51091                           	opt callstack 0
 51092  002110                     _TMR6_DefaultInterruptHandler:
 51093                           	opt callstack 0
 51094                           
 51095                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 51096  002110  52E6               	movf	postinc1,f,c
 51097                           
 51098                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 51099                           ;stkvar	_i @ sp[(-1)+0]
 51100                           
 51101                           ;incstack = 0
 51102  002112  0EFF               	movlw	-1
 51103  002114  6AE3               	clrf	plusw1,c
 51104  002116                     l13421:
 51105                           
 51106                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 51107                           ;stkvar	_i @ sp[(-1)+0]
 51108  002116  0EFF               	movlw	-1
 51109  002118  50E3               	movf	plusw1,w,c
 51110  00211A  0D02               	mullw	2
 51111  00211C  0EBC               	movlw	low _tickCount
 51112  00211E  24F3               	addwf	243,w,c
 51113  002120  6ED9               	movwf	fsr2l,c
 51114  002122  0E02               	movlw	high _tickCount
 51115  002124  20F4               	addwfc	prodh,w,c
 51116  002126  6EDA               	movwf	fsr2h,c
 51117  002128  50DE               	movf	postinc2,w,c
 51118  00212A  10DE               	iorwf	postinc2,w,c
 51119  00212C  B4D8               	btfsc	status,2,c
 51120  00212E  D00C               	goto	l13425
 51121                           
 51122                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 51123                           ;stkvar	_i @ sp[(-1)+0]
 51124  002130  0EFF               	movlw	-1
 51125  002132  50E3               	movf	plusw1,w,c
 51126  002134  0D02               	mullw	2
 51127  002136  0EBC               	movlw	low _tickCount
 51128  002138  24F3               	addwf	243,w,c
 51129  00213A  6ED9               	movwf	fsr2l,c
 51130  00213C  0E02               	movlw	high _tickCount
 51131  00213E  20F4               	addwfc	prodh,w,c
 51132  002140  6EDA               	movwf	fsr2h,c
 51133  002142  06DE               	decf	postinc2,f,c
 51134  002144  0E00               	movlw	0
 51135  002146  5ADD               	subwfb	postdec2,f,c
 51136  002148                     l13425:
 51137                           
 51138                           ;mcc_generated_files/tmr6.c: 207:  }
 51139                           ;stkvar	_i @ sp[(-1)+0]
 51140  002148  0EFF               	movlw	-1
 51141  00214A  2AE3               	incf	plusw1,f,c
 51142                           
 51143                           ;stkvar	_i @ sp[(-1)+0]
 51144  00214C  0EFF               	movlw	-1
 51145  00214E  006F FF8C  F02A    	movff	plusw1,btemp
 51146  002154  0E0C               	movlw	12
 51147  002156  642A               	cpfsgt	btemp^0,c
 51148  002158  D7DE               	goto	l13421
 51149                           
 51150                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 51151  00215A  52E5               	movf	postdec1,f,c
 51152  00215C  0012               	return		;funcret
 51153  00215E                     __end_of_TMR6_DefaultInterruptHandler:
 51154                           	opt callstack 0
 51155                           
 51156 ;; *************** function _DMA1_DMASCNT_ISR *****************
 51157 ;; Defined at:
 51158 ;;		line 126 in file "mcc_generated_files/dma1.c"
 51159 ;; Parameters:    Size  Location     Type
 51160 ;;		None
 51161 ;; Auto vars:     Size  Location     Type
 51162 ;;		None
 51163 ;; Return value:  Size  Location     Type
 51164 ;;                  1    wreg      void 
 51165 ;; Registers used:
 51166 ;;		None
 51167 ;; Tracked objects:
 51168 ;;		On entry : 0/0
 51169 ;;		On exit  : 3F/0
 51170 ;;		Unchanged: 0/0
 51171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51176 ;;Total ram usage:        0 bytes
 51177 ;; Hardware stack levels used:    1
 51178 ;; This function calls:
 51179 ;;		Nothing
 51180 ;; This function is called by:
 51181 ;;		Interrupt level 2
 51182 ;; This function uses a non-reentrant model
 51183 ;;
 51184                           
 51185                           	psect	text224
 51186  002EF4                     __ptext224:
 51187                           	opt callstack 0
 51188  002EF4                     _DMA1_DMASCNT_ISR:
 51189                           	opt callstack 5
 51190                           
 51191                           ;incstack = 0
 51192  002EF4  EE14  F32C         	lfsr	1,___inthi_sp
 51193                           
 51194                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 51195  002EF8  0139               	movlb	57	; () banked
 51196  002EFA  91A2               	bcf	162,0,b	;volatile
 51197                           
 51198                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 51199  002EFC  0100               	movlb	0	; () banked
 51200  002EFE  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 51201                           
 51202                           ; BSR set to: 0
 51203  002F00  0011               	retfie		f
 51204  002F02                     __end_of_DMA1_DMASCNT_ISR:
 51205                           	opt callstack 0
 51206                           
 51207 ;; *************** function _DMA1_DMADCNT_ISR *****************
 51208 ;; Defined at:
 51209 ;;		line 133 in file "mcc_generated_files/dma1.c"
 51210 ;; Parameters:    Size  Location     Type
 51211 ;;		None
 51212 ;; Auto vars:     Size  Location     Type
 51213 ;;		None
 51214 ;; Return value:  Size  Location     Type
 51215 ;;                  1    wreg      void 
 51216 ;; Registers used:
 51217 ;;		None
 51218 ;; Tracked objects:
 51219 ;;		On entry : 0/0
 51220 ;;		On exit  : 3F/39
 51221 ;;		Unchanged: 0/0
 51222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51227 ;;Total ram usage:        0 bytes
 51228 ;; Hardware stack levels used:    1
 51229 ;; This function calls:
 51230 ;;		Nothing
 51231 ;; This function is called by:
 51232 ;;		Interrupt level 2
 51233 ;; This function uses a non-reentrant model
 51234 ;;
 51235                           
 51236                           	psect	text225
 51237  002F18                     __ptext225:
 51238                           	opt callstack 0
 51239  002F18                     _DMA1_DMADCNT_ISR:
 51240                           	opt callstack 5
 51241                           
 51242                           ; BSR set to: 0
 51243                           ;incstack = 0
 51244  002F18  EE14  F32C         	lfsr	1,___inthi_sp
 51245                           
 51246                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 51247  002F1C  0139               	movlb	57	; () banked
 51248  002F1E  93A2               	bcf	162,1,b	;volatile
 51249                           
 51250                           ; BSR set to: 57
 51251  002F20  0011               	retfie		f
 51252  002F22                     __end_of_DMA1_DMADCNT_ISR:
 51253                           	opt callstack 0
 51254                           
 51255 ;; *************** function _DMA1_DMAA_ISR *****************
 51256 ;; Defined at:
 51257 ;;		line 143 in file "mcc_generated_files/dma1.c"
 51258 ;; Parameters:    Size  Location     Type
 51259 ;;		None
 51260 ;; Auto vars:     Size  Location     Type
 51261 ;;		None
 51262 ;; Return value:  Size  Location     Type
 51263 ;;                  1    wreg      void 
 51264 ;; Registers used:
 51265 ;;		None
 51266 ;; Tracked objects:
 51267 ;;		On entry : 0/0
 51268 ;;		On exit  : 3F/39
 51269 ;;		Unchanged: 0/0
 51270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51275 ;;Total ram usage:        0 bytes
 51276 ;; Hardware stack levels used:    1
 51277 ;; This function calls:
 51278 ;;		Nothing
 51279 ;; This function is called by:
 51280 ;;		Interrupt level 2
 51281 ;; This function uses a non-reentrant model
 51282 ;;
 51283                           
 51284                           	psect	text226
 51285  002F24                     __ptext226:
 51286                           	opt callstack 0
 51287  002F24                     _DMA1_DMAA_ISR:
 51288                           	opt callstack 5
 51289                           
 51290                           ; BSR set to: 57
 51291                           ;incstack = 0
 51292  002F24  EE14  F32C         	lfsr	1,___inthi_sp
 51293                           
 51294                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 51295  002F28  0139               	movlb	57	; () banked
 51296  002F2A  97A2               	bcf	162,3,b	;volatile
 51297                           
 51298                           ; BSR set to: 57
 51299  002F2C  0011               	retfie		f
 51300  002F2E                     __end_of_DMA1_DMAA_ISR:
 51301                           	opt callstack 0
 51302                           
 51303 ;; *************** function _DMA1_DMAOR_ISR *****************
 51304 ;; Defined at:
 51305 ;;		line 154 in file "mcc_generated_files/dma1.c"
 51306 ;; Parameters:    Size  Location     Type
 51307 ;;		None
 51308 ;; Auto vars:     Size  Location     Type
 51309 ;;		None
 51310 ;; Return value:  Size  Location     Type
 51311 ;;                  1    wreg      void 
 51312 ;; Registers used:
 51313 ;;		None
 51314 ;; Tracked objects:
 51315 ;;		On entry : 0/0
 51316 ;;		On exit  : 3F/39
 51317 ;;		Unchanged: 0/0
 51318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51323 ;;Total ram usage:        0 bytes
 51324 ;; Hardware stack levels used:    1
 51325 ;; This function calls:
 51326 ;;		Nothing
 51327 ;; This function is called by:
 51328 ;;		Interrupt level 2
 51329 ;; This function uses a non-reentrant model
 51330 ;;
 51331                           
 51332                           	psect	text227
 51333  002F30                     __ptext227:
 51334                           	opt callstack 0
 51335  002F30                     _DMA1_DMAOR_ISR:
 51336                           	opt callstack 5
 51337                           
 51338                           ; BSR set to: 57
 51339                           ;incstack = 0
 51340  002F30  EE14  F32C         	lfsr	1,___inthi_sp
 51341                           
 51342                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 51343  002F34  0139               	movlb	57	; () banked
 51344  002F36  95A2               	bcf	162,2,b	;volatile
 51345                           
 51346                           ; BSR set to: 57
 51347  002F38  0011               	retfie		f
 51348  002F3A                     __end_of_DMA1_DMAOR_ISR:
 51349                           	opt callstack 0
 51350                           
 51351                           ;
 51352                           ; Interrupt Vector Table @ 0x8
 51353                           ;
 51354                           
 51355                           	psect	ivt0x8
 51356  000008                     __pivt0x8:
 51357                           	opt callstack 0
 51358  000008                     ivt0x8_base:
 51359                           	opt callstack 0
 51360                           
 51361                           ; Vector 0 : SWINT
 51362  000008  0BE2               	dw	_Default_ISR shr (0+2)
 51363                           
 51364                           ; Vector 1 : HLVD
 51365  00000A  0BE2               	dw	_Default_ISR shr (0+2)
 51366                           
 51367                           ; Vector 2 : OSF
 51368  00000C  0BE2               	dw	_Default_ISR shr (0+2)
 51369                           
 51370                           ; Vector 3 : CSW
 51371  00000E  0BE2               	dw	_Default_ISR shr (0+2)
 51372                           
 51373                           ; Vector 4 : NVM
 51374  000010  0BE2               	dw	_Default_ISR shr (0+2)
 51375                           
 51376                           ; Vector 5 : SCAN
 51377  000012  0BE2               	dw	_Default_ISR shr (0+2)
 51378                           
 51379                           ; Vector 6 : CRC
 51380  000014  0BE2               	dw	_Default_ISR shr (0+2)
 51381                           
 51382                           ; Vector 7 : IOC
 51383  000016  0BE2               	dw	_Default_ISR shr (0+2)
 51384                           
 51385                           ; Vector 8 : INT0
 51386  000018  0BB9               	dw	_INT0_ISR shr (0+2)
 51387                           
 51388                           ; Vector 9 : ZCD
 51389  00001A  0BE2               	dw	_Default_ISR shr (0+2)
 51390                           
 51391                           ; Vector 10 : AD
 51392  00001C  0A20               	dw	_ADCC_ISR shr (0+2)
 51393                           
 51394                           ; Vector 11 : ADT
 51395  00001E  06A1               	dw	_ADCC_ThresholdISR shr (0+2)
 51396                           
 51397                           ; Vector 12 : CMP1
 51398  000020  0BE2               	dw	_Default_ISR shr (0+2)
 51399                           
 51400                           ; Vector 13 : SMT1
 51401  000022  0BE2               	dw	_Default_ISR shr (0+2)
 51402                           
 51403                           ; Vector 14 : SMT1PRA
 51404  000024  0BE2               	dw	_Default_ISR shr (0+2)
 51405                           
 51406                           ; Vector 15 : SMT1PRW
 51407  000026  0BE2               	dw	_Default_ISR shr (0+2)
 51408                           
 51409                           ; Vector 16 : DMA1SCNT
 51410  000028  0BBD               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 51411                           
 51412                           ; Vector 17 : DMA1DCNT
 51413  00002A  0BC6               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 51414                           
 51415                           ; Vector 18 : DMA1OR
 51416  00002C  0BCC               	dw	_DMA1_DMAOR_ISR shr (0+2)
 51417                           
 51418                           ; Vector 19 : DMA1A
 51419  00002E  0BC9               	dw	_DMA1_DMAA_ISR shr (0+2)
 51420                           
 51421                           ; Vector 20 : SPI1RX
 51422  000030  0BE2               	dw	_Default_ISR shr (0+2)
 51423                           
 51424                           ; Vector 21 : SPI1TX
 51425  000032  0BE2               	dw	_Default_ISR shr (0+2)
 51426                           
 51427                           ; Vector 22 : SPI1
 51428  000034  0BE2               	dw	_Default_ISR shr (0+2)
 51429                           
 51430                           ; Vector 23 : I2C1RX
 51431  000036  0BE2               	dw	_Default_ISR shr (0+2)
 51432                           
 51433                           ; Vector 24 : I2C1TX
 51434  000038  0BE2               	dw	_Default_ISR shr (0+2)
 51435                           
 51436                           ; Vector 25 : I2C1
 51437  00003A  0BE2               	dw	_Default_ISR shr (0+2)
 51438                           
 51439                           ; Vector 26 : I2C1E
 51440  00003C  0BE2               	dw	_Default_ISR shr (0+2)
 51441                           
 51442                           ; Vector 27 : U1RX
 51443  00003E  0AB9               	dw	_UART1_rx_vect_isr shr (0+2)
 51444                           
 51445                           ; Vector 28 : U1TX
 51446  000040  0BE2               	dw	_Default_ISR shr (0+2)
 51447                           
 51448                           ; Vector 29 : U1E
 51449  000042  0BE2               	dw	_Default_ISR shr (0+2)
 51450                           
 51451                           ; Vector 30 : U1
 51452  000044  0BE2               	dw	_Default_ISR shr (0+2)
 51453                           
 51454                           ; Vector 31 : TMR0
 51455  000046  0BE2               	dw	_Default_ISR shr (0+2)
 51456                           
 51457                           ; Vector 32 : TMR1
 51458  000048  0BE2               	dw	_Default_ISR shr (0+2)
 51459                           
 51460                           ; Vector 33 : TMR1G
 51461  00004A  0BE2               	dw	_Default_ISR shr (0+2)
 51462                           
 51463                           ; Vector 34 : TMR2
 51464  00004C  0BE2               	dw	_Default_ISR shr (0+2)
 51465                           
 51466                           ; Vector 35 : CCP1
 51467  00004E  0BE2               	dw	_Default_ISR shr (0+2)
 51468                           
 51469                           ; Vector 36 : Undefined
 51470  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 51471                           
 51472                           ; Vector 37 : NCO1
 51473  000052  0BE2               	dw	_Default_ISR shr (0+2)
 51474                           
 51475                           ; Vector 38 : CWG1
 51476  000054  0BE2               	dw	_Default_ISR shr (0+2)
 51477                           
 51478                           ; Vector 39 : CLC1
 51479  000056  0BE2               	dw	_Default_ISR shr (0+2)
 51480                           
 51481                           ; Vector 40 : INT1
 51482  000058  0935               	dw	_INT1_ISR shr (0+2)
 51483                           
 51484                           ; Vector 41 : CMP2
 51485  00005A  0BE2               	dw	_Default_ISR shr (0+2)
 51486                           
 51487                           ; Vector 42 : DMA2SCNT
 51488  00005C  0BE2               	dw	_Default_ISR shr (0+2)
 51489                           
 51490                           ; Vector 43 : DMA2DCNT
 51491  00005E  0BE2               	dw	_Default_ISR shr (0+2)
 51492                           
 51493                           ; Vector 44 : DMA2OR
 51494  000060  0BE2               	dw	_Default_ISR shr (0+2)
 51495                           
 51496                           ; Vector 45 : DMA2A
 51497  000062  0BE2               	dw	_Default_ISR shr (0+2)
 51498                           
 51499                           ; Vector 46 : I2C2RX
 51500  000064  0BE2               	dw	_Default_ISR shr (0+2)
 51501                           
 51502                           ; Vector 47 : I2C2TX
 51503  000066  0BE2               	dw	_Default_ISR shr (0+2)
 51504                           
 51505                           ; Vector 48 : I2C2
 51506  000068  0BE2               	dw	_Default_ISR shr (0+2)
 51507                           
 51508                           ; Vector 49 : I2C2E
 51509  00006A  0BE2               	dw	_Default_ISR shr (0+2)
 51510                           
 51511                           ; Vector 50 : U2RX
 51512  00006C  0ACD               	dw	_UART2_rx_vect_isr shr (0+2)
 51513                           
 51514                           ; Vector 51 : U2TX
 51515  00006E  0AC3               	dw	_UART2_tx_vect_isr shr (0+2)
 51516                           
 51517                           ; Vector 52 : U2E
 51518  000070  0BE2               	dw	_Default_ISR shr (0+2)
 51519                           
 51520                           ; Vector 53 : U2
 51521  000072  0BE2               	dw	_Default_ISR shr (0+2)
 51522                           
 51523                           ; Vector 54 : TMR3
 51524  000074  7BAD               	dw	_TMR3_ISR shr (0+2)
 51525                           
 51526                           ; Vector 55 : TMR3G
 51527  000076  0BE2               	dw	_Default_ISR shr (0+2)
 51528                           
 51529                           ; Vector 56 : TMR4
 51530  000078  0BE2               	dw	_Default_ISR shr (0+2)
 51531                           
 51532                           ; Vector 57 : CCP2
 51533  00007A  0BE2               	dw	_Default_ISR shr (0+2)
 51534                           
 51535                           ; Vector 58 : Undefined
 51536  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 51537                           
 51538                           ; Vector 59 : CWG2
 51539  00007E  0BE2               	dw	_Default_ISR shr (0+2)
 51540                           
 51541                           ; Vector 60 : CLC2
 51542  000080  0BE2               	dw	_Default_ISR shr (0+2)
 51543                           
 51544                           ; Vector 61 : INT2
 51545  000082  0BE2               	dw	_Default_ISR shr (0+2)
 51546                           
 51547                           ; Vector 62 : Undefined
 51548  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 51549                           
 51550                           ; Vector 63 : Undefined
 51551  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 51552                           
 51553                           ; Vector 64 : Undefined
 51554  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 51555                           
 51556                           ; Vector 65 : Undefined
 51557  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 51558                           
 51559                           ; Vector 66 : Undefined
 51560  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 51561                           
 51562                           ; Vector 67 : Undefined
 51563  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 51564                           
 51565                           ; Vector 68 : Undefined
 51566  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 51567                           
 51568                           ; Vector 69 : Undefined
 51569  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 51570                           
 51571                           ; Vector 70 : TMR5
 51572  000094  77EA               	dw	_TMR5_ISR shr (0+2)
 51573                           
 51574                           ; Vector 71 : TMR5G
 51575  000096  0BE2               	dw	_Default_ISR shr (0+2)
 51576                           
 51577                           ; Vector 72 : TMR6
 51578  000098  0B64               	dw	_TMR6_ISR shr (0+2)
 51579                           
 51580                           ; Vector 73 : CCP3
 51581  00009A  0BE2               	dw	_Default_ISR shr (0+2)
 51582                           
 51583                           ; Vector 74 : CWG3
 51584  00009C  0BE2               	dw	_Default_ISR shr (0+2)
 51585                           
 51586                           ; Vector 75 : CLC3
 51587  00009E  0BE2               	dw	_Default_ISR shr (0+2)
 51588                           
 51589                           ; Vector 76 : Undefined
 51590  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 51591                           
 51592                           ; Vector 77 : Undefined
 51593  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 51594                           
 51595                           ; Vector 78 : Undefined
 51596  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 51597                           
 51598                           ; Vector 79 : Undefined
 51599  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 51600                           
 51601                           ; Vector 80 : CCP4
 51602  0000A8  0BE2               	dw	_Default_ISR shr (0+2)
 51603                           
 51604                           ; Vector 81 : CLC4
 51605  0000AA  0BE2               	dw	_Default_ISR shr (0+2)
 51606  0000AC                     ivt0x8_undefint:
 51607                           	opt callstack 0
 51608  0000AC  00FF               	reset	
 51609                           
 51610                           	psect	text228
 51611  000000                     __ptext228:
 51612                           	opt callstack 0
 51613                           
 51614                           	psect	rparam
 51615  0000                     
 51616                           	psect	temp
 51617  00002A                     btemp:
 51618                           	opt callstack 0
 51619  00002A                     	ds	32
 51620  0000                     wtemp0	set	btemp
 51621  0000                     wtemp1	set	btemp+2
 51622  0000                     wtemp2	set	btemp+4
 51623  0000                     wtemp3	set	btemp+6
 51624  0000                     wtemp4	set	btemp+8
 51625  0000                     wtemp5	set	btemp+10
 51626  0000                     wtemp8	set	btemp+1
 51627  0000                     ttemp0	set	btemp
 51628  0000                     ttemp1	set	btemp+3
 51629  0000                     ttemp2	set	btemp+6
 51630  0000                     ttemp3	set	btemp+9
 51631  0000                     ttemp5	set	btemp+1
 51632  0000                     ttemp6	set	btemp+4
 51633  0000                     ttemp7	set	btemp+8
 51634  0000                     ltemp0	set	btemp
 51635  0000                     ltemp1	set	btemp+4
 51636  0000                     ltemp2	set	btemp+8
 51637  0000                     lltemp0	set	btemp
 51638  0000                     lltemp1	set	btemp+8
 51639  0000                     lltemp2	set	btemp+16
 51640  0000                     lltemp3	set	btemp+24
 51641                           tosu	equ	0x3FFF
 51642                           tosh	equ	0x3FFE
 51643                           tosl	equ	0x3FFD
 51644                           stkptr	equ	0x3FFC
 51645                           pclatu	equ	0x3FFB
 51646                           pclath	equ	0x3FFA
 51647                           pcl	equ	0x3FF9
 51648                           tblptru	equ	0x3FF8
 51649                           tblptrh	equ	0x3FF7
 51650                           tblptrl	equ	0x3FF6
 51651                           tablat	equ	0x3FF5
 51652                           prodh	equ	0x3FF4
 51653                           prodl	equ	0x3FF3
 51654                           indf0	equ	0x3FEF
 51655                           postinc0	equ	0x3FEE
 51656                           postdec0	equ	0x3FED
 51657                           preinc0	equ	0x3FEC
 51658                           plusw0	equ	0x3FEB
 51659                           fsr0h	equ	0x3FEA
 51660                           fsr0l	equ	0x3FE9
 51661                           wreg	equ	0x3FE8
 51662                           indf1	equ	0x3FE7
 51663                           postinc1	equ	0x3FE6
 51664                           postdec1	equ	0x3FE5
 51665                           preinc1	equ	0x3FE4
 51666                           plusw1	equ	0x3FE3
 51667                           fsr1h	equ	0x3FE2
 51668                           fsr1l	equ	0x3FE1
 51669                           bsr	equ	0x3FE0
 51670                           indf2	equ	0x3FDF
 51671                           postinc2	equ	0x3FDE
 51672                           postdec2	equ	0x3FDD
 51673                           preinc2	equ	0x3FDC
 51674                           plusw2	equ	0x3FDB
 51675                           fsr2h	equ	0x3FDA
 51676                           fsr2l	equ	0x3FD9
 51677                           status	equ	0x3FD8


Data Sizes:
    Strings     1692
    Constant    588
    Data        1184
    BSS         1775
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     41      55
    BANK0           160     25     158
    BANK1           256      0     253
    BANK2           256      0     230
    BANK3           256      0     247
    BANK4           256      0     219
    BANK5           256      0     134
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_142(CODE[1]), STR_102(CODE[1]), 

    is_leap	PTR int  size(2) Largest target is 2
		 -> F5(STACK[2]), is_leap(STACK[2]), NULL(NULL[0]), 

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_143(CODE[1]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    oppoff	PTR long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zonename	PTR PTR const unsigned char  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    offset	PTR long  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    isdst	PTR int  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    rule	PTR const int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    alt	PTR unsigned int  size(2) Largest target is 2
		 -> alt(STACK[2]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 4
		 -> __gmt(CODE[4]), 

    z	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    d	PTR unsigned char  size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    rule	PTR int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK3[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_137(CODE[3]), STR_133(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), 
		 -> STR_118(CODE[3]), STR_114(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_137(CODE[3]), STR_133(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), 
		 -> STR_118(CODE[3]), STR_114(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), 
		 -> STR_99(CODE[21]), STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), 
		 -> STR_95(CODE[21]), STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), 
		 -> STR_91(CODE[15]), STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), 
		 -> STR_87(CODE[10]), STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), 
		 -> STR_81(CODE[14]), STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), 
		 -> STR_77(CODE[22]), STR_76(CODE[22]), STR_75(CODE[22]), STR_74(CODE[22]), 
		 -> STR_73(CODE[22]), STR_72(CODE[22]), STR_71(CODE[22]), STR_70(CODE[22]), 
		 -> STR_69(CODE[22]), STR_68(CODE[19]), STR_67(CODE[21]), STR_66(CODE[21]), 
		 -> STR_65(CODE[21]), STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), 
		 -> STR_61(CODE[22]), STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), 
		 -> STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), 
		 -> STR_53(CODE[22]), STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), 
		 -> STR_49(CODE[22]), STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), 
		 -> STR_45(CODE[30]), STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[23]), STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), 
		 -> STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), 
		 -> STR_21(CODE[23]), STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), 
		 -> STR_17(CODE[22]), STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), 
		 -> STR_13(CODE[26]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), 
		 -> STR_99(CODE[21]), STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), 
		 -> STR_95(CODE[21]), STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), 
		 -> STR_91(CODE[15]), STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), 
		 -> STR_87(CODE[10]), STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), 
		 -> STR_81(CODE[14]), STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), 
		 -> STR_77(CODE[22]), STR_76(CODE[22]), STR_75(CODE[22]), STR_74(CODE[22]), 
		 -> STR_73(CODE[22]), STR_72(CODE[22]), STR_71(CODE[22]), STR_70(CODE[22]), 
		 -> STR_69(CODE[22]), STR_68(CODE[19]), STR_67(CODE[21]), STR_66(CODE[21]), 
		 -> STR_65(CODE[21]), STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), 
		 -> STR_61(CODE[22]), STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), 
		 -> STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), 
		 -> STR_53(CODE[22]), STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), 
		 -> STR_49(CODE[22]), STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), 
		 -> STR_45(CODE[30]), STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[23]), STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), 
		 -> STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), 
		 -> STR_21(CODE[23]), STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), 
		 -> STR_17(CODE[22]), STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), 
		 -> STR_13(CODE[26]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_84(CODE[9]), STR_83(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    a	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_84(CODE[9]), STR_83(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_109(CODE[4]), STR_108(CODE[4]), STR_105(CODE[4]), STR_104(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_109(CODE[4]), STR_108(CODE[4]), STR_105(CODE[4]), STR_104(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_82(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_81(CODE[14]), STR_80(CODE[28]), 
		 -> STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[22]), STR_76(CODE[22]), 
		 -> STR_75(CODE[22]), STR_74(CODE[22]), STR_73(CODE[22]), STR_72(CODE[22]), 
		 -> STR_71(CODE[22]), STR_70(CODE[22]), STR_69(CODE[22]), STR_68(CODE[19]), 
		 -> STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[22]), 
		 -> STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), STR_52(CODE[22]), 
		 -> STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[24]), 
		 -> STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), STR_44(CODE[24]), 
		 -> STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), STR_32(CODE[23]), 
		 -> STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), STR_28(CODE[17]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[14]), 
		 -> STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), STR_20(CODE[22]), 
		 -> STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), STR_16(CODE[23]), 
		 -> STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), STR_12(CODE[22]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7410_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), STR_81(CODE[14]), 
		 -> STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[22]), 
		 -> STR_76(CODE[22]), STR_75(CODE[22]), STR_74(CODE[22]), STR_73(CODE[22]), 
		 -> STR_72(CODE[22]), STR_71(CODE[22]), STR_70(CODE[22]), STR_69(CODE[22]), 
		 -> STR_68(CODE[19]), STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), 
		 -> STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), 
		 -> STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), 
		 -> STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), 
		 -> STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), 
		 -> STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    tim.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tim	PTR const struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_141(CODE[37]), STR_140(CODE[22]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    f1p	PTR  size(2) Largest target is 320
		 -> C(BIGRAM[320]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), STR_81(CODE[14]), 
		 -> STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[22]), 
		 -> STR_76(CODE[22]), STR_75(CODE[22]), STR_74(CODE[22]), STR_73(CODE[22]), 
		 -> STR_72(CODE[22]), STR_71(CODE[22]), STR_70(CODE[22]), STR_69(CODE[22]), 
		 -> STR_68(CODE[19]), STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), 
		 -> STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), 
		 -> STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), 
		 -> STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), 
		 -> STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), 
		 -> STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), STR_81(CODE[14]), 
		 -> STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[22]), 
		 -> STR_76(CODE[22]), STR_75(CODE[22]), STR_74(CODE[22]), STR_73(CODE[22]), 
		 -> STR_72(CODE[22]), STR_71(CODE[22]), STR_70(CODE[22]), STR_69(CODE[22]), 
		 -> STR_68(CODE[19]), STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), 
		 -> STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), 
		 -> STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), 
		 -> STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), 
		 -> STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), 
		 -> STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_84(CODE[9]), 
		 -> STR_83(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_84(CODE[9]), 
		 -> STR_83(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> STR_84(CODE[9]), STR_83(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), 
		 -> T(CODE[176]), cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), 
		 -> V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    t	PTR long long  size(2) Largest target is 8
		 -> time@current_time(BANK0[8]), NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 320
		 -> C.hist(BIGRAM[97]), C(BIGRAM[320]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> R(BANK1[155]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> r_cal(BANK4[155]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_84(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_83(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    S3418tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t_mbmc	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  441697
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                            _asctime
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                    _display_history
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _localtime
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                      _set_hist_flag
                 _set_load_relay_one
                 _set_load_relay_two
                           _set_time
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                               _time
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_time                                             8     0      8      22
 ---------------------------------------------------------------------------------
 (1) _set_hist_flag                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       2     2      0    2841
                            ___fldiv
                            ___flmul
                            ___fltol
                         _start_bsoc
                          _stop_bsoc
                               _time
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    1495
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _display_history                                      0     0      0   83248
                             _WaitMs
                            _asctime
                         _get_switch
                      _get_vterm_ptr
                          _localtime
                            _sprintf
                               _time
                         _update_lcd
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (1) _localtime                                            1     0      1   14641
                      ___localtime_r
 ---------------------------------------------------------------------------------
 (2) ___localtime_r                                        3     0      3   14610
                       ___secs_to_tm
                     ___secs_to_zone
 ---------------------------------------------------------------------------------
 (3) ___secs_to_zone                                      46    28     18   11126
                            ___aodiv
                     ___year_to_secs
                           _do_tzset
                       _rule_to_secs
                         _scan_trans
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _scan_trans                                          30    18     12    1990
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _zi_read32                                            2     0      2      88
 ---------------------------------------------------------------------------------
 (4) _rule_to_secs                                        30    22      8    3167
                            ___aldiv
                            ___aomod
                             ___lmul
                    ___month_to_secs
                     ___year_to_secs
                      _days_in_month
 ---------------------------------------------------------------------------------
 (5) _days_in_month                                        4     0      4      66
 ---------------------------------------------------------------------------------
 (5) ___year_to_secs                                      24    14     10    1473
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (5) ___month_to_secs                                      8     4      4      90
 ---------------------------------------------------------------------------------
 (4) _do_tzset                                             2     2      0    2777
                            _getname
                             _getoff
                            _getrule
 ---------------------------------------------------------------------------------
 (5) _getrule                                              6     2      4    1222
                             _getint
                             _getoff
 ---------------------------------------------------------------------------------
 (6) _getoff                                               6     4      2     425
                             _getint
 ---------------------------------------------------------------------------------
 (7) _getint                                               4     2      2     112
 ---------------------------------------------------------------------------------
 (5) _getname                                              6     2      4     663
 ---------------------------------------------------------------------------------
 (3) ___secs_to_tm                                        67    57     10    3174
                            ___aldiv
                            ___almod
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8      92
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (2) _asctime                                              6     4      2    2527
                            ___awdiv
                            ___awmod
                              _put2d
 ---------------------------------------------------------------------------------
 (3) _put2d                                                5     0      5     959
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     2      2     232
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                  17    17      0   69996
                             _WaitMs
                            ___fldiv
                           ___xxtofl
                    _cal_current_10A
                   _cal_current_zero
                     _clear_adc_scan
                       _clear_switch
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     415
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _clear_switch                                         1     0      1      66
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (2) _cal_current_10A                                     13     0     13     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  132030
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   65731
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   35222
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   34896
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1    1464
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1    1389
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31860
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30434
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           31    31      0    5544
                                             10 COMRAM    31    31      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5454
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5454
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    5454
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
                               _time
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   36148
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   36058
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           6     6      0   36058
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _asctime
     ___awdiv
     ___awmod
     _put2d
       ___awdiv
       ___lbmod
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     ___fldiv
     ___xxtofl
     _cal_current_10A
       _check_range
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _clear_switch
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _display_history
     _WaitMs
       _StartTimer
       _TimerDone
     _asctime
       ___awdiv
       ___awmod
       _put2d
         ___awdiv
         ___lbmod
     _get_switch
     _get_vterm_ptr
     _localtime
       ___localtime_r
         ___secs_to_tm
           ___aldiv
           ___almod
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         ___secs_to_zone
           ___aodiv
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _do_tzset
             _getname
             _getoff
               _getint
             _getrule
               _getint
               _getoff
                 _getint
           _rule_to_secs
             ___aldiv
             ___aomod
             ___lmul
             ___month_to_secs
             ___year_to_secs
               ___aodiv
               ___aomod
               ___lmul
               ___omul
             _days_in_month
           _scan_trans
             _zi_read32
           _zi_read32
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _time
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     ___fldiv
     ___flmul
     ___fltol
     _start_bsoc
     _stop_bsoc
     _time
   _localtime
     ___localtime_r
       ___secs_to_tm
         ___aldiv
         ___almod
         ___aodiv
         ___aomod
         ___lmul
         ___omul
       ___secs_to_zone
         ___aodiv
         ___year_to_secs
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         _do_tzset
           _getname
           _getoff
             _getint
           _getrule
             _getint
             _getoff
               _getint
         _rule_to_secs
           ___aldiv
           ___aomod
           ___lmul
           ___month_to_secs
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _days_in_month
         _scan_trans
           _zi_read32
         _zi_read32
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_hist_flag
   _set_load_relay_one
   _set_load_relay_two
   _set_time
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _time
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
         _time
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     5C2      69       18.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      86      15       52.3%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DB      13       85.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     29      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     60F      58        0.0%
DATA                 0      0     BD1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 17 16:11:55 2020

                         _SPI1_Exchange8bit 2CFC                    __end_of_set_display_info 2D74  
                                         _C 08FF                                           _D 0A3F  
                                         _H 019B                                           _P 0094  
                                         _R 0100                                           _S 01A4  
                                         _T F823                                           _V 0207  
          __end_of_TMR5_SetInterruptHandler 2A1A                __end_of_start_switch_handler 2CDC  
                               __CFG_CP$OFF 000000                     __size_of_ringBufS_flush 0092  
                           _update_cal_data 1F7A                                          _r0 01E5  
                                        _r1 01DB                                          _bp F94B  
                    __end_of_FVR_Initialize 2F62                              _check_day_time A2D0  
                               __CFG_LVP$ON 000000                                         l171 2E2C  
                                       l809 2D0A                                         l675 28D2  
                                       l942 1B3A                                         _GIE 01FE97  
                                       _abs 22C4                                         _pad FD9E  
                                       fsr0 003FE9                                         fsr2 003FD9  
                   __size_of_PMD_Initialize 0014                             _TMR2_Initialize 2DC2  
                                       prod 003FF3                                         tosl 003FFD  
                                       wreg 003FE8                     __end_of___month_to_secs 0578  
                             _INT0_CallBack 2BEC                           _update_adc_result 254E  
                             __CFG_BBEN$OFF 000000                       __size_of_Volts_to_SOC 00BA  
                    __size_of___localtime_r 0244                               _INT1_CallBack 2B80  
                              __CFG_ZCD$OFF 000000                                        l1004 248C  
                                      l2210 A63A                                        l3003 EEAA  
                                      l2107 1842                                        l2028 18C0  
                                      l2044 0D2E                                        l1500 0F40  
                                      l2301 D806                                        l2214 A632  
                                      l3030 EBE2                                        l1271 2E54  
                                      l1192 24CC                                        l1505 1516  
                                      l1282 E936                                        l2075 0A52  
                           _timer3ReloadVal 00C0                                        l2148 DF9E  
                                      l2260 20BE                                        l1284 E93C  
                                      l1524 53C2                                        l2069 12EA  
                                      l4030 8530                                        l1625 1ED0  
                                      l2417 BBC6                                        l1481 084A  
                                      l1466 0326                                        l2371 5AE8  
                                      l3315 8C60                                        l2195 02B8  
                                      l1459 005E                                        l2532 2790  
                                      l2700 480E                                        l2292 F92A  
                                      l3270 802A                                        l3422 2304  
                                      l3414 E2D6                                        l2614 BCB4  
                                      l4038 7044                                        l2375 5E26  
                                      l3351 786E                                        l1831 25A4  
                                      l1479 0844                                        l1840 D8BE  
                                      l1753 0F3C                                        l2561 1BC0  
                                      l1841 DA1A                                        l1489 0B10  
                                      l3282 7EBA                                        l2650 9F5A  
                                      l2635 AD34                                        l3427 FB64  
                                      l1499 0D16                                        l2476 FDFA  
                                      l1772 2646                                        l1757 1410  
                                      l2742 067A                                        l3526 CF58  
                      _ADCC_StartConversion 2E58                                        l3391 DC18  
                                      l3463 C872                                        l3552 FA4A  
                                      l2496 971A                                        l2576 2070  
                                      l1848 F172                                        l1888 2D70  
                                      l3834 16C2                                        l3819 D5E6  
                                      l1988 9636                                        l3942 D3C6  
                                      l3847 163E                                        l3951 C37E  
                                      l2992 0994                                        l3858 3862  
                                      l2996 EDD6                                        l3986 C102  
                                      l3978 C01C                                        l9911 7A44  
                                      l9905 79FE                                        l9917 7A66  
                                      l9909 7A14                                        STR_1 FEF5  
                                      STR_2 FECB                                        l9961 7C36  
                                      l9881 790E                                        STR_3 FFD5  
                                      STR_4 FEA1                                        l9963 7C48  
                                      l9971 7C82                                        l9947 7BA4  
                                      l9875 78CE                                        STR_5 FB25  
                                      STR_6 FB25                                        l9957 7C16  
                                      l9893 798C                                        l9885 7924  
                                      STR_7 FB25                                        STR_8 FB25  
                                      l9991 7D30                                        l9967 7C52  
                                      l9887 7954                                        STR_9 FB25  
                                      l9995 7D3A                                        l9899 79BE  
                                      l9989 7D1E                                        l9999 7D6C  
                                      _LATA 003FBA                                        _LATB 003FBB  
                                      _LATC 003FBC                                        _LATD 003FBD  
                                      _LATE 003FBE                                        _LATF 003FBF  
                                      _T2PR 003FAB                                        _T6PR 003F93  
                                      _PMD0 0039C0                                        _PMD1 0039C1  
                                      _PMD2 0039C2                                        _PMD3 0039C3  
                                      u8000 A826                                        _PMD4 0039C4  
                                      _PMD5 0039C5                                        _PMD6 0039C6  
                                      _PMD7 0039C7                                        u8100 281A  
                                      u8020 A8FE                                        u8005 A81C  
                                      u8110 281C                                        u8025 A8F4  
                                      u8210 C43A                                        u8050 FFF4  
                                      u7420 7C7A                                        u9100 EAAC  
                                      u7260 27EA                                        u8060 FFF6  
                                      u8221 C444                                        u8141 F184  
                                      u7430 7C9A                                        u8230 C47E  
                                      u8310 CFB8                                        u9030 098E  
                                      u9110 EAC0                                        u7270 27EC  
                                      u8070 15EC                                        u8240 C4B0  
                                      u9120 EAFA                                        u8080 15EE  
                                      u7425 7C6A                                        u9105 EAA2  
                                      u9201 E796                                        u8161 F2A6  
                                      u7530 7E8C                                        u7370 7BCA  
                                      u8330 D00E                                        u9210 E7D0  
                                      u7380 7BEA                                        u8260 C58E  
                                      u8340 D040                                        u9220 E802  
                                      u7700 27BA                                        u7381 7BE4  
                                      u9125 EAF0                                        u7630 7F76  
                                      u9310 1FEE                                        u8190 C3E4  
                                      u8350 D072                                        u7710 27BC  
                                      u9320 200E                                        u8280 C5E0  
                                      u9240 E8E0                                        u7720 0472  
                                      u7570 7F00                                        u7490 7D62  
                                      u8610 8B7A                                        u8530 8A94  
                                      u8370 D12A                                        u9090 2178  
                                      u9170 EB98                                        u7635 7F66  
                                      u7660 7F96                                        u8620 8BB4  
                                      u7820 22D8                                        u9260 F6EC  
                                      u7590 7F1A                                        u7398 7BEC  
                                      u8630 8BF0                                        u8390 D17C  
                                      u9190 EBC2                                        u7830 E1F8  
                                      u9270 F71E                                        u7495 7D52  
                                      u8615 8B6A                                        u8720 71F8  
                                      u7920 1670                                        u8570 8B1E  
                                      u7930 1672                                        u9290 F7D6  
                                      u7835 E1EE                                        u8830 7742  
                                      u7950 A6FA                                        u8735 738C  
                                      u8840 777C                                        u7880 E2C6  
                                      u7960 A746                                        u8745 7454  
                                      u8850 77C2                                        u7890 E2C8  
                                      _PLLR 01CEE0                                        u8835 7732  
                                      u8755 761C                                        u7875 E2A8  
                                      u7955 A6F0                                        u8790 76E6  
                                      u7985 A780                                        u7986 A786  
                                      u7987 A794                     __end_of_display_history B8F2  
                                      _WPUA 003A41                                        _WPUB 003A51  
                                      _WPUC 003A61                                        _WPUD 003A71  
                                      _WPUE 003A81                                        _WPUF 003A91  
                          __end_of_ADCC_ISR 28AC                       __size_of___secs_to_tm 10D2  
                             __CFG_FCMEN$ON 000000                                _rule_to_secs 8034  
                                      _dbuf 0354                          __size_of_CRC_Start 0006  
                                      _cp_h F95F                                        _cp_l F95B  
                                      _atoi C608                                        _ctoa 153C  
                                      _main 0000                                        _dtoa 963C  
                                      _nanf 1D4C                                        _lock 01D3  
                                      _seed 02DE                                        _prec 004C  
                                      _time 1E0E                                        _nout 00BA  
                                      _spin F8D3                                        fsr0h 003FEA  
                                      fsr1h 003FE2                                        indf0 003FEF  
                                      fsr2h 003FDA                                        fsr0l 003FE9  
                                      indf1 003FE7                                        indf2 003FDF  
                                      fsr1l 003FE1                                        fsr2l 003FD9  
                                      _stoa BBCA                                        btemp 002A  
                                      _utoa ACF0                                        _xtoa 9F16  
                    __end_of_check_adc_scan 2F42                               ___fpclassifyf E14A  
                                      prodh 003FF4                                        prodl 003FF3  
                                      start 00AE                             _timer5ReloadVal 00C4  
                 __end_of_SPI1_Exchange8bit 2D1A                   __size_of_clear_hid_pflags 0066  
                           _TMR3_Initialize 2236                 __size_of_set_load_relay_one 0010  
               __size_of_set_load_relay_two 0010                               __CFG_CSWEN$ON 000000  
                            _SPI1STATUSbits 003D17                           _UART1_rx_vect_isr 2AE4  
                              ___param_bank 000000                        display_history@bwait 0053  
                    __end_of_check_day_time A644                          ?_UART1_rx_vect_isr 0001  
                 __size_of_DATAEE_WriteByte 0068                            _update_hist_data 17CE  
                          __end_of_INT0_ISR 2EF2                            __end_of_INT1_ISR 2512  
            __size_of_OSCILLATOR_Initialize 0016                    __end_of_ringBufS_put_dma 0F44  
             __end_of_OSCILLATOR_Initialize 2E32                                       l10011 7E44  
                                     l10021 7E9E                                       l10013 7E6A  
                                     l10031 7EEE                                       l10035 7EFA  
                                     l10061 7F86                                       l10045 7F22  
                                     l10029 7EDC                                       l10213 16B2  
                                     l10071 7FB2                                       l10311 C3EA  
                                     l10049 7F28                                       l10401 879C  
                                     l10241 A880                                       l10083 800A  
                                     l10075 7FCA                                       l10411 8824  
                                     l10403 87CC                                       l10323 C484  
                                     l10171 22F4                                       l10251 A986  
                                     l10243 A8D0                                       l10227 A762  
                                     l10077 7FDA                                       l10501 8B2C  
                                     l10421 887A                                       l10317 C43E  
                                     l10093 03A8                                       l10511 8BA0  
                                     l10423 88AA                                       l10335 C556  
                                     l10247 A918                                       l10417 8864  
                                     l12113 DAD4                                       l12105 DA68  
                                     l10185 E274                                       l10281 06D0  
                                     l10097 042E                                       l10531 8C44  
                                     l10523 8C0C                                       l10443 893C  
                                     l10435 8922                                       l12115 DAE2  
                                     l10371 D0F2                                       l10363 D046  
                                     l10355 CFBE                                       l10195 E2CE  
                                     l10291 F18C                                       l10517 8BDC  
                                     l10461 8A02                                       l10453 89CC  
                                     l10429 88E8                                       l12125 DB44  
                                     l12117 DAF8                                       l10189 E278  
                                     l10269 162E                                       l13005 1786  
                                     l10463 8A14                                       l10471 8A6C  
                                     l10391 8746                                       l12127 DB62  
                                     l12119 DB16                                       l12071 EC22  
                                     l10295 F232                                       l10641 767E  
                                     l10553 70E4                                       l10529 8C34  
                                     l12137 DB96                                       l12129 DB78  
                                     l12401 9488                                       l10635 7662  
                                     l10571 71B2                                       l10555 70EA  
                                     l10547 70A4                                       l10811 EE24  
                                     l10483 8AB6                                       l12147 DBF8  
                                     l11611 E31A                                       l10645 76A4  
                                     l10573 71B8                                       l10565 7172  
                                     l10557 711A                                       l10805 ED94  
                                     l10477 8A9A                                       l10469 8A68  
                                     l10397 8786                                       l10655 76EE  
                                     l10583 720A                                       l10575 71E8  
                                     l10823 EEA8                                       l10815 EE72  
                                     l10487 8ADC                                       l12415 9604  
                                     l12423 9616                                       l10831 217C  
                                     l11623 E376                                       l12087 ECD6  
                                     l12079 EC6A                                       l10673 77AE  
                                     l10497 8B26                                       l12409 9568  
                                     l12441 294A                                       l11553 C6E4  
                                     l11537 C622                                       l10841 EACC  
                                     l10913 F79E                                       l10905 F6F2  
                                     l12353 085C                                       l12361 08AE  
                                     l11617 E346                                       l11801 64FA  
                                     l14043 2CB6                                       l10659 76F4  
                                     l11563 C7C6                                       l11555 C6FC  
                                     l11547 C6B8                                       l11539 C644  
                                     l11635 E3F8                                       l13421 2116  
                                     l10669 7768                                       l11573 C862  
                                     l11557 C720                                       l12357 089A  
                                     l10941 D20A                                       l11741 5F7E  
                                     PRLOCK 0039EF                                       l14055 28CE  
                                     l10687 781C                                       l10679 77D8  
                                     l12375 91B2                                       l11559 C75E  
                                     l11591 D4C4                                       l11815 054E  
                                     l11751 60BA                                       l11719 1C4A  
                                     l13425 2148                                       l14081 2474  
                                     l10689 7836                                       l12385 92D8  
                                     l12369 9182                                       l10929 2012  
                                     l10793 095E                                       l10865 EB7A  
                                     l10857 EB4E                                       l16001 2210  
                                     l10881 E7D6                                       l10945 D24A  
                                     l11761 6312                                       l11737 5F54  
                                     l11745 6084                                       l10867 EB90  
                                     l10859 EB6A                                       l10963 D3AC  
                                     l14235 DC6A                                       l13621 DE64  
                                     l12397 93EC                                       l12389 93BA  
                                     l14317 E762                                       l10797 0992  
                                     l10789 091C                                       l11589 D458  
                                     l10893 E8A8                                       l11781 63E8  
                                     l14341 B924                                       l14405 BB8C  
                                     l10959 D388                                       l11767 6344  
                                     l14351 B960                                       l14407 BBB6  
                                     l14263 DDD6                                       l14247 DD20  
                                     l14255 DDD2                                       l12833 A5E0  
                                     l13617 DE50                                       l13609 DE24  
                                     l16009 227A                                       l16017 22E6  
                                     l16025 23F8                                       l16201 9F4A  
                                     l13633 128E                                       l11777 63BA  
                                     l11769 634E                                       l14337 B90E  
                                     l14249 DD54                                       l13801 1896  
                                     l14099 24B4                                       l12819 A4DA  
                                     l16051 252C                                       l11795 6466  
                                     l11787 6432                                       l14363 B9B2  
                                     l14347 B954                                       l14339 B91E  
                                     l14275 1FAA                                       l16053 2546  
                                     l16037 2490                                       l16133 BD56  
                                     l16125 BCEA                                       l16109 BC36  
                                     l16221 A020                                       l16213 9FC0  
                                     l17013 12F8                                       l13645 12C4  
                                     l16301 B07E                                       l11789 643A  
                                     l14357 B98A                                       l13813 FC32  
                                     l14285 17E4                                       l13719 25BA  
                                     l16063 25E8                                       l16143 BE0C  
                                     l16207 9F84                                       l17015 1300  
                                     l17111 038A                                       l13591 F326  
                                     l16311 B19A                                       l14383 BA32  
                                     l14375 BA0C                                       l14367 B9BE  
                                     l13841 F59E                                       l14617 9F08  
                                     l16073 2638                                       l16129 BD26  
                                     l16161 AD24                                       l17017 130A  
                                     l17025 131E                                       l13657 2084  
                                     l17105 02D8                                       l12881 EA28  
                                     l16313 B1A4                                       l16321 B2CA  
                                     l16305 B118                                       l13809 FBD0  
                                     l14297 181C                                       l14803 1714  
                                     l13843 F5A4                                       l15531 F960  
                                     l15611 FE04                                       l16147 BE48  
                                     l16139 BDE0                                       l17019 1318  
                                     l17027 134A                                       l14571 0C16  
                                     l13667 09CA                                       l12947 2866  
                                     l13595 F39C                                       l17211 F8C4  
                                     l13861 F624                                       l13845 F5B2  
                                     l13853 F5BA                                       l15605 FDCA  
                                     l16261 A286                                       l16237 A116  
                                     l16245 A19C                                       l12893 2650  
                                     l12877 E9FE                                       l16317 B23E  
                                     l13765 256E                                       l17205 F85E  
                                     l12799 A3E4                                       l13855 F5EC  
                                     l13839 F58E                                       l15543 10B4  
                                     l15615 FE40                                       l16503 4488  
                                     l16407 3C84                                       l14567 0BD8  
                                     l13679 0A00                                       l18007 1542  
                                     l12985 204E                                       l17241 55E2  
                                     l17233 550A                                       l15553 11DA  
                                     l15545 10D6                                       l15609 FDF2  
                                     l15721 155A                                       l15641 F462  
                                     l15625 0780                                       l16089 26F0  
                                     l16169 AD80                                       l16441 3FB6  
                                     l16425 3E08                                       l16417 3D1C  
                                     l17049 FB24                                       l16273 C1B0  
                                     l15619 FE8A                                       l15723 1586  
                                     l15635 F44C                                       l15707 FD84  
                                     l16179 AF76                                       l16531 473C  
                                     l16275 C1C8                                       l17059 CD8A  
                                     l17253 5738                                       l17237 5576  
                                     l17229 54B6                                       l13869 F69E  
                                     l15557 1218                                       l15661 F528  
                                     l16541 479A                                       l16517 4604  
                                     l16453 40A2                                       l16429 3E5C  
                                     l16365 394E                                       l15573 B3C4  
                                     l16293 C35A                                       l16277 C1EE  
                                     l13981 0BA6                                       l13789 187E  
                                     l17263 598A                                       l15647 F482  
                                     l15807 1602                                       l16391 3B20  
                                     l16367 3988                                       l17079 F03A  
                                     l16607 253C                                       l17273 5AF8  
                                     l17249 56E4                                       l15681 FCA6  
                                     l15913 1B4C                                       l15905 1AEA  
                                     l15841 1782                                       l16537 4796  
                                     l16473 4202                                       l16449 406E  
                                     l16369 399E                                       l15593 B59A  
                                     l15585 B4EC                                       l17513 5318  
                                     l17441 4C86                                       l16721 81EE  
                                     l17521 D604                                       l13977 0B2A  
                                     l17259 5910                                       l15755 9754  
                                     l15747 970A                                       l15931 1C0E  
                                     l15915 1B58                                       l15819 1646  
                                     l15827 169C                                       l16483 42B0  
                                     l16387 3AD0                                       l16547 47BA  
                                     l15579 B482                                       l17435 4BD0  
                                     l16723 8242                                       l14797 1704  
                                     l17277 5B1A                                       l17269 5A50  
                                     l15669 F55C                                       l15685 FCB8  
                                     l15941 1CD0                                       l15837 1740  
                                     l15845 17AE                                       l16493 43D2  
                                     l16389 3B0A                                       l17621 D88E  
                                     l17437 4C78                                       l16901 2B04  
                                     l16581 C026                                       l15759 9772  
                                     l15951 1E7C                                       l15935 1C46  
                                     l15871 18EC                                       l15855 1852  
                                     l15863 1880                                       l15839 176C  
                                     l17455 4D1E                                       l16831 69F4  
                                     l17289 5E1E                                       l15793 9A72  
                                     l15769 9984                                       l15689 FCD0  
                                     l15881 1A28                                       l17385 48D0  
                                     l16921 2EC8                                       l16833 6A14  
                                     l17537 D6F8                                       l15699 FD50  
                                     l15875 195C                                       l17635 D9B6  
                                     l17475 4E34                                       l17459 4D32  
                                     l16915 2E40                                       l16907 2C40  
                                     l16587 C094                                       l16579 C002  
                                     l16739 85A6                                       l16843 6CFA  
                                     l16827 68DE                                       l17547 D7D0  
                                     l17565 19A4                                       l15789 9A36  
                                     l15973 2068                                       l15965 1F9E  
                                     l15893 1AAA                                       l15877 19C6  
                                     l16757 0F9C                                       l17397 4948  
                                     l17389 48E6                                       l16853 6DDA  
                                     l16829 68FE                                       l17901 0B22  
                                     l17821 06AA                                       l15975 208A  
                                     l16871 6F5A                                       l15897 1AD2  
                                     l16777 0E1A                                       l16961 33DA  
                                     l16937 3070                                       l16929 2F9C  
                                     l17913 0C22                                       l17809 05D0  
                                     l17761 0340                                       l17753 02D4  
                                     l15899 1AE4                                       l16779 0E5C  
                                     l16947 310E                                       l16867 6F3C  
                                     l17595 B8E2                                       l17755 02FE  
                                     l17691 0078                                       l17683 0040  
                                     l15989 2188                                       l16797 11A2  
                                     l16789 113E                                       l16981 35F2  
                                     l16973 34F8                                       l16965 343A  
                                     l16957 31CE                                       l16949 3114  
                                     l17589 B8DE                                       l17925 117E  
                                     l17941 138E                                       l17845 084E  
                                     l17685 0048                                       l16879 7028  
                                     l17847 087C                                       l17839 083A  
                                     l16889 2858                                       l17929 11E0  
                                     l17865 08D6                                       l17689 0066  
                                     l17955 13E8                                       l17939 1362  
                                     l17859 08B0                                       l17895 0B00  
                                     l17993 14C6                                       l17985 1490  
                                     l17969 1440                             __end_of___aldiv E474  
                                     l17987 14A8                                       l17979 147E  
                                     l17997 14EC                             __end_of___aodiv C608  
                              _Volts_to_SOC 0B18                                       _ADCAP 003EF5  
                                     _ADACT 003EFE                             __end_of___almod ED52  
                           __end_of___fladd 8034                                       _ADCLK 003EFF  
                           __end_of___aomod D1A0                                       _ADPCH 003EF1  
                           __end_of___fldiv 8C6A                                       _ADREF 003EFD  
                           __end_of___awdiv F576                             __end_of___flneg 21A6  
                                     STR_10 FF1F                                       STR_11 FF49  
                                     STR_20 FDB1                                       STR_12 FCEB  
                                     STR_21 FB3A                                       STR_13 FA91  
                                     STR_30 FF84                                       STR_14 FB51  
                                     STR_22 FA41                                       STR_15 FC37  
                                     STR_31 FC20                                       STR_23 FA5C  
                                     STR_24 FF63                                       STR_32 FC09  
                                     STR_40 FB68                                       STR_16 FB23  
                                     STR_25 FE61                                       STR_17 FD17  
                                     STR_33 FBF2                                       STR_41 FB7F  
                             __CFG_WDTE$OFF 000000                                       STR_50 FE35  
                                     STR_18 FD2D                                       STR_26 FD01  
                                     STR_34 FBDB                                       STR_42 FB96  
                                     STR_51 FE35                                       STR_19 FE09  
                                     STR_27 FDC7                                       STR_35 FBC4  
                                     STR_43 FAC3                                       STR_28 FF96  
                                     STR_52 FD9B                                       STR_60 FCD5  
                                     STR_36 FBAD                                       STR_44 FB0B  
                           __end_of___awmod FD9E                                       STR_61 FD85  
                                     STR_53 FD59                                       STR_37 FC7C  
                                     STR_45 FA07                                       STR_70 FCA9  
                                     STR_62 FD9B                                       STR_54 FD43  
                                     STR_38 FC4E                                       STR_46 FAAB  
                                     STR_63 FCD5                                       STR_71 FE4B  
                                     STR_55 FF34                                       STR_39 FC65  
                                     STR_47 FADB                                       STR_80 FA25  
                                     STR_72 FD9B                                       STR_64 FE1F  
                                     STR_56 FDDD                                       STR_48 FAF3  
                                     _ADRPT 003EEC                                       STR_81 FF63  
                                     STR_65 FF0A                                       STR_49 FE35  
                                     STR_73 FCBF                                       STR_57 FCA9  
                                     STR_90 FFA7                                       STR_82 FFFC  
                                     STR_66 FEE0                                       STR_58 FE4B  
                                     STR_74 FD6F                                       STR_75 FD9B  
                                     STR_59 FD9B                                       STR_91 FFA7  
                                     STR_83 FFB6                                       STR_67 FEB6  
                                     STR_76 FCD5                                       STR_92 FFA7  
                                     STR_84 FFCC                                       STR_68 FF71  
                           __end_of___lbmod 11CA                                       STR_69 FDDD  
                                     STR_85 FF5E                                       STR_77 FDF3  
                                     STR_93 FA77                                       STR_86 FF5E  
                                     STR_94 FE77                                       STR_78 FA25  
                                     STR_79 FA25                                       STR_87 FFC2  
                                     STR_95 FE8C                                       STR_88 FFC2  
                           __end_of___flmul 7878                                       STR_89 FFA7  
                           __end_of___flsub 2350                             __end_of___fltol EBEC  
                                     u10500 C80E                                       u11310 EC4A  
                                     u11320 EC64                                       u10610 E314  
                                     u11330 EC86                             __end_of___lodiv E908  
                                     u10540 D4F2                                       u10470 C6B4  
                                     u12150 1AFA                                       u10630 E342  
                                     u11350 ECFE                                       u11440 DB8C  
                                     u10640 E370                                       u10801 5EB4  
                                     u10490 C80C                                       u10650 E392  
                                     u11370 ED28                                       u11290 EC1C  
                                     _U1P1H 003DED                                       u12315 2380  
                                     u10547 D4E4                                       u12500 1BCA  
                                     u10580 D58C                                       _U1P2H 003DEF  
                                     u10590 D5BA                                       u12430 1782  
                                     u11630 084E                                       u12158 1AFC  
                                     u10670 E420                                       u10910 64D8  
                                     _U1P1L 003DEC                                       _U1P3H 003DF1  
                                     u12175 1B4A                                       _T3CLK 003FA9  
                                     u11704 91EE                                       u12176 1B4C  
                                     u10920 64DA                                       _T2CON 003FAC  
                                     _U1P2L 003DEE                                       u11705 91E8  
                                     u10585 D586                                       u15010 1A64  
                                     u10690 E44A                                       _U1P3L 003DF0  
                                     u10587 D578                                       u11635 0848  
                                     u11724 93D4                                       u12700 128A  
                                     u12364 E9AA                                       u12380 2E96  
                                     u10940 0530                                       u12525 1BFE  
                                     u11725 93CE                                       u10597 D5AC  
                                     u12365 E9A4                                       u12526 1C00  
                                     u12518 1BCC                                       u15110 1B9E  
                                     u10950 2C3A                                       u10870 636A  
                                     _U2P1L 003DD4                                       u11744 94A2  
                                     u11664 919C                                       u14400 1104  
                                     u15040 1AB8                                       u16000 3EE4  
                                     u12720 12BE                                       _T3CON 003FA6  
                                     _U2P2L 003DD6                                       u11745 949C  
                                     u11665 9196                                       u13521 1808  
                                     u11770 94CC                                       u10890 6404  
                                     u10794 1C68                                       u13450 DDD2  
                                     _U2P3L 003DD8                                       u10795 1C62  
                                     u11764 94C4                                       u11684 91CC  
                                     u16100 44DC                                       u11765 94BE  
                                     u11685 91C6                                       u13461 1F84  
                                     u13541 1832                                       u12670 DE02  
                                     u15070 1B1C                                       u16030 415C  
                                     u12750 09C6                                       u14407 10F6  
                                     u12575 2E84                                       _T5CLK 003F9D  
                                     u14520 07FA                                       u16120 468C  
                                     u16040 415E                                       u12744 20B2  
                                     u12576 2E86                             __end_of___lomod F7F8  
                                     u12745 20AE                                       u12585 2E74  
                                     u14370 F954                                       u12770 09FA  
                                     u12586 2E76                                       u13490 17E0  
                                     u15340 260E                                       u15180 1F6E  
                                     u15500 AD0A                                       _T2HLT 003FAD  
                                     u14390 F9D0                                       u14710 966C  
                                     u14470 B60E                                       u16230 81C8  
                                     u14527 07EC                                       u14720 966E  
                                     u14640 FCFC                                       u15360 26C4  
                                     u15280 243A                                       u15440 BD4C  
                                     u17200 DA06                                       u17040 4F7A  
                                     u16240 81DA                                       _T5CON 003F9A  
                                     u14801 99C8                                       u12890 2C84  
                                     u14810 99DE                                       u14570 F4AE  
                                     u15370 26C6                                       u15450 BD92  
                                     u15610 A018                                       u17210 DA08  
                                     u17050 4FA4                                       u16170 BFD8  
                                     u16410 6E6E                                       u14811 99DC  
                                     u15531 AFB8                                       u14820 99F2  
                                     u14740 96DE                                       u14660 FD70  
                                     u15540 AFCE                                       u15620 A06C  
                                     u17300 06D8                                       u15541 AFCC  
                                     u15701 A1E8                                       u17045 4F6C  
                                     u14830 99F6                                       u14590 F548  
                                     u15550 AFE2                                       u15710 A1FE  
                                     u15630 A06E                                       u17310 0802  
                                     u15711 A1FC                                       u17055 4F96  
                                     u12896 2C86                                       u14760 96F0  
                                     u14920 16EA                                       u15480 BE6E  
                                     u15560 AFE6                                       u15720 A212  
                                     u16440 27F4                                       u15800 B182  
                                     u17320 0804                                       _T6CON 003F94  
                                     u15457 BD84                                       u14850 9A0C  
                                     u14930 16EC                                       u15730 A216  
                                     u15650 A0CC                                       u16290 0F7C  
                                     u16450 2844                                       u14780 9740  
                                     u15660 A0CE                                       u15580 9F30  
                                     u16540 310E                                       u15820 B2CA  
                                     u16620 CD4A                                       u14790 9998  
                                     u15910 3B68                                       u15750 C182  
                                     u16630 CD80                                       u16710 F83A  
                            __CFG_DEBUG$OFF 000000                                       u14960 17FC  
                                     u15680 A198                                       u15920 3B6A  
                                     u17280 045A                                       u14970 17FE  
                                     u14890 1630                                       u15690 A1B8  
                                     u15930 3B90                                       u17450 13D8  
                                     u15860 39E6                                       u16580 34C2  
                                     u16740 F8A0                                       u17460 13F2  
                                     u15685 A17A                                       u16565 31F0  
                                     u15870 39E8                                       u16590 3570  
                                     u17470 1404                                       u16591 356C  
                                     u15880 3A0E                                       u16728 F83C  
                                     u17456 13DA                                       u16770 F906  
                                     u17466 13F4                                       u15980 3D70  
                                     u17476 1406                                       _T6HLT 003F95  
                                     u16758 F8A2                  _ADCC_ADTI_InterruptHandler 00A1  
                                     u16980 4A8E                                       u16788 F908  
                                     u16990 4AB8                                       u16985 4A80  
                                     u16995 4AAA                                       _T2TMR 003FAA  
                                     _U1UIR 003DF8                                       _T2RST 003FAF  
                                     _U1RXB 003DE8                                       _U2UIR 003DE0  
                                     _U2RXB 003DD0                                       _U2TXB 003DD2  
                                     _T6TMR 003F92                                       _T6RST 003F97  
                       ??_UART1_rx_vect_isr 0006                                       _ISRPR 0039F1  
                                     _OSCEN 0039DD                                       _TMR3H 003FA5  
                                     _TMR5H 003F99                                       _TMR3L 003FA4  
                                     _TMR5L 003F98                   __end_of_update_adc_result 2588  
                                     _TRISA 003FC2                                       _TRISB 003FC3  
                                     _TRISC 003FC4                                       _TRISD 003FC5  
                                     _TRISE 003FC6                                       _TRISF 003FC7  
                               _Default_ISR 2F88                         __size_of_CRC_IsBusy 0010  
                   __size_of_clear_adc_scan 0006                          _current_sensor_cal 4818  
         __size_of_TMR3_SetInterruptHandler 0028                                ___secs_to_tm 279A  
         __size_of_TMR6_SetInterruptHandler 0028                             __end_of_asctime 9180  
                             __CFG_WRTB$OFF 000000                            __end_of_TMR3_ISR F016  
                             __CFG_WRTC$OFF 000000                            _cal_current_zero 1262  
                                     ___gmt F953                               __CFG_WRTD$OFF 000000  
                          __end_of_TMR5_ISR E14A                             __end_of_getname B32C  
                              _DMA1CON0bits 003BFC                            __end_of_TMR6_ISR 2DAA  
                              _DMA1CON1bits 003BFD                  __size_of_send_lcd_data_dma 0046  
                           _DATAEE_ReadByte 2734                                       _fabsf 0D40  
                           __end_of_getrule C388                        __end_of_clear_switch 20C2  
                                     _flags 004E                        __size_of_check_range 0080  
                 __size_of_CRC_ReverseValue 00CE                                       _r_cal 0440  
                  __size_of_calc_model_data 045A                                _DMA2CON0bits 003BDC  
                              _DMA2CON1bits 003BDD                __end_of_get_ac_charger_relay 2EE4  
                                     _fputc F930                  __size_of_send_lcd_cmd_long 0040  
                           __end_of_isalpha 0000                                       _fputs 11CA  
                           __end_of_isdigit 2826                             __end_of_ivln2_h F95B  
                                     _put2d FA54                          __CFG_MCLRE$EXTMCLR 000000  
                                     _srand 2664                                       _width 004A  
                                     _putch 2D74                __end_of_set_ac_charger_relay 2EBA  
                           __end_of_islower 27C6                             __end_of_isspace 2022  
                  _INT1_SetInterruptHandler 2A42                             __end_of_set_dac 0D40  
                           __end_of_isupper 27F6                                       pclath 003FFA  
                                     tablat 003FF5                                       ltemp0 002A  
                                     ltemp1 002E                                       ltemp2 0032  
                  __size_of_DMA1_Initialize 006A                                       plusw0 003FEB  
                                     plusw1 003FE3                                       plusw2 003FDB  
                                     ttemp0 002A                                       ttemp1 002D  
                                     ttemp2 0030                                       ttemp3 0033  
                                     ttemp5 002B                                       ttemp6 002E  
                                     ttemp7 0032                                       status 003FD8  
       __end_of_UART1_SetRxInterruptHandler 29CA                 _UART1_SetRxInterruptHandler 29A2  
                                     wtemp0 002A                                       wtemp1 002C  
                                     wtemp2 002E                                       wtemp3 0030  
                                     wtemp4 0032                                       wtemp5 0034  
                                     wtemp8 002B                             __end_of_sprintf FFBC  
                           __end_of_tolower 16CC                             __end_of_strncmp D5F0  
                           __end_of_toupper 1648                   __size_of_DMA1_DMADCNT_ISR 000A  
                 __end_of_UART1_rx_vect_isr 2B0C                    __size_of_SPI1_Initialize 0016  
                   __end_of_update_cal_data 1FD0                             _TMR5_Initialize 21EE  
                     __end_of_ringBufS_init 292A                             __initialization 00B6  
                         _UART2_rx_vect_isr 2B34                               ___localtime_r CD1C  
                              __end_of_cp_h F963                                __end_of_cp_l F95F  
                              __end_of_atoi C87C                                __end_of_ctoa 15C4  
                              __end_of_main 1556                                __end_of_dtoa 9ABC  
                              __end_of_nanf 1DAE                                __end_of_time 1E6C  
                              __end_of_spin F94B                                __end_of_stoa BE88  
                              __end_of_utoa B030                                __end_of_xtoa A2D0  
                            __CFG_SAFEN$OFF 000000                          ?_UART2_rx_vect_isr 0001  
                   __end_of_TMR2_Initialize 2DDA                    __size_of_cal_current_10A 00BE  
                     __end_of_send_lcd_data 2B80                    __size_of_DMA2_Initialize 005A  
                __end_of_check_enter_button 19AE                           __end_of_CRC_Start 2F6E  
                  _TMR5_SetInterruptHandler 29F2                               __activetblptr 000003  
                 __size_of_DMA1_DMASCNT_ISR 000E                       _TMR3_InterruptHandler 0098  
                         _port_data_dma_ptr 2F0C                          esr_check@esr_state 00C6  
                       ??_UART2_rx_vect_isr 0006                                      INTCON0 003FD2  
      __size_of_UART2_SetRxInterruptHandler 0028                              __CFG_MVECEN$ON 000000  
                           _TMR6_Initialize 28D8                             _PWM8_Initialize 2E06  
                          _UART1_Initialize 21A6                           _UART2_tx_vect_isr 2B0C  
                        _UART2_Transmit_ISR 28AC                                      _ADACCU 003EEA  
                                    _ADACQH 003EF4                                      _ADACQL 003EF3  
                                    _ADCON0 003EF8                                      _ADCON1 003EF9  
                                    _ADCON2 003EFA                                      _ADCON3 003EFB  
                            _start_adc_scan 1C86                                      _ADLTHH 003EDF  
                                    _ADLTHL 003EDE                                      STR_102 F9E1  
                                    STR_103 F963                                      STR_112 FFED  
                                    STR_104 FFDA                                      STR_121 FFF0  
                                    STR_105 FFE2                                      STR_114 FFED  
                                    STR_123 FFF0                                      STR_131 FFF9  
                                    STR_116 FFF3                                      STR_108 FFDE  
                                    STR_140 FC93                                      STR_133 FFF9  
                                    STR_109 FFE6                                      STR_141 F9E2  
                                    STR_118 FFF3                                      STR_126 FFF6  
                                    STR_135 FFEA                                      STR_128 FFF6  
                                    STR_137 FFEA                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6                                      _DMA1PR 0039F3  
                                    _DMA2PR 0039F4                                      _ADSTAT 003EFC  
                                    _ADUTHH 003EE1                                      _ADUTHL 003EE0  
                        _PWM8_LoadDutyValue 2350                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                                    _ANSELD 003A70                                      _ANSELE 003A80  
                                    _ANSELF 003A90                          ?_UART2_tx_vect_isr 0001  
                                    _U1CON0 003DF2                                      _U1CON1 003DF3  
                                    _U1CON2 003DF4                                      _T3GATE 003FA8  
                                    _U1BRGH 003DF6                                      _U1FIFO 003DF7  
                                    _T3GCON 003FA7                                      _U2CON0 003DDA  
                                    _U2CON1 003DDB                                      _U1BRGL 003DF5  
                                    _U2CON2 003DDC                                      _U2BRGH 003DDE  
                                    _U2FIFO 003DDF                                      _U2BRGL 003DDD  
                                    _T5GATE 003F9C                                      _T5GCON 003F9B  
                                    _MAINPR 0039F2                                      _RC3PPS 003A13  
                                    _RD1PPS 003A19                                      i1l1021 E09A  
                                    _RB6PPS 003A0E                                      i1l1209 EF7E  
                      _start_switch_handler 2CBC                                      _RC5PPS 003A15  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      _RC6PPS 003A16  
                                    _ODCOND 003A72                                      _ODCONE 003A82  
                                    _ODCONF 003A92                     __end_of_TMR3_Initialize 227E  
                            __CFG_WDTCCS$SC 000000                                      _FVRCON 003EC1  
                          _mode_lamp_bright 2EC8                                      _SCANPR 0039F7  
                                    _IVTADH 00389E                                      _IVTADL 00389D  
                                    _IVTADU 00389F                __size_of_eaDogM_WriteCommand 000E  
                                    _OSCFRQ 0039DF                                      _NVMDAT 0039E3  
                      __size_of_hid_display 021C                            __end_of___xxtofl DC22  
     __end_of_ADCC_DischargeSampleCapacitor 2F4A      __size_of_ADCC_DischargeSampleCapacitor 0008  
             _ADCC_DischargeSampleCapacitor 2F42                    __end_of_send_lcd_cmd_dma 2D38  
                           _TMR3_WriteTimer 2492                         ??_UART2_tx_vect_isr 0006  
                 __end_of_UART2_rx_vect_isr 2B5C                  __size_of_SPI1_Exchange8bit 001E  
                    __size_of_DMA1_DMAA_ISR 000A                     __size_of___secs_to_zone 08A2  
                            __CFG_XINST$OFF 000000                           _CLKREF_Initialize 2F02  
                          _UART2_Initialize 1DAE                                      _WaitMs 262E  
                           _conv_raw_result 9180                                _CCPTMRS1bits 003F5F  
      __size_of_ADCC_SetADIInterruptHandler 0028                            __end_of_do_tzset C108  
                                    ___flge ED52                                      ___fleq 08DA  
                                    ___lmul 0662                                      ___omul F176  
                         _ADCC_ThresholdISR 1A84                              __CFG_STVREN$ON 000000  
                                    _crcObj 00E2                              _ringBufS_flush 1386  
                                    _efgtoa 1556                                      _getoff D1A0  
                                    _getint 039A                                      _floorf A644  
                         dac_spi_control@S0 00CB                           dac_spi_control@S1 00CA  
                         dac_spi_control@S2 00C9                           dac_spi_control@SB 00C7  
                         dac_spi_control@SC 00C8                          ?_ADCC_ThresholdISR 0001  
                                    _memset B32C                                      _pclock 00DA  
                      __size_of_help_button 0038                                      clear_0 0128  
                                    clear_1 013C                                      clear_2 014E  
                                    clear_3 015A                                      clear_4 0166  
                                    clear_5 0172                                      clear_6 017E  
                                    clear_7 018A                                      clear_8 0196  
                                    _t_mbmc 00BC                   __end_of_port_data_dma_ptr 2F16  
                    __size_of_read_cal_data 01CA                                      _printf 1CEA  
                        _eaDogM_WriteString 0F44                     __end_of_DATAEE_ReadByte 2766  
                                    _strcpy 0738                                   ?_ADCC_ISR 0001  
                                    _strlen 108E                          __size_of_TimerDone 0028  
                              __pdataBIGRAM 06FF                             _ADCC_Initialize 1A18  
                            _PMD_Initialize 2E32                  __size_of_update_adc_result 003A  
                 __end_of_UART2_tx_vect_isr 2B34                            __end_of_set_time 262E  
                                    lltemp0 002A                                      lltemp1 0032  
                                    lltemp2 003A                                      lltemp3 0042  
                       ??_ADCC_ThresholdISR 0001                      __end_of_start_adc_scan 1CEA  
                              __mediumconst F716                                      preinc2 003FDC  
                    __size_of_init_port_dma 0030                                      tblptrh 003FF7  
                                    tblptrl 003FF6                                      tblptru 003FF8  
                          __end_of_wdtdelay 1F20                            __end_of_spinners 039A  
                          __end_of_vfprintf 0E9A                                  _StartTimer 2412  
                        __size_of___asfladd 0078                                 localtime@tm 03DF  
             __size_of_INTERRUPT_Initialize 0066                     __end_of_TMR5_Initialize 2236  
                         _SYSTEM_Initialize 20C2                                  ___daylight 00B8  
                                __accesstop 0060                     __end_of__initialization 01A8  
                                 ?_INT0_ISR 0001                                   ?_INT1_ISR 0001  
                      __end_of_display_help 2F5A                        __end_of_display_info 2F52  
                 __end_of_CLKREF_Initialize 2F0C                               ___rparam_used 000001  
                __size_of_UART1_rx_vect_isr 0028                             _TMR5_WriteTimer 2452  
                     _set_temp_display_help 2E9A                            _clear_hid_pflags 1B56  
                     __end_of_TMR3_CallBack 2BEC                   __end_of_ADCC_ThresholdISR 1AEE  
                     __end_of_set_hist_flag 2F68                          __size_of_calc_bsoc 0A6E  
                    __end_of_ringBufS_flush 1418                              __pcstackCOMRAM 0001  
                                ___inthi_sp 132C                                  ___intlo_sp 1996  
                              __pidataBANK1 0FEA                                __pidataBANK2 0A5C  
                             __end_of___gmt F957                 __size_of_send_port_data_dma 0052  
                             __end_of_fabsf 0DEE                                   ?_TMR3_ISR 0001  
                                 ?_TMR5_ISR 0001                                   ?_TMR6_ISR 0001  
                          _DATAEE_WriteByte 1AEE                              ivt0x8_undefint 00AC  
                             __end_of_fputc FA54                               __end_of_fputs 1262  
                      _get_ac_charger_relay 2ED6                               __end_of_put2d FB6E  
                             __end_of_srand 2698                       __end_of_TMR5_CallBack 2BC8  
                             __end_of_putch 2D8E                        _set_ac_charger_relay 2EAA  
                   __end_of_PWM8_Initialize 2E1C                     __end_of_TMR6_Initialize 2902  
                         _adc_int_t_handler 16CC                      __end_of_PMD_Initialize 2E46  
                                __end_of_bp F953                                  ___timezone 0070  
                                ??_ADCC_ISR 0001                       __end_of_TMR6_CallBack 2C34  
                     __size_of_clear_switch 004E                 __size_of_EXT_INT_Initialize 0034  
                  calc_bsoc@log_update_wait 0050                      __size_of_calc_ror_data 0186  
                             _DMA1_DMAA_ISR 2F24                       TMR3_ISR@CountCallBack 00BE  
                            _clear_adc_scan 2F6E                          __size_of_hid_input 0138  
                        __end_of_CRC_IsBusy 2E9A                      __size_of_mode_lamp_dim 0018  
                          time@current_time 00D2                            _CRC_ReverseValue 080C  
                  _UART2_RxInterruptHandler 00AD                   __end_of_SYSTEM_Initialize 2110  
                           __CFG_PR1WAY$OFF 000000                             __CFG_IVT1WAY$ON 000000  
                   __end_of_TMR3_WriteTimer 24D2                                  __pbssBANK0 0060  
                                __pbssBANK1 01A4                                  __pbssBANK2 02BC  
                                __pbssBANK3 0300                                  __pbssBANK4 0400  
                                __pbssBANK5 0500                                  __pbssBANK6 0600  
                  __end_of_update_hist_data 184A                                  _check_help D80C  
                             _read_cal_data DC22                     __end_of_conv_raw_result 963C  
                        __size_of_esr_check 02D8                       _INT0_InterruptHandler 00B3  
                                ??_INT0_ISR 0001                                  ??_INT1_ISR 0007  
                     __end_of_days_in_month 1C86                           __end_of_TimerDone 2952  
                          _DMA1_DMADCNT_ISR 2F18                             _convert_dac_raw FB6E  
                        __size_of_init_bsoc 0246                  __size_of_UART2_rx_vect_isr 0028  
                                   IVTBASEH 003FD6                                     IVTBASEL 003FD5  
                                   IVTBASEU 003FD7                          __size_of_lp_filter 01BC  
                        __size_of_localtime 0016                               _init_port_dma 2766  
                     __end_of_wait_lcd_done 2C56                    __end_of_cal_current_zero 12F4  
          __end_of_TMR3_SetInterruptHandler 2A42                                _clear_switch 2074  
                           __CFG_PPS1WAY$ON 000000            __end_of_TMR6_SetInterruptHandler 29F2  
                                ??_TMR3_ISR 00E5                     __end_of_ADCC_Initialize 1A82  
                                ??_TMR5_ISR 000B                   __end_of_adc_int_t_handler 174E  
                                ??_TMR6_ISR 0006                           __end_of___asfladd 193C  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   _DMA1DSA 003BF0                                     _DMA2DSA 003BD0  
                                   _DMA1DSZ 003BEE                                     _DMA2DSZ 003BCE  
                                   _DMA1SSA 003BF9                                     _DMA2SSA 003BD9  
                        __size_of_set_dac_a 0034                          __size_of_set_dac_b 0034  
      __end_of_ADCC_SetADTIInterruptHandler 2ABA       __size_of_ADCC_SetADTIInterruptHandler 0028  
              _ADCC_SetADTIInterruptHandler 2A92                                     _DMA1SSZ 003BF7  
                                   _DMA2SSZ 003BD7                  __size_of_port_data_dma_ptr 000A  
                                   _ADSTPTH 003EE5                                     _ADSTPTL 003EE4  
                                   _CRCACCH 003963                                     _CRCACCL 003962  
                   __size_of_load_hist_data 025A                                     _CRCDATH 003961  
                                   _CRCDATL 003960                           _UART1_Receive_ISR 2C9A  
                                   _CRCCON0 003968                                     _CRCCON1 003969  
                                   _CLKRCLK 003CE6                                     _CLKRCON 003CE5  
                    __end_of_clear_adc_scan 2F74                                     _CRCXORH 003967  
                                   _CRCXORL 003966                                     u1222_20 A406  
                            ?_DMA1_DMAA_ISR 0001                            _DMA1_DMASCNT_ISR 2EF4  
                                   _U1ERRIE 003DFA                          __size_of_set_vterm 001E  
                                   _U1ERRIR 003DF9                                     u1245_20 2EE0  
                                   u1332_48 2C20                                     u1324_48 2BFC  
                                   _U2ERRIE 003DE2                                     u1182_25 2EB4  
                                   u1182_26 2EB6                                     u1326_28 2B90  
                                   _U2ERRIR 003DE1                                     u1256_20 25C8  
                                   u1335_28 2BB4                                     u1256_26 25CA  
                                   u1290_28 F594                                     u1292_20 F5AE  
                                   u1292_21 F5A8                                     u1296_24 F694  
                                   u1296_25 F690                                     u1392_44 1734  
                                   u1392_45 172E                           _CRC_8BitDataWrite 2E46  
                                   _INT0PPS 003AC0                         __CFG_PWRTS$PWRT_OFF 000000  
                                   _INT1PPS 003AC1                                ?_Default_ISR 0001  
                __size_of_UART2_tx_vect_isr 0028                                     u1687_20 5A40  
                                   u1694_28 2BD8                                     u1689_20 5B0A  
                                   _U1RXPPS 003AE5                                     _U2RXPPS 003AE8  
                           _dac_spi_control 184A                                     _OSCCON1 0039D9  
                                   _OSCCON3 0039DB                                     _IVTLOCK 003FD4  
                        __size_of_vfpfcnvrt 0FAC                                     _SPI1CLK 003D1C  
                                   _SPI1RXB 003D10                                     _NVMADRH 0039E1  
                                   _NVMADRL 0039E0                           __end_of_calc_bsoc 5E3A  
                                   _SPI1TXB 003D11                                     _OSCTUNE 0039DE  
                                   _NVMCON2 0039E6                                     _PWM8DCH 003F61  
                                   _PWM8DCL 003F60                                     _PWM8CON 003F62  
                                   _SLRCONA 003A43                                     _SLRCONB 003A53  
                                   _SLRCONC 003A63                                     _SLRCOND 003A73  
                                   _SLRCONE 003A83                                     _SLRCONF 003A93  
                        __size_of_zi_read32 00F6                                  _get_switch 2854  
                        __size_of_start_lcd 0006                     __size_of___year_to_secs 0972  
                   __end_of_TMR5_WriteTimer 2492                     __size_of_switch_handler 0142  
                        __size_of_stop_bsoc 0006                  __end_of_set_load_relay_one 2E8A  
                __end_of_set_load_relay_two 2E7A           __size_of_INT0_SetInterruptHandler 0028  
                __size_of_CLKREF_Initialize 000A                               _calc_ror_data E602  
                            ___secs_to_zone 67AC                     __size_of_DMA1_DMAOR_ISR 000A  
                                   __Hparam 0000                  __size_of_ADCC_ThresholdISR 006A  
                             _mode_lamp_dim 2DAA                                     __Lparam 0000  
                  __end_of_UART1_Initialize 21EE                           __end_of_hid_input F930  
                           __size_of_WaitMs 0036                                     ___aldiv E2E0  
                           __size_of___flge 0162                             __size_of___fleq 00C4  
                                   ___aodiv C388                                     ___almod EBEC  
                                   ___fladd 7878                                     ___aomod CF60  
                                   ___fldiv 86F0                                     ___awdiv F428  
                                   ___flneg 215E                             __size_of___lmul 00D6  
                                   ___awmod FC86                             __size_of___omul 015A  
                                   ___lbmod 1130                                     ___flmul 704E  
                                   ___flsub 230A                                     ___fltol EA7A  
                                   ___lodiv E788                                     ___lomod F6B8  
                 __end_of_UART1_Receive_ISR 2CBC                             __size_of_efgtoa 1244  
                           __size_of_getoff 0230                             __size_of_getint 00F2  
                           __size_of_floorf 036C                        __end_of_init_display 0662  
                                   __pcinit 00B6                    __end_of_mode_lamp_bright 2ED6  
                           __size_of_memset 02EC                    __size_of_adc_int_handler 0002  
                       _eaDogM_WriteCommand 2EBA                                     __ramtop 2000  
                 __end_of_CRC_8BitDataWrite 2E58                                     __ptext0 0000  
                                   __ptext1 17CE                                     __ptext2 1F7A  
                                   __ptext3 1E6C                                     __ptext4 2CBC  
                                   __ptext5 2664                                     __ptext6 25F8  
                                   __ptext7 2F62                                     __ptext8 2698  
                                   __ptext9 26CC                           __end_of_esr_check BBCA  
                         _UART2_Receive_ISR 2CDC                                     _asctime 8C6A  
                           __size_of_printf 0062                                     _getname B030  
                           __CFG_WRTAPP$OFF 000000                             __size_of_strcpy 00D4  
                           __size_of_strlen 00A2                                     _getrule C108  
                                   _dst_off 00B6                       _OSCILLATOR_Initialize 2E1C  
                              __size_of_abs 0046                                __size_of_pad 0114  
                         __end_of_init_bsoc CD1C                                     _isalpha FFBC  
                                   _isdigit 27F6                                     us840999 D18E  
                                   us817999 F2BA                                     _ivln2_h F957  
                                   us930999 F7E8                                     us829999 C5F2  
                                   us925999 E8F2                                   _T3CONbits 003FA6  
                                   _mode_sw 00CC                           __end_of_lp_filter DFA8  
                         __end_of_localtime 2DF0                                     _islower 2796  
                                   _isspace 1FD0                             __CFG_WRTSAF$OFF 000000  
                                _scan_trans 2512                                   _T5CONbits 003F9A  
                                   _set_dac 0C8A                    __end_of_UART2_Initialize 1E0E  
                                   _isupper 27C6                                   _CRC_Start 2F68  
                                _old_tz_buf 03A4                  __size_of_SYSTEM_Initialize 004E  
                                   _sprintf FEB2                                     _tolower 1648  
                     __size_of_display_help 0008                                     _utctime 01D7  
                   __end_of_convert_dac_raw FC86                       __size_of_display_info 0008  
                                   _strncmp D3D0                                     _toupper 15C4  
                      end_of_initialization 01A8                   __size_of_convert_adc_data 00B8  
                                 _SCANHADRH 00397A                                   _SCANHADRL 003979  
                                 _SCANHADRU 00397B                                   _SCANLADRH 003977  
                                 _SCANLADRL 003976                          _check_enter_button 193C  
                                 _SCANLADRU 003978                           __end_of_set_dac_a 2700  
                         __end_of_set_dac_b 26CC                      __end_of___secs_to_zone 704E  
                                 i1u1722_20 EF74         __end_of_UART2_SetRxInterruptHandler 29A2  
               _UART2_SetRxInterruptHandler 297A                                   i2u1401_48 2B20  
                                 i2u1403_48 2B48                     check_day_time@day_delay 0051  
                         __end_of_set_vterm 2D56                                   i2u1395_48 2898  
                                 i2u1397_48 1ABA                                   i2u1397_49 1ACE  
                                 i2u1399_48 2AF8                           __end_of_vfpfcnvrt 4818  
                                 _SPI1TCNTL 003D12                                     postdec0 003FED  
                                   postdec1 003FE5                                     postdec2 003FDD  
                                   postinc0 003FEE                                     postinc1 003FE6  
                                   postinc2 003FDE                           __end_of_zi_read32 02A4  
                __size_of_adc_int_t_handler 0082                         __size_of_StartTimer 0040  
                         __end_of_start_lcd 2F80                   __end_of_UART2_Receive_ISR 2CFC  
                            wdtdelay@dcount 0090                     __end_of_dac_spi_control 18C4  
               __size_of_current_sensor_cal 0BB4                       __CFG_WDTCPS$WDTCPS_31 000000  
                           ??_DMA1_DMAA_ISR 0007                       _INT1_InterruptHandler 00B0  
                                 _PORTBbits 003FCB                           __end_of_stop_bsoc 2F86  
                                 _PORTDbits 003FCD                    _TMR3_SetInterruptHandler 2A1A  
                                 _PORTFbits 003FCF                    _TMR6_SetInterruptHandler 29CA  
                              _display_help 2F52                       _TMR5_InterruptHandler 009B  
                              _display_info 2F4A        __size_of_UART2_SetTxInterruptHandler 0028  
                  __end_of_clear_hid_pflags 1BBC                           __size_of_ADCC_ISR 002C  
       __end_of_ADCC_SetADIInterruptHandler 2AE2                 _ADCC_SetADIInterruptHandler 2ABA  
                                asctime@buf 03C4                                  _update_lcd F016  
                           _calc_model_data 9ABC                      __size_of_ringBufS_init 0028  
                          __CFG_FEXTOSC$ECH 000000                                  _static_soc 1E6C  
                  __end_of_DATAEE_WriteByte 1B56                             _DMA1_Initialize 19AE  
                       __end_of_check_range 17CE                                  _start_bsoc 2C78  
                  __size_of___month_to_secs 00EC                      __size_of_send_lcd_data 0024  
                           _SPI1_Initialize 2DF0                       __end_of_get_vterm_ptr 2854  
                         __size_of_INT0_ISR 000E                           __size_of_INT1_ISR 003E  
                  __size_of_display_history 02DA                    __end_of_CRC_ReverseValue 08DA  
                            __end_of_WaitMs 2664                __end_of_INTERRUPT_Initialize 1C22  
                                _vterm_dump E474                              __end_of___flge EEB4  
                            __end_of___fleq 099E                             _cal_current_10A 099E  
      __end_of_INT0_DefaultInterruptHandler 2F94       __size_of_INT0_DefaultInterruptHandler 0002  
              _INT0_DefaultInterruptHandler 2F92                  __size_of_UART1_Receive_ISR 0022  
                           _DMA2_Initialize 1F20                              __end_of___lmul 0738  
                            __end_of___omul F2D0                               __pidataBIGRAM A9B0  
                            _load_hist_data C87C                              __end_of_efgtoa 279A  
                __size_of_CRC_8BitDataWrite 0012                           __size_of_TMR3_ISR 0162  
                            __end_of_getoff D3D0                           __size_of_TMR5_ISR 01A2  
                            __end_of_getint 048C                           __size_of_TMR6_ISR 001A  
                       __size_of_check_help 0212                              __end_of_floorf A9B0  
               __size_of_UART2_Transmit_ISR 002C                                  floorf@F524 0074  
                            __end_of_memset B618  __end_of___month_to_secs@secs_through_month F817  
        ___month_to_secs@secs_through_month F7E7                              __end_of_printf 1D4C  
                  __end_of_DMA1_DMADCNT_ISR 2F22                 __size_of_PWM8_LoadDutyValue 0042  
                     __end_of_INT0_CallBack 2C10                              __end_of_strcpy 080C  
                            __end_of_strlen 1130                         start_initialization 00B6  
                   __size_of_write_cal_data 0158        __end_of_TMR5_DefaultInterruptHandler 25F8  
     __size_of_TMR5_DefaultInterruptHandler 0038                _TMR5_DefaultInterruptHandler 25C0  
           __size_of_PIN_MANAGER_Initialize 0092                                 __end_of_abs 230A  
                     __end_of_INT1_CallBack 2BA4                   __size_of_set_display_info 001E  
                               __end_of_pad FEB2                        __size_of_Default_ISR 0006  
                   __size_of_CRC_Initialize 0092                              ___year_to_secs 5E3A  
                      __end_of_send_lcd_cmd 2412                              _switch_handler F576  
             __size_of_ADCC_StartConversion 0012                                  ivt0x8_base 0008  
                             _uart1RxBuffer 02D6                       __end_of___fpclassifyf E2E0  
                             _uart2RxBuffer 0600                    __end_of_DMA1_DMASCNT_ISR 2F02  
                             _uart2TxBuffer 0400                              _DMA1_DMAOR_ISR 2F30  
                       __end_of_hid_display D80C                  __end_of_send_port_data_dma 2074  
                          __CFG_LPBOREN$OFF 000000                       __size_of_init_display 00EA  
               __size_of_eaDogM_WriteString 00A6             __end_of_CRC_CalculatedResultGet EA7A  
                                 _TimerDone 292A                               _ringBufS_init 2902  
                    __end_of_load_hist_data CAD6                                 __pdataBANK1 0100  
                               __pdataBANK2 0200                  __size_of_UART2_Receive_ISR 0020  
                       __size_of_get_switch 002C                  __end_of_EXT_INT_Initialize 2734  
                  __size_of_update_cal_data 0056                     __end_of_calc_model_data 9F16  
                             _send_lcd_data 2B5C                         __end_of_help_button 25C0  
           __end_of_eaDogM_WriteStringAtPos 1386                         __end_of_BVSOC_TABLE F7E7  
                                 ___asfladd 18C4                        calc_model_data@bcror 0088  
                               __pbssBIGRAM 0A3F                     __end_of_DMA1_Initialize 1A18  
                      calc_model_data@bvror 008C                                 __pbssCOMRAM 004A  
                               _check_range 174E            __end_of_INT0_SetInterruptHandler 2A92  
                    __end_of___year_to_secs 67AC                               __pcstackBANK0 00E5  
                  __size_of_TMR2_Initialize 0018                      __size_of_TMR3_CallBack 0024  
                    __end_of_switch_handler F6B8                                 _CRCCON0bits 003968  
                               _CRCCON1bits 003969                      __size_of_set_hist_flag 0006  
                         __size_of___xxtofl 0204                     __end_of_SPI1_Initialize 2E06  
                  _UART1_RxInterruptHandler 00A7                    _UART2_TxInterruptHandler 00AA  
                                 __end_of_T F8D3                            _convert_adc_data 0BD2  
                                 _calc_bsoc 53CC                   __size_of_ringBufS_put_dma 00AA  
                              _init_display 0578                      __end_of_DMA1_DMAOR_ISR 2F3A  
                    __size_of_TMR5_CallBack 0024                           __size_of_do_tzset 0280  
                     _TMR6_InterruptHandler 009E                          calc_ror_data@bcror 0080  
                    __size_of_TMR6_CallBack 0024                     __end_of_cal_current_10A 0A5C  
                   __end_of_DMA2_Initialize 1F7A                          calc_ror_data@bvror 0084  
                    _PIN_MANAGER_Initialize 1418                       __end_of___localtime_r CF60  
                  __size_of_TMR3_Initialize 0048                        __end_of_wait_lcd_set 2F7A  
                       __size_of_scan_trans 003C                               __pmediumconst F716  
                                 __ptext100 ACF0                                   __ptext101 F6B8  
                                 __ptext110 E14A                                   __ptext102 E788  
                                 __ptext111 EA7A                                   __ptext103 D3D0  
                                 __ptext200 2BC8                                   __ptext120 153C  
                                 __ptext112 215E                                   __ptext104 BBCA  
                                 __ptext201 2F90                                   __ptext121 FD9E  
                                 __ptext113 08DA                                   __ptext105 1556  
                                 __ptext210 2880                                   __ptext202 53CC  
                                 __ptext130 2D38                                   __ptext122 108E  
                                 __ptext114 FC86                                   __ptext106 1648  
                                 __ptext211 16CC                                   __ptext203 2022  
                                 __ptext131 2E9A                                   __ptext123 11CA  
                                 __ptext115 F428                                   __ptext107 27C6  
                                 __ptext220 2CDC                                   __ptext212 2F94  
                                 __ptext204 2F0C                                   __ptext140 2F52  
                                 __ptext132 2D56                                   __ptext124 F930  
                                 __ptext116 963C                                   __ptext108 0738  
                                 __ptext221 2D90                                   __ptext213 2F96  
                                 __ptext205 18C4                                   __ptext141 193C  
                                 __ptext133 2DAA                                   __ptext125 2D74  
                                 __ptext117 22C4                                   __ptext109 A644  
                                 __ptext222 2C10                                   __ptext214 1A84  
                                 __ptext206 2EE4                                   __ptext150 9ABC  
                                 __ptext142 E602                                   __ptext134 2EC8  
                                 __ptext126 0E9A                                   __ptext118 CF60  
                                 __ptext223 2110                                   __ptext215 2AE4  
                                 __ptext207 2BEC                                   __ptext151 2F80  
                                 __ptext143 0D40                                   __ptext135 2350  
                                 __ptext127 C608                                   __ptext119 C388  
                                 __ptext224 2EF4                                   __ptext216 2C9A  
                                 __ptext208 2F92                                   __ptext160 297A  
                                 __ptext152 2C78                                   __ptext144 9180  
                                 __ptext136 2588                                   __ptext128 1FD0  
                                 __ptext225 2F18                                   __ptext217 2B0C  
                                 __ptext209 2F88                                   __ptext161 21A6  
                                 __ptext153 DDEC                                   __ptext145 1D4C  
                                 __ptext137 292A                                   __ptext129 27F6  
                                 __ptext226 2F24                                   __ptext218 28AC  
                                 __ptext170 2DF0                                   __ptext162 29A2  
                                 __ptext154 230A                                   __ptext146 2C56  
                                 __ptext138 2412                                   __ptext227 2F30  
                                 __ptext219 2B34                                   __ptext171 2E06  
                                 __ptext163 28D8                                   __ptext155 7878  
                                 __ptext147 DA1E                                   __ptext139 2F4A  
                                 __ptext228 0000                                   __ptext180 1F20  
                                 __ptext172 2E32                                   __ptext164 29CA  
                                 __ptext156 704E                                   __ptext148 86F0  
                                 __ptext181 19AE                                   __ptext173 1418  
                                 __ptext165 21EE                                   __ptext157 20C2  
                                 __ptext149 ED52                                   __ptext190 F576  
                                 __ptext182 14AA                                   __ptext174 2E1C  
                                 __ptext166 29F2                                   __ptext158 1DAE  
                                 __ptext191 DFA8                                   __ptext183 2F02  
                                 __ptext175 1BBC                                   __ptext167 2236  
                                 __ptext159 2952                                   __ptext192 2452  
                                 __ptext184 1A18                                   __ptext176 2F5A  
                                 __ptext168 2A1A                                   __ptext193 2BA4  
                                 __ptext185 2A92                                   __ptext177 2700  
                                 __ptext169 2DC2                                   __ptext194 25C0  
                                 __ptext186 2ABA                                   __ptext178 2A42  
                                 __ptext195 A2D0                                   __ptext187 24D4  
                                 __ptext179 2A6A                                   __ptext196 2EAA  
                                 __ptext188 2B80                                   __ptext197 2ED6  
                                 __ptext189 2F8E                                   __ptext198 EEB4  
                                 __ptext199 2492                           __size_of_set_time 0036  
                                 _hid_input F7F8                          __end_of_StartTimer 2452  
                        _set_load_relay_one 2E7A                          _set_load_relay_two 2E6A  
                         __size_of_wdtdelay 005A                           __size_of_spinners 00F6  
                         __size_of_vfprintf 00AC                                    _ADCC_ISR 2880  
                    __CFG_BBSIZE$BBSIZE_512 000000                                   fabsf@F463 0078  
                    __size_of_days_in_month 0064                                    _DMA1CON0 003BFC  
                                  _DMA1CON1 003BFD                                    _DMA1AIRQ 003BFE  
                                  _DMA2CON0 003BDC                                    _DMA2CON1 003BDD  
                                  _DMA2AIRQ 003BDE                                    _DMA1SIRQ 003BFF  
                                  _DMA2SIRQ 003BDF                                   _esr_check B8F2  
                   __size_of_get_raw_result 0022                              __size_of_fabsf 00AE  
                                 _init_bsoc CAD6                      __size_of_wait_lcd_done 0022  
                            __size_of_fputc 0124                                    _T2CLKCON 003FAE  
                            __size_of_fputs 0098                    __size_of_DATAEE_ReadByte 0032  
                            __size_of_put2d 011A                                   _lp_filter DDEC  
                                 _localtime 2DDA                                 _hid_display D5F0  
                            __size_of_srand 0034                              __size_of_putch 001A  
                      _INTERRUPT_Initialize 1BBC                                    _T6CLKCON 003F96  
             __size_of_start_switch_handler 0020                             ?_DMA1_DMAOR_ISR 0001  
                                  _INT0_ISR 2EE4                                    _INT1_ISR 24D4  
                                  _LATCbits 003FBC                                    _LATDbits 003FBD  
                                  _LATEbits 003FBE                                    _LATFbits 003FBF  
         __size_of_INT1_SetInterruptHandler 0028                                    _SCANCON0 00397C  
                                  _IPR1bits 003981                                    _IPR2bits 003982  
                                  _PIE1bits 003991                                    _IPR3bits 003983  
                                  _SCANTRIG 00397D                                    _PIE2bits 003992  
                                  _IPR5bits 003985                                    _PIE3bits 003993  
                                 _tickCount 02BC                                    _IPR6bits 003986  
                                  _PIE5bits 003995                                    _IPR8bits 003988  
                                  _PIE6bits 003996                                    _IPR9bits 003989  
                                  _PIE8bits 003998                         __CFG_BORV$VBOR_2P45 000000  
                                  _PIE9bits 003999                                _SPI1CON0bits 003D14  
                              _SPI1CON1bits 003D15                                   _set_dac_a 26CC  
                                 _set_dac_b 2698                                   _ring_buf1 0543  
                                 _ring_buf2 0500                                    _PIR0bits 0039A0  
                                  _PIR1bits 0039A1                                    _PIR2bits 0039A2  
                                  _SPI1BAUD 003D19                                    _PIR4bits 0039A4  
                                  _SPI1CON0 003D14                                    _SPI1CON1 003D15  
                                  _SPI1CON2 003D16                               _TMR3_CallBack 2BC8  
                                  _PIR5bits 0039A5                                    _PIR6bits 0039A6  
                                  _PIR8bits 0039A8                                    _PIR9bits 0039A9  
                  __size_of_TMR5_Initialize 0048                               _set_hist_flag 2F62  
                                 _set_vterm 2D38                         __size_of_update_lcd 0160  
                               _help_button 2588                                    _TMR3_ISR EEB4  
                               _BVSOC_TABLE F717                                    _TMR5_ISR DFA8  
                                  _TMR6_ISR 2D90          __end_of___secs_to_tm@days_in_month F823  
                ___secs_to_tm@days_in_month F817                                   _port_data 06FF  
                       __size_of_static_soc 005A                                   _vfpfcnvrt 386C  
                              _SPI1INTFbits 003D1A                         __size_of_start_bsoc 0022  
                             _TMR5_CallBack 2BA4                                  _ADCON0bits 003EF8  
                                 _zi_read32 01AE                          __end_of_check_help DA1E  
                                 _start_lcd 2F7A                     __size_of_FVR_Initialize 0008  
                 __size_of_send_lcd_cmd_dma 001E                               _TMR6_CallBack 2C10  
                            _write_cal_data F2D0                       __size_of_send_lcd_cmd 0040  
         __size_of_TMR5_SetInterruptHandler 0028                                   _stop_bsoc 2F80  
                          _set_display_info 2D56                    __size_of_PWM8_Initialize 0016  
                  __size_of_TMR6_Initialize 002A                              _CRC_Initialize 14AA  
                               _INTCON0bits 003FD2                                   copy_data0 00CA  
                                 copy_data1 00F0                                   copy_data2 0112  
          __size_of_CRC_CalculatedResultGet 0172                    _INT0_SetInterruptHandler 2A6A  
                       __size_of_vterm_dump 018E         __end_of_UART2_SetTxInterruptHandler 297A  
               _UART2_SetTxInterruptHandler 2952                               _days_in_month 1C22  
                              _uart1RxCount 00D0                                _uart2RxCount 00CD  
                                  __Hrparam 0000            __size_of_eaDogM_WriteStringAtPos 0092  
                   __CFG_RSTOSC$EXTOSC_4PLL 000000                    __size_of_TMR3_WriteTimer 0040  
                                  __Lrparam 0000                     __size_of_check_adc_scan 0008  
                        __CFG_BOREN$SBORDIS 000000                  __end_of_current_sensor_cal 53CC  
                  __size_of_conv_raw_result 04BC                               _wait_lcd_done 2C34  
                              _send_lcd_cmd 23D2                            __size_of___aldiv 0194  
                          __size_of___aodiv 0280                            __size_of___almod 0166  
                          __size_of___fladd 07BC               __size_of_get_ac_charger_relay 000E  
                          __size_of___aomod 0240                             _adc_int_handler 2F96  
                          __size_of___fldiv 057A                            __size_of___awdiv 014E  
                          __size_of___flneg 0048                            __size_of___awmod 0118  
                          __size_of___lbmod 009A                            __size_of___flmul 082A  
                          __size_of___flsub 0046                            __size_of___fltol 0172  
                          __size_of___lodiv 0180                            __size_of___lomod 0140  
             __size_of_set_ac_charger_relay 0010                          __end_of_get_switch 2880  
                      __end_of_rule_to_secs 86F0                     __size_of_check_day_time 0374  
                    __end_of_write_cal_data F428                       __end_of_DMA1_DMAA_ISR 2F2E  
                        ___fpclassifyf@F463 007C        __size_of_UART1_SetRxInterruptHandler 0028  
                          __size_of_asctime 0516                                    ___tzname 006C  
                          __size_of_getname 02FC                             lp_filter@smooth 0300  
                                  ___xxtofl DA1E                      __end_of_CRC_Initialize 153C  
                         ?_DMA1_DMADCNT_ISR 0001                            __size_of_getrule 0280  
               __size_of_check_enter_button 0072                    __size_of_ADCC_Initialize 006A  
               __end_of_eaDogM_WriteCommand 2EC8                            __size_of_isalpha 0044  
                          __size_of_isdigit 0030                                    __pivt0x8 0008  
                          __size_of_islower 0030                            __size_of_isspace 0052  
                        ??_DMA1_DMADCNT_ISR 0007                            __size_of_set_dac 00B6  
                                  __ptext10 FB6E                                    __ptext11 0C8A  
                                  __ptext20 23D2                                    __ptext12 184A  
                                  __ptext21 2CFC                                    __ptext13 DC22  
                                  __ptext30 2E6A                                    __ptext22 2902  
                                  __ptext14 2734                                    __ptext31 2E7A  
                                  __ptext23 CAD6                                    __ptext15 C87C  
                                  __ptext40 8034                                    __ptext32 2EBA  
                                  __ptext24 0B18                                    __ptext16 2766  
                                  __ptext41 1C22                                    __ptext33 B618  
                                  __ptext25 D5F0                                    __ptext17 0578  
                                  __ptext50 F176                                    __ptext42 5E3A  
                                  __ptext34 1E0E                                    __ptext26 F7F8  
                                  __ptext18 2B5C                                    __ptext51 0662  
                                  __ptext43 048C                                    __ptext35 2DDA  
                                  __ptext27 B8F2                                    __ptext19 2392  
                                  __ptext60 2F68                                    __ptext52 EBEC  
                                  __ptext44 BE88                                    __ptext36 CD1C  
                                  __ptext28 254E                                    __ptext61 2E8A  
                                  __ptext53 E2E0                                    __ptext45 C108  
                                  __ptext37 67AC                                    __ptext29 2F3A  
                                  __ptext70 2074                                    __ptext62 E908  
                                  __ptext54 8C6A                                    __ptext46 D1A0  
                                  __ptext38 2512                                    __ptext71 2F6E  
                                  __ptext63 080C                                    __ptext55 FA54  
                                  __ptext47 039A                                    __ptext39 01AE  
                                  __ptext80 2826                                    __ptext72 1262  
                                  __ptext64 2E46                                    __ptext56 1130  
                                  __ptext48 B030                                    __ptext81 262E  
                                  __ptext73 099E                                    __ptext65 1C86  
                                  __ptext57 4818                                    __ptext49 279A  
                                  __ptext90 2F7A                                    __ptext82 F016  
                                  __ptext74 174E                                    __ptext66 2E58  
                                  __ptext58 F2D0                                    __ptext91 1386  
                                  __ptext83 12F4                                    __ptext75 0BD2  
                                  __ptext67 2F42                                    __ptext59 1AEE  
                                  __ptext92 B32C                                    __ptext84 2D1A  
                                  __ptext76 1B56                                    __ptext68 02A4  
                                  __ptext93 1CEA                                    __ptext85 2C34  
                                  __ptext77 D80C                                    __ptext69 2854  
                                  __ptext94 0DEE                                    __ptext86 1EC6  
                                  __ptext78 E474                                    __ptext95 386C  
                                  __ptext87 227E                                    __ptext79 FEB2  
                                  __ptext96 9F16                                    __ptext88 0F44  
                                  __ptext97 15C4                                    __ptext89 2F74  
                                  __ptext98 2796                                    __ptext99 FFBC  
                          __size_of_isupper 0030                                    _do_tzset BE88  
                     __end_of_read_cal_data DDEC                            __size_of_sprintf 010A  
                          __size_of_tolower 0084                                    us1180999 1E5E  
                                  us1470999 9656                                    us1551999 AD56  
                          __size_of_strncmp 0220                            __size_of_toupper 0084  
                                  us1560999 9F96                                    us1539999 BBDC  
                                  us1628999 86DA                            _ringBufS_put_dma 0E9A  
                                  _dst_name 01EF                        __end_of_Volts_to_SOC 0BD2  
                             __size_of_atoi 0274                               __size_of_ctoa 0088  
                             __size_of_main 1556                               __size_of_dtoa 0480  
                             __size_of_nanf 0062                       __size_of_wait_lcd_set 0006  
                             __size_of_time 005E                               __size_of_stoa 02BE  
                             __size_of_utoa 0340                               __size_of_xtoa 03BA  
                       dac_spi_control@init 0052                                  _CRC_IsBusy 2E8A  
                      __CFG_WDTCWS$WDTCWS_7 000000                           ?_DMA1_DMASCNT_ISR 0001  
                     __end_of_init_port_dma 2796                                 _IVTLOCKbits 003FD4  
                      __end_of___secs_to_tm 386C                    __size_of_TMR5_WriteTimer 0040  
                                  _set_time 25F8                   _ADCC_ADI_InterruptHandler 00A4  
                                 stoa@F1166 0200                          ??_DMA1_DMASCNT_ISR 0007  
              __end_of_ADCC_StartConversion 2E6A                          __end_of_scan_trans 254E  
                                  _spi_link 0060                                    _std_name 01F6  
                                  _wdtdelay 1EC6                  __end_of_UART2_Transmit_ISR 28D8  
                                  _spinners 02A4                                    _vfprintf 0DEE  
                  __end_of_convert_adc_data 0C8A                   __size_of_update_hist_data 007C  
                __end_of_PWM8_LoadDutyValue 2392        __end_of_TMR3_DefaultInterruptHandler 2F92  
     __size_of_TMR3_DefaultInterruptHandler 0002                _TMR3_DefaultInterruptHandler 2F90  
      __end_of_INT1_DefaultInterruptHandler 2F90       __size_of_INT1_DefaultInterruptHandler 0002  
              _INT1_DefaultInterruptHandler 2F8E                          _send_port_data_dma 2022  
                             ??_Default_ISR 0001                                 _uart1RxHead 0057  
                    __size_of_get_vterm_ptr 002E                                 _uart2RxHead 0054  
                               _uart1RxTail 00D1                              _get_raw_result 2C56  
                               _NVMCON1bits 0039E5                                 _uart2TxHead 00CF  
                               _uart2RxTail 00CE                                   spinners@s 01CD  
                               _uart2TxTail 0056                   __size_of_cal_current_zero 0092  
                              _wait_lcd_set 2F74                          _EXT_INT_Initialize 2700  
      __end_of_TMR6_DefaultInterruptHandler 215E       __size_of_TMR6_DefaultInterruptHandler 004E  
              _TMR6_DefaultInterruptHandler 2110                           _send_lcd_data_dma 227E  
      __end_of_ADCC_DefaultInterruptHandler 2F96       __size_of_ADCC_DefaultInterruptHandler 0002  
              _ADCC_DefaultInterruptHandler 2F94                                    intlevel1 0000  
                                  intlevel2 0000                             ___month_to_secs 048C  
                         _send_lcd_cmd_long 2392              __size_of_set_temp_display_help 0010  
             __end_of_set_temp_display_help 2EAA                       __end_of_calc_ror_data E788  
                         __CFG_CLKOUTEN$OFF 000000                  __end_of_eaDogM_WriteString 0FEA  
                     __end_of_mode_lamp_dim 2DC2                     __end_of_adc_int_handler 2F98  
                  __size_of_convert_dac_raw 0118                             _display_history B618  
                    __size_of_INT0_CallBack 0024                                  _SPI1SCKPPS 003ADE  
                                _SPI1SDIPPS 003ADF                      __size_of_INT1_CallBack 0024  
                        __end_of_update_lcd F176                      _uart2TxBufferRemaining 0055  
                        __end_of_static_soc 1EC6                          __end_of_start_bsoc 2C9A  
                            _FVR_Initialize 2F5A                      __end_of_get_raw_result 2C78  
                          _send_lcd_cmd_dma 2D1A                      __size_of___fpclassifyf 0196  
                     TMR5_ISR@CountCallBack 00C2            __end_of_INT1_SetInterruptHandler 2A6A  
                 __size_of_UART1_Initialize 0048                    __size_of_dac_spi_control 007A  
                 __end_of_send_lcd_data_dma 22C4                            ??_DMA1_DMAOR_ISR 0007  
                   _CRC_CalculatedResultGet E908                   __end_of_send_lcd_cmd_long 23D2  
                   __size_of_start_adc_scan 0064                         __end_of_Default_ISR 2F8E  
            __end_of_PIN_MANAGER_Initialize 14AA                   __size_of_mode_lamp_bright 000E  
                        __end_of_vterm_dump E602                     _eaDogM_WriteStringAtPos 12F4  
                             _get_vterm_ptr 2826                              _check_adc_scan 2F3A  
                 __size_of_UART2_Initialize 0060                       __size_of_rule_to_secs 06BC  
