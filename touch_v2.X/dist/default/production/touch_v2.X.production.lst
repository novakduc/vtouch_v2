

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 11 00:22:57 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=4,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=4,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=4,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=4,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=4,class=CODE,delta=1
   175                           	psect	text150,global,reloc=4,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=4,class=CODE,delta=1
   180                           	psect	text155,global,reloc=4,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=4,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=4,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=4,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=4,class=CODE,delta=1
   190                           	psect	text165,global,reloc=4,class=CODE,delta=1
   191                           	psect	text166,global,reloc=4,class=CODE,delta=1
   192                           	psect	text167,global,reloc=4,class=CODE,delta=1
   193                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   194                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   195                           	psect	text168,global,reloc=4,class=CODE,delta=1
   196                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   197                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   198  0000                     
   199                           ; Version 2.10
   200                           ; Generated 31/07/2019 GMT
   201                           ; 
   202                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   203                           ; All rights reserved.
   204                           ; 
   205                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   206                           ; 
   207                           ; Redistribution and use in source and binary forms, with or without modification, are
   208                           ; permitted provided that the following conditions are met:
   209                           ; 
   210                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   211                           ;        conditions and the following disclaimer.
   212                           ; 
   213                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   214                           ;        of conditions and the following disclaimer in the documentation and/or other
   215                           ;        materials provided with the distribution.
   216                           ; 
   217                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   218                           ;        software without specific prior written permission.
   219                           ; 
   220                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   221                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   222                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   223                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   224                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   225                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   226                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   227                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   228                           ; 
   229                           ; 
   230                           ; Code-generator required, PIC18F57K42 Definitions
   231                           ; 
   232                           ; SFR Addresses
   233  0000                     
   234 ;;_k	offset	0
   235 ;;_j	offset	1
   236 ;;_i	offset	2
   237 ;;_inp_index	offset	3
   238 ;;_mode	offset	4
   239 ;;_channel	offset=-1 (param)
   240 ;;_s	offset=-2 (param)
   241 ;;_cmd	offset=-1 (param)
   242 ;;_cmd	offset=-1 (param)
   243 ;;_data	offset=-1 (param)
   244 ;;__this	offset=-2 (param)
   245 ;;_cvoltage	offset=-4 (param)
   246 ;;_h	offset=-1 (param)
   247 ;;_h	offset=-1 (param)
   248 ;;_i	offset=-1 (param)
   249 ;;_cmd	offset=-1 (param)
   250 ;;_i	offset	0
   251 ;;_chan	offset=-1 (param)
   252 ;;_to_what	offset=-2 (param)
   253 ;;_u	offset	0
   254 ;;_s	offset=-2 (param)
   255 ;;_index	offset=-1 (param)
   256 ;;_arg	offset	0
   257 ;;_exp	offset	4
   258 ;;_sign	offset=-1 (param)
   259 ;;_val	offset=-5 (param)
   260 ;;_h	offset=-1 (param)
   261 ;;_flipper	offset=-1 (param)
   262 ;;_f	offset	0
   263 ;;_ap	offset	6
   264 ;;_s	offset=-3 (param)
   265 ;;_fmt	offset=-5 (param)
   266 ;;_line	offset=-1 (param)
   267 ;;_vterm	offset=-2 (param)
   268 ;;_numMilliseconds	offset=-2 (param)
   269 ;;_vterm	offset=-1 (param)
   270 ;;_r	offset=-1 (param)
   271 ;;_c	offset=-2 (param)
   272 ;;_strPtr	offset=-4 (param)
   273 ;;_strPtr	offset=-1 (param)
   274 ;;_delay	offset=-4 (param)
   275 ;;_strPtr	offset=-2 (param)
   276 ;;__this	offset=-2 (param)
   277 ;;_clearBuffer	offset=-3 (param)
   278 ;;_s	offset	0
   279 ;;_k	offset	2
   280 ;;_dest	offset=-2 (param)
   281 ;;_c	offset=-4 (param)
   282 ;;_n	offset=-6 (param)
   283 ;;_ap	offset	0
   284 ;;_fmt	offset=-3 (param)
   285 ;;_cfmt	offset	0
   286 ;;_fp	offset=-2 (param)
   287 ;;_fmt	offset=-4 (param)
   288 ;;_ap	offset=-6 (param)
   289 ;;_vfpfcnvrt$5242	offset	0
   290 ;;_vfpfcnvrt$5253	offset	2
   291 ;;_vfpfcnvrt$5241	offset	4
   292 ;;_llu	offset	6
   293 ;;_ll	offset	14
   294 ;;_f	offset	22
   295 ;;_ct	offset	26
   296 ;;_cp	offset	29
   297 ;;_c	offset	31
   298 ;;_fp	offset=-2 (param)
   299 ;;_fmt	offset=-4 (param)
   300 ;;_ap	offset=-6 (param)
   301 ;;_xtoa$5227	offset	0
   302 ;;_xtoa$5226	offset	2
   303 ;;_n	offset	4
   304 ;;_c	offset	12
   305 ;;_i	offset	14
   306 ;;_w	offset	16
   307 ;;_p	offset	18
   308 ;;_fp	offset=-2 (param)
   309 ;;_d	offset=-10 (param)
   310 ;;_x	offset=-11 (param)
   311 ;;_toupper$6026	offset	0
   312 ;;_c	offset=-2 (param)
   313 ;;_c	offset=-2 (param)
   314 ;;_c	offset=-2 (param)
   315 ;;_n	offset	0
   316 ;;_i	offset	8
   317 ;;_w	offset	10
   318 ;;_p	offset	12
   319 ;;_fp	offset=-2 (param)
   320 ;;_d	offset=-10 (param)
   321 ;;_counter	offset	0
   322 ;;_dividend	offset=-8 (param)
   323 ;;_divisor	offset=-16 (param)
   324 ;;_quotient	offset	0
   325 ;;_counter	offset	8
   326 ;;_dividend	offset=-8 (param)
   327 ;;_divisor	offset=-16 (param)
   328 ;;_r	offset	0
   329 ;;_l	offset	2
   330 ;;__l	offset=-2 (param)
   331 ;;__r	offset=-4 (param)
   332 ;;_n	offset=-6 (param)
   333 ;;_nuls	offset	0
   334 ;;_l	offset	7
   335 ;;_p	offset	9
   336 ;;_cp	offset	11
   337 ;;_w	offset	13
   338 ;;_i	offset	15
   339 ;;_fp	offset=-2 (param)
   340 ;;_s	offset=-4 (param)
   341 ;;_efgtoa$5199	offset	0
   342 ;;_efgtoa$5198	offset	2
   343 ;;_efgtoa$5197	offset	4
   344 ;;_efgtoa$5193	offset	6
   345 ;;_efgtoa$5189	offset	8
   346 ;;_efgtoa$5188	offset	10
   347 ;;_u	offset	12
   348 ;;_g	offset	16
   349 ;;_l	offset	20
   350 ;;_h	offset	24
   351 ;;_ou	offset	28
   352 ;;_n	offset	32
   353 ;;_e	offset	34
   354 ;;_i	offset	36
   355 ;;_w	offset	38
   356 ;;_p	offset	40
   357 ;;_sign	offset	42
   358 ;;_d	offset	44
   359 ;;_ne	offset	46
   360 ;;_m	offset	48
   361 ;;_pp	offset	50
   362 ;;_t	offset	52
   363 ;;_mode	offset	54
   364 ;;_nmode	offset	55
   365 ;;_fp	offset=-2 (param)
   366 ;;_f	offset=-6 (param)
   367 ;;_c	offset=-7 (param)
   368 ;;_tolower$6011	offset	0
   369 ;;_c	offset=-2 (param)
   370 ;;_c	offset=-2 (param)
   371 ;;_d	offset	0
   372 ;;_s	offset	2
   373 ;;_dest	offset=-2 (param)
   374 ;;_src	offset=-4 (param)
   375 ;;_u	offset	0
   376 ;;_m	offset	4
   377 ;;_e	offset	8
   378 ;;_x	offset=-4 (param)
   379 ;;_u	offset	0
   380 ;;_e	offset	4
   381 ;;_x	offset=-4 (param)
   382 ;;_exp1	offset	0
   383 ;;_sign1	offset	1
   384 ;;_f1	offset=-4 (param)
   385 ;;_f1	offset=-4 (param)
   386 ;;_ff1	offset=-4 (param)
   387 ;;_ff2	offset=-8 (param)
   388 ;;_ff1	offset=-4 (param)
   389 ;;_ff2	offset=-8 (param)
   390 ;;_grs	offset	0
   391 ;;_rem	offset	4
   392 ;;_new_exp	offset	8
   393 ;;_aexp	offset	10
   394 ;;_bexp	offset	11
   395 ;;_sign	offset	12
   396 ;;_b	offset=-4 (param)
   397 ;;_a	offset=-8 (param)
   398 ;;_sign	offset	0
   399 ;;_counter	offset	1
   400 ;;_dividend	offset=-2 (param)
   401 ;;_divisor	offset=-4 (param)
   402 ;;_quotient	offset	0
   403 ;;_sign	offset	2
   404 ;;_counter	offset	3
   405 ;;_dividend	offset=-2 (param)
   406 ;;_divisor	offset=-4 (param)
   407 ;;_dtoa$5165	offset	0
   408 ;;_n	offset	2
   409 ;;_i	offset	10
   410 ;;_s	offset	12
   411 ;;_w	offset	14
   412 ;;_p	offset	16
   413 ;;_fp	offset=-2 (param)
   414 ;;_d	offset=-10 (param)
   415 ;;_a	offset=-2 (param)
   416 ;;_sign	offset	0
   417 ;;_counter	offset	1
   418 ;;_dividend	offset=-8 (param)
   419 ;;_divisor	offset=-16 (param)
   420 ;;_quotient	offset	0
   421 ;;_sign	offset	8
   422 ;;_counter	offset	9
   423 ;;_dividend	offset=-8 (param)
   424 ;;_divisor	offset=-16 (param)
   425 ;;_w	offset	0
   426 ;;_fp	offset=-2 (param)
   427 ;;_c	offset=-3 (param)
   428 ;;_w	offset	0
   429 ;;_i	offset	2
   430 ;;_fp	offset=-2 (param)
   431 ;;_buf	offset=-4 (param)
   432 ;;_p	offset=-6 (param)
   433 ;;_a	offset	0
   434 ;;_s	offset=-2 (param)
   435 ;;_i	offset	0
   436 ;;_c	offset	2
   437 ;;_s	offset=-2 (param)
   438 ;;_fp	offset=-4 (param)
   439 ;;_c	offset=-2 (param)
   440 ;;_fp	offset=-4 (param)
   441 ;;_c	offset=-1 (param)
   442 ;;__this	offset=-2 (param)
   443 ;;_c	offset=-3 (param)
   444 ;;_atoi$5749	offset	0
   445 ;;_atoi$5747	offset	2
   446 ;;_atoi$5748	offset	4
   447 ;;_n	offset	5
   448 ;;_neg	offset	7
   449 ;;_s	offset=-2 (param)
   450 ;;_isspace$5787	offset	0
   451 ;;_c	offset=-2 (param)
   452 ;;_c	offset=-2 (param)
   453 ;;_vterm	offset=-1 (param)
   454 ;;_new_response_info	offset=-1 (param)
   455 ;;_new_response_info	offset=-1 (param)
   456 ;;_level	offset=-2 (param)
   457 ;;_dutyValue	offset=-2 (param)
   458 ;;_timer	offset=-1 (param)
   459 ;;_timer	offset=-1 (param)
   460 ;;_count	offset=-3 (param)
   461 ;;_h	offset=-1 (param)
   462 ;;_lp_speed	offset	0
   463 ;;_new	offset=-4 (param)
   464 ;;_bn	offset=-5 (param)
   465 ;;_slow	offset=-6 (param)
   466 ;;_b	offset=-4 (param)
   467 ;;_a	offset=-8 (param)
   468 ;;_grs	offset	0
   469 ;;_bexp	offset	1
   470 ;;_aexp	offset	2
   471 ;;_signs	offset	3
   472 ;;_b	offset=-4 (param)
   473 ;;_a	offset=-8 (param)
   474 ;;_prod	offset	0
   475 ;;_grs	offset	4
   476 ;;_temp	offset	8
   477 ;;_bexp	offset	10
   478 ;;_aexp	offset	11
   479 ;;_sign	offset	12
   480 ;;_b	offset=-4 (param)
   481 ;;_a	offset=-8 (param)
   482 ;;_InterruptHandler	offset=-3 (param)
   483 ;;_InterruptHandler	offset=-3 (param)
   484 ;;_InterruptHandler	offset=-3 (param)
   485 ;;_InterruptHandler	offset=-3 (param)
   486 ;;_InterruptHandler	offset=-3 (param)
   487 ;;_InterruptHandler	offset=-3 (param)
   488 ;;_state	offset	0
   489 ;;_InterruptHandler	offset=-3 (param)
   490 ;;_InterruptHandler	offset=-3 (param)
   491 ;;_InterruptHandler	offset=-3 (param)
   492 ;;_InterruptHandler	offset=-3 (param)
   493 ;;_i	offset	0
   494 ;;_sw_value	offset	1
   495 ;;_timerVal	offset=-2 (param)
   496 ;;_timerVal	offset=-2 (param)
   497 ;;_log_ptr	offset	0
   498 ;;_temp	offset	2
   499 ;;_f	offset	0
   500 ;;_ap	offset	6
   501 ;;_s	offset=-3 (param)
   502 ;;_fmt	offset=-5 (param)
   503 ;;_cfmt	offset	0
   504 ;;_fp	offset=-2 (param)
   505 ;;_fmt	offset=-4 (param)
   506 ;;_ap	offset=-6 (param)
   507 ;;_vfpfcnvrt$5242	offset	0
   508 ;;_vfpfcnvrt$5253	offset	2
   509 ;;_vfpfcnvrt$5241	offset	4
   510 ;;_llu	offset	6
   511 ;;_ll	offset	14
   512 ;;_f	offset	22
   513 ;;_ct	offset	26
   514 ;;_cp	offset	29
   515 ;;_c	offset	31
   516 ;;_fp	offset=-2 (param)
   517 ;;_fmt	offset=-4 (param)
   518 ;;_ap	offset=-6 (param)
   519 ;;_xtoa$5227	offset	0
   520 ;;_xtoa$5226	offset	2
   521 ;;_n	offset	4
   522 ;;_c	offset	12
   523 ;;_i	offset	14
   524 ;;_w	offset	16
   525 ;;_p	offset	18
   526 ;;_fp	offset=-2 (param)
   527 ;;_d	offset=-10 (param)
   528 ;;_x	offset=-11 (param)
   529 ;;_toupper$6026	offset	0
   530 ;;_c	offset=-2 (param)
   531 ;;_c	offset=-2 (param)
   532 ;;_c	offset=-2 (param)
   533 ;;_n	offset	0
   534 ;;_i	offset	8
   535 ;;_w	offset	10
   536 ;;_p	offset	12
   537 ;;_fp	offset=-2 (param)
   538 ;;_d	offset=-10 (param)
   539 ;;_counter	offset	0
   540 ;;_dividend	offset=-8 (param)
   541 ;;_divisor	offset=-16 (param)
   542 ;;_quotient	offset	0
   543 ;;_counter	offset	8
   544 ;;_dividend	offset=-8 (param)
   545 ;;_divisor	offset=-16 (param)
   546 ;;_r	offset	0
   547 ;;_l	offset	2
   548 ;;__l	offset=-2 (param)
   549 ;;__r	offset=-4 (param)
   550 ;;_n	offset=-6 (param)
   551 ;;_nuls	offset	0
   552 ;;_l	offset	7
   553 ;;_p	offset	9
   554 ;;_cp	offset	11
   555 ;;_w	offset	13
   556 ;;_i	offset	15
   557 ;;_fp	offset=-2 (param)
   558 ;;_s	offset=-4 (param)
   559 ;;_efgtoa$5199	offset	0
   560 ;;_efgtoa$5198	offset	2
   561 ;;_efgtoa$5197	offset	4
   562 ;;_efgtoa$5193	offset	6
   563 ;;_efgtoa$5189	offset	8
   564 ;;_efgtoa$5188	offset	10
   565 ;;_u	offset	12
   566 ;;_g	offset	16
   567 ;;_l	offset	20
   568 ;;_h	offset	24
   569 ;;_ou	offset	28
   570 ;;_n	offset	32
   571 ;;_e	offset	34
   572 ;;_i	offset	36
   573 ;;_w	offset	38
   574 ;;_p	offset	40
   575 ;;_sign	offset	42
   576 ;;_d	offset	44
   577 ;;_ne	offset	46
   578 ;;_m	offset	48
   579 ;;_pp	offset	50
   580 ;;_t	offset	52
   581 ;;_mode	offset	54
   582 ;;_nmode	offset	55
   583 ;;_fp	offset=-2 (param)
   584 ;;_f	offset=-6 (param)
   585 ;;_c	offset=-7 (param)
   586 ;;_tolower$6011	offset	0
   587 ;;_c	offset=-2 (param)
   588 ;;_c	offset=-2 (param)
   589 ;;_d	offset	0
   590 ;;_s	offset	2
   591 ;;_dest	offset=-2 (param)
   592 ;;_src	offset=-4 (param)
   593 ;;_u	offset	0
   594 ;;_m	offset	4
   595 ;;_e	offset	8
   596 ;;_x	offset=-4 (param)
   597 ;;_u	offset	0
   598 ;;_e	offset	4
   599 ;;_x	offset=-4 (param)
   600 ;;_exp1	offset	0
   601 ;;_sign1	offset	1
   602 ;;_f1	offset=-4 (param)
   603 ;;_b	offset=-4 (param)
   604 ;;_a	offset=-8 (param)
   605 ;;_grs	offset	0
   606 ;;_bexp	offset	1
   607 ;;_aexp	offset	2
   608 ;;_signs	offset	3
   609 ;;_b	offset=-4 (param)
   610 ;;_a	offset=-8 (param)
   611 ;;_f1	offset=-4 (param)
   612 ;;_prod	offset	0
   613 ;;_grs	offset	4
   614 ;;_temp	offset	8
   615 ;;_bexp	offset	10
   616 ;;_aexp	offset	11
   617 ;;_sign	offset	12
   618 ;;_b	offset=-4 (param)
   619 ;;_a	offset=-8 (param)
   620 ;;_ff1	offset=-4 (param)
   621 ;;_ff2	offset=-8 (param)
   622 ;;_ff1	offset=-4 (param)
   623 ;;_ff2	offset=-8 (param)
   624 ;;_grs	offset	0
   625 ;;_rem	offset	4
   626 ;;_new_exp	offset	8
   627 ;;_aexp	offset	10
   628 ;;_bexp	offset	11
   629 ;;_sign	offset	12
   630 ;;_b	offset=-4 (param)
   631 ;;_a	offset=-8 (param)
   632 ;;_sign	offset	0
   633 ;;_counter	offset	1
   634 ;;_dividend	offset=-2 (param)
   635 ;;_divisor	offset=-4 (param)
   636 ;;_quotient	offset	0
   637 ;;_sign	offset	2
   638 ;;_counter	offset	3
   639 ;;_dividend	offset=-2 (param)
   640 ;;_divisor	offset=-4 (param)
   641 ;;_dtoa$5165	offset	0
   642 ;;_n	offset	2
   643 ;;_i	offset	10
   644 ;;_s	offset	12
   645 ;;_w	offset	14
   646 ;;_p	offset	16
   647 ;;_fp	offset=-2 (param)
   648 ;;_d	offset=-10 (param)
   649 ;;_a	offset=-2 (param)
   650 ;;_sign	offset	0
   651 ;;_counter	offset	1
   652 ;;_dividend	offset=-8 (param)
   653 ;;_divisor	offset=-16 (param)
   654 ;;_quotient	offset	0
   655 ;;_sign	offset	8
   656 ;;_counter	offset	9
   657 ;;_dividend	offset=-8 (param)
   658 ;;_divisor	offset=-16 (param)
   659 ;;_w	offset	0
   660 ;;_fp	offset=-2 (param)
   661 ;;_c	offset=-3 (param)
   662 ;;_w	offset	0
   663 ;;_i	offset	2
   664 ;;_fp	offset=-2 (param)
   665 ;;_buf	offset=-4 (param)
   666 ;;_p	offset=-6 (param)
   667 ;;_a	offset	0
   668 ;;_s	offset=-2 (param)
   669 ;;_i	offset	0
   670 ;;_c	offset	2
   671 ;;_s	offset=-2 (param)
   672 ;;_fp	offset=-4 (param)
   673 ;;_c	offset=-2 (param)
   674 ;;_fp	offset=-4 (param)
   675 ;;_c	offset=-1 (param)
   676 ;;__this	offset=-2 (param)
   677 ;;_c	offset=-3 (param)
   678 ;;_atoi$5749	offset	0
   679 ;;_atoi$5747	offset	2
   680 ;;_atoi$5748	offset	4
   681 ;;_n	offset	5
   682 ;;_neg	offset	7
   683 ;;_s	offset=-2 (param)
   684 ;;_isspace$5787	offset	0
   685 ;;_c	offset=-2 (param)
   686 ;;_c	offset=-2 (param)
   687 ;;_mode	offset=-1 (param)
   688 ;;_mode	offset=-1 (param)
   689 ;;_dsize	offset=-2 (param)
   690 ;;_arg	offset	0
   691 ;;_exp	offset	4
   692 ;;_sign	offset=-1 (param)
   693 ;;_val	offset=-5 (param)
   694 ;;_cvoltage	offset=-4 (param)
   695 ;;_timer	offset=-1 (param)
   696 ;;_count	offset=-3 (param)
   697 ;;_channel	offset=-1 (param)
   698 ;;_i	offset	0
   699                           
   700                           	psect	idataBIGRAM
   701  017114                     __pidataBIGRAM:
   702                           	opt callstack 0
   703                           
   704                           ;initializer for _port_data
   705  017114  FF                 	db	255
   706  017115  00                 	db	0
   707  017116  FF                 	db	255
   708  017117  00                 	db	0
   709  017118  FF                 	db	255
   710  017119  00                 	db	0
   711  01711A  FF                 	db	255
   712  01711B  00                 	db	0
   713  01711C  FF                 	db	255
   714  01711D  00                 	db	0
   715  01711E  FF                 	db	255
   716  01711F  00                 	db	0
   717  017120  FF                 	db	255
   718  017121  00                 	db	0
   719  017122  FF                 	db	255
   720  017123  00                 	db	0
   721  017124  00                 	db	0
   722  017125  00                 	db	0
   723  017126  00                 	db	0
   724  017127  00                 	db	0
   725  017128  00                 	db	0
   726  017129  00                 	db	0
   727  01712A  00                 	db	0
   728  01712B  00                 	db	0
   729  01712C  00                 	db	0
   730  01712D  00                 	db	0
   731  01712E  00                 	db	0
   732  01712F  00                 	db	0
   733  017130  00                 	db	0
   734  017131  00                 	db	0
   735  017132  00                 	db	0
   736  017133  00                 	db	0
   737  017134  00                 	db	0
   738  017135  00                 	db	0
   739  017136  00                 	db	0
   740  017137  00                 	db	0
   741  017138  00                 	db	0
   742  017139  00                 	db	0
   743  01713A  00                 	db	0
   744  01713B  00                 	db	0
   745  01713C  00                 	db	0
   746  01713D  00                 	db	0
   747  01713E  00                 	db	0
   748  01713F  00                 	db	0
   749  017140  00                 	db	0
   750  017141  00                 	db	0
   751  017142  00                 	db	0
   752  017143  00                 	db	0
   753  017144  00                 	db	0
   754  017145  00                 	db	0
   755  017146  00                 	db	0
   756  017147  00                 	db	0
   757  017148  00                 	db	0
   758  017149  00                 	db	0
   759  01714A  00                 	db	0
   760  01714B  00                 	db	0
   761  01714C  00                 	db	0
   762  01714D  00                 	db	0
   763  01714E  00                 	db	0
   764  01714F  00                 	db	0
   765  017150  00                 	db	0
   766  017151  00                 	db	0
   767  017152  00                 	db	0
   768  017153  00                 	db	0
   769  017154  00                 	db	0
   770  017155  00                 	db	0
   771  017156  00                 	db	0
   772  017157  00                 	db	0
   773  017158  00                 	db	0
   774  017159  00                 	db	0
   775  01715A  00                 	db	0
   776  01715B  00                 	db	0
   777  01715C  00                 	db	0
   778  01715D  00                 	db	0
   779  01715E  00                 	db	0
   780  01715F  00                 	db	0
   781  017160  00                 	db	0
   782  017161  00                 	db	0
   783  017162  00                 	db	0
   784  017163  00                 	db	0
   785  017164  00                 	db	0
   786  017165  00                 	db	0
   787  017166  00                 	db	0
   788  017167  00                 	db	0
   789  017168  00                 	db	0
   790  017169  00                 	db	0
   791  01716A  00                 	db	0
   792  01716B  00                 	db	0
   793  01716C  00                 	db	0
   794  01716D  00                 	db	0
   795  01716E  00                 	db	0
   796  01716F  00                 	db	0
   797  017170  00                 	db	0
   798  017171  00                 	db	0
   799  017172  00                 	db	0
   800  017173  00                 	db	0
   801  017174  00                 	db	0
   802  017175  00                 	db	0
   803  017176  00                 	db	0
   804  017177  00                 	db	0
   805  017178  00                 	db	0
   806  017179  00                 	db	0
   807  01717A  00                 	db	0
   808  01717B  00                 	db	0
   809  01717C  00                 	db	0
   810  01717D  00                 	db	0
   811  01717E  00                 	db	0
   812  01717F  00                 	db	0
   813  017180  00                 	db	0
   814  017181  00                 	db	0
   815  017182  00                 	db	0
   816  017183  00                 	db	0
   817  017184  00                 	db	0
   818  017185  00                 	db	0
   819  017186  00                 	db	0
   820  017187  00                 	db	0
   821  017188  00                 	db	0
   822  017189  00                 	db	0
   823  01718A  00                 	db	0
   824  01718B  00                 	db	0
   825  01718C  00                 	db	0
   826  01718D  00                 	db	0
   827  01718E  00                 	db	0
   828  01718F  00                 	db	0
   829  017190  00                 	db	0
   830  017191  00                 	db	0
   831  017192  00                 	db	0
   832  017193  00                 	db	0
   833  017194  00                 	db	0
   834  017195  00                 	db	0
   835  017196  00                 	db	0
   836  017197  00                 	db	0
   837  017198  00                 	db	0
   838  017199  00                 	db	0
   839  01719A  00                 	db	0
   840  01719B  00                 	db	0
   841  01719C  00                 	db	0
   842  01719D  00                 	db	0
   843  01719E  00                 	db	0
   844  01719F  00                 	db	0
   845  0171A0  00                 	db	0
   846  0171A1  00                 	db	0
   847  0171A2  00                 	db	0
   848  0171A3  00                 	db	0
   849  0171A4  00                 	db	0
   850  0171A5  00                 	db	0
   851  0171A6  00                 	db	0
   852  0171A7  00                 	db	0
   853  0171A8  00                 	db	0
   854  0171A9  00                 	db	0
   855  0171AA  00                 	db	0
   856  0171AB  00                 	db	0
   857  0171AC  00                 	db	0
   858  0171AD  00                 	db	0
   859  0171AE  00                 	db	0
   860  0171AF  00                 	db	0
   861  0171B0  00                 	db	0
   862  0171B1  00                 	db	0
   863  0171B2  00                 	db	0
   864  0171B3  00                 	db	0
   865  0171B4  00                 	db	0
   866  0171B5  00                 	db	0
   867  0171B6  00                 	db	0
   868  0171B7  00                 	db	0
   869  0171B8  00                 	db	0
   870  0171B9  00                 	db	0
   871  0171BA  00                 	db	0
   872  0171BB  00                 	db	0
   873  0171BC  00                 	db	0
   874  0171BD  00                 	db	0
   875  0171BE  00                 	db	0
   876  0171BF  00                 	db	0
   877  0171C0  00                 	db	0
   878  0171C1  00                 	db	0
   879  0171C2  00                 	db	0
   880  0171C3  00                 	db	0
   881  0171C4  00                 	db	0
   882  0171C5  00                 	db	0
   883  0171C6  00                 	db	0
   884  0171C7  00                 	db	0
   885  0171C8  00                 	db	0
   886  0171C9  00                 	db	0
   887  0171CA  00                 	db	0
   888  0171CB  00                 	db	0
   889  0171CC  00                 	db	0
   890  0171CD  00                 	db	0
   891  0171CE  00                 	db	0
   892  0171CF  00                 	db	0
   893  0171D0  00                 	db	0
   894  0171D1  00                 	db	0
   895  0171D2  00                 	db	0
   896  0171D3  00                 	db	0
   897  0171D4  00                 	db	0
   898  0171D5  00                 	db	0
   899  0171D6  00                 	db	0
   900  0171D7  00                 	db	0
   901  0171D8  00                 	db	0
   902  0171D9  00                 	db	0
   903  0171DA  00                 	db	0
   904  0171DB  00                 	db	0
   905  0171DC  00                 	db	0
   906  0171DD  00                 	db	0
   907  0171DE  00                 	db	0
   908  0171DF  00                 	db	0
   909  0171E0  00                 	db	0
   910  0171E1  00                 	db	0
   911  0171E2  00                 	db	0
   912  0171E3  00                 	db	0
   913  0171E4  00                 	db	0
   914  0171E5  00                 	db	0
   915  0171E6  00                 	db	0
   916  0171E7  00                 	db	0
   917  0171E8  00                 	db	0
   918  0171E9  00                 	db	0
   919  0171EA  00                 	db	0
   920  0171EB  00                 	db	0
   921  0171EC  00                 	db	0
   922  0171ED  00                 	db	0
   923  0171EE  00                 	db	0
   924  0171EF  00                 	db	0
   925  0171F0  00                 	db	0
   926  0171F1  00                 	db	0
   927  0171F2  00                 	db	0
   928  0171F3  00                 	db	0
   929  0171F4  00                 	db	0
   930  0171F5  00                 	db	0
   931  0171F6  00                 	db	0
   932  0171F7  00                 	db	0
   933  0171F8  00                 	db	0
   934  0171F9  00                 	db	0
   935  0171FA  00                 	db	0
   936  0171FB  00                 	db	0
   937  0171FC  00                 	db	0
   938  0171FD  00                 	db	0
   939  0171FE  00                 	db	0
   940  0171FF  00                 	db	0
   941  017200  00                 	db	0
   942  017201  00                 	db	0
   943  017202  00                 	db	0
   944  017203  00                 	db	0
   945  017204  00                 	db	0
   946  017205  00                 	db	0
   947  017206  00                 	db	0
   948  017207  00                 	db	0
   949  017208  00                 	db	0
   950  017209  00                 	db	0
   951  01720A  00                 	db	0
   952  01720B  00                 	db	0
   953  01720C  00                 	db	0
   954  01720D  00                 	db	0
   955  01720E  00                 	db	0
   956  01720F  00                 	db	0
   957  017210  00                 	db	0
   958  017211  00                 	db	0
   959  017212  00                 	db	0
   960  017213  00                 	db	0
   961  017214  00                 	db	0
   962  017215  00                 	db	0
   963  017216  00                 	db	0
   964  017217  00                 	db	0
   965  017218  00                 	db	0
   966  017219  00                 	db	0
   967  01721A  00                 	db	0
   968  01721B  00                 	db	0
   969  01721C  00                 	db	0
   970  01721D  00                 	db	0
   971  01721E  00                 	db	0
   972  01721F  00                 	db	0
   973  017220  00                 	db	0
   974  017221  00                 	db	0
   975  017222  00                 	db	0
   976  017223  00                 	db	0
   977  017224  00                 	db	0
   978  017225  00                 	db	0
   979  017226  00                 	db	0
   980  017227  00                 	db	0
   981  017228  00                 	db	0
   982  017229  00                 	db	0
   983  01722A  00                 	db	0
   984  01722B  00                 	db	0
   985  01722C  00                 	db	0
   986  01722D  00                 	db	0
   987  01722E  00                 	db	0
   988  01722F  00                 	db	0
   989  017230  00                 	db	0
   990  017231  00                 	db	0
   991  017232  00                 	db	0
   992  017233  00                 	db	0
   993  017234  00                 	db	0
   994  017235  00                 	db	0
   995  017236  00                 	db	0
   996  017237  00                 	db	0
   997  017238  00                 	db	0
   998  017239  00                 	db	0
   999  01723A  00                 	db	0
  1000  01723B  00                 	db	0
  1001  01723C  00                 	db	0
  1002  01723D  00                 	db	0
  1003  01723E  00                 	db	0
  1004  01723F  00                 	db	0
  1005  017240  00                 	db	0
  1006  017241  00                 	db	0
  1007  017242  00                 	db	0
  1008  017243  00                 	db	0
  1009  017244  00                 	db	0
  1010  017245  00                 	db	0
  1011  017246  00                 	db	0
  1012  017247  00                 	db	0
  1013  017248  00                 	db	0
  1014  017249  00                 	db	0
  1015  01724A  00                 	db	0
  1016  01724B  00                 	db	0
  1017  01724C  00                 	db	0
  1018  01724D  00                 	db	0
  1019  01724E  00                 	db	0
  1020  01724F  00                 	db	0
  1021  017250  00                 	db	0
  1022  017251  00                 	db	0
  1023  017252  00                 	db	0
  1024  017253  00                 	db	0
  1025  017254  00                 	db	0
  1026  017255  00                 	db	0
  1027  017256  00                 	db	0
  1028  017257  00                 	db	0
  1029  017258  00                 	db	0
  1030  017259  00                 	db	0
  1031  01725A  00                 	db	0
  1032  01725B  00                 	db	0
  1033  01725C  00                 	db	0
  1034  01725D  00                 	db	0
  1035  01725E  00                 	db	0
  1036  01725F  00                 	db	0
  1037  017260  00                 	db	0
  1038  017261  00                 	db	0
  1039  017262  00                 	db	0
  1040  017263  00                 	db	0
  1041  017264  00                 	db	0
  1042  017265  00                 	db	0
  1043  017266  00                 	db	0
  1044  017267  00                 	db	0
  1045  017268  00                 	db	0
  1046  017269  00                 	db	0
  1047  01726A  00                 	db	0
  1048  01726B  00                 	db	0
  1049  01726C  00                 	db	0
  1050  01726D  00                 	db	0
  1051  01726E  00                 	db	0
  1052  01726F  00                 	db	0
  1053  017270  00                 	db	0
  1054  017271  00                 	db	0
  1055  017272  00                 	db	0
  1056  017273  00                 	db	0
  1057  017274  00                 	db	0
  1058  017275  00                 	db	0
  1059  017276  00                 	db	0
  1060  017277  00                 	db	0
  1061  017278  00                 	db	0
  1062  017279  00                 	db	0
  1063  01727A  00                 	db	0
  1064  01727B  00                 	db	0
  1065  01727C  00                 	db	0
  1066  01727D  00                 	db	0
  1067  01727E  00                 	db	0
  1068  01727F  00                 	db	0
  1069  017280  00                 	db	0
  1070  017281  00                 	db	0
  1071  017282  00                 	db	0
  1072  017283  00                 	db	0
  1073  017284  00                 	db	0
  1074  017285  00                 	db	0
  1075  017286  00                 	db	0
  1076  017287  00                 	db	0
  1077  017288  00                 	db	0
  1078  017289  00                 	db	0
  1079  01728A  00                 	db	0
  1080  01728B  00                 	db	0
  1081  01728C  00                 	db	0
  1082  01728D  00                 	db	0
  1083  01728E  00                 	db	0
  1084  01728F  00                 	db	0
  1085  017290  00                 	db	0
  1086  017291  00                 	db	0
  1087  017292  00                 	db	0
  1088  017293  00                 	db	0
  1089  017294  00                 	db	0
  1090  017295  00                 	db	0
  1091  017296  00                 	db	0
  1092  017297  00                 	db	0
  1093  017298  00                 	db	0
  1094  017299  00                 	db	0
  1095  01729A  00                 	db	0
  1096  01729B  00                 	db	0
  1097  01729C  00                 	db	0
  1098  01729D  00                 	db	0
  1099  01729E  00                 	db	0
  1100  01729F  00                 	db	0
  1101  0172A0  00                 	db	0
  1102  0172A1  00                 	db	0
  1103  0172A2  00                 	db	0
  1104  0172A3  00                 	db	0
  1105  0172A4  00                 	db	0
  1106  0172A5  00                 	db	0
  1107  0172A6  00                 	db	0
  1108  0172A7  00                 	db	0
  1109  0172A8  00                 	db	0
  1110  0172A9  00                 	db	0
  1111  0172AA  00                 	db	0
  1112  0172AB  00                 	db	0
  1113  0172AC  00                 	db	0
  1114  0172AD  00                 	db	0
  1115  0172AE  00                 	db	0
  1116  0172AF  00                 	db	0
  1117  0172B0  00                 	db	0
  1118  0172B1  00                 	db	0
  1119  0172B2  00                 	db	0
  1120  0172B3  00                 	db	0
  1121  0172B4  00                 	db	0
  1122  0172B5  00                 	db	0
  1123  0172B6  00                 	db	0
  1124  0172B7  00                 	db	0
  1125  0172B8  00                 	db	0
  1126  0172B9  00                 	db	0
  1127  0172BA  00                 	db	0
  1128  0172BB  00                 	db	0
  1129  0172BC  00                 	db	0
  1130  0172BD  00                 	db	0
  1131  0172BE  00                 	db	0
  1132  0172BF  00                 	db	0
  1133  0172C0  00                 	db	0
  1134  0172C1  00                 	db	0
  1135  0172C2  00                 	db	0
  1136  0172C3  00                 	db	0
  1137  0172C4  00                 	db	0
  1138  0172C5  00                 	db	0
  1139  0172C6  00                 	db	0
  1140  0172C7  00                 	db	0
  1141  0172C8  00                 	db	0
  1142  0172C9  00                 	db	0
  1143  0172CA  00                 	db	0
  1144  0172CB  00                 	db	0
  1145  0172CC  00                 	db	0
  1146  0172CD  00                 	db	0
  1147  0172CE  00                 	db	0
  1148  0172CF  00                 	db	0
  1149  0172D0  00                 	db	0
  1150  0172D1  00                 	db	0
  1151  0172D2  00                 	db	0
  1152  0172D3  00                 	db	0
  1153  0172D4  00                 	db	0
  1154  0172D5  00                 	db	0
  1155  0172D6  00                 	db	0
  1156  0172D7  00                 	db	0
  1157  0172D8  00                 	db	0
  1158  0172D9  00                 	db	0
  1159  0172DA  00                 	db	0
  1160  0172DB  00                 	db	0
  1161  0172DC  00                 	db	0
  1162  0172DD  00                 	db	0
  1163  0172DE  00                 	db	0
  1164  0172DF  00                 	db	0
  1165  0172E0  00                 	db	0
  1166  0172E1  00                 	db	0
  1167  0172E2  00                 	db	0
  1168  0172E3  00                 	db	0
  1169  0172E4  00                 	db	0
  1170  0172E5  00                 	db	0
  1171  0172E6  00                 	db	0
  1172  0172E7  00                 	db	0
  1173  0172E8  00                 	db	0
  1174  0172E9  00                 	db	0
  1175  0172EA  00                 	db	0
  1176  0172EB  00                 	db	0
  1177  0172EC  00                 	db	0
  1178  0172ED  00                 	db	0
  1179  0172EE  00                 	db	0
  1180  0172EF  00                 	db	0
  1181  0172F0  00                 	db	0
  1182  0172F1  00                 	db	0
  1183  0172F2  00                 	db	0
  1184  0172F3  00                 	db	0
  1185  0172F4  00                 	db	0
  1186  0172F5  00                 	db	0
  1187  0172F6  00                 	db	0
  1188  0172F7  00                 	db	0
  1189  0172F8  00                 	db	0
  1190  0172F9  00                 	db	0
  1191  0172FA  00                 	db	0
  1192  0172FB  00                 	db	0
  1193  0172FC  00                 	db	0
  1194  0172FD  00                 	db	0
  1195  0172FE  00                 	db	0
  1196  0172FF  00                 	db	0
  1197  017300  00                 	db	0
  1198  017301  00                 	db	0
  1199  017302  00                 	db	0
  1200  017303  00                 	db	0
  1201  017304  00                 	db	0
  1202  017305  00                 	db	0
  1203  017306  00                 	db	0
  1204  017307  00                 	db	0
  1205  017308  00                 	db	0
  1206  017309  00                 	db	0
  1207  01730A  00                 	db	0
  1208  01730B  00                 	db	0
  1209  01730C  00                 	db	0
  1210  01730D  00                 	db	0
  1211  01730E  00                 	db	0
  1212  01730F  00                 	db	0
  1213  017310  00                 	db	0
  1214  017311  00                 	db	0
  1215  017312  00                 	db	0
  1216  017313  00                 	db	0
  1217                           
  1218                           	psect	idataBANK0
  1219  01A17E                     __pidataBANK0:
  1220                           	opt callstack 0
  1221                           
  1222                           ;initializer for _R
  1223  01A17E  0000               	dw	0
  1224  01A180  0000               	dw	0
  1225  01A182  0000               	dw	0
  1226  01A184  0000               	dw	0
  1227  01A186  0000               	dw	0
  1228  01A188  0000               	dw	0
  1229  01A18A  0000               	dw	0
  1230  01A18C  0000               	dw	0
  1231  01A18E  0000               	dw	0
  1232  01A190  0000               	dw	0
  1233  01A192  0000               	dw	0
  1234  01A194  0000               	dw	0
  1235  01A196  0000               	dw	0
  1236  01A198  0000               	dw	0
  1237  01A19A  0000               	dw	0
  1238  01A19C  0000               	dw	0
  1239  01A19E  0F67               	dw	3943
  1240  01A1A0  0F8F               	dw	3983
  1241  01A1A2  00                 	db	0
  1242  01A1A3  0000               	dw	0
  1243  01A1A5  00                 	db	0
  1244                           
  1245                           ;initializer for _H
  1246  01A1A6  00                 	db	0
  1247  01A1A7  00                 	db	0
  1248  01A1A8  01                 	db	1
  1249  01A1A9  00                 	db	0
  1250  01A1AA  01                 	db	1
  1251  01A1AB  00                 	db	0
  1252  01A1AC  00                 	db	0
  1253                           
  1254                           	psect	idataBANK1
  1255  018AD6                     __pidataBANK1:
  1256                           	opt callstack 0
  1257                           
  1258                           ;initializer for _C
  1259  018AD6  0000               	dw	0
  1260  018AD8  0000               	dw	0
  1261  018ADA  0000               	dw	0
  1262  018ADC  0000               	dw	0
  1263  018ADE  0000               	dw	0
  1264  018AE0  0000               	dw	0
  1265  018AE2  0000               	dw	0
  1266  018AE4  0000               	dw	0
  1267  018AE6  0000               	dw	0
  1268  018AE8  0000               	dw	0
  1269  018AEA  0000               	dw	0
  1270  018AEC  0000               	dw	0
  1271  018AEE  0000               	dw	0
  1272  018AF0  0000               	dw	0
  1273  018AF2  0000               	dw	0
  1274  018AF4  0000               	dw	0
  1275  018AF6  0000               	dw	0
  1276  018AF8  0000               	dw	0
  1277  018AFA  0000               	dw	0
  1278  018AFC  0000               	dw	0
  1279  018AFE  0000               	dw	0
  1280  018B00  0000               	dw	0
  1281  018B02  0000               	dw	0
  1282  018B04  0000               	dw	0
  1283  018B06  0000               	dw	0
  1284  018B08  0000               	dw	0
  1285  018B0A  0000               	dw	0
  1286  018B0C  0000               	dw	0
  1287  018B0E  0000               	dw	0
  1288  018B10  0000               	dw	0
  1289  018B12  0000               	dw	0
  1290  018B14  0000               	dw	0
  1291  018B16  0000               	dw	0
  1292  018B18  0000               	dw	0
  1293  018B1A  0000               	dw	0
  1294  018B1C  0000               	dw	0
  1295  018B1E  0000               	dw	0
  1296  018B20  0000               	dw	0
  1297  018B22  0000               	dw	0
  1298  018B24  0000               	dw	0
  1299  018B26  0000               	dw	0
  1300  018B28  0000               	dw	0
  1301  018B2A  0000               	dw	0
  1302  018B2C  0000               	dw	0
  1303  018B2E  0000               	dw	0
  1304  018B30  0000               	dw	0
  1305  018B32  0000               	dw	0
  1306  018B34  0000               	dw	0
  1307  018B36  0000               	dw	0
  1308  018B38  0000               	dw	0
  1309  018B3A  0000               	dw	0
  1310  018B3C  0000               	dw	0
  1311  018B3E  0000               	dw	0
  1312  018B40  0000               	dw	0
  1313  018B42  0000               	dw	0
  1314  018B44  0000               	dw	0
  1315  018B46  0000               	dw	0
  1316  018B48  0000               	dw	0
  1317  018B4A  0000               	dw	0
  1318  018B4C  0000               	dw	0
  1319  018B4E  0000               	dw	0
  1320  018B50  0000               	dw	0
  1321  018B52  0000               	dw	0
  1322  018B54  42FA               	dw	17146
  1323  018B56  00                 	db	0
  1324  018B57  00                 	db	0
  1325  018B58  00                 	db	0
  1326  018B59  00                 	db	0
  1327  018B5A  00                 	db	0
  1328  018B5B  00                 	db	0
  1329  018B5C  00                 	db	0
  1330  018B5D  00                 	db	0
  1331  018B5E  00                 	db	0
  1332  018B5F  00                 	db	0
  1333  018B60  00                 	db	0
  1334  018B61  00                 	db	0
  1335  018B62  00                 	db	0
  1336  018B63  00                 	db	0
  1337  018B64  00                 	db	0
  1338  018B65  00                 	db	0
  1339  018B66  00                 	db	0
  1340  018B67  00                 	db	0
  1341  018B68  00                 	db	0
  1342  018B69  00                 	db	0
  1343  018B6A  00                 	db	0
  1344  018B6B  00                 	db	0
  1345  018B6C  00                 	db	0
  1346  018B6D  00                 	db	0
  1347  018B6E  00                 	db	0
  1348  018B6F  00                 	db	0
  1349  018B70  00                 	db	0
  1350  018B71  00                 	db	0
  1351  018B72  00                 	db	0
  1352  018B73  00                 	db	0
  1353  018B74  00                 	db	0
  1354  018B75  00                 	db	0
  1355  018B76  00                 	db	0
  1356  018B77  00                 	db	0
  1357  018B78  00                 	db	0
  1358  018B79  00                 	db	0
  1359  018B7A  00                 	db	0
  1360  018B7B  00                 	db	0
  1361  018B7C  00                 	db	0
  1362  018B7D  00                 	db	0
  1363  018B7E  00                 	db	0
  1364  018B7F  00                 	db	0
  1365  018B80  00                 	db	0
  1366  018B81  00                 	db	0
  1367  018B82  00                 	db	0
  1368  018B83  00                 	db	0
  1369  018B84  00                 	db	0
  1370  018B85  00                 	db	0
  1371  018B86  00                 	db	0
  1372  018B87  00                 	db	0
  1373  018B88  00                 	db	0
  1374  018B89  00                 	db	0
  1375  018B8A  00                 	db	0
  1376  018B8B  00                 	db	0
  1377  018B8C  00                 	db	0
  1378  018B8D  00                 	db	0
  1379  018B8E  00                 	db	0
  1380  018B8F  00                 	db	0
  1381  018B90  00                 	db	0
  1382  018B91  00                 	db	0
  1383  018B92  00                 	db	0
  1384  018B93  00                 	db	0
  1385  018B94  00                 	db	0
  1386  018B95  00                 	db	0
  1387  018B96  00                 	db	0
  1388  018B97  00                 	db	0
  1389  018B98  00                 	db	0
  1390  018B99  00                 	db	0
  1391  018B9A  00                 	db	0
  1392  018B9B  00                 	db	0
  1393  018B9C  00                 	db	0
  1394  018B9D  00                 	db	0
  1395  018B9E  00                 	db	0
  1396  018B9F  00                 	db	0
  1397  018BA0  00                 	db	0
  1398  018BA1  00                 	db	0
  1399  018BA2  00                 	db	0
  1400  018BA3  00                 	db	0
  1401  018BA4  00                 	db	0
  1402  018BA5  00                 	db	0
  1403  018BA6  00                 	db	0
  1404  018BA7  00                 	db	0
  1405  018BA8  00                 	db	0
  1406                           
  1407                           ;initializer for stoa@F1166
  1408  018BA9  28                 	db	40
  1409  018BAA  6E                 	db	110
  1410  018BAB  75                 	db	117
  1411  018BAC  6C                 	db	108
  1412  018BAD  6C                 	db	108
  1413  018BAE  29                 	db	41
  1414  018BAF  00                 	db	0
  1415                           
  1416                           	psect	idataBANK2
  1417  018D48                     __pidataBANK2:
  1418                           	opt callstack 0
  1419                           
  1420                           ;initializer for _V
  1421  018D48  00                 	db	0
  1422  018D49  00                 	db	0
  1423  018D4A  00                 	db	0
  1424  018D4B  00                 	db	0
  1425  018D4C  00                 	db	0
  1426  018D4D  00                 	db	0
  1427  018D4E  00                 	db	0
  1428  018D4F  00                 	db	0
  1429  018D50  00                 	db	0
  1430  018D51  00                 	db	0
  1431  018D52  00                 	db	0
  1432  018D53  00                 	db	0
  1433  018D54  00                 	db	0
  1434  018D55  00                 	db	0
  1435  018D56  00                 	db	0
  1436  018D57  00                 	db	0
  1437  018D58  00                 	db	0
  1438  018D59  00                 	db	0
  1439  018D5A  00                 	db	0
  1440  018D5B  00                 	db	0
  1441  018D5C  00                 	db	0
  1442  018D5D  00                 	db	0
  1443  018D5E  00                 	db	0
  1444  018D5F  00                 	db	0
  1445  018D60  00                 	db	0
  1446  018D61  00                 	db	0
  1447  018D62  00                 	db	0
  1448  018D63  00                 	db	0
  1449  018D64  00                 	db	0
  1450  018D65  00                 	db	0
  1451  018D66  00                 	db	0
  1452  018D67  00                 	db	0
  1453  018D68  00                 	db	0
  1454  018D69  00                 	db	0
  1455  018D6A  00                 	db	0
  1456  018D6B  00                 	db	0
  1457  018D6C  00                 	db	0
  1458  018D6D  00                 	db	0
  1459  018D6E  00                 	db	0
  1460  018D6F  00                 	db	0
  1461  018D70  00                 	db	0
  1462  018D71  00                 	db	0
  1463  018D72  00                 	db	0
  1464  018D73  00                 	db	0
  1465  018D74  00                 	db	0
  1466  018D75  00                 	db	0
  1467  018D76  00                 	db	0
  1468  018D77  00                 	db	0
  1469  018D78  00                 	db	0
  1470  018D79  00                 	db	0
  1471  018D7A  00                 	db	0
  1472  018D7B  00                 	db	0
  1473  018D7C  00                 	db	0
  1474  018D7D  00                 	db	0
  1475  018D7E  00                 	db	0
  1476  018D7F  00                 	db	0
  1477  018D80  00                 	db	0
  1478  018D81  00                 	db	0
  1479  018D82  00                 	db	0
  1480  018D83  00                 	db	0
  1481  018D84  00                 	db	0
  1482  018D85  00                 	db	0
  1483  018D86  00                 	db	0
  1484  018D87  00                 	db	0
  1485  018D88  00                 	db	0
  1486  018D89  00                 	db	0
  1487  018D8A  00                 	db	0
  1488  018D8B  00                 	db	0
  1489  018D8C  00                 	db	0
  1490  018D8D  00                 	db	0
  1491  018D8E  00                 	db	0
  1492  018D8F  00                 	db	0
  1493  018D90  00                 	db	0
  1494  018D91  00                 	db	0
  1495  018D92  00                 	db	0
  1496  018D93  00                 	db	0
  1497  018D94  00                 	db	0
  1498  018D95  00                 	db	0
  1499  018D96  00                 	db	0
  1500  018D97  00                 	db	0
  1501  018D98  00                 	db	0
  1502  018D99  00                 	db	0
  1503  018D9A  00                 	db	0
  1504  018D9B  00                 	db	0
  1505  018D9C  00                 	db	0
  1506  018D9D  00                 	db	0
  1507  018D9E  00                 	db	0
  1508  018D9F  00                 	db	0
  1509  018DA0  00                 	db	0
  1510  018DA1  00                 	db	0
  1511  018DA2  00                 	db	0
  1512  018DA3  00                 	db	0
  1513  018DA4  00                 	db	0
  1514  018DA5  00                 	db	0
  1515  018DA6  00                 	db	0
  1516  018DA7  00                 	db	0
  1517  018DA8  00                 	db	0
  1518  018DA9  00                 	db	0
  1519  018DAA  00                 	db	0
  1520  018DAB  00                 	db	0
  1521  018DAC  00                 	db	0
  1522  018DAD  00                 	db	0
  1523  018DAE  00                 	db	0
  1524  018DAF  00                 	db	0
  1525  018DB0  00                 	db	0
  1526  018DB1  00                 	db	0
  1527  018DB2  00                 	db	0
  1528  018DB3  00                 	db	0
  1529  018DB4  00                 	db	0
  1530  018DB5  00                 	db	0
  1531  018DB6  00                 	db	0
  1532  018DB7  00                 	db	0
  1533  018DB8  00                 	db	0
  1534  018DB9  00                 	db	0
  1535  018DBA  00                 	db	0
  1536  018DBB  00                 	db	0
  1537  018DBC  00                 	db	0
  1538  018DBD  00                 	db	0
  1539  018DBE  00                 	db	0
  1540  018DBF  00                 	db	0
  1541  018DC0  00                 	db	0
  1542  018DC1  00                 	db	0
  1543  018DC2  00                 	db	0
  1544  018DC3  00                 	db	0
  1545  018DC4  00                 	db	0
  1546  018DC5  00                 	db	0
  1547  018DC6  00                 	db	0
  1548  018DC7  00                 	db	0
  1549  018DC8  00                 	db	0
  1550  018DC9  0000               	dw	0
  1551  018DCB  0000               	dw	0
  1552  018DCD  0000               	dw	0
  1553  018DCF  0000               	dw	0
  1554  018DD1  00                 	db	0
  1555  018DD2  00                 	db	0
  1556  018DD3  00                 	db	0
  1557  018DD4  00                 	db	0
  1558  018DD5  00                 	db	0
  1559  018DD6  00                 	db	0
  1560  018DD7  0000               	dw	0
  1561  018DD9  0000               	dw	0
  1562  018DDB  0000               	dw	0
  1563  018DDD  0000               	dw	0
  1564  018DDF  0000               	dw	0
  1565  018DE1  0000               	dw	0
  1566  018DE3  00                 	db	0
  1567  018DE4  00                 	db	0
  1568  018DE5  00                 	db	0
  1569  018DE6  00                 	db	0
  1570  018DE7  00                 	db	0
  1571  018DE8  00                 	db	0
  1572  018DE9  00                 	db	0
  1573  018DEA  00                 	db	0
  1574  018DEB  00                 	db	0
  1575  018DEC  00                 	db	0
  1576  018DED  0000               	dw	0
  1577  018DEF  0000               	dw	0
  1578  018DF1  2D                 	db	45
  1579  018DF2  00                 	db	0
  1580  018DF3  00                 	db	0
  1581  018DF4  0000               	dw	0
  1582  018DF6  0000               	dw	0
  1583  018DF8  0000               	dw	0
  1584  018DFA  0000               	dw	0
  1585  018DFC  0000               	dw	0
  1586  018DFE  0000               	dw	0
  1587  018E00  0000               	dw	0
  1588  018E02  0000               	dw	0
  1589                           
  1590                           	psect	mediumconst
  1591  00FC70                     __pmediumconst:
  1592                           	opt callstack 0
  1593  00FC70  00                 	db	0
  1594  00FC71                     _BVSOC_TABLE:
  1595                           	opt callstack 0
  1596  00FC71  59D8               	dw	23000
  1597  00FC73  0000               	dw	0
  1598  00FC75  0005               	dw	5
  1599  00FC77  0000               	dw	0
  1600  00FC79  5B68               	dw	23400
  1601  00FC7B  0000               	dw	0
  1602  00FC7D  000A               	dw	10
  1603  00FC7F  0000               	dw	0
  1604  00FC81  5C30               	dw	23600
  1605  00FC83  0000               	dw	0
  1606  00FC85  0014               	dw	20
  1607  00FC87  0000               	dw	0
  1608  00FC89  5E38               	dw	24120
  1609  00FC8B  0000               	dw	0
  1610  00FC8D  0019               	dw	25
  1611  00FC8F  0000               	dw	0
  1612  00FC91  5E88               	dw	24200
  1613  00FC93  0000               	dw	0
  1614  00FC95  001E               	dw	30
  1615  00FC97  0000               	dw	0
  1616  00FC99  5F78               	dw	24440
  1617  00FC9B  0000               	dw	0
  1618  00FC9D  0028               	dw	40
  1619  00FC9F  0000               	dw	0
  1620  00FCA1  5FDC               	dw	24540
  1621  00FCA3  0000               	dw	0
  1622  00FCA5  002D               	dw	45
  1623  00FCA7  0000               	dw	0
  1624  00FCA9  6018               	dw	24600
  1625  00FCAB  0000               	dw	0
  1626  00FCAD  0032               	dw	50
  1627  00FCAF  0000               	dw	0
  1628  00FCB1  6046               	dw	24646
  1629  00FCB3  0000               	dw	0
  1630  00FCB5  0035               	dw	53
  1631  00FCB7  0000               	dw	0
  1632  00FCB9  607C               	dw	24700
  1633  00FCBB  0000               	dw	0
  1634  00FCBD  0037               	dw	55
  1635  00FCBF  0000               	dw	0
  1636  00FCC1  60AE               	dw	24750
  1637  00FCC3  0000               	dw	0
  1638  00FCC5  0039               	dw	57
  1639  00FCC7  0000               	dw	0
  1640  00FCC9  60E0               	dw	24800
  1641  00FCCB  0000               	dw	0
  1642  00FCCD  003C               	dw	60
  1643  00FCCF  0000               	dw	0
  1644  00FCD1  6112               	dw	24850
  1645  00FCD3  0000               	dw	0
  1646  00FCD5  003F               	dw	63
  1647  00FCD7  0000               	dw	0
  1648  00FCD9  6176               	dw	24950
  1649  00FCDB  0000               	dw	0
  1650  00FCDD  0043               	dw	67
  1651  00FCDF  0000               	dw	0
  1652  00FCE1  61A8               	dw	25000
  1653  00FCE3  0000               	dw	0
  1654  00FCE5  0046               	dw	70
  1655  00FCE7  0000               	dw	0
  1656  00FCE9  61BC               	dw	25020
  1657  00FCEB  0000               	dw	0
  1658  00FCED  0048               	dw	72
  1659  00FCEF  0000               	dw	0
  1660  00FCF1  61D0               	dw	25040
  1661  00FCF3  0000               	dw	0
  1662  00FCF5  004B               	dw	75
  1663  00FCF7  0000               	dw	0
  1664  00FCF9  61DA               	dw	25050
  1665  00FCFB  0000               	dw	0
  1666  00FCFD  0050               	dw	80
  1667  00FCFF  0000               	dw	0
  1668  00FD01  61E4               	dw	25060
  1669  00FD03  0000               	dw	0
  1670  00FD05  0055               	dw	85
  1671  00FD07  0000               	dw	0
  1672  00FD09  61F8               	dw	25080
  1673  00FD0B  0000               	dw	0
  1674  00FD0D  005A               	dw	90
  1675  00FD0F  0000               	dw	0
  1676  00FD11  6208               	dw	25096
  1677  00FD13  0000               	dw	0
  1678  00FD15  005C               	dw	92
  1679  00FD17  0000               	dw	0
  1680  00FD19  6222               	dw	25122
  1681  00FD1B  0000               	dw	0
  1682  00FD1D  005D               	dw	93
  1683  00FD1F  0000               	dw	0
  1684  00FD21  6234               	dw	25140
  1685  00FD23  0000               	dw	0
  1686  00FD25  005F               	dw	95
  1687  00FD27  0000               	dw	0
  1688  00FD29  6248               	dw	25160
  1689  00FD2B  0000               	dw	0
  1690  00FD2D  0061               	dw	97
  1691  00FD2F  0000               	dw	0
  1692  00FD31  625C               	dw	25180
  1693  00FD33  0000               	dw	0
  1694  00FD35  0064               	dw	100
  1695  00FD37  0000               	dw	0
  1696  00FD39  6658               	dw	26200
  1697  00FD3B  0000               	dw	0
  1698  00FD3D  005A               	dw	90
  1699  00FD3F  0000               	dw	0
  1700  00FD41                     __end_of_BVSOC_TABLE:
  1701                           	opt callstack 0
  1702  00FD41                     _T:
  1703                           	opt callstack 0
  1704  00FD41  63                 	db	99
  1705  00FD42  6F                 	db	111
  1706  00FD43  6D                 	db	109
  1707  00FD44  6D                 	db	109
  1708  00FD45  61                 	db	97
  1709  00FD46  6E                 	db	110
  1710  00FD47  64                 	db	100
  1711  00FD48  73                 	db	115
  1712  00FD49  20                 	db	32
  1713  00FD4A  31                 	db	49
  1714  00FD4B  00                 	db	0
  1715  00FD4C  00                 	db	0
  1716  00FD4D  00                 	db	0
  1717  00FD4E  00                 	db	0
  1718  00FD4F  00                 	db	0
  1719  00FD50  00                 	db	0
  1720  00FD51  00                 	db	0
  1721  00FD52  00                 	db	0
  1722  00FD53  64                 	db	100
  1723  00FD54  69                 	db	105
  1724  00FD55  73                 	db	115
  1725  00FD56  70                 	db	112
  1726  00FD57  6C                 	db	108
  1727  00FD58  61                 	db	97
  1728  00FD59  79                 	db	121
  1729  00FD5A  73                 	db	115
  1730  00FD5B  20                 	db	32
  1731  00FD5C  31                 	db	49
  1732  00FD5D  00                 	db	0
  1733  00FD5E  00                 	db	0
  1734  00FD5F  00                 	db	0
  1735  00FD60  00                 	db	0
  1736  00FD61  00                 	db	0
  1737  00FD62  00                 	db	0
  1738  00FD63  00                 	db	0
  1739  00FD64  00                 	db	0
  1740  00FD65  63                 	db	99
  1741  00FD66  6F                 	db	111
  1742  00FD67  6D                 	db	109
  1743  00FD68  6D                 	db	109
  1744  00FD69  61                 	db	97
  1745  00FD6A  6E                 	db	110
  1746  00FD6B  64                 	db	100
  1747  00FD6C  73                 	db	115
  1748  00FD6D  20                 	db	32
  1749  00FD6E  32                 	db	50
  1750  00FD6F  00                 	db	0
  1751  00FD70  00                 	db	0
  1752  00FD71  00                 	db	0
  1753  00FD72  00                 	db	0
  1754  00FD73  00                 	db	0
  1755  00FD74  00                 	db	0
  1756  00FD75  00                 	db	0
  1757  00FD76  00                 	db	0
  1758  00FD77  64                 	db	100
  1759  00FD78  69                 	db	105
  1760  00FD79  73                 	db	115
  1761  00FD7A  70                 	db	112
  1762  00FD7B  6C                 	db	108
  1763  00FD7C  61                 	db	97
  1764  00FD7D  79                 	db	121
  1765  00FD7E  73                 	db	115
  1766  00FD7F  20                 	db	32
  1767  00FD80  32                 	db	50
  1768  00FD81  00                 	db	0
  1769  00FD82  00                 	db	0
  1770  00FD83  00                 	db	0
  1771  00FD84  00                 	db	0
  1772  00FD85  00                 	db	0
  1773  00FD86  00                 	db	0
  1774  00FD87  00                 	db	0
  1775  00FD88  00                 	db	0
  1776  00FD89  63                 	db	99
  1777  00FD8A  6F                 	db	111
  1778  00FD8B  6D                 	db	109
  1779  00FD8C  6D                 	db	109
  1780  00FD8D  61                 	db	97
  1781  00FD8E  6E                 	db	110
  1782  00FD8F  64                 	db	100
  1783  00FD90  73                 	db	115
  1784  00FD91  20                 	db	32
  1785  00FD92  33                 	db	51
  1786  00FD93  00                 	db	0
  1787  00FD94  00                 	db	0
  1788  00FD95  00                 	db	0
  1789  00FD96  00                 	db	0
  1790  00FD97  00                 	db	0
  1791  00FD98  00                 	db	0
  1792  00FD99  00                 	db	0
  1793  00FD9A  00                 	db	0
  1794  00FD9B  64                 	db	100
  1795  00FD9C  69                 	db	105
  1796  00FD9D  73                 	db	115
  1797  00FD9E  70                 	db	112
  1798  00FD9F  6C                 	db	108
  1799  00FDA0  61                 	db	97
  1800  00FDA1  79                 	db	121
  1801  00FDA2  73                 	db	115
  1802  00FDA3  20                 	db	32
  1803  00FDA4  33                 	db	51
  1804  00FDA5  00                 	db	0
  1805  00FDA6  00                 	db	0
  1806  00FDA7  00                 	db	0
  1807  00FDA8  00                 	db	0
  1808  00FDA9  00                 	db	0
  1809  00FDAA  00                 	db	0
  1810  00FDAB  00                 	db	0
  1811  00FDAC  00                 	db	0
  1812  00FDAD  63                 	db	99
  1813  00FDAE  6F                 	db	111
  1814  00FDAF  6D                 	db	109
  1815  00FDB0  6D                 	db	109
  1816  00FDB1  61                 	db	97
  1817  00FDB2  6E                 	db	110
  1818  00FDB3  64                 	db	100
  1819  00FDB4  73                 	db	115
  1820  00FDB5  20                 	db	32
  1821  00FDB6  34                 	db	52
  1822  00FDB7  00                 	db	0
  1823  00FDB8  00                 	db	0
  1824  00FDB9  00                 	db	0
  1825  00FDBA  00                 	db	0
  1826  00FDBB  00                 	db	0
  1827  00FDBC  00                 	db	0
  1828  00FDBD  00                 	db	0
  1829  00FDBE  00                 	db	0
  1830  00FDBF  64                 	db	100
  1831  00FDC0  69                 	db	105
  1832  00FDC1  73                 	db	115
  1833  00FDC2  70                 	db	112
  1834  00FDC3  6C                 	db	108
  1835  00FDC4  61                 	db	97
  1836  00FDC5  79                 	db	121
  1837  00FDC6  73                 	db	115
  1838  00FDC7  20                 	db	32
  1839  00FDC8  34                 	db	52
  1840  00FDC9  00                 	db	0
  1841  00FDCA  00                 	db	0
  1842  00FDCB  00                 	db	0
  1843  00FDCC  00                 	db	0
  1844  00FDCD  00                 	db	0
  1845  00FDCE  00                 	db	0
  1846  00FDCF  00                 	db	0
  1847  00FDD0  00                 	db	0
  1848  00FDD1                     __end_of_T:
  1849                           	opt callstack 0
  1850  00FDD1  0000               	dw	0
  1851  00FDD3  3F80               	dw	16256
  1852  00FDD5  0000               	dw	0
  1853  00FDD7  3FC0               	dw	16320
  1854  00FDD9                     __end_of_bp:
  1855                           	opt callstack 0
  1856  00FDD9  AA00               	dw	43520
  1857  00FDDB  3FB8               	dw	16312
  1858  00FDDD                     __end_of_ivln2_h:
  1859                           	opt callstack 0
  1860  00FDDD  23C6               	dw	9158
  1861  00FDDF  B8F6               	dw	47350
  1862  00FDE1                     __end_of_cp_l:
  1863                           	opt callstack 0
  1864  00FDE1  4000               	dw	16384
  1865  00FDE3  3F76               	dw	16246
  1866  00FDE5                     __end_of_cp_h:
  1867                           	opt callstack 0
  1868  0000                     _IVTADL	set	14493
  1869  0000                     _IVTADH	set	14494
  1870  0000                     _IVTADU	set	14495
  1871  0000                     _PIR6bits	set	14758
  1872  0000                     _PIR4bits	set	14756
  1873  0000                     _PIE8bits	set	14744
  1874  0000                     _PIR8bits	set	14760
  1875  0000                     _SCANPR	set	14839
  1876  0000                     _DMA2PR	set	14836
  1877  0000                     _DMA1PR	set	14835
  1878  0000                     _MAINPR	set	14834
  1879  0000                     _ISRPR	set	14833
  1880  0000                     _PIE2bits	set	14738
  1881  0000                     _PIR2bits	set	14754
  1882  0000                     _PIE9bits	set	14745
  1883  0000                     _PIR9bits	set	14761
  1884  0000                     _PIE6bits	set	14742
  1885  0000                     _PIE3bits	set	14739
  1886  0000                     _PMD7	set	14791
  1887  0000                     _PMD6	set	14790
  1888  0000                     _PMD5	set	14789
  1889  0000                     _PMD4	set	14788
  1890  0000                     _PMD3	set	14787
  1891  0000                     _PMD2	set	14786
  1892  0000                     _PMD1	set	14785
  1893  0000                     _PMD0	set	14784
  1894  0000                     _OSCTUNE	set	14814
  1895  0000                     _OSCFRQ	set	14815
  1896  0000                     _OSCEN	set	14813
  1897  0000                     _OSCCON3	set	14811
  1898  0000                     _OSCCON1	set	14809
  1899  0000                     _IPR8bits	set	14728
  1900  0000                     _IPR9bits	set	14729
  1901  0000                     _IPR5bits	set	14725
  1902  0000                     _IPR1bits	set	14721
  1903  0000                     _IPR3bits	set	14723
  1904  0000                     _IPR6bits	set	14726
  1905  0000                     _IPR2bits	set	14722
  1906  0000                     _PIE5bits	set	14741
  1907  0000                     _PIE1bits	set	14737
  1908  0000                     _PIR5bits	set	14757
  1909  0000                     _PIR1bits	set	14753
  1910  0000                     _PLLR	set	118496
  1911  0000                     _SPI1SDIPPS	set	15071
  1912  0000                     _U1RXPPS	set	15077
  1913  0000                     _RC6PPS	set	14870
  1914  0000                     _RC5PPS	set	14869
  1915  0000                     _INT1PPS	set	15041
  1916  0000                     _RD1PPS	set	14873
  1917  0000                     _INT0PPS	set	15040
  1918  0000                     _RC3PPS	set	14867
  1919  0000                     _RB6PPS	set	14862
  1920  0000                     _SPI1SCKPPS	set	15070
  1921  0000                     _U2RXPPS	set	15080
  1922  0000                     _SLRCONF	set	14995
  1923  0000                     _SLRCONE	set	14979
  1924  0000                     _SLRCOND	set	14963
  1925  0000                     _SLRCONC	set	14947
  1926  0000                     _SLRCONB	set	14931
  1927  0000                     _SLRCONA	set	14915
  1928  0000                     _ODCOND	set	14962
  1929  0000                     _ODCONC	set	14946
  1930  0000                     _ODCONB	set	14930
  1931  0000                     _ODCONA	set	14914
  1932  0000                     _ODCONF	set	14994
  1933  0000                     _ODCONE	set	14978
  1934  0000                     _WPUC	set	14945
  1935  0000                     _WPUA	set	14913
  1936  0000                     _WPUB	set	14929
  1937  0000                     _WPUE	set	14977
  1938  0000                     _WPUF	set	14993
  1939  0000                     _WPUD	set	14961
  1940  0000                     _ANSELA	set	14912
  1941  0000                     _ANSELF	set	14992
  1942  0000                     _ANSELE	set	14976
  1943  0000                     _ANSELB	set	14928
  1944  0000                     _ANSELC	set	14944
  1945  0000                     _ANSELD	set	14960
  1946  0000                     _DMA2SSA	set	15321
  1947  0000                     _DMA1SSA	set	15353
  1948  0000                     _DMA2DSZ	set	15310
  1949  0000                     _DMA2SSZ	set	15319
  1950  0000                     _DMA2DSA	set	15312
  1951  0000                     _DMA1DSZ	set	15342
  1952  0000                     _DMA1SSZ	set	15351
  1953  0000                     _DMA1DSA	set	15344
  1954  0000                     _DMA2CON0bits	set	15324
  1955  0000                     _DMA2CON1bits	set	15325
  1956  0000                     _DMA1CON0bits	set	15356
  1957  0000                     _DMA1CON1bits	set	15357
  1958  0000                     _DMA2CON0	set	15324
  1959  0000                     _DMA2AIRQ	set	15326
  1960  0000                     _DMA2SIRQ	set	15327
  1961  0000                     _DMA2CON1	set	15325
  1962  0000                     _DMA1CON0	set	15356
  1963  0000                     _DMA1AIRQ	set	15358
  1964  0000                     _DMA1SIRQ	set	15359
  1965  0000                     _DMA1CON1	set	15357
  1966  0000                     _CLKRCON	set	15589
  1967  0000                     _CLKRCLK	set	15590
  1968  0000                     _SPI1INTFbits	set	15642
  1969  0000                     _SPI1RXB	set	15632
  1970  0000                     _SPI1TXB	set	15633
  1971  0000                     _SPI1TCNTL	set	15634
  1972  0000                     _SPI1CON0	set	15636
  1973  0000                     _SPI1CLK	set	15644
  1974  0000                     _SPI1BAUD	set	15641
  1975  0000                     _SPI1CON2	set	15638
  1976  0000                     _SPI1CON1	set	15637
  1977  0000                     _U2RXB	set	15824
  1978  0000                     _U2TXB	set	15826
  1979  0000                     _U2ERRIE	set	15842
  1980  0000                     _U2ERRIR	set	15841
  1981  0000                     _U2UIR	set	15840
  1982  0000                     _U2FIFO	set	15839
  1983  0000                     _U2BRGH	set	15838
  1984  0000                     _U2BRGL	set	15837
  1985  0000                     _U2CON2	set	15836
  1986  0000                     _U2CON1	set	15835
  1987  0000                     _U2CON0	set	15834
  1988  0000                     _U2P3L	set	15832
  1989  0000                     _U2P2L	set	15830
  1990  0000                     _U2P1L	set	15828
  1991  0000                     _U1RXB	set	15848
  1992  0000                     _U1ERRIE	set	15866
  1993  0000                     _U1ERRIR	set	15865
  1994  0000                     _U1UIR	set	15864
  1995  0000                     _U1FIFO	set	15863
  1996  0000                     _U1BRGH	set	15862
  1997  0000                     _U1BRGL	set	15861
  1998  0000                     _U1CON2	set	15860
  1999  0000                     _U1CON1	set	15859
  2000  0000                     _U1CON0	set	15858
  2001  0000                     _U1P3H	set	15857
  2002  0000                     _U1P3L	set	15856
  2003  0000                     _U1P2H	set	15855
  2004  0000                     _U1P2L	set	15854
  2005  0000                     _U1P1H	set	15853
  2006  0000                     _U1P1L	set	15852
  2007  0000                     _FVRCON	set	16065
  2008  0000                     _ADFLTRL	set	16102
  2009  0000                     _ADFLTRH	set	16103
  2010  0000                     _ADCON0bits	set	16120
  2011  0000                     _ADCON0	set	16120
  2012  0000                     _ADCLK	set	16127
  2013  0000                     _ADACT	set	16126
  2014  0000                     _ADREF	set	16125
  2015  0000                     _ADSTAT	set	16124
  2016  0000                     _ADCON3	set	16123
  2017  0000                     _ADCON2	set	16122
  2018  0000                     _ADCON1	set	16121
  2019  0000                     _ADPREH	set	16119
  2020  0000                     _ADPREL	set	16118
  2021  0000                     _ADCAP	set	16117
  2022  0000                     _ADACQH	set	16116
  2023  0000                     _ADACQL	set	16115
  2024  0000                     _ADPCH	set	16113
  2025  0000                     _ADRPT	set	16108
  2026  0000                     _ADACCU	set	16106
  2027  0000                     _ADSTPTH	set	16101
  2028  0000                     _ADSTPTL	set	16100
  2029  0000                     _ADUTHH	set	16097
  2030  0000                     _ADUTHL	set	16096
  2031  0000                     _ADLTHH	set	16095
  2032  0000                     _ADLTHL	set	16094
  2033  0000                     _CCPTMRS1bits	set	16223
  2034  0000                     _PORTFbits	set	16335
  2035  0000                     _LATCbits	set	16316
  2036  0000                     _LATDbits	set	16317
  2037  0000                     _PORTBbits	set	16331
  2038  0000                     _T3CONbits	set	16294
  2039  0000                     _T3CON	set	16294
  2040  0000                     _TMR3L	set	16292
  2041  0000                     _TMR3H	set	16293
  2042  0000                     _T3CLK	set	16297
  2043  0000                     _T3GATE	set	16296
  2044  0000                     _T3GCON	set	16295
  2045  0000                     _T2CON	set	16300
  2046  0000                     _T2TMR	set	16298
  2047  0000                     _T2PR	set	16299
  2048  0000                     _T2RST	set	16303
  2049  0000                     _T2HLT	set	16301
  2050  0000                     _T2CLKCON	set	16302
  2051  0000                     _PWM8DCL	set	16224
  2052  0000                     _PWM8DCH	set	16225
  2053  0000                     _PWM8CON	set	16226
  2054  0000                     _LATEbits	set	16318
  2055  0000                     _T5CONbits	set	16282
  2056  0000                     _T5CON	set	16282
  2057  0000                     _TMR5L	set	16280
  2058  0000                     _TMR5H	set	16281
  2059  0000                     _T5CLK	set	16285
  2060  0000                     _T5GATE	set	16284
  2061  0000                     _T5GCON	set	16283
  2062  0000                     _T6CON	set	16276
  2063  0000                     _T6TMR	set	16274
  2064  0000                     _T6PR	set	16275
  2065  0000                     _T6RST	set	16279
  2066  0000                     _T6HLT	set	16277
  2067  0000                     _T6CLKCON	set	16278
  2068  0000                     _TRISD	set	16325
  2069  0000                     _TRISC	set	16324
  2070  0000                     _TRISB	set	16323
  2071  0000                     _TRISA	set	16322
  2072  0000                     _TRISF	set	16327
  2073  0000                     _TRISE	set	16326
  2074  0000                     _LATC	set	16316
  2075  0000                     _LATB	set	16315
  2076  0000                     _LATF	set	16319
  2077  0000                     _LATA	set	16314
  2078  0000                     _LATD	set	16317
  2079  0000                     _LATE	set	16318
  2080  0000                     _IVTLOCKbits	set	16340
  2081  0000                     _IVTLOCK	set	16340
  2082  0000                     _INTCON0bits	set	16338
  2083  0000                     _GIE	set	130711
  2084  00FDE5                     STR_46:
  2085                           
  2086                           ; BSR set to: 57
  2087  00FDE5  20                 	db	32
  2088  00FDE6  25                 	db	37
  2089  00FDE7  6C                 	db	108	;'l'
  2090  00FDE8  75                 	db	117	;'u'
  2091  00FDE9  2C                 	db	44
  2092  00FDEA  25                 	db	37
  2093  00FDEB  34                 	db	52	;'4'
  2094  00FDEC  2E                 	db	46
  2095  00FDED  34                 	db	52	;'4'
  2096  00FDEE  66                 	db	102	;'f'
  2097  00FDEF  2C                 	db	44
  2098  00FDF0  25                 	db	37
  2099  00FDF1  34                 	db	52	;'4'
  2100  00FDF2  2E                 	db	46
  2101  00FDF3  34                 	db	52	;'4'
  2102  00FDF4  66                 	db	102	;'f'
  2103  00FDF5  2C                 	db	44
  2104  00FDF6  25                 	db	37
  2105  00FDF7  34                 	db	52	;'4'
  2106  00FDF8  2E                 	db	46
  2107  00FDF9  34                 	db	52	;'4'
  2108  00FDFA  66                 	db	102	;'f'
  2109  00FDFB  2C                 	db	44
  2110  00FDFC  25                 	db	37
  2111  00FDFD  34                 	db	52	;'4'
  2112  00FDFE  2E                 	db	46
  2113  00FDFF  34                 	db	52	;'4'
  2114  00FE00  66                 	db	102	;'f'
  2115  00FE01  2C                 	db	44
  2116  00FE02  25                 	db	37
  2117  00FE03  34                 	db	52	;'4'
  2118  00FE04  2E                 	db	46
  2119  00FE05  33                 	db	51	;'3'
  2120  00FE06  66                 	db	102	;'f'
  2121  00FE07  2C                 	db	44
  2122  00FE08  25                 	db	37
  2123  00FE09  34                 	db	52	;'4'
  2124  00FE0A  2E                 	db	46
  2125  00FE0B  33                 	db	51	;'3'
  2126  00FE0C  66                 	db	102	;'f'
  2127  00FE0D  2C                 	db	44
  2128  00FE0E  25                 	db	37
  2129  00FE0F  34                 	db	52	;'4'
  2130  00FE10  2E                 	db	46
  2131  00FE11  33                 	db	51	;'3'
  2132  00FE12  66                 	db	102	;'f'
  2133  00FE13  2C                 	db	44
  2134  00FE14  25                 	db	37
  2135  00FE15  34                 	db	52	;'4'
  2136  00FE16  2E                 	db	46
  2137  00FE17  33                 	db	51	;'3'
  2138  00FE18  66                 	db	102	;'f'
  2139  00FE19  2C                 	db	44
  2140  00FE1A  25                 	db	37
  2141  00FE1B  34                 	db	52	;'4'
  2142  00FE1C  2E                 	db	46
  2143  00FE1D  33                 	db	51	;'3'
  2144  00FE1E  66                 	db	102	;'f'
  2145  00FE1F  2C                 	db	44
  2146  00FE20  25                 	db	37
  2147  00FE21  34                 	db	52	;'4'
  2148  00FE22  2E                 	db	46
  2149  00FE23  33                 	db	51	;'3'
  2150  00FE24  66                 	db	102	;'f'
  2151  00FE25  2C                 	db	44
  2152  00FE26  25                 	db	37
  2153  00FE27  34                 	db	52	;'4'
  2154  00FE28  2E                 	db	46
  2155  00FE29  33                 	db	51	;'3'
  2156  00FE2A  64                 	db	100	;'d'
  2157  00FE2B  2C                 	db	44
  2158  00FE2C  25                 	db	37
  2159  00FE2D  34                 	db	52	;'4'
  2160  00FE2E  2E                 	db	46
  2161  00FE2F  33                 	db	51	;'3'
  2162  00FE30  64                 	db	100	;'d'
  2163  00FE31  0D                 	db	13
  2164  00FE32  0A                 	db	10
  2165  00FE33  00                 	db	0
  2166  00FE34                     
  2167                           ; BSR set to: 57
  2168  00FE34  20                 	db	32
  2169  00FE35  4D                 	db	77	;'M'
  2170  00FE36  65                 	db	101	;'e'
  2171  00FE37  73                 	db	115	;'s'
  2172  00FE38  67                 	db	103	;'g'
  2173  00FE39  20                 	db	32
  2174  00FE3A  25                 	db	37
  2175  00FE3B  64                 	db	100	;'d'
  2176  00FE3C  20                 	db	32
  2177  00FE3D  53                 	db	83	;'S'
  2178  00FE3E  74                 	db	116	;'t'
  2179  00FE3F  61                 	db	97	;'a'
  2180  00FE40  63                 	db	99	;'c'
  2181  00FE41  6B                 	db	107	;'k'
  2182  00FE42  20                 	db	32
  2183  00FE43  25                 	db	37
  2184  00FE44  64                 	db	100	;'d'
  2185  00FE45  20                 	db	32
  2186  00FE46  20                 	db	32
  2187  00FE47  20                 	db	32
  2188  00FE48  20                 	db	32
  2189  00FE49  20                 	db	32
  2190  00FE4A  20                 	db	32
  2191  00FE4B  00                 	db	0
  2192  00FE4C                     STR_19:
  2193                           
  2194                           ; BSR set to: 57
  2195  00FE4C  42                 	db	66	;'B'
  2196  00FE4D  41                 	db	65	;'A'
  2197  00FE4E  48                 	db	72	;'H'
  2198  00FE4F  20                 	db	32
  2199  00FE50  25                 	db	37
  2200  00FE51  33                 	db	51	;'3'
  2201  00FE52  2E                 	db	46
  2202  00FE53  32                 	db	50	;'2'
  2203  00FE54  66                 	db	102	;'f'
  2204  00FE55  20                 	db	32
  2205  00FE56  50                 	db	80	;'P'
  2206  00FE57  25                 	db	37
  2207  00FE58  33                 	db	51	;'3'
  2208  00FE59  2E                 	db	46
  2209  00FE5A  32                 	db	50	;'2'
  2210  00FE5B  66                 	db	102	;'f'
  2211  00FE5C  20                 	db	32
  2212  00FE5D  20                 	db	32
  2213  00FE5E  20                 	db	32
  2214  00FE5F  00                 	db	0
  2215  00FE60                     STR_39:
  2216                           
  2217                           ; BSR set to: 57
  2218  00FE60  20                 	db	32
  2219  00FE61  20                 	db	32
  2220  00FE62  20                 	db	32
  2221  00FE63  20                 	db	32
  2222  00FE64  20                 	db	32
  2223  00FE65  20                 	db	32
  2224  00FE66  20                 	db	32
  2225  00FE67  20                 	db	32
  2226  00FE68  20                 	db	32
  2227  00FE69  20                 	db	32
  2228  00FE6A  20                 	db	32
  2229  00FE6B  20                 	db	32
  2230  00FE6C  20                 	db	32
  2231  00FE6D  20                 	db	32
  2232  00FE6E  20                 	db	32
  2233  00FE6F  20                 	db	32
  2234  00FE70  20                 	db	32
  2235  00FE71  20                 	db	32
  2236  00FE72  00                 	db	0
  2237  00FE73                     STR_29:
  2238                           
  2239                           ; BSR set to: 57
  2240  00FE73  48                 	db	72	;'H'
  2241  00FE74  45                 	db	69	;'E'
  2242  00FE75  4C                 	db	76	;'L'
  2243  00FE76  50                 	db	80	;'P'
  2244  00FE77  20                 	db	32
  2245  00FE78  25                 	db	37
  2246  00FE79  73                 	db	115	;'s'
  2247  00FE7A  20                 	db	32
  2248  00FE7B  20                 	db	32
  2249  00FE7C  20                 	db	32
  2250  00FE7D  20                 	db	32
  2251  00FE7E  20                 	db	32
  2252  00FE7F  20                 	db	32
  2253  00FE80  20                 	db	32
  2254  00FE81  20                 	db	32
  2255  00FE82  20                 	db	32
  2256  00FE83  20                 	db	32
  2257  00FE84  20                 	db	32
  2258  00FE85  00                 	db	0
  2259  00FE86                     
  2260                           ; BSR set to: 57
  2261  00FE86  44                 	db	68	;'D'
  2262  00FE87  49                 	db	73	;'I'
  2263  00FE88  53                 	db	83	;'S'
  2264  00FE89  50                 	db	80	;'P'
  2265  00FE8A  4C                 	db	76	;'L'
  2266  00FE8B  41                 	db	65	;'A'
  2267  00FE8C  59                 	db	89	;'Y'
  2268  00FE8D  20                 	db	32
  2269  00FE8E  25                 	db	37
  2270  00FE8F  73                 	db	115	;'s'
  2271  00FE90  20                 	db	32
  2272  00FE91  20                 	db	32
  2273  00FE92  20                 	db	32
  2274  00FE93  20                 	db	32
  2275  00FE94  20                 	db	32
  2276  00FE95  20                 	db	32
  2277  00FE96  20                 	db	32
  2278  00FE97  20                 	db	32
  2279  00FE98  00                 	db	0
  2280  00FE99                     STR_20:
  2281                           
  2282                           ; BSR set to: 57
  2283  00FE99  53                 	db	83	;'S'
  2284  00FE9A  4F                 	db	79	;'O'
  2285  00FE9B  43                 	db	67	;'C'
  2286  00FE9C  20                 	db	32
  2287  00FE9D  25                 	db	37
  2288  00FE9E  64                 	db	100	;'d'
  2289  00FE9F  20                 	db	32
  2290  00FEA0  52                 	db	82	;'R'
  2291  00FEA1  55                 	db	85	;'U'
  2292  00FEA2  4E                 	db	78	;'N'
  2293  00FEA3  20                 	db	32
  2294  00FEA4  25                 	db	37
  2295  00FEA5  64                 	db	100	;'d'
  2296  00FEA6  20                 	db	32
  2297  00FEA7  20                 	db	32
  2298  00FEA8  20                 	db	32
  2299  00FEA9  20                 	db	32
  2300  00FEAA  20                 	db	32
  2301  00FEAB  00                 	db	0
  2302  00FEAC                     STR_12:
  2303                           
  2304                           ; BSR set to: 57
  2305  00FEAC  50                 	db	80	;'P'
  2306  00FEAD  56                 	db	86	;'V'
  2307  00FEAE  20                 	db	32
  2308  00FEAF  20                 	db	32
  2309  00FEB0  20                 	db	32
  2310  00FEB1  50                 	db	80	;'P'
  2311  00FEB2  57                 	db	87	;'W'
  2312  00FEB3  52                 	db	82	;'R'
  2313  00FEB4  20                 	db	32
  2314  00FEB5  25                 	db	37
  2315  00FEB6  33                 	db	51	;'3'
  2316  00FEB7  2E                 	db	46
  2317  00FEB8  32                 	db	50	;'2'
  2318  00FEB9  66                 	db	102	;'f'
  2319  00FEBA  20                 	db	32
  2320  00FEBB  20                 	db	32
  2321  00FEBC  20                 	db	32
  2322  00FEBD  20                 	db	32
  2323  00FEBE  00                 	db	0
  2324  00FEBF                     STR_14:
  2325                           
  2326                           ; BSR set to: 57
  2327  00FEBF  49                 	db	73	;'I'
  2328  00FEC0  4E                 	db	78	;'N'
  2329  00FEC1  56                 	db	86	;'V'
  2330  00FEC2  20                 	db	32
  2331  00FEC3  20                 	db	32
  2332  00FEC4  50                 	db	80	;'P'
  2333  00FEC5  57                 	db	87	;'W'
  2334  00FEC6  52                 	db	82	;'R'
  2335  00FEC7  20                 	db	32
  2336  00FEC8  25                 	db	37
  2337  00FEC9  33                 	db	51	;'3'
  2338  00FECA  2E                 	db	46
  2339  00FECB  32                 	db	50	;'2'
  2340  00FECC  66                 	db	102	;'f'
  2341  00FECD  20                 	db	32
  2342  00FECE  20                 	db	32
  2343  00FECF  20                 	db	32
  2344  00FED0  20                 	db	32
  2345  00FED1  00                 	db	0
  2346  00FED2                     STR_13:
  2347                           
  2348                           ; BSR set to: 57
  2349  00FED2  4C                 	db	76	;'L'
  2350  00FED3  4F                 	db	79	;'O'
  2351  00FED4  41                 	db	65	;'A'
  2352  00FED5  44                 	db	68	;'D'
  2353  00FED6  20                 	db	32
  2354  00FED7  50                 	db	80	;'P'
  2355  00FED8  57                 	db	87	;'W'
  2356  00FED9  52                 	db	82	;'R'
  2357  00FEDA  20                 	db	32
  2358  00FEDB  25                 	db	37
  2359  00FEDC  33                 	db	51	;'3'
  2360  00FEDD  2E                 	db	46
  2361  00FEDE  32                 	db	50	;'2'
  2362  00FEDF  66                 	db	102	;'f'
  2363  00FEE0  20                 	db	32
  2364  00FEE1  20                 	db	32
  2365  00FEE2  20                 	db	32
  2366  00FEE3  20                 	db	32
  2367  00FEE4  00                 	db	0
  2368  00FEE5                     STR_18:
  2369                           
  2370                           ; BSR set to: 57
  2371  00FEE5  42                 	db	66	;'B'
  2372  00FEE6  41                 	db	65	;'A'
  2373  00FEE7  54                 	db	84	;'T'
  2374  00FEE8  54                 	db	84	;'T'
  2375  00FEE9  20                 	db	32
  2376  00FEEA  50                 	db	80	;'P'
  2377  00FEEB  57                 	db	87	;'W'
  2378  00FEEC  52                 	db	82	;'R'
  2379  00FEED  20                 	db	32
  2380  00FEEE  25                 	db	37
  2381  00FEEF  33                 	db	51	;'3'
  2382  00FEF0  2E                 	db	46
  2383  00FEF1  32                 	db	50	;'2'
  2384  00FEF2  66                 	db	102	;'f'
  2385  00FEF3  20                 	db	32
  2386  00FEF4  20                 	db	32
  2387  00FEF5  20                 	db	32
  2388  00FEF6  20                 	db	32
  2389  00FEF7  00                 	db	0
  2390  00FEF8                     STR_16:
  2391                           
  2392                           ; BSR set to: 57
  2393  00FEF8  42                 	db	66	;'B'
  2394  00FEF9  56                 	db	86	;'V'
  2395  00FEFA  20                 	db	32
  2396  00FEFB  25                 	db	37
  2397  00FEFC  32                 	db	50	;'2'
  2398  00FEFD  2E                 	db	46
  2399  00FEFE  32                 	db	50	;'2'
  2400  00FEFF  66                 	db	102	;'f'
  2401  00FF00  20                 	db	32
  2402  00FF01  42                 	db	66	;'B'
  2403  00FF02  41                 	db	65	;'A'
  2404  00FF03  20                 	db	32
  2405  00FF04  25                 	db	37
  2406  00FF05  32                 	db	50	;'2'
  2407  00FF06  2E                 	db	46
  2408  00FF07  32                 	db	50	;'2'
  2409  00FF08  66                 	db	102	;'f'
  2410  00FF09  20                 	db	32
  2411  00FF0A  00                 	db	0
  2412  00FF0B                     STR_17:
  2413                           
  2414                           ; BSR set to: 57
  2415  00FF0B  43                 	db	67	;'C'
  2416  00FF0C  56                 	db	86	;'V'
  2417  00FF0D  20                 	db	32
  2418  00FF0E  25                 	db	37
  2419  00FF0F  32                 	db	50	;'2'
  2420  00FF10  2E                 	db	46
  2421  00FF11  32                 	db	50	;'2'
  2422  00FF12  66                 	db	102	;'f'
  2423  00FF13  20                 	db	32
  2424  00FF14  4C                 	db	76	;'L'
  2425  00FF15  41                 	db	65	;'A'
  2426  00FF16  20                 	db	32
  2427  00FF17  25                 	db	37
  2428  00FF18  32                 	db	50	;'2'
  2429  00FF19  2E                 	db	46
  2430  00FF1A  32                 	db	50	;'2'
  2431  00FF1B  66                 	db	102	;'f'
  2432  00FF1C  20                 	db	32
  2433  00FF1D  00                 	db	0
  2434  00FF1E                     STR_15:
  2435                           
  2436                           ; BSR set to: 57
  2437  00FF1E  50                 	db	80	;'P'
  2438  00FF1F  56                 	db	86	;'V'
  2439  00FF20  20                 	db	32
  2440  00FF21  25                 	db	37
  2441  00FF22  32                 	db	50	;'2'
  2442  00FF23  2E                 	db	46
  2443  00FF24  32                 	db	50	;'2'
  2444  00FF25  66                 	db	102	;'f'
  2445  00FF26  20                 	db	32
  2446  00FF27  50                 	db	80	;'P'
  2447  00FF28  41                 	db	65	;'A'
  2448  00FF29  20                 	db	32
  2449  00FF2A  25                 	db	37
  2450  00FF2B  32                 	db	50	;'2'
  2451  00FF2C  2E                 	db	46
  2452  00FF2D  32                 	db	50	;'2'
  2453  00FF2E  66                 	db	102	;'f'
  2454  00FF2F  20                 	db	32
  2455  00FF30  00                 	db	0
  2456  00FF31                     STR_8:
  2457                           
  2458                           ; BSR set to: 57
  2459  00FF31  20                 	db	32
  2460  00FF32  56                 	db	86	;'V'
  2461  00FF33  54                 	db	84	;'T'
  2462  00FF34  45                 	db	69	;'E'
  2463  00FF35  52                 	db	82	;'R'
  2464  00FF36  4D                 	db	77	;'M'
  2465  00FF37  20                 	db	32
  2466  00FF38  23                 	db	35
  2467  00FF39  32                 	db	50	;'2'
  2468  00FF3A  20                 	db	32
  2469  00FF3B  20                 	db	32
  2470  00FF3C  20                 	db	32
  2471  00FF3D  20                 	db	32
  2472  00FF3E  20                 	db	32
  2473  00FF3F  20                 	db	32
  2474  00FF40  20                 	db	32
  2475  00FF41  00                 	db	0
  2476  00FF42                     STR_4:
  2477                           
  2478                           ; BSR set to: 57
  2479  00FF42  20                 	db	32
  2480  00FF43  4E                 	db	78	;'N'
  2481  00FF44  53                 	db	83	;'S'
  2482  00FF45  41                 	db	65	;'A'
  2483  00FF46  53                 	db	83	;'S'
  2484  00FF47  50                 	db	80	;'P'
  2485  00FF48  4F                 	db	79	;'O'
  2486  00FF49  4F                 	db	79	;'O'
  2487  00FF4A  4B                 	db	75	;'K'
  2488  00FF4B  20                 	db	32
  2489  00FF4C  20                 	db	32
  2490  00FF4D  20                 	db	32
  2491  00FF4E  20                 	db	32
  2492  00FF4F  20                 	db	32
  2493  00FF50  20                 	db	32
  2494  00FF51  20                 	db	32
  2495  00FF52  00                 	db	0
  2496  00FF53                     STR_1:
  2497                           
  2498                           ; BSR set to: 57
  2499  00FF53  20                 	db	32
  2500  00FF54  4D                 	db	77	;'M'
  2501  00FF55  42                 	db	66	;'B'
  2502  00FF56  4D                 	db	77	;'M'
  2503  00FF57  43                 	db	67	;'C'
  2504  00FF58  20                 	db	32
  2505  00FF59  53                 	db	83	;'S'
  2506  00FF5A  4F                 	db	79	;'O'
  2507  00FF5B  4C                 	db	76	;'L'
  2508  00FF5C  41                 	db	65	;'A'
  2509  00FF5D  52                 	db	82	;'R'
  2510  00FF5E  4D                 	db	77	;'M'
  2511  00FF5F  4F                 	db	79	;'O'
  2512  00FF60  4E                 	db	78	;'N'
  2513  00FF61  20                 	db	32
  2514  00FF62  20                 	db	32
  2515  00FF63  00                 	db	0
  2516  00FF64                     STR_5:
  2517                           
  2518                           ; BSR set to: 57
  2519  00FF64  20                 	db	32
  2520  00FF65  53                 	db	83	;'S'
  2521  00FF66  45                 	db	69	;'E'
  2522  00FF67  51                 	db	81	;'Q'
  2523  00FF68  55                 	db	85	;'U'
  2524  00FF69  45                 	db	69	;'E'
  2525  00FF6A  4E                 	db	78	;'N'
  2526  00FF6B  43                 	db	67	;'C'
  2527  00FF6C  45                 	db	69	;'E'
  2528  00FF6D  20                 	db	32
  2529  00FF6E  54                 	db	84	;'T'
  2530  00FF6F  45                 	db	69	;'E'
  2531  00FF70  53                 	db	83	;'S'
  2532  00FF71  54                 	db	84	;'T'
  2533  00FF72  20                 	db	32
  2534  00FF73  20                 	db	32
  2535  00FF74  00                 	db	0
  2536  00FF75                     STR_11:
  2537                           
  2538                           ; BSR set to: 57
  2539  00FF75  25                 	db	37
  2540  00FF76  64                 	db	100	;'d'
  2541  00FF77  20                 	db	32
  2542  00FF78  25                 	db	37
  2543  00FF79  32                 	db	50	;'2'
  2544  00FF7A  2E                 	db	46
  2545  00FF7B  34                 	db	52	;'4'
  2546  00FF7C  66                 	db	102	;'f'
  2547  00FF7D  2C                 	db	44
  2548  00FF7E  20                 	db	32
  2549  00FF7F  25                 	db	37
  2550  00FF80  64                 	db	100	;'d'
  2551  00FF81  20                 	db	32
  2552  00FF82  20                 	db	32
  2553  00FF83  20                 	db	32
  2554  00FF84  23                 	db	35
  2555  00FF85  00                 	db	0
  2556  00FF86                     STR_9:
  2557                           
  2558                           ; BSR set to: 57
  2559  00FF86  25                 	db	37
  2560  00FF87  64                 	db	100	;'d'
  2561  00FF88  20                 	db	32
  2562  00FF89  25                 	db	37
  2563  00FF8A  32                 	db	50	;'2'
  2564  00FF8B  2E                 	db	46
  2565  00FF8C  34                 	db	52	;'4'
  2566  00FF8D  66                 	db	102	;'f'
  2567  00FF8E  20                 	db	32
  2568  00FF8F  20                 	db	32
  2569  00FF90  20                 	db	32
  2570  00FF91  25                 	db	37
  2571  00FF92  64                 	db	100	;'d'
  2572  00FF93  20                 	db	32
  2573  00FF94  20                 	db	32
  2574  00FF95  00                 	db	0
  2575  00FF96                     STR_33:
  2576                           
  2577                           ; BSR set to: 57
  2578  00FF96  76                 	db	118	;'v'
  2579  00FF97  74                 	db	116	;'t'
  2580  00FF98  65                 	db	101	;'e'
  2581  00FF99  72                 	db	114	;'r'
  2582  00FF9A  6D                 	db	109	;'m'
  2583  00FF9B  20                 	db	32
  2584  00FF9C  25                 	db	37
  2585  00FF9D  78                 	db	120	;'x'
  2586  00FF9E  3A                 	db	58	;':'
  2587  00FF9F  25                 	db	37
  2588  00FFA0  78                 	db	120	;'x'
  2589  00FFA1  20                 	db	32
  2590  00FFA2  20                 	db	32
  2591  00FFA3  20                 	db	32
  2592  00FFA4  00                 	db	0
  2593  00FFA5                     STR_2:
  2594                           
  2595                           ; BSR set to: 57
  2596  00FFA5  20                 	db	32
  2597  00FFA6  56                 	db	86	;'V'
  2598  00FFA7  65                 	db	101	;'e'
  2599  00FFA8  72                 	db	114	;'r'
  2600  00FFA9  73                 	db	115	;'s'
  2601  00FFAA  69                 	db	105	;'i'
  2602  00FFAB  6F                 	db	111	;'o'
  2603  00FFAC  6E                 	db	110	;'n'
  2604  00FFAD  20                 	db	32
  2605  00FFAE  25                 	db	37
  2606  00FFAF  73                 	db	115	;'s'
  2607  00FFB0  20                 	db	32
  2608  00FFB1  20                 	db	32
  2609  00FFB2  20                 	db	32
  2610  00FFB3  00                 	db	0
  2611  00FFB4                     STR_27:
  2612                           
  2613                           ; BSR set to: 57
  2614  00FFB4  44                 	db	68	;'D'
  2615  00FFB5  65                 	db	101	;'e'
  2616  00FFB6  63                 	db	99	;'c'
  2617  00FFB7  20                 	db	32
  2618  00FFB8  31                 	db	49	;'1'
  2619  00FFB9  30                 	db	48	;'0'
  2620  00FFBA  20                 	db	32
  2621  00FFBB  32                 	db	50	;'2'
  2622  00FFBC  30                 	db	48	;'0'
  2623  00FFBD  31                 	db	49	;'1'
  2624  00FFBE  39                 	db	57	;'9'
  2625  00FFBF  00                 	db	0
  2626  00FFC0                     STR_31:
  2627                           
  2628                           ; BSR set to: 57
  2629  00FFC0  25                 	db	37
  2630  00FFC1  73                 	db	115	;'s'
  2631  00FFC2  20                 	db	32
  2632  00FFC3  20                 	db	32
  2633  00FFC4  20                 	db	32
  2634  00FFC5  20                 	db	32
  2635  00FFC6  20                 	db	32
  2636  00FFC7  20                 	db	32
  2637  00FFC8  20                 	db	32
  2638  00FFC9  00                 	db	0
  2639  00FFCA                     STR_28:
  2640                           
  2641                           ; BSR set to: 57
  2642  00FFCA  31                 	db	49	;'1'
  2643  00FFCB  36                 	db	54	;'6'
  2644  00FFCC  3A                 	db	58	;':'
  2645  00FFCD  31                 	db	49	;'1'
  2646  00FFCE  36                 	db	54	;'6'
  2647  00FFCF  3A                 	db	58	;':'
  2648  00FFD0  31                 	db	49	;'1'
  2649  00FFD1  39                 	db	57	;'9'
  2650  00FFD2  00                 	db	0
  2651  00FFD3                     STR_47:
  2652                           
  2653                           ; BSR set to: 57
  2654  00FFD3  49                 	db	73	;'I'
  2655  00FFD4  4E                 	db	78	;'N'
  2656  00FFD5  46                 	db	70	;'F'
  2657  00FFD6  00                 	db	0
  2658  00FFD7                     STR_51:
  2659                           
  2660                           ; BSR set to: 57
  2661  00FFD7  4E                 	db	78	;'N'
  2662  00FFD8  41                 	db	65	;'A'
  2663  00FFD9  4E                 	db	78	;'N'
  2664  00FFDA  00                 	db	0
  2665  00FFDB                     STR_48:
  2666                           
  2667                           ; BSR set to: 57
  2668  00FFDB  69                 	db	105	;'i'
  2669  00FFDC  6E                 	db	110	;'n'
  2670  00FFDD  66                 	db	102	;'f'
  2671  00FFDE  00                 	db	0
  2672  00FFDF                     STR_52:
  2673                           
  2674                           ; BSR set to: 57
  2675  00FFDF  6E                 	db	110	;'n'
  2676  00FFE0  61                 	db	97	;'a'
  2677  00FFE1  6E                 	db	110	;'n'
  2678  00FFE2  00                 	db	0
  2679  00FFE3                     STR_3:
  2680                           
  2681                           ; BSR set to: 57
  2682  00FFE3  31                 	db	49	;'1'
  2683  00FFE4  2E                 	db	46
  2684  00FFE5  30                 	db	48	;'0'
  2685  00FFE6  00                 	db	0
  2686  00FFE7                     STR_78:
  2687                           
  2688                           ; BSR set to: 57
  2689  00FFE7  6C                 	db	108	;'l'
  2690  00FFE8  58                 	db	88	;'X'
  2691  00FFE9  00                 	db	0
  2692  00FFEA                     STR_55:
  2693                           
  2694                           ; BSR set to: 57
  2695  00FFEA  6C                 	db	108	;'l'
  2696  00FFEB  64                 	db	100	;'d'
  2697  00FFEC  00                 	db	0
  2698  00FFED                     STR_64:
  2699                           
  2700                           ; BSR set to: 57
  2701  00FFED  6C                 	db	108	;'l'
  2702  00FFEE  66                 	db	102	;'f'
  2703  00FFEF  00                 	db	0
  2704  00FFF0                     STR_59:
  2705                           
  2706                           ; BSR set to: 57
  2707  00FFF0  6C                 	db	108	;'l'
  2708  00FFF1  69                 	db	105	;'i'
  2709  00FFF2  00                 	db	0
  2710  00FFF3                     STR_69:
  2711                           
  2712                           ; BSR set to: 57
  2713  00FFF3  6C                 	db	108	;'l'
  2714  00FFF4  75                 	db	117	;'u'
  2715  00FFF5  00                 	db	0
  2716  00FFF6                     STR_74:
  2717                           
  2718                           ; BSR set to: 57
  2719  00FFF6  6C                 	db	108	;'l'
  2720  00FFF7  78                 	db	120	;'x'
  2721  00FFF8  00                 	db	0
  2722  00FFF9                     STR_25:
  2723                           
  2724                           ; BSR set to: 57
  2725  00FFF9  25                 	db	37
  2726  00FFFA  63                 	db	99	;'c'
  2727  00FFFB  00                 	db	0
  2728  00FFFC                     STR_24:
  2729                           
  2730                           ; BSR set to: 57
  2731  00FFFC  25                 	db	37
  2732  00FFFD  73                 	db	115	;'s'
  2733  00FFFE  00                 	db	0
  2734  0000                     
  2735                           ; #config settings
  2736  00FFFF  00                 	db	0	; dummy byte at the end
  2737  0000                     
  2738                           	psect	cinit
  2739  0186D2                     __pcinit:
  2740                           	opt callstack 0
  2741  0186D2                     start_initialization:
  2742                           	opt callstack 0
  2743  0186D2                     __initialization:
  2744                           	opt callstack 0
  2745                           
  2746                           ; Initialize objects allocated to BIGRAM (512 bytes)
  2747                           ; load TBLPTR registers with __pidataBIGRAM
  2748  0186D2  0E14               	movlw	low __pidataBIGRAM
  2749  0186D4  6EF6               	movwf	tblptrl,c
  2750  0186D6  0E71               	movlw	high __pidataBIGRAM
  2751  0186D8  6EF7               	movwf	tblptrh,c
  2752  0186DA  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  2753  0186DC  6EF8               	movwf	tblptru,c
  2754  0186DE  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  2755  0186E2  EE20 F200          	lfsr	2,512
  2756  0186E6                     copy_data0:
  2757  0186E6  0009               	tblrd		*+
  2758  0186E8  006F FFD7 FFEE     	movff	tablat,postinc0
  2759  0186EE  50DD               	movf	postdec2,w,c
  2760  0186F0  50D9               	movf	fsr2l,w,c
  2761  0186F2  E1F9               	bnz	copy_data0
  2762  0186F4  50DA               	movf	fsr2h,w,c
  2763  0186F6  E1F7               	bnz	copy_data0
  2764                           
  2765                           ; Initialize objects allocated to BANK2 (188 bytes)
  2766                           ; load TBLPTR registers with __pidataBANK2
  2767  0186F8  0E48               	movlw	low __pidataBANK2
  2768  0186FA  6EF6               	movwf	tblptrl,c
  2769  0186FC  0E8D               	movlw	high __pidataBANK2
  2770  0186FE  6EF7               	movwf	tblptrh,c
  2771  018700  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  2772  018702  6EF8               	movwf	tblptru,c
  2773  018704  EE00  F200         	lfsr	0,__pdataBANK2
  2774  018708  EE20 F0BC          	lfsr	2,188
  2775  01870C                     copy_data1:
  2776  01870C  0009               	tblrd		*+
  2777  01870E  006F FFD7 FFEE     	movff	tablat,postinc0
  2778  018714  50DD               	movf	postdec2,w,c
  2779  018716  50D9               	movf	fsr2l,w,c
  2780  018718  E1F9               	bnz	copy_data1
  2781                           
  2782                           ; Initialize objects allocated to BANK1 (218 bytes)
  2783                           ; load TBLPTR registers with __pidataBANK1
  2784  01871A  0ED6               	movlw	low __pidataBANK1
  2785  01871C  6EF6               	movwf	tblptrl,c
  2786  01871E  0E8A               	movlw	high __pidataBANK1
  2787  018720  6EF7               	movwf	tblptrh,c
  2788  018722  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2789  018724  6EF8               	movwf	tblptru,c
  2790  018726  EE00  F100         	lfsr	0,__pdataBANK1
  2791  01872A  EE20 F0DA          	lfsr	2,218
  2792  01872E                     copy_data2:
  2793  01872E  0009               	tblrd		*+
  2794  018730  006F FFD7 FFEE     	movff	tablat,postinc0
  2795  018736  50DD               	movf	postdec2,w,c
  2796  018738  50D9               	movf	fsr2l,w,c
  2797  01873A  E1F9               	bnz	copy_data2
  2798                           
  2799                           ; Initialize objects allocated to BANK0 (47 bytes)
  2800                           ; load TBLPTR registers with __pidataBANK0
  2801  01873C  0E7E               	movlw	low __pidataBANK0
  2802  01873E  6EF6               	movwf	tblptrl,c
  2803  018740  0EA1               	movlw	high __pidataBANK0
  2804  018742  6EF7               	movwf	tblptrh,c
  2805  018744  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2806  018746  6EF8               	movwf	tblptru,c
  2807  018748  EE00  F0CB         	lfsr	0,__pdataBANK0
  2808  01874C  EE20 F02F          	lfsr	2,47
  2809  018750                     copy_data3:
  2810  018750  0009               	tblrd		*+
  2811  018752  006F FFD7 FFEE     	movff	tablat,postinc0
  2812  018758  50DD               	movf	postdec2,w,c
  2813  01875A  50D9               	movf	fsr2l,w,c
  2814  01875C  E1F9               	bnz	copy_data3
  2815                           
  2816                           ; Clear objects allocated to BIGRAM (290 bytes)
  2817  01875E  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  2818  018762  EE20 F122          	lfsr	2,290
  2819  018766                     clear_0:
  2820  018766  6AEE               	clrf	postinc0,c
  2821  018768  50DD               	movf	postdec2,w,c
  2822  01876A  50D9               	movf	fsr2l,w,c
  2823  01876C  E1FC               	bnz	clear_0
  2824  01876E  50DA               	movf	fsr2h,w,c
  2825  018770  E1FA               	bnz	clear_0
  2826                           
  2827                           ; Clear objects allocated to BANK5 (255 bytes)
  2828  018772  EE01  F100         	lfsr	0,__pbssBANK5
  2829  018776  EE20 F0FF          	lfsr	2,255
  2830  01877A                     clear_1:
  2831  01877A  6AEE               	clrf	postinc0,c
  2832  01877C  50DD               	movf	postdec2,w,c
  2833  01877E  50D9               	movf	fsr2l,w,c
  2834  018780  E1FC               	bnz	clear_1
  2835  018782  50DA               	movf	fsr2h,w,c
  2836  018784  E1FA               	bnz	clear_1
  2837                           
  2838                           ; Clear objects allocated to BANK4 (134 bytes)
  2839  018786  EE01  F000         	lfsr	0,__pbssBANK4
  2840  01878A  0E86               	movlw	134
  2841  01878C                     clear_2:
  2842  01878C  6AEE               	clrf	postinc0,c
  2843  01878E  06E8               	decf	wreg,f,c
  2844  018790  E1FD               	bnz	clear_2
  2845                           
  2846                           ; Clear objects allocated to BANK3 (228 bytes)
  2847  018792  EE00  F300         	lfsr	0,__pbssBANK3
  2848  018796  0EE4               	movlw	228
  2849  018798                     clear_3:
  2850  018798  6AEE               	clrf	postinc0,c
  2851  01879A  06E8               	decf	wreg,f,c
  2852  01879C  E1FD               	bnz	clear_3
  2853                           
  2854                           ; Clear objects allocated to BANK2 (8 bytes)
  2855  01879E  EE00  F2D5         	lfsr	0,__pbssBANK2
  2856  0187A2  0E08               	movlw	8
  2857  0187A4                     clear_4:
  2858  0187A4  6AEE               	clrf	postinc0,c
  2859  0187A6  06E8               	decf	wreg,f,c
  2860  0187A8  E1FD               	bnz	clear_4
  2861                           
  2862                           ; Clear objects allocated to BANK1 (32 bytes)
  2863  0187AA  EE00  F1DA         	lfsr	0,__pbssBANK1
  2864  0187AE  0E20               	movlw	32
  2865  0187B0                     clear_5:
  2866  0187B0  6AEE               	clrf	postinc0,c
  2867  0187B2  06E8               	decf	wreg,f,c
  2868  0187B4  E1FD               	bnz	clear_5
  2869                           
  2870                           ; Clear objects allocated to BANK0 (107 bytes)
  2871  0187B6  EE00  F060         	lfsr	0,__pbssBANK0
  2872  0187BA  0E6B               	movlw	107
  2873  0187BC                     clear_6:
  2874  0187BC  6AEE               	clrf	postinc0,c
  2875  0187BE  06E8               	decf	wreg,f,c
  2876  0187C0  E1FD               	bnz	clear_6
  2877                           
  2878                           ; Clear objects allocated to COMRAM (23 bytes)
  2879  0187C2  EE00  F021         	lfsr	0,__pbssCOMRAM
  2880  0187C6  0E17               	movlw	23
  2881  0187C8                     clear_7:
  2882  0187C8  6AEE               	clrf	postinc0,c
  2883  0187CA  06E8               	decf	wreg,f,c
  2884  0187CC  E1FD               	bnz	clear_7
  2885                           
  2886                           ;
  2887                           ; Setup IVTBASE
  2888                           ;
  2889  0187CE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2890  0187D0  6ED5               	movwf	213,c
  2891  0187D2  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2892  0187D4  6ED6               	movwf	214,c
  2893  0187D6  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2894  0187D8  6ED7               	movwf	215,c
  2895  0187DA                     end_of_initialization:
  2896                           	opt callstack 0
  2897  0187DA                     __end_of__initialization:
  2898                           	opt callstack 0
  2899  0187DA  0100               	movlb	0
  2900  0187DC  EFF8  F090         	goto	_main	;jump to C main() function
  2901                           
  2902                           	psect	bssCOMRAM
  2903  000021                     __pbssCOMRAM:
  2904                           	opt callstack 0
  2905  000021                     _width:
  2906                           	opt callstack 0
  2907  000021                     	ds	2
  2908  000023                     _prec:
  2909                           	opt callstack 0
  2910  000023                     	ds	2
  2911  000025                     _flags:
  2912                           	opt callstack 0
  2913  000025                     	ds	2
  2914  000027                     _timer3ReloadVal:
  2915                           	opt callstack 0
  2916  000027                     	ds	2
  2917  000029                     TMR5_ISR@CountCallBack:
  2918                           	opt callstack 0
  2919  000029                     	ds	2
  2920  00002B                     _timer5ReloadVal:
  2921                           	opt callstack 0
  2922  00002B                     	ds	2
  2923  00002D                     Volts_to_SOC@slot:
  2924                           	opt callstack 0
  2925  00002D                     	ds	1
  2926  00002E                     _mode_sw:
  2927                           	opt callstack 0
  2928  00002E                     	ds	1
  2929  00002F                     _uart2RxCount:
  2930                           	opt callstack 0
  2931  00002F                     	ds	1
  2932  000030                     _uart2RxTail:
  2933                           	opt callstack 0
  2934  000030                     	ds	1
  2935  000031                     _uart2RxHead:
  2936                           	opt callstack 0
  2937  000031                     	ds	1
  2938  000032                     _uart2TxBufferRemaining:
  2939                           	opt callstack 0
  2940  000032                     	ds	1
  2941  000033                     _uart2TxTail:
  2942                           	opt callstack 0
  2943  000033                     	ds	1
  2944  000034                     _uart2TxHead:
  2945                           	opt callstack 0
  2946  000034                     	ds	1
  2947  000035                     _uart1RxCount:
  2948                           	opt callstack 0
  2949  000035                     	ds	1
  2950  000036                     _uart1RxTail:
  2951                           	opt callstack 0
  2952  000036                     	ds	1
  2953  000037                     _uart1RxHead:
  2954                           	opt callstack 0
  2955  000037                     	ds	1
  2956                           
  2957                           	psect	bssBANK0
  2958  000060                     __pbssBANK0:
  2959                           	opt callstack 0
  2960  000060                     _S:
  2961                           	opt callstack 0
  2962  000060                     	ds	41
  2963  000089                     _spi_link:
  2964                           	opt callstack 0
  2965  000089                     	ds	12
  2966  000095                     floorf@F524:
  2967                           	opt callstack 0
  2968  000095                     	ds	4
  2969  000099                     ___fpclassifyf@F463:
  2970                           	opt callstack 0
  2971  000099                     	ds	4
  2972  00009D                     _utctime:
  2973                           	opt callstack 0
  2974  00009D                     	ds	4
  2975  0000A1                     wdtdelay@dcount:
  2976                           	opt callstack 0
  2977  0000A1                     	ds	4
  2978  0000A5                     _P:
  2979                           	opt callstack 0
  2980  0000A5                     	ds	4
  2981  0000A9                     _TMR3_InterruptHandler:
  2982                           	opt callstack 0
  2983  0000A9                     	ds	3
  2984  0000AC                     _TMR5_InterruptHandler:
  2985                           	opt callstack 0
  2986  0000AC                     	ds	3
  2987  0000AF                     _TMR6_InterruptHandler:
  2988                           	opt callstack 0
  2989  0000AF                     	ds	3
  2990  0000B2                     _ADCC_ADTI_InterruptHandler:
  2991                           	opt callstack 0
  2992  0000B2                     	ds	3
  2993  0000B5                     _ADCC_ADI_InterruptHandler:
  2994                           	opt callstack 0
  2995  0000B5                     	ds	3
  2996  0000B8                     _UART1_RxInterruptHandler:
  2997                           	opt callstack 0
  2998  0000B8                     	ds	3
  2999  0000BB                     _UART2_TxInterruptHandler:
  3000                           	opt callstack 0
  3001  0000BB                     	ds	3
  3002  0000BE                     _UART2_RxInterruptHandler:
  3003                           	opt callstack 0
  3004  0000BE                     	ds	3
  3005  0000C1                     _INT1_InterruptHandler:
  3006                           	opt callstack 0
  3007  0000C1                     	ds	3
  3008  0000C4                     _INT0_InterruptHandler:
  3009                           	opt callstack 0
  3010  0000C4                     	ds	3
  3011  0000C7                     _nout:
  3012                           	opt callstack 0
  3013  0000C7                     	ds	2
  3014  0000C9                     TMR3_ISR@CountCallBack:
  3015                           	opt callstack 0
  3016  0000C9                     	ds	2
  3017                           
  3018                           	psect	dataBANK0
  3019  0000CB                     __pdataBANK0:
  3020                           	opt callstack 0
  3021  0000CB                     _R:
  3022                           	opt callstack 0
  3023  0000CB                     	ds	40
  3024  0000F3                     _H:
  3025                           	opt callstack 0
  3026  0000F3                     	ds	7
  3027                           
  3028                           	psect	bssBANK1
  3029  0001DA                     __pbssBANK1:
  3030                           	opt callstack 0
  3031  0001DA                     _tickCount:
  3032                           	opt callstack 0
  3033  0001DA                     	ds	24
  3034  0001F2                     _uart1RxBuffer:
  3035                           	opt callstack 0
  3036  0001F2                     	ds	8
  3037                           
  3038                           	psect	dataBANK1
  3039  000100                     __pdataBANK1:
  3040                           	opt callstack 0
  3041  000100                     _C:
  3042                           	opt callstack 0
  3043  000100                     	ds	211
  3044  0001D3                     stoa@F1166:
  3045                           	opt callstack 0
  3046  0001D3                     	ds	7
  3047                           
  3048                           	psect	bssBANK2
  3049  0002D5                     __pbssBANK2:
  3050                           	opt callstack 0
  3051  0002D5                     _seed:
  3052                           	opt callstack 0
  3053  0002D5                     	ds	8
  3054                           
  3055                           	psect	dataBANK2
  3056  000200                     __pdataBANK2:
  3057                           	opt callstack 0
  3058  000200                     _V:
  3059                           	opt callstack 0
  3060  000200                     	ds	188
  3061                           
  3062                           	psect	bssBANK3
  3063  000300                     __pbssBANK3:
  3064                           	opt callstack 0
  3065  000300                     lp_filter@smooth:
  3066                           	opt callstack 0
  3067  000300                     	ds	84
  3068  000354                     _uart2TxBuffer:
  3069                           	opt callstack 0
  3070  000354                     	ds	64
  3071  000394                     _dbuf:
  3072                           	opt callstack 0
  3073  000394                     	ds	80
  3074                           
  3075                           	psect	bssBANK4
  3076  000400                     __pbssBANK4:
  3077                           	opt callstack 0
  3078  000400                     _ring_buf2:
  3079                           	opt callstack 0
  3080  000400                     	ds	67
  3081  000443                     _ring_buf1:
  3082                           	opt callstack 0
  3083  000443                     	ds	67
  3084                           
  3085                           	psect	bssBANK5
  3086  000500                     __pbssBANK5:
  3087                           	opt callstack 0
  3088  000500                     _uart2RxBuffer:
  3089                           	opt callstack 0
  3090  000500                     	ds	255
  3091                           
  3092                           	psect	bssBIGRAM
  3093  0007FF                     __pbssBIGRAM:
  3094                           	opt callstack 0
  3095  0007FF                     _D:
  3096                           	opt callstack 0
  3097  0007FF                     	ds	290
  3098                           
  3099                           	psect	dataBIGRAM
  3100  0005FF                     __pdataBIGRAM:
  3101                           	opt callstack 0
  3102  0005FF                     _port_data:
  3103                           	opt callstack 0
  3104  0005FF                     	ds	512
  3105                           
  3106                           	psect	cstackBANK2
  3107  0002BC                     __pcstackBANK2:
  3108                           	opt callstack 0
  3109  0002BC                     ??_TMR3_ISR:
  3110                           
  3111                           ; 1 bytes @ 0x0
  3112  0002BC                     	ds	25
  3113                           
  3114                           	psect	cstackCOMRAM
  3115  000038                     __pcstackCOMRAM:
  3116                           	opt callstack 0
  3117  000038                     ??_ADCC_ThresholdISR:
  3118  000038                     
  3119                           ; 1 bytes @ 0x0
  3120  000038                     	ds	5
  3121  00003D                     ??_TMR6_ISR:
  3122                           
  3123                           ; 1 bytes @ 0x5
  3124  00003D                     	ds	1
  3125  00003E                     ??_INT1_ISR:
  3126  00003E                     
  3127                           ; 1 bytes @ 0x6
  3128  00003E                     	ds	4
  3129  000042                     ??_TMR5_ISR:
  3130                           
  3131                           ; 1 bytes @ 0xA
  3132  000042                     	ds	4
  3133                           
  3134 ;;
  3135 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  3136 ;;
  3137 ;; *************** function _main *****************
  3138 ;; Defined at:
  3139 ;;		line 174 in file "main.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;		None
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  k               1  [STACK] unsigned char 
  3144 ;;  j               1  [STACK] unsigned char 
  3145 ;;  i               1  [STACK] unsigned char 
  3146 ;;  inp_index       1  [STACK] unsigned char 
  3147 ;;  mode            1  [STACK] enum E17013
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  1  [STACK] void 
  3150 ;; Registers used:
  3151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3161 ;;Total ram usage:        0 bytes
  3162 ;; Hardware stack levels required when called:   28
  3163 ;; This function calls:
  3164 ;;		_SYSTEM_Initialize
  3165 ;;		_StartTimer
  3166 ;;		_TimerDone
  3167 ;;		_WaitMs
  3168 ;;		_calc_model_data
  3169 ;;		_check_adc_scan
  3170 ;;		_check_enter_button
  3171 ;;		_check_help
  3172 ;;		_clear_adc_scan
  3173 ;;		_clear_hid_pflags
  3174 ;;		_convert_adc_data
  3175 ;;		_eaDogM_WriteCommand
  3176 ;;		_get_raw_result
  3177 ;;		_get_switch
  3178 ;;		_get_vterm_ptr
  3179 ;;		_hid_display
  3180 ;;		_init_bsoc
  3181 ;;		_init_display
  3182 ;;		_init_port_dma
  3183 ;;		_lp_filter
  3184 ;;		_mode_lamp_dim
  3185 ;;		_set_display_info
  3186 ;;		_set_vterm
  3187 ;;		_sprintf
  3188 ;;		_srand
  3189 ;;		_start_adc_scan
  3190 ;;		_start_switch_handler
  3191 ;;		_static_soc
  3192 ;;		_update_lcd
  3193 ;; This function is called by:
  3194 ;;		Startup code after reset
  3195 ;; This function uses a reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text0
  3199  0121F0                     __ptext0:
  3200                           	opt callstack 0
  3201  0121F0                     _main:
  3202                           	opt callstack 0
  3203                           
  3204                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3205  0121F0  0E05               	movlw	5
  3206  0121F2  26E1               	addwf	fsr1l,f,c
  3207  0121F4  0E00               	movlw	0
  3208  0121F6  22E2               	addwfc	fsr1h,f,c
  3209                           
  3210                           ;main.c: 176:  UI_STATES mode;;main.c: 177:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  3211                           ;stkvar	_inp_index @ sp[(-5)+3]
  3212                           
  3213                           ;incstack = 0
  3214  0121F8  0EFE               	movlw	-2
  3215  0121FA  6AE3               	clrf	plusw1,c
  3216                           
  3217                           ;stkvar	_i @ sp[(-5)+2]
  3218  0121FC  0EFD               	movlw	-3
  3219  0121FE  6AE3               	clrf	plusw1,c
  3220                           
  3221                           ;stkvar	_j @ sp[(-5)+1]
  3222  012200  0EFC               	movlw	-4
  3223  012202  6AE3               	clrf	plusw1,c
  3224  012204  2AE3               	incf	plusw1,f,c
  3225                           
  3226                           ;stkvar	_k @ sp[(-5)+0]
  3227  012206  0EFB               	movlw	-5
  3228  012208  6AE3               	clrf	plusw1,c
  3229  01220A  82E3               	bsf	plusw1,1,c
  3230                           
  3231                           ;main.c: 180:  SYSTEM_Initialize();
  3232  01220C  ECE5  F0CD         	call	_SYSTEM_Initialize	;wreg free
  3233                           
  3234                           ; BSR set to: 60
  3235                           ;main.c: 183:  (INTCON0bits.GIEH = 1);
  3236  012210  8ED2               	bsf	210,7,c	;volatile
  3237                           
  3238                           ; BSR set to: 60
  3239                           ;main.c: 186:  (INTCON0bits.GIEL = 1);
  3240  012212  8CD2               	bsf	210,6,c	;volatile
  3241                           
  3242                           ; BSR set to: 60
  3243                           ;main.c: 188:  V.ui_state = UI_STATE_INIT;
  3244  012214  0102               	movlb	2	; () banked
  3245  012216  6B00               	clrf	_V& (0+255),b	;volatile
  3246                           
  3247                           ; BSR set to: 2
  3248                           ;main.c: 193:  WaitMs(300);
  3249  012218  0E2C               	movlw	44
  3250  01221A  6EE6               	movwf	postinc1,c
  3251  01221C  0E01               	movlw	1
  3252  01221E  6EE6               	movwf	postinc1,c
  3253  012220  ECDB  F0CF         	call	_WaitMs	;wreg free
  3254                           
  3255                           ;main.c: 194:  if (PORTBbits.RB0) {
  3256  012224  A0CB               	btfss	203,0,c	;volatile
  3257  012226  D004               	goto	l12133
  3258                           
  3259                           ;main.c: 195:   mode = UI_STATE_HOST;
  3260                           ;stkvar	_mode @ sp[(-5)+4]
  3261  012228  0EFF               	movlw	-1
  3262  01222A  6AE3               	clrf	plusw1,c
  3263  01222C  2AE3               	incf	plusw1,f,c
  3264                           
  3265                           ;main.c: 196:  } else {
  3266  01222E  D004               	goto	l12135
  3267  012230                     l12133:
  3268                           
  3269                           ;main.c: 197:   mode = UI_STATE_LOG;
  3270                           ;stkvar	_mode @ sp[(-5)+4]
  3271  012230  0EFF               	movlw	-1
  3272  012232  6AE3               	clrf	plusw1,c
  3273  012234  80E3               	bsf	plusw1,0,c
  3274  012236  82E3               	bsf	plusw1,1,c	;indir
  3275  012238                     l12135:
  3276                           
  3277                           ;main.c: 200:  if (mode == UI_STATE_HOST) {
  3278                           ;stkvar	_mode @ sp[(-5)+4]
  3279  012238  0EFF               	movlw	-1
  3280  01223A  04E3               	decf	plusw1,w,c
  3281  01223C  A4D8               	btfss	status,2,c
  3282  01223E  D007               	goto	l1308
  3283                           
  3284                           ;main.c: 201:   do { LATDbits.LATD0 = 1; } while(0);
  3285  012240  80BD               	bsf	189,0,c	;volatile
  3286                           
  3287                           ;main.c: 202:   V.mode_pwm = 70;
  3288  012242  0E00               	movlw	0
  3289  012244  0102               	movlb	2	; () banked
  3290  012246  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3291  012248  0E46               	movlw	70
  3292  01224A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3293                           
  3294                           ;main.c: 203:  } else {
  3295  01224C  D004               	goto	l12139
  3296  01224E                     l1308:
  3297  01224E  90BD               	bcf	189,0,c	;volatile
  3298                           
  3299                           ;main.c: 205:   V.mode_pwm = 0;
  3300  012250  0102               	movlb	2	; () banked
  3301  012252  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3302  012254  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3303  012256                     l12139:
  3304                           
  3305                           ; BSR set to: 2
  3306                           ;main.c: 207:  mode_lamp_dim(V.mode_pwm);
  3307  012256  0060  FA57  FFE6   	movff	_V+149,postinc1
  3308  01225C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3309  012262  ECBB  F0D3         	call	_mode_lamp_dim	;wreg free
  3310  012266  D0DC               	goto	l12191
  3311  012268                     l12141:
  3312                           
  3313                           ; BSR set to: 2
  3314                           ;main.c: 215:    init_port_dma();
  3315  012268  EC5F  F0D0         	call	_init_port_dma	;wreg free
  3316                           
  3317                           ; BSR set to: 59
  3318                           ;main.c: 217:    init_display();
  3319  01226C  ECF6  F0C4         	call	_init_display	;wreg free
  3320                           
  3321                           ; BSR set to: 61
  3322                           ;main.c: 218:    eaDogM_WriteCommand(0b00001100);
  3323  012270  0E0C               	movlw	12
  3324  012272  6EE6               	movwf	postinc1,c
  3325  012274  EC1F  F0D4         	call	_eaDogM_WriteCommand	;wreg free
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;main.c: 220:    V.ui_state = mode;
  3329                           ;stkvar	_mode @ sp[(-5)+4]
  3330  012278  0EFF               	movlw	-1
  3331  01227A  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;main.c: 221:    srand(1957);
  3335  012280  0EA5               	movlw	165
  3336  012282  6EE6               	movwf	postinc1,c
  3337  012284  0E07               	movlw	7
  3338  012286  6EE6               	movwf	postinc1,c
  3339  012288  EC11  F0D0         	call	_srand	;wreg free
  3340                           
  3341                           ; BSR set to: 2
  3342                           ;main.c: 222:    set_vterm(0);
  3343  01228C  0E00               	movlw	0
  3344  01228E  6EE6               	movwf	postinc1,c
  3345  012290  EC65  F0D3         	call	_set_vterm	;wreg free
  3346                           
  3347                           ;main.c: 223:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3348  012294  0E53               	movlw	low STR_1
  3349  012296  6EE6               	movwf	postinc1,c
  3350  012298  0EFF               	movlw	high STR_1
  3351  01229A  6EE6               	movwf	postinc1,c
  3352  01229C  0E00               	movlw	0
  3353  01229E  6EE6               	movwf	postinc1,c
  3354  0122A0  0E00               	movlw	0
  3355  0122A2  6EE6               	movwf	postinc1,c
  3356  0122A4  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  3357  0122A8  0060  F007  FFE6   	movff	btemp,postinc1
  3358  0122AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3359  0122B4  0E04               	movlw	4
  3360  0122B6  6EE6               	movwf	postinc1,c
  3361  0122B8  ECF0  F0C3         	call	_sprintf	;wreg free
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;main.c: 224:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.0");
  3365  0122BC  0EE3               	movlw	low STR_3
  3366  0122BE  6EE6               	movwf	postinc1,c
  3367  0122C0  0EFF               	movlw	high STR_3
  3368  0122C2  6EE6               	movwf	postinc1,c
  3369  0122C4  0EA5               	movlw	low STR_2
  3370  0122C6  6EE6               	movwf	postinc1,c
  3371  0122C8  0EFF               	movlw	high STR_2
  3372  0122CA  6EE6               	movwf	postinc1,c
  3373  0122CC  0E00               	movlw	0
  3374  0122CE  6EE6               	movwf	postinc1,c
  3375  0122D0  0E01               	movlw	1
  3376  0122D2  6EE6               	movwf	postinc1,c
  3377  0122D4  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  3378  0122D8  0060  F007  FFE6   	movff	btemp,postinc1
  3379  0122DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3380  0122E4  0E06               	movlw	6
  3381  0122E6  6EE6               	movwf	postinc1,c
  3382  0122E8  ECF0  F0C3         	call	_sprintf	;wreg free
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;main.c: 225:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3386  0122EC  0E42               	movlw	low STR_4
  3387  0122EE  6EE6               	movwf	postinc1,c
  3388  0122F0  0EFF               	movlw	high STR_4
  3389  0122F2  6EE6               	movwf	postinc1,c
  3390  0122F4  0E00               	movlw	0
  3391  0122F6  6EE6               	movwf	postinc1,c
  3392  0122F8  0E02               	movlw	2
  3393  0122FA  6EE6               	movwf	postinc1,c
  3394  0122FC  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  3395  012300  0060  F007  FFE6   	movff	btemp,postinc1
  3396  012306  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3397  01230C  0E04               	movlw	4
  3398  01230E  6EE6               	movwf	postinc1,c
  3399  012310  ECF0  F0C3         	call	_sprintf	;wreg free
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;main.c: 226:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  3403  012314  0E64               	movlw	low STR_5
  3404  012316  6EE6               	movwf	postinc1,c
  3405  012318  0EFF               	movlw	high STR_5
  3406  01231A  6EE6               	movwf	postinc1,c
  3407  01231C  0E02               	movlw	2
  3408  01231E  6EE6               	movwf	postinc1,c
  3409  012320  0E00               	movlw	0
  3410  012322  6EE6               	movwf	postinc1,c
  3411  012324  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  3412  012328  0060  F007  FFE6   	movff	btemp,postinc1
  3413  01232E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3414  012334  0E04               	movlw	4
  3415  012336  6EE6               	movwf	postinc1,c
  3416  012338  ECF0  F0C3         	call	_sprintf	;wreg free
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;main.c: 227:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "1.0");
  3420  01233C  0EE3               	movlw	low STR_3
  3421  01233E  6EE6               	movwf	postinc1,c
  3422  012340  0EFF               	movlw	high STR_3
  3423  012342  6EE6               	movwf	postinc1,c
  3424  012344  0EA5               	movlw	low STR_2
  3425  012346  6EE6               	movwf	postinc1,c
  3426  012348  0EFF               	movlw	high STR_2
  3427  01234A  6EE6               	movwf	postinc1,c
  3428  01234C  0E02               	movlw	2
  3429  01234E  6EE6               	movwf	postinc1,c
  3430  012350  0E01               	movlw	1
  3431  012352  6EE6               	movwf	postinc1,c
  3432  012354  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  3433  012358  0060  F007  FFE6   	movff	btemp,postinc1
  3434  01235E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3435  012364  0E06               	movlw	6
  3436  012366  6EE6               	movwf	postinc1,c
  3437  012368  ECF0  F0C3         	call	_sprintf	;wreg free
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;main.c: 228:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  3441  01236C  0E31               	movlw	low STR_8
  3442  01236E  6EE6               	movwf	postinc1,c
  3443  012370  0EFF               	movlw	high STR_8
  3444  012372  6EE6               	movwf	postinc1,c
  3445  012374  0E02               	movlw	2
  3446  012376  6EE6               	movwf	postinc1,c
  3447  012378  0E02               	movlw	2
  3448  01237A  6EE6               	movwf	postinc1,c
  3449  01237C  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  3450  012380  0060  F007  FFE6   	movff	btemp,postinc1
  3451  012386  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3452  01238C  0E04               	movlw	4
  3453  01238E  6EE6               	movwf	postinc1,c
  3454  012390  ECF0  F0C3         	call	_sprintf	;wreg free
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;main.c: 229:    update_lcd(0);
  3458  012394  0E00               	movlw	0
  3459  012396  6EE6               	movwf	postinc1,c
  3460  012398  ECE1  F0C2         	call	_update_lcd	;wreg free
  3461                           
  3462                           ;main.c: 230:    WaitMs(3000);
  3463  01239C  0EB8               	movlw	184
  3464  01239E  6EE6               	movwf	postinc1,c
  3465  0123A0  0E0B               	movlw	11
  3466  0123A2  6EE6               	movwf	postinc1,c
  3467  0123A4  ECDB  F0CF         	call	_WaitMs	;wreg free
  3468                           
  3469                           ;main.c: 231:    StartTimer(TMR_DISPLAY, 250);
  3470  0123A8  0EFA               	movlw	250
  3471  0123AA  6EE6               	movwf	postinc1,c
  3472  0123AC  0E00               	movlw	0
  3473  0123AE  6EE6               	movwf	postinc1,c
  3474  0123B0  0E0A               	movlw	10
  3475  0123B2  6EE6               	movwf	postinc1,c
  3476  0123B4  EC20  F0CF         	call	_StartTimer	;wreg free
  3477                           
  3478                           ;main.c: 232:    StartTimer(TMR_ADC, 200);
  3479  0123B8  0EC8               	movlw	200
  3480  0123BA  6EE6               	movwf	postinc1,c
  3481  0123BC  0E00               	movlw	0
  3482  0123BE  6EE6               	movwf	postinc1,c
  3483  0123C0  0E01               	movlw	1
  3484  0123C2  6EE6               	movwf	postinc1,c
  3485  0123C4  EC20  F0CF         	call	_StartTimer	;wreg free
  3486                           
  3487                           ;main.c: 233:    StartTimer(TMR_INFO, 3000);
  3488  0123C8  0EB8               	movlw	184
  3489  0123CA  6EE6               	movwf	postinc1,c
  3490  0123CC  0E0B               	movlw	11
  3491  0123CE  6EE6               	movwf	postinc1,c
  3492  0123D0  0E07               	movlw	7
  3493  0123D2  6EE6               	movwf	postinc1,c
  3494  0123D4  EC20  F0CF         	call	_StartTimer	;wreg free
  3495                           
  3496                           ;main.c: 234:    StartTimer(TMR_FLIPPER, 1500);
  3497  0123D8  0EDC               	movlw	220
  3498  0123DA  6EE6               	movwf	postinc1,c
  3499  0123DC  0E05               	movlw	5
  3500  0123DE  6EE6               	movwf	postinc1,c
  3501  0123E0  0E0B               	movlw	11
  3502  0123E2  6EE6               	movwf	postinc1,c
  3503  0123E4  EC20  F0CF         	call	_StartTimer	;wreg free
  3504                           
  3505                           ;main.c: 235:    StartTimer(TMR_HELPDIS, 3000);
  3506  0123E8  0EB8               	movlw	184
  3507  0123EA  6EE6               	movwf	postinc1,c
  3508  0123EC  0E0B               	movlw	11
  3509  0123EE  6EE6               	movwf	postinc1,c
  3510  0123F0  0E09               	movlw	9
  3511  0123F2  6EE6               	movwf	postinc1,c
  3512  0123F4  EC20  F0CF         	call	_StartTimer	;wreg free
  3513                           
  3514                           ;main.c: 237:    start_adc_scan();
  3515  0123F8  ECF8  F0CB         	call	_start_adc_scan	;wreg free
  3516                           
  3517                           ;main.c: 238:    start_switch_handler();
  3518  0123FC  EC27  F0D3         	call	_start_switch_handler	;wreg free
  3519                           
  3520                           ; BSR set to: 57
  3521                           ;main.c: 239:    WaitMs(1000);
  3522  012400  0EE8               	movlw	232
  3523  012402  6EE6               	movwf	postinc1,c
  3524  012404  0E03               	movlw	3
  3525  012406  6EE6               	movwf	postinc1,c
  3526  012408  ECDB  F0CF         	call	_WaitMs	;wreg free
  3527                           
  3528                           ;main.c: 240:    static_soc();
  3529  01240C  EC98  F0D2         	call	_static_soc	;wreg free
  3530                           
  3531                           ; BSR set to: 1
  3532                           ;main.c: 241:    init_bsoc();
  3533  012410  ECAC  F0BC         	call	_init_bsoc	;wreg free
  3534                           
  3535                           ;main.c: 243:    break;
  3536  012414  D01C               	goto	l12193
  3537  012416                     l1316:
  3538                           
  3539                           ; BSR set to: 2
  3540                           ;main.c: 249:    P.SYSTEM_STABLE = 1;
  3541  012416  0100               	movlb	0	; () banked
  3542  012418  81A6               	bsf	(_P+1)& (0+255),0,b	;volatile
  3543                           
  3544                           ;main.c: 250:    break;
  3545  01241A  D019               	goto	l12193
  3546  01241C                     l1318:
  3547                           
  3548                           ; BSR set to: 2
  3549                           ;main.c: 253:    V.ui_state = UI_STATE_INIT;
  3550  01241C  6B00               	clrf	_V& (0+255),b	;volatile
  3551                           
  3552                           ;main.c: 254:    break;
  3553  01241E  D017               	goto	l12193
  3554  012420                     l12191:
  3555  012420  0102               	movlb	2	; () banked
  3556  012422  5100               	movf	_V& (0+255),w,b	;volatile
  3557  012424  6E0B               	movwf	(btemp+10)^0,c
  3558  012426  6A0C               	clrf	(btemp+11)^0,c
  3559                           
  3560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3561                           ; Switch size 1, requested type "simple"
  3562                           ; Number of cases is 1, Range of values is 0 to 0
  3563                           ; switch strategies available:
  3564                           ; Name         Instructions Cycles
  3565                           ; simple_byte            4     3 (average)
  3566                           ;	Chosen strategy is simple_byte
  3567  012428  500C               	movf	(btemp+11)^0,w,c
  3568  01242A  0A00               	xorlw	0	; case 0
  3569  01242C  A4D8               	btfss	status,2,c
  3570  01242E  D7F6               	goto	l1318
  3571                           
  3572                           ; BSR set to: 2
  3573                           ; Switch size 1, requested type "simple"
  3574                           ; Number of cases is 5, Range of values is 0 to 5
  3575                           ; switch strategies available:
  3576                           ; Name         Instructions Cycles
  3577                           ; simple_byte           16     9 (average)
  3578                           ;	Chosen strategy is simple_byte
  3579  012430  500B               	movf	(btemp+10)^0,w,c
  3580  012432  0A00               	xorlw	0	; case 0
  3581  012434  B4D8               	btfsc	status,2,c
  3582  012436  D718               	goto	l12141
  3583  012438  0A01               	xorlw	1	; case 1
  3584  01243A  B4D8               	btfsc	status,2,c
  3585  01243C  D008               	goto	l12193
  3586  01243E  0A02               	xorlw	2	; case 3
  3587  012440  B4D8               	btfsc	status,2,c
  3588  012442  D005               	goto	l12193
  3589  012444  0A07               	xorlw	7	; case 4
  3590  012446  B4D8               	btfsc	status,2,c
  3591  012448  D7E6               	goto	l1316
  3592  01244A  0A01               	xorlw	1	; case 5
  3593  01244C  D7E7               	goto	l1318
  3594  01244E                     l12193:
  3595                           
  3596                           ;main.c: 257:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  3597  01244E  0E01               	movlw	1
  3598  012450  6EE6               	movwf	postinc1,c
  3599  012452  EC7F  F0D1         	call	_TimerDone	;wreg free
  3600  012456  5001               	movf	btemp^0,w,c
  3601  012458  B4D8               	btfsc	status,2,c
  3602  01245A  D013               	goto	l12205
  3603  01245C  EC65  F0D4         	call	_check_adc_scan	;wreg free
  3604  012460  5001               	movf	btemp^0,w,c
  3605  012462  B4D8               	btfsc	status,2,c
  3606  012464  D00E               	goto	l12205
  3607                           
  3608                           ;main.c: 261:    convert_adc_data();
  3609  012466  EC02  F0C7         	call	_convert_adc_data	;wreg free
  3610                           
  3611                           ;main.c: 265:    clear_adc_scan();
  3612  01246A  EC6D  F0D4         	call	_clear_adc_scan	;wreg free
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;main.c: 266:    start_adc_scan();
  3616  01246E  ECF8  F0CB         	call	_start_adc_scan	;wreg free
  3617                           
  3618                           ;main.c: 267:    StartTimer(TMR_ADC, 200);
  3619  012472  0EC8               	movlw	200
  3620  012474  6EE6               	movwf	postinc1,c
  3621  012476  0E00               	movlw	0
  3622  012478  6EE6               	movwf	postinc1,c
  3623  01247A  0E01               	movlw	1
  3624  01247C  6EE6               	movwf	postinc1,c
  3625  01247E  EC20  F0CF         	call	_StartTimer	;wreg free
  3626  012482                     l12205:
  3627                           
  3628                           ;main.c: 274:   if (TimerDone(TMR_DISPLAY)) {
  3629                           
  3630                           ;main.c: 270:   if (V.ticks) {
  3631  012482  0E0A               	movlw	10
  3632  012484  6EE6               	movwf	postinc1,c
  3633  012486  EC7F  F0D1         	call	_TimerDone	;wreg free
  3634  01248A  5001               	movf	btemp^0,w,c
  3635  01248C  B4D8               	btfsc	status,2,c
  3636  01248E  D27F               	goto	l12247
  3637                           
  3638                           ;main.c: 275:    if (TimerDone(TMR_HELPDIS)) {
  3639  012490  0E09               	movlw	9
  3640  012492  6EE6               	movwf	postinc1,c
  3641  012494  EC7F  F0D1         	call	_TimerDone	;wreg free
  3642  012498  5001               	movf	btemp^0,w,c
  3643  01249A  B4D8               	btfsc	status,2,c
  3644  01249C  D004               	goto	l12213
  3645                           
  3646                           ;main.c: 276:     set_display_info(DIS_STR);
  3647  01249E  0E00               	movlw	0
  3648  0124A0  6EE6               	movwf	postinc1,c
  3649  0124A2  EC74  F0D3         	call	_set_display_info	;wreg free
  3650  0124A6                     l12213:
  3651                           
  3652                           ;main.c: 278:    calc_model_data();
  3653  0124A6  EC01  F0AF         	call	_calc_model_data	;wreg free
  3654                           
  3655                           ; BSR set to: 1
  3656                           ;main.c: 285:     hid_display(&H);
  3657                           
  3658                           ;main.c: 280:    if (0) {
  3659  0124AA  0EF3               	movlw	_H& (0+255)
  3660  0124AC  6EE6               	movwf	postinc1,c
  3661  0124AE  EC75  F0C4         	call	_hid_display	;wreg free
  3662                           
  3663                           ;main.c: 286:     switch (H.hid_display) {
  3664  0124B2  D248               	goto	l12239
  3665  0124B4                     l1326:
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;main.c: 288:      V.calib = 0;
  3669  0124B4  0102               	movlb	2	; () banked
  3670  0124B6  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3671                           
  3672                           ; BSR set to: 2
  3673                           ;main.c: 289:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  3674  0124B8  0060  F5C3  FFE6   	movff	_C+112,postinc1
  3675  0124BE  0060  F5C7  FFE6   	movff	_C+113,postinc1
  3676  0124C4  0060  F5CB  FFE6   	movff	_C+114,postinc1
  3677  0124CA  0060  F5CF  FFE6   	movff	_C+115,postinc1
  3678  0124D0  0EAC               	movlw	low STR_12
  3679  0124D2  6EE6               	movwf	postinc1,c
  3680  0124D4  0EFE               	movlw	high STR_12
  3681  0124D6  6EE6               	movwf	postinc1,c
  3682  0124D8  0E00               	movlw	0
  3683  0124DA  6EE6               	movwf	postinc1,c
  3684  0124DC  0E00               	movlw	0
  3685  0124DE  6EE6               	movwf	postinc1,c
  3686  0124E0  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  3687  0124E4  0060  F007  FFE6   	movff	btemp,postinc1
  3688  0124EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3689  0124F0  0E08               	movlw	8
  3690  0124F2  6EE6               	movwf	postinc1,c
  3691  0124F4  ECF0  F0C3         	call	_sprintf	;wreg free
  3692                           
  3693                           ;main.c: 290:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  3694  0124F8  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3695  0124FE  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3696  012504  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3697  01250A  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3698  012510  0ED2               	movlw	low STR_13
  3699  012512  6EE6               	movwf	postinc1,c
  3700  012514  0EFE               	movlw	high STR_13
  3701  012516  6EE6               	movwf	postinc1,c
  3702  012518  0E00               	movlw	0
  3703  01251A  6EE6               	movwf	postinc1,c
  3704  01251C  0E01               	movlw	1
  3705  01251E  6EE6               	movwf	postinc1,c
  3706  012520  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  3707  012524  0060  F007  FFE6   	movff	btemp,postinc1
  3708  01252A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3709  012530  0E08               	movlw	8
  3710  012532  6EE6               	movwf	postinc1,c
  3711  012534  ECF0  F0C3         	call	_sprintf	;wreg free
  3712                           
  3713                           ;main.c: 291:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  3714  012538  0060  F5B3  FFE6   	movff	_C+108,postinc1
  3715  01253E  0060  F5B7  FFE6   	movff	_C+109,postinc1
  3716  012544  0060  F5BB  FFE6   	movff	_C+110,postinc1
  3717  01254A  0060  F5BF  FFE6   	movff	_C+111,postinc1
  3718  012550  0EBF               	movlw	low STR_14
  3719  012552  6EE6               	movwf	postinc1,c
  3720  012554  0EFE               	movlw	high STR_14
  3721  012556  6EE6               	movwf	postinc1,c
  3722  012558  0E00               	movlw	0
  3723  01255A  6EE6               	movwf	postinc1,c
  3724  01255C  0E02               	movlw	2
  3725  01255E  6EE6               	movwf	postinc1,c
  3726  012560  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  3727  012564  0060  F007  FFE6   	movff	btemp,postinc1
  3728  01256A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3729  012570  0E08               	movlw	8
  3730  012572  6EE6               	movwf	postinc1,c
  3731  012574  ECF0  F0C3         	call	_sprintf	;wreg free
  3732                           
  3733                           ;main.c: 292:      break;
  3734  012578  D1FA               	goto	l12241
  3735  01257A                     l1328:
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;main.c: 294:      V.calib = 0;
  3739  01257A  0102               	movlb	2	; () banked
  3740  01257C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3741                           
  3742                           ; BSR set to: 2
  3743                           ;main.c: 295:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  3744  01257E  0060  F413  FFE6   	movff	_C+4,postinc1
  3745  012584  0060  F417  FFE6   	movff	_C+5,postinc1
  3746  01258A  0060  F41B  FFE6   	movff	_C+6,postinc1
  3747  012590  0060  F41F  FFE6   	movff	_C+7,postinc1
  3748  012596  0060  F453  FFE6   	movff	_C+20,postinc1
  3749  01259C  0060  F457  FFE6   	movff	_C+21,postinc1
  3750  0125A2  0060  F45B  FFE6   	movff	_C+22,postinc1
  3751  0125A8  0060  F45F  FFE6   	movff	_C+23,postinc1
  3752  0125AE  0E1E               	movlw	low STR_15
  3753  0125B0  6EE6               	movwf	postinc1,c
  3754  0125B2  0EFF               	movlw	high STR_15
  3755  0125B4  6EE6               	movwf	postinc1,c
  3756  0125B6  0E00               	movlw	0
  3757  0125B8  6EE6               	movwf	postinc1,c
  3758  0125BA  0E00               	movlw	0
  3759  0125BC  6EE6               	movwf	postinc1,c
  3760  0125BE  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  3761  0125C2  0060  F007  FFE6   	movff	btemp,postinc1
  3762  0125C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3763  0125CE  0E0C               	movlw	12
  3764  0125D0  6EE6               	movwf	postinc1,c
  3765  0125D2  ECF0  F0C3         	call	_sprintf	;wreg free
  3766                           
  3767                           ;main.c: 296:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  3768  0125D6  0060  F403  FFE6   	movff	_C,postinc1
  3769  0125DC  0060  F407  FFE6   	movff	_C+1,postinc1
  3770  0125E2  0060  F40B  FFE6   	movff	_C+2,postinc1
  3771  0125E8  0060  F40F  FFE6   	movff	_C+3,postinc1
  3772  0125EE  0060  F443  FFE6   	movff	_C+16,postinc1
  3773  0125F4  0060  F447  FFE6   	movff	_C+17,postinc1
  3774  0125FA  0060  F44B  FFE6   	movff	_C+18,postinc1
  3775  012600  0060  F44F  FFE6   	movff	_C+19,postinc1
  3776  012606  0EF8               	movlw	low STR_16
  3777  012608  6EE6               	movwf	postinc1,c
  3778  01260A  0EFE               	movlw	high STR_16
  3779  01260C  6EE6               	movwf	postinc1,c
  3780  01260E  0E00               	movlw	0
  3781  012610  6EE6               	movwf	postinc1,c
  3782  012612  0E01               	movlw	1
  3783  012614  6EE6               	movwf	postinc1,c
  3784  012616  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  3785  01261A  0060  F007  FFE6   	movff	btemp,postinc1
  3786  012620  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3787  012626  0E0C               	movlw	12
  3788  012628  6EE6               	movwf	postinc1,c
  3789  01262A  ECF0  F0C3         	call	_sprintf	;wreg free
  3790                           
  3791                           ;main.c: 297:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  3792  01262E  0060  F503  FFE6   	movff	_C+64,postinc1
  3793  012634  0060  F507  FFE6   	movff	_C+65,postinc1
  3794  01263A  0060  F50B  FFE6   	movff	_C+66,postinc1
  3795  012640  0060  F50F  FFE6   	movff	_C+67,postinc1
  3796  012646  0060  F423  FFE6   	movff	_C+8,postinc1
  3797  01264C  0060  F427  FFE6   	movff	_C+9,postinc1
  3798  012652  0060  F42B  FFE6   	movff	_C+10,postinc1
  3799  012658  0060  F42F  FFE6   	movff	_C+11,postinc1
  3800  01265E  0E0B               	movlw	low STR_17
  3801  012660  6EE6               	movwf	postinc1,c
  3802  012662  0EFF               	movlw	high STR_17
  3803  012664  6EE6               	movwf	postinc1,c
  3804  012666  0E00               	movlw	0
  3805  012668  6EE6               	movwf	postinc1,c
  3806  01266A  0E02               	movlw	2
  3807  01266C  6EE6               	movwf	postinc1,c
  3808  01266E  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  3809  012672  0060  F007  FFE6   	movff	btemp,postinc1
  3810  012678  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3811  01267E  0E0C               	movlw	12
  3812  012680  6EE6               	movwf	postinc1,c
  3813  012682  ECF0  F0C3         	call	_sprintf	;wreg free
  3814                           
  3815                           ;main.c: 298:      break;
  3816  012686  D173               	goto	l12241
  3817  012688                     l1329:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;main.c: 300:      V.calib = 0;
  3821  012688  0102               	movlb	2	; () banked
  3822  01268A  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3823                           
  3824                           ; BSR set to: 2
  3825                           ;main.c: 301:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  3826  01268C  0060  F5D3  FFE6   	movff	_C+116,postinc1
  3827  012692  0060  F5D7  FFE6   	movff	_C+117,postinc1
  3828  012698  0060  F5DB  FFE6   	movff	_C+118,postinc1
  3829  01269E  0060  F5DF  FFE6   	movff	_C+119,postinc1
  3830  0126A4  0EE5               	movlw	low STR_18
  3831  0126A6  6EE6               	movwf	postinc1,c
  3832  0126A8  0EFE               	movlw	high STR_18
  3833  0126AA  6EE6               	movwf	postinc1,c
  3834  0126AC  0E00               	movlw	0
  3835  0126AE  6EE6               	movwf	postinc1,c
  3836  0126B0  0E00               	movlw	0
  3837  0126B2  6EE6               	movwf	postinc1,c
  3838  0126B4  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  3839  0126B8  0060  F007  FFE6   	movff	btemp,postinc1
  3840  0126BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3841  0126C4  0E08               	movlw	8
  3842  0126C6  6EE6               	movwf	postinc1,c
  3843  0126C8  ECF0  F0C3         	call	_sprintf	;wreg free
  3844                           
  3845                           ;main.c: 302:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  3846  0126CC  0060  F613  FFE6   	movff	_C+132,postinc1
  3847  0126D2  0060  F617  FFE6   	movff	_C+133,postinc1
  3848  0126D8  0060  F61B  FFE6   	movff	_C+134,postinc1
  3849  0126DE  0060  F61F  FFE6   	movff	_C+135,postinc1
  3850  0126E4  0060  F603  FFE6   	movff	_C+128,postinc1
  3851  0126EA  0060  F607  FFE6   	movff	_C+129,postinc1
  3852  0126F0  0060  F60B  FFE6   	movff	_C+130,postinc1
  3853  0126F6  0060  F60F  FFE6   	movff	_C+131,postinc1
  3854  0126FC  0E4C               	movlw	low STR_19
  3855  0126FE  6EE6               	movwf	postinc1,c
  3856  012700  0EFE               	movlw	high STR_19
  3857  012702  6EE6               	movwf	postinc1,c
  3858  012704  0E00               	movlw	0
  3859  012706  6EE6               	movwf	postinc1,c
  3860  012708  0E01               	movlw	1
  3861  01270A  6EE6               	movwf	postinc1,c
  3862  01270C  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  3863  012710  0060  F007  FFE6   	movff	btemp,postinc1
  3864  012716  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3865  01271C  0E0C               	movlw	12
  3866  01271E  6EE6               	movwf	postinc1,c
  3867  012720  ECF0  F0C3         	call	_sprintf	;wreg free
  3868                           
  3869                           ;main.c: 303:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  3870  012724  0060  F673  FFE6   	movff	_C+156,postinc1
  3871  01272A  0060  F677  FFE6   	movff	_C+157,postinc1
  3872  012730  0060  F67B  FFE6   	movff	_C+158,postinc1
  3873  012736  0060  F67F  FFE6   	movff	_C+159,postinc1
  3874  01273C  0E99               	movlw	low STR_20
  3875  01273E  6EE6               	movwf	postinc1,c
  3876  012740  0EFE               	movlw	high STR_20
  3877  012742  6EE6               	movwf	postinc1,c
  3878  012744  0E00               	movlw	0
  3879  012746  6EE6               	movwf	postinc1,c
  3880  012748  0E02               	movlw	2
  3881  01274A  6EE6               	movwf	postinc1,c
  3882  01274C  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  3883  012750  0060  F007  FFE6   	movff	btemp,postinc1
  3884  012756  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3885  01275C  0E08               	movlw	8
  3886  01275E  6EE6               	movwf	postinc1,c
  3887  012760  ECF0  F0C3         	call	_sprintf	;wreg free
  3888                           
  3889                           ;main.c: 304:      break;
  3890  012764  D104               	goto	l12241
  3891  012766                     l12225:
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;main.c: 306:      if (!V.calib) {
  3895  012766  0102               	movlb	2	; () banked
  3896  012768  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  3897  01276A  A4D8               	btfss	status,2,c
  3898  01276C  D02D               	goto	l12229
  3899                           
  3900                           ; BSR set to: 2
  3901                           ;main.c: 307:       lp_filter(0.0, i, -1);
  3902  01276E  0EFF               	movlw	255
  3903  012770  6EE6               	movwf	postinc1,c
  3904                           
  3905                           ;stkvar	_i @ sp[(-6)+2]
  3906  012772  0EFC               	movlw	-4
  3907  012774  50E3               	movf	plusw1,w,c
  3908  012776  6EE6               	movwf	postinc1,c
  3909  012778  0E00               	movlw	0
  3910  01277A  6EE6               	movwf	postinc1,c
  3911  01277C  0E00               	movlw	0
  3912  01277E  6EE6               	movwf	postinc1,c
  3913  012780  0E00               	movlw	0
  3914  012782  6EE6               	movwf	postinc1,c
  3915  012784  0E00               	movlw	0
  3916  012786  6EE6               	movwf	postinc1,c
  3917  012788  EC8A  F0B9         	call	_lp_filter	;wreg free
  3918                           
  3919                           ;main.c: 308:       lp_filter(0.0, j, -1);
  3920  01278C  0EFF               	movlw	255
  3921  01278E  6EE6               	movwf	postinc1,c
  3922                           
  3923                           ;stkvar	_j @ sp[(-6)+1]
  3924  012790  0EFB               	movlw	-5
  3925  012792  50E3               	movf	plusw1,w,c
  3926  012794  6EE6               	movwf	postinc1,c
  3927  012796  0E00               	movlw	0
  3928  012798  6EE6               	movwf	postinc1,c
  3929  01279A  0E00               	movlw	0
  3930  01279C  6EE6               	movwf	postinc1,c
  3931  01279E  0E00               	movlw	0
  3932  0127A0  6EE6               	movwf	postinc1,c
  3933  0127A2  0E00               	movlw	0
  3934  0127A4  6EE6               	movwf	postinc1,c
  3935  0127A6  EC8A  F0B9         	call	_lp_filter	;wreg free
  3936                           
  3937                           ;main.c: 309:       lp_filter(0.0, k, -1);
  3938  0127AA  0EFF               	movlw	255
  3939  0127AC  6EE6               	movwf	postinc1,c
  3940                           
  3941                           ;stkvar	_k @ sp[(-6)+0]
  3942  0127AE  0EFA               	movlw	-6
  3943  0127B0  50E3               	movf	plusw1,w,c
  3944  0127B2  6EE6               	movwf	postinc1,c
  3945  0127B4  0E00               	movlw	0
  3946  0127B6  6EE6               	movwf	postinc1,c
  3947  0127B8  0E00               	movlw	0
  3948  0127BA  6EE6               	movwf	postinc1,c
  3949  0127BC  0E00               	movlw	0
  3950  0127BE  6EE6               	movwf	postinc1,c
  3951  0127C0  0E00               	movlw	0
  3952  0127C2  6EE6               	movwf	postinc1,c
  3953  0127C4  EC8A  F0B9         	call	_lp_filter	;wreg free
  3954  0127C8                     l12229:
  3955                           
  3956                           ;main.c: 311:      V.calib = 1;
  3957  0127C8  0E01               	movlw	1
  3958  0127CA  0102               	movlb	2	; () banked
  3959  0127CC  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  3960                           
  3961                           ; BSR set to: 2
  3962                           ;main.c: 312:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  3963  0127CE  0E02               	movlw	2
  3964  0127D0  6EE6               	movwf	postinc1,c
  3965  0127D2  EC6B  F0D1         	call	_get_switch	;wreg free
  3966  0127D6  5001               	movf	btemp^0,w,c
  3967  0127D8  6EE6               	movwf	postinc1,c
  3968  0127DA  0E00               	movlw	0
  3969  0127DC  6EE6               	movwf	postinc1,c
  3970                           
  3971                           ;stkvar	_i @ sp[(-7)+2]
  3972  0127DE  0EFB               	movlw	-5
  3973  0127E0  50E3               	movf	plusw1,w,c
  3974  0127E2  0D04               	mullw	4
  3975  0127E4  0E00               	movlw	low _C
  3976  0127E6  24F3               	addwf	243,w,c
  3977  0127E8  6ED9               	movwf	fsr2l,c
  3978  0127EA  0E01               	movlw	high _C
  3979  0127EC  20F4               	addwfc	prodh,w,c
  3980  0127EE  6EDA               	movwf	fsr2h,c
  3981  0127F0  006F FF7B FFE6     	movff	postinc2,postinc1
  3982  0127F6  006F FF7B FFE6     	movff	postinc2,postinc1
  3983  0127FC  006F FF7B FFE6     	movff	postinc2,postinc1
  3984  012802  006F FF7B FFE6     	movff	postinc2,postinc1
  3985                           
  3986                           ;stkvar	_i @ sp[(-11)+2]
  3987  012808  0EF7               	movlw	-9
  3988  01280A  50E3               	movf	plusw1,w,c
  3989  01280C  6EE6               	movwf	postinc1,c
  3990  01280E  EC56  F0D3         	call	_get_raw_result	;wreg free
  3991  012812  0060  F007  FFE6   	movff	btemp,postinc1
  3992  012818  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3993  01281E  0E86               	movlw	low STR_9
  3994  012820  6EE6               	movwf	postinc1,c
  3995  012822  0EFF               	movlw	high STR_9
  3996  012824  6EE6               	movwf	postinc1,c
  3997  012826  0E00               	movlw	0
  3998  012828  6EE6               	movwf	postinc1,c
  3999  01282A  0E00               	movlw	0
  4000  01282C  6EE6               	movwf	postinc1,c
  4001  01282E  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  4002  012832  0060  F007  FFE6   	movff	btemp,postinc1
  4003  012838  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4004  01283E  0E0C               	movlw	12
  4005  012840  6EE6               	movwf	postinc1,c
  4006  012842  ECF0  F0C3         	call	_sprintf	;wreg free
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;main.c: 313:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  4010  012846  0E03               	movlw	3
  4011  012848  6EE6               	movwf	postinc1,c
  4012  01284A  EC6B  F0D1         	call	_get_switch	;wreg free
  4013  01284E  5001               	movf	btemp^0,w,c
  4014  012850  6EE6               	movwf	postinc1,c
  4015  012852  0E00               	movlw	0
  4016  012854  6EE6               	movwf	postinc1,c
  4017                           
  4018                           ;stkvar	_j @ sp[(-7)+1]
  4019  012856  0EFA               	movlw	-6
  4020  012858  50E3               	movf	plusw1,w,c
  4021  01285A  0D04               	mullw	4
  4022  01285C  0E00               	movlw	low _C
  4023  01285E  24F3               	addwf	243,w,c
  4024  012860  6ED9               	movwf	fsr2l,c
  4025  012862  0E01               	movlw	high _C
  4026  012864  20F4               	addwfc	prodh,w,c
  4027  012866  6EDA               	movwf	fsr2h,c
  4028  012868  006F FF7B FFE6     	movff	postinc2,postinc1
  4029  01286E  006F FF7B FFE6     	movff	postinc2,postinc1
  4030  012874  006F FF7B FFE6     	movff	postinc2,postinc1
  4031  01287A  006F FF7B FFE6     	movff	postinc2,postinc1
  4032                           
  4033                           ;stkvar	_j @ sp[(-11)+1]
  4034  012880  0EF6               	movlw	-10
  4035  012882  50E3               	movf	plusw1,w,c
  4036  012884  6EE6               	movwf	postinc1,c
  4037  012886  EC56  F0D3         	call	_get_raw_result	;wreg free
  4038  01288A  0060  F007  FFE6   	movff	btemp,postinc1
  4039  012890  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4040  012896  0E86               	movlw	low STR_9
  4041  012898  6EE6               	movwf	postinc1,c
  4042  01289A  0EFF               	movlw	high STR_9
  4043  01289C  6EE6               	movwf	postinc1,c
  4044  01289E  0E00               	movlw	0
  4045  0128A0  6EE6               	movwf	postinc1,c
  4046  0128A2  0E01               	movlw	1
  4047  0128A4  6EE6               	movwf	postinc1,c
  4048  0128A6  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  4049  0128AA  0060  F007  FFE6   	movff	btemp,postinc1
  4050  0128B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4051  0128B6  0E0C               	movlw	12
  4052  0128B8  6EE6               	movwf	postinc1,c
  4053  0128BA  ECF0  F0C3         	call	_sprintf	;wreg free
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;main.c: 314:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  4057                           ;stkvar	_inp_index @ sp[(-5)+3]
  4058  0128BE  0EFE               	movlw	-2
  4059  0128C0  50E3               	movf	plusw1,w,c
  4060  0128C2  6E0B               	movwf	(btemp+10)^0,c
  4061  0128C4  6A0C               	clrf	(btemp+11)^0,c
  4062  0128C6  0E01               	movlw	1
  4063  0128C8  260B               	addwf	(btemp+10)^0,f,c
  4064  0128CA  0E00               	movlw	0
  4065  0128CC  220C               	addwfc	(btemp+11)^0,f,c
  4066  0128CE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4067  0128D4  0060  F033  FFE6   	movff	btemp+11,postinc1
  4068                           
  4069                           ;stkvar	_k @ sp[(-7)+0]
  4070  0128DA  0EF9               	movlw	-7
  4071  0128DC  50E3               	movf	plusw1,w,c
  4072  0128DE  0D04               	mullw	4
  4073  0128E0  0E00               	movlw	low _C
  4074  0128E2  24F3               	addwf	243,w,c
  4075  0128E4  6ED9               	movwf	fsr2l,c
  4076  0128E6  0E01               	movlw	high _C
  4077  0128E8  20F4               	addwfc	prodh,w,c
  4078  0128EA  6EDA               	movwf	fsr2h,c
  4079  0128EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4080  0128F2  006F FF7B FFE6     	movff	postinc2,postinc1
  4081  0128F8  006F FF7B FFE6     	movff	postinc2,postinc1
  4082  0128FE  006F FF7B FFE6     	movff	postinc2,postinc1
  4083                           
  4084                           ;stkvar	_k @ sp[(-11)+0]
  4085  012904  0EF5               	movlw	-11
  4086  012906  50E3               	movf	plusw1,w,c
  4087  012908  6EE6               	movwf	postinc1,c
  4088  01290A  EC56  F0D3         	call	_get_raw_result	;wreg free
  4089  01290E  0060  F007  FFE6   	movff	btemp,postinc1
  4090  012914  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4091  01291A  0E75               	movlw	low STR_11
  4092  01291C  6EE6               	movwf	postinc1,c
  4093  01291E  0EFF               	movlw	high STR_11
  4094  012920  6EE6               	movwf	postinc1,c
  4095  012922  0E00               	movlw	0
  4096  012924  6EE6               	movwf	postinc1,c
  4097  012926  0E02               	movlw	2
  4098  012928  6EE6               	movwf	postinc1,c
  4099  01292A  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  4100  01292E  0060  F007  FFE6   	movff	btemp,postinc1
  4101  012934  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4102  01293A  0E0C               	movlw	12
  4103  01293C  6EE6               	movwf	postinc1,c
  4104  01293E  ECF0  F0C3         	call	_sprintf	;wreg free
  4105                           
  4106                           ;main.c: 315:      break;
  4107  012942  D015               	goto	l12241
  4108  012944                     l12239:
  4109  012944  0100               	movlb	0	; () banked
  4110  012946  51F3               	movf	_H& (0+255),w,b
  4111  012948  6E0B               	movwf	(btemp+10)^0,c
  4112  01294A  6A0C               	clrf	(btemp+11)^0,c
  4113                           
  4114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4115                           ; Switch size 1, requested type "simple"
  4116                           ; Number of cases is 1, Range of values is 0 to 0
  4117                           ; switch strategies available:
  4118                           ; Name         Instructions Cycles
  4119                           ; simple_byte            4     3 (average)
  4120                           ;	Chosen strategy is simple_byte
  4121  01294C  500C               	movf	(btemp+11)^0,w,c
  4122  01294E  0A00               	xorlw	0	; case 0
  4123  012950  A4D8               	btfss	status,2,c
  4124  012952  D00D               	goto	l12241
  4125                           
  4126                           ; BSR set to: 0
  4127                           ; Switch size 1, requested type "simple"
  4128                           ; Number of cases is 4, Range of values is 0 to 3
  4129                           ; switch strategies available:
  4130                           ; Name         Instructions Cycles
  4131                           ; simple_byte           13     7 (average)
  4132                           ;	Chosen strategy is simple_byte
  4133  012954  500B               	movf	(btemp+10)^0,w,c
  4134  012956  0A00               	xorlw	0	; case 0
  4135  012958  B4D8               	btfsc	status,2,c
  4136  01295A  D60F               	goto	l1328
  4137  01295C  0A01               	xorlw	1	; case 1
  4138  01295E  B4D8               	btfsc	status,2,c
  4139  012960  D5A9               	goto	l1326
  4140  012962  0A03               	xorlw	3	; case 2
  4141  012964  B4D8               	btfsc	status,2,c
  4142  012966  D690               	goto	l1329
  4143  012968  0A01               	xorlw	1	; case 3
  4144  01296A  B4D8               	btfsc	status,2,c
  4145  01296C  D6FC               	goto	l12225
  4146  01296E                     l12241:
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;main.c: 319:     clear_hid_pflags(&H);
  4150  01296E  0EF3               	movlw	_H& (0+255)
  4151  012970  6EE6               	movwf	postinc1,c
  4152  012972  ECAA  F0D2         	call	_clear_hid_pflags	;wreg free
  4153                           
  4154                           ;main.c: 321:    StartTimer(TMR_DISPLAY, 250);
  4155  012976  0EFA               	movlw	250
  4156  012978  6EE6               	movwf	postinc1,c
  4157  01297A  0E00               	movlw	0
  4158  01297C  6EE6               	movwf	postinc1,c
  4159  01297E  0E0A               	movlw	10
  4160  012980  6EE6               	movwf	postinc1,c
  4161  012982  EC20  F0CF         	call	_StartTimer	;wreg free
  4162                           
  4163                           ;main.c: 322:    update_lcd(0);
  4164  012986  0E00               	movlw	0
  4165  012988  6EE6               	movwf	postinc1,c
  4166  01298A  ECE1  F0C2         	call	_update_lcd	;wreg free
  4167  01298E                     l12247:
  4168                           
  4169                           ;main.c: 328:   check_help(V.flipper);
  4170  01298E  0102               	movlb	2	; () banked
  4171  012990  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4172  012992  6EE6               	movwf	postinc1,c
  4173  012994  EC7F  F0B6         	call	_check_help	;wreg free
  4174                           
  4175                           ;main.c: 330:   if (check_enter_button(&H)) {
  4176  012998  0EF3               	movlw	_H& (0+255)
  4177  01299A  6EE6               	movwf	postinc1,c
  4178  01299C  EC40  F0CF         	call	_check_enter_button	;wreg free
  4179  0129A0  5001               	movf	btemp^0,w,c
  4180  0129A2  B4D8               	btfsc	status,2,c
  4181  0129A4  D062               	goto	l1333
  4182                           
  4183                           ;main.c: 331:    V.calib = 0;
  4184  0129A6  0102               	movlb	2	; () banked
  4185  0129A8  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4186                           
  4187                           ; BSR set to: 2
  4188                           ;main.c: 332:    inp_index += 3;
  4189                           ;stkvar	_inp_index @ sp[(-5)+3]
  4190  0129AA  0EFE               	movlw	-2
  4191  0129AC  006F FF8C  F001    	movff	plusw1,btemp
  4192  0129B2  0E03               	movlw	3
  4193  0129B4  2601               	addwf	btemp^0,f,c
  4194  0129B6  0EFE               	movlw	-2
  4195  0129B8  0060  F007  FFE3   	movff	btemp,plusw1
  4196                           
  4197                           ;main.c: 333:    if (inp_index > 9)
  4198                           ;stkvar	_inp_index @ sp[(-5)+3]
  4199  0129BE  0EFE               	movlw	-2
  4200  0129C0  006F FF8C  F001    	movff	plusw1,btemp
  4201  0129C6  0E09               	movlw	9
  4202  0129C8  6401               	cpfsgt	btemp^0,c
  4203  0129CA  D03A               	goto	l12275
  4204                           
  4205                           ; BSR set to: 2
  4206                           ;main.c: 334:     inp_index = 0;
  4207                           ;stkvar	_inp_index @ sp[(-5)+3]
  4208  0129CC  0EFE               	movlw	-2
  4209  0129CE  6AE3               	clrf	plusw1,c
  4210  0129D0  D037               	goto	l12275
  4211  0129D2                     l12257:
  4212                           
  4213                           ; BSR set to: 2
  4214                           ;main.c: 337:     i = C_BATT;
  4215                           ;stkvar	_i @ sp[(-5)+2]
  4216  0129D2  0EFD               	movlw	-3
  4217  0129D4  6AE3               	clrf	plusw1,c
  4218                           
  4219                           ; BSR set to: 2
  4220                           ;main.c: 338:     j = C_PV;
  4221                           ;stkvar	_j @ sp[(-5)+1]
  4222  0129D6  0EFC               	movlw	-4
  4223  0129D8  6AE3               	clrf	plusw1,c
  4224  0129DA  2AE3               	incf	plusw1,f,c
  4225                           
  4226                           ; BSR set to: 2
  4227                           ;main.c: 339:     k = V_CC;
  4228                           ;stkvar	_k @ sp[(-5)+0]
  4229  0129DC  0EFB               	movlw	-5
  4230  0129DE  6AE3               	clrf	plusw1,c
  4231  0129E0  82E3               	bsf	plusw1,1,c
  4232                           
  4233                           ;main.c: 340:     break;
  4234  0129E2  D043               	goto	l1333
  4235  0129E4                     l12263:
  4236                           
  4237                           ; BSR set to: 2
  4238                           ;main.c: 342:     i = V_BAT;
  4239                           ;stkvar	_i @ sp[(-5)+2]
  4240  0129E4  0EFD               	movlw	-3
  4241  0129E6  6AE3               	clrf	plusw1,c
  4242  0129E8  84E3               	bsf	plusw1,2,c
  4243                           
  4244                           ;main.c: 343:     j = V_PV;
  4245                           ;stkvar	_j @ sp[(-5)+1]
  4246  0129EA  0EFC               	movlw	-4
  4247  0129EC  6AE3               	clrf	plusw1,c
  4248  0129EE  80E3               	bsf	plusw1,0,c
  4249  0129F0  84E3               	bsf	plusw1,2,c	;indir
  4250                           
  4251                           ;main.c: 344:     k = V_CBUS;
  4252                           ;stkvar	_k @ sp[(-5)+0]
  4253  0129F2  0EFB               	movlw	-5
  4254  0129F4  6AE3               	clrf	plusw1,c
  4255  0129F6  82E3               	bsf	plusw1,1,c
  4256  0129F8  84E3               	bsf	plusw1,2,c	;indir
  4257                           
  4258                           ;main.c: 345:     break;
  4259  0129FA  D037               	goto	l1333
  4260  0129FC                     l12265:
  4261                           
  4262                           ; BSR set to: 2
  4263                           ;main.c: 347:     i = V_BBAT;
  4264                           ;stkvar	_i @ sp[(-5)+2]
  4265  0129FC  0EFD               	movlw	-3
  4266  0129FE  6AE3               	clrf	plusw1,c
  4267  012A00  82E3               	bsf	plusw1,1,c
  4268  012A02  86E3               	bsf	plusw1,3,c	;indir
  4269                           
  4270                           ; BSR set to: 2
  4271                           ;main.c: 348:     j = V_TEMP;
  4272  012A04  0E0B               	movlw	11
  4273  012A06  6E0C               	movwf	(btemp+11)^0,c
  4274                           
  4275                           ;stkvar	_j @ sp[(-5)+1]
  4276  012A08  0EFC               	movlw	-4
  4277  012A0A  0060  F033  FFE3   	movff	btemp+11,plusw1
  4278                           
  4279                           ; BSR set to: 2
  4280                           ;main.c: 349:     k = V_INVERTER;
  4281                           ;stkvar	_k @ sp[(-5)+0]
  4282  012A10  0EFB               	movlw	-5
  4283  012A12  6AE3               	clrf	plusw1,c
  4284  012A14  84E3               	bsf	plusw1,2,c
  4285  012A16  86E3               	bsf	plusw1,3,c	;indir
  4286                           
  4287                           ;main.c: 350:     break;
  4288  012A18  D028               	goto	l1333
  4289  012A1A                     l12271:
  4290                           
  4291                           ; BSR set to: 2
  4292                           ;main.c: 352:     i = channel_ANB5;
  4293  012A1A  0E0D               	movlw	13
  4294  012A1C  6E0C               	movwf	(btemp+11)^0,c
  4295                           
  4296                           ;stkvar	_i @ sp[(-5)+2]
  4297  012A1E  0EFD               	movlw	-3
  4298  012A20  0060  F033  FFE3   	movff	btemp+11,plusw1
  4299                           
  4300                           ;main.c: 353:     j = channel_ANB5;
  4301  012A26  0E0D               	movlw	13
  4302  012A28  6E0C               	movwf	(btemp+11)^0,c
  4303                           
  4304                           ;stkvar	_j @ sp[(-5)+1]
  4305  012A2A  0EFC               	movlw	-4
  4306  012A2C  0060  F033  FFE3   	movff	btemp+11,plusw1
  4307                           
  4308                           ;main.c: 354:     k = channel_ANB5;
  4309  012A32  0E0D               	movlw	13
  4310  012A34  6E0C               	movwf	(btemp+11)^0,c
  4311                           
  4312                           ;stkvar	_k @ sp[(-5)+0]
  4313  012A36  0EFB               	movlw	-5
  4314  012A38  0060  F033  FFE3   	movff	btemp+11,plusw1
  4315                           
  4316                           ;main.c: 355:     break;
  4317  012A3E  D015               	goto	l1333
  4318  012A40                     l12275:
  4319                           
  4320                           ; BSR set to: 2
  4321                           ;stkvar	_inp_index @ sp[(-5)+3]
  4322  012A40  0EFE               	movlw	-2
  4323  012A42  50E3               	movf	plusw1,w,c
  4324  012A44  6E0B               	movwf	(btemp+10)^0,c
  4325  012A46  6A0C               	clrf	(btemp+11)^0,c
  4326                           
  4327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4328                           ; Switch size 1, requested type "simple"
  4329                           ; Number of cases is 1, Range of values is 0 to 0
  4330                           ; switch strategies available:
  4331                           ; Name         Instructions Cycles
  4332                           ; simple_byte            4     3 (average)
  4333                           ;	Chosen strategy is simple_byte
  4334  012A48  500C               	movf	(btemp+11)^0,w,c
  4335  012A4A  0A00               	xorlw	0	; case 0
  4336  012A4C  A4D8               	btfss	status,2,c
  4337  012A4E  D00D               	goto	l1333
  4338                           
  4339                           ; BSR set to: 2
  4340                           ; Switch size 1, requested type "simple"
  4341                           ; Number of cases is 4, Range of values is 0 to 9
  4342                           ; switch strategies available:
  4343                           ; Name         Instructions Cycles
  4344                           ; simple_byte           13     7 (average)
  4345                           ;	Chosen strategy is simple_byte
  4346  012A50  500B               	movf	(btemp+10)^0,w,c
  4347  012A52  0A00               	xorlw	0	; case 0
  4348  012A54  B4D8               	btfsc	status,2,c
  4349  012A56  D7BD               	goto	l12257
  4350  012A58  0A03               	xorlw	3	; case 3
  4351  012A5A  B4D8               	btfsc	status,2,c
  4352  012A5C  D7C3               	goto	l12263
  4353  012A5E  0A05               	xorlw	5	; case 6
  4354  012A60  B4D8               	btfsc	status,2,c
  4355  012A62  D7CC               	goto	l12265
  4356  012A64  0A0F               	xorlw	15	; case 9
  4357  012A66  B4D8               	btfsc	status,2,c
  4358  012A68  D7D8               	goto	l12271
  4359  012A6A                     l1333:
  4360                           
  4361                           ;main.c: 364:   if (V.set_sequ) {
  4362  012A6A  0102               	movlb	2	; () banked
  4363  012A6C  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  4364  012A6E  D4D8               	goto	l12191
  4365                           
  4366                           ; BSR set to: 2
  4367                           ;main.c: 365:    if (TimerDone(TMR_INFO)) {
  4368  012A70  0E07               	movlw	7
  4369  012A72  6EE6               	movwf	postinc1,c
  4370  012A74  EC7F  F0D1         	call	_TimerDone	;wreg free
  4371  012A78  5001               	movf	btemp^0,w,c
  4372  012A7A  B4D8               	btfsc	status,2,c
  4373  012A7C  D00B               	goto	l12285
  4374                           
  4375                           ;main.c: 366:     V.set_sequ = 0;
  4376  012A7E  0102               	movlb	2	; () banked
  4377  012A80  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  4378                           
  4379                           ; BSR set to: 2
  4380                           ;main.c: 367:     set_vterm(0);
  4381  012A82  0E00               	movlw	0
  4382  012A84  6EE6               	movwf	postinc1,c
  4383  012A86  EC65  F0D3         	call	_set_vterm	;wreg free
  4384                           
  4385                           ;main.c: 368:     update_lcd(0);
  4386  012A8A  0E00               	movlw	0
  4387  012A8C  6EE6               	movwf	postinc1,c
  4388  012A8E  ECE1  F0C2         	call	_update_lcd	;wreg free
  4389                           
  4390                           ;main.c: 369:    } else {
  4391  012A92  D4C6               	goto	l12191
  4392  012A94                     l12285:
  4393                           
  4394                           ;main.c: 370:     set_vterm(2);
  4395  012A94  0E02               	movlw	2
  4396  012A96  6EE6               	movwf	postinc1,c
  4397  012A98  EC65  F0D3         	call	_set_vterm	;wreg free
  4398                           
  4399                           ;main.c: 371:     update_lcd(2);
  4400  012A9C  0E02               	movlw	2
  4401  012A9E  6EE6               	movwf	postinc1,c
  4402  012AA0  ECE1  F0C2         	call	_update_lcd	;wreg free
  4403  012AA4  D4BD               	goto	l12191
  4404  012AA6                     __end_of_main:
  4405                           	opt callstack 0
  4406                           
  4407 ;; *************** function _static_soc *****************
  4408 ;; Defined at:
  4409 ;;		line 85 in file "mbmc.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1  [STACK] void 
  4416 ;; Registers used:
  4417 ;;		wreg, status,2
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/39
  4420 ;;		On exit  : 3F/1
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4427 ;;Total ram usage:        0 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:   15
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_main
  4434 ;; This function uses a reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text1
  4438  01A530                     __ptext1:
  4439                           	opt callstack 0
  4440  01A530                     _static_soc:
  4441                           	opt callstack 15
  4442                           
  4443                           ;mbmc.c: 87:  C.runtime = 120;
  4444                           
  4445                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4446                           ;incstack = 0
  4447  01A530  0E00               	movlw	0
  4448  01A532  0101               	movlb	1	; () banked
  4449  01A534  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
  4450  01A536  0E78               	movlw	120
  4451  01A538  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
  4452                           
  4453                           ;mbmc.c: 88:  C.soc = 100;
  4454  01A53A  0E00               	movlw	0
  4455  01A53C  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
  4456  01A53E  0E64               	movlw	100
  4457  01A540  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
  4458                           
  4459                           ; BSR set to: 1
  4460                           ;mbmc.c: 89:  C.dynamic_ah = C.bank_ah;
  4461  01A542  C17C  F180         	movff	_C+124,_C+128	;volatile
  4462  01A546  C17D  F181         	movff	_C+125,_C+129	;volatile
  4463  01A54A  C17E  F182         	movff	_C+126,_C+130	;volatile
  4464  01A54E  C17F  F183         	movff	_C+127,_C+131	;volatile
  4465                           
  4466                           ; BSR set to: 1
  4467                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4468  01A552  0012               	return		;funcret
  4469  01A554                     __end_of_static_soc:
  4470                           	opt callstack 0
  4471                           
  4472 ;; *************** function _start_switch_handler *****************
  4473 ;; Defined at:
  4474 ;;		line 119 in file "dio.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;		None
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1  [STACK] void 
  4481 ;; Registers used:
  4482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  4483 ;; Tracked objects:
  4484 ;;		On entry : 1/0
  4485 ;;		On exit  : 3F/39
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4492 ;;Total ram usage:        0 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; Hardware stack levels required when called:   16
  4495 ;; This function calls:
  4496 ;;		_INT1_SetInterruptHandler
  4497 ;; This function is called by:
  4498 ;;		_main
  4499 ;; This function uses a reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text2
  4503  01A64E                     __ptext2:
  4504                           	opt callstack 0
  4505  01A64E                     _start_switch_handler:
  4506                           	opt callstack 14
  4507                           
  4508                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  4509                           
  4510                           ; BSR set to: 1
  4511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4512                           ;incstack = 0
  4513  01A64E  0139               	movlb	57	; () banked
  4514  01A650  9195               	bcf	149,0,b	;volatile
  4515                           
  4516                           ; BSR set to: 57
  4517                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  4518  01A652  0E4A               	movlw	low _switch_handler
  4519  01A654  6EE6               	movwf	postinc1,c
  4520  01A656  0E81               	movlw	high _switch_handler
  4521  01A658  6EE6               	movwf	postinc1,c
  4522  01A65A  0E01               	movlw	low (_switch_handler shr (0+16))
  4523  01A65C  6EE6               	movwf	postinc1,c
  4524  01A65E  EC0B  F0D2         	call	_INT1_SetInterruptHandler	;wreg free
  4525                           
  4526                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  4527  01A662  0E02               	movlw	2
  4528  01A664  0100               	movlb	0	; () banked
  4529  01A666  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  4533  01A668  0139               	movlb	57	; () banked
  4534  01A66A  8195               	bsf	149,0,b	;volatile
  4535                           
  4536                           ; BSR set to: 57
  4537                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  4538  01A66C  0012               	return		;funcret
  4539  01A66E                     __end_of_start_switch_handler:
  4540                           	opt callstack 0
  4541                           
  4542 ;; *************** function _start_adc_scan *****************
  4543 ;; Defined at:
  4544 ;;		line 33 in file "daq.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1  [STACK] _Bool 
  4551 ;; Registers used:
  4552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 1/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4562 ;;Total ram usage:        0 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:   16
  4565 ;; This function calls:
  4566 ;;		_ADCC_DischargeSampleCapacitor
  4567 ;;		_ADCC_SetADIInterruptHandler
  4568 ;;		_ADCC_SetADTIInterruptHandler
  4569 ;;		_ADCC_StartConversion
  4570 ;; This function is called by:
  4571 ;;		_main
  4572 ;; This function uses a reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text3
  4576  0197F0                     __ptext3:
  4577                           	opt callstack 0
  4578  0197F0                     _start_adc_scan:
  4579                           	opt callstack 14
  4580                           
  4581                           ;daq.c: 35:  if (R.done)
  4582                           
  4583                           ; BSR set to: 57
  4584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4585                           ;incstack = 0
  4586  0197F0  0100               	movlb	0	; () banked
  4587  0197F2  51F2               	movf	(_R+39)& (0+255),w,b	;volatile
  4588  0197F4  A4D8               	btfss	status,2,c
  4589  0197F6  0012               	return	
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;daq.c: 38:  R.scan_index = 0;
  4593  0197F8  6BEF               	clrf	(_R+36)& (0+255),b	;volatile
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  4597  0197FA  013A               	movlb	58	; () banked
  4598  0197FC  5140               	movf	64,w,b	;volatile
  4599  0197FE  006E F940  F001    	movff	14928,btemp	;volatile
  4600  019804  6A02               	clrf	(btemp+1)^0,c
  4601  019806  0060  F004  F002   	movff	btemp,btemp+1
  4602  01980C  6A01               	clrf	btemp^0,c
  4603  01980E  2601               	addwf	btemp^0,f,c
  4604  019810  0E00               	movlw	0
  4605  019812  2202               	addwfc	(btemp+1)^0,f,c
  4606  019814  0E77               	movlw	119
  4607  019816  1401               	andwf	btemp^0,w,c
  4608  019818  0100               	movlb	0	; () banked
  4609  01981A  6FF0               	movwf	(_R+37)& (0+255),b	;volatile
  4610  01981C  0E3C               	movlw	60
  4611  01981E  1402               	andwf	(btemp+1)^0,w,c
  4612  019820  6FF1               	movwf	(_R+38)& (0+255),b	;volatile
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  4616  019822  0E02               	movlw	low _adc_int_handler
  4617  019824  6EE6               	movwf	postinc1,c
  4618  019826  0EA9               	movlw	high _adc_int_handler
  4619  019828  6EE6               	movwf	postinc1,c
  4620  01982A  0E01               	movlw	low (_adc_int_handler shr (0+16))
  4621  01982C  6EE6               	movwf	postinc1,c
  4622  01982E  EC47  F0D2         	call	_ADCC_SetADIInterruptHandler	;wreg free
  4623                           
  4624                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  4625  019832  0ECC               	movlw	low _adc_int_t_handler
  4626  019834  6EE6               	movwf	postinc1,c
  4627  019836  0E95               	movlw	high _adc_int_t_handler
  4628  019838  6EE6               	movwf	postinc1,c
  4629  01983A  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  4630  01983C  6EE6               	movwf	postinc1,c
  4631  01983E  EC33  F0D2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  4632                           
  4633                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  4634  019842  EC59  F0D4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  4635                           
  4636                           ; BSR set to: 62
  4637                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  4638  019846  0100               	movlb	0	; () banked
  4639  019848  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
  4640  01984A  0B0F               	andlw	15
  4641  01984C  6EE6               	movwf	postinc1,c
  4642  01984E  ECFE  F0D3         	call	_ADCC_StartConversion	;wreg free
  4643                           
  4644                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4645  019852  0012               	return		;funcret
  4646  019854                     __end_of_start_adc_scan:
  4647                           	opt callstack 0
  4648                           
  4649 ;; *************** function _ADCC_StartConversion *****************
  4650 ;; Defined at:
  4651 ;;		line 128 in file "mcc_generated_files/adcc.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;  channel         1  [STACK] enum E16136
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  1  [STACK] void 
  4658 ;; Registers used:
  4659 ;;		fsr1l, fsr1h
  4660 ;; Tracked objects:
  4661 ;;		On entry : 3F/0
  4662 ;;		On exit  : 3F/3E
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4669 ;;Total ram usage:        0 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:   15
  4672 ;; This function calls:
  4673 ;;		Nothing
  4674 ;; This function is called by:
  4675 ;;		_start_adc_scan
  4676 ;;		_adc_int_t_handler
  4677 ;; This function uses a reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text4
  4681  01A7FC                     __ptext4:
  4682                           	opt callstack 0
  4683  01A7FC                     _ADCC_StartConversion:
  4684                           	opt callstack 0
  4685                           
  4686                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  4687                           ;stkvar	_channel @ sp[(0)+-1]
  4688                           
  4689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4690                           ;incstack = 0
  4691 ;; hardware stack exceeded
  4692  01A7FC  0EFF               	movlw	-1
  4693  01A7FE  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  4694                           
  4695                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  4696  01A804  013E               	movlb	62	; () banked
  4697  01A806  8FF8               	bsf	248,7,b	;volatile
  4698                           
  4699                           ; BSR set to: 62
  4700                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  4701  01A808  81F8               	bsf	248,0,b	;volatile
  4702                           
  4703                           ; BSR set to: 62
  4704                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  4705  01A80A  52E5               	movf	postdec1,f,c
  4706  01A80C  0012               	return		;funcret
  4707  01A80E                     __end_of_ADCC_StartConversion:
  4708                           	opt callstack 0
  4709                           
  4710 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  4711 ;; Defined at:
  4712 ;;		line 189 in file "mcc_generated_files/adcc.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;		None
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;		None
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1  [STACK] void 
  4719 ;; Registers used:
  4720 ;;		wreg, status,2
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 3F/3E
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4730 ;;Total ram usage:        0 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:   15
  4733 ;; This function calls:
  4734 ;;		Nothing
  4735 ;; This function is called by:
  4736 ;;		_start_adc_scan
  4737 ;;		_adc_int_t_handler
  4738 ;; This function uses a reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text5
  4742  01A8B2                     __ptext5:
  4743                           	opt callstack 0
  4744  01A8B2                     _ADCC_DischargeSampleCapacitor:
  4745                           	opt callstack 0
  4746                           
  4747                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  4748                           
  4749                           ; BSR set to: 62
  4750                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4751                           ;incstack = 0
  4752 ;; hardware stack exceeded
  4753  01A8B2  0E3B               	movlw	59
  4754  01A8B4  013E               	movlb	62	; () banked
  4755  01A8B6  6FF1               	movwf	241,b	;volatile
  4756                           
  4757                           ; BSR set to: 62
  4758                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  4759  01A8B8  0012               	return		;funcret
  4760  01A8BA                     __end_of_ADCC_DischargeSampleCapacitor:
  4761                           	opt callstack 0
  4762                           
  4763 ;; *************** function _srand *****************
  4764 ;; Defined at:
  4765 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  s               2  [STACK] unsigned int 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;		None
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1  [STACK] void 
  4772 ;; Registers used:
  4773 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  4774 ;; Tracked objects:
  4775 ;;		On entry : 3F/0
  4776 ;;		On exit  : 3F/2
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4783 ;;Total ram usage:        0 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:   15
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_main
  4790 ;; This function uses a reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text6
  4794  01A022                     __ptext6:
  4795                           	opt callstack 0
  4796  01A022                     _srand:
  4797                           	opt callstack 15
  4798                           
  4799                           ;stkvar	_s @ sp[(0)+-2]
  4800                           
  4801                           ; BSR set to: 62
  4802                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4803                           ;incstack = 0
  4804  01A022  0EFE               	movlw	-2
  4805  01A024  50E3               	movf	plusw1,w,c
  4806  01A026  0FFF               	addlw	255
  4807  01A028  6E0B               	movwf	(btemp+10)^0,c
  4808  01A02A  0EFF               	movlw	-1
  4809  01A02C  006F FF8C  F00C    	movff	plusw1,btemp+11
  4810  01A032  0EFF               	movlw	255
  4811  01A034  220C               	addwfc	(btemp+11)^0,f,c
  4812  01A036  0060  F02C  F2D5   	movff	btemp+10,_seed
  4813  01A03C  0060  F030  F2D6   	movff	btemp+11,_seed+1
  4814  01A042  0102               	movlb	2	; () banked
  4815  01A044  6BD7               	clrf	(_seed+2)& (0+255),b
  4816  01A046  6BD8               	clrf	(_seed+3)& (0+255),b
  4817  01A048  6BD9               	clrf	(_seed+4)& (0+255),b
  4818  01A04A  6BDA               	clrf	(_seed+5)& (0+255),b
  4819  01A04C  6BDB               	clrf	(_seed+6)& (0+255),b
  4820  01A04E  6BDC               	clrf	(_seed+7)& (0+255),b
  4821                           
  4822                           ; BSR set to: 2
  4823                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  4824  01A050  52E5               	movf	postdec1,f,c
  4825  01A052  52E5               	movf	postdec1,f,c
  4826  01A054  0012               	return		;funcret
  4827  01A056                     __end_of_srand:
  4828                           	opt callstack 0
  4829                           
  4830 ;; *************** function _init_port_dma *****************
  4831 ;; Defined at:
  4832 ;;		line 90 in file "eadog.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1  [STACK] void 
  4839 ;; Registers used:
  4840 ;;		wreg, status,2
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/2
  4843 ;;		On exit  : 3F/3B
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4850 ;;Total ram usage:        0 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:   15
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_main
  4857 ;; This function uses a reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text7
  4861  01A0BE                     __ptext7:
  4862                           	opt callstack 0
  4863  01A0BE                     _init_port_dma:
  4864                           	opt callstack 15
  4865                           
  4866                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  4867                           
  4868                           ; BSR set to: 2
  4869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4870                           ;incstack = 0
  4871  01A0BE  0E3F               	movlw	-193
  4872  01A0C0  013B               	movlb	59	; () banked
  4873  01A0C2  17DD               	andwf	221,f,b	;volatile
  4874                           
  4875                           ; BSR set to: 59
  4876                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  4877  01A0C4  9BDD               	bcf	221,5,b	;volatile
  4878                           
  4879                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  4880  01A0C6  51DD               	movf	221,w,b	;volatile
  4881  01A0C8  0BF9               	andlw	-7
  4882  01A0CA  0902               	iorlw	2
  4883  01A0CC  6FDD               	movwf	221,b	;volatile
  4884                           
  4885                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  4886  01A0CE  0EE7               	movlw	-25
  4887  01A0D0  17DD               	andwf	221,f,b	;volatile
  4888                           
  4889                           ; BSR set to: 59
  4890                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  4891  01A0D2  81DD               	bsf	221,0,b	;volatile
  4892                           
  4893                           ; BSR set to: 59
  4894                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  4895  01A0D4  9DDC               	bcf	220,6,b	;volatile
  4896                           
  4897                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  4898  01A0D6  0E3D               	movlw	61
  4899  01A0D8  6FD1               	movwf	209,b	;volatile
  4900  01A0DA  0EEA               	movlw	234
  4901  01A0DC  6FD0               	movwf	208,b	;volatile
  4902                           
  4903                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  4904  01A0DE  0EFF               	movlw	low _port_data
  4905  01A0E0  6FD9               	movwf	217,b	;volatile
  4906  01A0E2  0E05               	movlw	high _port_data
  4907  01A0E4  6FDA               	movwf	218,b	;volatile
  4908  01A0E6  0E00               	movlw	low (_port_data shr (0+16))
  4909  01A0E8  6FDB               	movwf	219,b	;volatile
  4910                           
  4911                           ; BSR set to: 59
  4912                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  4913  01A0EA  9BDC               	bcf	220,5,b	;volatile
  4914                           
  4915                           ; BSR set to: 59
  4916                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  4917  01A0EC  0012               	return		;funcret
  4918  01A0EE                     __end_of_init_port_dma:
  4919                           	opt callstack 0
  4920                           
  4921 ;; *************** function _init_display *****************
  4922 ;; Defined at:
  4923 ;;		line 38 in file "eadog.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;		None
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;		None
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1  [STACK] void 
  4930 ;; Registers used:
  4931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4932 ;; Tracked objects:
  4933 ;;		On entry : 3F/3B
  4934 ;;		On exit  : 3F/3D
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4941 ;;Total ram usage:        0 bytes
  4942 ;; Hardware stack levels used:    1
  4943 ;; Hardware stack levels required when called:   17
  4944 ;; This function calls:
  4945 ;;		_ringBufS_init
  4946 ;;		_send_lcd_cmd
  4947 ;;		_send_lcd_cmd_long
  4948 ;;		_wdtdelay
  4949 ;; This function is called by:
  4950 ;;		_main
  4951 ;; This function uses a reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text8
  4955  0189EC                     __ptext8:
  4956                           	opt callstack 0
  4957  0189EC                     _init_display:
  4958                           	opt callstack 13
  4959                           
  4960                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  4961                           
  4962                           ; BSR set to: 59
  4963                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4964                           ;incstack = 0
  4965  0189EC  0E43               	movlw	low _ring_buf1
  4966  0189EE  0100               	movlb	0	; () banked
  4967  0189F0  6F8F               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4968  0189F2  0E04               	movlw	high _ring_buf1
  4969  0189F4  6F90               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4970                           
  4971                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  4972  0189F6  0E00               	movlw	low _ring_buf2
  4973  0189F8  6F8D               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4974  0189FA  0E04               	movlw	high _ring_buf2
  4975  0189FC  6F8E               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  4979  0189FE  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  4980  018A04  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  4981  018A0A  EC57  F0D1         	call	_ringBufS_init	;wreg free
  4982                           
  4983                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  4984  018A0E  0060  F237  FFE6   	movff	_spi_link+4,postinc1
  4985  018A14  0060  F23B  FFE6   	movff	_spi_link+5,postinc1
  4986  018A1A  EC57  F0D1         	call	_ringBufS_init	;wreg free
  4987                           
  4988                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  4989  018A1E  84BE               	bsf	190,2,c	;volatile
  4990  018A20  84BC               	bsf	188,2,c	;volatile
  4991                           
  4992                           ;eadog.c: 59:  wdtdelay(350000);
  4993  018A22  0E30               	movlw	48
  4994  018A24  6EE6               	movwf	postinc1,c
  4995  018A26  0E57               	movlw	87
  4996  018A28  6EE6               	movwf	postinc1,c
  4997  018A2A  0E05               	movlw	5
  4998  018A2C  6EE6               	movwf	postinc1,c
  4999  018A2E  0E00               	movlw	0
  5000  018A30  6EE6               	movwf	postinc1,c
  5001  018A32  ECBB  F0CC         	call	_wdtdelay	;wreg free
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  5005  018A36  0E39               	movlw	57
  5006  018A38  6EE6               	movwf	postinc1,c
  5007  018A3A  EC43  F0D1         	call	_send_lcd_cmd	;wreg free
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  5011  018A3E  0E1D               	movlw	29
  5012  018A40  6EE6               	movwf	postinc1,c
  5013  018A42  EC43  F0D1         	call	_send_lcd_cmd	;wreg free
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  5017  018A46  0E50               	movlw	80
  5018  018A48  6EE6               	movwf	postinc1,c
  5019  018A4A  EC43  F0D1         	call	_send_lcd_cmd	;wreg free
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  5023  018A4E  0E6C               	movlw	108
  5024  018A50  6EE6               	movwf	postinc1,c
  5025  018A52  EC43  F0D1         	call	_send_lcd_cmd	;wreg free
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  5029  018A56  0E76               	movlw	118
  5030  018A58  6EE6               	movwf	postinc1,c
  5031  018A5A  EC43  F0D1         	call	_send_lcd_cmd	;wreg free
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  5035  018A5E  0E38               	movlw	56
  5036  018A60  6EE6               	movwf	postinc1,c
  5037  018A62  EC2F  F0D1         	call	_send_lcd_cmd_long	;wreg free
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  5041  018A66  0E0F               	movlw	15
  5042  018A68  6EE6               	movwf	postinc1,c
  5043  018A6A  EC43  F0D1         	call	_send_lcd_cmd	;wreg free
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  5047  018A6E  0E01               	movlw	1
  5048  018A70  6EE6               	movwf	postinc1,c
  5049  018A72  EC2F  F0D1         	call	_send_lcd_cmd_long	;wreg free
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  5053  018A76  0E02               	movlw	2
  5054  018A78  6EE6               	movwf	postinc1,c
  5055  018A7A  EC43  F0D1         	call	_send_lcd_cmd	;wreg free
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  5059  018A7E  0E06               	movlw	6
  5060  018A80  6EE6               	movwf	postinc1,c
  5061  018A82  EC43  F0D1         	call	_send_lcd_cmd	;wreg free
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;eadog.c: 70:  wdtdelay(30);
  5065  018A86  0E1E               	movlw	30
  5066  018A88  6EE6               	movwf	postinc1,c
  5067  018A8A  0E00               	movlw	0
  5068  018A8C  6EE6               	movwf	postinc1,c
  5069  018A8E  0E00               	movlw	0
  5070  018A90  6EE6               	movwf	postinc1,c
  5071  018A92  0E00               	movlw	0
  5072  018A94  6EE6               	movwf	postinc1,c
  5073  018A96  ECBB  F0CC         	call	_wdtdelay	;wreg free
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  5077  018A9A  0E02               	movlw	2
  5078  018A9C  013D               	movlb	61	; () banked
  5079  018A9E  6F16               	movwf	22,b	;volatile
  5080                           
  5081                           ; BSR set to: 61
  5082                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  5083  018AA0  0E40               	movlw	64
  5084  018AA2  6F15               	movwf	21,b	;volatile
  5085                           
  5086                           ; BSR set to: 61
  5087                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  5088  018AA4  0E83               	movlw	131
  5089  018AA6  6F14               	movwf	20,b	;volatile
  5090                           
  5091                           ; BSR set to: 61
  5092                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  5093  018AA8  931A               	bcf	26,1,b	;volatile
  5094                           
  5095                           ; BSR set to: 61
  5096                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  5097  018AAA  0E3F               	movlw	-193
  5098  018AAC  013B               	movlb	59	; () banked
  5099  018AAE  17FD               	andwf	253,f,b	;volatile
  5100                           
  5101                           ; BSR set to: 59
  5102                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  5103  018AB0  9BFD               	bcf	253,5,b	;volatile
  5104                           
  5105                           ; BSR set to: 59
  5106                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  5107  018AB2  51FD               	movf	253,w,b	;volatile
  5108  018AB4  0BF9               	andlw	-7
  5109  018AB6  0902               	iorlw	2
  5110  018AB8  6FFD               	movwf	253,b	;volatile
  5111                           
  5112                           ; BSR set to: 59
  5113                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  5114  018ABA  0EE7               	movlw	-25
  5115  018ABC  17FD               	andwf	253,f,b	;volatile
  5116                           
  5117                           ; BSR set to: 59
  5118                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  5119  018ABE  81FD               	bsf	253,0,b	;volatile
  5120                           
  5121                           ; BSR set to: 59
  5122                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  5123  018AC0  0E43               	movlw	low _ring_buf1
  5124  018AC2  6FF9               	movwf	249,b	;volatile
  5125  018AC4  0E04               	movlw	high _ring_buf1
  5126  018AC6  6FFA               	movwf	250,b	;volatile
  5127  018AC8  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5128  018ACA  6FFB               	movwf	251,b	;volatile
  5129                           
  5130                           ; BSR set to: 59
  5131                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  5132  018ACC  9BFC               	bcf	252,5,b	;volatile
  5133                           
  5134                           ; BSR set to: 59
  5135                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  5136  018ACE  013D               	movlb	61	; () banked
  5137  018AD0  831A               	bsf	26,1,b	;volatile
  5138                           
  5139                           ; BSR set to: 61
  5140                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  5141  018AD2  94BE               	bcf	190,2,c	;volatile
  5142                           
  5143                           ; BSR set to: 61
  5144                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5145  018AD4  0012               	return		;funcret
  5146  018AD6                     __end_of_init_display:
  5147                           	opt callstack 0
  5148                           
  5149 ;; *************** function _send_lcd_cmd_long *****************
  5150 ;; Defined at:
  5151 ;;		line 129 in file "eadog.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  cmd             1  [STACK] const unsigned char 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;		None
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  1  [STACK] void 
  5158 ;; Registers used:
  5159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5160 ;; Tracked objects:
  5161 ;;		On entry : 3F/0
  5162 ;;		On exit  : 3F/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5169 ;;Total ram usage:        0 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; Hardware stack levels required when called:   16
  5172 ;; This function calls:
  5173 ;;		_SPI1_Exchange8bit
  5174 ;;		_wdtdelay
  5175 ;; This function is called by:
  5176 ;;		_init_display
  5177 ;; This function uses a reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text9
  5181  01A25E                     __ptext9:
  5182                           	opt callstack 0
  5183  01A25E                     _send_lcd_cmd_long:
  5184                           	opt callstack 13
  5185                           
  5186                           ; BSR set to: 61
  5187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5188                           ;incstack = 0
  5189                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  5190  01A25E  92BC               	bcf	188,1,c	;volatile
  5191                           
  5192                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  5193  01A260  94BC               	bcf	188,2,c	;volatile
  5194                           
  5195                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  5196                           ;stkvar	_cmd @ sp[(0)+-1]
  5197  01A262  0EFF               	movlw	-1
  5198  01A264  50E3               	movf	plusw1,w,c
  5199  01A266  6EE6               	movwf	postinc1,c
  5200  01A268  EC47  F0D3         	call	_SPI1_Exchange8bit	;wreg free
  5201                           
  5202                           ; BSR set to: 57
  5203                           ;eadog.c: 134:  wdtdelay(800);
  5204  01A26C  0E20               	movlw	32
  5205  01A26E  6EE6               	movwf	postinc1,c
  5206  01A270  0E03               	movlw	3
  5207  01A272  6EE6               	movwf	postinc1,c
  5208  01A274  0E00               	movlw	0
  5209  01A276  6EE6               	movwf	postinc1,c
  5210  01A278  0E00               	movlw	0
  5211  01A27A  6EE6               	movwf	postinc1,c
  5212  01A27C  ECBB  F0CC         	call	_wdtdelay	;wreg free
  5213                           
  5214                           ; BSR set to: 0
  5215  01A280  82BC               	bsf	188,1,c	;volatile
  5216                           
  5217                           ; BSR set to: 0
  5218                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5219  01A282  52E5               	movf	postdec1,f,c
  5220  01A284  0012               	return		;funcret
  5221  01A286                     __end_of_send_lcd_cmd_long:
  5222                           	opt callstack 0
  5223                           
  5224 ;; *************** function _send_lcd_cmd *****************
  5225 ;; Defined at:
  5226 ;;		line 117 in file "eadog.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;  cmd             1  [STACK] const unsigned char 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;		None
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1  [STACK] void 
  5233 ;; Registers used:
  5234 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5235 ;; Tracked objects:
  5236 ;;		On entry : 3F/0
  5237 ;;		On exit  : 3F/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5244 ;;Total ram usage:        0 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:   16
  5247 ;; This function calls:
  5248 ;;		_SPI1_Exchange8bit
  5249 ;;		_wdtdelay
  5250 ;; This function is called by:
  5251 ;;		_init_display
  5252 ;; This function uses a reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text10
  5256  01A286                     __ptext10:
  5257                           	opt callstack 0
  5258  01A286                     _send_lcd_cmd:
  5259                           	opt callstack 13
  5260                           
  5261                           ; BSR set to: 0
  5262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5263                           ;incstack = 0
  5264                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  5265  01A286  92BC               	bcf	188,1,c	;volatile
  5266                           
  5267                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  5268  01A288  94BC               	bcf	188,2,c	;volatile
  5269                           
  5270                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  5271                           ;stkvar	_cmd @ sp[(0)+-1]
  5272  01A28A  0EFF               	movlw	-1
  5273  01A28C  50E3               	movf	plusw1,w,c
  5274  01A28E  6EE6               	movwf	postinc1,c
  5275  01A290  EC47  F0D3         	call	_SPI1_Exchange8bit	;wreg free
  5276                           
  5277                           ; BSR set to: 57
  5278                           ;eadog.c: 122:  wdtdelay(30);
  5279  01A294  0E1E               	movlw	30
  5280  01A296  6EE6               	movwf	postinc1,c
  5281  01A298  0E00               	movlw	0
  5282  01A29A  6EE6               	movwf	postinc1,c
  5283  01A29C  0E00               	movlw	0
  5284  01A29E  6EE6               	movwf	postinc1,c
  5285  01A2A0  0E00               	movlw	0
  5286  01A2A2  6EE6               	movwf	postinc1,c
  5287  01A2A4  ECBB  F0CC         	call	_wdtdelay	;wreg free
  5288                           
  5289                           ; BSR set to: 0
  5290  01A2A8  82BC               	bsf	188,1,c	;volatile
  5291                           
  5292                           ; BSR set to: 0
  5293                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5294  01A2AA  52E5               	movf	postdec1,f,c
  5295  01A2AC  0012               	return		;funcret
  5296  01A2AE                     __end_of_send_lcd_cmd:
  5297                           	opt callstack 0
  5298                           
  5299 ;; *************** function _SPI1_Exchange8bit *****************
  5300 ;; Defined at:
  5301 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  data            1  [STACK] unsigned char 
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;		None
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1  [STACK] unsigned char 
  5308 ;; Registers used:
  5309 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 3F/39
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5319 ;;Total ram usage:        0 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; Hardware stack levels required when called:   15
  5322 ;; This function calls:
  5323 ;;		Nothing
  5324 ;; This function is called by:
  5325 ;;		_send_lcd_cmd
  5326 ;;		_send_lcd_cmd_long
  5327 ;; This function uses a reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text11
  5331  01A68E                     __ptext11:
  5332                           	opt callstack 0
  5333  01A68E                     _SPI1_Exchange8bit:
  5334                           	opt callstack 13
  5335                           
  5336                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5337                           
  5338                           ; BSR set to: 0
  5339                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5340                           ;incstack = 0
  5341  01A68E  0E01               	movlw	1
  5342  01A690  013D               	movlb	61	; () banked
  5343  01A692  6F12               	movwf	18,b	;volatile
  5344                           
  5345                           ; BSR set to: 61
  5346                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5347                           ;stkvar	_data @ sp[(0)+-1]
  5348  01A694  0EFF               	movlw	-1
  5349  01A696  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5350  01A69C                     l807:
  5351                           
  5352                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5353  01A69C  0139               	movlb	57	; () banked
  5354  01A69E  A9A2               	btfss	162,4,b	;volatile
  5355  01A6A0  D7FD               	goto	l807
  5356                           
  5357                           ; BSR set to: 57
  5358                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5359  01A6A2  006F F440  F001    	movff	15632,btemp	;volatile
  5360                           
  5361                           ; BSR set to: 57
  5362                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5363  01A6A8  52E5               	movf	postdec1,f,c
  5364  01A6AA  0012               	return		;funcret
  5365  01A6AC                     __end_of_SPI1_Exchange8bit:
  5366                           	opt callstack 0
  5367                           
  5368 ;; *************** function _ringBufS_init *****************
  5369 ;; Defined at:
  5370 ;;		line 22 in file "ringbufs.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;  _this           2  [STACK] PTR volatile struct ring
  5373 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5374 ;; Auto vars:     Size  Location     Type
  5375 ;;		None
  5376 ;; Return value:  Size  Location     Type
  5377 ;;                  1  [STACK] void 
  5378 ;; Registers used:
  5379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5389 ;;Total ram usage:        0 bytes
  5390 ;; Hardware stack levels used:    1
  5391 ;; Hardware stack levels required when called:   16
  5392 ;; This function calls:
  5393 ;;		_memset
  5394 ;; This function is called by:
  5395 ;;		_init_display
  5396 ;; This function uses a reentrant model
  5397 ;;
  5398                           
  5399                           	psect	text12
  5400  01A2AE                     __ptext12:
  5401                           	opt callstack 0
  5402  01A2AE                     _ringBufS_init:
  5403                           	opt callstack 13
  5404                           
  5405                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5406                           
  5407                           ; BSR set to: 57
  5408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5409                           ;incstack = 0
  5410  01A2AE  0E43               	movlw	67
  5411  01A2B0  6EE6               	movwf	postinc1,c
  5412  01A2B2  0E00               	movlw	0
  5413  01A2B4  6EE6               	movwf	postinc1,c
  5414  01A2B6  0E00               	movlw	0
  5415  01A2B8  6EE6               	movwf	postinc1,c
  5416  01A2BA  0E00               	movlw	0
  5417  01A2BC  6EE6               	movwf	postinc1,c
  5418                           
  5419                           ;stkvar	__this @ sp[(-4)+-2]
  5420  01A2BE  0EFA               	movlw	-6
  5421  01A2C0  006F FF8F FFE6     	movff	plusw1,postinc1
  5422  01A2C6  006F FF8F FFE6     	movff	plusw1,postinc1
  5423  01A2CC  EC8B  F0AD         	call	_memset	;wreg free
  5424                           
  5425                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5426  01A2D0  52E5               	movf	postdec1,f,c
  5427  01A2D2  52E5               	movf	postdec1,f,c
  5428  01A2D4  0012               	return		;funcret
  5429  01A2D6                     __end_of_ringBufS_init:
  5430                           	opt callstack 0
  5431                           
  5432 ;; *************** function _init_bsoc *****************
  5433 ;; Defined at:
  5434 ;;		line 92 in file "bsoc.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;		None
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;		None
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  1  [STACK] void 
  5441 ;; Registers used:
  5442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  5443 ;; Tracked objects:
  5444 ;;		On entry : 3F/1
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5452 ;;Total ram usage:        0 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:   18
  5455 ;; This function calls:
  5456 ;;		_TMR3_SetInterruptHandler
  5457 ;;		_Volts_to_SOC
  5458 ;;		___fldiv
  5459 ;;		___flmul
  5460 ;;		___fltol
  5461 ;;		___xxtofl
  5462 ;;		_conv_raw_result
  5463 ;; This function is called by:
  5464 ;;		_main
  5465 ;; This function uses a reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text13
  5469  017958                     __ptext13:
  5470                           	opt callstack 0
  5471  017958                     _init_bsoc:
  5472                           	opt callstack 12
  5473                           
  5474                           ;bsoc.c: 97:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  5475                           
  5476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5477                           ;incstack = 0
  5478  017958  0E00               	movlw	0
  5479  01795A  6EE6               	movwf	postinc1,c
  5480  01795C  0E00               	movlw	0
  5481  01795E  6EE6               	movwf	postinc1,c
  5482  017960  0E7A               	movlw	122
  5483  017962  6EE6               	movwf	postinc1,c
  5484  017964  0E44               	movlw	68
  5485  017966  6EE6               	movwf	postinc1,c
  5486  017968  0E00               	movlw	0
  5487  01796A  6EE6               	movwf	postinc1,c
  5488  01796C  0E04               	movlw	4
  5489  01796E  6EE6               	movwf	postinc1,c
  5490  017970  ECC2  F0A3         	call	_conv_raw_result	;wreg free
  5491  017974  0060  F007  FFE6   	movff	btemp,postinc1
  5492  01797A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5493  017980  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5494  017986  0060  F013  FFE6   	movff	btemp+3,postinc1
  5495  01798C  ECF3  F0BB         	call	___fltol	;wreg free
  5496  017990  0060  F007  FFE6   	movff	btemp,postinc1
  5497  017996  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5498  01799C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5499  0179A2  0060  F013  FFE6   	movff	btemp+3,postinc1
  5500  0179A8  0E00               	movlw	0
  5501  0179AA  6EE6               	movwf	postinc1,c
  5502  0179AC  EC88  F0B7         	call	___xxtofl	;wreg free
  5503  0179B0  0060  F007  FFE6   	movff	btemp,postinc1
  5504  0179B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5505  0179BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5506  0179C2  0060  F013  FFE6   	movff	btemp+3,postinc1
  5507  0179C8  EC53  F095         	call	___flmul	;wreg free
  5508  0179CC  0060  F007  FFE6   	movff	btemp,postinc1
  5509  0179D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5510  0179D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5511  0179DE  0060  F013  FFE6   	movff	btemp+3,postinc1
  5512  0179E4  ECF3  F0BB         	call	___fltol	;wreg free
  5513  0179E8  0060  F007  FFE6   	movff	btemp,postinc1
  5514  0179EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5515  0179F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5516  0179FA  0060  F013  FFE6   	movff	btemp+3,postinc1
  5517  017A00  ECF9  F0C8         	call	_Volts_to_SOC	;wreg free
  5518  017A04  0060  F004  F19E   	movff	btemp,_C+158	;volatile
  5519  017A0A  0060  F008  F19F   	movff	btemp+1,_C+159	;volatile
  5520                           
  5521                           ;bsoc.c: 98:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  5522  017A10  0060  F5F3  FFE6   	movff	_C+124,postinc1
  5523  017A16  0060  F5F7  FFE6   	movff	_C+125,postinc1
  5524  017A1C  0060  F5FB  FFE6   	movff	_C+126,postinc1
  5525  017A22  0060  F5FF  FFE6   	movff	_C+127,postinc1
  5526  017A28  0E00               	movlw	0
  5527  017A2A  6EE6               	movwf	postinc1,c
  5528  017A2C  0E00               	movlw	0
  5529  017A2E  6EE6               	movwf	postinc1,c
  5530  017A30  0EC8               	movlw	200
  5531  017A32  6EE6               	movwf	postinc1,c
  5532  017A34  0E42               	movlw	66
  5533  017A36  6EE6               	movwf	postinc1,c
  5534  017A38  0101               	movlb	1	; () banked
  5535  017A3A  519E               	movf	(_C+158)& (0+255),w,b	;volatile
  5536  017A3C  6E09               	movwf	(btemp+8)^0,c
  5537  017A3E  519F               	movf	(_C+159)& (0+255),w,b	;volatile
  5538  017A40  6E0A               	movwf	(btemp+9)^0,c
  5539  017A42  6A0B               	clrf	(btemp+10)^0,c
  5540  017A44  6A0C               	clrf	(btemp+11)^0,c
  5541  017A46  0060  F027  FFE6   	movff	btemp+8,postinc1
  5542  017A4C  0060  F02B  FFE6   	movff	btemp+9,postinc1
  5543  017A52  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5544  017A58  0060  F033  FFE6   	movff	btemp+11,postinc1
  5545  017A5E  0E00               	movlw	0
  5546  017A60  6EE6               	movwf	postinc1,c
  5547  017A62  EC88  F0B7         	call	___xxtofl	;wreg free
  5548  017A66  0060  F007  FFE6   	movff	btemp,postinc1
  5549  017A6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5550  017A72  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5551  017A78  0060  F013  FFE6   	movff	btemp+3,postinc1
  5552  017A7E  EC05  F0A1         	call	___fldiv	;wreg free
  5553  017A82  0060  F007  FFE6   	movff	btemp,postinc1
  5554  017A88  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5555  017A8E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5556  017A94  0060  F013  FFE6   	movff	btemp+3,postinc1
  5557  017A9A  EC53  F095         	call	___flmul	;wreg free
  5558  017A9E  0060  F004  F180   	movff	btemp,_C+128	;volatile
  5559  017AA4  0060  F008  F181   	movff	btemp+1,_C+129	;volatile
  5560  017AAA  0060  F00C  F182   	movff	btemp+2,_C+130	;volatile
  5561  017AB0  0060  F010  F183   	movff	btemp+3,_C+131	;volatile
  5562                           
  5563                           ;bsoc.c: 99:  TMR3_SetInterruptHandler(calc_bsoc);
  5564  017AB6  0E8C               	movlw	low _calc_bsoc
  5565  017AB8  6EE6               	movwf	postinc1,c
  5566  017ABA  0E3A               	movlw	high _calc_bsoc
  5567  017ABC  6EE6               	movwf	postinc1,c
  5568  017ABE  0E01               	movlw	low (_calc_bsoc shr (0+16))
  5569  017AC0  6EE6               	movwf	postinc1,c
  5570  017AC2  ECF7  F0D1         	call	_TMR3_SetInterruptHandler	;wreg free
  5571                           
  5572                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5573  017AC6  0012               	return		;funcret
  5574  017AC8                     __end_of_init_bsoc:
  5575                           	opt callstack 0
  5576                           
  5577 ;; *************** function _Volts_to_SOC *****************
  5578 ;; Defined at:
  5579 ;;		line 156 in file "bsoc.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  cvoltage        4  [STACK] unsigned long 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  2  [STACK] unsigned short 
  5586 ;; Registers used:
  5587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/1
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5597 ;;Total ram usage:        0 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:   15
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_calc_bsoc
  5604 ;;		_init_bsoc
  5605 ;; This function uses a reentrant model
  5606 ;;
  5607                           
  5608                           	psect	text14
  5609  0191F2                     __ptext14:
  5610                           	opt callstack 0
  5611  0191F2                     _Volts_to_SOC:
  5612                           	opt callstack 0
  5613                           
  5614                           ;bsoc.c: 156: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 157: {;bsoc.c: 158:  stat
      +                          ic uint8_t slot;;bsoc.c: 160:  C.soc = 0;
  5615                           
  5616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5617                           ;incstack = 0
  5618 ;; hardware stack exceeded
  5619  0191F2  0101               	movlb	1	; () banked
  5620  0191F4  6B9E               	clrf	(_C+158)& (0+255),b	;volatile
  5621  0191F6  6B9F               	clrf	(_C+159)& (0+255),b	;volatile
  5622                           
  5623                           ;bsoc.c: 161:  for (slot = 0; slot < 26; slot++) {
  5624  0191F8  6A2D               	clrf	Volts_to_SOC@slot^0,c
  5625  0191FA                     l9161:
  5626  0191FA  0E19               	movlw	25
  5627  0191FC  642D               	cpfsgt	Volts_to_SOC@slot^0,c
  5628  0191FE  D001               	goto	l9165
  5629  019200  D036               	goto	l9173
  5630  019202                     l9165:
  5631                           
  5632                           ;bsoc.c: 162:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  5633                           ;stkvar	_cvoltage @ sp[(0)+-4]
  5634  019202  502D               	movf	Volts_to_SOC@slot^0,w,c
  5635  019204  0D08               	mullw	8
  5636  019206  0E71               	movlw	low _BVSOC_TABLE
  5637  019208  24F3               	addwf	243,w,c
  5638  01920A  6EF6               	movwf	tblptrl,c
  5639  01920C  0EFC               	movlw	high _BVSOC_TABLE
  5640  01920E  20F4               	addwfc	244,w,c
  5641  019210  6EF7               	movwf	tblptrh,c
  5642  019212                     	if	1	;There are 3 active tblptr bytes
  5643  019212  6AF8               	clrf	tblptru,c
  5644  019214  0E00               	movlw	low (__mediumconst shr (0+16))
  5645  019216  22F8               	addwfc	tblptru,f,c
  5646  019218                     	endif
  5647  019218  0EFC               	movlw	-4
  5648  01921A  50E3               	movf	plusw1,w,c
  5649  01921C  0009               	tblrd		*+
  5650  01921E  5CF5               	subwf	tablat,w,c
  5651  019220  0EFD               	movlw	-3
  5652  019222  50E3               	movf	plusw1,w,c
  5653  019224  0009               	tblrd		*+
  5654  019226  58F5               	subwfb	tablat,w,c
  5655  019228  0EFE               	movlw	-2
  5656  01922A  50E3               	movf	plusw1,w,c
  5657  01922C  0009               	tblrd		*+
  5658  01922E  58F5               	subwfb	tablat,w,c
  5659  019230  0EFF               	movlw	-1
  5660  019232  50E3               	movf	plusw1,w,c
  5661  019234  0009               	tblrd		*+
  5662  019236  58F5               	subwfb	tablat,w,c
  5663  019238  B0D8               	btfsc	status,0,c
  5664  01923A  D017               	goto	l9169
  5665                           
  5666                           ;bsoc.c: 163:    C.soc = BVSOC_TABLE[slot][1];
  5667  01923C  502D               	movf	Volts_to_SOC@slot^0,w,c
  5668  01923E  0D08               	mullw	8
  5669  019240  0E04               	movlw	4
  5670  019242  26F3               	addwf	243,f,c
  5671  019244  0E00               	movlw	0
  5672  019246  22F4               	addwfc	244,f,c
  5673  019248  0E71               	movlw	low _BVSOC_TABLE
  5674  01924A  24F3               	addwf	243,w,c
  5675  01924C  6EF6               	movwf	tblptrl,c
  5676  01924E  0EFC               	movlw	high _BVSOC_TABLE
  5677  019250  20F4               	addwfc	244,w,c
  5678  019252  6EF7               	movwf	tblptrh,c
  5679  019254                     	if	1	;There are 3 active tblptr bytes
  5680  019254  6AF8               	clrf	tblptru,c
  5681  019256  0E00               	movlw	low (__mediumconst shr (0+16))
  5682  019258  22F8               	addwfc	tblptru,f,c
  5683  01925A                     	endif
  5684  01925A  0009               	tblrd		*+
  5685  01925C  006F FFD4  F19E    	movff	tablat,_C+158	;volatile
  5686  019262  000A               	tblrd		*-
  5687  019264  006F FFD4  F19F    	movff	tablat,_C+159	;volatile
  5688  01926A                     l9169:
  5689                           
  5690                           ;bsoc.c: 165:  }
  5691  01926A  2A2D               	incf	Volts_to_SOC@slot^0,f,c
  5692  01926C  D7C6               	goto	l9161
  5693  01926E                     l9173:
  5694                           
  5695                           ;bsoc.c: 167:  return C.soc;
  5696  01926E  EE20  F19E         	lfsr	2,_C+158	;volatile
  5697  019272  006F FF78  F001    	movff	postinc2,btemp
  5698  019278  006F FF74  F002    	movff	postdec2,btemp+1
  5699                           
  5700                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  5701  01927E  52E5               	movf	postdec1,f,c
  5702  019280  52E5               	movf	postdec1,f,c
  5703  019282  52E5               	movf	postdec1,f,c
  5704  019284  52E5               	movf	postdec1,f,c
  5705  019286  0012               	return		;funcret
  5706  019288                     __end_of_Volts_to_SOC:
  5707                           	opt callstack 0
  5708                           
  5709 ;; *************** function _hid_display *****************
  5710 ;; Defined at:
  5711 ;;		line 17 in file "hid.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  h               1  [STACK] PTR struct H_data
  5714 ;;		 -> H(7), 
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;		None
  5717 ;; Return value:  Size  Location     Type
  5718 ;;                  1  [STACK] PTR struct H_data
  5719 ;; Registers used:
  5720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  5721 ;; Tracked objects:
  5722 ;;		On entry : 3F/1
  5723 ;;		On exit  : 0/0
  5724 ;;		Unchanged: 0/0
  5725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5730 ;;Total ram usage:        0 bytes
  5731 ;; Hardware stack levels used:    1
  5732 ;; Hardware stack levels required when called:   17
  5733 ;; This function calls:
  5734 ;;		_hid_input
  5735 ;; This function is called by:
  5736 ;;		_main
  5737 ;; This function uses a reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text15
  5741  0188EA                     __ptext15:
  5742                           	opt callstack 0
  5743  0188EA                     _hid_display:
  5744                           	opt callstack 13
  5745                           
  5746                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  5747                           ;stkvar	_h @ sp[(0)+-1]
  5748                           
  5749                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5750                           ;incstack = 0
  5751  0188EA  0EFF               	movlw	-1
  5752  0188EC  50E3               	movf	plusw1,w,c
  5753  0188EE  6EE6               	movwf	postinc1,c
  5754  0188F0  ECD6  F0C9         	call	_hid_input	;wreg free
  5755                           
  5756                           ;hid.c: 21:  switch (h->h_state) {
  5757  0188F4  D066               	goto	l10205
  5758  0188F6                     l10183:
  5759                           
  5760                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  5761                           ;stkvar	_h @ sp[(0)+-1]
  5762  0188F6  0EFF               	movlw	-1
  5763  0188F8  50E3               	movf	plusw1,w,c
  5764  0188FA  6ED9               	movwf	fsr2l,c
  5765  0188FC  6ADA               	clrf	fsr2h,c
  5766  0188FE  0E01               	movlw	1
  5767  018900  26D9               	addwf	fsr2l,f,c
  5768  018902  0E01               	movlw	1
  5769  018904  6EDF               	movwf	indf2,c
  5770                           
  5771                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  5772                           ;stkvar	_h @ sp[(0)+-1]
  5773  018906  0EFF               	movlw	-1
  5774  018908  50E3               	movf	plusw1,w,c
  5775  01890A  6ED9               	movwf	fsr2l,c
  5776  01890C  6ADA               	clrf	fsr2h,c
  5777  01890E  0E00               	movlw	0
  5778  018910  6EDF               	movwf	indf2,c
  5779                           
  5780                           ;hid.c: 25:   h->wait_enter = 1;
  5781                           ;stkvar	_h @ sp[(0)+-1]
  5782  018912  0EFF               	movlw	-1
  5783  018914  50E3               	movf	plusw1,w,c
  5784  018916  6ED9               	movwf	fsr2l,c
  5785  018918  6ADA               	clrf	fsr2h,c
  5786  01891A  0E04               	movlw	4
  5787  01891C  26D9               	addwf	fsr2l,f,c
  5788  01891E  0E01               	movlw	1
  5789  018920  6EDF               	movwf	indf2,c
  5790                           
  5791                           ;hid.c: 26:   h->wait_select = 1;
  5792                           ;stkvar	_h @ sp[(0)+-1]
  5793  018922  0EFF               	movlw	-1
  5794  018924  50E3               	movf	plusw1,w,c
  5795  018926  6ED9               	movwf	fsr2l,c
  5796  018928  6ADA               	clrf	fsr2h,c
  5797  01892A  0E02               	movlw	2
  5798  01892C  26D9               	addwf	fsr2l,f,c
  5799  01892E  0E01               	movlw	1
  5800  018930  6EDF               	movwf	indf2,c
  5801                           
  5802                           ;hid.c: 27:   h->select_p = SW_OFF;
  5803                           ;stkvar	_h @ sp[(0)+-1]
  5804  018932  0EFF               	movlw	-1
  5805  018934  50E3               	movf	plusw1,w,c
  5806  018936  6ED9               	movwf	fsr2l,c
  5807  018938  6ADA               	clrf	fsr2h,c
  5808  01893A  0E03               	movlw	3
  5809  01893C  26D9               	addwf	fsr2l,f,c
  5810  01893E  0E00               	movlw	0
  5811  018940  6EDF               	movwf	indf2,c
  5812                           
  5813                           ;hid.c: 28:   h->enter_p = SW_OFF;
  5814                           ;stkvar	_h @ sp[(0)+-1]
  5815  018942  0EFF               	movlw	-1
  5816  018944  50E3               	movf	plusw1,w,c
  5817  018946  6ED9               	movwf	fsr2l,c
  5818  018948  6ADA               	clrf	fsr2h,c
  5819  01894A  0E05               	movlw	5
  5820  01894C  26D9               	addwf	fsr2l,f,c
  5821  01894E  0E00               	movlw	0
  5822  018950  D036               	goto	L1
  5823  018952                     l10195:
  5824                           
  5825                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  5826                           ;stkvar	_h @ sp[(0)+-1]
  5827  018952  0EFF               	movlw	-1
  5828  018954  50E3               	movf	plusw1,w,c
  5829  018956  6ED9               	movwf	fsr2l,c
  5830  018958  6ADA               	clrf	fsr2h,c
  5831  01895A  0E02               	movlw	2
  5832  01895C  26D9               	addwf	fsr2l,f,c
  5833  01895E  50DF               	movf	indf2,w,c
  5834  018960  A4D8               	btfss	status,2,c
  5835  018962  D042               	goto	l1874
  5836                           
  5837                           ;stkvar	_h @ sp[(0)+-1]
  5838  018964  0EFF               	movlw	-1
  5839  018966  50E3               	movf	plusw1,w,c
  5840  018968  6ED9               	movwf	fsr2l,c
  5841  01896A  6ADA               	clrf	fsr2h,c
  5842  01896C  0E03               	movlw	3
  5843  01896E  26D9               	addwf	fsr2l,f,c
  5844  018970  50DF               	movf	indf2,w,c
  5845  018972  A4D8               	btfss	status,2,c
  5846  018974  D039               	goto	l1874
  5847                           
  5848                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  5849                           ;stkvar	_h @ sp[(0)+-1]
  5850  018976  0EFF               	movlw	-1
  5851  018978  50E3               	movf	plusw1,w,c
  5852  01897A  6ED9               	movwf	fsr2l,c
  5853  01897C  6ADA               	clrf	fsr2h,c
  5854  01897E  0E06               	movlw	6
  5855  018980  26D9               	addwf	fsr2l,f,c
  5856                           
  5857                           ;stkvar	_h @ sp[(0)+-1]
  5858  018982  0EFF               	movlw	-1
  5859  018984  50E3               	movf	plusw1,w,c
  5860  018986  6EE9               	movwf	fsr0l,c
  5861  018988  6AEA               	clrf	fsr0h,c
  5862  01898A  0E06               	movlw	6
  5863  01898C  26E9               	addwf	fsr0l,f,c
  5864  01898E  2AEF               	incf	indf0,f,c
  5865  018990  50EF               	movf	indf0,w,c
  5866  018992  0B03               	andlw	3
  5867  018994  6EDF               	movwf	indf2,c
  5868                           
  5869                           ;hid.c: 34:    h->hid_display = h->sequence;
  5870                           ;stkvar	_h @ sp[(0)+-1]
  5871  018996  0EFF               	movlw	-1
  5872  018998  50E3               	movf	plusw1,w,c
  5873  01899A  6ED9               	movwf	fsr2l,c
  5874  01899C  6ADA               	clrf	fsr2h,c
  5875  01899E  0E06               	movlw	6
  5876  0189A0  26D9               	addwf	fsr2l,f,c
  5877                           
  5878                           ;stkvar	_h @ sp[(0)+-1]
  5879  0189A2  0EFF               	movlw	-1
  5880  0189A4  50E3               	movf	plusw1,w,c
  5881  0189A6  6EE9               	movwf	fsr0l,c
  5882  0189A8  6AEA               	clrf	fsr0h,c
  5883  0189AA  006F FF7F FFEF     	movff	indf2,indf0
  5884                           
  5885                           ;hid.c: 35:    h->wait_select = 1;
  5886                           ;stkvar	_h @ sp[(0)+-1]
  5887  0189B0  0EFF               	movlw	-1
  5888  0189B2  50E3               	movf	plusw1,w,c
  5889  0189B4  6ED9               	movwf	fsr2l,c
  5890  0189B6  6ADA               	clrf	fsr2h,c
  5891  0189B8  0E02               	movlw	2
  5892  0189BA  26D9               	addwf	fsr2l,f,c
  5893  0189BC  0E01               	movlw	1
  5894  0189BE                     L1:
  5895  0189BE  6EDF               	movwf	indf2,c
  5896  0189C0  D013               	goto	l1874
  5897  0189C2                     l10205:
  5898                           
  5899                           ;stkvar	_h @ sp[(0)+-1]
  5900  0189C2  0EFF               	movlw	-1
  5901  0189C4  50E3               	movf	plusw1,w,c
  5902  0189C6  6ED9               	movwf	fsr2l,c
  5903  0189C8  6ADA               	clrf	fsr2h,c
  5904  0189CA  0E01               	movlw	1
  5905  0189CC  26D9               	addwf	fsr2l,f,c
  5906  0189CE  50DF               	movf	indf2,w,c
  5907  0189D0  6E0B               	movwf	(btemp+10)^0,c
  5908  0189D2  6A0C               	clrf	(btemp+11)^0,c
  5909                           
  5910                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5911                           ; Switch size 1, requested type "simple"
  5912                           ; Number of cases is 1, Range of values is 0 to 0
  5913                           ; switch strategies available:
  5914                           ; Name         Instructions Cycles
  5915                           ; simple_byte            4     3 (average)
  5916                           ;	Chosen strategy is simple_byte
  5917  0189D4  500C               	movf	(btemp+11)^0,w,c
  5918  0189D6  0A00               	xorlw	0	; case 0
  5919  0189D8  A4D8               	btfss	status,2,c
  5920  0189DA  D7BB               	goto	l10195
  5921                           
  5922                           ; Switch size 1, requested type "simple"
  5923                           ; Number of cases is 2, Range of values is 0 to 1
  5924                           ; switch strategies available:
  5925                           ; Name         Instructions Cycles
  5926                           ; simple_byte            7     4 (average)
  5927                           ;	Chosen strategy is simple_byte
  5928  0189DC  500B               	movf	(btemp+10)^0,w,c
  5929  0189DE  0A00               	xorlw	0	; case 0
  5930  0189E0  B4D8               	btfsc	status,2,c
  5931  0189E2  D789               	goto	l10183
  5932  0189E4  0A01               	xorlw	1	; case 1
  5933  0189E6  D7B5               	goto	l10195
  5934  0189E8                     l1874:
  5935                           
  5936                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  5937  0189E8  52E5               	movf	postdec1,f,c
  5938  0189EA  0012               	return		;funcret
  5939  0189EC                     __end_of_hid_display:
  5940                           	opt callstack 0
  5941                           
  5942 ;; *************** function _hid_input *****************
  5943 ;; Defined at:
  5944 ;;		line 3 in file "hid.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;  h               1  [STACK] PTR struct H_data
  5947 ;;		 -> H(7), 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;		None
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1  [STACK] PTR struct H_data
  5952 ;; Registers used:
  5953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/1
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5963 ;;Total ram usage:        0 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:   16
  5966 ;; This function calls:
  5967 ;;		_get_switch
  5968 ;; This function is called by:
  5969 ;;		_hid_display
  5970 ;; This function uses a reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text16
  5974  0193AC                     __ptext16:
  5975                           	opt callstack 0
  5976  0193AC                     _hid_input:
  5977                           	opt callstack 13
  5978                           
  5979                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  5980                           
  5981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5982                           ;incstack = 0
  5983  0193AC  0E02               	movlw	2
  5984  0193AE  6EE6               	movwf	postinc1,c
  5985  0193B0  EC6B  F0D1         	call	_get_switch	;wreg free
  5986  0193B4  5001               	movf	btemp^0,w,c
  5987  0193B6  B4D8               	btfsc	status,2,c
  5988  0193B8  D01C               	goto	l9857
  5989                           
  5990                           ;hid.c: 6:   h->wait_select = 0;
  5991                           ;stkvar	_h @ sp[(0)+-1]
  5992  0193BA  0EFF               	movlw	-1
  5993  0193BC  50E3               	movf	plusw1,w,c
  5994  0193BE  6ED9               	movwf	fsr2l,c
  5995  0193C0  6ADA               	clrf	fsr2h,c
  5996  0193C2  0E02               	movlw	2
  5997  0193C4  26D9               	addwf	fsr2l,f,c
  5998  0193C6  0E00               	movlw	0
  5999  0193C8  6EDF               	movwf	indf2,c
  6000                           
  6001                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  6002  0193CA  0E02               	movlw	2
  6003  0193CC  6EE6               	movwf	postinc1,c
  6004  0193CE  EC6B  F0D1         	call	_get_switch	;wreg free
  6005  0193D2  5001               	movf	btemp^0,w,c
  6006  0193D4  B4D8               	btfsc	status,2,c
  6007  0193D6  D003               	goto	u9220
  6008  0193D8  6A0C               	clrf	(btemp+11)^0,c
  6009  0193DA  2A0C               	incf	(btemp+11)^0,f,c
  6010  0193DC  D001               	goto	u9238
  6011  0193DE                     u9220:
  6012  0193DE  6A0C               	clrf	(btemp+11)^0,c
  6013  0193E0                     u9238:
  6014                           
  6015                           ;stkvar	_h @ sp[(0)+-1]
  6016  0193E0  0EFF               	movlw	-1
  6017  0193E2  50E3               	movf	plusw1,w,c
  6018  0193E4  6ED9               	movwf	fsr2l,c
  6019  0193E6  6ADA               	clrf	fsr2h,c
  6020  0193E8  0E03               	movlw	3
  6021  0193EA  26D9               	addwf	fsr2l,f,c
  6022  0193EC  0060  F033  FFDF   	movff	btemp+11,indf2
  6023  0193F2                     l9857:
  6024                           
  6025                           ;hid.c: 10:  if (get_switch(SENTER)) {
  6026  0193F2  0E03               	movlw	3
  6027  0193F4  6EE6               	movwf	postinc1,c
  6028  0193F6  EC6B  F0D1         	call	_get_switch	;wreg free
  6029  0193FA  5001               	movf	btemp^0,w,c
  6030  0193FC  B4D8               	btfsc	status,2,c
  6031  0193FE  D01C               	goto	l1865
  6032                           
  6033                           ;hid.c: 11:   h->wait_enter = 0;
  6034                           ;stkvar	_h @ sp[(0)+-1]
  6035  019400  0EFF               	movlw	-1
  6036  019402  50E3               	movf	plusw1,w,c
  6037  019404  6ED9               	movwf	fsr2l,c
  6038  019406  6ADA               	clrf	fsr2h,c
  6039  019408  0E04               	movlw	4
  6040  01940A  26D9               	addwf	fsr2l,f,c
  6041  01940C  0E00               	movlw	0
  6042  01940E  6EDF               	movwf	indf2,c
  6043                           
  6044                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  6045  019410  0E03               	movlw	3
  6046  019412  6EE6               	movwf	postinc1,c
  6047  019414  EC6B  F0D1         	call	_get_switch	;wreg free
  6048  019418  5001               	movf	btemp^0,w,c
  6049  01941A  B4D8               	btfsc	status,2,c
  6050  01941C  D003               	goto	u9250
  6051  01941E  6A0C               	clrf	(btemp+11)^0,c
  6052  019420  2A0C               	incf	(btemp+11)^0,f,c
  6053  019422  D001               	goto	u9268
  6054  019424                     u9250:
  6055  019424  6A0C               	clrf	(btemp+11)^0,c
  6056  019426                     u9268:
  6057                           
  6058                           ;stkvar	_h @ sp[(0)+-1]
  6059  019426  0EFF               	movlw	-1
  6060  019428  50E3               	movf	plusw1,w,c
  6061  01942A  6ED9               	movwf	fsr2l,c
  6062  01942C  6ADA               	clrf	fsr2h,c
  6063  01942E  0E05               	movlw	5
  6064  019430  26D9               	addwf	fsr2l,f,c
  6065  019432  0060  F033  FFDF   	movff	btemp+11,indf2
  6066  019438                     l1865:
  6067                           
  6068                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6069  019438  52E5               	movf	postdec1,f,c
  6070  01943A  0012               	return		;funcret
  6071  01943C                     __end_of_hid_input:
  6072                           	opt callstack 0
  6073                           
  6074 ;; *************** function _get_switch *****************
  6075 ;; Defined at:
  6076 ;;		line 18 in file "dio.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  i               1  [STACK] unsigned char 
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;		None
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  1  [STACK] enum E17021
  6083 ;; Registers used:
  6084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/2
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6094 ;;Total ram usage:        0 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; Hardware stack levels required when called:   15
  6097 ;; This function calls:
  6098 ;;		Nothing
  6099 ;; This function is called by:
  6100 ;;		_main
  6101 ;;		_hid_input
  6102 ;; This function uses a reentrant model
  6103 ;;
  6104                           
  6105                           	psect	text17
  6106  01A2D6                     __ptext17:
  6107                           	opt callstack 0
  6108  01A2D6                     _get_switch:
  6109                           	opt callstack 13
  6110                           
  6111                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  6112                           ;stkvar	_i @ sp[(0)+-1]
  6113                           
  6114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6115                           ;incstack = 0
  6116  01A2D6  0EFF               	movlw	-1
  6117  01A2D8  006F FF8C  F001    	movff	plusw1,btemp
  6118  01A2DE  0E03               	movlw	3
  6119  01A2E0  6401               	cpfsgt	btemp^0,c
  6120  01A2E2  D002               	goto	l9125
  6121                           
  6122                           ;dio.c: 21:   return SW_OFF;
  6123  01A2E4  0E00               	movlw	0
  6124  01A2E6  D008               	goto	L2
  6125  01A2E8                     l9125:
  6126                           
  6127                           ;dio.c: 23:  return S.button[i].sw;
  6128                           ;stkvar	_i @ sp[(0)+-1]
  6129  01A2E8  0EFF               	movlw	-1
  6130  01A2EA  50E3               	movf	plusw1,w,c
  6131  01A2EC  0D05               	mullw	5
  6132  01A2EE  50F3               	movf	243,w,c
  6133  01A2F0  0F60               	addlw	low _S
  6134  01A2F2  6ED9               	movwf	fsr2l,c
  6135  01A2F4  6ADA               	clrf	fsr2h,c
  6136  01A2F6  50DF               	movf	indf2,w,c
  6137  01A2F8                     L2:
  6138  01A2F8  6E01               	movwf	btemp^0,c
  6139                           
  6140                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6141  01A2FA  52E5               	movf	postdec1,f,c
  6142  01A2FC  0012               	return		;funcret
  6143  01A2FE                     __end_of_get_switch:
  6144                           	opt callstack 0
  6145                           
  6146 ;; *************** function _eaDogM_WriteCommand *****************
  6147 ;; Defined at:
  6148 ;;		line 175 in file "eadog.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;  cmd             1  [STACK] const unsigned char 
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;		None
  6153 ;; Return value:  Size  Location     Type
  6154 ;;                  1  [STACK] void 
  6155 ;; Registers used:
  6156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6157 ;; Tracked objects:
  6158 ;;		On entry : 3F/3D
  6159 ;;		On exit  : 3F/0
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6166 ;;Total ram usage:        0 bytes
  6167 ;; Hardware stack levels used:    1
  6168 ;; Hardware stack levels required when called:   25
  6169 ;; This function calls:
  6170 ;;		_send_lcd_cmd_dma
  6171 ;; This function is called by:
  6172 ;;		_main
  6173 ;; This function uses a reentrant model
  6174 ;;
  6175                           
  6176                           	psect	text18
  6177  01A83E                     __ptext18:
  6178                           	opt callstack 0
  6179  01A83E                     _eaDogM_WriteCommand:
  6180                           	opt callstack 5
  6181                           
  6182                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  6183                           ;stkvar	_cmd @ sp[(0)+-1]
  6184                           
  6185                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6186                           ;incstack = 0
  6187  01A83E  0EFF               	movlw	-1
  6188  01A840  50E3               	movf	plusw1,w,c
  6189  01A842  6EE6               	movwf	postinc1,c
  6190  01A844  EC43  F0CD         	call	_send_lcd_cmd_dma	;wreg free
  6191                           
  6192                           ; BSR set to: 0
  6193                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  6194  01A848  52E5               	movf	postdec1,f,c
  6195  01A84A  0012               	return		;funcret
  6196  01A84C                     __end_of_eaDogM_WriteCommand:
  6197                           	opt callstack 0
  6198                           
  6199 ;; *************** function _convert_adc_data *****************
  6200 ;; Defined at:
  6201 ;;		line 40 in file "mbmc.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;		None
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;  i               1  [STACK] unsigned char 
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  1  [STACK] void 
  6208 ;; Registers used:
  6209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/1
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6219 ;;Total ram usage:        0 bytes
  6220 ;; Hardware stack levels used:    1
  6221 ;; Hardware stack levels required when called:   18
  6222 ;; This function calls:
  6223 ;;		_conv_raw_result
  6224 ;;		_lp_filter
  6225 ;; This function is called by:
  6226 ;;		_main
  6227 ;; This function uses a reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text19
  6231  018E04                     __ptext19:
  6232                           	opt callstack 0
  6233  018E04                     _convert_adc_data:
  6234                           	opt callstack 0
  6235                           
  6236                           ; BSR set to: 0
  6237                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6238  018E04  52E6               	movf	postinc1,f,c
  6239                           
  6240                           ;mbmc.c: 42:  uint8_t i = 0;
  6241                           ;stkvar	_i @ sp[(-1)+0]
  6242                           
  6243                           ;incstack = 0
  6244  018E06  0EFF               	movlw	-1
  6245  018E08  6AE3               	clrf	plusw1,c
  6246  018E0A                     l10155:
  6247                           
  6248                           ;mbmc.c: 45:   if (V.calib) {
  6249  018E0A  0102               	movlb	2	; () banked
  6250  018E0C  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  6251  018E0E  B4D8               	btfsc	status,2,c
  6252  018E10  D01B               	goto	l10159
  6253                           
  6254                           ; BSR set to: 2
  6255                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  6256  018E12  0E01               	movlw	1
  6257  018E14  6EE6               	movwf	postinc1,c
  6258                           
  6259                           ;stkvar	_i @ sp[(-2)+0]
  6260  018E16  0EFE               	movlw	-2
  6261  018E18  50E3               	movf	plusw1,w,c
  6262  018E1A  6EE6               	movwf	postinc1,c
  6263  018E1C  0E01               	movlw	1
  6264  018E1E  6EE6               	movwf	postinc1,c
  6265                           
  6266                           ;stkvar	_i @ sp[(-4)+0]
  6267  018E20  0EFC               	movlw	-4
  6268  018E22  50E3               	movf	plusw1,w,c
  6269  018E24  6EE6               	movwf	postinc1,c
  6270  018E26  ECC2  F0A3         	call	_conv_raw_result	;wreg free
  6271  018E2A  0060  F007  FFE6   	movff	btemp,postinc1
  6272  018E30  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6273  018E36  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6274  018E3C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6275  018E42  EC8A  F0B9         	call	_lp_filter	;wreg free
  6276  018E46  D01A               	goto	L3
  6277  018E48                     l10159:
  6278                           
  6279                           ; BSR set to: 2
  6280                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  6281  018E48  0E00               	movlw	0
  6282  018E4A  6EE6               	movwf	postinc1,c
  6283                           
  6284                           ;stkvar	_i @ sp[(-2)+0]
  6285  018E4C  0EFE               	movlw	-2
  6286  018E4E  50E3               	movf	plusw1,w,c
  6287  018E50  6EE6               	movwf	postinc1,c
  6288  018E52  0E00               	movlw	0
  6289  018E54  6EE6               	movwf	postinc1,c
  6290                           
  6291                           ;stkvar	_i @ sp[(-4)+0]
  6292  018E56  0EFC               	movlw	-4
  6293  018E58  50E3               	movf	plusw1,w,c
  6294  018E5A  6EE6               	movwf	postinc1,c
  6295  018E5C  ECC2  F0A3         	call	_conv_raw_result	;wreg free
  6296  018E60  0060  F007  FFE6   	movff	btemp,postinc1
  6297  018E66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6298  018E6C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6299  018E72  0060  F013  FFE6   	movff	btemp+3,postinc1
  6300  018E78  EC8A  F0B9         	call	_lp_filter	;wreg free
  6301  018E7C                     L3:
  6302                           
  6303                           ;stkvar	_i @ sp[(-1)+0]
  6304  018E7C  0EFF               	movlw	-1
  6305  018E7E  50E3               	movf	plusw1,w,c
  6306  018E80  0D04               	mullw	4
  6307  018E82  0E00               	movlw	low _C
  6308  018E84  24F3               	addwf	243,w,c
  6309  018E86  6ED9               	movwf	fsr2l,c
  6310  018E88  0E01               	movlw	high _C
  6311  018E8A  20F4               	addwfc	prodh,w,c
  6312  018E8C  6EDA               	movwf	fsr2h,c
  6313  018E8E  0060  F007  FFDE   	movff	btemp,postinc2
  6314  018E94  0060  F00B  FFDE   	movff	btemp+1,postinc2
  6315  018E9A  0060  F00F  FFDE   	movff	btemp+2,postinc2
  6316  018EA0  0060  F013  FFDE   	movff	btemp+3,postinc2
  6317                           
  6318                           ;mbmc.c: 50:  } while (++i < 16);
  6319                           ;stkvar	_i @ sp[(-1)+0]
  6320  018EA6  0EFF               	movlw	-1
  6321  018EA8  2AE3               	incf	plusw1,f,c
  6322  018EAA  0EFF               	movlw	-1
  6323  018EAC  006F FF8C  F001    	movff	plusw1,btemp
  6324  018EB2  0E0F               	movlw	15
  6325  018EB4  6401               	cpfsgt	btemp^0,c
  6326  018EB6  D7A9               	goto	l10155
  6327                           
  6328                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  6329  018EB8  52E5               	movf	postdec1,f,c
  6330  018EBA  0012               	return		;funcret
  6331  018EBC                     __end_of_convert_adc_data:
  6332                           	opt callstack 0
  6333                           
  6334 ;; *************** function _conv_raw_result *****************
  6335 ;; Defined at:
  6336 ;;		line 80 in file "daq.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  chan            1  [STACK] const enum E16136
  6339 ;;  to_what         1  [STACK] const enum E16198
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  4  [STACK] float 
  6344 ;; Registers used:
  6345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/1
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6355 ;;Total ram usage:        0 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:   17
  6358 ;; This function calls:
  6359 ;;		___fldiv
  6360 ;;		___flmul
  6361 ;;		___flsub
  6362 ;;		___xxtofl
  6363 ;;		_get_raw_result
  6364 ;;		_nanf
  6365 ;; This function is called by:
  6366 ;;		_convert_adc_data
  6367 ;;		_init_bsoc
  6368 ;; This function uses a reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text20
  6372  014784                     __ptext20:
  6373                           	opt callstack 0
  6374  014784                     _conv_raw_result:
  6375                           	opt callstack 12
  6376                           
  6377                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  6378                           
  6379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6380                           ;incstack = 0
  6381  014784  D242               	goto	l9791
  6382  014786                     l9737:
  6383                           
  6384                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  6385                           ;stkvar	_chan @ sp[(0)+-1]
  6386  014786  0EFF               	movlw	-1
  6387  014788  006F FF8C  F00C    	movff	plusw1,btemp+11
  6388  01478E  0E77               	movlw	119
  6389  014790  6E09               	movwf	(btemp+8)^0,c
  6390  014792  0E3C               	movlw	60
  6391  014794  6E0A               	movwf	(btemp+9)^0,c
  6392  014796  2A0C               	incf	(btemp+11)^0,f,c
  6393  014798  D003               	goto	u8994
  6394  01479A                     u8995:
  6395  01479A  340A               	rlcf	(btemp+9)^0,w,c
  6396  01479C  320A               	rrcf	(btemp+9)^0,f,c
  6397  01479E  3209               	rrcf	(btemp+8)^0,f,c
  6398  0147A0                     u8994:
  6399  0147A0  2E0C               	decfsz	(btemp+11)^0,f,c
  6400  0147A2  D7FB               	goto	u8995
  6401  0147A4  B009               	btfsc	(btemp+8)^0,0,c
  6402  0147A6  D007               	goto	l9743
  6403                           
  6404                           ;daq.c: 86:    return nanf("");
  6405  0147A8  0E33               	movlw	low (STR_46+78)
  6406  0147AA  6EE6               	movwf	postinc1,c
  6407  0147AC  0EFE               	movlw	high (STR_46+78)
  6408  0147AE  6EE6               	movwf	postinc1,c
  6409  0147B0  EC2A  F0CC         	call	_nanf	;wreg free
  6410  0147B4  D23A               	goto	l1737
  6411  0147B6                     l9743:
  6412                           
  6413                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  6414                           ;stkvar	_chan @ sp[(0)+-1]
  6415  0147B6  0EFF               	movlw	-1
  6416  0147B8  006F FF8C  F00C    	movff	plusw1,btemp+11
  6417  0147BE  0E03               	movlw	3
  6418  0147C0  6E09               	movwf	(btemp+8)^0,c
  6419  0147C2  0E00               	movlw	0
  6420  0147C4  6E0A               	movwf	(btemp+9)^0,c
  6421  0147C6  2A0C               	incf	(btemp+11)^0,f,c
  6422  0147C8  D003               	goto	u9014
  6423  0147CA                     u9015:
  6424  0147CA  340A               	rlcf	(btemp+9)^0,w,c
  6425  0147CC  320A               	rrcf	(btemp+9)^0,f,c
  6426  0147CE  3209               	rrcf	(btemp+8)^0,f,c
  6427  0147D0                     u9014:
  6428  0147D0  2E0C               	decfsz	(btemp+11)^0,f,c
  6429  0147D2  D7FB               	goto	u9015
  6430  0147D4  A009               	btfss	(btemp+8)^0,0,c
  6431  0147D6  D0EB               	goto	l9757
  6432                           
  6433                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  6434                           ;stkvar	_chan @ sp[(0)+-1]
  6435  0147D8  0EFF               	movlw	-1
  6436  0147DA  006F FF8C  F00C    	movff	plusw1,btemp+11
  6437  0147E0  0E01               	movlw	1
  6438  0147E2  6E09               	movwf	(btemp+8)^0,c
  6439  0147E4  0E00               	movlw	0
  6440  0147E6  6E0A               	movwf	(btemp+9)^0,c
  6441  0147E8  2A0C               	incf	(btemp+11)^0,f,c
  6442  0147EA  D003               	goto	u9034
  6443  0147EC                     u9035:
  6444  0147EC  340A               	rlcf	(btemp+9)^0,w,c
  6445  0147EE  320A               	rrcf	(btemp+9)^0,f,c
  6446  0147F0  3209               	rrcf	(btemp+8)^0,f,c
  6447  0147F2                     u9034:
  6448  0147F2  2E0C               	decfsz	(btemp+11)^0,f,c
  6449  0147F4  D7FB               	goto	u9035
  6450  0147F6  A009               	btfss	(btemp+8)^0,0,c
  6451  0147F8  D06D               	goto	l9753
  6452                           
  6453                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  6454  0147FA  0E7B               	movlw	123
  6455  0147FC  6EE6               	movwf	postinc1,c
  6456  0147FE  0E14               	movlw	20
  6457  014800  6EE6               	movwf	postinc1,c
  6458  014802  0EAE               	movlw	174
  6459  014804  6EE6               	movwf	postinc1,c
  6460  014806  0E3D               	movlw	61
  6461  014808  6EE6               	movwf	postinc1,c
  6462  01480A  0060  F3AC  F009   	movff	_R+32,btemp+8	;volatile
  6463  014810  0060  F3B0  F00A   	movff	_R+33,btemp+9	;volatile
  6464  014816  0E00               	movlw	0
  6465  014818  BE0A               	btfsc	(btemp+9)^0,7,c
  6466  01481A  0EFF               	movlw	255
  6467  01481C  6E0B               	movwf	(btemp+10)^0,c
  6468  01481E  6E0C               	movwf	(btemp+11)^0,c
  6469  014820  0060  F027  FFE6   	movff	btemp+8,postinc1
  6470  014826  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6471  01482C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6472  014832  0060  F033  FFE6   	movff	btemp+11,postinc1
  6473  014838  0E01               	movlw	1
  6474  01483A  6EE6               	movwf	postinc1,c
  6475  01483C  EC88  F0B7         	call	___xxtofl	;wreg free
  6476  014840  0060  F007  FFE6   	movff	btemp,postinc1
  6477  014846  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6478  01484C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6479  014852  0060  F013  FFE6   	movff	btemp+3,postinc1
  6480                           
  6481                           ;stkvar	_chan @ sp[(-8)+-1]
  6482  014858  0EF7               	movlw	-9
  6483  01485A  50E3               	movf	plusw1,w,c
  6484  01485C  6EE6               	movwf	postinc1,c
  6485  01485E  EC56  F0D3         	call	_get_raw_result	;wreg free
  6486  014862  0060  F004  F00B   	movff	btemp,btemp+10
  6487  014868  0060  F008  F00C   	movff	btemp+1,btemp+11
  6488  01486E  500B               	movf	(btemp+10)^0,w,c
  6489  014870  6E05               	movwf	(btemp+4)^0,c
  6490  014872  500C               	movf	(btemp+11)^0,w,c
  6491  014874  6E06               	movwf	(btemp+5)^0,c
  6492  014876  6A07               	clrf	(btemp+6)^0,c
  6493  014878  6A08               	clrf	(btemp+7)^0,c
  6494  01487A  0060  F017  FFE6   	movff	btemp+4,postinc1
  6495  014880  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6496  014886  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6497  01488C  0060  F023  FFE6   	movff	btemp+7,postinc1
  6498  014892  0E00               	movlw	0
  6499  014894  6EE6               	movwf	postinc1,c
  6500  014896  EC88  F0B7         	call	___xxtofl	;wreg free
  6501  01489A  0060  F007  FFE6   	movff	btemp,postinc1
  6502  0148A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6503  0148A6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6504  0148AC  0060  F013  FFE6   	movff	btemp+3,postinc1
  6505  0148B2  EC51  F0CE         	call	___flsub	;wreg free
  6506  0148B6  0060  F007  FFE6   	movff	btemp,postinc1
  6507  0148BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6508  0148C2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6509  0148C8  0060  F013  FFE6   	movff	btemp+3,postinc1
  6510  0148CE  EC53  F095         	call	___flmul	;wreg free
  6511  0148D2  D1AB               	goto	l1737
  6512  0148D4                     l9753:
  6513                           
  6514                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  6515  0148D4  0E29               	movlw	41
  6516  0148D6  6EE6               	movwf	postinc1,c
  6517  0148D8  0E5C               	movlw	92
  6518  0148DA  6EE6               	movwf	postinc1,c
  6519  0148DC  0E0F               	movlw	15
  6520  0148DE  6EE6               	movwf	postinc1,c
  6521  0148E0  0E3D               	movlw	61
  6522  0148E2  6EE6               	movwf	postinc1,c
  6523  0148E4  0060  F3B4  F009   	movff	_R+34,btemp+8	;volatile
  6524  0148EA  0060  F3B8  F00A   	movff	_R+35,btemp+9	;volatile
  6525  0148F0  0E00               	movlw	0
  6526  0148F2  BE0A               	btfsc	(btemp+9)^0,7,c
  6527  0148F4  0EFF               	movlw	255
  6528  0148F6  6E0B               	movwf	(btemp+10)^0,c
  6529  0148F8  6E0C               	movwf	(btemp+11)^0,c
  6530  0148FA  0060  F027  FFE6   	movff	btemp+8,postinc1
  6531  014900  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6532  014906  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6533  01490C  0060  F033  FFE6   	movff	btemp+11,postinc1
  6534  014912  0E01               	movlw	1
  6535  014914  6EE6               	movwf	postinc1,c
  6536  014916  EC88  F0B7         	call	___xxtofl	;wreg free
  6537  01491A  0060  F007  FFE6   	movff	btemp,postinc1
  6538  014920  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6539  014926  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6540  01492C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6541                           
  6542                           ;stkvar	_chan @ sp[(-8)+-1]
  6543  014932  0EF7               	movlw	-9
  6544  014934  50E3               	movf	plusw1,w,c
  6545  014936  6EE6               	movwf	postinc1,c
  6546  014938  EC56  F0D3         	call	_get_raw_result	;wreg free
  6547  01493C  0060  F004  F00B   	movff	btemp,btemp+10
  6548  014942  0060  F008  F00C   	movff	btemp+1,btemp+11
  6549  014948  500B               	movf	(btemp+10)^0,w,c
  6550  01494A  6E05               	movwf	(btemp+4)^0,c
  6551  01494C  500C               	movf	(btemp+11)^0,w,c
  6552  01494E  6E06               	movwf	(btemp+5)^0,c
  6553  014950  6A07               	clrf	(btemp+6)^0,c
  6554  014952  6A08               	clrf	(btemp+7)^0,c
  6555  014954  0060  F017  FFE6   	movff	btemp+4,postinc1
  6556  01495A  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6557  014960  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6558  014966  0060  F023  FFE6   	movff	btemp+7,postinc1
  6559  01496C  0E00               	movlw	0
  6560  01496E  6EE6               	movwf	postinc1,c
  6561  014970  EC88  F0B7         	call	___xxtofl	;wreg free
  6562  014974  0060  F007  FFE6   	movff	btemp,postinc1
  6563  01497A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6564  014980  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6565  014986  0060  F013  FFE6   	movff	btemp+3,postinc1
  6566  01498C  EC51  F0CE         	call	___flsub	;wreg free
  6567  014990  0060  F007  FFE6   	movff	btemp,postinc1
  6568  014996  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6569  01499C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6570  0149A2  0060  F013  FFE6   	movff	btemp+3,postinc1
  6571  0149A8  EC53  F095         	call	___flmul	;wreg free
  6572  0149AC  D13E               	goto	l1737
  6573  0149AE                     l9757:
  6574                           
  6575                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  6576                           ;stkvar	_chan @ sp[(0)+-1]
  6577  0149AE  0EFF               	movlw	-1
  6578  0149B0  006F FF8C  F00C    	movff	plusw1,btemp+11
  6579  0149B6  0E00               	movlw	0
  6580  0149B8  6E09               	movwf	(btemp+8)^0,c
  6581  0149BA  0E08               	movlw	8
  6582  0149BC  6E0A               	movwf	(btemp+9)^0,c
  6583  0149BE  2A0C               	incf	(btemp+11)^0,f,c
  6584  0149C0  D003               	goto	u9054
  6585  0149C2                     u9055:
  6586  0149C2  340A               	rlcf	(btemp+9)^0,w,c
  6587  0149C4  320A               	rrcf	(btemp+9)^0,f,c
  6588  0149C6  3209               	rrcf	(btemp+8)^0,f,c
  6589  0149C8                     u9054:
  6590  0149C8  2E0C               	decfsz	(btemp+11)^0,f,c
  6591  0149CA  D7FB               	goto	u9055
  6592  0149CC  A009               	btfss	(btemp+8)^0,0,c
  6593  0149CE  D008               	goto	l9765
  6594                           
  6595                           ;daq.c: 96:     return 25.0;
  6596  0149D0  0E00               	movlw	0
  6597  0149D2  6E01               	movwf	btemp^0,c
  6598  0149D4  0E00               	movlw	0
  6599  0149D6  6E02               	movwf	(btemp+1)^0,c
  6600  0149D8  0EC8               	movlw	200
  6601  0149DA  6E03               	movwf	(btemp+2)^0,c
  6602  0149DC  0E41               	movlw	65
  6603  0149DE  D113               	goto	L4
  6604  0149E0                     l9765:
  6605                           
  6606                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  6607  0149E0  0E00               	movlw	0
  6608  0149E2  6EE6               	movwf	postinc1,c
  6609  0149E4  0E00               	movlw	0
  6610  0149E6  6EE6               	movwf	postinc1,c
  6611  0149E8  0E7A               	movlw	122
  6612  0149EA  6EE6               	movwf	postinc1,c
  6613  0149EC  0E44               	movlw	68
  6614  0149EE  6EE6               	movwf	postinc1,c
  6615  0149F0  0E61               	movlw	97
  6616  0149F2  6EE6               	movwf	postinc1,c
  6617  0149F4  0E03               	movlw	3
  6618  0149F6  6EE6               	movwf	postinc1,c
  6619  0149F8  0E84               	movlw	132
  6620  0149FA  6EE6               	movwf	postinc1,c
  6621  0149FC  0E40               	movlw	64
  6622  0149FE  6EE6               	movwf	postinc1,c
  6623                           
  6624                           ;stkvar	_chan @ sp[(-8)+-1]
  6625  014A00  0EF7               	movlw	-9
  6626  014A02  50E3               	movf	plusw1,w,c
  6627  014A04  6EE6               	movwf	postinc1,c
  6628  014A06  EC56  F0D3         	call	_get_raw_result	;wreg free
  6629  014A0A  0060  F004  F00B   	movff	btemp,btemp+10
  6630  014A10  0060  F008  F00C   	movff	btemp+1,btemp+11
  6631  014A16  500B               	movf	(btemp+10)^0,w,c
  6632  014A18  6E05               	movwf	(btemp+4)^0,c
  6633  014A1A  500C               	movf	(btemp+11)^0,w,c
  6634  014A1C  6E06               	movwf	(btemp+5)^0,c
  6635  014A1E  6A07               	clrf	(btemp+6)^0,c
  6636  014A20  6A08               	clrf	(btemp+7)^0,c
  6637  014A22  0060  F017  FFE6   	movff	btemp+4,postinc1
  6638  014A28  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6639  014A2E  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6640  014A34  0060  F023  FFE6   	movff	btemp+7,postinc1
  6641  014A3A  0E00               	movlw	0
  6642  014A3C  6EE6               	movwf	postinc1,c
  6643  014A3E  EC88  F0B7         	call	___xxtofl	;wreg free
  6644  014A42  0060  F007  FFE6   	movff	btemp,postinc1
  6645  014A48  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6646  014A4E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6647  014A54  0060  F013  FFE6   	movff	btemp+3,postinc1
  6648  014A5A  EC53  F095         	call	___flmul	;wreg free
  6649  014A5E  0060  F007  FFE6   	movff	btemp,postinc1
  6650  014A64  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6651  014A6A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6652  014A70  0060  F013  FFE6   	movff	btemp+3,postinc1
  6653  014A76  EC05  F0A1         	call	___fldiv	;wreg free
  6654  014A7A  D0D7               	goto	l1737
  6655  014A7C                     l9769:
  6656                           
  6657                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  6658                           ;stkvar	_chan @ sp[(0)+-1]
  6659  014A7C  0EFF               	movlw	-1
  6660  014A7E  006F FF8C  F00C    	movff	plusw1,btemp+11
  6661  014A84  0E03               	movlw	3
  6662  014A86  6E09               	movwf	(btemp+8)^0,c
  6663  014A88  0E00               	movlw	0
  6664  014A8A  6E0A               	movwf	(btemp+9)^0,c
  6665  014A8C  2A0C               	incf	(btemp+11)^0,f,c
  6666  014A8E  D003               	goto	u9074
  6667  014A90                     u9075:
  6668  014A90  340A               	rlcf	(btemp+9)^0,w,c
  6669  014A92  320A               	rrcf	(btemp+9)^0,f,c
  6670  014A94  3209               	rrcf	(btemp+8)^0,f,c
  6671  014A96                     u9074:
  6672  014A96  2E0C               	decfsz	(btemp+11)^0,f,c
  6673  014A98  D7FB               	goto	u9075
  6674  014A9A  B009               	btfsc	(btemp+8)^0,0,c
  6675  014A9C  D011               	goto	u9100
  6676                           
  6677                           ;stkvar	_chan @ sp[(0)+-1]
  6678  014A9E  0EFF               	movlw	-1
  6679  014AA0  006F FF8C  F00C    	movff	plusw1,btemp+11
  6680  014AA6  0E00               	movlw	0
  6681  014AA8  6E09               	movwf	(btemp+8)^0,c
  6682  014AAA  0E08               	movlw	8
  6683  014AAC  6E0A               	movwf	(btemp+9)^0,c
  6684  014AAE  2A0C               	incf	(btemp+11)^0,f,c
  6685  014AB0  D003               	goto	u9094
  6686  014AB2                     u9095:
  6687  014AB2  340A               	rlcf	(btemp+9)^0,w,c
  6688  014AB4  320A               	rrcf	(btemp+9)^0,f,c
  6689  014AB6  3209               	rrcf	(btemp+8)^0,f,c
  6690  014AB8                     u9094:
  6691  014AB8  2E0C               	decfsz	(btemp+11)^0,f,c
  6692  014ABA  D7FB               	goto	u9095
  6693  014ABC  A009               	btfss	(btemp+8)^0,0,c
  6694  014ABE  D04E               	goto	l9777
  6695  014AC0                     u9100:
  6696                           
  6697                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  6698  014AC0  0E00               	movlw	0
  6699  014AC2  6EE6               	movwf	postinc1,c
  6700  014AC4  0E00               	movlw	0
  6701  014AC6  6EE6               	movwf	postinc1,c
  6702  014AC8  0E7A               	movlw	122
  6703  014ACA  6EE6               	movwf	postinc1,c
  6704  014ACC  0E44               	movlw	68
  6705  014ACE  6EE6               	movwf	postinc1,c
  6706  014AD0  0E00               	movlw	0
  6707  014AD2  6EE6               	movwf	postinc1,c
  6708  014AD4  0E00               	movlw	0
  6709  014AD6  6EE6               	movwf	postinc1,c
  6710  014AD8  0E20               	movlw	32
  6711  014ADA  6EE6               	movwf	postinc1,c
  6712  014ADC  0E3F               	movlw	63
  6713  014ADE  6EE6               	movwf	postinc1,c
  6714                           
  6715                           ;stkvar	_chan @ sp[(-8)+-1]
  6716  014AE0  0EF7               	movlw	-9
  6717  014AE2  50E3               	movf	plusw1,w,c
  6718  014AE4  6EE6               	movwf	postinc1,c
  6719  014AE6  EC56  F0D3         	call	_get_raw_result	;wreg free
  6720  014AEA  0060  F004  F00B   	movff	btemp,btemp+10
  6721  014AF0  0060  F008  F00C   	movff	btemp+1,btemp+11
  6722  014AF6  500B               	movf	(btemp+10)^0,w,c
  6723  014AF8  6E05               	movwf	(btemp+4)^0,c
  6724  014AFA  500C               	movf	(btemp+11)^0,w,c
  6725  014AFC  6E06               	movwf	(btemp+5)^0,c
  6726  014AFE  6A07               	clrf	(btemp+6)^0,c
  6727  014B00  6A08               	clrf	(btemp+7)^0,c
  6728  014B02  0060  F017  FFE6   	movff	btemp+4,postinc1
  6729  014B08  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6730  014B0E  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6731  014B14  0060  F023  FFE6   	movff	btemp+7,postinc1
  6732  014B1A  0E00               	movlw	0
  6733  014B1C  6EE6               	movwf	postinc1,c
  6734  014B1E  EC88  F0B7         	call	___xxtofl	;wreg free
  6735  014B22  0060  F007  FFE6   	movff	btemp,postinc1
  6736  014B28  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6737  014B2E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6738  014B34  0060  F013  FFE6   	movff	btemp+3,postinc1
  6739  014B3A  EC53  F095         	call	___flmul	;wreg free
  6740  014B3E  0060  F007  FFE6   	movff	btemp,postinc1
  6741  014B44  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6742  014B4A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6743  014B50  0060  F013  FFE6   	movff	btemp+3,postinc1
  6744  014B56  EC05  F0A1         	call	___fldiv	;wreg free
  6745  014B5A  D067               	goto	l1737
  6746  014B5C                     l9777:
  6747                           
  6748                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  6749  014B5C  0E00               	movlw	0
  6750  014B5E  6EE6               	movwf	postinc1,c
  6751  014B60  0E00               	movlw	0
  6752  014B62  6EE6               	movwf	postinc1,c
  6753  014B64  0E7A               	movlw	122
  6754  014B66  6EE6               	movwf	postinc1,c
  6755  014B68  0E44               	movlw	68
  6756  014B6A  6EE6               	movwf	postinc1,c
  6757  014B6C  0E61               	movlw	97
  6758  014B6E  6EE6               	movwf	postinc1,c
  6759  014B70  0E03               	movlw	3
  6760  014B72  6EE6               	movwf	postinc1,c
  6761  014B74  0E84               	movlw	132
  6762  014B76  6EE6               	movwf	postinc1,c
  6763  014B78  0E40               	movlw	64
  6764  014B7A  6EE6               	movwf	postinc1,c
  6765                           
  6766                           ;stkvar	_chan @ sp[(-8)+-1]
  6767  014B7C  0EF7               	movlw	-9
  6768  014B7E  50E3               	movf	plusw1,w,c
  6769  014B80  6EE6               	movwf	postinc1,c
  6770  014B82  EC56  F0D3         	call	_get_raw_result	;wreg free
  6771  014B86  0060  F004  F00B   	movff	btemp,btemp+10
  6772  014B8C  0060  F008  F00C   	movff	btemp+1,btemp+11
  6773  014B92  500B               	movf	(btemp+10)^0,w,c
  6774  014B94  6E05               	movwf	(btemp+4)^0,c
  6775  014B96  500C               	movf	(btemp+11)^0,w,c
  6776  014B98  6E06               	movwf	(btemp+5)^0,c
  6777  014B9A  6A07               	clrf	(btemp+6)^0,c
  6778  014B9C  6A08               	clrf	(btemp+7)^0,c
  6779  014B9E  0060  F017  FFE6   	movff	btemp+4,postinc1
  6780  014BA4  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6781  014BAA  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6782  014BB0  0060  F023  FFE6   	movff	btemp+7,postinc1
  6783  014BB6  0E00               	movlw	0
  6784  014BB8  6EE6               	movwf	postinc1,c
  6785  014BBA  EC88  F0B7         	call	___xxtofl	;wreg free
  6786  014BBE  0060  F007  FFE6   	movff	btemp,postinc1
  6787  014BC4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6788  014BCA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6789  014BD0  0060  F013  FFE6   	movff	btemp+3,postinc1
  6790  014BD6  EC53  F095         	call	___flmul	;wreg free
  6791  014BDA  0060  F007  FFE6   	movff	btemp,postinc1
  6792  014BE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6793  014BE6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6794  014BEC  0060  F013  FFE6   	movff	btemp+3,postinc1
  6795  014BF2  EC05  F0A1         	call	___fldiv	;wreg free
  6796  014BF6  D019               	goto	l1737
  6797  014BF8                     l9783:
  6798                           
  6799                           ;daq.c: 109:   return 0.0;
  6800  014BF8  0E00               	movlw	0
  6801  014BFA  6E01               	movwf	btemp^0,c
  6802  014BFC  0E00               	movlw	0
  6803  014BFE  6E02               	movwf	(btemp+1)^0,c
  6804  014C00  0E00               	movlw	0
  6805  014C02  6E03               	movwf	(btemp+2)^0,c
  6806  014C04  0E00               	movlw	0
  6807  014C06                     L4:
  6808  014C06  6E04               	movwf	(btemp+3)^0,c
  6809  014C08  D010               	goto	l1737
  6810  014C0A                     l9791:
  6811                           
  6812                           ;stkvar	_to_what @ sp[(0)+-2]
  6813  014C0A  0EFE               	movlw	-2
  6814  014C0C  50E3               	movf	plusw1,w,c
  6815  014C0E  6E0B               	movwf	(btemp+10)^0,c
  6816  014C10  6A0C               	clrf	(btemp+11)^0,c
  6817                           
  6818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6819                           ; Switch size 1, requested type "simple"
  6820                           ; Number of cases is 1, Range of values is 0 to 0
  6821                           ; switch strategies available:
  6822                           ; Name         Instructions Cycles
  6823                           ; simple_byte            4     3 (average)
  6824                           ;	Chosen strategy is simple_byte
  6825  014C12  500C               	movf	(btemp+11)^0,w,c
  6826  014C14  0A00               	xorlw	0	; case 0
  6827  014C16  A4D8               	btfss	status,2,c
  6828  014C18  D7EF               	goto	l9783
  6829                           
  6830                           ; Switch size 1, requested type "simple"
  6831                           ; Number of cases is 2, Range of values is 0 to 1
  6832                           ; switch strategies available:
  6833                           ; Name         Instructions Cycles
  6834                           ; simple_byte            7     4 (average)
  6835                           ;	Chosen strategy is simple_byte
  6836  014C1A  500B               	movf	(btemp+10)^0,w,c
  6837  014C1C  0A00               	xorlw	0	; case 0
  6838  014C1E  B4D8               	btfsc	status,2,c
  6839  014C20  D5B2               	goto	l9737
  6840  014C22  0A01               	xorlw	1	; case 1
  6841  014C24  B4D8               	btfsc	status,2,c
  6842  014C26  D72A               	goto	l9769
  6843  014C28  D7E7               	goto	l9783
  6844  014C2A                     l1737:
  6845                           
  6846                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  6847  014C2A  52E5               	movf	postdec1,f,c
  6848  014C2C  52E5               	movf	postdec1,f,c
  6849  014C2E  0012               	return		;funcret
  6850  014C30                     __end_of_conv_raw_result:
  6851                           	opt callstack 0
  6852                           
  6853 ;; *************** function _nanf *****************
  6854 ;; Defined at:
  6855 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;  s               2  [STACK] PTR const unsigned char 
  6858 ;;		 -> STR_83(1), STR_45(1), 
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;  u               4  [STACK] struct .
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  4  [STACK] float 
  6863 ;; Registers used:
  6864 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/1
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6874 ;;Total ram usage:        0 bytes
  6875 ;; Hardware stack levels used:    1
  6876 ;; Hardware stack levels required when called:   15
  6877 ;; This function calls:
  6878 ;;		Nothing
  6879 ;; This function is called by:
  6880 ;;		_conv_raw_result
  6881 ;; This function uses a reentrant model
  6882 ;;
  6883                           
  6884                           	psect	text21
  6885  019854                     __ptext21:
  6886                           	opt callstack 0
  6887  019854                     _nanf:
  6888                           	opt callstack 0
  6889                           
  6890                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6891  019854  52E6               	movf	postinc1,f,c
  6892  019856  52E6               	movf	postinc1,f,c
  6893  019858  52E6               	movf	postinc1,f,c
  6894  01985A  52E6               	movf	postinc1,f,c
  6895                           
  6896                           ;incstack = 0
  6897  01985C  0EFF               	movlw	255
  6898  01985E  6E09               	movwf	(btemp+8)^0,c
  6899  019860  0EFF               	movlw	255
  6900  019862  6E0A               	movwf	(btemp+9)^0,c
  6901  019864  0EFF               	movlw	255
  6902  019866  6E0B               	movwf	(btemp+10)^0,c
  6903  019868  0E7F               	movlw	127
  6904  01986A  6E0C               	movwf	(btemp+11)^0,c
  6905                           
  6906                           ;stkvar	_u @ sp[(-4)+0]
  6907  01986C  0EFC               	movlw	-4
  6908  01986E  0060  F027  FFE3   	movff	btemp+8,plusw1
  6909  019874  0EFD               	movlw	-3
  6910  019876  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6911  01987C  0EFE               	movlw	-2
  6912  01987E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6913  019884  0EFF               	movlw	-1
  6914  019886  0060  F033  FFE3   	movff	btemp+11,plusw1
  6915                           
  6916                           ;stkvar	_u @ sp[(-4)+0]
  6917  01988C  0EFC               	movlw	-4
  6918  01988E  006F FF8C  F001    	movff	plusw1,btemp
  6919  019894  0EFD               	movlw	-3
  6920  019896  006F FF8C  F002    	movff	plusw1,btemp+1
  6921  01989C  0EFE               	movlw	-2
  6922  01989E  006F FF8C  F003    	movff	plusw1,btemp+2
  6923  0198A4  0EFF               	movlw	-1
  6924  0198A6  006F FF8C  F004    	movff	plusw1,btemp+3
  6925                           
  6926                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  6927  0198AC  0EFA               	movlw	250
  6928  0198AE  26E1               	addwf	fsr1l,f,c
  6929  0198B0  0EFF               	movlw	255
  6930  0198B2  22E2               	addwfc	fsr1h,f,c
  6931  0198B4  0012               	return		;funcret
  6932  0198B6                     __end_of_nanf:
  6933                           	opt callstack 0
  6934                           
  6935 ;; *************** function _get_raw_result *****************
  6936 ;; Defined at:
  6937 ;;		line 72 in file "daq.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  index           1  [STACK] const enum E16136
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;		None
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  2  [STACK] unsigned short 
  6944 ;; Registers used:
  6945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/2
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6955 ;;Total ram usage:        0 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:   15
  6958 ;; This function calls:
  6959 ;;		Nothing
  6960 ;; This function is called by:
  6961 ;;		_main
  6962 ;;		_conv_raw_result
  6963 ;; This function uses a reentrant model
  6964 ;;
  6965                           
  6966                           	psect	text22
  6967  01A6AC                     __ptext22:
  6968                           	opt callstack 0
  6969  01A6AC                     _get_raw_result:
  6970                           	opt callstack 13
  6971                           
  6972                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  6973                           ;stkvar	_index @ sp[(0)+-1]
  6974                           
  6975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6976                           ;incstack = 0
  6977  01A6AC  0EFF               	movlw	-1
  6978  01A6AE  50E3               	movf	plusw1,w,c
  6979  01A6B0  0D02               	mullw	2
  6980  01A6B2  50F3               	movf	243,w,c
  6981  01A6B4  0FCB               	addlw	low _R
  6982  01A6B6  6ED9               	movwf	fsr2l,c
  6983  01A6B8  6ADA               	clrf	fsr2h,c
  6984  01A6BA  006F FF78  F001    	movff	postinc2,btemp
  6985  01A6C0  006F FF74  F002    	movff	postdec2,btemp+1
  6986                           
  6987                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  6988  01A6C6  52E5               	movf	postdec1,f,c
  6989  01A6C8  0012               	return		;funcret
  6990  01A6CA                     __end_of_get_raw_result:
  6991                           	opt callstack 0
  6992                           
  6993 ;; *************** function ___xxtofl *****************
  6994 ;; Defined at:
  6995 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  sign            1  [STACK] unsigned char 
  6998 ;;  val             4  [STACK] long 
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;  arg             4  [STACK] unsigned long 
  7001 ;;  exp             1  [STACK] unsigned char 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  4  [STACK] unsigned char 
  7004 ;; Registers used:
  7005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/1
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7015 ;;Total ram usage:        0 bytes
  7016 ;; Hardware stack levels used:    1
  7017 ;; Hardware stack levels required when called:   15
  7018 ;; This function calls:
  7019 ;;		Nothing
  7020 ;; This function is called by:
  7021 ;;		_conv_raw_result
  7022 ;;		_calc_bsoc
  7023 ;;		_init_bsoc
  7024 ;; This function uses a reentrant model
  7025 ;;
  7026                           
  7027                           	psect	text23
  7028  016F10                     __ptext23:
  7029                           	opt callstack 0
  7030  016F10                     ___xxtofl:
  7031                           	opt callstack 0
  7032                           
  7033                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7034  016F10  0E05               	movlw	5
  7035  016F12  26E1               	addwf	fsr1l,f,c
  7036  016F14  0E00               	movlw	0
  7037  016F16  22E2               	addwfc	fsr1h,f,c
  7038                           
  7039                           ;stkvar	_sign @ sp[(-5)+-1]
  7040                           
  7041                           ;incstack = 0
  7042 ;; hardware stack exceeded
  7043  016F18  0EFA               	movlw	-6
  7044  016F1A  50E3               	movf	plusw1,w,c
  7045  016F1C  B4D8               	btfsc	status,2,c
  7046  016F1E  D01D               	goto	l9183
  7047                           
  7048                           ;stkvar	_val @ sp[(-5)+-5]
  7049  016F20  0EF9               	movlw	-7
  7050  016F22  AEE3               	btfss	plusw1,7,c
  7051  016F24  D01A               	goto	l9183
  7052                           
  7053                           ;stkvar	_val @ sp[(-5)+-5]
  7054  016F26  0EF6               	movlw	-10
  7055  016F28  006F FF8C  F009    	movff	plusw1,btemp+8
  7056  016F2E  0EF7               	movlw	-9
  7057  016F30  006F FF8C  F00A    	movff	plusw1,btemp+9
  7058  016F36  0EF8               	movlw	-8
  7059  016F38  006F FF8C  F00B    	movff	plusw1,btemp+10
  7060  016F3E  0EF9               	movlw	-7
  7061  016F40  006F FF8C  F00C    	movff	plusw1,btemp+11
  7062  016F46  1E09               	comf	(btemp+8)^0,f,c
  7063  016F48  1E0A               	comf	(btemp+9)^0,f,c
  7064  016F4A  1E0B               	comf	(btemp+10)^0,f,c
  7065  016F4C  1E0C               	comf	(btemp+11)^0,f,c
  7066  016F4E  2A09               	incf	(btemp+8)^0,f,c
  7067  016F50  0E00               	movlw	0
  7068  016F52  220A               	addwfc	(btemp+9)^0,f,c
  7069  016F54  220B               	addwfc	(btemp+10)^0,f,c
  7070  016F56  220C               	addwfc	(btemp+11)^0,f,c
  7071  016F58  D010               	goto	L5
  7072  016F5A                     l9183:
  7073                           
  7074                           ;stkvar	_val @ sp[(-5)+-5]
  7075  016F5A  0EF6               	movlw	-10
  7076  016F5C  006F FF8C  F009    	movff	plusw1,btemp+8
  7077  016F62  0EF7               	movlw	-9
  7078  016F64  006F FF8C  F00A    	movff	plusw1,btemp+9
  7079  016F6A  0EF8               	movlw	-8
  7080  016F6C  006F FF8C  F00B    	movff	plusw1,btemp+10
  7081  016F72  0EF9               	movlw	-7
  7082  016F74  006F FF8C  F00C    	movff	plusw1,btemp+11
  7083  016F7A                     L5:
  7084                           
  7085                           ;stkvar	_arg @ sp[(-5)+0]
  7086  016F7A  0EFB               	movlw	-5
  7087  016F7C  0060  F027  FFE3   	movff	btemp+8,plusw1
  7088  016F82  0EFC               	movlw	-4
  7089  016F84  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7090  016F8A  0EFD               	movlw	-3
  7091  016F8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7092  016F92  0EFE               	movlw	-2
  7093  016F94  0060  F033  FFE3   	movff	btemp+11,plusw1
  7094                           
  7095                           ;stkvar	_val @ sp[(-5)+-5]
  7096  016F9A  0EF6               	movlw	-10
  7097  016F9C  50E3               	movf	plusw1,w,c
  7098  016F9E  E113               	bnz	l9191
  7099  016FA0  0EF7               	movlw	-9
  7100  016FA2  50E3               	movf	plusw1,w,c
  7101  016FA4  E110               	bnz	l9191
  7102  016FA6  0EF8               	movlw	-8
  7103  016FA8  50E3               	movf	plusw1,w,c
  7104  016FAA  E10D               	bnz	l9191
  7105  016FAC  0EF9               	movlw	-7
  7106  016FAE  50E3               	movf	plusw1,w,c
  7107  016FB0  A4D8               	btfss	status,2,c
  7108  016FB2  D009               	goto	l9191
  7109  016FB4  0E00               	movlw	0
  7110  016FB6  6E01               	movwf	btemp^0,c
  7111  016FB8  0E00               	movlw	0
  7112  016FBA  6E02               	movwf	(btemp+1)^0,c
  7113  016FBC  0E00               	movlw	0
  7114  016FBE  6E03               	movwf	(btemp+2)^0,c
  7115  016FC0  0E00               	movlw	0
  7116  016FC2  6E04               	movwf	(btemp+3)^0,c
  7117  016FC4  D0A2               	goto	l2928
  7118  016FC6                     l9191:
  7119  016FC6  0E96               	movlw	150
  7120  016FC8  6E0C               	movwf	(btemp+11)^0,c
  7121                           
  7122                           ;stkvar	_exp @ sp[(-5)+4]
  7123  016FCA  0EFF               	movlw	-1
  7124  016FCC  0060  F033  FFE3   	movff	btemp+11,plusw1
  7125  016FD2  D00B               	goto	l9195
  7126  016FD4                     l9193:
  7127                           
  7128                           ;stkvar	_exp @ sp[(-5)+4]
  7129  016FD4  0EFF               	movlw	-1
  7130  016FD6  2AE3               	incf	plusw1,f,c
  7131                           
  7132                           ;stkvar	_arg @ sp[(-5)+0]
  7133  016FD8  90D8               	bcf	status,0,c
  7134  016FDA  0EFE               	movlw	-2
  7135  016FDC  32E3               	rrcf	plusw1,f,c
  7136  016FDE  0EFD               	movlw	-3
  7137  016FE0  32E3               	rrcf	plusw1,f,c
  7138  016FE2  0EFC               	movlw	-4
  7139  016FE4  32E3               	rrcf	plusw1,f,c
  7140  016FE6  0EFB               	movlw	-5
  7141  016FE8  32E3               	rrcf	plusw1,f,c
  7142  016FEA                     l9195:
  7143                           
  7144                           ;stkvar	_arg @ sp[(-5)+0]
  7145  016FEA  50E1               	movf	fsr1l,w,c
  7146  016FEC  0FFB               	addlw	-5
  7147  016FEE  6ED9               	movwf	fsr2l,c
  7148  016FF0  50E2               	movf	fsr1h,w,c
  7149  016FF2  6EDA               	movwf	fsr2h,c
  7150  016FF4  0EFF               	movlw	255
  7151  016FF6  22DA               	addwfc	fsr2h,f,c
  7152  016FF8  52DE               	movf	postinc2,f,c
  7153  016FFA  52DE               	movf	postinc2,f,c
  7154  016FFC  52DE               	movf	postinc2,f,c
  7155  016FFE  0EFE               	movlw	254
  7156  017000  14DD               	andwf	postdec2,w,c
  7157  017002  B4D8               	btfsc	status,2,c
  7158  017004  D018               	goto	l9203
  7159  017006  D7E6               	goto	l9193
  7160  017008                     l9197:
  7161                           
  7162                           ;stkvar	_exp @ sp[(-5)+4]
  7163  017008  0EFF               	movlw	-1
  7164  01700A  2AE3               	incf	plusw1,f,c
  7165                           
  7166                           ;stkvar	_arg @ sp[(-5)+0]
  7167  01700C  50E1               	movf	fsr1l,w,c
  7168  01700E  0FFB               	addlw	-5
  7169  017010  6ED9               	movwf	fsr2l,c
  7170  017012  50E2               	movf	fsr1h,w,c
  7171  017014  6EDA               	movwf	fsr2h,c
  7172  017016  0EFF               	movlw	255
  7173  017018  22DA               	addwfc	fsr2h,f,c
  7174  01701A  2ADE               	incf	postinc2,f,c
  7175  01701C  0E00               	movlw	0
  7176  01701E  22DE               	addwfc	postinc2,f,c
  7177  017020  22DE               	addwfc	postinc2,f,c
  7178  017022  22DE               	addwfc	postinc2,f,c
  7179                           
  7180                           ;stkvar	_arg @ sp[(-5)+0]
  7181  017024  90D8               	bcf	status,0,c
  7182  017026  0EFE               	movlw	-2
  7183  017028  32E3               	rrcf	plusw1,f,c
  7184  01702A  0EFD               	movlw	-3
  7185  01702C  32E3               	rrcf	plusw1,f,c
  7186  01702E  0EFC               	movlw	-4
  7187  017030  32E3               	rrcf	plusw1,f,c
  7188  017032  0EFB               	movlw	-5
  7189  017034  32E3               	rrcf	plusw1,f,c
  7190  017036                     l9203:
  7191                           
  7192                           ;stkvar	_arg @ sp[(-5)+0]
  7193  017036  50E1               	movf	fsr1l,w,c
  7194  017038  0FFB               	addlw	-5
  7195  01703A  6ED9               	movwf	fsr2l,c
  7196  01703C  50E2               	movf	fsr1h,w,c
  7197  01703E  6EDA               	movwf	fsr2h,c
  7198  017040  0EFF               	movlw	255
  7199  017042  22DA               	addwfc	fsr2h,f,c
  7200  017044  52DE               	movf	postinc2,f,c
  7201  017046  52DE               	movf	postinc2,f,c
  7202  017048  52DE               	movf	postinc2,f,c
  7203  01704A  0EFF               	movlw	255
  7204  01704C  14DD               	andwf	postdec2,w,c
  7205  01704E  B4D8               	btfsc	status,2,c
  7206  017050  D00C               	goto	l9207
  7207  017052  D7DA               	goto	l9197
  7208  017054                     l9205:
  7209                           
  7210                           ;stkvar	_exp @ sp[(-5)+4]
  7211  017054  0EFF               	movlw	-1
  7212  017056  06E3               	decf	plusw1,f,c
  7213                           
  7214                           ;stkvar	_arg @ sp[(-5)+0]
  7215  017058  90D8               	bcf	status,0,c
  7216  01705A  0EFB               	movlw	-5
  7217  01705C  36E3               	rlcf	plusw1,f,c
  7218  01705E  0EFC               	movlw	-4
  7219  017060  36E3               	rlcf	plusw1,f,c
  7220  017062  0EFD               	movlw	-3
  7221  017064  36E3               	rlcf	plusw1,f,c
  7222  017066  0EFE               	movlw	-2
  7223  017068  36E3               	rlcf	plusw1,f,c
  7224  01706A                     l9207:
  7225                           
  7226                           ;stkvar	_arg @ sp[(-5)+0]
  7227  01706A  0EFD               	movlw	-3
  7228  01706C  BEE3               	btfsc	plusw1,7,c
  7229  01706E  D007               	goto	u8790
  7230                           
  7231                           ;stkvar	_exp @ sp[(-5)+4]
  7232  017070  0EFF               	movlw	-1
  7233  017072  006F FF8C  F001    	movff	plusw1,btemp
  7234  017078  0E02               	movlw	2
  7235  01707A  6001               	cpfslt	btemp^0,c
  7236  01707C  D7EB               	goto	l9205
  7237  01707E                     u8790:
  7238                           
  7239                           ;stkvar	_exp @ sp[(-5)+4]
  7240  01707E  0EFF               	movlw	-1
  7241  017080  B0E3               	btfsc	plusw1,0,c
  7242  017082  D002               	goto	l9215
  7243                           
  7244                           ;stkvar	_arg @ sp[(-5)+0]
  7245  017084  0EFD               	movlw	-3
  7246  017086  9EE3               	bcf	plusw1,7,c
  7247  017088                     l9215:
  7248                           
  7249                           ;stkvar	_exp @ sp[(-5)+4]
  7250  017088  50E1               	movf	fsr1l,w,c
  7251  01708A  0FFF               	addlw	-1
  7252  01708C  6ED9               	movwf	fsr2l,c
  7253  01708E  50E2               	movf	fsr1h,w,c
  7254  017090  6EDA               	movwf	fsr2h,c
  7255  017092  0EFF               	movlw	255
  7256  017094  22DA               	addwfc	fsr2h,f,c
  7257  017096  90D8               	bcf	status,0,c
  7258  017098  32DF               	rrcf	indf2,f,c
  7259                           
  7260                           ;stkvar	_exp @ sp[(-5)+4]
  7261  01709A  0EFF               	movlw	-1
  7262  01709C  006F FF8C  F00C    	movff	plusw1,btemp+11
  7263  0170A2  0060  F030  F005   	movff	btemp+11,btemp+4
  7264  0170A8  6A06               	clrf	(btemp+5)^0,c
  7265  0170AA  6A07               	clrf	(btemp+6)^0,c
  7266  0170AC  6A08               	clrf	(btemp+7)^0,c
  7267  0170AE  0060  F014  F008   	movff	btemp+4,btemp+7
  7268  0170B4  6A07               	clrf	(btemp+6)^0,c
  7269  0170B6  6A06               	clrf	(btemp+5)^0,c
  7270  0170B8  6A05               	clrf	(btemp+4)^0,c
  7271                           
  7272                           ;stkvar	_arg @ sp[(-5)+0]
  7273  0170BA  50E1               	movf	fsr1l,w,c
  7274  0170BC  0FFB               	addlw	-5
  7275  0170BE  6ED9               	movwf	fsr2l,c
  7276  0170C0  50E2               	movf	fsr1h,w,c
  7277  0170C2  6EDA               	movwf	fsr2h,c
  7278  0170C4  0EFF               	movlw	255
  7279  0170C6  22DA               	addwfc	fsr2h,f,c
  7280  0170C8  5005               	movf	(btemp+4)^0,w,c
  7281  0170CA  12DE               	iorwf	postinc2,f,c
  7282  0170CC  5006               	movf	(btemp+5)^0,w,c
  7283  0170CE  12DE               	iorwf	postinc2,f,c
  7284  0170D0  5007               	movf	(btemp+6)^0,w,c
  7285  0170D2  12DE               	iorwf	postinc2,f,c
  7286  0170D4  5008               	movf	(btemp+7)^0,w,c
  7287  0170D6  12DE               	iorwf	postinc2,f,c
  7288                           
  7289                           ;stkvar	_sign @ sp[(-5)+-1]
  7290  0170D8  0EFA               	movlw	-6
  7291  0170DA  50E3               	movf	plusw1,w,c
  7292  0170DC  B4D8               	btfsc	status,2,c
  7293  0170DE  D005               	goto	l9225
  7294                           
  7295                           ;stkvar	_val @ sp[(-5)+-5]
  7296  0170E0  0EF9               	movlw	-7
  7297  0170E2  AEE3               	btfss	plusw1,7,c
  7298  0170E4  D002               	goto	l9225
  7299                           
  7300                           ;stkvar	_arg @ sp[(-5)+0]
  7301  0170E6  0EFE               	movlw	-2
  7302  0170E8  8EE3               	bsf	plusw1,7,c
  7303  0170EA                     l9225:
  7304                           
  7305                           ;stkvar	_arg @ sp[(-5)+0]
  7306  0170EA  0EFB               	movlw	-5
  7307  0170EC  006F FF8C  F001    	movff	plusw1,btemp
  7308  0170F2  0EFC               	movlw	-4
  7309  0170F4  006F FF8C  F002    	movff	plusw1,btemp+1
  7310  0170FA  0EFD               	movlw	-3
  7311  0170FC  006F FF8C  F003    	movff	plusw1,btemp+2
  7312  017102  0EFE               	movlw	-2
  7313  017104  006F FF8C  F004    	movff	plusw1,btemp+3
  7314  01710A                     l2928:
  7315                           
  7316                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  7317  01710A  0EF6               	movlw	246
  7318  01710C  26E1               	addwf	fsr1l,f,c
  7319  01710E  0EFF               	movlw	255
  7320  017110  22E2               	addwfc	fsr1h,f,c
  7321  017112  0012               	return		;funcret
  7322  017114                     __end_of___xxtofl:
  7323                           	opt callstack 0
  7324                           
  7325 ;; *************** function _clear_hid_pflags *****************
  7326 ;; Defined at:
  7327 ;;		line 51 in file "hid.c"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;  h               1  [STACK] PTR struct H_data
  7330 ;;		 -> H(7), 
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;		None
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1  [STACK] void 
  7335 ;; Registers used:
  7336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7337 ;; Tracked objects:
  7338 ;;		On entry : 3F/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7346 ;;Total ram usage:        0 bytes
  7347 ;; Hardware stack levels used:    1
  7348 ;; Hardware stack levels required when called:   15
  7349 ;; This function calls:
  7350 ;;		Nothing
  7351 ;; This function is called by:
  7352 ;;		_main
  7353 ;; This function uses a reentrant model
  7354 ;;
  7355                           
  7356                           	psect	text24
  7357  01A554                     __ptext24:
  7358                           	opt callstack 0
  7359  01A554                     _clear_hid_pflags:
  7360                           	opt callstack 15
  7361                           
  7362                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  7363                           ;stkvar	_h @ sp[(0)+-1]
  7364                           
  7365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7366                           ;incstack = 0
  7367  01A554  0EFF               	movlw	-1
  7368  01A556  50E3               	movf	plusw1,w,c
  7369  01A558  6ED9               	movwf	fsr2l,c
  7370  01A55A  6ADA               	clrf	fsr2h,c
  7371  01A55C  0E03               	movlw	3
  7372  01A55E  26D9               	addwf	fsr2l,f,c
  7373  01A560  0E00               	movlw	0
  7374  01A562  6EDF               	movwf	indf2,c
  7375                           
  7376                           ;hid.c: 54:  h->enter_p = SW_OFF;
  7377                           ;stkvar	_h @ sp[(0)+-1]
  7378  01A564  0EFF               	movlw	-1
  7379  01A566  50E3               	movf	plusw1,w,c
  7380  01A568  6ED9               	movwf	fsr2l,c
  7381  01A56A  6ADA               	clrf	fsr2h,c
  7382  01A56C  0E05               	movlw	5
  7383  01A56E  26D9               	addwf	fsr2l,f,c
  7384  01A570  0E00               	movlw	0
  7385  01A572  6EDF               	movwf	indf2,c
  7386                           
  7387                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7388  01A574  52E5               	movf	postdec1,f,c
  7389  01A576  0012               	return		;funcret
  7390  01A578                     __end_of_clear_hid_pflags:
  7391                           	opt callstack 0
  7392                           
  7393 ;; *************** function _clear_adc_scan *****************
  7394 ;; Defined at:
  7395 ;;		line 64 in file "daq.c"
  7396 ;; Parameters:    Size  Location     Type
  7397 ;;		None
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;		None
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  1  [STACK] void 
  7402 ;; Registers used:
  7403 ;;		None
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/1
  7406 ;;		On exit  : 3F/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7413 ;;Total ram usage:        0 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; Hardware stack levels required when called:   15
  7416 ;; This function calls:
  7417 ;;		Nothing
  7418 ;; This function is called by:
  7419 ;;		_main
  7420 ;; This function uses a reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text25
  7424  01A8DA                     __ptext25:
  7425                           	opt callstack 0
  7426  01A8DA                     _clear_adc_scan:
  7427                           	opt callstack 15
  7428                           
  7429                           ;daq.c: 66:  R.done = 0;
  7430                           
  7431                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7432                           ;incstack = 0
  7433  01A8DA  0100               	movlb	0	; () banked
  7434  01A8DC  6BF2               	clrf	(_R+39)& (0+255),b	;volatile
  7435                           
  7436                           ; BSR set to: 0
  7437                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7438  01A8DE  0012               	return		;funcret
  7439  01A8E0                     __end_of_clear_adc_scan:
  7440                           	opt callstack 0
  7441                           
  7442 ;; *************** function _check_help *****************
  7443 ;; Defined at:
  7444 ;;		line 40 in file "mconfig.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  flipper         1  [STACK] const _Bool 
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  estatus         1    0        _Bool 
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1  [STACK] _Bool 
  7451 ;; Registers used:
  7452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7453 ;; Tracked objects:
  7454 ;;		On entry : 3F/2
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7462 ;;Total ram usage:        0 bytes
  7463 ;; Hardware stack levels used:    1
  7464 ;; Hardware stack levels required when called:   27
  7465 ;; This function calls:
  7466 ;;		_StartTimer
  7467 ;;		_TimerDone
  7468 ;;		_display_help
  7469 ;;		_display_info
  7470 ;;		_get_vterm_ptr
  7471 ;;		_help_button
  7472 ;;		_mode_lamp_bright
  7473 ;;		_mode_lamp_dim
  7474 ;;		_set_display_info
  7475 ;;		_set_temp_display_help
  7476 ;;		_set_vterm
  7477 ;;		_sprintf
  7478 ;;		_update_lcd
  7479 ;;		_vterm_dump
  7480 ;; This function is called by:
  7481 ;;		_main
  7482 ;; This function uses a reentrant model
  7483 ;;
  7484                           
  7485                           	psect	text26
  7486  016CFE                     __ptext26:
  7487                           	opt callstack 0
  7488  016CFE                     _check_help:
  7489                           	opt callstack 3
  7490                           
  7491                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  7492                           
  7493                           ; BSR set to: 0
  7494                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7495                           ;incstack = 0
  7496  016CFE  ECBF  F0CF         	call	_help_button	;wreg free
  7497  016D02  5001               	movf	btemp^0,w,c
  7498  016D04  B4D8               	btfsc	status,2,c
  7499  016D06  D0D0               	goto	l12077
  7500  016D08  EC5D  F0D4         	call	_display_info	;wreg free
  7501  016D0C  0401               	decf	btemp^0,w,c
  7502  016D0E  B4D8               	btfsc	status,2,c
  7503  016D10  D0CB               	goto	l12077
  7504                           
  7505                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  7506  016D12  0EDC               	movlw	220
  7507  016D14  6EE6               	movwf	postinc1,c
  7508  016D16  0E05               	movlw	5
  7509  016D18  6EE6               	movwf	postinc1,c
  7510  016D1A  0E0B               	movlw	11
  7511  016D1C  6EE6               	movwf	postinc1,c
  7512  016D1E  EC20  F0CF         	call	_StartTimer	;wreg free
  7513                           
  7514                           ;mconfig.c: 48:   if (V.debug)
  7515  016D22  0102               	movlb	2	; () banked
  7516  016D24  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  7517                           
  7518                           ; BSR set to: 2
  7519                           ;mconfig.c: 49:    vterm_dump();
  7520  016D26  EC0E  F0C0         	call	_vterm_dump	;wreg free
  7521                           
  7522                           ;mconfig.c: 51:   set_vterm(1);
  7523  016D2A  0E01               	movlw	1
  7524  016D2C  6EE6               	movwf	postinc1,c
  7525  016D2E  EC65  F0D3         	call	_set_vterm	;wreg free
  7526                           
  7527                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  7528  016D32  EC5D  F0D4         	call	_display_info	;wreg free
  7529  016D36  5001               	movf	btemp^0,w,c
  7530  016D38  6EE6               	movwf	postinc1,c
  7531  016D3A  EC07  F0D4         	call	_set_temp_display_help	;wreg free
  7532                           
  7533                           ; BSR set to: 2
  7534                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  7535  016D3E  0E01               	movlw	1
  7536  016D40  6EE6               	movwf	postinc1,c
  7537  016D42  EC74  F0D3         	call	_set_display_info	;wreg free
  7538                           
  7539                           ;mconfig.c: 54:   if (flipper) {
  7540                           ;stkvar	_flipper @ sp[(0)+-1]
  7541  016D46  0EFF               	movlw	-1
  7542  016D48  50E3               	movf	plusw1,w,c
  7543  016D4A  B4D8               	btfsc	status,2,c
  7544  016D4C  D019               	goto	l12063
  7545                           
  7546                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  7547  016D4E  0EB4               	movlw	low STR_27
  7548  016D50  6EE6               	movwf	postinc1,c
  7549  016D52  0EFF               	movlw	high STR_27
  7550  016D54  6EE6               	movwf	postinc1,c
  7551  016D56  0E73               	movlw	low STR_29
  7552  016D58  6EE6               	movwf	postinc1,c
  7553  016D5A  0EFE               	movlw	high STR_29
  7554  016D5C  6EE6               	movwf	postinc1,c
  7555  016D5E  0E01               	movlw	1
  7556  016D60  6EE6               	movwf	postinc1,c
  7557  016D62  0E00               	movlw	0
  7558  016D64  6EE6               	movwf	postinc1,c
  7559  016D66  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  7560  016D6A  0060  F007  FFE6   	movff	btemp,postinc1
  7561  016D70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7562  016D76  0E06               	movlw	6
  7563  016D78  6EE6               	movwf	postinc1,c
  7564  016D7A  ECF0  F0C3         	call	_sprintf	;wreg free
  7565                           
  7566                           ;mconfig.c: 56:   } else {
  7567  016D7E  D018               	goto	l1641
  7568  016D80                     l12063:
  7569                           
  7570                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  7571  016D80  0ECA               	movlw	low STR_28
  7572  016D82  6EE6               	movwf	postinc1,c
  7573  016D84  0EFF               	movlw	high STR_28
  7574  016D86  6EE6               	movwf	postinc1,c
  7575  016D88  0E73               	movlw	low STR_29
  7576  016D8A  6EE6               	movwf	postinc1,c
  7577  016D8C  0EFE               	movlw	high STR_29
  7578  016D8E  6EE6               	movwf	postinc1,c
  7579  016D90  0E01               	movlw	1
  7580  016D92  6EE6               	movwf	postinc1,c
  7581  016D94  0E00               	movlw	0
  7582  016D96  6EE6               	movwf	postinc1,c
  7583  016D98  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  7584  016D9C  0060  F007  FFE6   	movff	btemp,postinc1
  7585  016DA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7586  016DA8  0E06               	movlw	6
  7587  016DAA  6EE6               	movwf	postinc1,c
  7588  016DAC  ECF0  F0C3         	call	_sprintf	;wreg free
  7589  016DB0                     l1641:
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  7593  016DB0  0102               	movlb	2	; () banked
  7594  016DB2  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7595  016DB4  32E8               	rrcf	wreg,f,c
  7596  016DB6  32E8               	rrcf	wreg,f,c
  7597  016DB8  0B03               	andlw	3
  7598  016DBA  0D24               	mullw	36
  7599  016DBC  0E12               	movlw	18
  7600  016DBE  26F3               	addwf	243,f,c
  7601  016DC0  0E00               	movlw	0
  7602  016DC2  22F4               	addwfc	244,f,c
  7603  016DC4  0E41               	movlw	low _T
  7604  016DC6  6E0B               	movwf	(btemp+10)^0,c
  7605  016DC8  0EFD               	movlw	high _T
  7606  016DCA  6E0C               	movwf	(btemp+11)^0,c
  7607  016DCC  50F3               	movf	243,w,c
  7608  016DCE  260B               	addwf	(btemp+10)^0,f,c
  7609  016DD0  50F4               	movf	244,w,c
  7610  016DD2  220C               	addwfc	(btemp+11)^0,f,c
  7611  016DD4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7612  016DDA  0060  F033  FFE6   	movff	btemp+11,postinc1
  7613  016DE0  0EC0               	movlw	low STR_31
  7614  016DE2  6EE6               	movwf	postinc1,c
  7615  016DE4  0EFF               	movlw	high STR_31
  7616  016DE6  6EE6               	movwf	postinc1,c
  7617  016DE8  0E01               	movlw	1
  7618  016DEA  6EE6               	movwf	postinc1,c
  7619  016DEC  0E01               	movlw	1
  7620  016DEE  6EE6               	movwf	postinc1,c
  7621  016DF0  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  7622  016DF4  0060  F007  FFE6   	movff	btemp,postinc1
  7623  016DFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7624  016E00  0E06               	movlw	6
  7625  016E02  6EE6               	movwf	postinc1,c
  7626  016E04  ECF0  F0C3         	call	_sprintf	;wreg free
  7627                           
  7628                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  7629  016E08  0102               	movlb	2	; () banked
  7630  016E0A  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7631  016E0C  32E8               	rrcf	wreg,f,c
  7632  016E0E  32E8               	rrcf	wreg,f,c
  7633  016E10  0B03               	andlw	3
  7634  016E12  0D24               	mullw	36
  7635  016E14  0E41               	movlw	low _T
  7636  016E16  6E0B               	movwf	(btemp+10)^0,c
  7637  016E18  0EFD               	movlw	high _T
  7638  016E1A  6E0C               	movwf	(btemp+11)^0,c
  7639  016E1C  50F3               	movf	243,w,c
  7640  016E1E  260B               	addwf	(btemp+10)^0,f,c
  7641  016E20  50F4               	movf	244,w,c
  7642  016E22  220C               	addwfc	(btemp+11)^0,f,c
  7643  016E24  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7644  016E2A  0060  F033  FFE6   	movff	btemp+11,postinc1
  7645  016E30  0EC0               	movlw	low STR_31
  7646  016E32  6EE6               	movwf	postinc1,c
  7647  016E34  0EFF               	movlw	high STR_31
  7648  016E36  6EE6               	movwf	postinc1,c
  7649  016E38  0E01               	movlw	1
  7650  016E3A  6EE6               	movwf	postinc1,c
  7651  016E3C  0E02               	movlw	2
  7652  016E3E  6EE6               	movwf	postinc1,c
  7653  016E40  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  7654  016E44  0060  F007  FFE6   	movff	btemp,postinc1
  7655  016E4A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7656  016E50  0E06               	movlw	6
  7657  016E52  6EE6               	movwf	postinc1,c
  7658  016E54  ECF0  F0C3         	call	_sprintf	;wreg free
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;mconfig.c: 61:   V.help_id++;
  7662  016E58  EE20  F29B         	lfsr	2,_V+155	;volatile
  7663  016E5C  38DF               	swapf	223,w,c
  7664  016E5E  6E0C               	movwf	(btemp+11)^0,c
  7665  016E60  320C               	rrcf	(btemp+11)^0,f,c
  7666  016E62  300C               	rrcf	(btemp+11)^0,w,c
  7667  016E64  0B03               	andlw	3
  7668  016E66  6E0C               	movwf	(btemp+11)^0,c
  7669  016E68  2A0C               	incf	(btemp+11)^0,f,c
  7670  016E6A  3A0C               	swapf	(btemp+11)^0,f,c
  7671  016E6C  360C               	rlcf	(btemp+11)^0,f,c
  7672  016E6E  360C               	rlcf	(btemp+11)^0,f,c
  7673  016E70  50DF               	movf	223,w,c
  7674  016E72  180C               	xorwf	(btemp+11)^0,w,c
  7675  016E74  0B3F               	andlw	-193
  7676  016E76  180C               	xorwf	(btemp+11)^0,w,c
  7677  016E78  6EDF               	movwf	223,c
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  7681  016E7A  0EB8               	movlw	184
  7682  016E7C  6EE6               	movwf	postinc1,c
  7683  016E7E  0E0B               	movlw	11
  7684  016E80  6EE6               	movwf	postinc1,c
  7685  016E82  0E09               	movlw	9
  7686  016E84  6EE6               	movwf	postinc1,c
  7687  016E86  EC20  F0CF         	call	_StartTimer	;wreg free
  7688                           
  7689                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  7690  016E8A  0EB8               	movlw	184
  7691  016E8C  6EE6               	movwf	postinc1,c
  7692  016E8E  0E0B               	movlw	11
  7693  016E90  6EE6               	movwf	postinc1,c
  7694  016E92  0E07               	movlw	7
  7695  016E94  6EE6               	movwf	postinc1,c
  7696  016E96  EC20  F0CF         	call	_StartTimer	;wreg free
  7697                           
  7698                           ;mconfig.c: 64:   mode_lamp_bright();
  7699  016E9A  EC26  F0D4         	call	_mode_lamp_bright	;wreg free
  7700                           
  7701                           ;mconfig.c: 65:   update_lcd(1);
  7702  016E9E  0E01               	movlw	1
  7703  016EA0  6EE6               	movwf	postinc1,c
  7704  016EA2  ECE1  F0C2         	call	_update_lcd	;wreg free
  7705                           
  7706                           ;mconfig.c: 67:  } else {
  7707  016EA6  D032               	goto	l1642
  7708  016EA8                     l12077:
  7709                           
  7710                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  7711  016EA8  0E09               	movlw	9
  7712  016EAA  6EE6               	movwf	postinc1,c
  7713  016EAC  EC7F  F0D1         	call	_TimerDone	;wreg free
  7714  016EB0  5001               	movf	btemp^0,w,c
  7715  016EB2  B4D8               	btfsc	status,2,c
  7716  016EB4  D02B               	goto	l1642
  7717                           
  7718                           ;mconfig.c: 69:    set_vterm(0);
  7719  016EB6  0E00               	movlw	0
  7720  016EB8  6EE6               	movwf	postinc1,c
  7721  016EBA  EC65  F0D3         	call	_set_vterm	;wreg free
  7722                           
  7723                           ;mconfig.c: 70:    V.help = 0;
  7724  016EBE  0102               	movlb	2	; () banked
  7725  016EC0  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  7726                           
  7727                           ; BSR set to: 2
  7728                           ;mconfig.c: 71:    set_display_info(display_help());
  7729  016EC2  EC61  F0D4         	call	_display_help	;wreg free
  7730  016EC6  5001               	movf	btemp^0,w,c
  7731  016EC8  6EE6               	movwf	postinc1,c
  7732  016ECA  EC74  F0D3         	call	_set_display_info	;wreg free
  7733                           
  7734                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  7735  016ECE  0060  FA57  FFE6   	movff	_V+149,postinc1
  7736  016ED4  0060  FA5B  FFE6   	movff	_V+150,postinc1
  7737  016EDA  ECBB  F0D3         	call	_mode_lamp_dim	;wreg free
  7738                           
  7739                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  7740  016EDE  0E0B               	movlw	11
  7741  016EE0  6EE6               	movwf	postinc1,c
  7742  016EE2  EC7F  F0D1         	call	_TimerDone	;wreg free
  7743  016EE6  5001               	movf	btemp^0,w,c
  7744  016EE8  B4D8               	btfsc	status,2,c
  7745  016EEA  D010               	goto	l1642
  7746                           
  7747                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  7748  016EEC  0102               	movlb	2	; () banked
  7749  016EEE  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  7750  016EF0  A4D8               	btfss	status,2,c
  7751  016EF2  D002               	goto	u11810
  7752  016EF4  0E01               	movlw	1
  7753  016EF6  D001               	goto	u11820
  7754  016EF8                     u11810:
  7755  016EF8  0E00               	movlw	0
  7756  016EFA                     u11820:
  7757  016EFA  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  7758                           
  7759                           ; BSR set to: 2
  7760                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  7761  016EFC  0EDC               	movlw	220
  7762  016EFE  6EE6               	movwf	postinc1,c
  7763  016F00  0E05               	movlw	5
  7764  016F02  6EE6               	movwf	postinc1,c
  7765  016F04  0E0B               	movlw	11
  7766  016F06  6EE6               	movwf	postinc1,c
  7767  016F08  EC20  F0CF         	call	_StartTimer	;wreg free
  7768  016F0C                     l1642:
  7769                           
  7770                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7771  016F0C  52E5               	movf	postdec1,f,c
  7772  016F0E  0012               	return		;funcret
  7773  016F10                     __end_of_check_help:
  7774                           	opt callstack 0
  7775                           
  7776 ;; *************** function _vterm_dump *****************
  7777 ;; Defined at:
  7778 ;;		line 121 in file "mconfig.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;		None
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;		None
  7783 ;; Return value:  Size  Location     Type
  7784 ;;                  1  [STACK] void 
  7785 ;; Registers used:
  7786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7787 ;; Tracked objects:
  7788 ;;		On entry : 3F/2
  7789 ;;		On exit  : 0/0
  7790 ;;		Unchanged: 0/0
  7791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7796 ;;Total ram usage:        0 bytes
  7797 ;; Hardware stack levels used:    1
  7798 ;; Hardware stack levels required when called:   26
  7799 ;; This function calls:
  7800 ;;		_WaitMs
  7801 ;;		_eaDogM_WriteStringAtPos
  7802 ;;		_get_vterm_ptr
  7803 ;;		_sprintf
  7804 ;;		_wait_lcd_done
  7805 ;; This function is called by:
  7806 ;;		_check_help
  7807 ;; This function uses a reentrant model
  7808 ;;
  7809                           
  7810                           	psect	text27
  7811  01801C                     __ptext27:
  7812                           	opt callstack 0
  7813  01801C                     _vterm_dump:
  7814                           	opt callstack 3
  7815                           
  7816                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  7817                           
  7818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7819                           ;incstack = 0
  7820  01801C  0E01               	movlw	1
  7821  01801E  6EE6               	movwf	postinc1,c
  7822  018020  0E00               	movlw	0
  7823  018022  6EE6               	movwf	postinc1,c
  7824  018024  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  7825  018028  0060  F007  FFE6   	movff	btemp,postinc1
  7826  01802E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7827  018034  0E00               	movlw	0
  7828  018036  6EE6               	movwf	postinc1,c
  7829  018038  0E00               	movlw	0
  7830  01803A  6EE6               	movwf	postinc1,c
  7831  01803C  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  7832  018040  0060  F007  FFE6   	movff	btemp,postinc1
  7833  018046  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7834  01804C  0E96               	movlw	low STR_33
  7835  01804E  6EE6               	movwf	postinc1,c
  7836  018050  0EFF               	movlw	high STR_33
  7837  018052  6EE6               	movwf	postinc1,c
  7838  018054  0E01               	movlw	low (_V+1)
  7839  018056  6EE6               	movwf	postinc1,c
  7840  018058  0E02               	movlw	high (_V+1)
  7841  01805A  6EE6               	movwf	postinc1,c
  7842  01805C  0E08               	movlw	8
  7843  01805E  6EE6               	movwf	postinc1,c
  7844  018060  ECF0  F0C3         	call	_sprintf	;wreg free
  7845                           
  7846                           ; BSR set to: 0
  7847                           ;mconfig.c: 124:  wait_lcd_done();
  7848  018064  EC92  F0D3         	call	_wait_lcd_done	;wreg free
  7849                           
  7850                           ; BSR set to: 0
  7851                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  7852  018068  0E01               	movlw	low (_V+1)
  7853  01806A  6EE6               	movwf	postinc1,c
  7854  01806C  0E02               	movlw	high (_V+1)
  7855  01806E  6EE6               	movwf	postinc1,c
  7856  018070  0E00               	movlw	0
  7857  018072  6EE6               	movwf	postinc1,c
  7858  018074  0E00               	movlw	0
  7859  018076  6EE6               	movwf	postinc1,c
  7860  018078  ECF6  F0CF         	call	_eaDogM_WriteStringAtPos	;wreg free
  7861                           
  7862                           ; BSR set to: 59
  7863                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  7864  01807C  0E01               	movlw	1
  7865  01807E  6EE6               	movwf	postinc1,c
  7866  018080  0E01               	movlw	1
  7867  018082  6EE6               	movwf	postinc1,c
  7868  018084  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  7869  018088  0060  F007  FFE6   	movff	btemp,postinc1
  7870  01808E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7871  018094  0E00               	movlw	0
  7872  018096  6EE6               	movwf	postinc1,c
  7873  018098  0E01               	movlw	1
  7874  01809A  6EE6               	movwf	postinc1,c
  7875  01809C  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  7876  0180A0  0060  F007  FFE6   	movff	btemp,postinc1
  7877  0180A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7878  0180AC  0E96               	movlw	low STR_33
  7879  0180AE  6EE6               	movwf	postinc1,c
  7880  0180B0  0EFF               	movlw	high STR_33
  7881  0180B2  6EE6               	movwf	postinc1,c
  7882  0180B4  0E01               	movlw	low (_V+1)
  7883  0180B6  6EE6               	movwf	postinc1,c
  7884  0180B8  0E02               	movlw	high (_V+1)
  7885  0180BA  6EE6               	movwf	postinc1,c
  7886  0180BC  0E08               	movlw	8
  7887  0180BE  6EE6               	movwf	postinc1,c
  7888  0180C0  ECF0  F0C3         	call	_sprintf	;wreg free
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;mconfig.c: 127:  wait_lcd_done();
  7892  0180C4  EC92  F0D3         	call	_wait_lcd_done	;wreg free
  7893                           
  7894                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  7895  0180C8  0E01               	movlw	low (_V+1)
  7896  0180CA  6EE6               	movwf	postinc1,c
  7897  0180CC  0E02               	movlw	high (_V+1)
  7898  0180CE  6EE6               	movwf	postinc1,c
  7899  0180D0  0E00               	movlw	0
  7900  0180D2  6EE6               	movwf	postinc1,c
  7901  0180D4  0E01               	movlw	1
  7902  0180D6  6EE6               	movwf	postinc1,c
  7903  0180D8  ECF6  F0CF         	call	_eaDogM_WriteStringAtPos	;wreg free
  7904                           
  7905                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  7906  0180DC  0E01               	movlw	1
  7907  0180DE  6EE6               	movwf	postinc1,c
  7908  0180E0  0E02               	movlw	2
  7909  0180E2  6EE6               	movwf	postinc1,c
  7910  0180E4  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  7911  0180E8  0060  F007  FFE6   	movff	btemp,postinc1
  7912  0180EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7913  0180F4  0E00               	movlw	0
  7914  0180F6  6EE6               	movwf	postinc1,c
  7915  0180F8  0E02               	movlw	2
  7916  0180FA  6EE6               	movwf	postinc1,c
  7917  0180FC  ECD7  F0D0         	call	_get_vterm_ptr	;wreg free
  7918  018100  0060  F007  FFE6   	movff	btemp,postinc1
  7919  018106  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7920  01810C  0E96               	movlw	low STR_33
  7921  01810E  6EE6               	movwf	postinc1,c
  7922  018110  0EFF               	movlw	high STR_33
  7923  018112  6EE6               	movwf	postinc1,c
  7924  018114  0E01               	movlw	low (_V+1)
  7925  018116  6EE6               	movwf	postinc1,c
  7926  018118  0E02               	movlw	high (_V+1)
  7927  01811A  6EE6               	movwf	postinc1,c
  7928  01811C  0E08               	movlw	8
  7929  01811E  6EE6               	movwf	postinc1,c
  7930  018120  ECF0  F0C3         	call	_sprintf	;wreg free
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;mconfig.c: 130:  wait_lcd_done();
  7934  018124  EC92  F0D3         	call	_wait_lcd_done	;wreg free
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  7938  018128  0E01               	movlw	low (_V+1)
  7939  01812A  6EE6               	movwf	postinc1,c
  7940  01812C  0E02               	movlw	high (_V+1)
  7941  01812E  6EE6               	movwf	postinc1,c
  7942  018130  0E00               	movlw	0
  7943  018132  6EE6               	movwf	postinc1,c
  7944  018134  0E02               	movlw	2
  7945  018136  6EE6               	movwf	postinc1,c
  7946  018138  ECF6  F0CF         	call	_eaDogM_WriteStringAtPos	;wreg free
  7947                           
  7948                           ; BSR set to: 59
  7949                           ;mconfig.c: 132:  WaitMs(3000);
  7950  01813C  0EB8               	movlw	184
  7951  01813E  6EE6               	movwf	postinc1,c
  7952  018140  0E0B               	movlw	11
  7953  018142  6EE6               	movwf	postinc1,c
  7954  018144  ECDB  F0CF         	call	_WaitMs	;wreg free
  7955                           
  7956                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7957  018148  0012               	return		;funcret
  7958  01814A                     __end_of_vterm_dump:
  7959                           	opt callstack 0
  7960                           
  7961 ;; *************** function _sprintf *****************
  7962 ;; Defined at:
  7963 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;  s               2  [STACK] PTR unsigned char 
  7966 ;;		 -> D.lcd(288), D(290), port_data(512), V(188), 
  7967 ;;  fmt             2  [STACK] PTR const unsigned char 
  7968 ;;		 -> STR_46(79), STR_44(3), STR_43(3), STR_42(19), 
  7969 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
  7970 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
  7971 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
  7972 ;;		 -> STR_29(19), STR_23(17), STR_22(16), STR_21(16), 
  7973 ;;		 -> STR_20(19), STR_19(20), STR_18(19), STR_17(19), 
  7974 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
  7975 ;;		 -> STR_12(19), STR_11(17), STR_10(16), STR_9(16), 
  7976 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  7977 ;;		 -> STR_2(15), STR_1(17), 
  7978 ;; Auto vars:     Size  Location     Type
  7979 ;;  f               6  [STACK] struct _IO_FILE
  7980 ;;  ap              2  [STACK] PTR void [1]
  7981 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7982 ;;  ret             2    0        int 
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  2  [STACK] int 
  7985 ;; Registers used:
  7986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7987 ;; Tracked objects:
  7988 ;;		On entry : 0/2
  7989 ;;		On exit  : 3F/0
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7996 ;;Total ram usage:        0 bytes
  7997 ;; Hardware stack levels used:    1
  7998 ;; Hardware stack levels required when called:   23
  7999 ;; This function calls:
  8000 ;;		_vfprintf
  8001 ;; This function is called by:
  8002 ;;		_main
  8003 ;;		_check_help
  8004 ;;		_vterm_dump
  8005 ;;		_calc_bsoc
  8006 ;; This function uses a reentrant model
  8007 ;;
  8008                           
  8009                           	psect	text28
  8010  0187E0                     __ptext28:
  8011                           	opt callstack 0
  8012  0187E0                     _sprintf:
  8013                           	opt callstack 0
  8014                           
  8015                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 52, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8016  0187E0  0E08               	movlw	8
  8017  0187E2  26E1               	addwf	fsr1l,f,c
  8018  0187E4  0E00               	movlw	0
  8019  0187E6  22E2               	addwfc	fsr1h,f,c
  8020                           
  8021                           ;incstack = 0
  8022 ;; hardware stack exceeded
  8023  0187E8  0EFE               	movlw	254
  8024  0187EA  6E0B               	movwf	(btemp+10)^0,c
  8025  0187EC  0EFF               	movlw	255
  8026  0187EE  6E0C               	movwf	(btemp+11)^0,c
  8027                           
  8028                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  8029  0187F0  0EF5               	movlw	245
  8030  0187F2  24E1               	addwf	fsr1l,w,c
  8031  0187F4  6E09               	movwf	(btemp+8)^0,c
  8032  0187F6  0EFF               	movlw	255
  8033  0187F8  20E2               	addwfc	fsr1h,w,c
  8034  0187FA  6E0A               	movwf	(btemp+9)^0,c
  8035  0187FC  500B               	movf	(btemp+10)^0,w,c
  8036  0187FE  2609               	addwf	(btemp+8)^0,f,c
  8037  018800  500C               	movf	(btemp+11)^0,w,c
  8038  018802  220A               	addwfc	(btemp+9)^0,f,c
  8039                           
  8040                           ;stkvar	_ap @ sp[(-8)+6]
  8041  018804  0EFF               	movlw	-1
  8042  018806  0060  F02B  FFE3   	movff	btemp+9,plusw1
  8043  01880C  0EFE               	movlw	-2
  8044  01880E  0060  F027  FFE3   	movff	btemp+8,plusw1
  8045                           
  8046                           ;stkvar	_s @ sp[(-8)+-3]
  8047  018814  0EF5               	movlw	-11
  8048  018816  006F FF8C  F00B    	movff	plusw1,btemp+10
  8049  01881C  0EF6               	movlw	-10
  8050  01881E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8051                           
  8052                           ;stkvar	_f @ sp[(-8)+0]
  8053  018824  0EF9               	movlw	-7
  8054  018826  0060  F033  FFE3   	movff	btemp+11,plusw1
  8055  01882C  0EF8               	movlw	-8
  8056  01882E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8057                           
  8058                           ;stkvar	_f @ sp[(-8)+0]
  8059  018834  0EFA               	movlw	250
  8060  018836  24E1               	addwf	fsr1l,w,c
  8061  018838  6ED9               	movwf	fsr2l,c
  8062  01883A  0EFF               	movlw	255
  8063  01883C  20E2               	addwfc	fsr1h,w,c
  8064  01883E  6EDA               	movwf	fsr2h,c
  8065  018840  0E00               	movlw	0
  8066  018842  6EDE               	movwf	postinc2,c
  8067  018844  0E00               	movlw	0
  8068  018846  6EDD               	movwf	postdec2,c
  8069                           
  8070                           ;stkvar	_f @ sp[(-8)+0]
  8071  018848  0EFC               	movlw	252
  8072  01884A  24E1               	addwf	fsr1l,w,c
  8073  01884C  6ED9               	movwf	fsr2l,c
  8074  01884E  0EFF               	movlw	255
  8075  018850  20E2               	addwfc	fsr1h,w,c
  8076  018852  6EDA               	movwf	fsr2h,c
  8077  018854  0E00               	movlw	0
  8078  018856  6EDE               	movwf	postinc2,c
  8079  018858  0E00               	movlw	0
  8080  01885A  6EDD               	movwf	postdec2,c
  8081                           
  8082                           ;stkvar	_ap @ sp[(-8)+6]
  8083  01885C  0EFE               	movlw	254
  8084  01885E  24E1               	addwf	fsr1l,w,c
  8085  018860  6E01               	movwf	btemp^0,c
  8086  018862  0EFF               	movlw	255
  8087  018864  20E2               	addwfc	fsr1h,w,c
  8088  018866  6E02               	movwf	(btemp+1)^0,c
  8089  018868  0060  F007  FFE6   	movff	btemp,postinc1
  8090  01886E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8091                           
  8092                           ;stkvar	_fmt @ sp[(-10)+-5]
  8093  018874  0EF1               	movlw	-15
  8094  018876  006F FF8F FFE6     	movff	plusw1,postinc1
  8095  01887C  006F FF8F FFE6     	movff	plusw1,postinc1
  8096                           
  8097                           ;stkvar	_f @ sp[(-12)+0]
  8098  018882  0EF4               	movlw	244
  8099  018884  24E1               	addwf	fsr1l,w,c
  8100  018886  6E01               	movwf	btemp^0,c
  8101  018888  0EFF               	movlw	255
  8102  01888A  20E2               	addwfc	fsr1h,w,c
  8103  01888C  6E02               	movwf	(btemp+1)^0,c
  8104  01888E  0060  F007  FFE6   	movff	btemp,postinc1
  8105  018894  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8106  01889A  EC5E  F0C7         	call	_vfprintf	;wreg free
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;stkvar	_f @ sp[(-8)+0]
  8110  01889E  0EFA               	movlw	250
  8111  0188A0  24E1               	addwf	fsr1l,w,c
  8112  0188A2  6ED9               	movwf	fsr2l,c
  8113  0188A4  0EFF               	movlw	255
  8114  0188A6  20E2               	addwfc	fsr1h,w,c
  8115  0188A8  6EDA               	movwf	fsr2h,c
  8116  0188AA  006F FF78  F00B    	movff	postinc2,btemp+10
  8117  0188B0  006F FF74  F00C    	movff	postdec2,btemp+11
  8118                           
  8119                           ;stkvar	_s @ sp[(-8)+-3]
  8120  0188B6  0EF5               	movlw	-11
  8121  0188B8  006F FF8C  F009    	movff	plusw1,btemp+8
  8122  0188BE  0EF6               	movlw	-10
  8123  0188C0  006F FF8C  F00A    	movff	plusw1,btemp+9
  8124  0188C6  500B               	movf	(btemp+10)^0,w,c
  8125  0188C8  2409               	addwf	(btemp+8)^0,w,c
  8126  0188CA  6ED9               	movwf	fsr2l,c
  8127  0188CC  500C               	movf	(btemp+11)^0,w,c
  8128  0188CE  200A               	addwfc	(btemp+9)^0,w,c
  8129  0188D0  6EDA               	movwf	fsr2h,c
  8130  0188D2  0E00               	movlw	0
  8131  0188D4  6EDF               	movwf	indf2,c
  8132                           
  8133                           ; BSR set to: 0
  8134                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 52, args
      +                          ize = 4, vargsize = 0
  8135  0188D6  0EF8               	movlw	248
  8136  0188D8  26E1               	addwf	fsr1l,f,c
  8137  0188DA  0EFF               	movlw	255
  8138  0188DC  22E2               	addwfc	fsr1h,f,c
  8139  0188DE  52E5               	movf	postdec1,f,c
  8140  0188E0  50E7               	movf	indf1,w,c
  8141  0188E2  5EE1               	subwf	fsr1l,f,c
  8142  0188E4  0E00               	movlw	0
  8143  0188E6  5AE2               	subwfb	fsr1h,f,c
  8144  0188E8  0012               	return		;funcret
  8145  0188EA                     __end_of_sprintf:
  8146                           	opt callstack 0
  8147                           
  8148 ;; *************** function _get_vterm_ptr *****************
  8149 ;; Defined at:
  8150 ;;		line 116 in file "mconfig.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;  line            1  [STACK] const unsigned char 
  8153 ;;  vterm           1  [STACK] const unsigned char 
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;		None
  8156 ;; Return value:  Size  Location     Type
  8157 ;;                  2  [STACK] PTR unsigned char 
  8158 ;; Registers used:
  8159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/2
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8169 ;;Total ram usage:        0 bytes
  8170 ;; Hardware stack levels used:    1
  8171 ;; Hardware stack levels required when called:   15
  8172 ;; This function calls:
  8173 ;;		Nothing
  8174 ;; This function is called by:
  8175 ;;		_main
  8176 ;;		_check_help
  8177 ;;		_vterm_dump
  8178 ;; This function uses a reentrant model
  8179 ;;
  8180                           
  8181                           	psect	text29
  8182  01A1AE                     __ptext29:
  8183                           	opt callstack 0
  8184  01A1AE                     _get_vterm_ptr:
  8185                           	opt callstack 15
  8186                           
  8187                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  8188                           ;stkvar	_vterm @ sp[(0)+-2]
  8189                           
  8190                           ; BSR set to: 0
  8191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8192                           ;incstack = 0
  8193  01A1AE  0EFE               	movlw	-2
  8194  01A1B0  50E3               	movf	plusw1,w,c
  8195  01A1B2  0B03               	andlw	3
  8196  01A1B4  0D48               	mullw	72
  8197  01A1B6  0EFF               	movlw	low _D
  8198  01A1B8  6E01               	movwf	btemp^0,c
  8199  01A1BA  0E07               	movlw	high _D
  8200  01A1BC  6E02               	movwf	(btemp+1)^0,c
  8201  01A1BE  50F3               	movf	243,w,c
  8202  01A1C0  2601               	addwf	btemp^0,f,c
  8203  01A1C2  50F4               	movf	244,w,c
  8204  01A1C4  2202               	addwfc	(btemp+1)^0,f,c
  8205                           
  8206                           ;stkvar	_line @ sp[(0)+-1]
  8207  01A1C6  0EFF               	movlw	-1
  8208  01A1C8  50E3               	movf	plusw1,w,c
  8209  01A1CA  0B03               	andlw	3
  8210  01A1CC  0D18               	mullw	24
  8211  01A1CE  50F3               	movf	243,w,c
  8212  01A1D0  2601               	addwf	btemp^0,f,c
  8213  01A1D2  50F4               	movf	244,w,c
  8214  01A1D4  2202               	addwfc	(btemp+1)^0,f,c
  8215                           
  8216                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8217  01A1D6  52E5               	movf	postdec1,f,c
  8218  01A1D8  52E5               	movf	postdec1,f,c
  8219  01A1DA  0012               	return		;funcret
  8220  01A1DC                     __end_of_get_vterm_ptr:
  8221                           	opt callstack 0
  8222                           
  8223 ;; *************** function _WaitMs *****************
  8224 ;; Defined at:
  8225 ;;		line 32 in file "timers.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;  numMilliseco    2  [STACK] const unsigned short 
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;		None
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  1  [STACK] void 
  8232 ;; Registers used:
  8233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/2
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8243 ;;Total ram usage:        0 bytes
  8244 ;; Hardware stack levels used:    1
  8245 ;; Hardware stack levels required when called:   16
  8246 ;; This function calls:
  8247 ;;		_StartTimer
  8248 ;;		_TimerDone
  8249 ;; This function is called by:
  8250 ;;		_main
  8251 ;;		_vterm_dump
  8252 ;; This function uses a reentrant model
  8253 ;;
  8254                           
  8255                           	psect	text30
  8256  019FB6                     __ptext30:
  8257                           	opt callstack 0
  8258  019FB6                     _WaitMs:
  8259                           	opt callstack 12
  8260                           
  8261                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  8262                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  8263                           
  8264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8265                           ;incstack = 0
  8266  019FB6  0EFE               	movlw	-2
  8267  019FB8  006F FF8F FFE6     	movff	plusw1,postinc1
  8268  019FBE  006F FF8F FFE6     	movff	plusw1,postinc1
  8269  019FC4  0E00               	movlw	0
  8270  019FC6  6EE6               	movwf	postinc1,c
  8271  019FC8  EC20  F0CF         	call	_StartTimer	;wreg free
  8272                           
  8273                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8274  019FCC  D005               	goto	l9093
  8275  019FCE                     l1573:
  8276                           
  8277                           ;timers.c: 36:   __nop();
  8278  019FCE  F000               	nop	
  8279                           
  8280                           ;timers.c: 37:   __nop();
  8281  019FD0  F000               	nop	
  8282                           
  8283                           ;timers.c: 38:   __nop();
  8284  019FD2  F000               	nop	
  8285                           
  8286                           ;timers.c: 39:   __nop();
  8287  019FD4  F000               	nop	
  8288  019FD6  0004               	clrwdt		;# 
  8289  019FD8                     l9093:
  8290                           
  8291                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8292  019FD8  0E00               	movlw	0
  8293  019FDA  6EE6               	movwf	postinc1,c
  8294  019FDC  EC7F  F0D1         	call	_TimerDone	;wreg free
  8295  019FE0  5001               	movf	btemp^0,w,c
  8296  019FE2  B4D8               	btfsc	status,2,c
  8297  019FE4  D7F4               	goto	l1573
  8298                           
  8299                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8300  019FE6  52E5               	movf	postdec1,f,c
  8301  019FE8  52E5               	movf	postdec1,f,c
  8302  019FEA  0012               	return		;funcret
  8303  019FEC                     __end_of_WaitMs:
  8304                           	opt callstack 0
  8305                           
  8306 ;; *************** function _update_lcd *****************
  8307 ;; Defined at:
  8308 ;;		line 85 in file "mconfig.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;  vterm           1  [STACK] unsigned char 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;		None
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1  [STACK] unsigned char 
  8315 ;; Registers used:
  8316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8326 ;;Total ram usage:        0 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:   26
  8329 ;; This function calls:
  8330 ;;		_eaDogM_WriteStringAtPos
  8331 ;;		_wait_lcd_done
  8332 ;; This function is called by:
  8333 ;;		_main
  8334 ;;		_check_help
  8335 ;; This function uses a reentrant model
  8336 ;;
  8337                           
  8338                           	psect	text31
  8339  0185C2                     __ptext31:
  8340                           	opt callstack 0
  8341  0185C2                     _update_lcd:
  8342                           	opt callstack 4
  8343                           
  8344                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  8345                           ;stkvar	_vterm @ sp[(0)+-1]
  8346                           
  8347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8348                           ;incstack = 0
  8349  0185C2  0EFF               	movlw	-1
  8350  0185C4  006F FF8C  F001    	movff	plusw1,btemp
  8351  0185CA  0E03               	movlw	3
  8352  0185CC  1601               	andwf	btemp^0,f,c
  8353  0185CE  0EFF               	movlw	-1
  8354  0185D0  0060  F007  FFE3   	movff	btemp,plusw1
  8355                           
  8356                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  8357  0185D6  EE22  F11F         	lfsr	2,_D+288
  8358  0185DA  A0DF               	btfss	indf2,0,c
  8359  0185DC  D004               	goto	l11803
  8360                           
  8361                           ;stkvar	_vterm @ sp[(0)+-1]
  8362  0185DE  0EFF               	movlw	-1
  8363  0185E0  50E3               	movf	plusw1,w,c
  8364  0185E2  B4D8               	btfsc	status,2,c
  8365  0185E4  D074               	goto	l1649
  8366  0185E6                     l11803:
  8367                           
  8368                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  8369                           ;stkvar	_vterm @ sp[(0)+-1]
  8370  0185E6  0EFF               	movlw	-1
  8371  0185E8  50E3               	movf	plusw1,w,c
  8372  0185EA  0D48               	mullw	72
  8373  0185EC  0E0F               	movlw	low (_D+16)
  8374  0185EE  24F3               	addwf	243,w,c
  8375  0185F0  6ED9               	movwf	fsr2l,c
  8376  0185F2  0E08               	movlw	high (_D+16)
  8377  0185F4  20F4               	addwfc	prodh,w,c
  8378  0185F6  6EDA               	movwf	fsr2h,c
  8379  0185F8  0E00               	movlw	0
  8380  0185FA  6EDF               	movwf	indf2,c
  8381                           
  8382                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  8383                           ;stkvar	_vterm @ sp[(0)+-1]
  8384  0185FC  0EFF               	movlw	-1
  8385  0185FE  50E3               	movf	plusw1,w,c
  8386  018600  0D48               	mullw	72
  8387  018602  0E27               	movlw	low (_D+40)
  8388  018604  24F3               	addwf	243,w,c
  8389  018606  6ED9               	movwf	fsr2l,c
  8390  018608  0E08               	movlw	high (_D+40)
  8391  01860A  20F4               	addwfc	prodh,w,c
  8392  01860C  6EDA               	movwf	fsr2h,c
  8393  01860E  0E00               	movlw	0
  8394  018610  6EDF               	movwf	indf2,c
  8395                           
  8396                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  8397                           ;stkvar	_vterm @ sp[(0)+-1]
  8398  018612  0EFF               	movlw	-1
  8399  018614  50E3               	movf	plusw1,w,c
  8400  018616  0D48               	mullw	72
  8401  018618  0E3F               	movlw	low (_D+64)
  8402  01861A  24F3               	addwf	243,w,c
  8403  01861C  6ED9               	movwf	fsr2l,c
  8404  01861E  0E08               	movlw	high (_D+64)
  8405  018620  20F4               	addwfc	prodh,w,c
  8406  018622  6EDA               	movwf	fsr2h,c
  8407  018624  0E00               	movlw	0
  8408  018626  6EDF               	movwf	indf2,c
  8409                           
  8410                           ;mconfig.c: 95:  wait_lcd_done();
  8411  018628  EC92  F0D3         	call	_wait_lcd_done	;wreg free
  8412                           
  8413                           ; BSR set to: 0
  8414                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  8415                           ;stkvar	_vterm @ sp[(0)+-1]
  8416  01862C  0EFF               	movlw	-1
  8417  01862E  50E3               	movf	plusw1,w,c
  8418  018630  0D48               	mullw	72
  8419  018632  0EFF               	movlw	low _D
  8420  018634  6E0B               	movwf	(btemp+10)^0,c
  8421  018636  0E07               	movlw	high _D
  8422  018638  6E0C               	movwf	(btemp+11)^0,c
  8423  01863A  50F3               	movf	243,w,c
  8424  01863C  260B               	addwf	(btemp+10)^0,f,c
  8425  01863E  50F4               	movf	244,w,c
  8426  018640  220C               	addwfc	(btemp+11)^0,f,c
  8427  018642  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8428  018648  0060  F033  FFE6   	movff	btemp+11,postinc1
  8429  01864E  0E00               	movlw	0
  8430  018650  6EE6               	movwf	postinc1,c
  8431  018652  0E00               	movlw	0
  8432  018654  6EE6               	movwf	postinc1,c
  8433  018656  ECF6  F0CF         	call	_eaDogM_WriteStringAtPos	;wreg free
  8434                           
  8435                           ; BSR set to: 59
  8436                           ;mconfig.c: 97:  wait_lcd_done();
  8437  01865A  EC92  F0D3         	call	_wait_lcd_done	;wreg free
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  8441                           ;stkvar	_vterm @ sp[(0)+-1]
  8442  01865E  0EFF               	movlw	-1
  8443  018660  50E3               	movf	plusw1,w,c
  8444  018662  0D48               	mullw	72
  8445  018664  0EFF               	movlw	low _D
  8446  018666  6E0B               	movwf	(btemp+10)^0,c
  8447  018668  0E07               	movlw	high _D
  8448  01866A  6E0C               	movwf	(btemp+11)^0,c
  8449  01866C  0E18               	movlw	24
  8450  01866E  260B               	addwf	(btemp+10)^0,f,c
  8451  018670  0E00               	movlw	0
  8452  018672  220C               	addwfc	(btemp+11)^0,f,c
  8453  018674  50F3               	movf	243,w,c
  8454  018676  260B               	addwf	(btemp+10)^0,f,c
  8455  018678  50F4               	movf	244,w,c
  8456  01867A  220C               	addwfc	(btemp+11)^0,f,c
  8457  01867C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8458  018682  0060  F033  FFE6   	movff	btemp+11,postinc1
  8459  018688  0E00               	movlw	0
  8460  01868A  6EE6               	movwf	postinc1,c
  8461  01868C  0E01               	movlw	1
  8462  01868E  6EE6               	movwf	postinc1,c
  8463  018690  ECF6  F0CF         	call	_eaDogM_WriteStringAtPos	;wreg free
  8464                           
  8465                           ; BSR set to: 59
  8466                           ;mconfig.c: 99:  wait_lcd_done();
  8467  018694  EC92  F0D3         	call	_wait_lcd_done	;wreg free
  8468                           
  8469                           ; BSR set to: 0
  8470                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  8471                           ;stkvar	_vterm @ sp[(0)+-1]
  8472  018698  0EFF               	movlw	-1
  8473  01869A  50E3               	movf	plusw1,w,c
  8474  01869C  0D48               	mullw	72
  8475  01869E  0EFF               	movlw	low _D
  8476  0186A0  6E0B               	movwf	(btemp+10)^0,c
  8477  0186A2  0E07               	movlw	high _D
  8478  0186A4  6E0C               	movwf	(btemp+11)^0,c
  8479  0186A6  0E30               	movlw	48
  8480  0186A8  260B               	addwf	(btemp+10)^0,f,c
  8481  0186AA  0E00               	movlw	0
  8482  0186AC  220C               	addwfc	(btemp+11)^0,f,c
  8483  0186AE  50F3               	movf	243,w,c
  8484  0186B0  260B               	addwf	(btemp+10)^0,f,c
  8485  0186B2  50F4               	movf	244,w,c
  8486  0186B4  220C               	addwfc	(btemp+11)^0,f,c
  8487  0186B6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8488  0186BC  0060  F033  FFE6   	movff	btemp+11,postinc1
  8489  0186C2  0E00               	movlw	0
  8490  0186C4  6EE6               	movwf	postinc1,c
  8491  0186C6  0E02               	movlw	2
  8492  0186C8  6EE6               	movwf	postinc1,c
  8493  0186CA  ECF6  F0CF         	call	_eaDogM_WriteStringAtPos	;wreg free
  8494  0186CE                     l1649:
  8495                           
  8496                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8497  0186CE  52E5               	movf	postdec1,f,c
  8498  0186D0  0012               	return		;funcret
  8499  0186D2                     __end_of_update_lcd:
  8500                           	opt callstack 0
  8501                           
  8502 ;; *************** function _eaDogM_WriteStringAtPos *****************
  8503 ;; Defined at:
  8504 ;;		line 278 in file "eadog.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;  r               1  [STACK] const unsigned char 
  8507 ;;  c               1  [STACK] const unsigned char 
  8508 ;;  strPtr          2  [STACK] PTR unsigned char 
  8509 ;;		 -> D.lcd(288), D(290), V(188), 
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;		None
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  1  [STACK] void 
  8514 ;; Registers used:
  8515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8516 ;; Tracked objects:
  8517 ;;		On entry : 3F/0
  8518 ;;		On exit  : 3F/3B
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8525 ;;Total ram usage:        0 bytes
  8526 ;; Hardware stack levels used:    1
  8527 ;; Hardware stack levels required when called:   25
  8528 ;; This function calls:
  8529 ;;		_eaDogM_WriteString
  8530 ;;		_send_lcd_cmd_dma
  8531 ;; This function is called by:
  8532 ;;		_update_lcd
  8533 ;;		_vterm_dump
  8534 ;; This function uses a reentrant model
  8535 ;;
  8536                           
  8537                           	psect	text32
  8538  019FEC                     __ptext32:
  8539                           	opt callstack 0
  8540  019FEC                     _eaDogM_WriteStringAtPos:
  8541                           	opt callstack 4
  8542                           
  8543                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  8544                           ;stkvar	_c @ sp[(0)+-2]
  8545                           
  8546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8547                           ;incstack = 0
  8548  019FEC  0EFE               	movlw	-2
  8549  019FEE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8550                           
  8551                           ;stkvar	_r @ sp[(0)+-1]
  8552  019FF4  0EFF               	movlw	-1
  8553  019FF6  50E3               	movf	plusw1,w,c
  8554  019FF8  0D10               	mullw	16
  8555  019FFA  50F3               	movf	243,w,c
  8556  019FFC  240C               	addwf	(btemp+11)^0,w,c
  8557  019FFE  0F80               	addlw	128
  8558  01A000  6EE6               	movwf	postinc1,c
  8559  01A002  EC43  F0CD         	call	_send_lcd_cmd_dma	;wreg free
  8560                           
  8561                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  8562                           ;stkvar	_strPtr @ sp[(0)+-4]
  8563  01A006  0EFC               	movlw	-4
  8564  01A008  006F FF8F FFE6     	movff	plusw1,postinc1
  8565  01A00E  006F FF8F FFE6     	movff	plusw1,postinc1
  8566  01A014  EC09  F0C8         	call	_eaDogM_WriteString	;wreg free
  8567                           
  8568                           ; BSR set to: 59
  8569                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  8570  01A018  52E5               	movf	postdec1,f,c
  8571  01A01A  52E5               	movf	postdec1,f,c
  8572  01A01C  52E5               	movf	postdec1,f,c
  8573  01A01E  52E5               	movf	postdec1,f,c
  8574  01A020  0012               	return		;funcret
  8575  01A022                     __end_of_eaDogM_WriteStringAtPos:
  8576                           	opt callstack 0
  8577                           
  8578 ;; *************** function _send_lcd_cmd_dma *****************
  8579 ;; Defined at:
  8580 ;;		line 220 in file "eadog.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;  strPtr          1  [STACK] unsigned char 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;		None
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  1  [STACK] void 
  8587 ;; Registers used:
  8588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/3D
  8591 ;;		On exit  : 3F/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8598 ;;Total ram usage:        0 bytes
  8599 ;; Hardware stack levels used:    1
  8600 ;; Hardware stack levels required when called:   24
  8601 ;; This function calls:
  8602 ;;		_printf
  8603 ;;		_ringBufS_flush
  8604 ;;		_start_lcd
  8605 ;;		_wait_lcd_done
  8606 ;;		_wait_lcd_set
  8607 ;; This function is called by:
  8608 ;;		_eaDogM_WriteCommand
  8609 ;;		_eaDogM_WriteStringAtPos
  8610 ;; This function uses a reentrant model
  8611 ;;
  8612                           
  8613                           	psect	text33
  8614  019A86                     __ptext33:
  8615                           	opt callstack 0
  8616  019A86                     _send_lcd_cmd_dma:
  8617                           	opt callstack 4
  8618                           
  8619                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  8620                           
  8621                           ; BSR set to: 59
  8622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8623                           ;incstack = 0
  8624  019A86  EC70  F0D4         	call	_wait_lcd_set	;wreg free
  8625                           
  8626                           ; BSR set to: 0
  8627                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  8628  019A8A  0E00               	movlw	0
  8629  019A8C  6EE6               	movwf	postinc1,c
  8630  019A8E  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  8631  019A94  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  8632  019A9A  EC44  F0C9         	call	_ringBufS_flush	;wreg free
  8633  019A9E  92BC               	bcf	188,1,c	;volatile
  8634  019AA0  94BC               	bcf	188,2,c	;volatile
  8635                           
  8636                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  8637  019AA2  013B               	movlb	59	; () banked
  8638  019AA4  9FFC               	bcf	252,7,b	;volatile
  8639                           
  8640                           ; BSR set to: 59
  8641                           ;eadog.c: 229:  DMA1SSZ = 1;
  8642  019AA6  0E00               	movlw	0
  8643  019AA8  6FF8               	movwf	248,b	;volatile
  8644  019AAA  0E01               	movlw	1
  8645  019AAC  6FF7               	movwf	247,b	;volatile
  8646                           
  8647                           ; BSR set to: 59
  8648                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  8649  019AAE  8FFC               	bsf	252,7,b	;volatile
  8650                           
  8651                           ; BSR set to: 59
  8652                           ;eadog.c: 231:  printf("%c", strPtr);
  8653                           ;stkvar	_strPtr @ sp[(0)+-1]
  8654  019AB0  0EFF               	movlw	-1
  8655  019AB2  50E3               	movf	plusw1,w,c
  8656  019AB4  6EE6               	movwf	postinc1,c
  8657  019AB6  0E00               	movlw	0
  8658  019AB8  6EE6               	movwf	postinc1,c
  8659  019ABA  0EF9               	movlw	low STR_25
  8660  019ABC  6EE6               	movwf	postinc1,c
  8661  019ABE  0EFF               	movlw	high STR_25
  8662  019AC0  6EE6               	movwf	postinc1,c
  8663  019AC2  0E04               	movlw	4
  8664  019AC4  6EE6               	movwf	postinc1,c
  8665  019AC6  EC5B  F0CC         	call	_printf	;wreg free
  8666                           
  8667                           ; BSR set to: 0
  8668                           ;eadog.c: 232:  start_lcd();
  8669  019ACA  EC73  F0D4         	call	_start_lcd	;wreg free
  8670                           
  8671                           ; BSR set to: 59
  8672                           ;eadog.c: 233:  wait_lcd_done();
  8673  019ACE  EC92  F0D3         	call	_wait_lcd_done	;wreg free
  8674                           
  8675                           ; BSR set to: 0
  8676  019AD2  82BC               	bsf	188,1,c	;volatile
  8677                           
  8678                           ; BSR set to: 0
  8679                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8680  019AD4  52E5               	movf	postdec1,f,c
  8681  019AD6  0012               	return		;funcret
  8682  019AD8                     __end_of_send_lcd_cmd_dma:
  8683                           	opt callstack 0
  8684                           
  8685 ;; *************** function _wait_lcd_done *****************
  8686 ;; Defined at:
  8687 ;;		line 156 in file "eadog.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;		None
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;		None
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  1  [STACK] void 
  8694 ;; Registers used:
  8695 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 3F/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8705 ;;Total ram usage:        0 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; Hardware stack levels required when called:   16
  8708 ;; This function calls:
  8709 ;;		_wdtdelay
  8710 ;; This function is called by:
  8711 ;;		_send_lcd_cmd_dma
  8712 ;;		_update_lcd
  8713 ;;		_vterm_dump
  8714 ;; This function uses a reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text34
  8718  01A724                     __ptext34:
  8719                           	opt callstack 0
  8720  01A724                     _wait_lcd_done:
  8721                           	opt callstack 13
  8722                           
  8723                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  8724                           
  8725                           ; BSR set to: 0
  8726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8727                           ;incstack = 0
  8728  01A724  0100               	movlb	0	; () banked
  8729  01A726  B789               	btfsc	_spi_link& (0+255),3,b	;volatile
  8730  01A728  D7FD               	goto	_wait_lcd_done
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;eadog.c: 159:  wdtdelay(50);
  8734  01A72A  0E32               	movlw	50
  8735  01A72C  6EE6               	movwf	postinc1,c
  8736  01A72E  0E00               	movlw	0
  8737  01A730  6EE6               	movwf	postinc1,c
  8738  01A732  0E00               	movlw	0
  8739  01A734  6EE6               	movwf	postinc1,c
  8740  01A736  0E00               	movlw	0
  8741  01A738  6EE6               	movwf	postinc1,c
  8742  01A73A  ECBB  F0CC         	call	_wdtdelay	;wreg free
  8743                           
  8744                           ; BSR set to: 0
  8745                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8746  01A73E  0012               	return		;funcret
  8747  01A740                     __end_of_wait_lcd_done:
  8748                           	opt callstack 0
  8749                           
  8750 ;; *************** function _wdtdelay *****************
  8751 ;; Defined at:
  8752 ;;		line 23 in file "eadog.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;  delay           4  [STACK] const unsigned long 
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;		None
  8757 ;; Return value:  Size  Location     Type
  8758 ;;                  1  [STACK] void 
  8759 ;; Registers used:
  8760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8761 ;; Tracked objects:
  8762 ;;		On entry : 0/0
  8763 ;;		On exit  : 3F/0
  8764 ;;		Unchanged: 0/0
  8765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8770 ;;Total ram usage:        0 bytes
  8771 ;; Hardware stack levels used:    1
  8772 ;; Hardware stack levels required when called:   15
  8773 ;; This function calls:
  8774 ;;		Nothing
  8775 ;; This function is called by:
  8776 ;;		_init_display
  8777 ;;		_send_lcd_cmd
  8778 ;;		_send_lcd_cmd_long
  8779 ;;		_wait_lcd_done
  8780 ;; This function uses a reentrant model
  8781 ;;
  8782                           
  8783                           	psect	text35
  8784  019976                     __ptext35:
  8785                           	opt callstack 0
  8786  019976                     _wdtdelay:
  8787                           	opt callstack 13
  8788                           
  8789                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  8790                           
  8791                           ; BSR set to: 0
  8792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8793                           ;incstack = 0
  8794  019976  0100               	movlb	0	; () banked
  8795  019978  6BA1               	clrf	wdtdelay@dcount& (0+255),b
  8796  01997A  6BA2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  8797  01997C  6BA3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  8798  01997E  6BA4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  8799  019980                     l1414:
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;eadog.c: 28:   __nop();
  8803  019980  F000               	nop	
  8804  019982  0004               	clrwdt		;# 
  8805                           
  8806                           ;eadog.c: 30:  };
  8807  019984  0E01               	movlw	1
  8808  019986  0100               	movlb	0	; () banked
  8809  019988  27A1               	addwf	wdtdelay@dcount& (0+255),f,b
  8810  01998A  0E00               	movlw	0
  8811  01998C  23A2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  8812  01998E  23A3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  8813  019990  23A4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;stkvar	_delay @ sp[(0)+-4]
  8817  019992  0EFC               	movlw	-4
  8818  019994  006F FF8C  F001    	movff	plusw1,btemp
  8819  01999A  51A1               	movf	wdtdelay@dcount& (0+255),w,b
  8820  01999C  5C01               	subwf	btemp^0,w,c
  8821  01999E  0EFD               	movlw	-3
  8822  0199A0  006F FF8C  F001    	movff	plusw1,btemp
  8823  0199A6  51A2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  8824  0199A8  5801               	subwfb	btemp^0,w,c
  8825  0199AA  0EFE               	movlw	-2
  8826  0199AC  006F FF8C  F001    	movff	plusw1,btemp
  8827  0199B2  51A3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  8828  0199B4  5801               	subwfb	btemp^0,w,c
  8829  0199B6  0EFF               	movlw	-1
  8830  0199B8  006F FF8C  F001    	movff	plusw1,btemp
  8831  0199BE  51A4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  8832  0199C0  5801               	subwfb	btemp^0,w,c
  8833  0199C2  B0D8               	btfsc	status,0,c
  8834  0199C4  D7DD               	goto	l1414
  8835                           
  8836                           ; BSR set to: 0
  8837                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  8838  0199C6  52E5               	movf	postdec1,f,c
  8839  0199C8  52E5               	movf	postdec1,f,c
  8840  0199CA  52E5               	movf	postdec1,f,c
  8841  0199CC  52E5               	movf	postdec1,f,c
  8842  0199CE  0012               	return		;funcret
  8843  0199D0                     __end_of_wdtdelay:
  8844                           	opt callstack 0
  8845                           
  8846 ;; *************** function _eaDogM_WriteString *****************
  8847 ;; Defined at:
  8848 ;;		line 199 in file "eadog.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;  strPtr          2  [STACK] PTR unsigned char 
  8851 ;;		 -> D.lcd(288), D(290), V(188), 
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;		None
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  1  [STACK] void 
  8856 ;; Registers used:
  8857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8858 ;; Tracked objects:
  8859 ;;		On entry : 3F/0
  8860 ;;		On exit  : 3F/3B
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8867 ;;Total ram usage:        0 bytes
  8868 ;; Hardware stack levels used:    1
  8869 ;; Hardware stack levels required when called:   24
  8870 ;; This function calls:
  8871 ;;		_printf
  8872 ;;		_ringBufS_flush
  8873 ;;		_start_lcd
  8874 ;;		_strlen
  8875 ;;		_wait_lcd_set
  8876 ;; This function is called by:
  8877 ;;		_eaDogM_WriteStringAtPos
  8878 ;; This function uses a reentrant model
  8879 ;;
  8880                           
  8881                           	psect	text36
  8882  019012                     __ptext36:
  8883                           	opt callstack 0
  8884  019012                     _eaDogM_WriteString:
  8885                           	opt callstack 4
  8886                           
  8887                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
  8888                           
  8889                           ; BSR set to: 0
  8890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8891                           ;incstack = 0
  8892  019012  EC70  F0D4         	call	_wait_lcd_set	;wreg free
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
  8896  019016  0E00               	movlw	0
  8897  019018  6EE6               	movwf	postinc1,c
  8898  01901A  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  8899  019020  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  8900  019026  EC44  F0C9         	call	_ringBufS_flush	;wreg free
  8901  01902A  94BC               	bcf	188,2,c	;volatile
  8902                           
  8903                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  8904                           ;stkvar	_strPtr @ sp[(0)+-2]
  8905  01902C  0EFE               	movlw	-2
  8906  01902E  006F FF8F FFE6     	movff	plusw1,postinc1
  8907  019034  006F FF8F FFE6     	movff	plusw1,postinc1
  8908  01903A  EC5C  F0C8         	call	_strlen	;wreg free
  8909  01903E  5002               	movf	(btemp+1)^0,w,c
  8910  019040  E104               	bnz	u11540
  8911  019042  0E41               	movlw	65
  8912  019044  5C01               	subwf	btemp^0,w,c
  8913  019046  A0D8               	btfss	status,0,c
  8914  019048  D010               	goto	l11663
  8915  01904A                     u11540:
  8916                           
  8917                           ;stkvar	_strPtr @ sp[(0)+-2]
  8918  01904A  0EFE               	movlw	-2
  8919  01904C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8920  019052  0EFF               	movlw	-1
  8921  019054  006F FF8C  F00C    	movff	plusw1,btemp+11
  8922  01905A  0E40               	movlw	64
  8923  01905C  240B               	addwf	(btemp+10)^0,w,c
  8924  01905E  6ED9               	movwf	fsr2l,c
  8925  019060  0E00               	movlw	0
  8926  019062  200C               	addwfc	(btemp+11)^0,w,c
  8927  019064  6EDA               	movwf	fsr2h,c
  8928  019066  0E00               	movlw	0
  8929  019068  6EDF               	movwf	indf2,c
  8930  01906A                     l11663:
  8931                           
  8932                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
  8933  01906A  013B               	movlb	59	; () banked
  8934  01906C  9FFC               	bcf	252,7,b	;volatile
  8935                           
  8936                           ; BSR set to: 59
  8937                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
  8938                           ;stkvar	_strPtr @ sp[(0)+-2]
  8939  01906E  0EFE               	movlw	-2
  8940  019070  006F FF8F FFE6     	movff	plusw1,postinc1
  8941  019076  006F FF8F FFE6     	movff	plusw1,postinc1
  8942  01907C  EC5C  F0C8         	call	_strlen	;wreg free
  8943  019080  0060  F007  FBF7   	movff	btemp,15351	;volatile
  8944  019086  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  8945                           
  8946                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
  8947  01908C  013B               	movlb	59	; () banked
  8948  01908E  8FFC               	bsf	252,7,b	;volatile
  8949                           
  8950                           ; BSR set to: 59
  8951                           ;eadog.c: 210:  printf("%s", strPtr);
  8952                           ;stkvar	_strPtr @ sp[(0)+-2]
  8953  019090  0EFE               	movlw	-2
  8954  019092  006F FF8F FFE6     	movff	plusw1,postinc1
  8955  019098  006F FF8F FFE6     	movff	plusw1,postinc1
  8956  01909E  0EFC               	movlw	low STR_24
  8957  0190A0  6EE6               	movwf	postinc1,c
  8958  0190A2  0EFF               	movlw	high STR_24
  8959  0190A4  6EE6               	movwf	postinc1,c
  8960  0190A6  0E04               	movlw	4
  8961  0190A8  6EE6               	movwf	postinc1,c
  8962  0190AA  EC5B  F0CC         	call	_printf	;wreg free
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;eadog.c: 211:  start_lcd();
  8966  0190AE  EC73  F0D4         	call	_start_lcd	;wreg free
  8967                           
  8968                           ; BSR set to: 59
  8969                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  8970  0190B2  52E5               	movf	postdec1,f,c
  8971  0190B4  52E5               	movf	postdec1,f,c
  8972  0190B6  0012               	return		;funcret
  8973  0190B8                     __end_of_eaDogM_WriteString:
  8974                           	opt callstack 0
  8975                           
  8976 ;; *************** function _wait_lcd_set *****************
  8977 ;; Defined at:
  8978 ;;		line 146 in file "eadog.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;		None
  8981 ;; Auto vars:     Size  Location     Type
  8982 ;;		None
  8983 ;; Return value:  Size  Location     Type
  8984 ;;                  1  [STACK] void 
  8985 ;; Registers used:
  8986 ;;		None
  8987 ;; Tracked objects:
  8988 ;;		On entry : 0/3D
  8989 ;;		On exit  : 3F/0
  8990 ;;		Unchanged: 0/0
  8991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8996 ;;Total ram usage:        0 bytes
  8997 ;; Hardware stack levels used:    1
  8998 ;; Hardware stack levels required when called:   15
  8999 ;; This function calls:
  9000 ;;		Nothing
  9001 ;; This function is called by:
  9002 ;;		_eaDogM_WriteString
  9003 ;;		_send_lcd_cmd_dma
  9004 ;; This function uses a reentrant model
  9005 ;;
  9006                           
  9007                           	psect	text37
  9008  01A8E0                     __ptext37:
  9009                           	opt callstack 0
  9010  01A8E0                     _wait_lcd_set:
  9011                           	opt callstack 12
  9012                           
  9013                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
  9014                           
  9015                           ; BSR set to: 59
  9016                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9017                           ;incstack = 0
  9018  01A8E0  0100               	movlb	0	; () banked
  9019  01A8E2  8789               	bsf	_spi_link& (0+255),3,b	;volatile
  9020                           
  9021                           ; BSR set to: 0
  9022                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9023  01A8E4  0012               	return		;funcret
  9024  01A8E6                     __end_of_wait_lcd_set:
  9025                           	opt callstack 0
  9026                           
  9027 ;; *************** function _start_lcd *****************
  9028 ;; Defined at:
  9029 ;;		line 141 in file "eadog.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;		None
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;		None
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  1  [STACK] void 
  9036 ;; Registers used:
  9037 ;;		None
  9038 ;; Tracked objects:
  9039 ;;		On entry : 3F/0
  9040 ;;		On exit  : 3F/3B
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9047 ;;Total ram usage:        0 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:   15
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_eaDogM_WriteString
  9054 ;;		_send_lcd_cmd_dma
  9055 ;; This function uses a reentrant model
  9056 ;;
  9057                           
  9058                           	psect	text38
  9059  01A8E6                     __ptext38:
  9060                           	opt callstack 0
  9061  01A8E6                     _start_lcd:
  9062                           	opt callstack 12
  9063                           
  9064                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
  9065                           
  9066                           ; BSR set to: 0
  9067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9068                           ;incstack = 0
  9069  01A8E6  013B               	movlb	59	; () banked
  9070  01A8E8  8DFC               	bsf	252,6,b	;volatile
  9071                           
  9072                           ; BSR set to: 59
  9073                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9074  01A8EA  0012               	return		;funcret
  9075  01A8EC                     __end_of_start_lcd:
  9076                           	opt callstack 0
  9077                           
  9078 ;; *************** function _ringBufS_flush *****************
  9079 ;; Defined at:
  9080 ;;		line 76 in file "ringbufs.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9083 ;;		 -> ring_buf1(67), 
  9084 ;;  clearBuffer     1  [STACK] const char 
  9085 ;; Auto vars:     Size  Location     Type
  9086 ;;		None
  9087 ;; Return value:  Size  Location     Type
  9088 ;;                  1  [STACK] void 
  9089 ;; Registers used:
  9090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9091 ;; Tracked objects:
  9092 ;;		On entry : 3F/0
  9093 ;;		On exit  : 0/0
  9094 ;;		Unchanged: 0/0
  9095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9100 ;;Total ram usage:        0 bytes
  9101 ;; Hardware stack levels used:    1
  9102 ;; Hardware stack levels required when called:   16
  9103 ;; This function calls:
  9104 ;;		_memset
  9105 ;; This function is called by:
  9106 ;;		_eaDogM_WriteString
  9107 ;;		_send_lcd_cmd_dma
  9108 ;; This function uses a reentrant model
  9109 ;;
  9110                           
  9111                           	psect	text39
  9112  019288                     __ptext39:
  9113                           	opt callstack 0
  9114  019288                     _ringBufS_flush:
  9115                           	opt callstack 11
  9116                           
  9117                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9118                           ;stkvar	__this @ sp[(0)+-2]
  9119                           
  9120                           ; BSR set to: 59
  9121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9122                           ;incstack = 0
  9123  019288  0EFE               	movlw	-2
  9124  01928A  006F FF8C  F00B    	movff	plusw1,btemp+10
  9125  019290  0EFF               	movlw	-1
  9126  019292  006F FF8C  F00C    	movff	plusw1,btemp+11
  9127  019298  0E42               	movlw	66
  9128  01929A  240B               	addwf	(btemp+10)^0,w,c
  9129  01929C  6ED9               	movwf	fsr2l,c
  9130  01929E  0E00               	movlw	0
  9131  0192A0  200C               	addwfc	(btemp+11)^0,w,c
  9132  0192A2  6EDA               	movwf	fsr2h,c
  9133  0192A4  0E00               	movlw	0
  9134  0192A6  6EDF               	movwf	indf2,c
  9135                           
  9136                           ;ringbufs.c: 79:  _this->head = 0;
  9137                           ;stkvar	__this @ sp[(0)+-2]
  9138  0192A8  0EFE               	movlw	-2
  9139  0192AA  006F FF8C  F00B    	movff	plusw1,btemp+10
  9140  0192B0  0EFF               	movlw	-1
  9141  0192B2  006F FF8C  F00C    	movff	plusw1,btemp+11
  9142  0192B8  0E40               	movlw	64
  9143  0192BA  240B               	addwf	(btemp+10)^0,w,c
  9144  0192BC  6ED9               	movwf	fsr2l,c
  9145  0192BE  0E00               	movlw	0
  9146  0192C0  200C               	addwfc	(btemp+11)^0,w,c
  9147  0192C2  6EDA               	movwf	fsr2h,c
  9148  0192C4  0E00               	movlw	0
  9149  0192C6  6EDF               	movwf	indf2,c
  9150                           
  9151                           ;ringbufs.c: 80:  _this->tail = 0;
  9152                           ;stkvar	__this @ sp[(0)+-2]
  9153  0192C8  0EFE               	movlw	-2
  9154  0192CA  006F FF8C  F00B    	movff	plusw1,btemp+10
  9155  0192D0  0EFF               	movlw	-1
  9156  0192D2  006F FF8C  F00C    	movff	plusw1,btemp+11
  9157  0192D8  0E41               	movlw	65
  9158  0192DA  240B               	addwf	(btemp+10)^0,w,c
  9159  0192DC  6ED9               	movwf	fsr2l,c
  9160  0192DE  0E00               	movlw	0
  9161  0192E0  200C               	addwfc	(btemp+11)^0,w,c
  9162  0192E2  6EDA               	movwf	fsr2h,c
  9163  0192E4  0E00               	movlw	0
  9164  0192E6  6EDF               	movwf	indf2,c
  9165                           
  9166                           ;ringbufs.c: 81:  if (clearBuffer) {
  9167                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9168  0192E8  0EFD               	movlw	-3
  9169  0192EA  50E3               	movf	plusw1,w,c
  9170  0192EC  B4D8               	btfsc	status,2,c
  9171  0192EE  D011               	goto	l1558
  9172                           
  9173                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9174  0192F0  0E40               	movlw	64
  9175  0192F2  6EE6               	movwf	postinc1,c
  9176  0192F4  0E00               	movlw	0
  9177  0192F6  6EE6               	movwf	postinc1,c
  9178  0192F8  0E00               	movlw	0
  9179  0192FA  6EE6               	movwf	postinc1,c
  9180  0192FC  0E00               	movlw	0
  9181  0192FE  6EE6               	movwf	postinc1,c
  9182                           
  9183                           ;stkvar	__this @ sp[(-4)+-2]
  9184  019300  0EFA               	movlw	-6
  9185  019302  006F FF8F FFE6     	movff	plusw1,postinc1
  9186  019308  006F FF8F FFE6     	movff	plusw1,postinc1
  9187  01930E  EC8B  F0AD         	call	_memset	;wreg free
  9188  019312                     l1558:
  9189                           
  9190                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9191  019312  52E5               	movf	postdec1,f,c
  9192  019314  52E5               	movf	postdec1,f,c
  9193  019316  52E5               	movf	postdec1,f,c
  9194  019318  0012               	return		;funcret
  9195  01931A                     __end_of_ringBufS_flush:
  9196                           	opt callstack 0
  9197                           
  9198 ;; *************** function _memset *****************
  9199 ;; Defined at:
  9200 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;  dest            2  [STACK] PTR void 
  9203 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9204 ;;  c               2  [STACK] int 
  9205 ;;  n               2  [STACK] unsigned int 
  9206 ;; Auto vars:     Size  Location     Type
  9207 ;;  s               2  [STACK] PTR unsigned char 
  9208 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9209 ;;  k               2  [STACK] unsigned int 
  9210 ;; Return value:  Size  Location     Type
  9211 ;;                  2  [STACK] PTR void 
  9212 ;; Registers used:
  9213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9214 ;; Tracked objects:
  9215 ;;		On entry : 0/0
  9216 ;;		On exit  : 0/0
  9217 ;;		Unchanged: 0/0
  9218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9223 ;;Total ram usage:        0 bytes
  9224 ;; Hardware stack levels used:    1
  9225 ;; Hardware stack levels required when called:   15
  9226 ;; This function calls:
  9227 ;;		Nothing
  9228 ;; This function is called by:
  9229 ;;		_ringBufS_init
  9230 ;;		_ringBufS_flush
  9231 ;; This function uses a reentrant model
  9232 ;;
  9233                           
  9234                           	psect	text40
  9235  015B16                     __ptext40:
  9236                           	opt callstack 0
  9237  015B16                     _memset:
  9238                           	opt callstack 0
  9239                           
  9240                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9241  015B16  52E6               	movf	postinc1,f,c
  9242  015B18  52E6               	movf	postinc1,f,c
  9243  015B1A  52E6               	movf	postinc1,f,c
  9244  015B1C  52E6               	movf	postinc1,f,c
  9245                           
  9246                           ;stkvar	_dest @ sp[(-4)+-2]
  9247                           
  9248                           ;incstack = 0
  9249  015B1E  0EFA               	movlw	-6
  9250  015B20  006F FF8C  F00B    	movff	plusw1,btemp+10
  9251  015B26  0EFB               	movlw	-5
  9252  015B28  006F FF8C  F00C    	movff	plusw1,btemp+11
  9253                           
  9254                           ;stkvar	_s @ sp[(-4)+0]
  9255  015B2E  0EFD               	movlw	-3
  9256  015B30  0060  F033  FFE3   	movff	btemp+11,plusw1
  9257  015B36  0EFC               	movlw	-4
  9258  015B38  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9259                           
  9260                           ;stkvar	_n @ sp[(-4)+-6]
  9261  015B3E  0EF6               	movlw	-10
  9262  015B40  006F FF8C  F001    	movff	plusw1,btemp
  9263  015B46  0EF7               	movlw	-9
  9264  015B48  50E3               	movf	plusw1,w,c
  9265  015B4A  1001               	iorwf	btemp^0,w,c
  9266  015B4C  B4D8               	btfsc	status,2,c
  9267  015B4E  D154               	goto	u10140
  9268                           
  9269                           ;stkvar	_c @ sp[(-4)+-4]
  9270                           ;stkvar	_s @ sp[(-4)+0]
  9271  015B50  0EFC               	movlw	-4
  9272  015B52  006F FF8F FFD9     	movff	plusw1,fsr2l
  9273  015B58  0EFD               	movlw	-3
  9274  015B5A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9275  015B60  0EF8               	movlw	-8
  9276  015B62  006F FF8F FFDF     	movff	plusw1,indf2
  9277                           
  9278                           ;stkvar	_c @ sp[(-4)+-4]
  9279                           ;stkvar	_n @ sp[(-4)+-6]
  9280                           ;stkvar	_s @ sp[(-4)+0]
  9281  015B68  0EFC               	movlw	-4
  9282  015B6A  006F FF8C  F00B    	movff	plusw1,btemp+10
  9283  015B70  0EFD               	movlw	-3
  9284  015B72  006F FF8C  F00C    	movff	plusw1,btemp+11
  9285  015B78  0EF6               	movlw	-10
  9286  015B7A  50E3               	movf	plusw1,w,c
  9287  015B7C  260B               	addwf	(btemp+10)^0,f,c
  9288  015B7E  0EF7               	movlw	-9
  9289  015B80  50E3               	movf	plusw1,w,c
  9290  015B82  220C               	addwfc	(btemp+11)^0,f,c
  9291  015B84  0EFF               	movlw	255
  9292  015B86  240B               	addwf	(btemp+10)^0,w,c
  9293  015B88  6ED9               	movwf	fsr2l,c
  9294  015B8A  0EFF               	movlw	255
  9295  015B8C  200C               	addwfc	(btemp+11)^0,w,c
  9296  015B8E  6EDA               	movwf	fsr2h,c
  9297  015B90  0EF8               	movlw	-8
  9298  015B92  006F FF8F FFDF     	movff	plusw1,indf2
  9299                           
  9300                           ;stkvar	_n @ sp[(-4)+-6]
  9301  015B98  0EF7               	movlw	-9
  9302  015B9A  50E3               	movf	plusw1,w,c
  9303  015B9C  E108               	bnz	l10831
  9304  015B9E  0EF6               	movlw	-10
  9305  015BA0  006F FF8C  F001    	movff	plusw1,btemp
  9306  015BA6  0E03               	movlw	3
  9307  015BA8  5E01               	subwf	btemp^0,f,c
  9308  015BAA  A0D8               	btfss	status,0,c
  9309  015BAC  D125               	goto	u10140
  9310  015BAE                     l10831:
  9311                           
  9312                           ;stkvar	_c @ sp[(-4)+-4]
  9313                           ;stkvar	_s @ sp[(-4)+0]
  9314  015BAE  0EFC               	movlw	-4
  9315  015BB0  006F FF8C  F00B    	movff	plusw1,btemp+10
  9316  015BB6  0EFD               	movlw	-3
  9317  015BB8  006F FF8C  F00C    	movff	plusw1,btemp+11
  9318  015BBE  0E01               	movlw	1
  9319  015BC0  240B               	addwf	(btemp+10)^0,w,c
  9320  015BC2  6ED9               	movwf	fsr2l,c
  9321  015BC4  0E00               	movlw	0
  9322  015BC6  200C               	addwfc	(btemp+11)^0,w,c
  9323  015BC8  6EDA               	movwf	fsr2h,c
  9324  015BCA  0EF8               	movlw	-8
  9325  015BCC  006F FF8F FFDF     	movff	plusw1,indf2
  9326                           
  9327                           ;stkvar	_c @ sp[(-4)+-4]
  9328                           ;stkvar	_s @ sp[(-4)+0]
  9329  015BD2  0EFC               	movlw	-4
  9330  015BD4  006F FF8C  F00B    	movff	plusw1,btemp+10
  9331  015BDA  0EFD               	movlw	-3
  9332  015BDC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9333  015BE2  0E02               	movlw	2
  9334  015BE4  240B               	addwf	(btemp+10)^0,w,c
  9335  015BE6  6ED9               	movwf	fsr2l,c
  9336  015BE8  0E00               	movlw	0
  9337  015BEA  200C               	addwfc	(btemp+11)^0,w,c
  9338  015BEC  6EDA               	movwf	fsr2h,c
  9339  015BEE  0EF8               	movlw	-8
  9340  015BF0  006F FF8F FFDF     	movff	plusw1,indf2
  9341                           
  9342                           ;stkvar	_c @ sp[(-4)+-4]
  9343                           ;stkvar	_n @ sp[(-4)+-6]
  9344                           ;stkvar	_s @ sp[(-4)+0]
  9345  015BF6  0EFC               	movlw	-4
  9346  015BF8  006F FF8C  F00B    	movff	plusw1,btemp+10
  9347  015BFE  0EFD               	movlw	-3
  9348  015C00  006F FF8C  F00C    	movff	plusw1,btemp+11
  9349  015C06  0EF6               	movlw	-10
  9350  015C08  50E3               	movf	plusw1,w,c
  9351  015C0A  260B               	addwf	(btemp+10)^0,f,c
  9352  015C0C  0EF7               	movlw	-9
  9353  015C0E  50E3               	movf	plusw1,w,c
  9354  015C10  220C               	addwfc	(btemp+11)^0,f,c
  9355  015C12  0EFE               	movlw	254
  9356  015C14  240B               	addwf	(btemp+10)^0,w,c
  9357  015C16  6ED9               	movwf	fsr2l,c
  9358  015C18  0EFF               	movlw	255
  9359  015C1A  200C               	addwfc	(btemp+11)^0,w,c
  9360  015C1C  6EDA               	movwf	fsr2h,c
  9361  015C1E  0EF8               	movlw	-8
  9362  015C20  006F FF8F FFDF     	movff	plusw1,indf2
  9363                           
  9364                           ;stkvar	_c @ sp[(-4)+-4]
  9365                           ;stkvar	_n @ sp[(-4)+-6]
  9366                           ;stkvar	_s @ sp[(-4)+0]
  9367  015C26  0EFC               	movlw	-4
  9368  015C28  006F FF8C  F00B    	movff	plusw1,btemp+10
  9369  015C2E  0EFD               	movlw	-3
  9370  015C30  006F FF8C  F00C    	movff	plusw1,btemp+11
  9371  015C36  0EF6               	movlw	-10
  9372  015C38  50E3               	movf	plusw1,w,c
  9373  015C3A  260B               	addwf	(btemp+10)^0,f,c
  9374  015C3C  0EF7               	movlw	-9
  9375  015C3E  50E3               	movf	plusw1,w,c
  9376  015C40  220C               	addwfc	(btemp+11)^0,f,c
  9377  015C42  0EFD               	movlw	253
  9378  015C44  240B               	addwf	(btemp+10)^0,w,c
  9379  015C46  6ED9               	movwf	fsr2l,c
  9380  015C48  0EFF               	movlw	255
  9381  015C4A  200C               	addwfc	(btemp+11)^0,w,c
  9382  015C4C  6EDA               	movwf	fsr2h,c
  9383  015C4E  0EF8               	movlw	-8
  9384  015C50  006F FF8F FFDF     	movff	plusw1,indf2
  9385                           
  9386                           ;stkvar	_n @ sp[(-4)+-6]
  9387  015C56  0EF7               	movlw	-9
  9388  015C58  50E3               	movf	plusw1,w,c
  9389  015C5A  E108               	bnz	l10837
  9390  015C5C  0EF6               	movlw	-10
  9391  015C5E  006F FF8C  F001    	movff	plusw1,btemp
  9392  015C64  0E07               	movlw	7
  9393  015C66  5E01               	subwf	btemp^0,f,c
  9394  015C68  A0D8               	btfss	status,0,c
  9395  015C6A  D0C6               	goto	u10140
  9396  015C6C                     l10837:
  9397                           
  9398                           ;stkvar	_c @ sp[(-4)+-4]
  9399                           ;stkvar	_s @ sp[(-4)+0]
  9400  015C6C  0EFC               	movlw	-4
  9401  015C6E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9402  015C74  0EFD               	movlw	-3
  9403  015C76  006F FF8C  F00C    	movff	plusw1,btemp+11
  9404  015C7C  0E03               	movlw	3
  9405  015C7E  240B               	addwf	(btemp+10)^0,w,c
  9406  015C80  6ED9               	movwf	fsr2l,c
  9407  015C82  0E00               	movlw	0
  9408  015C84  200C               	addwfc	(btemp+11)^0,w,c
  9409  015C86  6EDA               	movwf	fsr2h,c
  9410  015C88  0EF8               	movlw	-8
  9411  015C8A  006F FF8F FFDF     	movff	plusw1,indf2
  9412                           
  9413                           ;stkvar	_c @ sp[(-4)+-4]
  9414                           ;stkvar	_n @ sp[(-4)+-6]
  9415                           ;stkvar	_s @ sp[(-4)+0]
  9416  015C90  0EFC               	movlw	-4
  9417  015C92  006F FF8C  F00B    	movff	plusw1,btemp+10
  9418  015C98  0EFD               	movlw	-3
  9419  015C9A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9420  015CA0  0EF6               	movlw	-10
  9421  015CA2  50E3               	movf	plusw1,w,c
  9422  015CA4  260B               	addwf	(btemp+10)^0,f,c
  9423  015CA6  0EF7               	movlw	-9
  9424  015CA8  50E3               	movf	plusw1,w,c
  9425  015CAA  220C               	addwfc	(btemp+11)^0,f,c
  9426  015CAC  0EFC               	movlw	252
  9427  015CAE  240B               	addwf	(btemp+10)^0,w,c
  9428  015CB0  6ED9               	movwf	fsr2l,c
  9429  015CB2  0EFF               	movlw	255
  9430  015CB4  200C               	addwfc	(btemp+11)^0,w,c
  9431  015CB6  6EDA               	movwf	fsr2h,c
  9432  015CB8  0EF8               	movlw	-8
  9433  015CBA  006F FF8F FFDF     	movff	plusw1,indf2
  9434                           
  9435                           ;stkvar	_n @ sp[(-4)+-6]
  9436  015CC0  0EF7               	movlw	-9
  9437  015CC2  50E3               	movf	plusw1,w,c
  9438  015CC4  E108               	bnz	l10843
  9439  015CC6  0EF6               	movlw	-10
  9440  015CC8  006F FF8C  F001    	movff	plusw1,btemp
  9441  015CCE  0E09               	movlw	9
  9442  015CD0  5E01               	subwf	btemp^0,f,c
  9443  015CD2  A0D8               	btfss	status,0,c
  9444  015CD4  D091               	goto	u10140
  9445  015CD6                     l10843:
  9446                           
  9447                           ;stkvar	_s @ sp[(-4)+0]
  9448  015CD6  0EFC               	movlw	-4
  9449  015CD8  006F FF8C  F00B    	movff	plusw1,btemp+10
  9450  015CDE  1E0B               	comf	(btemp+10)^0,f,c
  9451  015CE0  0EFD               	movlw	-3
  9452  015CE2  006F FF8C  F00C    	movff	plusw1,btemp+11
  9453  015CE8  1E0C               	comf	(btemp+11)^0,f,c
  9454  015CEA  2A0B               	incf	(btemp+10)^0,f,c
  9455  015CEC  B4D8               	btfsc	status,2,c
  9456  015CEE  2A0C               	incf	(btemp+11)^0,f,c
  9457  015CF0  0E03               	movlw	3
  9458  015CF2  160B               	andwf	(btemp+10)^0,f,c
  9459  015CF4  0E00               	movlw	0
  9460  015CF6  160C               	andwf	(btemp+11)^0,f,c
  9461                           
  9462                           ;stkvar	_k @ sp[(-4)+2]
  9463  015CF8  0EFE               	movlw	-2
  9464  015CFA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9465  015D00  0EFF               	movlw	-1
  9466  015D02  0060  F033  FFE3   	movff	btemp+11,plusw1
  9467                           
  9468                           ;stkvar	_k @ sp[(-4)+2]
  9469                           ;stkvar	_s @ sp[(-4)+0]
  9470  015D08  0EFC               	movlw	-4
  9471  015D0A  50E3               	movf	plusw1,w,c
  9472  015D0C  6E01               	movwf	btemp^0,c
  9473  015D0E  0EFE               	movlw	-2
  9474  015D10  50E3               	movf	plusw1,w,c
  9475  015D12  2601               	addwf	btemp^0,f,c
  9476  015D14  0EFC               	movlw	-4
  9477  015D16  0060  F007  FFE3   	movff	btemp,plusw1
  9478  015D1C  0EFD               	movlw	-3
  9479  015D1E  50E3               	movf	plusw1,w,c
  9480  015D20  6E01               	movwf	btemp^0,c
  9481  015D22  0EFF               	movlw	-1
  9482  015D24  50E3               	movf	plusw1,w,c
  9483  015D26  2201               	addwfc	btemp^0,f,c
  9484  015D28  0EFD               	movlw	-3
  9485  015D2A  0060  F007  FFE3   	movff	btemp,plusw1
  9486                           
  9487                           ;stkvar	_k @ sp[(-4)+2]
  9488                           ;stkvar	_n @ sp[(-4)+-6]
  9489  015D30  0EF6               	movlw	-10
  9490  015D32  50E3               	movf	plusw1,w,c
  9491  015D34  6E01               	movwf	btemp^0,c
  9492  015D36  0EFE               	movlw	-2
  9493  015D38  50E3               	movf	plusw1,w,c
  9494  015D3A  5E01               	subwf	btemp^0,f,c
  9495  015D3C  0EF6               	movlw	-10
  9496  015D3E  0060  F007  FFE3   	movff	btemp,plusw1
  9497  015D44  0EF7               	movlw	-9
  9498  015D46  50E3               	movf	plusw1,w,c
  9499  015D48  6E01               	movwf	btemp^0,c
  9500  015D4A  0EFF               	movlw	-1
  9501  015D4C  50E3               	movf	plusw1,w,c
  9502  015D4E  5A01               	subwfb	btemp^0,f,c
  9503  015D50  0EF7               	movlw	-9
  9504  015D52  0060  F007  FFE3   	movff	btemp,plusw1
  9505  015D58  0EFC               	movlw	252
  9506  015D5A  6E0B               	movwf	(btemp+10)^0,c
  9507  015D5C  0EFF               	movlw	255
  9508  015D5E  6E0C               	movwf	(btemp+11)^0,c
  9509                           
  9510                           ;stkvar	_n @ sp[(-4)+-6]
  9511  015D60  0EF6               	movlw	-10
  9512  015D62  006F FF8C  F001    	movff	plusw1,btemp
  9513  015D68  500B               	movf	(btemp+10)^0,w,c
  9514  015D6A  1601               	andwf	btemp^0,f,c
  9515  015D6C  0EF6               	movlw	-10
  9516  015D6E  0060  F007  FFE3   	movff	btemp,plusw1
  9517  015D74  0EF7               	movlw	-9
  9518  015D76  006F FF8C  F001    	movff	plusw1,btemp
  9519  015D7C  500C               	movf	(btemp+11)^0,w,c
  9520  015D7E  1601               	andwf	btemp^0,f,c
  9521  015D80  0EF7               	movlw	-9
  9522  015D82  D02E               	goto	L6
  9523  015D84                     l10851:
  9524                           
  9525                           ;stkvar	_c @ sp[(-4)+-4]
  9526                           ;stkvar	_s @ sp[(-4)+0]
  9527  015D84  0EFC               	movlw	-4
  9528  015D86  006F FF8F FFD9     	movff	plusw1,fsr2l
  9529  015D8C  0EFD               	movlw	-3
  9530  015D8E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9531  015D94  0EF8               	movlw	-8
  9532  015D96  006F FF8F FFDF     	movff	plusw1,indf2
  9533                           
  9534                           ;stkvar	_n @ sp[(-4)+-6]
  9535  015D9C  0EF6               	movlw	-10
  9536  015D9E  006F FF8C  F001    	movff	plusw1,btemp
  9537  015DA4  0E01               	movlw	1
  9538  015DA6  5E01               	subwf	btemp^0,f,c
  9539  015DA8  0EF6               	movlw	-10
  9540  015DAA  0060  F007  FFE3   	movff	btemp,plusw1
  9541  015DB0  0EF7               	movlw	-9
  9542  015DB2  006F FF8C  F001    	movff	plusw1,btemp
  9543  015DB8  0E00               	movlw	0
  9544  015DBA  5A01               	subwfb	btemp^0,f,c
  9545  015DBC  0EF7               	movlw	-9
  9546  015DBE  0060  F007  FFE3   	movff	btemp,plusw1
  9547                           
  9548                           ;stkvar	_s @ sp[(-4)+0]
  9549  015DC4  0EFC               	movlw	-4
  9550  015DC6  50E3               	movf	plusw1,w,c
  9551  015DC8  0F01               	addlw	1
  9552  015DCA  6E01               	movwf	btemp^0,c
  9553  015DCC  0EFC               	movlw	-4
  9554  015DCE  0060  F007  FFE3   	movff	btemp,plusw1
  9555  015DD4  6A01               	clrf	btemp^0,c
  9556  015DD6  0EFD               	movlw	-3
  9557  015DD8  50E3               	movf	plusw1,w,c
  9558  015DDA  2001               	addwfc	btemp^0,w,c
  9559  015DDC  6E01               	movwf	btemp^0,c
  9560  015DDE  0EFD               	movlw	-3
  9561  015DE0                     L6:
  9562  015DE0  0060  F007  FFE3   	movff	btemp,plusw1
  9563                           
  9564                           ;stkvar	_n @ sp[(-4)+-6]
  9565  015DE6  0EF6               	movlw	-10
  9566  015DE8  006F FF8C  F001    	movff	plusw1,btemp
  9567  015DEE  0EF7               	movlw	-9
  9568  015DF0  50E3               	movf	plusw1,w,c
  9569  015DF2  1001               	iorwf	btemp^0,w,c
  9570  015DF4  A4D8               	btfss	status,2,c
  9571  015DF6  D7C6               	goto	l10851
  9572  015DF8                     u10140:
  9573                           
  9574                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9575  015DF8  0EF6               	movlw	246
  9576  015DFA  26E1               	addwf	fsr1l,f,c
  9577  015DFC  0EFF               	movlw	255
  9578  015DFE  22E2               	addwfc	fsr1h,f,c
  9579  015E00  0012               	return		;funcret
  9580  015E02                     __end_of_memset:
  9581                           	opt callstack 0
  9582                           
  9583 ;; *************** function _printf *****************
  9584 ;; Defined at:
  9585 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;  fmt             2  [STACK] PTR const unsigned char 
  9588 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  9589 ;; Auto vars:     Size  Location     Type
  9590 ;;  ap              2  [STACK] PTR void [1]
  9591 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9592 ;;  ret             2    0        int 
  9593 ;; Return value:  Size  Location     Type
  9594 ;;                  2  [STACK] int 
  9595 ;; Registers used:
  9596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9597 ;; Tracked objects:
  9598 ;;		On entry : 3F/3B
  9599 ;;		On exit  : 3F/0
  9600 ;;		Unchanged: 0/0
  9601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9606 ;;Total ram usage:        0 bytes
  9607 ;; Hardware stack levels used:    1
  9608 ;; Hardware stack levels required when called:   23
  9609 ;; This function calls:
  9610 ;;		_vfprintf
  9611 ;; This function is called by:
  9612 ;;		_eaDogM_WriteString
  9613 ;;		_send_lcd_cmd_dma
  9614 ;; This function uses a reentrant model
  9615 ;;
  9616                           
  9617                           	psect	text41
  9618  0198B6                     __ptext41:
  9619                           	opt callstack 0
  9620  0198B6                     _printf:
  9621                           	opt callstack 0
  9622                           
  9623                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9624  0198B6  52E6               	movf	postinc1,f,c
  9625  0198B8  52E6               	movf	postinc1,f,c
  9626                           
  9627                           ;stkvar	?_printf @ sp[(-2)+-3]
  9628                           
  9629                           ;incstack = 0
  9630  0198BA  0EFB               	movlw	251
  9631  0198BC  24E1               	addwf	fsr1l,w,c
  9632  0198BE  6E0B               	movwf	(btemp+10)^0,c
  9633  0198C0  0EFF               	movlw	255
  9634  0198C2  20E2               	addwfc	fsr1h,w,c
  9635  0198C4  6E0C               	movwf	(btemp+11)^0,c
  9636                           
  9637                           ;stkvar	_ap @ sp[(-2)+0]
  9638  0198C6  0EFF               	movlw	-1
  9639  0198C8  0060  F033  FFE3   	movff	btemp+11,plusw1
  9640  0198CE  0EFE               	movlw	-2
  9641  0198D0  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9642                           
  9643                           ;stkvar	_ap @ sp[(-2)+0]
  9644  0198D6  0EFE               	movlw	254
  9645  0198D8  24E1               	addwf	fsr1l,w,c
  9646  0198DA  6E01               	movwf	btemp^0,c
  9647  0198DC  0EFF               	movlw	255
  9648  0198DE  20E2               	addwfc	fsr1h,w,c
  9649  0198E0  6E02               	movwf	(btemp+1)^0,c
  9650  0198E2  0060  F007  FFE6   	movff	btemp,postinc1
  9651  0198E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9652                           
  9653                           ;stkvar	_fmt @ sp[(-4)+-3]
  9654  0198EE  0EF9               	movlw	-7
  9655  0198F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9656  0198F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9657  0198FC  0E00               	movlw	0
  9658  0198FE  6EE6               	movwf	postinc1,c
  9659  019900  0E00               	movlw	0
  9660  019902  6EE6               	movwf	postinc1,c
  9661  019904  EC5E  F0C7         	call	_vfprintf	;wreg free
  9662                           
  9663                           ; BSR set to: 0
  9664                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  9665  019908  52E5               	movf	postdec1,f,c
  9666  01990A  52E5               	movf	postdec1,f,c
  9667  01990C  52E5               	movf	postdec1,f,c
  9668  01990E  50E7               	movf	indf1,w,c
  9669  019910  5EE1               	subwf	fsr1l,f,c
  9670  019912  0E00               	movlw	0
  9671  019914  5AE2               	subwfb	fsr1h,f,c
  9672  019916  0012               	return		;funcret
  9673  019918                     __end_of_printf:
  9674                           	opt callstack 0
  9675                           
  9676 ;; *************** function _vfprintf *****************
  9677 ;; Defined at:
  9678 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9681 ;;		 -> f(6), NULL(0), 
  9682 ;;  fmt             2  [STACK] PTR const unsigned char 
  9683 ;;		 -> STR_46(79), STR_44(3), STR_43(3), STR_42(19), 
  9684 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
  9685 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
  9686 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
  9687 ;;		 -> STR_29(19), STR_26(3), STR_25(3), STR_24(3), 
  9688 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  9689 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  9690 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  9691 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  9692 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  9693 ;;		 -> STR_1(17), 
  9694 ;;  ap              2  [STACK] PTR PTR void 
  9695 ;;		 -> ap(2), ap(2), 
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;  cfmt            2  [STACK] PTR unsigned char 
  9698 ;;		 -> STR_46(79), STR_44(3), STR_43(3), STR_42(19), 
  9699 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
  9700 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
  9701 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
  9702 ;;		 -> STR_29(19), STR_26(3), STR_25(3), STR_24(3), 
  9703 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  9704 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  9705 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  9706 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  9707 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  9708 ;;		 -> STR_1(17), 
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  2  [STACK] int 
  9711 ;; Registers used:
  9712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/2
  9715 ;;		On exit  : 3F/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9722 ;;Total ram usage:        0 bytes
  9723 ;; Hardware stack levels used:    1
  9724 ;; Hardware stack levels required when called:   22
  9725 ;; This function calls:
  9726 ;;		_vfpfcnvrt
  9727 ;; This function is called by:
  9728 ;;		_sprintf
  9729 ;;		_printf
  9730 ;; This function uses a reentrant model
  9731 ;;
  9732                           
  9733                           	psect	text42
  9734  018EBC                     __ptext42:
  9735                           	opt callstack 0
  9736  018EBC                     _vfprintf:
  9737                           	opt callstack 0
  9738                           
  9739                           ; BSR set to: 0
  9740                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9741  018EBC  52E6               	movf	postinc1,f,c
  9742  018EBE  52E6               	movf	postinc1,f,c
  9743                           
  9744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  9745                           ;stkvar	_fmt @ sp[(-2)+-4]
  9746                           
  9747                           ;incstack = 0
  9748 ;; hardware stack exceeded
  9749  018EC0  0EFA               	movlw	-6
  9750  018EC2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9751  018EC8  0EFB               	movlw	-5
  9752  018ECA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9753                           
  9754                           ;stkvar	_cfmt @ sp[(-2)+0]
  9755  018ED0  0EFF               	movlw	-1
  9756  018ED2  0060  F033  FFE3   	movff	btemp+11,plusw1
  9757  018ED8  0EFE               	movlw	-2
  9758  018EDA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9759                           
  9760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  9761  018EE0  0100               	movlb	0	; () banked
  9762  018EE2  6BC7               	clrf	_nout& (0+255),b
  9763  018EE4  6BC8               	clrf	(_nout+1)& (0+255),b
  9764                           
  9765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9766  018EE6  D021               	goto	l11679
  9767  018EE8                     l11677:
  9768                           
  9769                           ; BSR set to: 0
  9770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  9771                           ;stkvar	_ap @ sp[(-2)+-6]
  9772  018EE8  0EF8               	movlw	-8
  9773  018EEA  006F FF8F FFE6     	movff	plusw1,postinc1
  9774  018EF0  006F FF8F FFE6     	movff	plusw1,postinc1
  9775                           
  9776                           ;stkvar	_cfmt @ sp[(-4)+0]
  9777  018EF6  0EFC               	movlw	252
  9778  018EF8  24E1               	addwf	fsr1l,w,c
  9779  018EFA  6E01               	movwf	btemp^0,c
  9780  018EFC  0EFF               	movlw	255
  9781  018EFE  20E2               	addwfc	fsr1h,w,c
  9782  018F00  6E02               	movwf	(btemp+1)^0,c
  9783  018F02  0060  F007  FFE6   	movff	btemp,postinc1
  9784  018F08  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9785                           
  9786                           ;stkvar	_fp @ sp[(-6)+-2]
  9787  018F0E  0EF8               	movlw	-8
  9788  018F10  006F FF8F FFE6     	movff	plusw1,postinc1
  9789  018F16  006F FF8F FFE6     	movff	plusw1,postinc1
  9790  018F1C  EC22  F089         	call	_vfpfcnvrt	;wreg free
  9791  018F20  5001               	movf	btemp^0,w,c
  9792  018F22  0100               	movlb	0	; () banked
  9793  018F24  27C7               	addwf	_nout& (0+255),f,b
  9794  018F26  5002               	movf	(btemp+1)^0,w,c
  9795  018F28  23C8               	addwfc	(_nout+1)& (0+255),f,b
  9796  018F2A                     l11679:
  9797                           
  9798                           ; BSR set to: 0
  9799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9800                           ;stkvar	_cfmt @ sp[(-2)+0]
  9801  018F2A  50E1               	movf	fsr1l,w,c
  9802  018F2C  0FFE               	addlw	-2
  9803  018F2E  6ED9               	movwf	fsr2l,c
  9804  018F30  50E2               	movf	fsr1h,w,c
  9805  018F32  6EDA               	movwf	fsr2h,c
  9806  018F34  0EFF               	movlw	255
  9807  018F36  22DA               	addwfc	fsr2h,f,c
  9808  018F38  006F FF7B FFF6     	movff	postinc2,tblptrl
  9809  018F3E  006F FF77 FFF7     	movff	postdec2,tblptrh
  9810  018F44                     	if	0	;tblptru may be non-zero
  9811  018F44                     	endif
  9812  018F44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9813  018F44  0E00               	movlw	low (__mediumconst shr (0+16))
  9814  018F46  6EF8               	movwf	tblptru,c
  9815  018F48                     	endif
  9816  018F48  0008               	tblrd		*
  9817  018F4A  50F5               	movf	tablat,w,c
  9818  018F4C  0900               	iorlw	0
  9819  018F4E  A4D8               	btfss	status,2,c
  9820  018F50  D7CB               	goto	l11677
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  9824  018F52  0060  F31C  F001   	movff	_nout,btemp
  9825  018F58  0060  F320  F002   	movff	_nout+1,btemp+1
  9826                           
  9827                           ; BSR set to: 0
  9828                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  9829  018F5E  0EF8               	movlw	248
  9830  018F60  26E1               	addwf	fsr1l,f,c
  9831  018F62  0EFF               	movlw	255
  9832  018F64  22E2               	addwfc	fsr1h,f,c
  9833  018F66  0012               	return		;funcret
  9834  018F68                     __end_of_vfprintf:
  9835                           	opt callstack 0
  9836                           
  9837 ;; *************** function _vfpfcnvrt *****************
  9838 ;; Defined at:
  9839 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9842 ;;		 -> f(6), NULL(0), 
  9843 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  9844 ;;		 -> cfmt(2), 
  9845 ;;  ap              2  [STACK] PTR PTR void 
  9846 ;;		 -> ap(2), ap(2), 
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;  llu             8  [STACK] unsigned long long 
  9849 ;;  ll              8  [STACK] long long 
  9850 ;;  f               4  [STACK] long long 
  9851 ;;  ct              3  [STACK] unsigned char [3]
  9852 ;;  vp              3    0        PTR void 
  9853 ;;  cp              2  [STACK] PTR unsigned char 
  9854 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  9855 ;;		 -> D.lcd(288), D(290), T(144), STR_7(4), 
  9856 ;;		 -> STR_3(4), V(188), 
  9857 ;;  i               2    0        int 
  9858 ;;  done            2    0        int 
  9859 ;;  c               1  [STACK] unsigned char 
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  2  [STACK] int 
  9862 ;; Registers used:
  9863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9864 ;; Tracked objects:
  9865 ;;		On entry : 0/0
  9866 ;;		On exit  : 0/0
  9867 ;;		Unchanged: 0/0
  9868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9873 ;;Total ram usage:        0 bytes
  9874 ;; Hardware stack levels used:    1
  9875 ;; Hardware stack levels required when called:   21
  9876 ;; This function calls:
  9877 ;;		_atoi
  9878 ;;		_ctoa
  9879 ;;		_dtoa
  9880 ;;		_efgtoa
  9881 ;;		_fputc
  9882 ;;		_isdigit
  9883 ;;		_isupper
  9884 ;;		_stoa
  9885 ;;		_strncmp
  9886 ;;		_tolower
  9887 ;;		_utoa
  9888 ;;		_xtoa
  9889 ;; This function is called by:
  9890 ;;		_vfprintf
  9891 ;; This function uses a reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text43
  9895  011244                     __ptext43:
  9896                           	opt callstack 0
  9897  011244                     _vfpfcnvrt:
  9898                           	opt callstack 0
  9899                           
  9900                           ; BSR set to: 0
  9901                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9902  011244  0E20               	movlw	32
  9903  011246  26E1               	addwf	fsr1l,f,c
  9904  011248  0E00               	movlw	0
  9905  01124A  22E2               	addwfc	fsr1h,f,c
  9906                           
  9907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9908                           ;stkvar	_fmt @ sp[(-32)+-4]
  9909                           
  9910                           ;incstack = 0
  9911 ;; hardware stack exceeded
  9912  01124C  0EDC               	movlw	-36
  9913  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9914  011254  0EDD               	movlw	-35
  9915  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  9916  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9917  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  9918  011268                     	if	0	;tblptru may be non-zero
  9919  011268                     	endif
  9920  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9921  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  9922  01126A  6EF8               	movwf	tblptru,c
  9923  01126C                     	endif
  9924  01126C  0008               	tblrd		*
  9925  01126E  50F5               	movf	tablat,w,c
  9926  011270  0A25               	xorlw	37
  9927  011272  A4D8               	btfss	status,2,c
  9928  011274  EFC9  F090         	goto	l11623
  9929                           
  9930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9931                           ;stkvar	_fmt @ sp[(-32)+-4]
  9932  011278  0EDC               	movlw	-36
  9933  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9934  011280  0EDD               	movlw	-35
  9935  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  9936  011288  2ADE               	incf	postinc2,f,c
  9937  01128A  0E00               	movlw	0
  9938  01128C  22DD               	addwfc	postdec2,f,c
  9939                           
  9940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9941  01128E  6A21               	clrf	_width^0,c
  9942  011290  6A22               	clrf	(_width+1)^0,c
  9943  011292  6A25               	clrf	_flags^0,c
  9944  011294  6A26               	clrf	(_flags+1)^0,c
  9945                           
  9946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9947  011296  6823               	setf	_prec^0,c
  9948  011298  6824               	setf	(_prec+1)^0,c
  9949                           
  9950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  9951                           ;stkvar	_fmt @ sp[(-32)+-4]
  9952  01129A  0EDC               	movlw	-36
  9953  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9954  0112A2  0EDD               	movlw	-35
  9955  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9956  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  9957  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  9958  0112B6                     	if	0	;tblptru may be non-zero
  9959  0112B6                     	endif
  9960  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9961  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  9962  0112B8  6EF8               	movwf	tblptru,c
  9963  0112BA                     	endif
  9964  0112BA  0008               	tblrd		*
  9965  0112BC  50F5               	movf	tablat,w,c
  9966  0112BE  0A2A               	xorlw	42
  9967  0112C0  A4D8               	btfss	status,2,c
  9968  0112C2  D031               	goto	l11441
  9969                           
  9970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  9971                           ;stkvar	_fmt @ sp[(-32)+-4]
  9972  0112C4  0EDC               	movlw	-36
  9973  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9974  0112CC  0EDD               	movlw	-35
  9975  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9976  0112D4  2ADE               	incf	postinc2,f,c
  9977  0112D6  0E00               	movlw	0
  9978  0112D8  22DD               	addwfc	postdec2,f,c
  9979                           
  9980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  9981                           ;stkvar	_ap @ sp[(-32)+-6]
  9982  0112DA  0EDA               	movlw	-38
  9983  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9984  0112E2  0EDB               	movlw	-37
  9985  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9986  0112EA  0E02               	movlw	2
  9987  0112EC  5EDE               	subwf	postinc2,f,c
  9988  0112EE  0E00               	movlw	0
  9989  0112F0  5ADD               	subwfb	postdec2,f,c
  9990  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
  9991  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
  9992  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9993  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9994  01130A  006F FF78  F021    	movff	postinc2,_width
  9995  011310  006F FF74  F022    	movff	postdec2,_width+1
  9996                           
  9997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  9998  011316  AE22               	btfss	(_width+1)^0,7,c
  9999  011318  D066               	goto	u11280
 10000                           
 10001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 10002  01131A  8025               	bsf	_flags^0,0,c
 10003                           
 10004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 10005  01131C  6C21               	negf	_width^0,c
 10006  01131E  1E22               	comf	(_width+1)^0,f,c
 10007  011320  B0D8               	btfsc	status,0,c
 10008  011322  2A22               	incf	(_width+1)^0,f,c
 10009  011324  D060               	goto	u11280
 10010  011326                     l11441:
 10011                           
 10012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 10013                           ;stkvar	_fmt @ sp[(-32)+-4]
 10014  011326  0EDC               	movlw	-36
 10015  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
 10016  01132E  0EDD               	movlw	-35
 10017  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
 10018  011336  006F FF78  F00B    	movff	postinc2,btemp+10
 10019  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
 10020  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10021  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
 10022  01134E  EC15  F0B3         	call	_atoi	;wreg free
 10023  011352  0060  F004  F021   	movff	btemp,_width
 10024  011358  0060  F008  F022   	movff	btemp+1,_width+1
 10025                           
 10026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10027  01135E  D00B               	goto	l11445
 10028  011360                     l11443:
 10029                           
 10030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 10031                           ;stkvar	_fmt @ sp[(-32)+-4]
 10032  011360  0EDC               	movlw	-36
 10033  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
 10034  011368  0EDD               	movlw	-35
 10035  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10036  011370  2ADE               	incf	postinc2,f,c
 10037  011372  0E00               	movlw	0
 10038  011374  22DD               	addwfc	postdec2,f,c
 10039  011376                     l11445:
 10040  011376  0ED0               	movlw	208
 10041  011378  6E0B               	movwf	(btemp+10)^0,c
 10042  01137A  0EFF               	movlw	255
 10043  01137C  6E0C               	movwf	(btemp+11)^0,c
 10044                           
 10045                           ;stkvar	_fmt @ sp[(-32)+-4]
 10046  01137E  0EDC               	movlw	-36
 10047  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
 10048  011386  0EDD               	movlw	-35
 10049  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
 10050  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10051  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
 10052  01139A                     	if	0	;tblptru may be non-zero
 10053  01139A                     	endif
 10054  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10055  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
 10056  01139C  6EF8               	movwf	tblptru,c
 10057  01139E                     	endif
 10058  01139E  0008               	tblrd		*
 10059  0113A0  50F5               	movf	tablat,w,c
 10060  0113A2  6E09               	movwf	(btemp+8)^0,c
 10061  0113A4  6A0A               	clrf	(btemp+9)^0,c
 10062  0113A6  500B               	movf	(btemp+10)^0,w,c
 10063  0113A8  2609               	addwf	(btemp+8)^0,f,c
 10064  0113AA  500C               	movf	(btemp+11)^0,w,c
 10065  0113AC  220A               	addwfc	(btemp+9)^0,f,c
 10066  0113AE  500A               	movf	(btemp+9)^0,w,c
 10067  0113B0  E106               	bnz	u11260
 10068  0113B2  0E0A               	movlw	10
 10069  0113B4  5C09               	subwf	(btemp+8)^0,w,c
 10070  0113B6  B0D8               	btfsc	status,0,c
 10071  0113B8  D002               	goto	u11260
 10072  0113BA  0E01               	movlw	1
 10073  0113BC  D001               	goto	u11270
 10074  0113BE                     u11260:
 10075  0113BE  0E00               	movlw	0
 10076  0113C0                     u11270:
 10077  0113C0  6E0B               	movwf	(btemp+10)^0,c
 10078  0113C2  6A0C               	clrf	(btemp+11)^0,c
 10079                           
 10080                           ;stkvar	_vfpfcnvrt$5241 @ sp[(-32)+4]
 10081  0113C4  0EE4               	movlw	-28
 10082  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10083  0113CC  0EE5               	movlw	-27
 10084  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 10085                           
 10086                           ;stkvar	_vfpfcnvrt$5241 @ sp[(-32)+4]
 10087  0113D4  0EE4               	movlw	-28
 10088  0113D6  006F FF8C  F001    	movff	plusw1,btemp
 10089  0113DC  0EE5               	movlw	-27
 10090  0113DE  50E3               	movf	plusw1,w,c
 10091  0113E0  1001               	iorwf	btemp^0,w,c
 10092  0113E2  A4D8               	btfss	status,2,c
 10093  0113E4  D7BD               	goto	l11443
 10094  0113E6                     u11280:
 10095                           
 10096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 10097                           ;stkvar	_fmt @ sp[(-32)+-4]
 10098  0113E6  0EDC               	movlw	-36
 10099  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10100  0113EE  0EDD               	movlw	-35
 10101  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10102  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10103  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10104  011402                     	if	0	;tblptru may be non-zero
 10105  011402                     	endif
 10106  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10107  011402  0E00               	movlw	low (__mediumconst shr (0+16))
 10108  011404  6EF8               	movwf	tblptru,c
 10109  011406                     	endif
 10110  011406  0008               	tblrd		*
 10111  011408  50F5               	movf	tablat,w,c
 10112  01140A  0A2E               	xorlw	46
 10113  01140C  A4D8               	btfss	status,2,c
 10114  01140E  D0AC               	goto	u11330
 10115                           
 10116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 10117  011410  6A23               	clrf	_prec^0,c
 10118  011412  6A24               	clrf	(_prec+1)^0,c
 10119                           
 10120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 10121                           ;stkvar	_fmt @ sp[(-32)+-4]
 10122  011414  0EDC               	movlw	-36
 10123  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
 10124  01141C  0EDD               	movlw	-35
 10125  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10126  011424  2ADE               	incf	postinc2,f,c
 10127  011426  0E00               	movlw	0
 10128  011428  22DD               	addwfc	postdec2,f,c
 10129                           
 10130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 10131                           ;stkvar	_fmt @ sp[(-32)+-4]
 10132  01142A  0EDC               	movlw	-36
 10133  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10134  011432  0EDD               	movlw	-35
 10135  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
 10136  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10137  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
 10138  011446                     	if	0	;tblptru may be non-zero
 10139  011446                     	endif
 10140  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10141  011446  0E00               	movlw	low (__mediumconst shr (0+16))
 10142  011448  6EF8               	movwf	tblptru,c
 10143  01144A                     	endif
 10144  01144A  0008               	tblrd		*
 10145  01144C  50F5               	movf	tablat,w,c
 10146  01144E  0A2A               	xorlw	42
 10147  011450  A4D8               	btfss	status,2,c
 10148  011452  D02A               	goto	l11463
 10149                           
 10150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 10151                           ;stkvar	_fmt @ sp[(-32)+-4]
 10152  011454  0EDC               	movlw	-36
 10153  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
 10154  01145C  0EDD               	movlw	-35
 10155  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10156  011464  2ADE               	incf	postinc2,f,c
 10157  011466  0E00               	movlw	0
 10158  011468  22DD               	addwfc	postdec2,f,c
 10159                           
 10160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 10161                           ;stkvar	_ap @ sp[(-32)+-6]
 10162  01146A  0EDA               	movlw	-38
 10163  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10164  011472  0EDB               	movlw	-37
 10165  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
 10166  01147A  0E02               	movlw	2
 10167  01147C  5EDE               	subwf	postinc2,f,c
 10168  01147E  0E00               	movlw	0
 10169  011480  5ADD               	subwfb	postdec2,f,c
 10170  011482  006F FF78  F00B    	movff	postinc2,btemp+10
 10171  011488  006F FF74  F00C    	movff	postdec2,btemp+11
 10172  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10173  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10174  01149A  006F FF78  F023    	movff	postinc2,_prec
 10175  0114A0  006F FF74  F024    	movff	postdec2,_prec+1
 10176                           
 10177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 10178  0114A6  D060               	goto	u11330
 10179  0114A8                     l11463:
 10180                           
 10181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 10182                           ;stkvar	_fmt @ sp[(-32)+-4]
 10183  0114A8  0EDC               	movlw	-36
 10184  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10185  0114B0  0EDD               	movlw	-35
 10186  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10187  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
 10188  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
 10189  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10190  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10191  0114D0  EC15  F0B3         	call	_atoi	;wreg free
 10192  0114D4  0060  F004  F023   	movff	btemp,_prec
 10193  0114DA  0060  F008  F024   	movff	btemp+1,_prec+1
 10194                           
 10195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10196  0114E0  D00B               	goto	l11467
 10197  0114E2                     l11465:
 10198                           
 10199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 10200                           ;stkvar	_fmt @ sp[(-32)+-4]
 10201  0114E2  0EDC               	movlw	-36
 10202  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10203  0114EA  0EDD               	movlw	-35
 10204  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10205  0114F2  2ADE               	incf	postinc2,f,c
 10206  0114F4  0E00               	movlw	0
 10207  0114F6  22DD               	addwfc	postdec2,f,c
 10208  0114F8                     l11467:
 10209  0114F8  0ED0               	movlw	208
 10210  0114FA  6E0B               	movwf	(btemp+10)^0,c
 10211  0114FC  0EFF               	movlw	255
 10212  0114FE  6E0C               	movwf	(btemp+11)^0,c
 10213                           
 10214                           ;stkvar	_fmt @ sp[(-32)+-4]
 10215  011500  0EDC               	movlw	-36
 10216  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
 10217  011508  0EDD               	movlw	-35
 10218  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10219  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
 10220  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
 10221  01151C                     	if	0	;tblptru may be non-zero
 10222  01151C                     	endif
 10223  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10224  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
 10225  01151E  6EF8               	movwf	tblptru,c
 10226  011520                     	endif
 10227  011520  0008               	tblrd		*
 10228  011522  50F5               	movf	tablat,w,c
 10229  011524  6E09               	movwf	(btemp+8)^0,c
 10230  011526  6A0A               	clrf	(btemp+9)^0,c
 10231  011528  500B               	movf	(btemp+10)^0,w,c
 10232  01152A  2609               	addwf	(btemp+8)^0,f,c
 10233  01152C  500C               	movf	(btemp+11)^0,w,c
 10234  01152E  220A               	addwfc	(btemp+9)^0,f,c
 10235  011530  500A               	movf	(btemp+9)^0,w,c
 10236  011532  E106               	bnz	u11310
 10237  011534  0E0A               	movlw	10
 10238  011536  5C09               	subwf	(btemp+8)^0,w,c
 10239  011538  B0D8               	btfsc	status,0,c
 10240  01153A  D002               	goto	u11310
 10241  01153C  0E01               	movlw	1
 10242  01153E  D001               	goto	u11320
 10243  011540                     u11310:
 10244  011540  0E00               	movlw	0
 10245  011542                     u11320:
 10246  011542  6E0B               	movwf	(btemp+10)^0,c
 10247  011544  6A0C               	clrf	(btemp+11)^0,c
 10248                           
 10249                           ;stkvar	_vfpfcnvrt$5242 @ sp[(-32)+0]
 10250  011546  0EE0               	movlw	-32
 10251  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10252  01154E  0EE1               	movlw	-31
 10253  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
 10254                           
 10255                           ;stkvar	_vfpfcnvrt$5242 @ sp[(-32)+0]
 10256  011556  0EE0               	movlw	-32
 10257  011558  006F FF8C  F001    	movff	plusw1,btemp
 10258  01155E  0EE1               	movlw	-31
 10259  011560  50E3               	movf	plusw1,w,c
 10260  011562  1001               	iorwf	btemp^0,w,c
 10261  011564  A4D8               	btfss	status,2,c
 10262  011566  D7BD               	goto	l11465
 10263  011568                     u11330:
 10264                           
 10265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 10266                           ;stkvar	_fmt @ sp[(-32)+-4]
 10267  011568  0EDC               	movlw	-36
 10268  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10269  011570  0EDD               	movlw	-35
 10270  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
 10271  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
 10272  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10273  011584                     	if	0	;tblptru may be non-zero
 10274  011584                     	endif
 10275  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10276  011584  0E00               	movlw	low (__mediumconst shr (0+16))
 10277  011586  6EF8               	movwf	tblptru,c
 10278  011588                     	endif
 10279  011588  0008               	tblrd		*
 10280  01158A  50F5               	movf	tablat,w,c
 10281  01158C  6EE6               	movwf	postinc1,c
 10282  01158E  0E00               	movlw	0
 10283  011590  6EE6               	movwf	postinc1,c
 10284  011592  ECA4  F0CA         	call	_tolower	;wreg free
 10285                           
 10286                           ;stkvar	_ct @ sp[(-32)+26]
 10287  011596  0EFA               	movlw	-6
 10288  011598  0060  F007  FFE3   	movff	btemp,plusw1
 10289                           
 10290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 10291                           ;stkvar	_ct @ sp[(-32)+26]
 10292  01159E  0EFA               	movlw	-6
 10293  0115A0  50E3               	movf	plusw1,w,c
 10294  0115A2  B4D8               	btfsc	status,2,c
 10295  0115A4  D05B               	goto	l11483
 10296                           
 10297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 10298                           ;stkvar	_ct @ sp[(-32)+26]
 10299  0115A6  0EFB               	movlw	251
 10300  0115A8  24E1               	addwf	fsr1l,w,c
 10301  0115AA  6ED9               	movwf	fsr2l,c
 10302  0115AC  0EFF               	movlw	255
 10303  0115AE  20E2               	addwfc	fsr1h,w,c
 10304  0115B0  6EDA               	movwf	fsr2h,c
 10305                           
 10306                           ;stkvar	_fmt @ sp[(-32)+-4]
 10307  0115B2  0EDC               	movlw	-36
 10308  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
 10309  0115BA  0EDD               	movlw	-35
 10310  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
 10311  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
 10312  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
 10313  0115CE  0E01               	movlw	1
 10314  0115D0  260B               	addwf	(btemp+10)^0,f,c
 10315  0115D2  0E00               	movlw	0
 10316  0115D4  220C               	addwfc	(btemp+11)^0,f,c
 10317  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10318  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10319  0115E2                     	if	0	;tblptru may be non-zero
 10320  0115E2                     	endif
 10321  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10322  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
 10323  0115E4  6EF8               	movwf	tblptru,c
 10324  0115E6                     	endif
 10325  0115E6  0008               	tblrd		*
 10326  0115E8  50F5               	movf	tablat,w,c
 10327  0115EA  6EE6               	movwf	postinc1,c
 10328  0115EC  0E00               	movlw	0
 10329  0115EE  6EE6               	movwf	postinc1,c
 10330  0115F0  ECA4  F0CA         	call	_tolower	;wreg free
 10331  0115F4  5001               	movf	btemp^0,w,c
 10332  0115F6  6EDF               	movwf	indf2,c
 10333                           
 10334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 10335                           ;stkvar	_ct @ sp[(-32)+26]
 10336  0115F8  0EFB               	movlw	251
 10337  0115FA  24E1               	addwf	fsr1l,w,c
 10338  0115FC  6ED9               	movwf	fsr2l,c
 10339  0115FE  0EFF               	movlw	255
 10340  011600  20E2               	addwfc	fsr1h,w,c
 10341  011602  6EDA               	movwf	fsr2h,c
 10342  011604  50DF               	movf	indf2,w,c
 10343  011606  B4D8               	btfsc	status,2,c
 10344  011608  D029               	goto	l11483
 10345                           
 10346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 10347                           ;stkvar	_ct @ sp[(-32)+26]
 10348  01160A  0EFC               	movlw	252
 10349  01160C  24E1               	addwf	fsr1l,w,c
 10350  01160E  6ED9               	movwf	fsr2l,c
 10351  011610  0EFF               	movlw	255
 10352  011612  20E2               	addwfc	fsr1h,w,c
 10353  011614  6EDA               	movwf	fsr2h,c
 10354                           
 10355                           ;stkvar	_fmt @ sp[(-32)+-4]
 10356  011616  0EDC               	movlw	-36
 10357  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
 10358  01161E  0EDD               	movlw	-35
 10359  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
 10360  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
 10361  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
 10362  011632  0E02               	movlw	2
 10363  011634  260B               	addwf	(btemp+10)^0,f,c
 10364  011636  0E00               	movlw	0
 10365  011638  220C               	addwfc	(btemp+11)^0,f,c
 10366  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10367  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10368  011646                     	if	0	;tblptru may be non-zero
 10369  011646                     	endif
 10370  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10371  011646  0E00               	movlw	low (__mediumconst shr (0+16))
 10372  011648  6EF8               	movwf	tblptru,c
 10373  01164A                     	endif
 10374  01164A  0008               	tblrd		*
 10375  01164C  50F5               	movf	tablat,w,c
 10376  01164E  6EE6               	movwf	postinc1,c
 10377  011650  0E00               	movlw	0
 10378  011652  6EE6               	movwf	postinc1,c
 10379  011654  ECA4  F0CA         	call	_tolower	;wreg free
 10380  011658  5001               	movf	btemp^0,w,c
 10381  01165A  6EDF               	movwf	indf2,c
 10382  01165C                     l11483:
 10383                           
 10384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 10385                           ;stkvar	_fmt @ sp[(-32)+-4]
 10386  01165C  0EDC               	movlw	-36
 10387  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10388  011664  0EDD               	movlw	-35
 10389  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
 10390  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10391  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
 10392  011678                     	if	0	;tblptru may be non-zero
 10393  011678                     	endif
 10394  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10395  011678  0E00               	movlw	low (__mediumconst shr (0+16))
 10396  01167A  6EF8               	movwf	tblptru,c
 10397  01167C                     	endif
 10398  01167C  0008               	tblrd		*
 10399  01167E  50F5               	movf	tablat,w,c
 10400  011680  0A63               	xorlw	99
 10401  011682  A4D8               	btfss	status,2,c
 10402  011684  D037               	goto	l11493
 10403                           
 10404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 10405                           ;stkvar	_fmt @ sp[(-32)+-4]
 10406  011686  0EDC               	movlw	-36
 10407  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
 10408  01168E  0EDD               	movlw	-35
 10409  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
 10410  011696  2ADE               	incf	postinc2,f,c
 10411  011698  0E00               	movlw	0
 10412  01169A  22DD               	addwfc	postdec2,f,c
 10413                           
 10414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10415                           ;stkvar	_ap @ sp[(-32)+-6]
 10416  01169C  0EDA               	movlw	-38
 10417  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10418  0116A4  0EDB               	movlw	-37
 10419  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10420  0116AC  0E02               	movlw	2
 10421  0116AE  5EDE               	subwf	postinc2,f,c
 10422  0116B0  0E00               	movlw	0
 10423  0116B2  5ADD               	subwfb	postdec2,f,c
 10424  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
 10425  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
 10426  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10427  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10428  0116CC  50DF               	movf	indf2,w,c
 10429  0116CE  6E0C               	movwf	(btemp+11)^0,c
 10430                           
 10431                           ;stkvar	_c @ sp[(-32)+31]
 10432  0116D0  0EFF               	movlw	-1
 10433  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10434                           
 10435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 10436                           ;stkvar	_c @ sp[(-32)+31]
 10437  0116D8  0EFF               	movlw	-1
 10438  0116DA  50E3               	movf	plusw1,w,c
 10439  0116DC  6EE6               	movwf	postinc1,c
 10440                           
 10441                           ;stkvar	_fp @ sp[(-33)+-2]
 10442  0116DE  0EDD               	movlw	-35
 10443  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10444  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10445  0116EC  EC1E  F0CA         	call	_ctoa	;wreg free
 10446  0116F0  EFF3  F090         	goto	l2237
 10447  0116F4                     l11493:
 10448                           
 10449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 10450                           ;stkvar	_fmt @ sp[(-32)+-4]
 10451  0116F4  0EDC               	movlw	-36
 10452  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10453  0116FC  0EDD               	movlw	-35
 10454  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10455  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
 10456  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10457  011710                     	if	0	;tblptru may be non-zero
 10458  011710                     	endif
 10459  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10460  011710  0E00               	movlw	low (__mediumconst shr (0+16))
 10461  011712  6EF8               	movwf	tblptru,c
 10462  011714                     	endif
 10463  011714  0008               	tblrd		*
 10464  011716  50F5               	movf	tablat,w,c
 10465  011718  0A64               	xorlw	100
 10466  01171A  B4D8               	btfsc	status,2,c
 10467  01171C  D015               	goto	u11380
 10468                           
 10469                           ;stkvar	_fmt @ sp[(-32)+-4]
 10470  01171E  0EDC               	movlw	-36
 10471  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
 10472  011726  0EDD               	movlw	-35
 10473  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
 10474  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10475  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
 10476  01173A                     	if	0	;tblptru may be non-zero
 10477  01173A                     	endif
 10478  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10479  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
 10480  01173C  6EF8               	movwf	tblptru,c
 10481  01173E                     	endif
 10482  01173E  0008               	tblrd		*
 10483  011740  50F5               	movf	tablat,w,c
 10484  011742  0A69               	xorlw	105
 10485  011744  A4D8               	btfss	status,2,c
 10486  011746  D076               	goto	l11505
 10487  011748                     u11380:
 10488                           
 10489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 10490                           ;stkvar	_fmt @ sp[(-32)+-4]
 10491  011748  0EDC               	movlw	-36
 10492  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10493  011750  0EDD               	movlw	-35
 10494  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
 10495  011758  2ADE               	incf	postinc2,f,c
 10496  01175A  0E00               	movlw	0
 10497  01175C  22DD               	addwfc	postdec2,f,c
 10498                           
 10499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 10500                           ;stkvar	_ap @ sp[(-32)+-6]
 10501  01175E  0EDA               	movlw	-38
 10502  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
 10503  011766  0EDB               	movlw	-37
 10504  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
 10505  01176E  0E02               	movlw	2
 10506  011770  5EDE               	subwf	postinc2,f,c
 10507  011772  0E00               	movlw	0
 10508  011774  5ADD               	subwfb	postdec2,f,c
 10509  011776  006F FF78  F00B    	movff	postinc2,btemp+10
 10510  01177C  006F FF74  F00C    	movff	postdec2,btemp+11
 10511  011782  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10512  011788  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10513  01178E  006F FF78  F00B    	movff	postinc2,btemp+10
 10514  011794  006F FF74  F00C    	movff	postdec2,btemp+11
 10515                           
 10516                           ;stkvar	_ll @ sp[(-32)+14]
 10517  01179A  0EEE               	movlw	-18
 10518  01179C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10519  0117A2  0EEF               	movlw	-17
 10520  0117A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 10521  0117AA  6A01               	clrf	btemp^0,c
 10522  0117AC  BEE3               	btfsc	plusw1,7,c
 10523  0117AE  6801               	setf	btemp^0,c
 10524  0117B0  0EF0               	movlw	-16
 10525  0117B2  0060  F007  FFE3   	movff	btemp,plusw1
 10526  0117B8  0EF1               	movlw	-15
 10527  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
 10528  0117C0  0EF2               	movlw	-14
 10529  0117C2  0060  F007  FFE3   	movff	btemp,plusw1
 10530  0117C8  0EF3               	movlw	-13
 10531  0117CA  0060  F007  FFE3   	movff	btemp,plusw1
 10532  0117D0  0EF4               	movlw	-12
 10533  0117D2  0060  F007  FFE3   	movff	btemp,plusw1
 10534  0117D8  0EF5               	movlw	-11
 10535  0117DA  0060  F007  FFE3   	movff	btemp,plusw1
 10536  0117E0                     l11501:
 10537                           
 10538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 10539                           ;stkvar	_ll @ sp[(-32)+14]
 10540  0117E0  50E1               	movf	fsr1l,w,c
 10541  0117E2  0FEE               	addlw	-18
 10542  0117E4  6ED9               	movwf	fsr2l,c
 10543  0117E6  50E2               	movf	fsr1h,w,c
 10544  0117E8  6EDA               	movwf	fsr2h,c
 10545  0117EA  0EFF               	movlw	255
 10546  0117EC  22DA               	addwfc	fsr2h,f,c
 10547  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
 10548  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
 10549  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
 10550  011800  006F FF7B FFE6     	movff	postinc2,postinc1
 10551  011806  006F FF7B FFE6     	movff	postinc2,postinc1
 10552  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
 10553  011812  006F FF7B FFE6     	movff	postinc2,postinc1
 10554  011818  006F FF7B FFE6     	movff	postinc2,postinc1
 10555                           
 10556                           ;stkvar	_fp @ sp[(-40)+-2]
 10557  01181E  0ED6               	movlw	-42
 10558  011820  006F FF8F FFE6     	movff	plusw1,postinc1
 10559  011826  006F FF8F FFE6     	movff	plusw1,postinc1
 10560  01182C  EC18  F0A6         	call	_dtoa	;wreg free
 10561  011830  EFF3  F090         	goto	l2237
 10562  011834                     l11505:
 10563                           
 10564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 10565  011834  0E02               	movlw	2
 10566  011836  6EE6               	movwf	postinc1,c
 10567  011838  0E00               	movlw	0
 10568  01183A  6EE6               	movwf	postinc1,c
 10569  01183C  0EEA               	movlw	low STR_55
 10570  01183E  6EE6               	movwf	postinc1,c
 10571  011840  0EFF               	movlw	high STR_55
 10572  011842  6EE6               	movwf	postinc1,c
 10573                           
 10574                           ;stkvar	_fmt @ sp[(-36)+-4]
 10575  011844  0ED8               	movlw	-40
 10576  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
 10577  01184C  0ED9               	movlw	-39
 10578  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10579  011854  006F FF78  F00B    	movff	postinc2,btemp+10
 10580  01185A  006F FF74  F00C    	movff	postdec2,btemp+11
 10581  011860  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10582  011866  0060  F033  FFE6   	movff	btemp+11,postinc1
 10583  01186C  EC6F  F0B5         	call	_strncmp	;wreg free
 10584  011870  5001               	movf	btemp^0,w,c
 10585  011872  1002               	iorwf	(btemp+1)^0,w,c
 10586  011874  B4D8               	btfsc	status,2,c
 10587  011876  D022               	goto	u11400
 10588  011878  0E02               	movlw	2
 10589  01187A  6EE6               	movwf	postinc1,c
 10590  01187C  0E00               	movlw	0
 10591  01187E  6EE6               	movwf	postinc1,c
 10592  011880  0EF0               	movlw	low STR_59
 10593  011882  6EE6               	movwf	postinc1,c
 10594  011884  0EFF               	movlw	high STR_59
 10595  011886  6EE6               	movwf	postinc1,c
 10596                           
 10597                           ;stkvar	_fmt @ sp[(-36)+-4]
 10598  011888  0ED8               	movlw	-40
 10599  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10600  011890  0ED9               	movlw	-39
 10601  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
 10602  011898  006F FF78  F00B    	movff	postinc2,btemp+10
 10603  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
 10604  0118A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10605  0118AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10606  0118B0  EC6F  F0B5         	call	_strncmp	;wreg free
 10607  0118B4  5001               	movf	btemp^0,w,c
 10608  0118B6  1002               	iorwf	(btemp+1)^0,w,c
 10609  0118B8  A4D8               	btfss	status,2,c
 10610  0118BA  D069               	goto	l11517
 10611  0118BC                     u11400:
 10612                           
 10613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 10614                           ;stkvar	_fmt @ sp[(-32)+-4]
 10615  0118BC  0EDC               	movlw	-36
 10616  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10617  0118C4  0EDD               	movlw	-35
 10618  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10619  0118CC  0E02               	movlw	2
 10620  0118CE  26DE               	addwf	postinc2,f,c
 10621  0118D0  0E00               	movlw	0
 10622  0118D2  22DD               	addwfc	postdec2,f,c
 10623                           
 10624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 10625                           ;stkvar	_ap @ sp[(-32)+-6]
 10626  0118D4  0EDA               	movlw	-38
 10627  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10628  0118DC  0EDB               	movlw	-37
 10629  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10630  0118E4  0E04               	movlw	4
 10631  0118E6  5EDE               	subwf	postinc2,f,c
 10632  0118E8  0E00               	movlw	0
 10633  0118EA  5ADD               	subwfb	postdec2,f,c
 10634  0118EC  006F FF78  F00B    	movff	postinc2,btemp+10
 10635  0118F2  006F FF74  F00C    	movff	postdec2,btemp+11
 10636  0118F8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10637  0118FE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10638  011904  006F FF78  F009    	movff	postinc2,btemp+8
 10639  01190A  006F FF78  F00A    	movff	postinc2,btemp+9
 10640  011910  006F FF78  F00B    	movff	postinc2,btemp+10
 10641  011916  006F FF78  F00C    	movff	postinc2,btemp+11
 10642  01191C  0060  F024  F011   	movff	btemp+8,btemp+16
 10643  011922  0060  F028  F012   	movff	btemp+9,btemp+17
 10644  011928  0060  F02C  F013   	movff	btemp+10,btemp+18
 10645  01192E  0060  F030  F014   	movff	btemp+11,btemp+19
 10646  011934  6A15               	clrf	(btemp+20)^0,c
 10647  011936  BE14               	btfsc	(btemp+19)^0,7,c
 10648  011938  6815               	setf	(btemp+20)^0,c
 10649  01193A  0060  F054  F016   	movff	btemp+20,btemp+21
 10650  011940  0060  F054  F017   	movff	btemp+20,btemp+22
 10651  011946  0060  F054  F018   	movff	btemp+20,btemp+23
 10652                           
 10653                           ;stkvar	_ll @ sp[(-32)+14]
 10654  01194C  0EEE               	movlw	-18
 10655  01194E  0060  F047  FFE3   	movff	btemp+16,plusw1
 10656  011954  0EEF               	movlw	-17
 10657  011956  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10658  01195C  0EF0               	movlw	-16
 10659  01195E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10660  011964  0EF1               	movlw	-15
 10661  011966  0060  F053  FFE3   	movff	btemp+19,plusw1
 10662  01196C  0EF2               	movlw	-14
 10663  01196E  0060  F057  FFE3   	movff	btemp+20,plusw1
 10664  011974  0EF3               	movlw	-13
 10665  011976  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10666  01197C  0EF4               	movlw	-12
 10667  01197E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10668  011984  0EF5               	movlw	-11
 10669  011986  0060  F063  FFE3   	movff	btemp+23,plusw1
 10670  01198C  D729               	goto	l11501
 10671  01198E                     l11517:
 10672                           
 10673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 10674                           ;stkvar	_ct @ sp[(-32)+26]
 10675  01198E  0EFA               	movlw	-6
 10676  011990  006F FF8C  F001    	movff	plusw1,btemp
 10677  011996  0E66               	movlw	102
 10678  011998  1801               	xorwf	btemp^0,w,c
 10679  01199A  A4D8               	btfss	status,2,c
 10680  01199C  D06E               	goto	l11529
 10681                           
 10682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 10683                           ;stkvar	_fmt @ sp[(-32)+-4]
 10684  01199E  0EDC               	movlw	-36
 10685  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10686  0119A6  0EDD               	movlw	-35
 10687  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10688  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 10689  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 10690  0119BA                     	if	0	;tblptru may be non-zero
 10691  0119BA                     	endif
 10692  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10693  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
 10694  0119BC  6EF8               	movwf	tblptru,c
 10695  0119BE                     	endif
 10696                           
 10697                           ;stkvar	_c @ sp[(-32)+31]
 10698  0119BE  0008               	tblrd		*
 10699  0119C0  0EFF               	movlw	-1
 10700  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
 10701                           
 10702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 10703                           ;stkvar	_fmt @ sp[(-32)+-4]
 10704  0119C8  0EDC               	movlw	-36
 10705  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10706  0119D0  0EDD               	movlw	-35
 10707  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10708  0119D8  2ADE               	incf	postinc2,f,c
 10709  0119DA  0E00               	movlw	0
 10710  0119DC  22DD               	addwfc	postdec2,f,c
 10711                           
 10712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 10713                           ;stkvar	_ap @ sp[(-32)+-6]
 10714  0119DE  0EDA               	movlw	-38
 10715  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10716  0119E6  0EDB               	movlw	-37
 10717  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10718  0119EE  0E04               	movlw	4
 10719  0119F0  5EDE               	subwf	postinc2,f,c
 10720  0119F2  0E00               	movlw	0
 10721  0119F4  5ADD               	subwfb	postdec2,f,c
 10722  0119F6  006F FF78  F00B    	movff	postinc2,btemp+10
 10723  0119FC  006F FF74  F00C    	movff	postdec2,btemp+11
 10724  011A02  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10725  011A08  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10726  011A0E  006F FF78  F009    	movff	postinc2,btemp+8
 10727  011A14  006F FF78  F00A    	movff	postinc2,btemp+9
 10728  011A1A  006F FF78  F00B    	movff	postinc2,btemp+10
 10729  011A20  006F FF78  F00C    	movff	postinc2,btemp+11
 10730                           
 10731                           ;stkvar	_f @ sp[(-32)+22]
 10732  011A26  0EF6               	movlw	-10
 10733  011A28  0060  F027  FFE3   	movff	btemp+8,plusw1
 10734  011A2E  0EF7               	movlw	-9
 10735  011A30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10736  011A36  0EF8               	movlw	-8
 10737  011A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10738  011A3E  0EF9               	movlw	-7
 10739  011A40  0060  F033  FFE3   	movff	btemp+11,plusw1
 10740  011A46                     l11525:
 10741                           
 10742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 10743                           ;stkvar	_c @ sp[(-32)+31]
 10744  011A46  0EFF               	movlw	-1
 10745  011A48  50E3               	movf	plusw1,w,c
 10746  011A4A  6EE6               	movwf	postinc1,c
 10747                           
 10748                           ;stkvar	_f @ sp[(-33)+22]
 10749  011A4C  0EF5               	movlw	-11
 10750  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
 10751  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
 10752  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
 10753  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
 10754                           
 10755                           ;stkvar	_fp @ sp[(-37)+-2]
 10756  011A66  0ED9               	movlw	-39
 10757  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
 10758  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 10759  011A74  EC00  F080         	call	_efgtoa	;wreg free
 10760  011A78  D3B6               	goto	l2237
 10761  011A7A                     l11529:
 10762                           
 10763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 10764  011A7A  0E02               	movlw	2
 10765  011A7C  6EE6               	movwf	postinc1,c
 10766  011A7E  0E00               	movlw	0
 10767  011A80  6EE6               	movwf	postinc1,c
 10768  011A82  0EED               	movlw	low STR_64
 10769  011A84  6EE6               	movwf	postinc1,c
 10770  011A86  0EFF               	movlw	high STR_64
 10771  011A88  6EE6               	movwf	postinc1,c
 10772                           
 10773                           ;stkvar	_ct @ sp[(-36)+26]
 10774  011A8A  0EF6               	movlw	246
 10775  011A8C  24E1               	addwf	fsr1l,w,c
 10776  011A8E  6E01               	movwf	btemp^0,c
 10777  011A90  0EFF               	movlw	255
 10778  011A92  20E2               	addwfc	fsr1h,w,c
 10779  011A94  6E02               	movwf	(btemp+1)^0,c
 10780  011A96  0060  F007  FFE6   	movff	btemp,postinc1
 10781  011A9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10782  011AA2  EC6F  F0B5         	call	_strncmp	;wreg free
 10783  011AA6  5001               	movf	btemp^0,w,c
 10784  011AA8  1002               	iorwf	(btemp+1)^0,w,c
 10785  011AAA  A4D8               	btfss	status,2,c
 10786  011AAC  D096               	goto	l11549
 10787                           
 10788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 10789                           ;stkvar	_fmt @ sp[(-32)+-4]
 10790  011AAE  0EDC               	movlw	-36
 10791  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10792  011AB6  0EDD               	movlw	-35
 10793  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10794  011ABE  006F FF78  F00B    	movff	postinc2,btemp+10
 10795  011AC4  006F FF74  F00C    	movff	postdec2,btemp+11
 10796  011ACA  0E01               	movlw	1
 10797  011ACC  260B               	addwf	(btemp+10)^0,f,c
 10798  011ACE  0E00               	movlw	0
 10799  011AD0  220C               	addwfc	(btemp+11)^0,f,c
 10800  011AD2  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10801  011AD8  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10802  011ADE                     	if	0	;tblptru may be non-zero
 10803  011ADE                     	endif
 10804  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10805  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
 10806  011AE0  6EF8               	movwf	tblptru,c
 10807  011AE2                     	endif
 10808                           
 10809                           ;stkvar	_c @ sp[(-32)+31]
 10810  011AE2  0008               	tblrd		*
 10811  011AE4  0EFF               	movlw	-1
 10812  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
 10813  011AEC  0EBF               	movlw	191
 10814  011AEE  6E0B               	movwf	(btemp+10)^0,c
 10815  011AF0  0EFF               	movlw	255
 10816  011AF2  6E0C               	movwf	(btemp+11)^0,c
 10817                           
 10818                           ;stkvar	_fmt @ sp[(-32)+-4]
 10819  011AF4  0EDC               	movlw	-36
 10820  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10821  011AFC  0EDD               	movlw	-35
 10822  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10823  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
 10824  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10825  011B10                     	if	0	;tblptru may be non-zero
 10826  011B10                     	endif
 10827  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10828  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
 10829  011B12  6EF8               	movwf	tblptru,c
 10830  011B14                     	endif
 10831  011B14  0008               	tblrd		*
 10832  011B16  50F5               	movf	tablat,w,c
 10833  011B18  6E09               	movwf	(btemp+8)^0,c
 10834  011B1A  6A0A               	clrf	(btemp+9)^0,c
 10835  011B1C  500B               	movf	(btemp+10)^0,w,c
 10836  011B1E  2609               	addwf	(btemp+8)^0,f,c
 10837  011B20  500C               	movf	(btemp+11)^0,w,c
 10838  011B22  220A               	addwfc	(btemp+9)^0,f,c
 10839  011B24  500A               	movf	(btemp+9)^0,w,c
 10840  011B26  E106               	bnz	u11430
 10841  011B28  0E1A               	movlw	26
 10842  011B2A  5C09               	subwf	(btemp+8)^0,w,c
 10843  011B2C  B0D8               	btfsc	status,0,c
 10844  011B2E  D002               	goto	u11430
 10845  011B30  0E01               	movlw	1
 10846  011B32  D001               	goto	u11440
 10847  011B34                     u11430:
 10848  011B34  0E00               	movlw	0
 10849  011B36                     u11440:
 10850  011B36  6E0B               	movwf	(btemp+10)^0,c
 10851  011B38  6A0C               	clrf	(btemp+11)^0,c
 10852                           
 10853                           ;stkvar	_vfpfcnvrt$5253 @ sp[(-32)+2]
 10854  011B3A  0EE2               	movlw	-30
 10855  011B3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10856  011B42  0EE3               	movlw	-29
 10857  011B44  0060  F033  FFE3   	movff	btemp+11,plusw1
 10858                           
 10859                           ;stkvar	_vfpfcnvrt$5253 @ sp[(-32)+2]
 10860  011B4A  0EE2               	movlw	-30
 10861  011B4C  006F FF8C  F001    	movff	plusw1,btemp
 10862  011B52  0EE3               	movlw	-29
 10863  011B54  50E3               	movf	plusw1,w,c
 10864  011B56  1001               	iorwf	btemp^0,w,c
 10865                           
 10866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10867                           ;stkvar	_ap @ sp[(-32)+-6]
 10868                           
 10869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 10870                           
 10871                           ;stkvar	_f @ sp[(-32)+22]
 10872                           
 10873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 10874                           ;stkvar	_ap @ sp[(-32)+-6]
 10875  011B58  0EDA               	movlw	-38
 10876  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10877  011B60  0EDB               	movlw	-37
 10878  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
 10879  011B68  0E04               	movlw	4
 10880  011B6A  5EDE               	subwf	postinc2,f,c
 10881  011B6C  0E00               	movlw	0
 10882  011B6E  5ADD               	subwfb	postdec2,f,c
 10883  011B70  006F FF78  F00B    	movff	postinc2,btemp+10
 10884  011B76  006F FF74  F00C    	movff	postdec2,btemp+11
 10885  011B7C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10886  011B82  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10887  011B88  006F FF78  F009    	movff	postinc2,btemp+8
 10888  011B8E  006F FF78  F00A    	movff	postinc2,btemp+9
 10889  011B94  006F FF78  F00B    	movff	postinc2,btemp+10
 10890  011B9A  006F FF78  F00C    	movff	postinc2,btemp+11
 10891                           
 10892                           ;stkvar	_f @ sp[(-32)+22]
 10893  011BA0  0EF6               	movlw	-10
 10894  011BA2  0060  F027  FFE3   	movff	btemp+8,plusw1
 10895  011BA8  0EF7               	movlw	-9
 10896  011BAA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10897  011BB0  0EF8               	movlw	-8
 10898  011BB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10899  011BB8  0EF9               	movlw	-7
 10900  011BBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 10901                           
 10902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 10903                           ;stkvar	_fmt @ sp[(-32)+-4]
 10904  011BC0  0EDC               	movlw	-36
 10905  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10906  011BC8  0EDD               	movlw	-35
 10907  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10908  011BD0  0E02               	movlw	2
 10909  011BD2  26DE               	addwf	postinc2,f,c
 10910  011BD4  0E00               	movlw	0
 10911  011BD6  22DD               	addwfc	postdec2,f,c
 10912  011BD8  D736               	goto	l11525
 10913  011BDA                     l11549:
 10914                           
 10915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 10916                           ;stkvar	_fmt @ sp[(-32)+-4]
 10917  011BDA  0EDC               	movlw	-36
 10918  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10919  011BE2  0EDD               	movlw	-35
 10920  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10921  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10922  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10923  011BF6                     	if	0	;tblptru may be non-zero
 10924  011BF6                     	endif
 10925  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10926  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 10927  011BF8  6EF8               	movwf	tblptru,c
 10928  011BFA                     	endif
 10929  011BFA  0008               	tblrd		*
 10930  011BFC  50F5               	movf	tablat,w,c
 10931  011BFE  0A73               	xorlw	115
 10932  011C00  A4D8               	btfss	status,2,c
 10933  011C02  D042               	goto	l11559
 10934                           
 10935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 10936                           ;stkvar	_fmt @ sp[(-32)+-4]
 10937  011C04  0EDC               	movlw	-36
 10938  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
 10939  011C0C  0EDD               	movlw	-35
 10940  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10941  011C14  2ADE               	incf	postinc2,f,c
 10942  011C16  0E00               	movlw	0
 10943  011C18  22DD               	addwfc	postdec2,f,c
 10944                           
 10945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 10946                           ;stkvar	_ap @ sp[(-32)+-6]
 10947  011C1A  0EDA               	movlw	-38
 10948  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10949  011C22  0EDB               	movlw	-37
 10950  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
 10951  011C2A  0E02               	movlw	2
 10952  011C2C  5EDE               	subwf	postinc2,f,c
 10953  011C2E  0E00               	movlw	0
 10954  011C30  5ADD               	subwfb	postdec2,f,c
 10955  011C32  006F FF78  F00B    	movff	postinc2,btemp+10
 10956  011C38  006F FF74  F00C    	movff	postdec2,btemp+11
 10957  011C3E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10958  011C44  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10959  011C4A  006F FF78  F00B    	movff	postinc2,btemp+10
 10960  011C50  006F FF74  F00C    	movff	postdec2,btemp+11
 10961                           
 10962                           ;stkvar	_cp @ sp[(-32)+29]
 10963  011C56  0EFE               	movlw	-2
 10964  011C58  0060  F033  FFE3   	movff	btemp+11,plusw1
 10965  011C5E  0EFD               	movlw	-3
 10966  011C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10967                           
 10968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 10969                           ;stkvar	_cp @ sp[(-32)+29]
 10970  011C66  0EFD               	movlw	-3
 10971  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 10972  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
 10973                           
 10974                           ;stkvar	_fp @ sp[(-34)+-2]
 10975  011C74  0EDC               	movlw	-36
 10976  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 10977  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 10978  011C82  EC76  F0B0         	call	_stoa	;wreg free
 10979  011C86  D2AF               	goto	l2237
 10980  011C88                     l11559:
 10981                           
 10982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 10983                           ;stkvar	_fmt @ sp[(-32)+-4]
 10984  011C88  0EDC               	movlw	-36
 10985  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10986  011C90  0EDD               	movlw	-35
 10987  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
 10988  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
 10989  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10990  011CA4                     	if	0	;tblptru may be non-zero
 10991  011CA4                     	endif
 10992  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10993  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
 10994  011CA6  6EF8               	movwf	tblptru,c
 10995  011CA8                     	endif
 10996  011CA8  0008               	tblrd		*
 10997  011CAA  50F5               	movf	tablat,w,c
 10998  011CAC  0A75               	xorlw	117
 10999  011CAE  A4D8               	btfss	status,2,c
 11000  011CB0  D07C               	goto	l11569
 11001                           
 11002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 11003                           ;stkvar	_fmt @ sp[(-32)+-4]
 11004  011CB2  0EDC               	movlw	-36
 11005  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11006  011CBA  0EDD               	movlw	-35
 11007  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11008  011CC2  2ADE               	incf	postinc2,f,c
 11009  011CC4  0E00               	movlw	0
 11010  011CC6  22DD               	addwfc	postdec2,f,c
 11011                           
 11012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11013                           ;stkvar	_ap @ sp[(-32)+-6]
 11014  011CC8  0EDA               	movlw	-38
 11015  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11016  011CD0  0EDB               	movlw	-37
 11017  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11018  011CD8  0E02               	movlw	2
 11019  011CDA  5EDE               	subwf	postinc2,f,c
 11020  011CDC  0E00               	movlw	0
 11021  011CDE  5ADD               	subwfb	postdec2,f,c
 11022  011CE0  006F FF78  F00B    	movff	postinc2,btemp+10
 11023  011CE6  006F FF74  F00C    	movff	postdec2,btemp+11
 11024  011CEC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11025  011CF2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11026  011CF8  006F FF78  F00B    	movff	postinc2,btemp+10
 11027  011CFE  006F FF74  F00C    	movff	postdec2,btemp+11
 11028  011D04  500B               	movf	(btemp+10)^0,w,c
 11029  011D06  6E11               	movwf	(btemp+16)^0,c
 11030  011D08  500C               	movf	(btemp+11)^0,w,c
 11031  011D0A  6E12               	movwf	(btemp+17)^0,c
 11032  011D0C  6A13               	clrf	(btemp+18)^0,c
 11033  011D0E  6A14               	clrf	(btemp+19)^0,c
 11034  011D10  6A15               	clrf	(btemp+20)^0,c
 11035  011D12  6A16               	clrf	(btemp+21)^0,c
 11036  011D14  6A17               	clrf	(btemp+22)^0,c
 11037  011D16  6A18               	clrf	(btemp+23)^0,c
 11038                           
 11039                           ;stkvar	_llu @ sp[(-32)+6]
 11040  011D18  0EE6               	movlw	-26
 11041  011D1A  0060  F047  FFE3   	movff	btemp+16,plusw1
 11042  011D20  0EE7               	movlw	-25
 11043  011D22  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11044  011D28  0EE8               	movlw	-24
 11045  011D2A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11046  011D30  0EE9               	movlw	-23
 11047  011D32  0060  F053  FFE3   	movff	btemp+19,plusw1
 11048  011D38  0EEA               	movlw	-22
 11049  011D3A  0060  F057  FFE3   	movff	btemp+20,plusw1
 11050  011D40  0EEB               	movlw	-21
 11051  011D42  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11052  011D48  0EEC               	movlw	-20
 11053  011D4A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11054  011D50  0EED               	movlw	-19
 11055  011D52  0060  F063  FFE3   	movff	btemp+23,plusw1
 11056                           
 11057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 11058                           ;stkvar	_llu @ sp[(-32)+6]
 11059  011D58  50E1               	movf	fsr1l,w,c
 11060  011D5A  0FE6               	addlw	-26
 11061  011D5C  6ED9               	movwf	fsr2l,c
 11062  011D5E  50E2               	movf	fsr1h,w,c
 11063  011D60  6EDA               	movwf	fsr2h,c
 11064  011D62  0EFF               	movlw	255
 11065  011D64  22DA               	addwfc	fsr2h,f,c
 11066  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
 11067  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
 11068  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
 11069  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
 11070  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 11071  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
 11072  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 11073  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
 11074                           
 11075                           ;stkvar	_fp @ sp[(-40)+-2]
 11076  011D96  0ED6               	movlw	-42
 11077  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11078  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11079  011DA4  ECEB  F0AB         	call	_utoa	;wreg free
 11080  011DA8  D21E               	goto	l2237
 11081  011DAA                     l11569:
 11082                           
 11083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 11084  011DAA  0E02               	movlw	2
 11085  011DAC  6EE6               	movwf	postinc1,c
 11086  011DAE  0E00               	movlw	0
 11087  011DB0  6EE6               	movwf	postinc1,c
 11088  011DB2  0EF3               	movlw	low STR_69
 11089  011DB4  6EE6               	movwf	postinc1,c
 11090  011DB6  0EFF               	movlw	high STR_69
 11091  011DB8  6EE6               	movwf	postinc1,c
 11092                           
 11093                           ;stkvar	_fmt @ sp[(-36)+-4]
 11094  011DBA  0ED8               	movlw	-40
 11095  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11096  011DC2  0ED9               	movlw	-39
 11097  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11098  011DCA  006F FF78  F00B    	movff	postinc2,btemp+10
 11099  011DD0  006F FF74  F00C    	movff	postdec2,btemp+11
 11100  011DD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11101  011DDC  0060  F033  FFE6   	movff	btemp+11,postinc1
 11102  011DE2  EC6F  F0B5         	call	_strncmp	;wreg free
 11103  011DE6  5001               	movf	btemp^0,w,c
 11104  011DE8  1002               	iorwf	(btemp+1)^0,w,c
 11105  011DEA  A4D8               	btfss	status,2,c
 11106  011DEC  D039               	goto	l11579
 11107                           
 11108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 11109                           ;stkvar	_fmt @ sp[(-32)+-4]
 11110  011DEE  0EDC               	movlw	-36
 11111  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11112  011DF6  0EDD               	movlw	-35
 11113  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11114  011DFE  0E02               	movlw	2
 11115  011E00  26DE               	addwf	postinc2,f,c
 11116  011E02  0E00               	movlw	0
 11117  011E04  22DD               	addwfc	postdec2,f,c
 11118                           
 11119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11120                           ;stkvar	_ap @ sp[(-32)+-6]
 11121  011E06  0EDA               	movlw	-38
 11122  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
 11123  011E0E  0EDB               	movlw	-37
 11124  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
 11125  011E16  0E04               	movlw	4
 11126  011E18  5EDE               	subwf	postinc2,f,c
 11127  011E1A  0E00               	movlw	0
 11128  011E1C  5ADD               	subwfb	postdec2,f,c
 11129  011E1E  006F FF78  F00B    	movff	postinc2,btemp+10
 11130  011E24  006F FF74  F00C    	movff	postdec2,btemp+11
 11131  011E2A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11132  011E30  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11133  011E36  006F FF78  F009    	movff	postinc2,btemp+8
 11134  011E3C  006F FF78  F00A    	movff	postinc2,btemp+9
 11135  011E42  006F FF78  F00B    	movff	postinc2,btemp+10
 11136  011E48  006F FF78  F00C    	movff	postinc2,btemp+11
 11137  011E4E  5009               	movf	(btemp+8)^0,w,c
 11138  011E50  6E11               	movwf	(btemp+16)^0,c
 11139  011E52  500A               	movf	(btemp+9)^0,w,c
 11140  011E54  6E12               	movwf	(btemp+17)^0,c
 11141  011E56  500B               	movf	(btemp+10)^0,w,c
 11142  011E58  6E13               	movwf	(btemp+18)^0,c
 11143  011E5A  500C               	movf	(btemp+11)^0,w,c
 11144  011E5C  6E14               	movwf	(btemp+19)^0,c
 11145  011E5E  D758               	goto	L7
 11146  011E60                     l11579:
 11147                           
 11148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 11149                           ;stkvar	_fmt @ sp[(-32)+-4]
 11150  011E60  0EDC               	movlw	-36
 11151  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
 11152  011E68  0EDD               	movlw	-35
 11153  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11154  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
 11155  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
 11156  011E7C                     	if	0	;tblptru may be non-zero
 11157  011E7C                     	endif
 11158  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11159  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
 11160  011E7E  6EF8               	movwf	tblptru,c
 11161  011E80                     	endif
 11162  011E80  0008               	tblrd		*
 11163  011E82  50F5               	movf	tablat,w,c
 11164  011E84  0A78               	xorlw	120
 11165  011E86  B4D8               	btfsc	status,2,c
 11166  011E88  D015               	goto	u11500
 11167                           
 11168                           ;stkvar	_fmt @ sp[(-32)+-4]
 11169  011E8A  0EDC               	movlw	-36
 11170  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11171  011E92  0EDD               	movlw	-35
 11172  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
 11173  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11174  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11175  011EA6                     	if	0	;tblptru may be non-zero
 11176  011EA6                     	endif
 11177  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11178  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 11179  011EA8  6EF8               	movwf	tblptru,c
 11180  011EAA                     	endif
 11181  011EAA  0008               	tblrd		*
 11182  011EAC  50F5               	movf	tablat,w,c
 11183  011EAE  0A58               	xorlw	88
 11184  011EB0  A4D8               	btfss	status,2,c
 11185  011EB2  D094               	goto	l11593
 11186  011EB4                     u11500:
 11187                           
 11188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 11189                           ;stkvar	_fmt @ sp[(-32)+-4]
 11190  011EB4  0EDC               	movlw	-36
 11191  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11192  011EBC  0EDD               	movlw	-35
 11193  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11194  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 11195  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
 11196  011ED0                     	if	0	;tblptru may be non-zero
 11197  011ED0                     	endif
 11198  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11199  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
 11200  011ED2  6EF8               	movwf	tblptru,c
 11201  011ED4                     	endif
 11202                           
 11203                           ;stkvar	_c @ sp[(-32)+31]
 11204  011ED4  0008               	tblrd		*
 11205  011ED6  0EFF               	movlw	-1
 11206  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
 11207                           
 11208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 11209                           ;stkvar	_fmt @ sp[(-32)+-4]
 11210  011EDE  0EDC               	movlw	-36
 11211  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11212  011EE6  0EDD               	movlw	-35
 11213  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11214  011EEE  2ADE               	incf	postinc2,f,c
 11215  011EF0  0E00               	movlw	0
 11216  011EF2  22DD               	addwfc	postdec2,f,c
 11217                           
 11218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11219                           ;stkvar	_ap @ sp[(-32)+-6]
 11220  011EF4  0EDA               	movlw	-38
 11221  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11222  011EFC  0EDB               	movlw	-37
 11223  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11224  011F04  0E02               	movlw	2
 11225  011F06  5EDE               	subwf	postinc2,f,c
 11226  011F08  0E00               	movlw	0
 11227  011F0A  5ADD               	subwfb	postdec2,f,c
 11228  011F0C  006F FF78  F00B    	movff	postinc2,btemp+10
 11229  011F12  006F FF74  F00C    	movff	postdec2,btemp+11
 11230  011F18  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11231  011F1E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11232  011F24  006F FF78  F00B    	movff	postinc2,btemp+10
 11233  011F2A  006F FF74  F00C    	movff	postdec2,btemp+11
 11234  011F30  500B               	movf	(btemp+10)^0,w,c
 11235  011F32  6E11               	movwf	(btemp+16)^0,c
 11236  011F34  500C               	movf	(btemp+11)^0,w,c
 11237  011F36  6E12               	movwf	(btemp+17)^0,c
 11238  011F38  6A13               	clrf	(btemp+18)^0,c
 11239  011F3A  6A14               	clrf	(btemp+19)^0,c
 11240  011F3C  6A15               	clrf	(btemp+20)^0,c
 11241  011F3E  6A16               	clrf	(btemp+21)^0,c
 11242  011F40  6A17               	clrf	(btemp+22)^0,c
 11243  011F42  6A18               	clrf	(btemp+23)^0,c
 11244                           
 11245                           ;stkvar	_llu @ sp[(-32)+6]
 11246  011F44  0EE6               	movlw	-26
 11247  011F46  0060  F047  FFE3   	movff	btemp+16,plusw1
 11248  011F4C  0EE7               	movlw	-25
 11249  011F4E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11250  011F54  0EE8               	movlw	-24
 11251  011F56  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11252  011F5C  0EE9               	movlw	-23
 11253  011F5E  0060  F053  FFE3   	movff	btemp+19,plusw1
 11254  011F64  0EEA               	movlw	-22
 11255  011F66  0060  F057  FFE3   	movff	btemp+20,plusw1
 11256  011F6C  0EEB               	movlw	-21
 11257  011F6E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11258  011F74  0EEC               	movlw	-20
 11259  011F76  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11260  011F7C  0EED               	movlw	-19
 11261  011F7E  0060  F063  FFE3   	movff	btemp+23,plusw1
 11262                           
 11263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 11264                           ;stkvar	_c @ sp[(-32)+31]
 11265  011F84  0EFF               	movlw	-1
 11266  011F86  50E3               	movf	plusw1,w,c
 11267  011F88  6EE6               	movwf	postinc1,c
 11268                           
 11269                           ;stkvar	_llu @ sp[(-33)+6]
 11270  011F8A  50E1               	movf	fsr1l,w,c
 11271  011F8C  0FE5               	addlw	-27
 11272  011F8E  6ED9               	movwf	fsr2l,c
 11273  011F90  50E2               	movf	fsr1h,w,c
 11274  011F92  6EDA               	movwf	fsr2h,c
 11275  011F94  0EFF               	movlw	255
 11276  011F96  22DA               	addwfc	fsr2h,f,c
 11277  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
 11278  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
 11279  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
 11280  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
 11281  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
 11282  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 11283  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 11284  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 11285                           
 11286                           ;stkvar	_fp @ sp[(-41)+-2]
 11287  011FC8  0ED5               	movlw	-43
 11288  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 11289  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
 11290  011FD6  EC58  F0A8         	call	_xtoa	;wreg free
 11291  011FDA  D105               	goto	l2237
 11292  011FDC                     l11593:
 11293                           
 11294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 11295  011FDC  0E02               	movlw	2
 11296  011FDE  6EE6               	movwf	postinc1,c
 11297  011FE0  0E00               	movlw	0
 11298  011FE2  6EE6               	movwf	postinc1,c
 11299  011FE4  0EF6               	movlw	low STR_74
 11300  011FE6  6EE6               	movwf	postinc1,c
 11301  011FE8  0EFF               	movlw	high STR_74
 11302  011FEA  6EE6               	movwf	postinc1,c
 11303                           
 11304                           ;stkvar	_fmt @ sp[(-36)+-4]
 11305  011FEC  0ED8               	movlw	-40
 11306  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11307  011FF4  0ED9               	movlw	-39
 11308  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11309  011FFC  006F FF78  F00B    	movff	postinc2,btemp+10
 11310  012002  006F FF74  F00C    	movff	postdec2,btemp+11
 11311  012008  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11312  01200E  0060  F033  FFE6   	movff	btemp+11,postinc1
 11313  012014  EC6F  F0B5         	call	_strncmp	;wreg free
 11314  012018  5001               	movf	btemp^0,w,c
 11315  01201A  1002               	iorwf	(btemp+1)^0,w,c
 11316  01201C  B4D8               	btfsc	status,2,c
 11317  01201E  D022               	goto	u11520
 11318  012020  0E02               	movlw	2
 11319  012022  6EE6               	movwf	postinc1,c
 11320  012024  0E00               	movlw	0
 11321  012026  6EE6               	movwf	postinc1,c
 11322  012028  0EE7               	movlw	low STR_78
 11323  01202A  6EE6               	movwf	postinc1,c
 11324  01202C  0EFF               	movlw	high STR_78
 11325  01202E  6EE6               	movwf	postinc1,c
 11326                           
 11327                           ;stkvar	_fmt @ sp[(-36)+-4]
 11328  012030  0ED8               	movlw	-40
 11329  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
 11330  012038  0ED9               	movlw	-39
 11331  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11332  012040  006F FF78  F00B    	movff	postinc2,btemp+10
 11333  012046  006F FF74  F00C    	movff	postdec2,btemp+11
 11334  01204C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11335  012052  0060  F033  FFE6   	movff	btemp+11,postinc1
 11336  012058  EC6F  F0B5         	call	_strncmp	;wreg free
 11337  01205C  5001               	movf	btemp^0,w,c
 11338  01205E  1002               	iorwf	(btemp+1)^0,w,c
 11339  012060  A4D8               	btfss	status,2,c
 11340  012062  D058               	goto	l11607
 11341  012064                     u11520:
 11342                           
 11343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 11344                           ;stkvar	_fmt @ sp[(-32)+-4]
 11345  012064  0EDC               	movlw	-36
 11346  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
 11347  01206C  0EDD               	movlw	-35
 11348  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11349  012074  006F FF78  F00B    	movff	postinc2,btemp+10
 11350  01207A  006F FF74  F00C    	movff	postdec2,btemp+11
 11351  012080  0E01               	movlw	1
 11352  012082  260B               	addwf	(btemp+10)^0,f,c
 11353  012084  0E00               	movlw	0
 11354  012086  220C               	addwfc	(btemp+11)^0,f,c
 11355  012088  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11356  01208E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11357  012094                     	if	0	;tblptru may be non-zero
 11358  012094                     	endif
 11359  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11360  012094  0E00               	movlw	low (__mediumconst shr (0+16))
 11361  012096  6EF8               	movwf	tblptru,c
 11362  012098                     	endif
 11363                           
 11364                           ;stkvar	_c @ sp[(-32)+31]
 11365  012098  0008               	tblrd		*
 11366  01209A  0EFF               	movlw	-1
 11367  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
 11368                           
 11369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 11370                           ;stkvar	_fmt @ sp[(-32)+-4]
 11371  0120A2  0EDC               	movlw	-36
 11372  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11373  0120AA  0EDD               	movlw	-35
 11374  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11375  0120B2  0E02               	movlw	2
 11376  0120B4  26DE               	addwf	postinc2,f,c
 11377  0120B6  0E00               	movlw	0
 11378  0120B8  22DD               	addwfc	postdec2,f,c
 11379                           
 11380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11381                           ;stkvar	_ap @ sp[(-32)+-6]
 11382  0120BA  0EDA               	movlw	-38
 11383  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11384  0120C2  0EDB               	movlw	-37
 11385  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11386  0120CA  0E04               	movlw	4
 11387  0120CC  5EDE               	subwf	postinc2,f,c
 11388  0120CE  0E00               	movlw	0
 11389  0120D0  5ADD               	subwfb	postdec2,f,c
 11390  0120D2  006F FF78  F00B    	movff	postinc2,btemp+10
 11391  0120D8  006F FF74  F00C    	movff	postdec2,btemp+11
 11392  0120DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11393  0120E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11394  0120EA  006F FF78  F009    	movff	postinc2,btemp+8
 11395  0120F0  006F FF78  F00A    	movff	postinc2,btemp+9
 11396  0120F6  006F FF78  F00B    	movff	postinc2,btemp+10
 11397  0120FC  006F FF78  F00C    	movff	postinc2,btemp+11
 11398  012102  5009               	movf	(btemp+8)^0,w,c
 11399  012104  6E11               	movwf	(btemp+16)^0,c
 11400  012106  500A               	movf	(btemp+9)^0,w,c
 11401  012108  6E12               	movwf	(btemp+17)^0,c
 11402  01210A  500B               	movf	(btemp+10)^0,w,c
 11403  01210C  6E13               	movwf	(btemp+18)^0,c
 11404  01210E  500C               	movf	(btemp+11)^0,w,c
 11405  012110  6E14               	movwf	(btemp+19)^0,c
 11406  012112  D714               	goto	L8
 11407  012114                     l11607:
 11408                           
 11409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 11410                           ;stkvar	_fmt @ sp[(-32)+-4]
 11411  012114  0EDC               	movlw	-36
 11412  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
 11413  01211C  0EDD               	movlw	-35
 11414  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11415  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
 11416  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11417  012130                     	if	0	;tblptru may be non-zero
 11418  012130                     	endif
 11419  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11420  012130  0E00               	movlw	low (__mediumconst shr (0+16))
 11421  012132  6EF8               	movwf	tblptru,c
 11422  012134                     	endif
 11423  012134  0008               	tblrd		*
 11424  012136  50F5               	movf	tablat,w,c
 11425  012138  0A25               	xorlw	37
 11426  01213A  A4D8               	btfss	status,2,c
 11427  01213C  D01A               	goto	l11617
 11428                           
 11429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 11430                           ;stkvar	_fmt @ sp[(-32)+-4]
 11431  01213E  0EDC               	movlw	-36
 11432  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
 11433  012146  0EDD               	movlw	-35
 11434  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
 11435  01214E  2ADE               	incf	postinc2,f,c
 11436  012150  0E00               	movlw	0
 11437  012152  22DD               	addwfc	postdec2,f,c
 11438                           
 11439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 11440                           ;stkvar	_fp @ sp[(-32)+-2]
 11441  012154  0EDE               	movlw	-34
 11442  012156  006F FF8F FFE6     	movff	plusw1,postinc1
 11443  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
 11444  012162  0E25               	movlw	37
 11445  012164  6EE6               	movwf	postinc1,c
 11446  012166  0E00               	movlw	0
 11447  012168  6EE6               	movwf	postinc1,c
 11448  01216A  EC39  F0C1         	call	_fputc	;wreg free
 11449  01216E                     l11613:
 11450                           
 11451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 11452  01216E  0E01               	movlw	1
 11453  012170  D00C               	goto	L9
 11454  012172                     l11617:
 11455                           
 11456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 11457                           ;stkvar	_fmt @ sp[(-32)+-4]
 11458  012172  0EDC               	movlw	-36
 11459  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
 11460  01217A  0EDD               	movlw	-35
 11461  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11462  012182  2ADE               	incf	postinc2,f,c
 11463  012184  0E00               	movlw	0
 11464  012186  22DD               	addwfc	postdec2,f,c
 11465                           
 11466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 11467  012188  0E00               	movlw	0
 11468  01218A                     L9:
 11469  01218A  6E01               	movwf	btemp^0,c
 11470  01218C  0E00               	movlw	0
 11471  01218E  6E02               	movwf	(btemp+1)^0,c
 11472  012190  D02A               	goto	l2237
 11473  012192                     l11623:
 11474                           
 11475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 11476                           ;stkvar	_fp @ sp[(-32)+-2]
 11477  012192  0EDE               	movlw	-34
 11478  012194  006F FF8F FFE6     	movff	plusw1,postinc1
 11479  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
 11480                           
 11481                           ;stkvar	_fmt @ sp[(-34)+-4]
 11482  0121A0  0EDA               	movlw	-38
 11483  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11484  0121A8  0EDB               	movlw	-37
 11485  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11486  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 11487  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 11488  0121BC                     	if	0	;tblptru may be non-zero
 11489  0121BC                     	endif
 11490  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11491  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
 11492  0121BE  6EF8               	movwf	tblptru,c
 11493  0121C0                     	endif
 11494  0121C0  0008               	tblrd		*
 11495  0121C2  50F5               	movf	tablat,w,c
 11496  0121C4  6EE6               	movwf	postinc1,c
 11497  0121C6  0E00               	movlw	0
 11498  0121C8  6EE6               	movwf	postinc1,c
 11499  0121CA  EC39  F0C1         	call	_fputc	;wreg free
 11500                           
 11501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 11502                           ;stkvar	_fmt @ sp[(-32)+-4]
 11503  0121CE  0EDC               	movlw	-36
 11504  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11505  0121D6  0EDD               	movlw	-35
 11506  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11507  0121DE  2ADE               	incf	postinc2,f,c
 11508  0121E0  0E00               	movlw	0
 11509  0121E2  22DD               	addwfc	postdec2,f,c
 11510  0121E4  D7C4               	goto	l11613
 11511  0121E6                     l2237:
 11512                           
 11513                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 11514  0121E6  0EDA               	movlw	218
 11515  0121E8  26E1               	addwf	fsr1l,f,c
 11516  0121EA  0EFF               	movlw	255
 11517  0121EC  22E2               	addwfc	fsr1h,f,c
 11518  0121EE  0012               	return		;funcret
 11519  0121F0                     __end_of_vfpfcnvrt:
 11520                           	opt callstack 0
 11521                           
 11522 ;; *************** function _xtoa *****************
 11523 ;; Defined at:
 11524 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11525 ;; Parameters:    Size  Location     Type
 11526 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11527 ;;		 -> f(6), NULL(0), 
 11528 ;;  d               8  [STACK] unsigned long long 
 11529 ;;  x               1  [STACK] unsigned char 
 11530 ;; Auto vars:     Size  Location     Type
 11531 ;;  n               8  [STACK] unsigned long long 
 11532 ;;  c               2  [STACK] int 
 11533 ;;  i               2  [STACK] int 
 11534 ;;  w               2  [STACK] int 
 11535 ;;  p               2  [STACK] int 
 11536 ;; Return value:  Size  Location     Type
 11537 ;;                  2  [STACK] int 
 11538 ;; Registers used:
 11539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11540 ;; Tracked objects:
 11541 ;;		On entry : 0/0
 11542 ;;		On exit  : 0/0
 11543 ;;		Unchanged: 0/0
 11544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11549 ;;Total ram usage:        0 bytes
 11550 ;; Hardware stack levels used:    1
 11551 ;; Hardware stack levels required when called:   20
 11552 ;; This function calls:
 11553 ;;		_isalpha
 11554 ;;		_isupper
 11555 ;;		_pad
 11556 ;;		_toupper
 11557 ;; This function is called by:
 11558 ;;		_vfpfcnvrt
 11559 ;; This function uses a reentrant model
 11560 ;;
 11561                           
 11562                           	psect	text44
 11563  0150B0                     __ptext44:
 11564                           	opt callstack 0
 11565  0150B0                     _xtoa:
 11566                           	opt callstack 0
 11567                           
 11568                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11569  0150B0  0E14               	movlw	20
 11570  0150B2  26E1               	addwf	fsr1l,f,c
 11571  0150B4  0E00               	movlw	0
 11572  0150B6  22E2               	addwfc	fsr1h,f,c
 11573                           
 11574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 11575                           
 11576                           ;incstack = 0
 11577 ;; hardware stack exceeded
 11578  0150B8  AE24               	btfss	(_prec+1)^0,7,c
 11579                           
 11580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 11581  0150BA  9225               	bcf	_flags^0,1,c
 11582                           
 11583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 11584  0150BC  BE24               	btfsc	(_prec+1)^0,7,c
 11585  0150BE  D005               	goto	u11040
 11586  0150C0  5024               	movf	(_prec+1)^0,w,c
 11587  0150C2  E110               	bnz	l11343
 11588  0150C4  0423               	decf	_prec^0,w,c
 11589  0150C6  B0D8               	btfsc	status,0,c
 11590  0150C8  D00D               	goto	l11343
 11591  0150CA                     u11040:
 11592  0150CA  0E01               	movlw	1
 11593  0150CC  6E0B               	movwf	(btemp+10)^0,c
 11594  0150CE  0E00               	movlw	0
 11595  0150D0  6E0C               	movwf	(btemp+11)^0,c
 11596                           
 11597                           ;stkvar	_p @ sp[(-20)+18]
 11598  0150D2  0EFE               	movlw	-2
 11599  0150D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11600  0150DA  0EFF               	movlw	-1
 11601  0150DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 11602  0150E2  D008               	goto	l2187
 11603  0150E4                     l11343:
 11604                           
 11605                           ;stkvar	_p @ sp[(-20)+18]
 11606  0150E4  0EFE               	movlw	-2
 11607  0150E6  0060  F08F  FFE3   	movff	_prec,plusw1
 11608  0150EC  0EFF               	movlw	-1
 11609  0150EE  0060  F093  FFE3   	movff	_prec+1,plusw1
 11610  0150F4                     l2187:
 11611                           
 11612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 11613                           ;stkvar	_w @ sp[(-20)+16]
 11614  0150F4  0EFC               	movlw	-4
 11615  0150F6  0060  F087  FFE3   	movff	_width,plusw1
 11616  0150FC  0EFD               	movlw	-3
 11617  0150FE  0060  F08B  FFE3   	movff	_width+1,plusw1
 11618                           
 11619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 11620  015104  A825               	btfss	_flags^0,4,c
 11621  015106  D00B               	goto	l11349
 11622                           
 11623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 11624                           ;stkvar	_w @ sp[(-20)+16]
 11625  015108  50E1               	movf	fsr1l,w,c
 11626  01510A  0FFC               	addlw	-4
 11627  01510C  6ED9               	movwf	fsr2l,c
 11628  01510E  50E2               	movf	fsr1h,w,c
 11629  015110  6EDA               	movwf	fsr2h,c
 11630  015112  0EFF               	movlw	255
 11631  015114  22DA               	addwfc	fsr2h,f,c
 11632  015116  0EFE               	movlw	254
 11633  015118  26DE               	addwf	postinc2,f,c
 11634  01511A  0EFF               	movlw	255
 11635  01511C  22DD               	addwfc	postdec2,f,c
 11636  01511E                     l11349:
 11637                           
 11638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 11639                           ;stkvar	_d @ sp[(-20)+-10]
 11640  01511E  0EE2               	movlw	226
 11641  015120  24E1               	addwf	fsr1l,w,c
 11642  015122  6ED9               	movwf	fsr2l,c
 11643  015124  0EFF               	movlw	255
 11644  015126  20E2               	addwfc	fsr1h,w,c
 11645  015128  6EDA               	movwf	fsr2h,c
 11646                           
 11647                           ;stkvar	_n @ sp[(-20)+4]
 11648  01512A  0E08               	movlw	8
 11649  01512C  6E01               	movwf	btemp^0,c
 11650  01512E  0EF0               	movlw	-16
 11651  015130                     us1106999:
 11652  015130  006F FF7B FFE3     	movff	postinc2,plusw1
 11653  015136  28E8               	incf	wreg,w,c
 11654  015138  2E01               	decfsz	btemp^0,f,c
 11655  01513A  D7FA               	bra	us1106999
 11656                           
 11657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 11658  01513C  0E4F               	movlw	79
 11659  01513E  6E0B               	movwf	(btemp+10)^0,c
 11660  015140  0E00               	movlw	0
 11661  015142  6E0C               	movwf	(btemp+11)^0,c
 11662                           
 11663                           ;stkvar	_i @ sp[(-20)+14]
 11664  015144  0EFA               	movlw	-6
 11665  015146  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11666  01514C  0EFB               	movlw	-5
 11667  01514E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11668                           
 11669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 11670  015154  0103               	movlb	3	; () banked
 11671  015156  6BE3               	clrf	(_dbuf+79)& (0+255),b
 11672                           
 11673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11674  015158  D0EE               	goto	l11387
 11675  01515A                     l11355:
 11676                           
 11677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 11678                           ;stkvar	_i @ sp[(-20)+14]
 11679  01515A  50E1               	movf	fsr1l,w,c
 11680  01515C  0FFA               	addlw	-6
 11681  01515E  6ED9               	movwf	fsr2l,c
 11682  015160  50E2               	movf	fsr1h,w,c
 11683  015162  6EDA               	movwf	fsr2h,c
 11684  015164  0EFF               	movlw	255
 11685  015166  22DA               	addwfc	fsr2h,f,c
 11686  015168  06DE               	decf	postinc2,f,c
 11687  01516A  0E00               	movlw	0
 11688  01516C  5ADD               	subwfb	postdec2,f,c
 11689                           
 11690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 11691                           ;stkvar	_n @ sp[(-20)+4]
 11692  01516E  0EF0               	movlw	-16
 11693  015170  006F FF8C  F00B    	movff	plusw1,btemp+10
 11694  015176  0EF1               	movlw	-15
 11695  015178  006F FF8C  F00C    	movff	plusw1,btemp+11
 11696  01517E  0E0F               	movlw	15
 11697  015180  160B               	andwf	(btemp+10)^0,f,c
 11698  015182  0E00               	movlw	0
 11699  015184  160C               	andwf	(btemp+11)^0,f,c
 11700                           
 11701                           ;stkvar	_c @ sp[(-20)+12]
 11702  015186  0EF8               	movlw	-8
 11703  015188  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11704  01518E  0EF9               	movlw	-7
 11705  015190  0060  F033  FFE3   	movff	btemp+11,plusw1
 11706                           
 11707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 11708                           ;stkvar	_c @ sp[(-20)+12]
 11709  015196  0EF9               	movlw	-7
 11710  015198  BEE3               	btfsc	plusw1,7,c
 11711  01519A  D00F               	goto	l11363
 11712  01519C  0EF9               	movlw	-7
 11713  01519E  50E3               	movf	plusw1,w,c
 11714  0151A0  E108               	bnz	u11070
 11715  0151A2  0EF8               	movlw	-8
 11716  0151A4  006F FF8C  F001    	movff	plusw1,btemp
 11717  0151AA  0E0A               	movlw	10
 11718  0151AC  5E01               	subwf	btemp^0,f,c
 11719  0151AE  A0D8               	btfss	status,0,c
 11720  0151B0  D004               	goto	l11363
 11721  0151B2                     u11070:
 11722                           
 11723                           ;stkvar	_c @ sp[(-20)+12]
 11724  0151B2  0EF8               	movlw	-8
 11725  0151B4  50E3               	movf	plusw1,w,c
 11726  0151B6  0F57               	addlw	87
 11727  0151B8  D003               	goto	L10
 11728  0151BA                     l11363:
 11729                           
 11730                           ;stkvar	_c @ sp[(-20)+12]
 11731  0151BA  0EF8               	movlw	-8
 11732  0151BC  50E3               	movf	plusw1,w,c
 11733  0151BE  0F30               	addlw	48
 11734  0151C0                     L10:
 11735  0151C0  6E0B               	movwf	(btemp+10)^0,c
 11736  0151C2  0EF9               	movlw	-7
 11737  0151C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 11738  0151CA  0E00               	movlw	0
 11739  0151CC  220C               	addwfc	(btemp+11)^0,f,c
 11740                           
 11741                           ;stkvar	_c @ sp[(-20)+12]
 11742  0151CE  0EF8               	movlw	-8
 11743  0151D0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11744  0151D6  0EF9               	movlw	-7
 11745  0151D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 11746  0151DE  0EBF               	movlw	191
 11747  0151E0  6E0B               	movwf	(btemp+10)^0,c
 11748  0151E2  0EFF               	movlw	255
 11749  0151E4  6E0C               	movwf	(btemp+11)^0,c
 11750                           
 11751                           ;stkvar	_x @ sp[(-20)+-11]
 11752  0151E6  0EE1               	movlw	-31
 11753  0151E8  50E3               	movf	plusw1,w,c
 11754  0151EA  6E09               	movwf	(btemp+8)^0,c
 11755  0151EC  6A0A               	clrf	(btemp+9)^0,c
 11756  0151EE  500B               	movf	(btemp+10)^0,w,c
 11757  0151F0  2609               	addwf	(btemp+8)^0,f,c
 11758  0151F2  500C               	movf	(btemp+11)^0,w,c
 11759  0151F4  220A               	addwfc	(btemp+9)^0,f,c
 11760  0151F6  500A               	movf	(btemp+9)^0,w,c
 11761  0151F8  E106               	bnz	u11080
 11762  0151FA  0E1A               	movlw	26
 11763  0151FC  5C09               	subwf	(btemp+8)^0,w,c
 11764  0151FE  B0D8               	btfsc	status,0,c
 11765  015200  D002               	goto	u11080
 11766  015202  0E01               	movlw	1
 11767  015204  D001               	goto	u11090
 11768  015206                     u11080:
 11769  015206  0E00               	movlw	0
 11770  015208                     u11090:
 11771  015208  6E0B               	movwf	(btemp+10)^0,c
 11772  01520A  6A0C               	clrf	(btemp+11)^0,c
 11773                           
 11774                           ;stkvar	_xtoa$5226 @ sp[(-20)+2]
 11775  01520C  0EEE               	movlw	-18
 11776  01520E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11777  015214  0EEF               	movlw	-17
 11778  015216  0060  F033  FFE3   	movff	btemp+11,plusw1
 11779                           
 11780                           ;stkvar	_xtoa$5226 @ sp[(-20)+2]
 11781  01521C  0EEE               	movlw	-18
 11782  01521E  006F FF8C  F001    	movff	plusw1,btemp
 11783  015224  0EEF               	movlw	-17
 11784  015226  50E3               	movf	plusw1,w,c
 11785  015228  1001               	iorwf	btemp^0,w,c
 11786  01522A  B4D8               	btfsc	status,2,c
 11787  01522C  D041               	goto	l11379
 11788  01522E  0E9F               	movlw	159
 11789  015230  6E0B               	movwf	(btemp+10)^0,c
 11790  015232  0EFF               	movlw	255
 11791  015234  6E0C               	movwf	(btemp+11)^0,c
 11792                           
 11793                           ;stkvar	_c @ sp[(-20)+12]
 11794  015236  0EF8               	movlw	-8
 11795  015238  006F FF8C  F009    	movff	plusw1,btemp+8
 11796  01523E  0EF9               	movlw	-7
 11797  015240  006F FF8C  F00A    	movff	plusw1,btemp+9
 11798  015246  0E20               	movlw	32
 11799  015248  1209               	iorwf	(btemp+8)^0,f,c
 11800  01524A  0E00               	movlw	0
 11801  01524C  120A               	iorwf	(btemp+9)^0,f,c
 11802  01524E  500B               	movf	(btemp+10)^0,w,c
 11803  015250  2609               	addwf	(btemp+8)^0,f,c
 11804  015252  500C               	movf	(btemp+11)^0,w,c
 11805  015254  220A               	addwfc	(btemp+9)^0,f,c
 11806  015256  500A               	movf	(btemp+9)^0,w,c
 11807  015258  E106               	bnz	u11110
 11808  01525A  0E1A               	movlw	26
 11809  01525C  5C09               	subwf	(btemp+8)^0,w,c
 11810  01525E  B0D8               	btfsc	status,0,c
 11811  015260  D002               	goto	u11110
 11812  015262  0E01               	movlw	1
 11813  015264  D001               	goto	u11120
 11814  015266                     u11110:
 11815  015266  0E00               	movlw	0
 11816  015268                     u11120:
 11817  015268  6E0B               	movwf	(btemp+10)^0,c
 11818  01526A  6A0C               	clrf	(btemp+11)^0,c
 11819                           
 11820                           ;stkvar	_xtoa$5227 @ sp[(-20)+0]
 11821  01526C  0EEC               	movlw	-20
 11822  01526E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11823  015274  0EED               	movlw	-19
 11824  015276  0060  F033  FFE3   	movff	btemp+11,plusw1
 11825                           
 11826                           ;stkvar	_xtoa$5227 @ sp[(-20)+0]
 11827  01527C  0EEC               	movlw	-20
 11828  01527E  006F FF8C  F001    	movff	plusw1,btemp
 11829  015284  0EED               	movlw	-19
 11830  015286  50E3               	movf	plusw1,w,c
 11831  015288  1001               	iorwf	btemp^0,w,c
 11832  01528A  B4D8               	btfsc	status,2,c
 11833  01528C  D011               	goto	l11379
 11834                           
 11835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 11836                           ;stkvar	_c @ sp[(-20)+12]
 11837  01528E  0EF8               	movlw	-8
 11838  015290  006F FF8F FFE6     	movff	plusw1,postinc1
 11839  015296  006F FF8F FFE6     	movff	plusw1,postinc1
 11840  01529C  EC62  F0CA         	call	_toupper	;wreg free
 11841                           
 11842                           ;stkvar	_c @ sp[(-20)+12]
 11843  0152A0  0EF8               	movlw	-8
 11844  0152A2  0060  F007  FFE3   	movff	btemp,plusw1
 11845  0152A8  0EF9               	movlw	-7
 11846  0152AA  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11847  0152B0                     l11379:
 11848                           
 11849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 11850                           ;stkvar	_c @ sp[(-20)+12]
 11851                           ;stkvar	_i @ sp[(-20)+14]
 11852  0152B0  0EFA               	movlw	-6
 11853  0152B2  006F FF8C  F00B    	movff	plusw1,btemp+10
 11854  0152B8  0EFB               	movlw	-5
 11855  0152BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 11856  0152C0  0E94               	movlw	low _dbuf
 11857  0152C2  240B               	addwf	(btemp+10)^0,w,c
 11858  0152C4  6ED9               	movwf	fsr2l,c
 11859  0152C6  0E03               	movlw	high _dbuf
 11860  0152C8  200C               	addwfc	(btemp+11)^0,w,c
 11861  0152CA  6EDA               	movwf	fsr2h,c
 11862  0152CC  0EF8               	movlw	-8
 11863  0152CE  006F FF8F FFDF     	movff	plusw1,indf2
 11864                           
 11865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 11866                           ;stkvar	_p @ sp[(-20)+18]
 11867  0152D4  50E1               	movf	fsr1l,w,c
 11868  0152D6  0FFE               	addlw	-2
 11869  0152D8  6ED9               	movwf	fsr2l,c
 11870  0152DA  50E2               	movf	fsr1h,w,c
 11871  0152DC  6EDA               	movwf	fsr2h,c
 11872  0152DE  0EFF               	movlw	255
 11873  0152E0  22DA               	addwfc	fsr2h,f,c
 11874  0152E2  06DE               	decf	postinc2,f,c
 11875  0152E4  0E00               	movlw	0
 11876  0152E6  5ADD               	subwfb	postdec2,f,c
 11877                           
 11878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 11879                           ;stkvar	_w @ sp[(-20)+16]
 11880  0152E8  50E1               	movf	fsr1l,w,c
 11881  0152EA  0FFC               	addlw	-4
 11882  0152EC  6ED9               	movwf	fsr2l,c
 11883  0152EE  50E2               	movf	fsr1h,w,c
 11884  0152F0  6EDA               	movwf	fsr2h,c
 11885  0152F2  0EFF               	movlw	255
 11886  0152F4  22DA               	addwfc	fsr2h,f,c
 11887  0152F6  06DE               	decf	postinc2,f,c
 11888  0152F8  0E00               	movlw	0
 11889  0152FA  5ADD               	subwfb	postdec2,f,c
 11890                           
 11891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 11892  0152FC  0E04               	movlw	4
 11893  0152FE  6E0C               	movwf	(btemp+11)^0,c
 11894                           
 11895                           ;stkvar	_n @ sp[(-20)+4]
 11896  015300  50E1               	movf	fsr1l,w,c
 11897  015302  0FF0               	addlw	-16
 11898  015304  6ED9               	movwf	fsr2l,c
 11899  015306  50E2               	movf	fsr1h,w,c
 11900  015308  6EDA               	movwf	fsr2h,c
 11901  01530A  0EFF               	movlw	255
 11902  01530C  22DA               	addwfc	fsr2h,f,c
 11903  01530E  280C               	incf	(btemp+11)^0,w,c
 11904  015310  52DE               	movf	postinc2,f,c
 11905  015312  D00F               	goto	u11140
 11906  015314                     u11145:
 11907  015314  52DE               	movf	postinc2,f,c
 11908  015316  52DE               	movf	postinc2,f,c
 11909  015318  52DE               	movf	postinc2,f,c
 11910  01531A  52DE               	movf	postinc2,f,c
 11911  01531C  52DE               	movf	postinc2,f,c
 11912  01531E  52DE               	movf	postinc2,f,c
 11913  015320  90D8               	bcf	status,0,c
 11914  015322  32DD               	rrcf	postdec2,f,c
 11915  015324  32DD               	rrcf	postdec2,f,c
 11916  015326  32DD               	rrcf	postdec2,f,c
 11917  015328  32DD               	rrcf	postdec2,f,c
 11918  01532A  32DD               	rrcf	postdec2,f,c
 11919  01532C  32DD               	rrcf	postdec2,f,c
 11920  01532E  32DD               	rrcf	postdec2,f,c
 11921  015330  32DE               	rrcf	postinc2,f,c
 11922  015332                     u11140:
 11923  015332  2EE8               	decfsz	wreg,f,c
 11924  015334  D7EF               	goto	u11145
 11925  015336                     l11387:
 11926                           
 11927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11928                           ;stkvar	_i @ sp[(-20)+14]
 11929  015336  0EFB               	movlw	-5
 11930  015338  BEE3               	btfsc	plusw1,7,c
 11931  01533A  D03A               	goto	u11190
 11932  01533C  0EFB               	movlw	-5
 11933  01533E  50E3               	movf	plusw1,w,c
 11934  015340  E108               	bnz	u11150
 11935  015342  0EFA               	movlw	-6
 11936  015344  006F FF8C  F001    	movff	plusw1,btemp
 11937  01534A  0E02               	movlw	2
 11938  01534C  5E01               	subwf	btemp^0,f,c
 11939  01534E  A0D8               	btfss	status,0,c
 11940  015350  D02F               	goto	u11190
 11941  015352                     u11150:
 11942                           
 11943                           ;stkvar	_n @ sp[(-20)+4]
 11944  015352  0EF0               	movlw	-16
 11945  015354  50E3               	movf	plusw1,w,c
 11946  015356  E115               	bnz	u11161
 11947  015358  0EF1               	movlw	-15
 11948  01535A  50E3               	movf	plusw1,w,c
 11949  01535C  E112               	bnz	u11161
 11950  01535E  0EF2               	movlw	-14
 11951  015360  50E3               	movf	plusw1,w,c
 11952  015362  E10F               	bnz	u11161
 11953  015364  0EF3               	movlw	-13
 11954  015366  50E3               	movf	plusw1,w,c
 11955  015368  E10C               	bnz	u11161
 11956  01536A  0EF4               	movlw	-12
 11957  01536C  50E3               	movf	plusw1,w,c
 11958  01536E  E109               	bnz	u11161
 11959  015370  0EF5               	movlw	-11
 11960  015372  50E3               	movf	plusw1,w,c
 11961  015374  E106               	bnz	u11161
 11962  015376  0EF6               	movlw	-10
 11963  015378  50E3               	movf	plusw1,w,c
 11964  01537A  E103               	bnz	u11161
 11965  01537C  0EF7               	movlw	-9
 11966  01537E  50E3               	movf	plusw1,w,c
 11967  015380  A4D8               	btfss	status,2,c
 11968  015382                     u11161:
 11969  015382  D6EB               	goto	l11355
 11970                           
 11971                           ;stkvar	_p @ sp[(-20)+18]
 11972  015384  0EFF               	movlw	-1
 11973  015386  BEE3               	btfsc	plusw1,7,c
 11974  015388  D007               	goto	u11170
 11975  01538A  0EFF               	movlw	-1
 11976  01538C  50E3               	movf	plusw1,w,c
 11977  01538E  E103               	bnz	u11171
 11978  015390  0EFE               	movlw	-2
 11979  015392  04E3               	decf	plusw1,w,c
 11980  015394  B0D8               	btfsc	status,0,c
 11981  015396                     u11171:
 11982  015396  D6E1               	goto	l11355
 11983  015398                     u11170:
 11984                           
 11985                           ;stkvar	_w @ sp[(-20)+16]
 11986  015398  0EFD               	movlw	-3
 11987  01539A  BEE3               	btfsc	plusw1,7,c
 11988  01539C  D009               	goto	u11190
 11989  01539E  0EFD               	movlw	-3
 11990  0153A0  50E3               	movf	plusw1,w,c
 11991  0153A2  E104               	bnz	u11180
 11992  0153A4  0EFC               	movlw	-4
 11993  0153A6  04E3               	decf	plusw1,w,c
 11994  0153A8  A0D8               	btfss	status,0,c
 11995  0153AA  D002               	goto	u11190
 11996  0153AC                     u11180:
 11997  0153AC  B225               	btfsc	_flags^0,1,c
 11998  0153AE  D6D5               	goto	l11355
 11999  0153B0                     u11190:
 12000                           
 12001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 12002  0153B0  A825               	btfss	_flags^0,4,c
 12003  0153B2  D036               	goto	l11403
 12004                           
 12005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 12006                           ;stkvar	_i @ sp[(-20)+14]
 12007  0153B4  50E1               	movf	fsr1l,w,c
 12008  0153B6  0FFA               	addlw	-6
 12009  0153B8  6ED9               	movwf	fsr2l,c
 12010  0153BA  50E2               	movf	fsr1h,w,c
 12011  0153BC  6EDA               	movwf	fsr2h,c
 12012  0153BE  0EFF               	movlw	255
 12013  0153C0  22DA               	addwfc	fsr2h,f,c
 12014  0153C2  06DE               	decf	postinc2,f,c
 12015  0153C4  0E00               	movlw	0
 12016  0153C6  5ADD               	subwfb	postdec2,f,c
 12017                           
 12018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 12019                           ;stkvar	_x @ sp[(-20)+-11]
 12020                           ;stkvar	_i @ sp[(-20)+14]
 12021  0153C8  0EFA               	movlw	-6
 12022  0153CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 12023  0153D0  0EFB               	movlw	-5
 12024  0153D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 12025  0153D8  0E94               	movlw	low _dbuf
 12026  0153DA  240B               	addwf	(btemp+10)^0,w,c
 12027  0153DC  6ED9               	movwf	fsr2l,c
 12028  0153DE  0E03               	movlw	high _dbuf
 12029  0153E0  200C               	addwfc	(btemp+11)^0,w,c
 12030  0153E2  6EDA               	movwf	fsr2h,c
 12031  0153E4  0EE1               	movlw	-31
 12032  0153E6  006F FF8F FFDF     	movff	plusw1,indf2
 12033                           
 12034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 12035                           ;stkvar	_i @ sp[(-20)+14]
 12036  0153EC  50E1               	movf	fsr1l,w,c
 12037  0153EE  0FFA               	addlw	-6
 12038  0153F0  6ED9               	movwf	fsr2l,c
 12039  0153F2  50E2               	movf	fsr1h,w,c
 12040  0153F4  6EDA               	movwf	fsr2h,c
 12041  0153F6  0EFF               	movlw	255
 12042  0153F8  22DA               	addwfc	fsr2h,f,c
 12043  0153FA  06DE               	decf	postinc2,f,c
 12044  0153FC  0E00               	movlw	0
 12045  0153FE  5ADD               	subwfb	postdec2,f,c
 12046                           
 12047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 12048                           ;stkvar	_i @ sp[(-20)+14]
 12049  015400  0EFA               	movlw	-6
 12050  015402  006F FF8C  F00B    	movff	plusw1,btemp+10
 12051  015408  0EFB               	movlw	-5
 12052  01540A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12053  015410  0E94               	movlw	low _dbuf
 12054  015412  240B               	addwf	(btemp+10)^0,w,c
 12055  015414  6ED9               	movwf	fsr2l,c
 12056  015416  0E03               	movlw	high _dbuf
 12057  015418  200C               	addwfc	(btemp+11)^0,w,c
 12058  01541A  6EDA               	movwf	fsr2h,c
 12059  01541C  0E30               	movlw	48
 12060  01541E  6EDF               	movwf	indf2,c
 12061  015420                     l11403:
 12062                           
 12063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 12064                           ;stkvar	_w @ sp[(-20)+16]
 12065  015420  0EFC               	movlw	-4
 12066  015422  006F FF8F FFE6     	movff	plusw1,postinc1
 12067  015428  006F FF8F FFE6     	movff	plusw1,postinc1
 12068                           
 12069                           ;stkvar	_i @ sp[(-22)+14]
 12070  01542E  0E94               	movlw	low _dbuf
 12071  015430  6E0B               	movwf	(btemp+10)^0,c
 12072  015432  0E03               	movlw	high _dbuf
 12073  015434  6E0C               	movwf	(btemp+11)^0,c
 12074  015436  0EF8               	movlw	-8
 12075  015438  50E3               	movf	plusw1,w,c
 12076  01543A  260B               	addwf	(btemp+10)^0,f,c
 12077  01543C  0EF9               	movlw	-7
 12078  01543E  50E3               	movf	plusw1,w,c
 12079  015440  220C               	addwfc	(btemp+11)^0,f,c
 12080  015442  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12081  015448  0060  F033  FFE6   	movff	btemp+11,postinc1
 12082                           
 12083                           ;stkvar	_fp @ sp[(-24)+-2]
 12084  01544E  0EE6               	movlw	-26
 12085  015450  006F FF8F FFE6     	movff	plusw1,postinc1
 12086  015456  006F FF8F FFE6     	movff	plusw1,postinc1
 12087  01545C  EC57  F0C2         	call	_pad	;wreg free
 12088                           
 12089                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 12090  015460  0EE1               	movlw	225
 12091  015462  26E1               	addwf	fsr1l,f,c
 12092  015464  0EFF               	movlw	255
 12093  015466  22E2               	addwfc	fsr1h,f,c
 12094  015468  0012               	return		;funcret
 12095  01546A                     __end_of_xtoa:
 12096                           	opt callstack 0
 12097                           
 12098 ;; *************** function _toupper *****************
 12099 ;; Defined at:
 12100 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 12101 ;; Parameters:    Size  Location     Type
 12102 ;;  c               2  [STACK] int 
 12103 ;; Auto vars:     Size  Location     Type
 12104 ;;		None
 12105 ;; Return value:  Size  Location     Type
 12106 ;;                  2  [STACK] int 
 12107 ;; Registers used:
 12108 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12109 ;; Tracked objects:
 12110 ;;		On entry : 0/3
 12111 ;;		On exit  : 0/0
 12112 ;;		Unchanged: 0/0
 12113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12118 ;;Total ram usage:        0 bytes
 12119 ;; Hardware stack levels used:    1
 12120 ;; Hardware stack levels required when called:   16
 12121 ;; This function calls:
 12122 ;;		_islower
 12123 ;; This function is called by:
 12124 ;;		_xtoa
 12125 ;; This function uses a reentrant model
 12126 ;;
 12127                           
 12128                           	psect	text45
 12129  0194C4                     __ptext45:
 12130                           	opt callstack 0
 12131  0194C4                     _toupper:
 12132                           	opt callstack 0
 12133                           
 12134                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12135  0194C4  52E6               	movf	postinc1,f,c
 12136  0194C6  52E6               	movf	postinc1,f,c
 12137                           
 12138                           ;stkvar	_c @ sp[(-2)+-2]
 12139                           
 12140                           ;incstack = 0
 12141 ;; hardware stack exceeded
 12142  0194C8  0EFC               	movlw	-4
 12143  0194CA  50E3               	movf	plusw1,w,c
 12144  0194CC  0F9F               	addlw	159
 12145  0194CE  6E0B               	movwf	(btemp+10)^0,c
 12146  0194D0  0EFD               	movlw	-3
 12147  0194D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 12148  0194D8  0EFF               	movlw	255
 12149  0194DA  220C               	addwfc	(btemp+11)^0,f,c
 12150  0194DC  500C               	movf	(btemp+11)^0,w,c
 12151  0194DE  E106               	bnz	u5820
 12152  0194E0  0E1A               	movlw	26
 12153  0194E2  5C0B               	subwf	(btemp+10)^0,w,c
 12154  0194E4  B0D8               	btfsc	status,0,c
 12155  0194E6  D002               	goto	u5820
 12156  0194E8  0E01               	movlw	1
 12157  0194EA  D001               	goto	u5830
 12158  0194EC                     u5820:
 12159  0194EC  0E00               	movlw	0
 12160  0194EE                     u5830:
 12161  0194EE  6E0B               	movwf	(btemp+10)^0,c
 12162  0194F0  6A0C               	clrf	(btemp+11)^0,c
 12163                           
 12164                           ;stkvar	_toupper$6026 @ sp[(-2)+0]
 12165  0194F2  0EFE               	movlw	-2
 12166  0194F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12167  0194FA  0EFF               	movlw	-1
 12168  0194FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 12169                           
 12170                           ;stkvar	_toupper$6026 @ sp[(-2)+0]
 12171  019502  0EFE               	movlw	-2
 12172  019504  006F FF8C  F001    	movff	plusw1,btemp
 12173  01950A  0EFF               	movlw	-1
 12174  01950C  50E3               	movf	plusw1,w,c
 12175  01950E  1001               	iorwf	btemp^0,w,c
 12176  019510  B4D8               	btfsc	status,2,c
 12177  019512  D00D               	goto	l7459
 12178                           
 12179                           ;stkvar	_c @ sp[(-2)+-2]
 12180  019514  0EFC               	movlw	-4
 12181  019516  006F FF8C  F001    	movff	plusw1,btemp
 12182  01951C  0EFD               	movlw	-3
 12183  01951E  006F FF8C  F002    	movff	plusw1,btemp+1
 12184  019524  0E5F               	movlw	95
 12185  019526  1601               	andwf	btemp^0,f,c
 12186  019528  0E00               	movlw	0
 12187  01952A  1602               	andwf	(btemp+1)^0,f,c
 12188  01952C  D008               	goto	l3349
 12189  01952E                     l7459:
 12190                           
 12191                           ;stkvar	_c @ sp[(-2)+-2]
 12192  01952E  0EFC               	movlw	-4
 12193  019530  006F FF8C  F001    	movff	plusw1,btemp
 12194  019536  0EFD               	movlw	-3
 12195  019538  006F FF8C  F002    	movff	plusw1,btemp+1
 12196  01953E                     l3349:
 12197                           
 12198                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12199  01953E  52E5               	movf	postdec1,f,c
 12200  019540  52E5               	movf	postdec1,f,c
 12201  019542  52E5               	movf	postdec1,f,c
 12202  019544  52E5               	movf	postdec1,f,c
 12203  019546  0012               	return		;funcret
 12204  019548                     __end_of_toupper:
 12205                           	opt callstack 0
 12206                           
 12207 ;; *************** function _islower *****************
 12208 ;; Defined at:
 12209 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 12210 ;; Parameters:    Size  Location     Type
 12211 ;;  c               2  [STACK] int 
 12212 ;; Auto vars:     Size  Location     Type
 12213 ;;		None
 12214 ;; Return value:  Size  Location     Type
 12215 ;;                  2  [STACK] int 
 12216 ;; Registers used:
 12217 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12218 ;; Tracked objects:
 12219 ;;		On entry : 0/0
 12220 ;;		On exit  : 0/0
 12221 ;;		Unchanged: 0/0
 12222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12227 ;;Total ram usage:        0 bytes
 12228 ;; Hardware stack levels used:    1
 12229 ;; Hardware stack levels required when called:   15
 12230 ;; This function calls:
 12231 ;;		Nothing
 12232 ;; This function is called by:
 12233 ;;		_toupper
 12234 ;; This function uses a reentrant model
 12235 ;;
 12236                           
 12237                           	psect	text46
 12238  01A0EE                     __ptext46:
 12239                           	opt callstack 0
 12240  01A0EE                     _islower:
 12241                           	opt callstack 0
 12242                           
 12243                           ;stkvar	_c @ sp[(0)+-2]
 12244                           
 12245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12246                           ;incstack = 0
 12247 ;; hardware stack exceeded
 12248  01A0EE  0EFE               	movlw	-2
 12249  01A0F0  50E3               	movf	plusw1,w,c
 12250  01A0F2  0F9F               	addlw	159
 12251  01A0F4  6E0B               	movwf	(btemp+10)^0,c
 12252  01A0F6  0EFF               	movlw	-1
 12253  01A0F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 12254  01A0FE  0EFF               	movlw	255
 12255  01A100  220C               	addwfc	(btemp+11)^0,f,c
 12256  01A102  500C               	movf	(btemp+11)^0,w,c
 12257  01A104  E106               	bnz	u5510
 12258  01A106  0E1A               	movlw	26
 12259  01A108  5C0B               	subwf	(btemp+10)^0,w,c
 12260  01A10A  B0D8               	btfsc	status,0,c
 12261  01A10C  D002               	goto	u5510
 12262  01A10E  0E01               	movlw	1
 12263  01A110  D001               	goto	u5520
 12264  01A112                     u5510:
 12265  01A112  0E00               	movlw	0
 12266  01A114                     u5520:
 12267  01A114  6E01               	movwf	btemp^0,c
 12268  01A116  6A02               	clrf	(btemp+1)^0,c
 12269                           
 12270                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12271  01A118  52E5               	movf	postdec1,f,c
 12272  01A11A  52E5               	movf	postdec1,f,c
 12273  01A11C  0012               	return		;funcret
 12274  01A11E                     __end_of_islower:
 12275                           	opt callstack 0
 12276                           
 12277 ;; *************** function _isalpha *****************
 12278 ;; Defined at:
 12279 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 12280 ;; Parameters:    Size  Location     Type
 12281 ;;  c               2  [STACK] int 
 12282 ;; Auto vars:     Size  Location     Type
 12283 ;;		None
 12284 ;; Return value:  Size  Location     Type
 12285 ;;                  2  [STACK] int 
 12286 ;; Registers used:
 12287 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 12288 ;; Tracked objects:
 12289 ;;		On entry : 0/0
 12290 ;;		On exit  : 0/0
 12291 ;;		Unchanged: 0/0
 12292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12297 ;;Total ram usage:        0 bytes
 12298 ;; Hardware stack levels used:    1
 12299 ;; Hardware stack levels required when called:   15
 12300 ;; This function calls:
 12301 ;;		Nothing
 12302 ;; This function is called by:
 12303 ;;		_xtoa
 12304 ;; This function uses a reentrant model
 12305 ;;
 12306                           
 12307                           	psect	text47
 12308  019DBA                     __ptext47:
 12309                           	opt callstack 0
 12310  019DBA                     _isalpha:
 12311                           	opt callstack 0
 12312                           
 12313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12314                           ;incstack = 0
 12315 ;; hardware stack exceeded
 12316  019DBA  0E9F               	movlw	159
 12317  019DBC  6E0B               	movwf	(btemp+10)^0,c
 12318  019DBE  0EFF               	movlw	255
 12319  019DC0  6E0C               	movwf	(btemp+11)^0,c
 12320                           
 12321                           ;stkvar	_c @ sp[(0)+-2]
 12322  019DC2  0EFE               	movlw	-2
 12323  019DC4  006F FF8C  F009    	movff	plusw1,btemp+8
 12324  019DCA  0EFF               	movlw	-1
 12325  019DCC  006F FF8C  F00A    	movff	plusw1,btemp+9
 12326  019DD2  0E20               	movlw	32
 12327  019DD4  1209               	iorwf	(btemp+8)^0,f,c
 12328  019DD6  0E00               	movlw	0
 12329  019DD8  120A               	iorwf	(btemp+9)^0,f,c
 12330  019DDA  500B               	movf	(btemp+10)^0,w,c
 12331  019DDC  2609               	addwf	(btemp+8)^0,f,c
 12332  019DDE  500C               	movf	(btemp+11)^0,w,c
 12333  019DE0  220A               	addwfc	(btemp+9)^0,f,c
 12334  019DE2  500A               	movf	(btemp+9)^0,w,c
 12335  019DE4  E106               	bnz	u5800
 12336  019DE6  0E1A               	movlw	26
 12337  019DE8  5C09               	subwf	(btemp+8)^0,w,c
 12338  019DEA  B0D8               	btfsc	status,0,c
 12339  019DEC  D002               	goto	u5800
 12340  019DEE  0E01               	movlw	1
 12341  019DF0  D001               	goto	u5810
 12342  019DF2                     u5800:
 12343  019DF2  0E00               	movlw	0
 12344  019DF4                     u5810:
 12345  019DF4  6E01               	movwf	btemp^0,c
 12346  019DF6  6A02               	clrf	(btemp+1)^0,c
 12347                           
 12348                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12349  019DF8  52E5               	movf	postdec1,f,c
 12350  019DFA  52E5               	movf	postdec1,f,c
 12351  019DFC  0012               	return		;funcret
 12352  019DFE                     __end_of_isalpha:
 12353                           	opt callstack 0
 12354                           
 12355 ;; *************** function _utoa *****************
 12356 ;; Defined at:
 12357 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12360 ;;		 -> f(6), NULL(0), 
 12361 ;;  d               8  [STACK] unsigned long long 
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;  n               8  [STACK] unsigned long long 
 12364 ;;  i               2  [STACK] int 
 12365 ;;  w               2  [STACK] int 
 12366 ;;  p               2  [STACK] int 
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  2  [STACK] int 
 12369 ;; Registers used:
 12370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 12371 ;; Tracked objects:
 12372 ;;		On entry : 0/0
 12373 ;;		On exit  : 0/0
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12380 ;;Total ram usage:        0 bytes
 12381 ;; Hardware stack levels used:    1
 12382 ;; Hardware stack levels required when called:   20
 12383 ;; This function calls:
 12384 ;;		___lodiv
 12385 ;;		___lomod
 12386 ;;		_pad
 12387 ;; This function is called by:
 12388 ;;		_vfpfcnvrt
 12389 ;; This function uses a reentrant model
 12390 ;;
 12391                           
 12392                           	psect	text48
 12393  0157D6                     __ptext48:
 12394                           	opt callstack 0
 12395  0157D6                     _utoa:
 12396                           	opt callstack 0
 12397                           
 12398                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12399  0157D6  0E0E               	movlw	14
 12400  0157D8  26E1               	addwf	fsr1l,f,c
 12401  0157DA  0E00               	movlw	0
 12402  0157DC  22E2               	addwfc	fsr1h,f,c
 12403                           
 12404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 12405                           
 12406                           ;incstack = 0
 12407 ;; hardware stack exceeded
 12408  0157DE  AE24               	btfss	(_prec+1)^0,7,c
 12409                           
 12410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 12411  0157E0  9225               	bcf	_flags^0,1,c
 12412                           
 12413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 12414  0157E2  BE24               	btfsc	(_prec+1)^0,7,c
 12415  0157E4  D005               	goto	u10960
 12416  0157E6  5024               	movf	(_prec+1)^0,w,c
 12417  0157E8  E110               	bnz	l11303
 12418  0157EA  0423               	decf	_prec^0,w,c
 12419  0157EC  B0D8               	btfsc	status,0,c
 12420  0157EE  D00D               	goto	l11303
 12421  0157F0                     u10960:
 12422  0157F0  0E01               	movlw	1
 12423  0157F2  6E0B               	movwf	(btemp+10)^0,c
 12424  0157F4  0E00               	movlw	0
 12425  0157F6  6E0C               	movwf	(btemp+11)^0,c
 12426                           
 12427                           ;stkvar	_p @ sp[(-14)+12]
 12428  0157F8  0EFE               	movlw	-2
 12429  0157FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12430  015800  0EFF               	movlw	-1
 12431  015802  0060  F033  FFE3   	movff	btemp+11,plusw1
 12432  015808  D008               	goto	l2172
 12433  01580A                     l11303:
 12434                           
 12435                           ;stkvar	_p @ sp[(-14)+12]
 12436  01580A  0EFE               	movlw	-2
 12437  01580C  0060  F08F  FFE3   	movff	_prec,plusw1
 12438  015812  0EFF               	movlw	-1
 12439  015814  0060  F093  FFE3   	movff	_prec+1,plusw1
 12440  01581A                     l2172:
 12441                           
 12442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 12443                           ;stkvar	_w @ sp[(-14)+10]
 12444  01581A  0EFC               	movlw	-4
 12445  01581C  0060  F087  FFE3   	movff	_width,plusw1
 12446  015822  0EFD               	movlw	-3
 12447  015824  0060  F08B  FFE3   	movff	_width+1,plusw1
 12448                           
 12449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 12450                           ;stkvar	_d @ sp[(-14)+-10]
 12451  01582A  0EE8               	movlw	232
 12452  01582C  24E1               	addwf	fsr1l,w,c
 12453  01582E  6ED9               	movwf	fsr2l,c
 12454  015830  0EFF               	movlw	255
 12455  015832  20E2               	addwfc	fsr1h,w,c
 12456  015834  6EDA               	movwf	fsr2h,c
 12457                           
 12458                           ;stkvar	_n @ sp[(-14)+0]
 12459  015836  0E08               	movlw	8
 12460  015838  6E01               	movwf	btemp^0,c
 12461  01583A  0EF2               	movlw	-14
 12462  01583C                     us1097999:
 12463  01583C  006F FF7B FFE3     	movff	postinc2,plusw1
 12464  015842  28E8               	incf	wreg,w,c
 12465  015844  2E01               	decfsz	btemp^0,f,c
 12466  015846  D7FA               	bra	us1097999
 12467                           
 12468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 12469  015848  0E4F               	movlw	79
 12470  01584A  6E0B               	movwf	(btemp+10)^0,c
 12471  01584C  0E00               	movlw	0
 12472  01584E  6E0C               	movwf	(btemp+11)^0,c
 12473                           
 12474                           ;stkvar	_i @ sp[(-14)+8]
 12475  015850  0EFA               	movlw	-6
 12476  015852  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12477  015858  0EFB               	movlw	-5
 12478  01585A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12479                           
 12480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 12481  015860  0103               	movlb	3	; () banked
 12482  015862  6BE3               	clrf	(_dbuf+79)& (0+255),b
 12483                           
 12484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 12485  015864  D0FB               	goto	l11321
 12486  015866                     l11311:
 12487                           
 12488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 12489                           ;stkvar	_i @ sp[(-14)+8]
 12490  015866  50E1               	movf	fsr1l,w,c
 12491  015868  0FFA               	addlw	-6
 12492  01586A  6ED9               	movwf	fsr2l,c
 12493  01586C  50E2               	movf	fsr1h,w,c
 12494  01586E  6EDA               	movwf	fsr2h,c
 12495  015870  0EFF               	movlw	255
 12496  015872  22DA               	addwfc	fsr2h,f,c
 12497  015874  06DE               	decf	postinc2,f,c
 12498  015876  0E00               	movlw	0
 12499  015878  5ADD               	subwfb	postdec2,f,c
 12500                           
 12501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 12502  01587A  0E0A               	movlw	10
 12503  01587C  6EE6               	movwf	postinc1,c
 12504  01587E  0E00               	movlw	0
 12505  015880  6EE6               	movwf	postinc1,c
 12506  015882  0E00               	movlw	0
 12507  015884  6EE6               	movwf	postinc1,c
 12508  015886  0E00               	movlw	0
 12509  015888  6EE6               	movwf	postinc1,c
 12510  01588A  0E00               	movlw	0
 12511  01588C  6EE6               	movwf	postinc1,c
 12512  01588E  0E00               	movlw	0
 12513  015890  6EE6               	movwf	postinc1,c
 12514  015892  0E00               	movlw	0
 12515  015894  6EE6               	movwf	postinc1,c
 12516  015896  0E00               	movlw	0
 12517  015898  6EE6               	movwf	postinc1,c
 12518                           
 12519                           ;stkvar	_n @ sp[(-22)+0]
 12520  01589A  50E1               	movf	fsr1l,w,c
 12521  01589C  0FEA               	addlw	-22
 12522  01589E  6ED9               	movwf	fsr2l,c
 12523  0158A0  50E2               	movf	fsr1h,w,c
 12524  0158A2  6EDA               	movwf	fsr2h,c
 12525  0158A4  0EFF               	movlw	255
 12526  0158A6  22DA               	addwfc	fsr2h,f,c
 12527  0158A8  006F FF7B FFE6     	movff	postinc2,postinc1
 12528  0158AE  006F FF7B FFE6     	movff	postinc2,postinc1
 12529  0158B4  006F FF7B FFE6     	movff	postinc2,postinc1
 12530  0158BA  006F FF7B FFE6     	movff	postinc2,postinc1
 12531  0158C0  006F FF7B FFE6     	movff	postinc2,postinc1
 12532  0158C6  006F FF7B FFE6     	movff	postinc2,postinc1
 12533  0158CC  006F FF7B FFE6     	movff	postinc2,postinc1
 12534  0158D2  006F FF7B FFE6     	movff	postinc2,postinc1
 12535  0158D8  EC6E  F0BF         	call	___lomod	;wreg free
 12536  0158DC  52E5               	movf	postdec1,f,c
 12537  0158DE  006F FF9C  F018    	movff	indf1,btemp+23
 12538  0158E4  52E5               	movf	postdec1,f,c
 12539  0158E6  006F FF9C  F017    	movff	indf1,btemp+22
 12540  0158EC  52E5               	movf	postdec1,f,c
 12541  0158EE  006F FF9C  F016    	movff	indf1,btemp+21
 12542  0158F4  52E5               	movf	postdec1,f,c
 12543  0158F6  006F FF9C  F015    	movff	indf1,btemp+20
 12544  0158FC  52E5               	movf	postdec1,f,c
 12545  0158FE  006F FF9C  F014    	movff	indf1,btemp+19
 12546  015904  52E5               	movf	postdec1,f,c
 12547  015906  006F FF9C  F013    	movff	indf1,btemp+18
 12548  01590C  52E5               	movf	postdec1,f,c
 12549  01590E  006F FF9C  F012    	movff	indf1,btemp+17
 12550  015914  52E5               	movf	postdec1,f,c
 12551  015916  006F FF9C  F011    	movff	indf1,btemp+16
 12552  01591C  0EF8               	movlw	248
 12553  01591E  26E1               	addwf	fsr1l,f,c
 12554  015920  0EFF               	movlw	255
 12555  015922  22E2               	addwfc	fsr1h,f,c
 12556  015924  0E30               	movlw	48
 12557  015926  2611               	addwf	(btemp+16)^0,f,c
 12558                           
 12559                           ;stkvar	_i @ sp[(-14)+8]
 12560  015928  0EFA               	movlw	-6
 12561  01592A  006F FF8C  F00B    	movff	plusw1,btemp+10
 12562  015930  0EFB               	movlw	-5
 12563  015932  006F FF8C  F00C    	movff	plusw1,btemp+11
 12564  015938  0E94               	movlw	low _dbuf
 12565  01593A  240B               	addwf	(btemp+10)^0,w,c
 12566  01593C  6ED9               	movwf	fsr2l,c
 12567  01593E  0E03               	movlw	high _dbuf
 12568  015940  200C               	addwfc	(btemp+11)^0,w,c
 12569  015942  6EDA               	movwf	fsr2h,c
 12570  015944  0060  F047  FFDF   	movff	btemp+16,indf2
 12571                           
 12572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 12573                           ;stkvar	_p @ sp[(-14)+12]
 12574  01594A  50E1               	movf	fsr1l,w,c
 12575  01594C  0FFE               	addlw	-2
 12576  01594E  6ED9               	movwf	fsr2l,c
 12577  015950  50E2               	movf	fsr1h,w,c
 12578  015952  6EDA               	movwf	fsr2h,c
 12579  015954  0EFF               	movlw	255
 12580  015956  22DA               	addwfc	fsr2h,f,c
 12581  015958  06DE               	decf	postinc2,f,c
 12582  01595A  0E00               	movlw	0
 12583  01595C  5ADD               	subwfb	postdec2,f,c
 12584                           
 12585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 12586                           ;stkvar	_w @ sp[(-14)+10]
 12587  01595E  50E1               	movf	fsr1l,w,c
 12588  015960  0FFC               	addlw	-4
 12589  015962  6ED9               	movwf	fsr2l,c
 12590  015964  50E2               	movf	fsr1h,w,c
 12591  015966  6EDA               	movwf	fsr2h,c
 12592  015968  0EFF               	movlw	255
 12593  01596A  22DA               	addwfc	fsr2h,f,c
 12594  01596C  06DE               	decf	postinc2,f,c
 12595  01596E  0E00               	movlw	0
 12596  015970  5ADD               	subwfb	postdec2,f,c
 12597                           
 12598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 12599  015972  0E0A               	movlw	10
 12600  015974  6EE6               	movwf	postinc1,c
 12601  015976  0E00               	movlw	0
 12602  015978  6EE6               	movwf	postinc1,c
 12603  01597A  0E00               	movlw	0
 12604  01597C  6EE6               	movwf	postinc1,c
 12605  01597E  0E00               	movlw	0
 12606  015980  6EE6               	movwf	postinc1,c
 12607  015982  0E00               	movlw	0
 12608  015984  6EE6               	movwf	postinc1,c
 12609  015986  0E00               	movlw	0
 12610  015988  6EE6               	movwf	postinc1,c
 12611  01598A  0E00               	movlw	0
 12612  01598C  6EE6               	movwf	postinc1,c
 12613  01598E  0E00               	movlw	0
 12614  015990  6EE6               	movwf	postinc1,c
 12615                           
 12616                           ;stkvar	_n @ sp[(-22)+0]
 12617  015992  50E1               	movf	fsr1l,w,c
 12618  015994  0FEA               	addlw	-22
 12619  015996  6ED9               	movwf	fsr2l,c
 12620  015998  50E2               	movf	fsr1h,w,c
 12621  01599A  6EDA               	movwf	fsr2h,c
 12622  01599C  0EFF               	movlw	255
 12623  01599E  22DA               	addwfc	fsr2h,f,c
 12624  0159A0  006F FF7B FFE6     	movff	postinc2,postinc1
 12625  0159A6  006F FF7B FFE6     	movff	postinc2,postinc1
 12626  0159AC  006F FF7B FFE6     	movff	postinc2,postinc1
 12627  0159B2  006F FF7B FFE6     	movff	postinc2,postinc1
 12628  0159B8  006F FF7B FFE6     	movff	postinc2,postinc1
 12629  0159BE  006F FF7B FFE6     	movff	postinc2,postinc1
 12630  0159C4  006F FF7B FFE6     	movff	postinc2,postinc1
 12631  0159CA  006F FF7B FFE6     	movff	postinc2,postinc1
 12632  0159D0  EC33  F0BB         	call	___lodiv	;wreg free
 12633  0159D4  52E5               	movf	postdec1,f,c
 12634  0159D6  006F FF9C  F018    	movff	indf1,btemp+23
 12635  0159DC  52E5               	movf	postdec1,f,c
 12636  0159DE  006F FF9C  F017    	movff	indf1,btemp+22
 12637  0159E4  52E5               	movf	postdec1,f,c
 12638  0159E6  006F FF9C  F016    	movff	indf1,btemp+21
 12639  0159EC  52E5               	movf	postdec1,f,c
 12640  0159EE  006F FF9C  F015    	movff	indf1,btemp+20
 12641  0159F4  52E5               	movf	postdec1,f,c
 12642  0159F6  006F FF9C  F014    	movff	indf1,btemp+19
 12643  0159FC  52E5               	movf	postdec1,f,c
 12644  0159FE  006F FF9C  F013    	movff	indf1,btemp+18
 12645  015A04  52E5               	movf	postdec1,f,c
 12646  015A06  006F FF9C  F012    	movff	indf1,btemp+17
 12647  015A0C  52E5               	movf	postdec1,f,c
 12648  015A0E  006F FF9C  F011    	movff	indf1,btemp+16
 12649  015A14  0EF8               	movlw	248
 12650  015A16  26E1               	addwf	fsr1l,f,c
 12651  015A18  0EFF               	movlw	255
 12652  015A1A  22E2               	addwfc	fsr1h,f,c
 12653                           
 12654                           ;stkvar	_n @ sp[(-14)+0]
 12655  015A1C  0EF2               	movlw	-14
 12656  015A1E  0060  F047  FFE3   	movff	btemp+16,plusw1
 12657  015A24  0EF3               	movlw	-13
 12658  015A26  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12659  015A2C  0EF4               	movlw	-12
 12660  015A2E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12661  015A34  0EF5               	movlw	-11
 12662  015A36  0060  F053  FFE3   	movff	btemp+19,plusw1
 12663  015A3C  0EF6               	movlw	-10
 12664  015A3E  0060  F057  FFE3   	movff	btemp+20,plusw1
 12665  015A44  0EF7               	movlw	-9
 12666  015A46  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12667  015A4C  0EF8               	movlw	-8
 12668  015A4E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12669  015A54  0EF9               	movlw	-7
 12670  015A56  0060  F063  FFE3   	movff	btemp+23,plusw1
 12671  015A5C                     l11321:
 12672                           
 12673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 12674                           ;stkvar	_i @ sp[(-14)+8]
 12675  015A5C  0EFA               	movlw	-6
 12676  015A5E  006F FF8C  F001    	movff	plusw1,btemp
 12677  015A64  0EFB               	movlw	-5
 12678  015A66  50E3               	movf	plusw1,w,c
 12679  015A68  1001               	iorwf	btemp^0,w,c
 12680  015A6A  B4D8               	btfsc	status,2,c
 12681  015A6C  D02F               	goto	u11020
 12682                           
 12683                           ;stkvar	_n @ sp[(-14)+0]
 12684  015A6E  0EF2               	movlw	-14
 12685  015A70  50E3               	movf	plusw1,w,c
 12686  015A72  E115               	bnz	u10991
 12687  015A74  0EF3               	movlw	-13
 12688  015A76  50E3               	movf	plusw1,w,c
 12689  015A78  E112               	bnz	u10991
 12690  015A7A  0EF4               	movlw	-12
 12691  015A7C  50E3               	movf	plusw1,w,c
 12692  015A7E  E10F               	bnz	u10991
 12693  015A80  0EF5               	movlw	-11
 12694  015A82  50E3               	movf	plusw1,w,c
 12695  015A84  E10C               	bnz	u10991
 12696  015A86  0EF6               	movlw	-10
 12697  015A88  50E3               	movf	plusw1,w,c
 12698  015A8A  E109               	bnz	u10991
 12699  015A8C  0EF7               	movlw	-9
 12700  015A8E  50E3               	movf	plusw1,w,c
 12701  015A90  E106               	bnz	u10991
 12702  015A92  0EF8               	movlw	-8
 12703  015A94  50E3               	movf	plusw1,w,c
 12704  015A96  E103               	bnz	u10991
 12705  015A98  0EF9               	movlw	-7
 12706  015A9A  50E3               	movf	plusw1,w,c
 12707  015A9C  A4D8               	btfss	status,2,c
 12708  015A9E                     u10991:
 12709  015A9E  D6E3               	goto	l11311
 12710                           
 12711                           ;stkvar	_p @ sp[(-14)+12]
 12712  015AA0  0EFF               	movlw	-1
 12713  015AA2  BEE3               	btfsc	plusw1,7,c
 12714  015AA4  D007               	goto	u11000
 12715  015AA6  0EFF               	movlw	-1
 12716  015AA8  50E3               	movf	plusw1,w,c
 12717  015AAA  E103               	bnz	u11001
 12718  015AAC  0EFE               	movlw	-2
 12719  015AAE  04E3               	decf	plusw1,w,c
 12720  015AB0  B0D8               	btfsc	status,0,c
 12721  015AB2                     u11001:
 12722  015AB2  D6D9               	goto	l11311
 12723  015AB4                     u11000:
 12724                           
 12725                           ;stkvar	_w @ sp[(-14)+10]
 12726  015AB4  0EFD               	movlw	-3
 12727  015AB6  BEE3               	btfsc	plusw1,7,c
 12728  015AB8  D009               	goto	u11020
 12729  015ABA  0EFD               	movlw	-3
 12730  015ABC  50E3               	movf	plusw1,w,c
 12731  015ABE  E104               	bnz	u11010
 12732  015AC0  0EFC               	movlw	-4
 12733  015AC2  04E3               	decf	plusw1,w,c
 12734  015AC4  A0D8               	btfss	status,0,c
 12735  015AC6  D002               	goto	u11020
 12736  015AC8                     u11010:
 12737  015AC8  B225               	btfsc	_flags^0,1,c
 12738  015ACA  D6CD               	goto	l11311
 12739  015ACC                     u11020:
 12740                           
 12741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 12742                           ;stkvar	_w @ sp[(-14)+10]
 12743  015ACC  0EFC               	movlw	-4
 12744  015ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 12745  015AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 12746                           
 12747                           ;stkvar	_i @ sp[(-16)+8]
 12748  015ADA  0E94               	movlw	low _dbuf
 12749  015ADC  6E0B               	movwf	(btemp+10)^0,c
 12750  015ADE  0E03               	movlw	high _dbuf
 12751  015AE0  6E0C               	movwf	(btemp+11)^0,c
 12752  015AE2  0EF8               	movlw	-8
 12753  015AE4  50E3               	movf	plusw1,w,c
 12754  015AE6  260B               	addwf	(btemp+10)^0,f,c
 12755  015AE8  0EF9               	movlw	-7
 12756  015AEA  50E3               	movf	plusw1,w,c
 12757  015AEC  220C               	addwfc	(btemp+11)^0,f,c
 12758  015AEE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12759  015AF4  0060  F033  FFE6   	movff	btemp+11,postinc1
 12760                           
 12761                           ;stkvar	_fp @ sp[(-18)+-2]
 12762  015AFA  0EEC               	movlw	-20
 12763  015AFC  006F FF8F FFE6     	movff	plusw1,postinc1
 12764  015B02  006F FF8F FFE6     	movff	plusw1,postinc1
 12765  015B08  EC57  F0C2         	call	_pad	;wreg free
 12766                           
 12767                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 12768  015B0C  0EE8               	movlw	232
 12769  015B0E  26E1               	addwf	fsr1l,f,c
 12770  015B10  0EFF               	movlw	255
 12771  015B12  22E2               	addwfc	fsr1h,f,c
 12772  015B14  0012               	return		;funcret
 12773  015B16                     __end_of_utoa:
 12774                           	opt callstack 0
 12775                           
 12776 ;; *************** function ___lomod *****************
 12777 ;; Defined at:
 12778 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 12779 ;; Parameters:    Size  Location     Type
 12780 ;;  dividend        8  [STACK] unsigned long long 
 12781 ;;  divisor         8  [STACK] unsigned long long 
 12782 ;; Auto vars:     Size  Location     Type
 12783 ;;  counter         1  [STACK] unsigned char 
 12784 ;; Return value:  Size  Location     Type
 12785 ;;                  8  [STACK] unsigned long long 
 12786 ;; Registers used:
 12787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 12788 ;; Tracked objects:
 12789 ;;		On entry : 0/3
 12790 ;;		On exit  : 0/0
 12791 ;;		Unchanged: 0/0
 12792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12797 ;;Total ram usage:        0 bytes
 12798 ;; Hardware stack levels used:    1
 12799 ;; Hardware stack levels required when called:   15
 12800 ;; This function calls:
 12801 ;;		Nothing
 12802 ;; This function is called by:
 12803 ;;		_utoa
 12804 ;; This function uses a reentrant model
 12805 ;;
 12806                           
 12807                           	psect	text49
 12808  017EDC                     __ptext49:
 12809                           	opt callstack 0
 12810  017EDC                     ___lomod:
 12811                           	opt callstack 0
 12812                           
 12813                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 12814  017EDC  52E6               	movf	postinc1,f,c
 12815                           
 12816                           ;stkvar	_divisor @ sp[(-1)+-16]
 12817                           
 12818                           ;incstack = 0
 12819 ;; hardware stack exceeded
 12820  017EDE  0EEF               	movlw	-17
 12821  017EE0  50E3               	movf	plusw1,w,c
 12822  017EE2  E116               	bnz	u6950
 12823  017EE4  0EF0               	movlw	-16
 12824  017EE6  50E3               	movf	plusw1,w,c
 12825  017EE8  E113               	bnz	u6950
 12826  017EEA  0EF1               	movlw	-15
 12827  017EEC  50E3               	movf	plusw1,w,c
 12828  017EEE  E110               	bnz	u6950
 12829  017EF0  0EF2               	movlw	-14
 12830  017EF2  50E3               	movf	plusw1,w,c
 12831  017EF4  E10D               	bnz	u6950
 12832  017EF6  0EF3               	movlw	-13
 12833  017EF8  50E3               	movf	plusw1,w,c
 12834  017EFA  E10A               	bnz	u6950
 12835  017EFC  0EF4               	movlw	-12
 12836  017EFE  50E3               	movf	plusw1,w,c
 12837  017F00  E107               	bnz	u6950
 12838  017F02  0EF5               	movlw	-11
 12839  017F04  50E3               	movf	plusw1,w,c
 12840  017F06  E104               	bnz	u6950
 12841  017F08  0EF6               	movlw	-10
 12842  017F0A  50E3               	movf	plusw1,w,c
 12843  017F0C  B4D8               	btfsc	status,2,c
 12844  017F0E  D075               	goto	u6980
 12845  017F10                     u6950:
 12846                           
 12847                           ;stkvar	_counter @ sp[(-1)+0]
 12848  017F10  0EFF               	movlw	-1
 12849  017F12  6AE3               	clrf	plusw1,c
 12850  017F14  D012               	goto	L11
 12851  017F16                     l8069:
 12852                           
 12853                           ;stkvar	_divisor @ sp[(-1)+-16]
 12854  017F16  90D8               	bcf	status,0,c
 12855  017F18  0EEF               	movlw	-17
 12856  017F1A  36E3               	rlcf	plusw1,f,c
 12857  017F1C  0EF0               	movlw	-16
 12858  017F1E  36E3               	rlcf	plusw1,f,c
 12859  017F20  0EF1               	movlw	-15
 12860  017F22  36E3               	rlcf	plusw1,f,c
 12861  017F24  0EF2               	movlw	-14
 12862  017F26  36E3               	rlcf	plusw1,f,c
 12863  017F28  0EF3               	movlw	-13
 12864  017F2A  36E3               	rlcf	plusw1,f,c
 12865  017F2C  0EF4               	movlw	-12
 12866  017F2E  36E3               	rlcf	plusw1,f,c
 12867  017F30  0EF5               	movlw	-11
 12868  017F32  36E3               	rlcf	plusw1,f,c
 12869  017F34  0EF6               	movlw	-10
 12870  017F36  36E3               	rlcf	plusw1,f,c
 12871                           
 12872                           ;stkvar	_counter @ sp[(-1)+0]
 12873  017F38  0EFF               	movlw	-1
 12874  017F3A                     L11:
 12875  017F3A  2AE3               	incf	plusw1,f,c
 12876                           
 12877                           ;stkvar	_divisor @ sp[(-1)+-16]
 12878  017F3C  0EF6               	movlw	-10
 12879  017F3E  AEE3               	btfss	plusw1,7,c
 12880  017F40  D7EA               	goto	l8069
 12881  017F42                     u6960:
 12882                           
 12883                           ;stkvar	_divisor @ sp[(-1)+-16]
 12884                           ;stkvar	_dividend @ sp[(-1)+-8]
 12885  017F42  50E1               	movf	fsr1l,w,c
 12886  017F44  0FF7               	addlw	-9
 12887  017F46  6ED9               	movwf	fsr2l,c
 12888  017F48  50E2               	movf	fsr1h,w,c
 12889  017F4A  6EDA               	movwf	fsr2h,c
 12890  017F4C  0EFF               	movlw	255
 12891  017F4E  22DA               	addwfc	fsr2h,f,c
 12892  017F50  0EEF               	movlw	-17
 12893  017F52  50E3               	movf	plusw1,w,c
 12894  017F54  5CDE               	subwf	postinc2,w,c
 12895  017F56  0EF0               	movlw	-16
 12896  017F58  50E3               	movf	plusw1,w,c
 12897  017F5A  58DE               	subwfb	postinc2,w,c
 12898  017F5C  0EF1               	movlw	-15
 12899  017F5E  50E3               	movf	plusw1,w,c
 12900  017F60  58DE               	subwfb	postinc2,w,c
 12901  017F62  0EF2               	movlw	-14
 12902  017F64  50E3               	movf	plusw1,w,c
 12903  017F66  58DE               	subwfb	postinc2,w,c
 12904  017F68  0EF3               	movlw	-13
 12905  017F6A  50E3               	movf	plusw1,w,c
 12906  017F6C  58DE               	subwfb	postinc2,w,c
 12907  017F6E  0EF4               	movlw	-12
 12908  017F70  50E3               	movf	plusw1,w,c
 12909  017F72  58DE               	subwfb	postinc2,w,c
 12910  017F74  0EF5               	movlw	-11
 12911  017F76  50E3               	movf	plusw1,w,c
 12912  017F78  58DE               	subwfb	postinc2,w,c
 12913  017F7A  0EF6               	movlw	-10
 12914  017F7C  50E3               	movf	plusw1,w,c
 12915  017F7E  58DE               	subwfb	postinc2,w,c
 12916  017F80  A0D8               	btfss	status,0,c
 12917  017F82  D01F               	goto	l8077
 12918                           
 12919                           ;stkvar	_divisor @ sp[(-1)+-16]
 12920                           ;stkvar	_dividend @ sp[(-1)+-8]
 12921  017F84  50E1               	movf	fsr1l,w,c
 12922  017F86  0FF7               	addlw	-9
 12923  017F88  6ED9               	movwf	fsr2l,c
 12924  017F8A  50E2               	movf	fsr1h,w,c
 12925  017F8C  6EDA               	movwf	fsr2h,c
 12926  017F8E  0EFF               	movlw	255
 12927  017F90  22DA               	addwfc	fsr2h,f,c
 12928  017F92  0EEF               	movlw	-17
 12929  017F94  50E3               	movf	plusw1,w,c
 12930  017F96  5EDE               	subwf	postinc2,f,c
 12931  017F98  0EF0               	movlw	-16
 12932  017F9A  50E3               	movf	plusw1,w,c
 12933  017F9C  5ADE               	subwfb	postinc2,f,c
 12934  017F9E  0EF1               	movlw	-15
 12935  017FA0  50E3               	movf	plusw1,w,c
 12936  017FA2  5ADE               	subwfb	postinc2,f,c
 12937  017FA4  0EF2               	movlw	-14
 12938  017FA6  50E3               	movf	plusw1,w,c
 12939  017FA8  5ADE               	subwfb	postinc2,f,c
 12940  017FAA  0EF3               	movlw	-13
 12941  017FAC  50E3               	movf	plusw1,w,c
 12942  017FAE  5ADE               	subwfb	postinc2,f,c
 12943  017FB0  0EF4               	movlw	-12
 12944  017FB2  50E3               	movf	plusw1,w,c
 12945  017FB4  5ADE               	subwfb	postinc2,f,c
 12946  017FB6  0EF5               	movlw	-11
 12947  017FB8  50E3               	movf	plusw1,w,c
 12948  017FBA  5ADE               	subwfb	postinc2,f,c
 12949  017FBC  0EF6               	movlw	-10
 12950  017FBE  50E3               	movf	plusw1,w,c
 12951  017FC0  5ADE               	subwfb	postinc2,f,c
 12952  017FC2                     l8077:
 12953                           
 12954                           ;stkvar	_divisor @ sp[(-1)+-16]
 12955  017FC2  90D8               	bcf	status,0,c
 12956  017FC4  0EF6               	movlw	-10
 12957  017FC6  32E3               	rrcf	plusw1,f,c
 12958  017FC8  0EF5               	movlw	-11
 12959  017FCA  32E3               	rrcf	plusw1,f,c
 12960  017FCC  0EF4               	movlw	-12
 12961  017FCE  32E3               	rrcf	plusw1,f,c
 12962  017FD0  0EF3               	movlw	-13
 12963  017FD2  32E3               	rrcf	plusw1,f,c
 12964  017FD4  0EF2               	movlw	-14
 12965  017FD6  32E3               	rrcf	plusw1,f,c
 12966  017FD8  0EF1               	movlw	-15
 12967  017FDA  32E3               	rrcf	plusw1,f,c
 12968  017FDC  0EF0               	movlw	-16
 12969  017FDE  32E3               	rrcf	plusw1,f,c
 12970  017FE0  0EEF               	movlw	-17
 12971  017FE2  32E3               	rrcf	plusw1,f,c
 12972                           
 12973                           ;stkvar	_counter @ sp[(-1)+0]
 12974  017FE4  0EFF               	movlw	-1
 12975  017FE6  50E3               	movf	plusw1,w,c
 12976  017FE8  6E01               	movwf	btemp^0,c
 12977  017FEA  0E01               	movlw	1
 12978  017FEC  5E01               	subwf	btemp^0,f,c
 12979  017FEE  0EFF               	movlw	-1
 12980  017FF0  0060  F007  FFE3   	movff	btemp,plusw1
 12981  017FF6  A4D8               	btfss	status,2,c
 12982  017FF8  D7A4               	goto	u6960
 12983  017FFA                     u6980:
 12984                           
 12985                           ;stkvar	_dividend @ sp[(-1)+-8]
 12986  017FFA  0EF7               	movlw	247
 12987  017FFC  24E1               	addwf	fsr1l,w,c
 12988  017FFE  6ED9               	movwf	fsr2l,c
 12989  018000  0EFF               	movlw	255
 12990  018002  20E2               	addwfc	fsr1h,w,c
 12991  018004  6EDA               	movwf	fsr2h,c
 12992                           
 12993                           ;stkvar	?___lomod @ sp[(-1)+-8]
 12994  018006  0E08               	movlw	8
 12995  018008  6E01               	movwf	btemp^0,c
 12996  01800A  0EF7               	movlw	-9
 12997  01800C                     us699999:
 12998  01800C  006F FF7B FFE3     	movff	postinc2,plusw1
 12999  018012  28E8               	incf	wreg,w,c
 13000  018014  2E01               	decfsz	btemp^0,f,c
 13001  018016  D7FA               	bra	us699999
 13002                           
 13003                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13004  018018  52E5               	movf	postdec1,f,c
 13005  01801A  0012               	return		;funcret
 13006  01801C                     __end_of___lomod:
 13007                           	opt callstack 0
 13008                           
 13009 ;; *************** function ___lodiv *****************
 13010 ;; Defined at:
 13011 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 13012 ;; Parameters:    Size  Location     Type
 13013 ;;  dividend        8  [STACK] unsigned long long 
 13014 ;;  divisor         8  [STACK] unsigned long long 
 13015 ;; Auto vars:     Size  Location     Type
 13016 ;;  quotient        8  [STACK] unsigned long long 
 13017 ;;  counter         1  [STACK] unsigned char 
 13018 ;; Return value:  Size  Location     Type
 13019 ;;                  8  [STACK] unsigned long long 
 13020 ;; Registers used:
 13021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13022 ;; Tracked objects:
 13023 ;;		On entry : 0/3
 13024 ;;		On exit  : 0/0
 13025 ;;		Unchanged: 0/0
 13026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13031 ;;Total ram usage:        0 bytes
 13032 ;; Hardware stack levels used:    1
 13033 ;; Hardware stack levels required when called:   15
 13034 ;; This function calls:
 13035 ;;		Nothing
 13036 ;; This function is called by:
 13037 ;;		_utoa
 13038 ;; This function uses a reentrant model
 13039 ;;
 13040                           
 13041                           	psect	text50
 13042  017666                     __ptext50:
 13043                           	opt callstack 0
 13044  017666                     ___lodiv:
 13045                           	opt callstack 0
 13046                           
 13047                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13048  017666  0E09               	movlw	9
 13049  017668  26E1               	addwf	fsr1l,f,c
 13050  01766A  0E00               	movlw	0
 13051  01766C  22E2               	addwfc	fsr1h,f,c
 13052                           
 13053                           ;stkvar	_quotient @ sp[(-9)+0]
 13054                           
 13055                           ;incstack = 0
 13056 ;; hardware stack exceeded
 13057  01766E  0E07               	movlw	7
 13058  017670  6E01               	movwf	btemp^0,c
 13059  017672  0EF7               	movlw	-9
 13060  017674                     u6891:
 13061  017674  6AE3               	clrf	plusw1,c
 13062  017676  2AE8               	incf	wreg,f,c
 13063  017678  0601               	decf	btemp^0,f,c
 13064  01767A  E2FC               	bc	u6891
 13065                           
 13066                           ;stkvar	_divisor @ sp[(-9)+-16]
 13067  01767C  0EE7               	movlw	-25
 13068  01767E  50E3               	movf	plusw1,w,c
 13069  017680  E116               	bnz	u6900
 13070  017682  0EE8               	movlw	-24
 13071  017684  50E3               	movf	plusw1,w,c
 13072  017686  E113               	bnz	u6900
 13073  017688  0EE9               	movlw	-23
 13074  01768A  50E3               	movf	plusw1,w,c
 13075  01768C  E110               	bnz	u6900
 13076  01768E  0EEA               	movlw	-22
 13077  017690  50E3               	movf	plusw1,w,c
 13078  017692  E10D               	bnz	u6900
 13079  017694  0EEB               	movlw	-21
 13080  017696  50E3               	movf	plusw1,w,c
 13081  017698  E10A               	bnz	u6900
 13082  01769A  0EEC               	movlw	-20
 13083  01769C  50E3               	movf	plusw1,w,c
 13084  01769E  E107               	bnz	u6900
 13085  0176A0  0EED               	movlw	-19
 13086  0176A2  50E3               	movf	plusw1,w,c
 13087  0176A4  E104               	bnz	u6900
 13088  0176A6  0EEE               	movlw	-18
 13089  0176A8  50E3               	movf	plusw1,w,c
 13090  0176AA  B4D8               	btfsc	status,2,c
 13091  0176AC  D088               	goto	u6930
 13092  0176AE                     u6900:
 13093                           
 13094                           ;stkvar	_counter @ sp[(-9)+8]
 13095  0176AE  0EFF               	movlw	-1
 13096  0176B0  6AE3               	clrf	plusw1,c
 13097  0176B2  D012               	goto	L12
 13098  0176B4                     l8045:
 13099                           
 13100                           ;stkvar	_divisor @ sp[(-9)+-16]
 13101  0176B4  90D8               	bcf	status,0,c
 13102  0176B6  0EE7               	movlw	-25
 13103  0176B8  36E3               	rlcf	plusw1,f,c
 13104  0176BA  0EE8               	movlw	-24
 13105  0176BC  36E3               	rlcf	plusw1,f,c
 13106  0176BE  0EE9               	movlw	-23
 13107  0176C0  36E3               	rlcf	plusw1,f,c
 13108  0176C2  0EEA               	movlw	-22
 13109  0176C4  36E3               	rlcf	plusw1,f,c
 13110  0176C6  0EEB               	movlw	-21
 13111  0176C8  36E3               	rlcf	plusw1,f,c
 13112  0176CA  0EEC               	movlw	-20
 13113  0176CC  36E3               	rlcf	plusw1,f,c
 13114  0176CE  0EED               	movlw	-19
 13115  0176D0  36E3               	rlcf	plusw1,f,c
 13116  0176D2  0EEE               	movlw	-18
 13117  0176D4  36E3               	rlcf	plusw1,f,c
 13118                           
 13119                           ;stkvar	_counter @ sp[(-9)+8]
 13120  0176D6  0EFF               	movlw	-1
 13121  0176D8                     L12:
 13122  0176D8  2AE3               	incf	plusw1,f,c
 13123                           
 13124                           ;stkvar	_divisor @ sp[(-9)+-16]
 13125  0176DA  0EEE               	movlw	-18
 13126  0176DC  AEE3               	btfss	plusw1,7,c
 13127  0176DE  D7EA               	goto	l8045
 13128  0176E0                     u6910:
 13129                           
 13130                           ;stkvar	_quotient @ sp[(-9)+0]
 13131  0176E0  90D8               	bcf	status,0,c
 13132  0176E2  0EF7               	movlw	-9
 13133  0176E4  36E3               	rlcf	plusw1,f,c
 13134  0176E6  0EF8               	movlw	-8
 13135  0176E8  36E3               	rlcf	plusw1,f,c
 13136  0176EA  0EF9               	movlw	-7
 13137  0176EC  36E3               	rlcf	plusw1,f,c
 13138  0176EE  0EFA               	movlw	-6
 13139  0176F0  36E3               	rlcf	plusw1,f,c
 13140  0176F2  0EFB               	movlw	-5
 13141  0176F4  36E3               	rlcf	plusw1,f,c
 13142  0176F6  0EFC               	movlw	-4
 13143  0176F8  36E3               	rlcf	plusw1,f,c
 13144  0176FA  0EFD               	movlw	-3
 13145  0176FC  36E3               	rlcf	plusw1,f,c
 13146  0176FE  0EFE               	movlw	-2
 13147  017700  36E3               	rlcf	plusw1,f,c
 13148                           
 13149                           ;stkvar	_divisor @ sp[(-9)+-16]
 13150                           ;stkvar	_dividend @ sp[(-9)+-8]
 13151  017702  50E1               	movf	fsr1l,w,c
 13152  017704  0FEF               	addlw	-17
 13153  017706  6ED9               	movwf	fsr2l,c
 13154  017708  50E2               	movf	fsr1h,w,c
 13155  01770A  6EDA               	movwf	fsr2h,c
 13156  01770C  0EFF               	movlw	255
 13157  01770E  22DA               	addwfc	fsr2h,f,c
 13158  017710  0EE7               	movlw	-25
 13159  017712  50E3               	movf	plusw1,w,c
 13160  017714  5CDE               	subwf	postinc2,w,c
 13161  017716  0EE8               	movlw	-24
 13162  017718  50E3               	movf	plusw1,w,c
 13163  01771A  58DE               	subwfb	postinc2,w,c
 13164  01771C  0EE9               	movlw	-23
 13165  01771E  50E3               	movf	plusw1,w,c
 13166  017720  58DE               	subwfb	postinc2,w,c
 13167  017722  0EEA               	movlw	-22
 13168  017724  50E3               	movf	plusw1,w,c
 13169  017726  58DE               	subwfb	postinc2,w,c
 13170  017728  0EEB               	movlw	-21
 13171  01772A  50E3               	movf	plusw1,w,c
 13172  01772C  58DE               	subwfb	postinc2,w,c
 13173  01772E  0EEC               	movlw	-20
 13174  017730  50E3               	movf	plusw1,w,c
 13175  017732  58DE               	subwfb	postinc2,w,c
 13176  017734  0EED               	movlw	-19
 13177  017736  50E3               	movf	plusw1,w,c
 13178  017738  58DE               	subwfb	postinc2,w,c
 13179  01773A  0EEE               	movlw	-18
 13180  01773C  50E3               	movf	plusw1,w,c
 13181  01773E  58DE               	subwfb	postinc2,w,c
 13182  017740  A0D8               	btfss	status,0,c
 13183  017742  D021               	goto	l8057
 13184                           
 13185                           ;stkvar	_divisor @ sp[(-9)+-16]
 13186                           ;stkvar	_dividend @ sp[(-9)+-8]
 13187  017744  50E1               	movf	fsr1l,w,c
 13188  017746  0FEF               	addlw	-17
 13189  017748  6ED9               	movwf	fsr2l,c
 13190  01774A  50E2               	movf	fsr1h,w,c
 13191  01774C  6EDA               	movwf	fsr2h,c
 13192  01774E  0EFF               	movlw	255
 13193  017750  22DA               	addwfc	fsr2h,f,c
 13194  017752  0EE7               	movlw	-25
 13195  017754  50E3               	movf	plusw1,w,c
 13196  017756  5EDE               	subwf	postinc2,f,c
 13197  017758  0EE8               	movlw	-24
 13198  01775A  50E3               	movf	plusw1,w,c
 13199  01775C  5ADE               	subwfb	postinc2,f,c
 13200  01775E  0EE9               	movlw	-23
 13201  017760  50E3               	movf	plusw1,w,c
 13202  017762  5ADE               	subwfb	postinc2,f,c
 13203  017764  0EEA               	movlw	-22
 13204  017766  50E3               	movf	plusw1,w,c
 13205  017768  5ADE               	subwfb	postinc2,f,c
 13206  01776A  0EEB               	movlw	-21
 13207  01776C  50E3               	movf	plusw1,w,c
 13208  01776E  5ADE               	subwfb	postinc2,f,c
 13209  017770  0EEC               	movlw	-20
 13210  017772  50E3               	movf	plusw1,w,c
 13211  017774  5ADE               	subwfb	postinc2,f,c
 13212  017776  0EED               	movlw	-19
 13213  017778  50E3               	movf	plusw1,w,c
 13214  01777A  5ADE               	subwfb	postinc2,f,c
 13215  01777C  0EEE               	movlw	-18
 13216  01777E  50E3               	movf	plusw1,w,c
 13217  017780  5ADE               	subwfb	postinc2,f,c
 13218                           
 13219                           ;stkvar	_quotient @ sp[(-9)+0]
 13220  017782  0EF7               	movlw	-9
 13221  017784  80E3               	bsf	plusw1,0,c
 13222  017786                     l8057:
 13223                           
 13224                           ;stkvar	_divisor @ sp[(-9)+-16]
 13225  017786  90D8               	bcf	status,0,c
 13226  017788  0EEE               	movlw	-18
 13227  01778A  32E3               	rrcf	plusw1,f,c
 13228  01778C  0EED               	movlw	-19
 13229  01778E  32E3               	rrcf	plusw1,f,c
 13230  017790  0EEC               	movlw	-20
 13231  017792  32E3               	rrcf	plusw1,f,c
 13232  017794  0EEB               	movlw	-21
 13233  017796  32E3               	rrcf	plusw1,f,c
 13234  017798  0EEA               	movlw	-22
 13235  01779A  32E3               	rrcf	plusw1,f,c
 13236  01779C  0EE9               	movlw	-23
 13237  01779E  32E3               	rrcf	plusw1,f,c
 13238  0177A0  0EE8               	movlw	-24
 13239  0177A2  32E3               	rrcf	plusw1,f,c
 13240  0177A4  0EE7               	movlw	-25
 13241  0177A6  32E3               	rrcf	plusw1,f,c
 13242                           
 13243                           ;stkvar	_counter @ sp[(-9)+8]
 13244  0177A8  0EFF               	movlw	-1
 13245  0177AA  50E3               	movf	plusw1,w,c
 13246  0177AC  6E01               	movwf	btemp^0,c
 13247  0177AE  0E01               	movlw	1
 13248  0177B0  5E01               	subwf	btemp^0,f,c
 13249  0177B2  0EFF               	movlw	-1
 13250  0177B4  0060  F007  FFE3   	movff	btemp,plusw1
 13251  0177BA  A4D8               	btfss	status,2,c
 13252  0177BC  D791               	goto	u6910
 13253  0177BE                     u6930:
 13254                           
 13255                           ;stkvar	_quotient @ sp[(-9)+0]
 13256  0177BE  0EF7               	movlw	247
 13257  0177C0  24E1               	addwf	fsr1l,w,c
 13258  0177C2  6ED9               	movwf	fsr2l,c
 13259  0177C4  0EFF               	movlw	255
 13260  0177C6  20E2               	addwfc	fsr1h,w,c
 13261  0177C8  6EDA               	movwf	fsr2h,c
 13262                           
 13263                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 13264  0177CA  0E08               	movlw	8
 13265  0177CC  6E01               	movwf	btemp^0,c
 13266  0177CE  0EEF               	movlw	-17
 13267  0177D0                     us694999:
 13268  0177D0  006F FF7B FFE3     	movff	postinc2,plusw1
 13269  0177D6  28E8               	incf	wreg,w,c
 13270  0177D8  2E01               	decfsz	btemp^0,f,c
 13271  0177DA  D7FA               	bra	us694999
 13272                           
 13273                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13274  0177DC  0EF7               	movlw	247
 13275  0177DE  26E1               	addwf	fsr1l,f,c
 13276  0177E0  0EFF               	movlw	255
 13277  0177E2  22E2               	addwfc	fsr1h,f,c
 13278  0177E4  0012               	return		;funcret
 13279  0177E6                     __end_of___lodiv:
 13280                           	opt callstack 0
 13281                           
 13282 ;; *************** function _strncmp *****************
 13283 ;; Defined at:
 13284 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 13285 ;; Parameters:    Size  Location     Type
 13286 ;;  _l              2  [STACK] PTR const unsigned char 
 13287 ;;		 -> ct(3), STR_46(79), STR_44(3), STR_43(3), 
 13288 ;;		 -> STR_42(19), STR_41(19), STR_40(19), STR_39(19), 
 13289 ;;		 -> STR_38(19), STR_37(19), STR_36(24), STR_35(15), 
 13290 ;;		 -> STR_34(15), STR_33(15), STR_32(10), STR_31(10), 
 13291 ;;		 -> STR_30(19), STR_29(19), STR_26(3), STR_25(3), 
 13292 ;;		 -> STR_24(3), STR_23(17), STR_22(16), STR_21(16), 
 13293 ;;		 -> STR_20(19), STR_19(20), STR_18(19), STR_17(19), 
 13294 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
 13295 ;;		 -> STR_12(19), STR_11(17), STR_10(16), STR_9(16), 
 13296 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
 13297 ;;		 -> STR_2(15), STR_1(17), 
 13298 ;;  _r              2  [STACK] PTR const unsigned char 
 13299 ;;		 -> STR_80(3), STR_76(3), STR_71(3), STR_66(3), 
 13300 ;;		 -> STR_61(3), STR_57(3), 
 13301 ;;  n               2  [STACK] unsigned int 
 13302 ;; Auto vars:     Size  Location     Type
 13303 ;;  r               2  [STACK] PTR const unsigned char 
 13304 ;;		 -> STR_80(3), STR_76(3), STR_71(3), STR_66(3), 
 13305 ;;		 -> STR_61(3), STR_57(3), 
 13306 ;;  l               2  [STACK] PTR const unsigned char 
 13307 ;;		 -> ct(3), STR_46(79), STR_44(3), STR_43(3), 
 13308 ;;		 -> STR_42(19), STR_41(19), STR_40(19), STR_39(19), 
 13309 ;;		 -> STR_38(19), STR_37(19), STR_36(24), STR_35(15), 
 13310 ;;		 -> STR_34(15), STR_33(15), STR_32(10), STR_31(10), 
 13311 ;;		 -> STR_30(19), STR_29(19), STR_26(3), STR_25(3), 
 13312 ;;		 -> STR_24(3), STR_23(17), STR_22(16), STR_21(16), 
 13313 ;;		 -> STR_20(19), STR_19(20), STR_18(19), STR_17(19), 
 13314 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
 13315 ;;		 -> STR_12(19), STR_11(17), STR_10(16), STR_9(16), 
 13316 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
 13317 ;;		 -> STR_2(15), STR_1(17), 
 13318 ;; Return value:  Size  Location     Type
 13319 ;;                  2  [STACK] int 
 13320 ;; Registers used:
 13321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 13322 ;; Tracked objects:
 13323 ;;		On entry : 0/0
 13324 ;;		On exit  : 0/0
 13325 ;;		Unchanged: 0/0
 13326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13331 ;;Total ram usage:        0 bytes
 13332 ;; Hardware stack levels used:    1
 13333 ;; Hardware stack levels required when called:   15
 13334 ;; This function calls:
 13335 ;;		Nothing
 13336 ;; This function is called by:
 13337 ;;		_vfpfcnvrt
 13338 ;; This function uses a reentrant model
 13339 ;;
 13340                           
 13341                           	psect	text51
 13342  016ADE                     __ptext51:
 13343                           	opt callstack 0
 13344  016ADE                     _strncmp:
 13345                           	opt callstack 0
 13346                           
 13347                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13348  016ADE  52E6               	movf	postinc1,f,c
 13349  016AE0  52E6               	movf	postinc1,f,c
 13350  016AE2  52E6               	movf	postinc1,f,c
 13351  016AE4  52E6               	movf	postinc1,f,c
 13352                           
 13353                           ;stkvar	__l @ sp[(-4)+-2]
 13354                           
 13355                           ;incstack = 0
 13356 ;; hardware stack exceeded
 13357  016AE6  0EFA               	movlw	-6
 13358  016AE8  006F FF8C  F00B    	movff	plusw1,btemp+10
 13359  016AEE  0EFB               	movlw	-5
 13360  016AF0  006F FF8C  F00C    	movff	plusw1,btemp+11
 13361                           
 13362                           ;stkvar	_l @ sp[(-4)+2]
 13363  016AF6  0EFF               	movlw	-1
 13364  016AF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13365  016AFE  0EFE               	movlw	-2
 13366  016B00  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13367                           
 13368                           ;stkvar	__r @ sp[(-4)+-4]
 13369  016B06  0EF8               	movlw	-8
 13370  016B08  006F FF8C  F00B    	movff	plusw1,btemp+10
 13371  016B0E  0EF9               	movlw	-7
 13372  016B10  006F FF8C  F00C    	movff	plusw1,btemp+11
 13373                           
 13374                           ;stkvar	_r @ sp[(-4)+0]
 13375  016B16  0EFD               	movlw	-3
 13376  016B18  0060  F033  FFE3   	movff	btemp+11,plusw1
 13377  016B1E  0EFC               	movlw	-4
 13378  016B20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13379                           
 13380                           ;stkvar	_n @ sp[(-4)+-6]
 13381  016B26  0EF6               	movlw	-10
 13382  016B28  006F FF8C  F001    	movff	plusw1,btemp
 13383  016B2E  0E01               	movlw	1
 13384  016B30  5E01               	subwf	btemp^0,f,c
 13385  016B32  0EF6               	movlw	-10
 13386  016B34  0060  F007  FFE3   	movff	btemp,plusw1
 13387  016B3A  0EF7               	movlw	-9
 13388  016B3C  006F FF8C  F001    	movff	plusw1,btemp
 13389  016B42  0E00               	movlw	0
 13390  016B44  5A01               	subwfb	btemp^0,f,c
 13391  016B46  0EF7               	movlw	-9
 13392  016B48  0060  F007  FFE3   	movff	btemp,plusw1
 13393  016B4E  0EF6               	movlw	-10
 13394  016B50  28E3               	incf	plusw1,w,c
 13395  016B52  E13F               	bnz	l8753
 13396  016B54  0EF7               	movlw	-9
 13397  016B56  28E3               	incf	plusw1,w,c
 13398  016B58  A4D8               	btfss	status,2,c
 13399  016B5A  D03B               	goto	l8753
 13400  016B5C  0E00               	movlw	0
 13401  016B5E  6E01               	movwf	btemp^0,c
 13402  016B60  0E00               	movlw	0
 13403  016B62  6E02               	movwf	(btemp+1)^0,c
 13404  016B64  D0C7               	goto	l3321
 13405  016B66                     l8751:
 13406                           
 13407                           ;stkvar	_l @ sp[(-4)+2]
 13408  016B66  0EFE               	movlw	-2
 13409  016B68  50E3               	movf	plusw1,w,c
 13410  016B6A  0F01               	addlw	1
 13411  016B6C  6E01               	movwf	btemp^0,c
 13412  016B6E  0EFE               	movlw	-2
 13413  016B70  0060  F007  FFE3   	movff	btemp,plusw1
 13414  016B76  6A01               	clrf	btemp^0,c
 13415  016B78  0EFF               	movlw	-1
 13416  016B7A  50E3               	movf	plusw1,w,c
 13417  016B7C  2001               	addwfc	btemp^0,w,c
 13418  016B7E  6E01               	movwf	btemp^0,c
 13419  016B80  0EFF               	movlw	-1
 13420  016B82  0060  F007  FFE3   	movff	btemp,plusw1
 13421                           
 13422                           ;stkvar	_r @ sp[(-4)+0]
 13423  016B88  0EFC               	movlw	-4
 13424  016B8A  50E3               	movf	plusw1,w,c
 13425  016B8C  0F01               	addlw	1
 13426  016B8E  6E01               	movwf	btemp^0,c
 13427  016B90  0EFC               	movlw	-4
 13428  016B92  0060  F007  FFE3   	movff	btemp,plusw1
 13429  016B98  6A01               	clrf	btemp^0,c
 13430  016B9A  0EFD               	movlw	-3
 13431  016B9C  50E3               	movf	plusw1,w,c
 13432  016B9E  2001               	addwfc	btemp^0,w,c
 13433  016BA0  6E01               	movwf	btemp^0,c
 13434  016BA2  0EFD               	movlw	-3
 13435  016BA4  0060  F007  FFE3   	movff	btemp,plusw1
 13436                           
 13437                           ;stkvar	_n @ sp[(-4)+-6]
 13438  016BAA  0EF6               	movlw	-10
 13439  016BAC  006F FF8C  F001    	movff	plusw1,btemp
 13440  016BB2  0E01               	movlw	1
 13441  016BB4  5E01               	subwf	btemp^0,f,c
 13442  016BB6  0EF6               	movlw	-10
 13443  016BB8  0060  F007  FFE3   	movff	btemp,plusw1
 13444  016BBE  0EF7               	movlw	-9
 13445  016BC0  006F FF8C  F001    	movff	plusw1,btemp
 13446  016BC6  0E00               	movlw	0
 13447  016BC8  5A01               	subwfb	btemp^0,f,c
 13448  016BCA  0EF7               	movlw	-9
 13449  016BCC  0060  F007  FFE3   	movff	btemp,plusw1
 13450  016BD2                     l8753:
 13451                           
 13452                           ;stkvar	_l @ sp[(-4)+2]
 13453  016BD2  0EFE               	movlw	-2
 13454  016BD4  006F FF8F FFF6     	movff	plusw1,tblptrl
 13455  016BDA  0EFF               	movlw	-1
 13456  016BDC  006F FF8F FFF7     	movff	plusw1,tblptrh
 13457  016BE2  0E00               	movlw	low (__mediumconst shr (0+16))
 13458  016BE4  6EF8               	movwf	tblptru,c
 13459  016BE6  0E1F               	movlw	(high __ramtop+-1)
 13460  016BE8  64F7               	cpfsgt	tblptrh,c
 13461  016BEA  D003               	bra	u8227
 13462  016BEC  0008               	tblrd		*
 13463  016BEE  50F5               	movf	tablat,w,c
 13464  016BF0  D007               	bra	u8220
 13465  016BF2                     u8227:
 13466  016BF2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13467  016BF8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13468  016BFE  50EF               	movf	indf0,w,c
 13469  016C00                     u8220:
 13470  016C00  0900               	iorlw	0
 13471  016C02  B4D8               	btfsc	status,2,c
 13472  016C04  D04A               	goto	u8260
 13473                           
 13474                           ;stkvar	_r @ sp[(-4)+0]
 13475  016C06  50E1               	movf	fsr1l,w,c
 13476  016C08  0FFC               	addlw	-4
 13477  016C0A  6ED9               	movwf	fsr2l,c
 13478  016C0C  50E2               	movf	fsr1h,w,c
 13479  016C0E  6EDA               	movwf	fsr2h,c
 13480  016C10  0EFF               	movlw	255
 13481  016C12  22DA               	addwfc	fsr2h,f,c
 13482  016C14  006F FF7B FFF6     	movff	postinc2,tblptrl
 13483  016C1A  006F FF77 FFF7     	movff	postdec2,tblptrh
 13484  016C20                     	if	0	;tblptru may be non-zero
 13485  016C20                     	endif
 13486  016C20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13487  016C20  0E00               	movlw	low (__mediumconst shr (0+16))
 13488  016C22  6EF8               	movwf	tblptru,c
 13489  016C24                     	endif
 13490  016C24  0008               	tblrd		*
 13491  016C26  50F5               	movf	tablat,w,c
 13492  016C28  0900               	iorlw	0
 13493  016C2A  B4D8               	btfsc	status,2,c
 13494  016C2C  D036               	goto	u8260
 13495                           
 13496                           ;stkvar	_n @ sp[(-4)+-6]
 13497  016C2E  0EF6               	movlw	-10
 13498  016C30  006F FF8C  F001    	movff	plusw1,btemp
 13499  016C36  0EF7               	movlw	-9
 13500  016C38  50E3               	movf	plusw1,w,c
 13501  016C3A  1001               	iorwf	btemp^0,w,c
 13502  016C3C  B4D8               	btfsc	status,2,c
 13503  016C3E  D02D               	goto	u8260
 13504                           
 13505                           ;stkvar	_r @ sp[(-4)+0]
 13506  016C40  50E1               	movf	fsr1l,w,c
 13507  016C42  0FFC               	addlw	-4
 13508  016C44  6ED9               	movwf	fsr2l,c
 13509  016C46  50E2               	movf	fsr1h,w,c
 13510  016C48  6EDA               	movwf	fsr2h,c
 13511  016C4A  0EFF               	movlw	255
 13512  016C4C  22DA               	addwfc	fsr2h,f,c
 13513  016C4E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13514  016C54  006F FF77 FFF7     	movff	postdec2,tblptrh
 13515  016C5A                     	if	0	;tblptru may be non-zero
 13516  016C5A                     	endif
 13517  016C5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13518  016C5A  0E00               	movlw	low (__mediumconst shr (0+16))
 13519  016C5C  6EF8               	movwf	tblptru,c
 13520  016C5E                     	endif
 13521  016C5E  0008               	tblrd		*
 13522  016C60  006F FFD4  F00C    	movff	tablat,btemp+11
 13523                           
 13524                           ;stkvar	_l @ sp[(-4)+2]
 13525  016C66  0EFE               	movlw	-2
 13526  016C68  006F FF8F FFF6     	movff	plusw1,tblptrl
 13527  016C6E  0EFF               	movlw	-1
 13528  016C70  006F FF8F FFF7     	movff	plusw1,tblptrh
 13529  016C76  0E00               	movlw	low (__mediumconst shr (0+16))
 13530  016C78  6EF8               	movwf	tblptru,c
 13531  016C7A  0E1F               	movlw	(high __ramtop+-1)
 13532  016C7C  64F7               	cpfsgt	tblptrh,c
 13533  016C7E  D003               	bra	u8267
 13534  016C80  0008               	tblrd		*
 13535  016C82  50F5               	movf	tablat,w,c
 13536  016C84  D007               	bra	u8265
 13537  016C86                     u8267:
 13538  016C86  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13539  016C8C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13540  016C92  50EF               	movf	indf0,w,c
 13541  016C94                     u8265:
 13542  016C94  180C               	xorwf	(btemp+11)^0,w,c
 13543  016C96  B4D8               	btfsc	status,2,c
 13544  016C98  D766               	goto	l8751
 13545  016C9A                     u8260:
 13546                           
 13547                           ;stkvar	_l @ sp[(-4)+2]
 13548  016C9A  0EFE               	movlw	-2
 13549  016C9C  006F FF8F FFF6     	movff	plusw1,tblptrl
 13550  016CA2  0EFF               	movlw	-1
 13551  016CA4  006F FF8F FFF7     	movff	plusw1,tblptrh
 13552  016CAA  0E00               	movlw	low (__mediumconst shr (0+16))
 13553  016CAC  6EF8               	movwf	tblptru,c
 13554  016CAE  0E1F               	movlw	(high __ramtop+-1)
 13555  016CB0  64F7               	cpfsgt	tblptrh,c
 13556  016CB2  D003               	bra	u8277
 13557  016CB4  0008               	tblrd		*
 13558  016CB6  50F5               	movf	tablat,w,c
 13559  016CB8  D007               	bra	u8270
 13560  016CBA                     u8277:
 13561  016CBA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13562  016CC0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13563  016CC6  50EF               	movf	indf0,w,c
 13564  016CC8                     u8270:
 13565  016CC8  6E01               	movwf	btemp^0,c
 13566  016CCA  6A02               	clrf	(btemp+1)^0,c
 13567                           
 13568                           ;stkvar	_r @ sp[(-4)+0]
 13569  016CCC  50E1               	movf	fsr1l,w,c
 13570  016CCE  0FFC               	addlw	-4
 13571  016CD0  6ED9               	movwf	fsr2l,c
 13572  016CD2  50E2               	movf	fsr1h,w,c
 13573  016CD4  6EDA               	movwf	fsr2h,c
 13574  016CD6  0EFF               	movlw	255
 13575  016CD8  22DA               	addwfc	fsr2h,f,c
 13576  016CDA  006F FF7B FFF6     	movff	postinc2,tblptrl
 13577  016CE0  006F FF77 FFF7     	movff	postdec2,tblptrh
 13578  016CE6                     	if	0	;tblptru may be non-zero
 13579  016CE6                     	endif
 13580  016CE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13581  016CE6  0E00               	movlw	low (__mediumconst shr (0+16))
 13582  016CE8  6EF8               	movwf	tblptru,c
 13583  016CEA                     	endif
 13584  016CEA  0008               	tblrd		*
 13585  016CEC  50F5               	movf	tablat,w,c
 13586  016CEE  5E01               	subwf	btemp^0,f,c
 13587  016CF0  0E00               	movlw	0
 13588  016CF2  5A02               	subwfb	(btemp+1)^0,f,c
 13589  016CF4                     l3321:
 13590                           
 13591                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 13592  016CF4  0EF6               	movlw	246
 13593  016CF6  26E1               	addwf	fsr1l,f,c
 13594  016CF8  0EFF               	movlw	255
 13595  016CFA  22E2               	addwfc	fsr1h,f,c
 13596  016CFC  0012               	return		;funcret
 13597  016CFE                     __end_of_strncmp:
 13598                           	opt callstack 0
 13599                           
 13600 ;; *************** function _stoa *****************
 13601 ;; Defined at:
 13602 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13603 ;; Parameters:    Size  Location     Type
 13604 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13605 ;;		 -> f(6), NULL(0), 
 13606 ;;  s               2  [STACK] PTR unsigned char 
 13607 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 13608 ;;		 -> D.lcd(288), D(290), T(144), STR_7(4), 
 13609 ;;		 -> STR_3(4), V(188), 
 13610 ;; Auto vars:     Size  Location     Type
 13611 ;;  nuls            7  [STACK] unsigned char [7]
 13612 ;;  l               2  [STACK] int 
 13613 ;;  p               2  [STACK] int 
 13614 ;;  cp              2  [STACK] PTR unsigned char 
 13615 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 13616 ;;		 -> STR_27(12), D.lcd(288), D(290), T(144), 
 13617 ;;		 -> STR_7(4), STR_3(4), V(188), 
 13618 ;;  w               2  [STACK] int 
 13619 ;;  i               2  [STACK] int 
 13620 ;; Return value:  Size  Location     Type
 13621 ;;                  2  [STACK] int 
 13622 ;; Registers used:
 13623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13624 ;; Tracked objects:
 13625 ;;		On entry : 0/0
 13626 ;;		On exit  : 0/0
 13627 ;;		Unchanged: 0/0
 13628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13633 ;;Total ram usage:        0 bytes
 13634 ;; Hardware stack levels used:    1
 13635 ;; Hardware stack levels required when called:   18
 13636 ;; This function calls:
 13637 ;;		_fputc
 13638 ;;		_strlen
 13639 ;; This function is called by:
 13640 ;;		_vfpfcnvrt
 13641 ;; This function uses a reentrant model
 13642 ;;
 13643                           
 13644                           	psect	text52
 13645  0160EC                     __ptext52:
 13646                           	opt callstack 0
 13647  0160EC                     _stoa:
 13648                           	opt callstack 0
 13649                           
 13650                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13651  0160EC  0E11               	movlw	17
 13652  0160EE  26E1               	addwf	fsr1l,f,c
 13653  0160F0  0E00               	movlw	0
 13654  0160F2  22E2               	addwfc	fsr1h,f,c
 13655                           
 13656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 13657                           
 13658                           ;incstack = 0
 13659 ;; hardware stack exceeded
 13660  0160F4  EE20  F1D3         	lfsr	2,stoa@F1166
 13661                           
 13662                           ;stkvar	_nuls @ sp[(-17)+0]
 13663  0160F8  0E07               	movlw	7
 13664  0160FA  6E01               	movwf	btemp^0,c
 13665  0160FC  0EEF               	movlw	-17
 13666  0160FE                     us1085999:
 13667  0160FE  006F FF7B FFE3     	movff	postinc2,plusw1
 13668  016104  28E8               	incf	wreg,w,c
 13669  016106  2E01               	decfsz	btemp^0,f,c
 13670  016108  D7FA               	bra	us1085999
 13671                           
 13672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 13673                           ;stkvar	_s @ sp[(-17)+-4]
 13674  01610A  0EEB               	movlw	-21
 13675  01610C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13676  016112  0EEC               	movlw	-20
 13677  016114  006F FF8C  F00C    	movff	plusw1,btemp+11
 13678                           
 13679                           ;stkvar	_cp @ sp[(-17)+11]
 13680  01611A  0EFB               	movlw	-5
 13681  01611C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13682  016122  0EFA               	movlw	-6
 13683  016124  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13684                           
 13685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 13686                           ;stkvar	_cp @ sp[(-17)+11]
 13687  01612A  0EFA               	movlw	-6
 13688  01612C  006F FF8C  F001    	movff	plusw1,btemp
 13689  016132  0EFB               	movlw	-5
 13690  016134  50E3               	movf	plusw1,w,c
 13691  016136  1001               	iorwf	btemp^0,w,c
 13692  016138  A4D8               	btfss	status,2,c
 13693  01613A  D00E               	goto	l11251
 13694                           
 13695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 13696                           ;stkvar	_nuls @ sp[(-17)+0]
 13697  01613C  0EEF               	movlw	239
 13698  01613E  24E1               	addwf	fsr1l,w,c
 13699  016140  6E0B               	movwf	(btemp+10)^0,c
 13700  016142  0EFF               	movlw	255
 13701  016144  20E2               	addwfc	fsr1h,w,c
 13702  016146  6E0C               	movwf	(btemp+11)^0,c
 13703                           
 13704                           ;stkvar	_cp @ sp[(-17)+11]
 13705  016148  0EFB               	movlw	-5
 13706  01614A  0060  F033  FFE3   	movff	btemp+11,plusw1
 13707  016150  0EFA               	movlw	-6
 13708  016152  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13709  016158                     l11251:
 13710                           
 13711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 13712                           ;stkvar	_cp @ sp[(-17)+11]
 13713  016158  0EFA               	movlw	-6
 13714  01615A  006F FF8F FFE6     	movff	plusw1,postinc1
 13715  016160  006F FF8F FFE6     	movff	plusw1,postinc1
 13716  016166  EC5C  F0C8         	call	_strlen	;wreg free
 13717                           
 13718                           ;stkvar	_l @ sp[(-17)+7]
 13719  01616A  0EF6               	movlw	-10
 13720  01616C  0060  F007  FFE3   	movff	btemp,plusw1
 13721  016172  0EF7               	movlw	-9
 13722  016174  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13723                           
 13724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 13725                           ;stkvar	_p @ sp[(-17)+9]
 13726  01617A  0EF8               	movlw	-8
 13727  01617C  0060  F08F  FFE3   	movff	_prec,plusw1
 13728  016182  0EF9               	movlw	-7
 13729  016184  0060  F093  FFE3   	movff	_prec+1,plusw1
 13730                           
 13731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 13732                           ;stkvar	_p @ sp[(-17)+9]
 13733  01618A  0EF9               	movlw	-7
 13734  01618C  BEE3               	btfsc	plusw1,7,c
 13735  01618E  D023               	goto	l2151
 13736                           
 13737                           ;stkvar	_l @ sp[(-17)+7]
 13738                           ;stkvar	_p @ sp[(-17)+9]
 13739  016190  50E1               	movf	fsr1l,w,c
 13740  016192  0FF8               	addlw	-8
 13741  016194  6ED9               	movwf	fsr2l,c
 13742  016196  50E2               	movf	fsr1h,w,c
 13743  016198  6EDA               	movwf	fsr2h,c
 13744  01619A  0EFF               	movlw	255
 13745  01619C  22DA               	addwfc	fsr2h,f,c
 13746  01619E  0EF6               	movlw	-10
 13747  0161A0  50E3               	movf	plusw1,w,c
 13748  0161A2  5CDE               	subwf	postinc2,w,c
 13749  0161A4  50DE               	movf	postinc2,w,c
 13750  0161A6  0A80               	xorlw	128
 13751  0161A8  6E01               	movwf	btemp^0,c
 13752  0161AA  0EF7               	movlw	-9
 13753  0161AC  50E3               	movf	plusw1,w,c
 13754  0161AE  0A80               	xorlw	128
 13755  0161B0  5801               	subwfb	btemp^0,w,c
 13756  0161B2  B0D8               	btfsc	status,0,c
 13757  0161B4  D010               	goto	l2151
 13758                           
 13759                           ;stkvar	_p @ sp[(-17)+9]
 13760                           ;stkvar	_l @ sp[(-17)+7]
 13761  0161B6  0EF8               	movlw	-8
 13762  0161B8  006F FF8C  F001    	movff	plusw1,btemp
 13763  0161BE  0EF6               	movlw	-10
 13764  0161C0  0060  F007  FFE3   	movff	btemp,plusw1
 13765  0161C6  0EF9               	movlw	-7
 13766  0161C8  006F FF8C  F001    	movff	plusw1,btemp
 13767  0161CE  0EF7               	movlw	-9
 13768  0161D0  0060  F007  FFE3   	movff	btemp,plusw1
 13769  0161D6                     l2151:
 13770                           
 13771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 13772                           ;stkvar	_l @ sp[(-17)+7]
 13773                           ;stkvar	_p @ sp[(-17)+9]
 13774  0161D6  0EF6               	movlw	-10
 13775  0161D8  006F FF8C  F001    	movff	plusw1,btemp
 13776  0161DE  0EF8               	movlw	-8
 13777  0161E0  0060  F007  FFE3   	movff	btemp,plusw1
 13778  0161E6  0EF7               	movlw	-9
 13779  0161E8  006F FF8C  F001    	movff	plusw1,btemp
 13780  0161EE  0EF9               	movlw	-7
 13781  0161F0  0060  F007  FFE3   	movff	btemp,plusw1
 13782                           
 13783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 13784                           ;stkvar	_w @ sp[(-17)+13]
 13785  0161F6  0EFC               	movlw	-4
 13786  0161F8  0060  F087  FFE3   	movff	_width,plusw1
 13787  0161FE  0EFD               	movlw	-3
 13788  016200  0060  F08B  FFE3   	movff	_width+1,plusw1
 13789                           
 13790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 13791  016206  A025               	btfss	_flags^0,0,c
 13792  016208  D01F               	goto	l11271
 13793  01620A  D031               	goto	u10900
 13794  01620C                     l11267:
 13795                           
 13796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 13797                           ;stkvar	_fp @ sp[(-17)+-2]
 13798  01620C  0EED               	movlw	-19
 13799  01620E  006F FF8F FFE6     	movff	plusw1,postinc1
 13800  016214  006F FF8F FFE6     	movff	plusw1,postinc1
 13801  01621A  0E20               	movlw	32
 13802  01621C  6EE6               	movwf	postinc1,c
 13803  01621E  0E00               	movlw	0
 13804  016220  6EE6               	movwf	postinc1,c
 13805  016222  EC39  F0C1         	call	_fputc	;wreg free
 13806                           
 13807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 13808                           ;stkvar	_l @ sp[(-17)+7]
 13809  016226  0EF6               	movlw	-10
 13810  016228  50E3               	movf	plusw1,w,c
 13811  01622A  0F01               	addlw	1
 13812  01622C  6E01               	movwf	btemp^0,c
 13813  01622E  0EF6               	movlw	-10
 13814  016230  0060  F007  FFE3   	movff	btemp,plusw1
 13815  016236  6A01               	clrf	btemp^0,c
 13816  016238  0EF7               	movlw	-9
 13817  01623A  50E3               	movf	plusw1,w,c
 13818  01623C  2001               	addwfc	btemp^0,w,c
 13819  01623E  6E01               	movwf	btemp^0,c
 13820  016240  0EF7               	movlw	-9
 13821  016242  0060  F007  FFE3   	movff	btemp,plusw1
 13822  016248                     l11271:
 13823                           
 13824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 13825                           ;stkvar	_w @ sp[(-17)+13]
 13826                           ;stkvar	_l @ sp[(-17)+7]
 13827  016248  50E1               	movf	fsr1l,w,c
 13828  01624A  0FF6               	addlw	-10
 13829  01624C  6ED9               	movwf	fsr2l,c
 13830  01624E  50E2               	movf	fsr1h,w,c
 13831  016250  6EDA               	movwf	fsr2h,c
 13832  016252  0EFF               	movlw	255
 13833  016254  22DA               	addwfc	fsr2h,f,c
 13834  016256  0EFC               	movlw	-4
 13835  016258  50E3               	movf	plusw1,w,c
 13836  01625A  5CDE               	subwf	postinc2,w,c
 13837  01625C  50DE               	movf	postinc2,w,c
 13838  01625E  0A80               	xorlw	128
 13839  016260  6E01               	movwf	btemp^0,c
 13840  016262  0EFD               	movlw	-3
 13841  016264  50E3               	movf	plusw1,w,c
 13842  016266  0A80               	xorlw	128
 13843  016268  5801               	subwfb	btemp^0,w,c
 13844  01626A  A0D8               	btfss	status,0,c
 13845  01626C  D7CF               	goto	l11267
 13846  01626E                     u10900:
 13847                           
 13848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 13849                           ;stkvar	_i @ sp[(-17)+15]
 13850  01626E  0EFE               	movlw	-2
 13851  016270  6AE3               	clrf	plusw1,c
 13852  016272  0EFF               	movlw	-1
 13853  016274  6AE3               	clrf	plusw1,c
 13854                           
 13855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 13856  016276  D045               	goto	l11281
 13857  016278                     l11275:
 13858                           
 13859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 13860                           ;stkvar	_fp @ sp[(-17)+-2]
 13861  016278  0EED               	movlw	-19
 13862  01627A  006F FF8F FFE6     	movff	plusw1,postinc1
 13863  016280  006F FF8F FFE6     	movff	plusw1,postinc1
 13864                           
 13865                           ;stkvar	_cp @ sp[(-19)+11]
 13866  016286  0EF8               	movlw	-8
 13867  016288  006F FF8F FFF6     	movff	plusw1,tblptrl
 13868  01628E  0EF9               	movlw	-7
 13869  016290  006F FF8F FFF7     	movff	plusw1,tblptrh
 13870  016296  0E00               	movlw	low (__mediumconst shr (0+16))
 13871  016298  6EF8               	movwf	tblptru,c
 13872  01629A  0E1F               	movlw	(high __ramtop+-1)
 13873  01629C  64F7               	cpfsgt	tblptrh,c
 13874  01629E  D003               	bra	u10917
 13875  0162A0  0008               	tblrd		*
 13876  0162A2  50F5               	movf	tablat,w,c
 13877  0162A4  D007               	bra	u10910
 13878  0162A6                     u10917:
 13879  0162A6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13880  0162AC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13881  0162B2  50EF               	movf	indf0,w,c
 13882  0162B4                     u10910:
 13883  0162B4  6EE6               	movwf	postinc1,c
 13884  0162B6  0E00               	movlw	0
 13885  0162B8  6EE6               	movwf	postinc1,c
 13886  0162BA  EC39  F0C1         	call	_fputc	;wreg free
 13887                           
 13888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 13889                           ;stkvar	_cp @ sp[(-17)+11]
 13890  0162BE  0EFA               	movlw	-6
 13891  0162C0  50E3               	movf	plusw1,w,c
 13892  0162C2  0F01               	addlw	1
 13893  0162C4  6E01               	movwf	btemp^0,c
 13894  0162C6  0EFA               	movlw	-6
 13895  0162C8  0060  F007  FFE3   	movff	btemp,plusw1
 13896  0162CE  6A01               	clrf	btemp^0,c
 13897  0162D0  0EFB               	movlw	-5
 13898  0162D2  50E3               	movf	plusw1,w,c
 13899  0162D4  2001               	addwfc	btemp^0,w,c
 13900  0162D6  6E01               	movwf	btemp^0,c
 13901  0162D8  0EFB               	movlw	-5
 13902  0162DA  0060  F007  FFE3   	movff	btemp,plusw1
 13903                           
 13904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 13905                           ;stkvar	_i @ sp[(-17)+15]
 13906  0162E0  0EFE               	movlw	-2
 13907  0162E2  50E3               	movf	plusw1,w,c
 13908  0162E4  0F01               	addlw	1
 13909  0162E6  6E01               	movwf	btemp^0,c
 13910  0162E8  0EFE               	movlw	-2
 13911  0162EA  0060  F007  FFE3   	movff	btemp,plusw1
 13912  0162F0  6A01               	clrf	btemp^0,c
 13913  0162F2  0EFF               	movlw	-1
 13914  0162F4  50E3               	movf	plusw1,w,c
 13915  0162F6  2001               	addwfc	btemp^0,w,c
 13916  0162F8  6E01               	movwf	btemp^0,c
 13917  0162FA  0EFF               	movlw	-1
 13918  0162FC  0060  F007  FFE3   	movff	btemp,plusw1
 13919  016302                     l11281:
 13920                           
 13921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 13922                           ;stkvar	_p @ sp[(-17)+9]
 13923                           ;stkvar	_i @ sp[(-17)+15]
 13924  016302  50E1               	movf	fsr1l,w,c
 13925  016304  0FFE               	addlw	-2
 13926  016306  6ED9               	movwf	fsr2l,c
 13927  016308  50E2               	movf	fsr1h,w,c
 13928  01630A  6EDA               	movwf	fsr2h,c
 13929  01630C  0EFF               	movlw	255
 13930  01630E  22DA               	addwfc	fsr2h,f,c
 13931  016310  0EF8               	movlw	-8
 13932  016312  50E3               	movf	plusw1,w,c
 13933  016314  5CDE               	subwf	postinc2,w,c
 13934  016316  50DE               	movf	postinc2,w,c
 13935  016318  0A80               	xorlw	128
 13936  01631A  6E01               	movwf	btemp^0,c
 13937  01631C  0EF9               	movlw	-7
 13938  01631E  50E3               	movf	plusw1,w,c
 13939  016320  0A80               	xorlw	128
 13940  016322  5801               	subwfb	btemp^0,w,c
 13941  016324  A0D8               	btfss	status,0,c
 13942  016326  D7A8               	goto	l11275
 13943                           
 13944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 13945  016328  B025               	btfsc	_flags^0,0,c
 13946  01632A  D01F               	goto	l11289
 13947  01632C  D031               	goto	u10940
 13948  01632E                     l11285:
 13949                           
 13950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 13951                           ;stkvar	_fp @ sp[(-17)+-2]
 13952  01632E  0EED               	movlw	-19
 13953  016330  006F FF8F FFE6     	movff	plusw1,postinc1
 13954  016336  006F FF8F FFE6     	movff	plusw1,postinc1
 13955  01633C  0E20               	movlw	32
 13956  01633E  6EE6               	movwf	postinc1,c
 13957  016340  0E00               	movlw	0
 13958  016342  6EE6               	movwf	postinc1,c
 13959  016344  EC39  F0C1         	call	_fputc	;wreg free
 13960                           
 13961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 13962                           ;stkvar	_l @ sp[(-17)+7]
 13963  016348  0EF6               	movlw	-10
 13964  01634A  50E3               	movf	plusw1,w,c
 13965  01634C  0F01               	addlw	1
 13966  01634E  6E01               	movwf	btemp^0,c
 13967  016350  0EF6               	movlw	-10
 13968  016352  0060  F007  FFE3   	movff	btemp,plusw1
 13969  016358  6A01               	clrf	btemp^0,c
 13970  01635A  0EF7               	movlw	-9
 13971  01635C  50E3               	movf	plusw1,w,c
 13972  01635E  2001               	addwfc	btemp^0,w,c
 13973  016360  6E01               	movwf	btemp^0,c
 13974  016362  0EF7               	movlw	-9
 13975  016364  0060  F007  FFE3   	movff	btemp,plusw1
 13976  01636A                     l11289:
 13977                           
 13978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 13979                           ;stkvar	_w @ sp[(-17)+13]
 13980                           ;stkvar	_l @ sp[(-17)+7]
 13981  01636A  50E1               	movf	fsr1l,w,c
 13982  01636C  0FF6               	addlw	-10
 13983  01636E  6ED9               	movwf	fsr2l,c
 13984  016370  50E2               	movf	fsr1h,w,c
 13985  016372  6EDA               	movwf	fsr2h,c
 13986  016374  0EFF               	movlw	255
 13987  016376  22DA               	addwfc	fsr2h,f,c
 13988  016378  0EFC               	movlw	-4
 13989  01637A  50E3               	movf	plusw1,w,c
 13990  01637C  5CDE               	subwf	postinc2,w,c
 13991  01637E  50DE               	movf	postinc2,w,c
 13992  016380  0A80               	xorlw	128
 13993  016382  6E01               	movwf	btemp^0,c
 13994  016384  0EFD               	movlw	-3
 13995  016386  50E3               	movf	plusw1,w,c
 13996  016388  0A80               	xorlw	128
 13997  01638A  5801               	subwfb	btemp^0,w,c
 13998  01638C  A0D8               	btfss	status,0,c
 13999  01638E  D7CF               	goto	l11285
 14000  016390                     u10940:
 14001                           
 14002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 14003                           ;stkvar	_l @ sp[(-17)+7]
 14004  016390  0EF6               	movlw	-10
 14005  016392  006F FF8C  F001    	movff	plusw1,btemp
 14006  016398  0EF7               	movlw	-9
 14007  01639A  006F FF8C  F002    	movff	plusw1,btemp+1
 14008                           
 14009                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 14010  0163A0  0EEB               	movlw	235
 14011  0163A2  26E1               	addwf	fsr1l,f,c
 14012  0163A4  0EFF               	movlw	255
 14013  0163A6  22E2               	addwfc	fsr1h,f,c
 14014  0163A8  0012               	return		;funcret
 14015  0163AA                     __end_of_stoa:
 14016                           	opt callstack 0
 14017                           
 14018 ;; *************** function _efgtoa *****************
 14019 ;; Defined at:
 14020 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14021 ;; Parameters:    Size  Location     Type
 14022 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14023 ;;		 -> f(6), NULL(0), 
 14024 ;;  f               4  [STACK] PTR struct _IO_FILE
 14025 ;;  c               1  [STACK] unsigned char 
 14026 ;; Auto vars:     Size  Location     Type
 14027 ;;  u               4  [STACK] unsigned char 
 14028 ;;  g               4  [STACK] unsigned char 
 14029 ;;  l               4  [STACK] unsigned char 
 14030 ;;  h               4  [STACK] unsigned char 
 14031 ;;  ou              4  [STACK] unsigned char 
 14032 ;;  n               2  [STACK] int 
 14033 ;;  e               2  [STACK] int 
 14034 ;;  i               2  [STACK] int 
 14035 ;;  w               2  [STACK] int 
 14036 ;;  p               2  [STACK] int 
 14037 ;;  sign            2  [STACK] int 
 14038 ;;  d               2  [STACK] int 
 14039 ;;  ne              2  [STACK] int 
 14040 ;;  m               2  [STACK] int 
 14041 ;;  pp              2  [STACK] int 
 14042 ;;  t               2  [STACK] int 
 14043 ;;  mode            1  [STACK] unsigned char 
 14044 ;;  nmode           1  [STACK] unsigned char 
 14045 ;; Return value:  Size  Location     Type
 14046 ;;                  2  [STACK] int 
 14047 ;; Registers used:
 14048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14049 ;; Tracked objects:
 14050 ;;		On entry : 0/0
 14051 ;;		On exit  : 0/0
 14052 ;;		Unchanged: 0/0
 14053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14058 ;;Total ram usage:        0 bytes
 14059 ;; Hardware stack levels used:    1
 14060 ;; Hardware stack levels required when called:   20
 14061 ;; This function calls:
 14062 ;;		___awdiv
 14063 ;;		___awmod
 14064 ;;		___fladd
 14065 ;;		___fldiv
 14066 ;;		___fleq
 14067 ;;		___flge
 14068 ;;		___flmul
 14069 ;;		___flneg
 14070 ;;		___flsub
 14071 ;;		___fltol
 14072 ;;		___fpclassifyf
 14073 ;;		_floorf
 14074 ;;		_isupper
 14075 ;;		_pad
 14076 ;;		_strcpy
 14077 ;;		_tolower
 14078 ;; This function is called by:
 14079 ;;		_vfpfcnvrt
 14080 ;; This function uses a reentrant model
 14081 ;;
 14082                           
 14083                           	psect	text53
 14084  010000                     __ptext53:
 14085                           	opt callstack 0
 14086  010000                     _efgtoa:
 14087                           	opt callstack 0
 14088                           
 14089                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14090  010000  0E38               	movlw	56
 14091  010002  26E1               	addwf	fsr1l,f,c
 14092  010004  0E00               	movlw	0
 14093  010006  22E2               	addwfc	fsr1h,f,c
 14094                           
 14095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 14096                           ;stkvar	_sign @ sp[(-56)+42]
 14097                           
 14098                           ;incstack = 0
 14099 ;; hardware stack exceeded
 14100  010008  0EF2               	movlw	-14
 14101  01000A  6AE3               	clrf	plusw1,c
 14102  01000C  0EF3               	movlw	-13
 14103  01000E  6AE3               	clrf	plusw1,c
 14104                           
 14105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 14106                           ;stkvar	_f @ sp[(-56)+-6]
 14107  010010  0EC2               	movlw	-62
 14108  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 14109  010018  0EC3               	movlw	-61
 14110  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14111  010020  0EC4               	movlw	-60
 14112  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 14113  010028  0EC5               	movlw	-59
 14114  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14115                           
 14116                           ;stkvar	_g @ sp[(-56)+16]
 14117  010030  0ED8               	movlw	-40
 14118  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 14119  010038  0ED9               	movlw	-39
 14120  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14121  010040  0EDA               	movlw	-38
 14122  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14123  010048  0EDB               	movlw	-37
 14124  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14125                           
 14126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 14127                           ;stkvar	_g @ sp[(-56)+16]
 14128  010050  0EDB               	movlw	-37
 14129  010052  AEE3               	btfss	plusw1,7,c
 14130  010054  D02B               	goto	l10949
 14131                           
 14132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 14133  010056  0E01               	movlw	1
 14134  010058  6E0B               	movwf	(btemp+10)^0,c
 14135  01005A  0E00               	movlw	0
 14136  01005C  6E0C               	movwf	(btemp+11)^0,c
 14137                           
 14138                           ;stkvar	_sign @ sp[(-56)+42]
 14139  01005E  0EF2               	movlw	-14
 14140  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14141  010066  0EF3               	movlw	-13
 14142  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 14143                           
 14144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 14145                           ;stkvar	_g @ sp[(-56)+16]
 14146  01006E  0ED8               	movlw	-40
 14147  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 14148  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 14149  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 14150  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 14151  010088  EC0A  F0CE         	call	___flneg	;wreg free
 14152                           
 14153                           ;stkvar	_g @ sp[(-56)+16]
 14154  01008C  0ED8               	movlw	-40
 14155  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 14156  010094  0ED9               	movlw	-39
 14157  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14158  01009C  0EDA               	movlw	-38
 14159  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14160  0100A4  0EDB               	movlw	-37
 14161  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 14162  0100AC                     l10949:
 14163                           
 14164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 14165                           ;stkvar	_n @ sp[(-56)+32]
 14166  0100AC  0EE8               	movlw	-24
 14167  0100AE  6AE3               	clrf	plusw1,c
 14168  0100B0  0EE9               	movlw	-23
 14169  0100B2  6AE3               	clrf	plusw1,c
 14170                           
 14171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 14172                           ;stkvar	_w @ sp[(-56)+38]
 14173  0100B4  0EEE               	movlw	-18
 14174  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 14175  0100BC  0EEF               	movlw	-17
 14176  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 14177                           
 14178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 14179                           ;stkvar	_sign @ sp[(-56)+42]
 14180  0100C4  0EF2               	movlw	-14
 14181  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 14182  0100CC  0EF3               	movlw	-13
 14183  0100CE  50E3               	movf	plusw1,w,c
 14184  0100D0  1001               	iorwf	btemp^0,w,c
 14185  0100D2  A4D8               	btfss	status,2,c
 14186  0100D4  D002               	goto	u10350
 14187  0100D6  A425               	btfss	_flags^0,2,c
 14188  0100D8  D036               	goto	l10969
 14189  0100DA                     u10350:
 14190                           
 14191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 14192                           ;stkvar	_sign @ sp[(-56)+42]
 14193  0100DA  0EF2               	movlw	-14
 14194  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 14195  0100E2  0EF3               	movlw	-13
 14196  0100E4  50E3               	movf	plusw1,w,c
 14197  0100E6  1001               	iorwf	btemp^0,w,c
 14198  0100E8  A4D8               	btfss	status,2,c
 14199  0100EA  D002               	goto	l10961
 14200  0100EC  0E2B               	movlw	43
 14201  0100EE  D001               	goto	L13
 14202  0100F0                     l10961:
 14203  0100F0  0E2D               	movlw	45
 14204  0100F2                     L13:
 14205  0100F2  6E0B               	movwf	(btemp+10)^0,c
 14206  0100F4  0E00               	movlw	0
 14207  0100F6  6E0C               	movwf	(btemp+11)^0,c
 14208                           
 14209                           ;stkvar	_efgtoa$5188 @ sp[(-56)+10]
 14210  0100F8  0ED2               	movlw	-46
 14211  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14212  010100  0ED3               	movlw	-45
 14213  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 14214                           
 14215                           ;stkvar	_efgtoa$5188 @ sp[(-56)+10]
 14216  010108  0ED2               	movlw	-46
 14217  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 14218                           
 14219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 14220                           ;stkvar	_n @ sp[(-56)+32]
 14221  010110  0EE8               	movlw	-24
 14222  010112  50E3               	movf	plusw1,w,c
 14223  010114  0F01               	addlw	1
 14224  010116  6E01               	movwf	btemp^0,c
 14225  010118  0EE8               	movlw	-24
 14226  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 14227  010120  6A01               	clrf	btemp^0,c
 14228  010122  0EE9               	movlw	-23
 14229  010124  50E3               	movf	plusw1,w,c
 14230  010126  2001               	addwfc	btemp^0,w,c
 14231  010128  6E01               	movwf	btemp^0,c
 14232  01012A  0EE9               	movlw	-23
 14233  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 14234                           
 14235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 14236                           ;stkvar	_w @ sp[(-56)+38]
 14237  010132  50E1               	movf	fsr1l,w,c
 14238  010134  0FEE               	addlw	-18
 14239  010136  6ED9               	movwf	fsr2l,c
 14240  010138  50E2               	movf	fsr1h,w,c
 14241  01013A  6EDA               	movwf	fsr2h,c
 14242  01013C  0EFF               	movlw	255
 14243  01013E  22DA               	addwfc	fsr2h,f,c
 14244  010140  06DE               	decf	postinc2,f,c
 14245  010142  0E00               	movlw	0
 14246  010144  5ADD               	subwfb	postdec2,f,c
 14247  010146                     l10969:
 14248                           
 14249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14250                           ;stkvar	_g @ sp[(-56)+16]
 14251  010146  0ED8               	movlw	-40
 14252  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 14253  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 14254  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 14255  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 14256  010160  EC68  F0BA         	call	___fpclassifyf	;wreg free
 14257  010164  0401               	decf	btemp^0,w,c
 14258  010166  1002               	iorwf	(btemp+1)^0,w,c
 14259  010168  A4D8               	btfss	status,2,c
 14260  01016A  D076               	goto	l10987
 14261  01016C  0EBF               	movlw	191
 14262  01016E  6E0B               	movwf	(btemp+10)^0,c
 14263  010170  0EFF               	movlw	255
 14264  010172  6E0C               	movwf	(btemp+11)^0,c
 14265                           
 14266                           ;stkvar	_c @ sp[(-56)+-7]
 14267  010174  0EC1               	movlw	-63
 14268  010176  50E3               	movf	plusw1,w,c
 14269  010178  6E09               	movwf	(btemp+8)^0,c
 14270  01017A  6A0A               	clrf	(btemp+9)^0,c
 14271  01017C  500B               	movf	(btemp+10)^0,w,c
 14272  01017E  2609               	addwf	(btemp+8)^0,f,c
 14273  010180  500C               	movf	(btemp+11)^0,w,c
 14274  010182  220A               	addwfc	(btemp+9)^0,f,c
 14275  010184  500A               	movf	(btemp+9)^0,w,c
 14276  010186  E106               	bnz	u10380
 14277  010188  0E1A               	movlw	26
 14278  01018A  5C09               	subwf	(btemp+8)^0,w,c
 14279  01018C  B0D8               	btfsc	status,0,c
 14280  01018E  D002               	goto	u10380
 14281  010190  0E01               	movlw	1
 14282  010192  D001               	goto	u10390
 14283  010194                     u10380:
 14284  010194  0E00               	movlw	0
 14285  010196                     u10390:
 14286  010196  6E0B               	movwf	(btemp+10)^0,c
 14287  010198  6A0C               	clrf	(btemp+11)^0,c
 14288                           
 14289                           ;stkvar	_efgtoa$5189 @ sp[(-56)+8]
 14290  01019A  0ED0               	movlw	-48
 14291  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14292  0101A2  0ED1               	movlw	-47
 14293  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14294                           
 14295                           ;stkvar	_efgtoa$5189 @ sp[(-56)+8]
 14296  0101AA  0ED0               	movlw	-48
 14297  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 14298  0101B2  0ED1               	movlw	-47
 14299  0101B4  50E3               	movf	plusw1,w,c
 14300  0101B6  1001               	iorwf	btemp^0,w,c
 14301  0101B8  B4D8               	btfsc	status,2,c
 14302  0101BA  D017               	goto	l10979
 14303                           
 14304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 14305  0101BC  0ED3               	movlw	low STR_47
 14306  0101BE  6EE6               	movwf	postinc1,c
 14307  0101C0  0EFF               	movlw	high STR_47
 14308  0101C2  6EE6               	movwf	postinc1,c
 14309                           
 14310                           ;stkvar	_n @ sp[(-58)+32]
 14311  0101C4  0E94               	movlw	low _dbuf
 14312  0101C6  6E0B               	movwf	(btemp+10)^0,c
 14313  0101C8  0E03               	movlw	high _dbuf
 14314  0101CA  6E0C               	movwf	(btemp+11)^0,c
 14315  0101CC  0EE6               	movlw	-26
 14316  0101CE  50E3               	movf	plusw1,w,c
 14317  0101D0  260B               	addwf	(btemp+10)^0,f,c
 14318  0101D2  0EE7               	movlw	-25
 14319  0101D4  50E3               	movf	plusw1,w,c
 14320  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 14321  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14322  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14323  0101E4  ECD8  F0C5         	call	_strcpy	;wreg free
 14324                           
 14325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 14326  0101E8  D016               	goto	l10981
 14327  0101EA                     l10979:
 14328                           
 14329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 14330  0101EA  0EDB               	movlw	low STR_48
 14331  0101EC  6EE6               	movwf	postinc1,c
 14332  0101EE  0EFF               	movlw	high STR_48
 14333  0101F0  6EE6               	movwf	postinc1,c
 14334                           
 14335                           ;stkvar	_n @ sp[(-58)+32]
 14336  0101F2  0E94               	movlw	low _dbuf
 14337  0101F4  6E0B               	movwf	(btemp+10)^0,c
 14338  0101F6  0E03               	movlw	high _dbuf
 14339  0101F8  6E0C               	movwf	(btemp+11)^0,c
 14340  0101FA  0EE6               	movlw	-26
 14341  0101FC  50E3               	movf	plusw1,w,c
 14342  0101FE  260B               	addwf	(btemp+10)^0,f,c
 14343  010200  0EE7               	movlw	-25
 14344  010202  50E3               	movf	plusw1,w,c
 14345  010204  220C               	addwfc	(btemp+11)^0,f,c
 14346  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14347  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 14348  010212  ECD8  F0C5         	call	_strcpy	;wreg free
 14349  010216                     l10981:
 14350                           
 14351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 14352                           ;stkvar	_w @ sp[(-56)+38]
 14353  010216  50E1               	movf	fsr1l,w,c
 14354  010218  0FEE               	addlw	-18
 14355  01021A  6ED9               	movwf	fsr2l,c
 14356  01021C  50E2               	movf	fsr1h,w,c
 14357  01021E  6EDA               	movwf	fsr2h,c
 14358  010220  0EFF               	movlw	255
 14359  010222  22DA               	addwfc	fsr2h,f,c
 14360  010224  0EFD               	movlw	253
 14361  010226  26DE               	addwf	postinc2,f,c
 14362  010228  0EFF               	movlw	255
 14363  01022A  22DD               	addwfc	postdec2,f,c
 14364  01022C                     l10983:
 14365                           
 14366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 14367                           ;stkvar	_w @ sp[(-56)+38]
 14368  01022C  0EEE               	movlw	-18
 14369  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 14370  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 14371  01023A  0E94               	movlw	low _dbuf
 14372  01023C  6EE6               	movwf	postinc1,c
 14373  01023E  0E03               	movlw	high _dbuf
 14374  010240  6EE6               	movwf	postinc1,c
 14375                           
 14376                           ;stkvar	_fp @ sp[(-60)+-2]
 14377  010242  0EC2               	movlw	-62
 14378  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 14379  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 14380  010250  EC57  F0C2         	call	_pad	;wreg free
 14381  010254  EF1D  F089         	goto	l2069
 14382  010258                     l10987:
 14383                           
 14384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14385                           ;stkvar	_g @ sp[(-56)+16]
 14386  010258  0ED8               	movlw	-40
 14387  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 14388  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 14389  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 14390  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 14391  010272  EC68  F0BA         	call	___fpclassifyf	;wreg free
 14392  010276  5001               	movf	btemp^0,w,c
 14393  010278  1002               	iorwf	(btemp+1)^0,w,c
 14394  01027A  A4D8               	btfss	status,2,c
 14395  01027C  D056               	goto	l11005
 14396  01027E  0EBF               	movlw	191
 14397  010280  6E0B               	movwf	(btemp+10)^0,c
 14398  010282  0EFF               	movlw	255
 14399  010284  6E0C               	movwf	(btemp+11)^0,c
 14400                           
 14401                           ;stkvar	_c @ sp[(-56)+-7]
 14402  010286  0EC1               	movlw	-63
 14403  010288  50E3               	movf	plusw1,w,c
 14404  01028A  6E09               	movwf	(btemp+8)^0,c
 14405  01028C  6A0A               	clrf	(btemp+9)^0,c
 14406  01028E  500B               	movf	(btemp+10)^0,w,c
 14407  010290  2609               	addwf	(btemp+8)^0,f,c
 14408  010292  500C               	movf	(btemp+11)^0,w,c
 14409  010294  220A               	addwfc	(btemp+9)^0,f,c
 14410  010296  500A               	movf	(btemp+9)^0,w,c
 14411  010298  E106               	bnz	u10420
 14412  01029A  0E1A               	movlw	26
 14413  01029C  5C09               	subwf	(btemp+8)^0,w,c
 14414  01029E  B0D8               	btfsc	status,0,c
 14415  0102A0  D002               	goto	u10420
 14416  0102A2  0E01               	movlw	1
 14417  0102A4  D001               	goto	u10430
 14418  0102A6                     u10420:
 14419  0102A6  0E00               	movlw	0
 14420  0102A8                     u10430:
 14421  0102A8  6E0B               	movwf	(btemp+10)^0,c
 14422  0102AA  6A0C               	clrf	(btemp+11)^0,c
 14423                           
 14424                           ;stkvar	_efgtoa$5193 @ sp[(-56)+6]
 14425  0102AC  0ECE               	movlw	-50
 14426  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14427  0102B4  0ECF               	movlw	-49
 14428  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 14429                           
 14430                           ;stkvar	_efgtoa$5193 @ sp[(-56)+6]
 14431  0102BC  0ECE               	movlw	-50
 14432  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 14433  0102C4  0ECF               	movlw	-49
 14434  0102C6  50E3               	movf	plusw1,w,c
 14435  0102C8  1001               	iorwf	btemp^0,w,c
 14436  0102CA  B4D8               	btfsc	status,2,c
 14437  0102CC  D017               	goto	l10997
 14438                           
 14439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 14440  0102CE  0ED7               	movlw	low STR_51
 14441  0102D0  6EE6               	movwf	postinc1,c
 14442  0102D2  0EFF               	movlw	high STR_51
 14443  0102D4  6EE6               	movwf	postinc1,c
 14444                           
 14445                           ;stkvar	_n @ sp[(-58)+32]
 14446  0102D6  0E94               	movlw	low _dbuf
 14447  0102D8  6E0B               	movwf	(btemp+10)^0,c
 14448  0102DA  0E03               	movlw	high _dbuf
 14449  0102DC  6E0C               	movwf	(btemp+11)^0,c
 14450  0102DE  0EE6               	movlw	-26
 14451  0102E0  50E3               	movf	plusw1,w,c
 14452  0102E2  260B               	addwf	(btemp+10)^0,f,c
 14453  0102E4  0EE7               	movlw	-25
 14454  0102E6  50E3               	movf	plusw1,w,c
 14455  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 14456  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14457  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 14458  0102F6  ECD8  F0C5         	call	_strcpy	;wreg free
 14459                           
 14460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 14461  0102FA  D78D               	goto	l10981
 14462  0102FC                     l10997:
 14463                           
 14464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 14465  0102FC  0EDF               	movlw	low STR_52
 14466  0102FE  6EE6               	movwf	postinc1,c
 14467  010300  0EFF               	movlw	high STR_52
 14468  010302  6EE6               	movwf	postinc1,c
 14469                           
 14470                           ;stkvar	_n @ sp[(-58)+32]
 14471  010304  0E94               	movlw	low _dbuf
 14472  010306  6E0B               	movwf	(btemp+10)^0,c
 14473  010308  0E03               	movlw	high _dbuf
 14474  01030A  6E0C               	movwf	(btemp+11)^0,c
 14475  01030C  0EE6               	movlw	-26
 14476  01030E  50E3               	movf	plusw1,w,c
 14477  010310  260B               	addwf	(btemp+10)^0,f,c
 14478  010312  0EE7               	movlw	-25
 14479  010314  50E3               	movf	plusw1,w,c
 14480  010316  220C               	addwfc	(btemp+11)^0,f,c
 14481  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14482  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 14483  010324  ECD8  F0C5         	call	_strcpy	;wreg free
 14484  010328  D776               	goto	l10981
 14485  01032A                     l11005:
 14486                           
 14487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 14488  01032A  0E00               	movlw	0
 14489  01032C  6E09               	movwf	(btemp+8)^0,c
 14490  01032E  0E00               	movlw	0
 14491  010330  6E0A               	movwf	(btemp+9)^0,c
 14492  010332  0E80               	movlw	128
 14493  010334  6E0B               	movwf	(btemp+10)^0,c
 14494  010336  0E3F               	movlw	63
 14495  010338  6E0C               	movwf	(btemp+11)^0,c
 14496                           
 14497                           ;stkvar	_u @ sp[(-56)+12]
 14498  01033A  0ED4               	movlw	-44
 14499  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 14500  010342  0ED5               	movlw	-43
 14501  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14502  01034A  0ED6               	movlw	-42
 14503  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14504  010352  0ED7               	movlw	-41
 14505  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 14506                           
 14507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 14508                           ;stkvar	_e @ sp[(-56)+34]
 14509  01035A  0EEA               	movlw	-22
 14510  01035C  6AE3               	clrf	plusw1,c
 14511  01035E  0EEB               	movlw	-21
 14512  010360  6AE3               	clrf	plusw1,c
 14513                           
 14514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 14515  010362  0E00               	movlw	0
 14516  010364  6EE6               	movwf	postinc1,c
 14517  010366  0E00               	movlw	0
 14518  010368  6EE6               	movwf	postinc1,c
 14519  01036A  0E00               	movlw	0
 14520  01036C  6EE6               	movwf	postinc1,c
 14521  01036E  0E00               	movlw	0
 14522  010370  6EE6               	movwf	postinc1,c
 14523                           
 14524                           ;stkvar	_g @ sp[(-60)+16]
 14525  010372  0ED4               	movlw	-44
 14526  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 14527  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 14528  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 14529  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 14530  01038C  EC42  F0C6         	call	___fleq	;wreg free
 14531  010390  A001               	btfss	btemp& (0+255),0,c
 14532  010392  D039               	goto	l11017
 14533  010394  D0BC               	goto	u10470
 14534  010396                     l11013:
 14535                           
 14536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 14537  010396  0E00               	movlw	0
 14538  010398  6EE6               	movwf	postinc1,c
 14539  01039A  0E00               	movlw	0
 14540  01039C  6EE6               	movwf	postinc1,c
 14541  01039E  0E20               	movlw	32
 14542  0103A0  6EE6               	movwf	postinc1,c
 14543  0103A2  0E41               	movlw	65
 14544  0103A4  6EE6               	movwf	postinc1,c
 14545                           
 14546                           ;stkvar	_u @ sp[(-60)+12]
 14547  0103A6  0ED0               	movlw	-48
 14548  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 14549  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 14550  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 14551  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 14552  0103C0  EC53  F095         	call	___flmul	;wreg free
 14553                           
 14554                           ;stkvar	_u @ sp[(-56)+12]
 14555  0103C4  0ED4               	movlw	-44
 14556  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 14557  0103CC  0ED5               	movlw	-43
 14558  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14559  0103D4  0ED6               	movlw	-42
 14560  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14561  0103DC  0ED7               	movlw	-41
 14562  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 14563                           
 14564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 14565                           ;stkvar	_e @ sp[(-56)+34]
 14566  0103E4  0EEA               	movlw	-22
 14567  0103E6  50E3               	movf	plusw1,w,c
 14568  0103E8  0F01               	addlw	1
 14569  0103EA  6E01               	movwf	btemp^0,c
 14570  0103EC  0EEA               	movlw	-22
 14571  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 14572  0103F4  6A01               	clrf	btemp^0,c
 14573  0103F6  0EEB               	movlw	-21
 14574  0103F8  50E3               	movf	plusw1,w,c
 14575  0103FA  2001               	addwfc	btemp^0,w,c
 14576  0103FC  6E01               	movwf	btemp^0,c
 14577  0103FE  0EEB               	movlw	-21
 14578  010400  0060  F007  FFE3   	movff	btemp,plusw1
 14579  010406                     l11017:
 14580                           
 14581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 14582  010406  0E00               	movlw	0
 14583  010408  6EE6               	movwf	postinc1,c
 14584  01040A  0E00               	movlw	0
 14585  01040C  6EE6               	movwf	postinc1,c
 14586  01040E  0E20               	movlw	32
 14587  010410  6EE6               	movwf	postinc1,c
 14588  010412  0E41               	movlw	65
 14589  010414  6EE6               	movwf	postinc1,c
 14590                           
 14591                           ;stkvar	_u @ sp[(-60)+12]
 14592  010416  0ED0               	movlw	-48
 14593  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 14594  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 14595  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 14596  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 14597  010430  EC53  F095         	call	___flmul	;wreg free
 14598  010434  0060  F007  FFE6   	movff	btemp,postinc1
 14599  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14600  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14601  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 14602                           
 14603                           ;stkvar	_g @ sp[(-60)+16]
 14604  01044C  0ED4               	movlw	-44
 14605  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 14606  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 14607  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 14608  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 14609  010466  EC64  F0BD         	call	___flge	;wreg free
 14610  01046A  A001               	btfss	btemp& (0+255),0,c
 14611  01046C  D032               	goto	l11023
 14612  01046E  D793               	goto	l11013
 14613  010470                     l11019:
 14614                           
 14615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 14616  010470  0E00               	movlw	0
 14617  010472  6EE6               	movwf	postinc1,c
 14618  010474  0E00               	movlw	0
 14619  010476  6EE6               	movwf	postinc1,c
 14620  010478  0E20               	movlw	32
 14621  01047A  6EE6               	movwf	postinc1,c
 14622  01047C  0E41               	movlw	65
 14623  01047E  6EE6               	movwf	postinc1,c
 14624                           
 14625                           ;stkvar	_u @ sp[(-60)+12]
 14626  010480  0ED0               	movlw	-48
 14627  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 14628  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 14629  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 14630  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 14631  01049A  EC05  F0A1         	call	___fldiv	;wreg free
 14632                           
 14633                           ;stkvar	_u @ sp[(-56)+12]
 14634  01049E  0ED4               	movlw	-44
 14635  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 14636  0104A6  0ED5               	movlw	-43
 14637  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14638  0104AE  0ED6               	movlw	-42
 14639  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14640  0104B6  0ED7               	movlw	-41
 14641  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 14642                           
 14643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 14644                           ;stkvar	_e @ sp[(-56)+34]
 14645  0104BE  50E1               	movf	fsr1l,w,c
 14646  0104C0  0FEA               	addlw	-22
 14647  0104C2  6ED9               	movwf	fsr2l,c
 14648  0104C4  50E2               	movf	fsr1h,w,c
 14649  0104C6  6EDA               	movwf	fsr2h,c
 14650  0104C8  0EFF               	movlw	255
 14651  0104CA  22DA               	addwfc	fsr2h,f,c
 14652  0104CC  06DE               	decf	postinc2,f,c
 14653  0104CE  0E00               	movlw	0
 14654  0104D0  5ADD               	subwfb	postdec2,f,c
 14655  0104D2                     l11023:
 14656                           
 14657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 14658                           ;stkvar	_u @ sp[(-56)+12]
 14659  0104D2  0ED4               	movlw	-44
 14660  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 14661  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 14662  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 14663  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 14664                           
 14665                           ;stkvar	_g @ sp[(-60)+16]
 14666  0104EC  0ED4               	movlw	-44
 14667  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 14668  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 14669  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 14670  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 14671  010506  EC64  F0BD         	call	___flge	;wreg free
 14672  01050A  A001               	btfss	btemp& (0+255),0,c
 14673  01050C  D7B1               	goto	l11019
 14674  01050E                     u10470:
 14675                           
 14676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 14677                           ;stkvar	_c @ sp[(-56)+-7]
 14678  01050E  0EC1               	movlw	-63
 14679  010510  50E3               	movf	plusw1,w,c
 14680  010512  6EE6               	movwf	postinc1,c
 14681  010514  0E00               	movlw	0
 14682  010516  6EE6               	movwf	postinc1,c
 14683  010518  ECA4  F0CA         	call	_tolower	;wreg free
 14684                           
 14685                           ;stkvar	_mode @ sp[(-56)+54]
 14686  01051C  0EFE               	movlw	-2
 14687  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 14688                           
 14689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 14690                           ;stkvar	_mode @ sp[(-56)+54]
 14691                           ;stkvar	_nmode @ sp[(-56)+55]
 14692  010524  0EFE               	movlw	-2
 14693  010526  006F FF8C  F001    	movff	plusw1,btemp
 14694  01052C  0EFF               	movlw	-1
 14695  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 14696                           
 14697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 14698                           ;stkvar	_mode @ sp[(-56)+54]
 14699  010534  0EFE               	movlw	-2
 14700  010536  006F FF8C  F001    	movff	plusw1,btemp
 14701  01053C  0E67               	movlw	103
 14702  01053E  1801               	xorwf	btemp^0,w,c
 14703  010540  A4D8               	btfss	status,2,c
 14704  010542  D025               	goto	l11041
 14705                           
 14706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 14707  010544  5023               	movf	_prec^0,w,c
 14708  010546  1024               	iorwf	(_prec+1)^0,w,c
 14709  010548  A4D8               	btfss	status,2,c
 14710  01054A  D004               	goto	l11035
 14711                           
 14712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 14713  01054C  0E00               	movlw	0
 14714  01054E  6E24               	movwf	(_prec+1)^0,c
 14715  010550  0E01               	movlw	1
 14716  010552  6E23               	movwf	_prec^0,c
 14717  010554                     l11035:
 14718                           
 14719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 14720  010554  BE24               	btfsc	(_prec+1)^0,7,c
 14721  010556  D005               	goto	u10500
 14722  010558  5024               	movf	(_prec+1)^0,w,c
 14723  01055A  E110               	bnz	l11039
 14724  01055C  0423               	decf	_prec^0,w,c
 14725  01055E  B0D8               	btfsc	status,0,c
 14726  010560  D00D               	goto	l11039
 14727  010562                     u10500:
 14728  010562  0E06               	movlw	6
 14729  010564  6E0B               	movwf	(btemp+10)^0,c
 14730  010566  0E00               	movlw	0
 14731  010568  6E0C               	movwf	(btemp+11)^0,c
 14732                           
 14733                           ;stkvar	_p @ sp[(-56)+40]
 14734  01056A  0EF0               	movlw	-16
 14735  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14736  010572  0EF1               	movlw	-15
 14737  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 14738  01057A  D00C               	goto	l11047
 14739  01057C                     l11039:
 14740                           
 14741                           ;stkvar	_p @ sp[(-56)+40]
 14742  01057C  0EF0               	movlw	-16
 14743  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 14744  010584  0EF1               	movlw	-15
 14745  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 14746  01058C  D003               	goto	l11047
 14747  01058E                     l11041:
 14748                           
 14749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 14750  01058E  AE24               	btfss	(_prec+1)^0,7,c
 14751  010590  D7F5               	goto	l11039
 14752  010592  D7E7               	goto	u10500
 14753  010594                     l11047:
 14754                           
 14755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 14756                           ;stkvar	_mode @ sp[(-56)+54]
 14757  010594  0EFE               	movlw	-2
 14758  010596  006F FF8C  F001    	movff	plusw1,btemp
 14759  01059C  0E67               	movlw	103
 14760  01059E  1801               	xorwf	btemp^0,w,c
 14761  0105A0  A4D8               	btfss	status,2,c
 14762  0105A2  D02F               	goto	l11057
 14763                           
 14764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 14765                           ;stkvar	_e @ sp[(-56)+34]
 14766  0105A4  0EEB               	movlw	-21
 14767  0105A6  AEE3               	btfss	plusw1,7,c
 14768  0105A8  D00E               	goto	u10530
 14769  0105AA  0EEA               	movlw	-22
 14770  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 14771  0105B2  0EFC               	movlw	252
 14772  0105B4  5E01               	subwf	btemp^0,f,c
 14773  0105B6  0EEB               	movlw	-21
 14774  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 14775  0105BE  0EFF               	movlw	255
 14776  0105C0  5A01               	subwfb	btemp^0,f,c
 14777  0105C2  A0D8               	btfss	status,0,c
 14778  0105C4  D018               	goto	l11055
 14779  0105C6                     u10530:
 14780                           
 14781                           ;stkvar	_e @ sp[(-56)+34]
 14782                           ;stkvar	_p @ sp[(-56)+40]
 14783  0105C6  0EF0               	movlw	-16
 14784  0105C8  50E3               	movf	plusw1,w,c
 14785  0105CA  0FFF               	addlw	255
 14786  0105CC  6E0B               	movwf	(btemp+10)^0,c
 14787  0105CE  0EF1               	movlw	-15
 14788  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14789  0105D6  0EFF               	movlw	255
 14790  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 14791  0105DA  0EEA               	movlw	-22
 14792  0105DC  50E3               	movf	plusw1,w,c
 14793  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 14794  0105E0  500C               	movf	(btemp+11)^0,w,c
 14795  0105E2  0A80               	xorlw	128
 14796  0105E4  6E01               	movwf	btemp^0,c
 14797  0105E6  0EEB               	movlw	-21
 14798  0105E8  50E3               	movf	plusw1,w,c
 14799  0105EA  0A80               	xorlw	128
 14800  0105EC  5801               	subwfb	btemp^0,w,c
 14801  0105EE  A0D8               	btfss	status,0,c
 14802  0105F0  D002               	goto	l11055
 14803                           
 14804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 14805  0105F2  0E66               	movlw	102
 14806  0105F4  D001               	goto	L14
 14807  0105F6                     l11055:
 14808                           
 14809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 14810  0105F6  0E65               	movlw	101
 14811  0105F8                     L14:
 14812  0105F8  6E0C               	movwf	(btemp+11)^0,c
 14813                           
 14814                           ;stkvar	_nmode @ sp[(-56)+55]
 14815  0105FA  0EFF               	movlw	-1
 14816  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 14817  010602                     l11057:
 14818                           
 14819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 14820                           ;stkvar	_p @ sp[(-56)+40]
 14821                           ;stkvar	_m @ sp[(-56)+48]
 14822  010602  0EF0               	movlw	-16
 14823  010604  006F FF8C  F001    	movff	plusw1,btemp
 14824  01060A  0EF8               	movlw	-8
 14825  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 14826  010612  0EF1               	movlw	-15
 14827  010614  006F FF8C  F001    	movff	plusw1,btemp
 14828  01061A  0EF9               	movlw	-7
 14829  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 14830                           
 14831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 14832                           ;stkvar	_mode @ sp[(-56)+54]
 14833  010622  0EFE               	movlw	-2
 14834  010624  006F FF8C  F001    	movff	plusw1,btemp
 14835  01062A  0E67               	movlw	103
 14836  01062C  1801               	xorwf	btemp^0,w,c
 14837  01062E  A4D8               	btfss	status,2,c
 14838  010630  D00B               	goto	u10570
 14839                           
 14840                           ;stkvar	_nmode @ sp[(-56)+55]
 14841  010632  0EFF               	movlw	-1
 14842  010634  006F FF8C  F001    	movff	plusw1,btemp
 14843  01063A  0E66               	movlw	102
 14844  01063C  1801               	xorwf	btemp^0,w,c
 14845  01063E  A4D8               	btfss	status,2,c
 14846  010640  D014               	goto	l2098
 14847                           
 14848                           ;stkvar	_e @ sp[(-56)+34]
 14849  010642  0EEB               	movlw	-21
 14850  010644  AEE3               	btfss	plusw1,7,c
 14851  010646  D011               	goto	l2098
 14852  010648                     u10570:
 14853                           
 14854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 14855                           ;stkvar	_m @ sp[(-56)+48]
 14856  010648  0EF8               	movlw	-8
 14857  01064A  50E3               	movf	plusw1,w,c
 14858  01064C  0F01               	addlw	1
 14859  01064E  6E01               	movwf	btemp^0,c
 14860  010650  0EF8               	movlw	-8
 14861  010652  0060  F007  FFE3   	movff	btemp,plusw1
 14862  010658  6A01               	clrf	btemp^0,c
 14863  01065A  0EF9               	movlw	-7
 14864  01065C  50E3               	movf	plusw1,w,c
 14865  01065E  2001               	addwfc	btemp^0,w,c
 14866  010660  6E01               	movwf	btemp^0,c
 14867  010662  0EF9               	movlw	-7
 14868  010664  0060  F007  FFE3   	movff	btemp,plusw1
 14869  01066A                     l2098:
 14870                           
 14871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 14872                           ;stkvar	_nmode @ sp[(-56)+55]
 14873  01066A  0EFF               	movlw	-1
 14874  01066C  006F FF8C  F001    	movff	plusw1,btemp
 14875  010672  0E66               	movlw	102
 14876  010674  1801               	xorwf	btemp^0,w,c
 14877  010676  A4D8               	btfss	status,2,c
 14878  010678  D03B               	goto	l11077
 14879                           
 14880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 14881                           ;stkvar	_e @ sp[(-56)+34]
 14882  01067A  0EEB               	movlw	-21
 14883  01067C  AEE3               	btfss	plusw1,7,c
 14884  01067E  D01C               	goto	l11073
 14885                           
 14886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 14887  010680  0E00               	movlw	0
 14888  010682  6E09               	movwf	(btemp+8)^0,c
 14889  010684  0E00               	movlw	0
 14890  010686  6E0A               	movwf	(btemp+9)^0,c
 14891  010688  0E80               	movlw	128
 14892  01068A  6E0B               	movwf	(btemp+10)^0,c
 14893  01068C  0E3F               	movlw	63
 14894  01068E  6E0C               	movwf	(btemp+11)^0,c
 14895                           
 14896                           ;stkvar	_u @ sp[(-56)+12]
 14897  010690  0ED4               	movlw	-44
 14898  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 14899  010698  0ED5               	movlw	-43
 14900  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14901  0106A0  0ED6               	movlw	-42
 14902  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14903  0106A8  0ED7               	movlw	-41
 14904  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14905                           
 14906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 14907                           ;stkvar	_e @ sp[(-56)+34]
 14908  0106B0  0EEA               	movlw	-22
 14909  0106B2  6AE3               	clrf	plusw1,c
 14910  0106B4  0EEB               	movlw	-21
 14911  0106B6  6AE3               	clrf	plusw1,c
 14912  0106B8                     l11073:
 14913                           
 14914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 14915                           ;stkvar	_mode @ sp[(-56)+54]
 14916  0106B8  0EFE               	movlw	-2
 14917  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 14918  0106C0  0E67               	movlw	103
 14919  0106C2  1801               	xorwf	btemp^0,w,c
 14920  0106C4  B4D8               	btfsc	status,2,c
 14921  0106C6  D014               	goto	l11077
 14922                           
 14923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 14924                           ;stkvar	_e @ sp[(-56)+34]
 14925                           ;stkvar	_m @ sp[(-56)+48]
 14926  0106C8  0EF8               	movlw	-8
 14927  0106CA  50E3               	movf	plusw1,w,c
 14928  0106CC  6E01               	movwf	btemp^0,c
 14929  0106CE  0EEA               	movlw	-22
 14930  0106D0  50E3               	movf	plusw1,w,c
 14931  0106D2  2601               	addwf	btemp^0,f,c
 14932  0106D4  0EF8               	movlw	-8
 14933  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 14934  0106DC  0EF9               	movlw	-7
 14935  0106DE  50E3               	movf	plusw1,w,c
 14936  0106E0  6E01               	movwf	btemp^0,c
 14937  0106E2  0EEB               	movlw	-21
 14938  0106E4  50E3               	movf	plusw1,w,c
 14939  0106E6  2201               	addwfc	btemp^0,f,c
 14940  0106E8  0EF9               	movlw	-7
 14941  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 14942  0106F0                     l11077:
 14943                           
 14944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 14945                           ;stkvar	_i @ sp[(-56)+36]
 14946  0106F0  0EEC               	movlw	-20
 14947  0106F2  6AE3               	clrf	plusw1,c
 14948  0106F4  0EED               	movlw	-19
 14949  0106F6  6AE3               	clrf	plusw1,c
 14950                           
 14951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 14952                           ;stkvar	_g @ sp[(-56)+16]
 14953  0106F8  0ED8               	movlw	-40
 14954  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 14955  010700  0ED9               	movlw	-39
 14956  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 14957  010708  0EDA               	movlw	-38
 14958  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14959  010710  0EDB               	movlw	-37
 14960  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 14961                           
 14962                           ;stkvar	_h @ sp[(-56)+24]
 14963  010718  0EE0               	movlw	-32
 14964  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 14965  010720  0EE1               	movlw	-31
 14966  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14967  010728  0EE2               	movlw	-30
 14968  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14969  010730  0EE3               	movlw	-29
 14970  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 14971                           
 14972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 14973                           ;stkvar	_u @ sp[(-56)+12]
 14974  010738  0ED4               	movlw	-44
 14975  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 14976  010740  0ED5               	movlw	-43
 14977  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 14978  010748  0ED6               	movlw	-42
 14979  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14980  010750  0ED7               	movlw	-41
 14981  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 14982                           
 14983                           ;stkvar	_ou @ sp[(-56)+28]
 14984  010758  0EE4               	movlw	-28
 14985  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 14986  010760  0EE5               	movlw	-27
 14987  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14988  010768  0EE6               	movlw	-26
 14989  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14990  010770  0EE7               	movlw	-25
 14991  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 14992                           
 14993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 14994  010778  D0D6               	goto	l11093
 14995  01077A                     l11083:
 14996                           
 14997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 14998                           ;stkvar	_u @ sp[(-56)+12]
 14999  01077A  0ED4               	movlw	-44
 15000  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 15001  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 15002  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 15003  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 15004                           
 15005                           ;stkvar	_h @ sp[(-60)+24]
 15006  010794  0EDC               	movlw	-36
 15007  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 15008  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 15009  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15010  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15011  0107AE  EC05  F0A1         	call	___fldiv	;wreg free
 15012  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 15013  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15014  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15015  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 15016  0107CA  EC35  F0AA         	call	_floorf	;wreg free
 15017                           
 15018                           ;stkvar	_l @ sp[(-56)+20]
 15019  0107CE  0EDC               	movlw	-36
 15020  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 15021  0107D6  0EDD               	movlw	-35
 15022  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15023  0107DE  0EDE               	movlw	-34
 15024  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15025  0107E6  0EDF               	movlw	-33
 15026  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 15027                           
 15028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 15029                           ;stkvar	_l @ sp[(-56)+20]
 15030  0107EE  0EDC               	movlw	-36
 15031  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 15032  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 15033  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 15034  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 15035  010808  ECF3  F0BB         	call	___fltol	;wreg free
 15036  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 15037  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 15038                           
 15039                           ;stkvar	_d @ sp[(-56)+44]
 15040  010818  0EF4               	movlw	-12
 15041  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15042  010820  0EF5               	movlw	-11
 15043  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 15044                           
 15045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 15046                           ;stkvar	_u @ sp[(-56)+12]
 15047  010828  0ED4               	movlw	-44
 15048  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 15049  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 15050  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 15051  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 15052                           
 15053                           ;stkvar	_l @ sp[(-60)+20]
 15054  010842  0ED8               	movlw	-40
 15055  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 15056  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 15057  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 15058  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 15059  01085C  EC53  F095         	call	___flmul	;wreg free
 15060  010860  0060  F007  FFE6   	movff	btemp,postinc1
 15061  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15062  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15063  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 15064                           
 15065                           ;stkvar	_h @ sp[(-60)+24]
 15066  010878  0EDC               	movlw	-36
 15067  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 15068  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 15069  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 15070  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 15071  010892  EC51  F0CE         	call	___flsub	;wreg free
 15072                           
 15073                           ;stkvar	_h @ sp[(-56)+24]
 15074  010896  0EE0               	movlw	-32
 15075  010898  0060  F007  FFE3   	movff	btemp,plusw1
 15076  01089E  0EE1               	movlw	-31
 15077  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15078  0108A6  0EE2               	movlw	-30
 15079  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15080  0108AE  0EE3               	movlw	-29
 15081  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 15082                           
 15083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 15084  0108B6  0E00               	movlw	0
 15085  0108B8  6EE6               	movwf	postinc1,c
 15086  0108BA  0E00               	movlw	0
 15087  0108BC  6EE6               	movwf	postinc1,c
 15088  0108BE  0E20               	movlw	32
 15089  0108C0  6EE6               	movwf	postinc1,c
 15090  0108C2  0E41               	movlw	65
 15091  0108C4  6EE6               	movwf	postinc1,c
 15092                           
 15093                           ;stkvar	_u @ sp[(-60)+12]
 15094  0108C6  0ED0               	movlw	-48
 15095  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15096  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 15097  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15098  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15099  0108E0  EC05  F0A1         	call	___fldiv	;wreg free
 15100                           
 15101                           ;stkvar	_u @ sp[(-56)+12]
 15102  0108E4  0ED4               	movlw	-44
 15103  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 15104  0108EC  0ED5               	movlw	-43
 15105  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15106  0108F4  0ED6               	movlw	-42
 15107  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15108  0108FC  0ED7               	movlw	-41
 15109  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15110                           
 15111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 15112                           ;stkvar	_i @ sp[(-56)+36]
 15113  010904  0EEC               	movlw	-20
 15114  010906  50E3               	movf	plusw1,w,c
 15115  010908  0F01               	addlw	1
 15116  01090A  6E01               	movwf	btemp^0,c
 15117  01090C  0EEC               	movlw	-20
 15118  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 15119  010914  6A01               	clrf	btemp^0,c
 15120  010916  0EED               	movlw	-19
 15121  010918  50E3               	movf	plusw1,w,c
 15122  01091A  2001               	addwfc	btemp^0,w,c
 15123  01091C  6E01               	movwf	btemp^0,c
 15124  01091E  0EED               	movlw	-19
 15125  010920  0060  F007  FFE3   	movff	btemp,plusw1
 15126  010926                     l11093:
 15127                           
 15128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15129                           ;stkvar	_m @ sp[(-56)+48]
 15130                           ;stkvar	_i @ sp[(-56)+36]
 15131  010926  50E1               	movf	fsr1l,w,c
 15132  010928  0FEC               	addlw	-20
 15133  01092A  6ED9               	movwf	fsr2l,c
 15134  01092C  50E2               	movf	fsr1h,w,c
 15135  01092E  6EDA               	movwf	fsr2h,c
 15136  010930  0EFF               	movlw	255
 15137  010932  22DA               	addwfc	fsr2h,f,c
 15138  010934  0EF8               	movlw	-8
 15139  010936  50E3               	movf	plusw1,w,c
 15140  010938  5CDE               	subwf	postinc2,w,c
 15141  01093A  50DE               	movf	postinc2,w,c
 15142  01093C  0A80               	xorlw	128
 15143  01093E  6E01               	movwf	btemp^0,c
 15144  010940  0EF9               	movlw	-7
 15145  010942  50E3               	movf	plusw1,w,c
 15146  010944  0A80               	xorlw	128
 15147  010946  5801               	subwfb	btemp^0,w,c
 15148  010948  A0D8               	btfss	status,0,c
 15149  01094A  D717               	goto	l11083
 15150                           
 15151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 15152  01094C  0E00               	movlw	0
 15153  01094E  6EE6               	movwf	postinc1,c
 15154  010950  0E00               	movlw	0
 15155  010952  6EE6               	movwf	postinc1,c
 15156  010954  0EA0               	movlw	160
 15157  010956  6EE6               	movwf	postinc1,c
 15158  010958  0E40               	movlw	64
 15159  01095A  6EE6               	movwf	postinc1,c
 15160                           
 15161                           ;stkvar	_u @ sp[(-60)+12]
 15162  01095C  0ED0               	movlw	-48
 15163  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 15164  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 15165  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 15166  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 15167  010976  EC53  F095         	call	___flmul	;wreg free
 15168                           
 15169                           ;stkvar	_l @ sp[(-56)+20]
 15170  01097A  0EDC               	movlw	-36
 15171  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 15172  010982  0EDD               	movlw	-35
 15173  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15174  01098A  0EDE               	movlw	-34
 15175  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15176  010992  0EDF               	movlw	-33
 15177  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 15178                           
 15179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 15180                           ;stkvar	_l @ sp[(-56)+20]
 15181  01099A  0EDC               	movlw	-36
 15182  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 15183  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15184  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15185  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15186                           
 15187                           ;stkvar	_h @ sp[(-60)+24]
 15188  0109B4  0EDC               	movlw	-36
 15189  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 15190  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 15191  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 15192  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15193  0109CE  EC64  F0BD         	call	___flge	;wreg free
 15194  0109D2  A001               	btfss	btemp& (0+255),0,c
 15195  0109D4  D021               	goto	u10640
 15196                           
 15197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 15198                           ;stkvar	_l @ sp[(-56)+20]
 15199                           
 15200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 15201                           
 15202                           ;stkvar	_l @ sp[(-56)+20]
 15203                           
 15204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 15205  0109D6  0EDC               	movlw	-36
 15206  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 15207  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 15208  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 15209  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 15210                           
 15211                           ;stkvar	_h @ sp[(-60)+24]
 15212  0109F0  0EDC               	movlw	-36
 15213  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 15214  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 15215  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 15216  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 15217  010A0A  EC42  F0C6         	call	___fleq	;wreg free
 15218  010A0E  A001               	btfss	btemp& (0+255),0,c
 15219  010A10  D01B               	goto	l11107
 15220                           
 15221                           ;stkvar	_d @ sp[(-56)+44]
 15222  010A12  0EF4               	movlw	-12
 15223  010A14  B0E3               	btfsc	plusw1,0,c
 15224  010A16  D018               	goto	l11107
 15225  010A18                     u10640:
 15226                           
 15227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 15228  010A18  0E00               	movlw	0
 15229  010A1A  6E09               	movwf	(btemp+8)^0,c
 15230  010A1C  0E00               	movlw	0
 15231  010A1E  6E0A               	movwf	(btemp+9)^0,c
 15232  010A20  0E00               	movlw	0
 15233  010A22  6E0B               	movwf	(btemp+10)^0,c
 15234  010A24  0E00               	movlw	0
 15235  010A26  6E0C               	movwf	(btemp+11)^0,c
 15236                           
 15237                           ;stkvar	_l @ sp[(-56)+20]
 15238  010A28  0EDC               	movlw	-36
 15239  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15240  010A30  0EDD               	movlw	-35
 15241  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15242  010A38  0EDE               	movlw	-34
 15243  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15244  010A40  0EDF               	movlw	-33
 15245  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 15246  010A48                     l11107:
 15247                           
 15248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 15249                           ;stkvar	_l @ sp[(-56)+20]
 15250  010A48  0EDC               	movlw	-36
 15251  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 15252  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 15253  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 15254  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15255                           
 15256                           ;stkvar	_g @ sp[(-60)+16]
 15257  010A62  0ED4               	movlw	-44
 15258  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 15259  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 15260  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 15261  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 15262  010A7C  EC68  F099         	call	___fladd	;wreg free
 15263                           
 15264                           ;stkvar	_h @ sp[(-56)+24]
 15265  010A80  0EE0               	movlw	-32
 15266  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 15267  010A88  0EE1               	movlw	-31
 15268  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15269  010A90  0EE2               	movlw	-30
 15270  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15271  010A98  0EE3               	movlw	-29
 15272  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 15273                           
 15274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 15275                           ;stkvar	_ou @ sp[(-56)+28]
 15276  010AA0  0EE4               	movlw	-28
 15277  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 15278  010AA8  0EE5               	movlw	-27
 15279  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 15280  010AB0  0EE6               	movlw	-26
 15281  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15282  010AB8  0EE7               	movlw	-25
 15283  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15284                           
 15285                           ;stkvar	_u @ sp[(-56)+12]
 15286  010AC0  0ED4               	movlw	-44
 15287  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 15288  010AC8  0ED5               	movlw	-43
 15289  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15290  010AD0  0ED6               	movlw	-42
 15291  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15292  010AD8  0ED7               	movlw	-41
 15293  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 15294                           
 15295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 15296                           ;stkvar	_nmode @ sp[(-56)+55]
 15297  010AE0  0EFF               	movlw	-1
 15298  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 15299  010AE8  0E65               	movlw	101
 15300  010AEA  1801               	xorwf	btemp^0,w,c
 15301  010AEC  B4D8               	btfsc	status,2,c
 15302  010AEE  D011               	goto	l11115
 15303                           
 15304                           ;stkvar	_e @ sp[(-56)+34]
 15305                           ;stkvar	_ne @ sp[(-56)+46]
 15306  010AF0  0EEA               	movlw	-22
 15307  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 15308  010AF8  0EF6               	movlw	-10
 15309  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 15310  010B00  0EEB               	movlw	-21
 15311  010B02  006F FF8C  F001    	movff	plusw1,btemp
 15312  010B08  0EF7               	movlw	-9
 15313  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 15314  010B10  D004               	goto	l2113
 15315  010B12                     l11115:
 15316                           
 15317                           ;stkvar	_ne @ sp[(-56)+46]
 15318  010B12  0EF6               	movlw	-10
 15319  010B14  6AE3               	clrf	plusw1,c
 15320  010B16  0EF7               	movlw	-9
 15321  010B18  6AE3               	clrf	plusw1,c
 15322  010B1A                     l2113:
 15323                           
 15324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 15325                           ;stkvar	_pp @ sp[(-56)+50]
 15326  010B1A  0EFA               	movlw	-6
 15327  010B1C  6AE3               	clrf	plusw1,c
 15328  010B1E  0EFB               	movlw	-5
 15329  010B20  6AE3               	clrf	plusw1,c
 15330                           
 15331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 15332                           ;stkvar	_t @ sp[(-56)+52]
 15333  010B22  0EFC               	movlw	-4
 15334  010B24  6AE3               	clrf	plusw1,c
 15335  010B26  0EFD               	movlw	-3
 15336  010B28  6AE3               	clrf	plusw1,c
 15337                           
 15338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 15339                           ;stkvar	_i @ sp[(-56)+36]
 15340  010B2A  0EEC               	movlw	-20
 15341  010B2C  6AE3               	clrf	plusw1,c
 15342  010B2E  0EED               	movlw	-19
 15343  010B30  6AE3               	clrf	plusw1,c
 15344                           
 15345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 15346  010B32  D1B7               	goto	l11167
 15347  010B34                     l11117:
 15348                           
 15349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 15350                           ;stkvar	_u @ sp[(-56)+12]
 15351  010B34  0ED4               	movlw	-44
 15352  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 15353  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 15354  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 15355  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 15356                           
 15357                           ;stkvar	_h @ sp[(-60)+24]
 15358  010B4E  0EDC               	movlw	-36
 15359  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 15360  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 15361  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15362  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 15363  010B68  EC05  F0A1         	call	___fldiv	;wreg free
 15364  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 15365  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15366  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15367  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 15368  010B84  EC35  F0AA         	call	_floorf	;wreg free
 15369                           
 15370                           ;stkvar	_l @ sp[(-56)+20]
 15371  010B88  0EDC               	movlw	-36
 15372  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 15373  010B90  0EDD               	movlw	-35
 15374  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15375  010B98  0EDE               	movlw	-34
 15376  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15377  010BA0  0EDF               	movlw	-33
 15378  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 15379                           
 15380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 15381                           ;stkvar	_l @ sp[(-56)+20]
 15382  010BA8  0EDC               	movlw	-36
 15383  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 15384  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 15385  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 15386  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 15387  010BC2  ECF3  F0BB         	call	___fltol	;wreg free
 15388  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 15389  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 15390                           
 15391                           ;stkvar	_d @ sp[(-56)+44]
 15392  010BD2  0EF4               	movlw	-12
 15393  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15394  010BDA  0EF5               	movlw	-11
 15395  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15396                           
 15397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 15398  010BE2  B825               	btfsc	_flags^0,4,c
 15399  010BE4  D026               	goto	l11131
 15400                           
 15401                           ;stkvar	_d @ sp[(-56)+44]
 15402  010BE6  0EF4               	movlw	-12
 15403  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 15404  010BEE  0EF5               	movlw	-11
 15405  010BF0  50E3               	movf	plusw1,w,c
 15406  010BF2  1001               	iorwf	btemp^0,w,c
 15407  010BF4  A4D8               	btfss	status,2,c
 15408  010BF6  D01D               	goto	l11131
 15409                           
 15410                           ;stkvar	_mode @ sp[(-56)+54]
 15411  010BF8  0EFE               	movlw	-2
 15412  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 15413  010C00  0E67               	movlw	103
 15414  010C02  1801               	xorwf	btemp^0,w,c
 15415  010C04  A4D8               	btfss	status,2,c
 15416  010C06  D015               	goto	l11131
 15417                           
 15418                           ;stkvar	_ne @ sp[(-56)+46]
 15419  010C08  0EF7               	movlw	-9
 15420  010C0A  AEE3               	btfss	plusw1,7,c
 15421  010C0C  D012               	goto	l11131
 15422                           
 15423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 15424                           ;stkvar	_t @ sp[(-56)+52]
 15425  010C0E  0EFC               	movlw	-4
 15426  010C10  50E3               	movf	plusw1,w,c
 15427  010C12  0F01               	addlw	1
 15428  010C14  6E01               	movwf	btemp^0,c
 15429  010C16  0EFC               	movlw	-4
 15430  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 15431  010C1E  6A01               	clrf	btemp^0,c
 15432  010C20  0EFD               	movlw	-3
 15433  010C22  50E3               	movf	plusw1,w,c
 15434  010C24  2001               	addwfc	btemp^0,w,c
 15435  010C26  6E01               	movwf	btemp^0,c
 15436  010C28  0EFD               	movlw	-3
 15437  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 15438                           
 15439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 15440  010C30  D0AF               	goto	l11159
 15441  010C32                     l11131:
 15442                           
 15443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 15444                           ;stkvar	_pp @ sp[(-56)+50]
 15445  010C32  0EFA               	movlw	-6
 15446  010C34  006F FF8C  F001    	movff	plusw1,btemp
 15447  010C3A  0EFB               	movlw	-5
 15448  010C3C  50E3               	movf	plusw1,w,c
 15449  010C3E  1001               	iorwf	btemp^0,w,c
 15450  010C40  A4D8               	btfss	status,2,c
 15451  010C42  D070               	goto	l11151
 15452                           
 15453                           ;stkvar	_ne @ sp[(-56)+46]
 15454  010C44  0EF7               	movlw	-9
 15455  010C46  AEE3               	btfss	plusw1,7,c
 15456  010C48  D06D               	goto	l11151
 15457                           
 15458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 15459                           ;stkvar	_n @ sp[(-56)+32]
 15460  010C4A  0EE8               	movlw	-24
 15461  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15462  010C52  0EE9               	movlw	-23
 15463  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 15464  010C5A  0E94               	movlw	low _dbuf
 15465  010C5C  240B               	addwf	(btemp+10)^0,w,c
 15466  010C5E  6ED9               	movwf	fsr2l,c
 15467  010C60  0E03               	movlw	high _dbuf
 15468  010C62  200C               	addwfc	(btemp+11)^0,w,c
 15469  010C64  6EDA               	movwf	fsr2h,c
 15470  010C66  0E2E               	movlw	46
 15471  010C68  6EDF               	movwf	indf2,c
 15472                           
 15473                           ;stkvar	_n @ sp[(-56)+32]
 15474  010C6A  0EE8               	movlw	-24
 15475  010C6C  50E3               	movf	plusw1,w,c
 15476  010C6E  0F01               	addlw	1
 15477  010C70  6E01               	movwf	btemp^0,c
 15478  010C72  0EE8               	movlw	-24
 15479  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 15480  010C7A  6A01               	clrf	btemp^0,c
 15481  010C7C  0EE9               	movlw	-23
 15482  010C7E  50E3               	movf	plusw1,w,c
 15483  010C80  2001               	addwfc	btemp^0,w,c
 15484  010C82  6E01               	movwf	btemp^0,c
 15485  010C84  0EE9               	movlw	-23
 15486  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 15487                           
 15488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 15489                           ;stkvar	_w @ sp[(-56)+38]
 15490  010C8C  50E1               	movf	fsr1l,w,c
 15491  010C8E  0FEE               	addlw	-18
 15492  010C90  6ED9               	movwf	fsr2l,c
 15493  010C92  50E2               	movf	fsr1h,w,c
 15494  010C94  6EDA               	movwf	fsr2h,c
 15495  010C96  0EFF               	movlw	255
 15496  010C98  22DA               	addwfc	fsr2h,f,c
 15497  010C9A  06DE               	decf	postinc2,f,c
 15498  010C9C  0E00               	movlw	0
 15499  010C9E  5ADD               	subwfb	postdec2,f,c
 15500                           
 15501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 15502  010CA0  0E01               	movlw	1
 15503  010CA2  6E0B               	movwf	(btemp+10)^0,c
 15504  010CA4  0E00               	movlw	0
 15505  010CA6  6E0C               	movwf	(btemp+11)^0,c
 15506                           
 15507                           ;stkvar	_pp @ sp[(-56)+50]
 15508  010CA8  0EFA               	movlw	-6
 15509  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15510  010CB0  0EFB               	movlw	-5
 15511  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15512  010CB8  D035               	goto	l11151
 15513  010CBA                     l11143:
 15514                           
 15515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 15516                           ;stkvar	_n @ sp[(-56)+32]
 15517  010CBA  0EE8               	movlw	-24
 15518  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15519  010CC2  0EE9               	movlw	-23
 15520  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15521  010CCA  0E94               	movlw	low _dbuf
 15522  010CCC  240B               	addwf	(btemp+10)^0,w,c
 15523  010CCE  6ED9               	movwf	fsr2l,c
 15524  010CD0  0E03               	movlw	high _dbuf
 15525  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 15526  010CD4  6EDA               	movwf	fsr2h,c
 15527  010CD6  0E30               	movlw	48
 15528  010CD8  6EDF               	movwf	indf2,c
 15529                           
 15530                           ;stkvar	_n @ sp[(-56)+32]
 15531  010CDA  0EE8               	movlw	-24
 15532  010CDC  50E3               	movf	plusw1,w,c
 15533  010CDE  0F01               	addlw	1
 15534  010CE0  6E01               	movwf	btemp^0,c
 15535  010CE2  0EE8               	movlw	-24
 15536  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 15537  010CEA  6A01               	clrf	btemp^0,c
 15538  010CEC  0EE9               	movlw	-23
 15539  010CEE  50E3               	movf	plusw1,w,c
 15540  010CF0  2001               	addwfc	btemp^0,w,c
 15541  010CF2  6E01               	movwf	btemp^0,c
 15542  010CF4  0EE9               	movlw	-23
 15543  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 15544                           
 15545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 15546                           ;stkvar	_w @ sp[(-56)+38]
 15547  010CFC  50E1               	movf	fsr1l,w,c
 15548  010CFE  0FEE               	addlw	-18
 15549  010D00  6ED9               	movwf	fsr2l,c
 15550  010D02  50E2               	movf	fsr1h,w,c
 15551  010D04  6EDA               	movwf	fsr2h,c
 15552  010D06  0EFF               	movlw	255
 15553  010D08  22DA               	addwfc	fsr2h,f,c
 15554  010D0A  06DE               	decf	postinc2,f,c
 15555  010D0C  0E00               	movlw	0
 15556  010D0E  5ADD               	subwfb	postdec2,f,c
 15557                           
 15558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 15559                           ;stkvar	_t @ sp[(-56)+52]
 15560  010D10  50E1               	movf	fsr1l,w,c
 15561  010D12  0FFC               	addlw	-4
 15562  010D14  6ED9               	movwf	fsr2l,c
 15563  010D16  50E2               	movf	fsr1h,w,c
 15564  010D18  6EDA               	movwf	fsr2h,c
 15565  010D1A  0EFF               	movlw	255
 15566  010D1C  22DA               	addwfc	fsr2h,f,c
 15567  010D1E  06DE               	decf	postinc2,f,c
 15568  010D20  0E00               	movlw	0
 15569  010D22  5ADD               	subwfb	postdec2,f,c
 15570  010D24                     l11151:
 15571                           
 15572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 15573                           ;stkvar	_t @ sp[(-56)+52]
 15574  010D24  0EFC               	movlw	-4
 15575  010D26  006F FF8C  F001    	movff	plusw1,btemp
 15576  010D2C  0EFD               	movlw	-3
 15577  010D2E  50E3               	movf	plusw1,w,c
 15578  010D30  1001               	iorwf	btemp^0,w,c
 15579  010D32  A4D8               	btfss	status,2,c
 15580  010D34  D7C2               	goto	l11143
 15581                           
 15582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 15583                           ;stkvar	_n @ sp[(-56)+32]
 15584  010D36  0EE8               	movlw	-24
 15585  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 15586  010D3E  0EE9               	movlw	-23
 15587  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 15588  010D46  0E94               	movlw	low _dbuf
 15589  010D48  240B               	addwf	(btemp+10)^0,w,c
 15590  010D4A  6ED9               	movwf	fsr2l,c
 15591  010D4C  0E03               	movlw	high _dbuf
 15592  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 15593  010D50  6EDA               	movwf	fsr2h,c
 15594                           
 15595                           ;stkvar	_d @ sp[(-56)+44]
 15596  010D52  0EF4               	movlw	-12
 15597  010D54  50E3               	movf	plusw1,w,c
 15598  010D56  0F30               	addlw	48
 15599  010D58  6EDF               	movwf	indf2,c
 15600                           
 15601                           ;stkvar	_n @ sp[(-56)+32]
 15602  010D5A  0EE8               	movlw	-24
 15603  010D5C  50E3               	movf	plusw1,w,c
 15604  010D5E  0F01               	addlw	1
 15605  010D60  6E01               	movwf	btemp^0,c
 15606  010D62  0EE8               	movlw	-24
 15607  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 15608  010D6A  6A01               	clrf	btemp^0,c
 15609  010D6C  0EE9               	movlw	-23
 15610  010D6E  50E3               	movf	plusw1,w,c
 15611  010D70  2001               	addwfc	btemp^0,w,c
 15612  010D72  6E01               	movwf	btemp^0,c
 15613  010D74  0EE9               	movlw	-23
 15614  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 15615                           
 15616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 15617                           ;stkvar	_w @ sp[(-56)+38]
 15618  010D7C  50E1               	movf	fsr1l,w,c
 15619  010D7E  0FEE               	addlw	-18
 15620  010D80  6ED9               	movwf	fsr2l,c
 15621  010D82  50E2               	movf	fsr1h,w,c
 15622  010D84  6EDA               	movwf	fsr2h,c
 15623  010D86  0EFF               	movlw	255
 15624  010D88  22DA               	addwfc	fsr2h,f,c
 15625  010D8A  06DE               	decf	postinc2,f,c
 15626  010D8C  0E00               	movlw	0
 15627  010D8E  5ADD               	subwfb	postdec2,f,c
 15628  010D90                     l11159:
 15629                           
 15630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 15631                           ;stkvar	_u @ sp[(-56)+12]
 15632  010D90  0ED4               	movlw	-44
 15633  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 15634  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 15635  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 15636  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 15637                           
 15638                           ;stkvar	_l @ sp[(-60)+20]
 15639  010DAA  0ED8               	movlw	-40
 15640  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 15641  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 15642  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 15643  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 15644  010DC4  EC53  F095         	call	___flmul	;wreg free
 15645  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 15646  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15647  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15648  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 15649                           
 15650                           ;stkvar	_h @ sp[(-60)+24]
 15651  010DE0  0EDC               	movlw	-36
 15652  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 15653  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 15654  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 15655  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 15656  010DFA  EC51  F0CE         	call	___flsub	;wreg free
 15657                           
 15658                           ;stkvar	_h @ sp[(-56)+24]
 15659  010DFE  0EE0               	movlw	-32
 15660  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 15661  010E06  0EE1               	movlw	-31
 15662  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15663  010E0E  0EE2               	movlw	-30
 15664  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15665  010E16  0EE3               	movlw	-29
 15666  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 15667                           
 15668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 15669  010E1E  0E00               	movlw	0
 15670  010E20  6EE6               	movwf	postinc1,c
 15671  010E22  0E00               	movlw	0
 15672  010E24  6EE6               	movwf	postinc1,c
 15673  010E26  0E20               	movlw	32
 15674  010E28  6EE6               	movwf	postinc1,c
 15675  010E2A  0E41               	movlw	65
 15676  010E2C  6EE6               	movwf	postinc1,c
 15677                           
 15678                           ;stkvar	_u @ sp[(-60)+12]
 15679  010E2E  0ED0               	movlw	-48
 15680  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 15681  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 15682  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 15683  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 15684  010E48  EC05  F0A1         	call	___fldiv	;wreg free
 15685                           
 15686                           ;stkvar	_u @ sp[(-56)+12]
 15687  010E4C  0ED4               	movlw	-44
 15688  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 15689  010E54  0ED5               	movlw	-43
 15690  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15691  010E5C  0ED6               	movlw	-42
 15692  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15693  010E64  0ED7               	movlw	-41
 15694  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 15695                           
 15696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 15697                           ;stkvar	_ne @ sp[(-56)+46]
 15698  010E6C  50E1               	movf	fsr1l,w,c
 15699  010E6E  0FF6               	addlw	-10
 15700  010E70  6ED9               	movwf	fsr2l,c
 15701  010E72  50E2               	movf	fsr1h,w,c
 15702  010E74  6EDA               	movwf	fsr2h,c
 15703  010E76  0EFF               	movlw	255
 15704  010E78  22DA               	addwfc	fsr2h,f,c
 15705  010E7A  06DE               	decf	postinc2,f,c
 15706  010E7C  0E00               	movlw	0
 15707  010E7E  5ADD               	subwfb	postdec2,f,c
 15708                           
 15709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 15710                           ;stkvar	_i @ sp[(-56)+36]
 15711  010E80  0EEC               	movlw	-20
 15712  010E82  50E3               	movf	plusw1,w,c
 15713  010E84  0F01               	addlw	1
 15714  010E86  6E01               	movwf	btemp^0,c
 15715  010E88  0EEC               	movlw	-20
 15716  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 15717  010E90  6A01               	clrf	btemp^0,c
 15718  010E92  0EED               	movlw	-19
 15719  010E94  50E3               	movf	plusw1,w,c
 15720  010E96  2001               	addwfc	btemp^0,w,c
 15721  010E98  6E01               	movwf	btemp^0,c
 15722  010E9A  0EED               	movlw	-19
 15723  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 15724  010EA2                     l11167:
 15725                           
 15726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 15727                           ;stkvar	_m @ sp[(-56)+48]
 15728                           ;stkvar	_i @ sp[(-56)+36]
 15729  010EA2  50E1               	movf	fsr1l,w,c
 15730  010EA4  0FEC               	addlw	-20
 15731  010EA6  6ED9               	movwf	fsr2l,c
 15732  010EA8  50E2               	movf	fsr1h,w,c
 15733  010EAA  6EDA               	movwf	fsr2h,c
 15734  010EAC  0EFF               	movlw	255
 15735  010EAE  22DA               	addwfc	fsr2h,f,c
 15736  010EB0  0EF8               	movlw	-8
 15737  010EB2  50E3               	movf	plusw1,w,c
 15738  010EB4  5CDE               	subwf	postinc2,w,c
 15739  010EB6  50DE               	movf	postinc2,w,c
 15740  010EB8  0A80               	xorlw	128
 15741  010EBA  6E01               	movwf	btemp^0,c
 15742  010EBC  0EF9               	movlw	-7
 15743  010EBE  50E3               	movf	plusw1,w,c
 15744  010EC0  0A80               	xorlw	128
 15745  010EC2  5801               	subwfb	btemp^0,w,c
 15746  010EC4  B0D8               	btfsc	status,0,c
 15747  010EC6  D00E               	goto	u10740
 15748                           
 15749                           ;stkvar	_n @ sp[(-56)+32]
 15750  010EC8  0EE9               	movlw	-23
 15751  010ECA  BEE3               	btfsc	plusw1,7,c
 15752  010ECC  D633               	goto	l11117
 15753  010ECE  0EE9               	movlw	-23
 15754  010ED0  50E3               	movf	plusw1,w,c
 15755  010ED2  E108               	bnz	u10740
 15756  010ED4  0EE8               	movlw	-24
 15757  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 15758  010EDC  0E4B               	movlw	75
 15759  010EDE  5E01               	subwf	btemp^0,f,c
 15760  010EE0  A0D8               	btfss	status,0,c
 15761  010EE2  D628               	goto	l11117
 15762  010EE4                     u10740:
 15763                           
 15764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 15765                           ;stkvar	_pp @ sp[(-56)+50]
 15766  010EE4  0EFA               	movlw	-6
 15767  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 15768  010EEC  0EFB               	movlw	-5
 15769  010EEE  50E3               	movf	plusw1,w,c
 15770  010EF0  1001               	iorwf	btemp^0,w,c
 15771  010EF2  B4D8               	btfsc	status,2,c
 15772  010EF4  A825               	btfss	_flags^0,4,c
 15773  010EF6  D021               	goto	l11179
 15774                           
 15775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 15776                           ;stkvar	_n @ sp[(-56)+32]
 15777  010EF8  0EE8               	movlw	-24
 15778  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 15779  010F00  0EE9               	movlw	-23
 15780  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 15781  010F08  0E94               	movlw	low _dbuf
 15782  010F0A  240B               	addwf	(btemp+10)^0,w,c
 15783  010F0C  6ED9               	movwf	fsr2l,c
 15784  010F0E  0E03               	movlw	high _dbuf
 15785  010F10  200C               	addwfc	(btemp+11)^0,w,c
 15786  010F12  6EDA               	movwf	fsr2h,c
 15787  010F14  0E2E               	movlw	46
 15788  010F16  6EDF               	movwf	indf2,c
 15789                           
 15790                           ;stkvar	_n @ sp[(-56)+32]
 15791  010F18  0EE8               	movlw	-24
 15792  010F1A  50E3               	movf	plusw1,w,c
 15793  010F1C  0F01               	addlw	1
 15794  010F1E  6E01               	movwf	btemp^0,c
 15795  010F20  0EE8               	movlw	-24
 15796  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 15797  010F28  6A01               	clrf	btemp^0,c
 15798  010F2A  0EE9               	movlw	-23
 15799  010F2C  50E3               	movf	plusw1,w,c
 15800  010F2E  2001               	addwfc	btemp^0,w,c
 15801  010F30  6E01               	movwf	btemp^0,c
 15802  010F32  0EE9               	movlw	-23
 15803  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 15804  010F3A                     l11179:
 15805                           
 15806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 15807                           ;stkvar	_n @ sp[(-56)+32]
 15808  010F3A  0EE8               	movlw	-24
 15809  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15810  010F42  0EE9               	movlw	-23
 15811  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 15812  010F4A  0E94               	movlw	low _dbuf
 15813  010F4C  240B               	addwf	(btemp+10)^0,w,c
 15814  010F4E  6ED9               	movwf	fsr2l,c
 15815  010F50  0E03               	movlw	high _dbuf
 15816  010F52  200C               	addwfc	(btemp+11)^0,w,c
 15817  010F54  6EDA               	movwf	fsr2h,c
 15818  010F56  0E00               	movlw	0
 15819  010F58  6EDF               	movwf	indf2,c
 15820                           
 15821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 15822                           ;stkvar	_nmode @ sp[(-56)+55]
 15823  010F5A  0EFF               	movlw	-1
 15824  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 15825  010F62  0E65               	movlw	101
 15826  010F64  1801               	xorwf	btemp^0,w,c
 15827  010F66  A4D8               	btfss	status,2,c
 15828  010F68  EF16  F081         	goto	l10983
 15829                           
 15830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 15831  010F6C  0E4F               	movlw	79
 15832  010F6E  6E0B               	movwf	(btemp+10)^0,c
 15833  010F70  0E00               	movlw	0
 15834  010F72  6E0C               	movwf	(btemp+11)^0,c
 15835                           
 15836                           ;stkvar	_i @ sp[(-56)+36]
 15837  010F74  0EEC               	movlw	-20
 15838  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15839  010F7C  0EED               	movlw	-19
 15840  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15841                           
 15842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 15843                           ;stkvar	_i @ sp[(-56)+36]
 15844  010F84  0EEC               	movlw	-20
 15845  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 15846  010F8C  0EED               	movlw	-19
 15847  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15848  010F94  0E94               	movlw	low _dbuf
 15849  010F96  240B               	addwf	(btemp+10)^0,w,c
 15850  010F98  6ED9               	movwf	fsr2l,c
 15851  010F9A  0E03               	movlw	high _dbuf
 15852  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 15853  010F9E  6EDA               	movwf	fsr2h,c
 15854  010FA0  0E00               	movlw	0
 15855  010FA2  6EDF               	movwf	indf2,c
 15856                           
 15857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 15858                           ;stkvar	_sign @ sp[(-56)+42]
 15859  010FA4  0EF2               	movlw	-14
 15860  010FA6  6AE3               	clrf	plusw1,c
 15861  010FA8  0EF3               	movlw	-13
 15862  010FAA  6AE3               	clrf	plusw1,c
 15863                           
 15864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 15865                           ;stkvar	_e @ sp[(-56)+34]
 15866  010FAC  0EEB               	movlw	-21
 15867  010FAE  AEE3               	btfss	plusw1,7,c
 15868  010FB0  D012               	goto	l11193
 15869                           
 15870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 15871  010FB2  0E01               	movlw	1
 15872  010FB4  6E0B               	movwf	(btemp+10)^0,c
 15873  010FB6  0E00               	movlw	0
 15874  010FB8  6E0C               	movwf	(btemp+11)^0,c
 15875                           
 15876                           ;stkvar	_sign @ sp[(-56)+42]
 15877  010FBA  0EF2               	movlw	-14
 15878  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15879  010FC2  0EF3               	movlw	-13
 15880  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15881                           
 15882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 15883                           ;stkvar	_e @ sp[(-56)+34]
 15884                           ;stkvar	_e @ sp[(-56)+34]
 15885  010FCA  0EEA               	movlw	-22
 15886  010FCC  6CE3               	negf	plusw1,c
 15887  010FCE  0EEB               	movlw	-21
 15888  010FD0  1EE3               	comf	plusw1,f,c
 15889  010FD2  B0D8               	btfsc	status,0,c
 15890  010FD4  2AE3               	incf	plusw1,f,c
 15891  010FD6                     l11193:
 15892                           
 15893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 15894  010FD6  0E02               	movlw	2
 15895  010FD8  6E0B               	movwf	(btemp+10)^0,c
 15896  010FDA  0E00               	movlw	0
 15897  010FDC  6E0C               	movwf	(btemp+11)^0,c
 15898                           
 15899                           ;stkvar	_p @ sp[(-56)+40]
 15900  010FDE  0EF0               	movlw	-16
 15901  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15902  010FE6  0EF1               	movlw	-15
 15903  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 15904                           
 15905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 15906  010FEE  D051               	goto	l11205
 15907  010FF0                     l11195:
 15908                           
 15909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 15910                           ;stkvar	_i @ sp[(-56)+36]
 15911  010FF0  50E1               	movf	fsr1l,w,c
 15912  010FF2  0FEC               	addlw	-20
 15913  010FF4  6ED9               	movwf	fsr2l,c
 15914  010FF6  50E2               	movf	fsr1h,w,c
 15915  010FF8  6EDA               	movwf	fsr2h,c
 15916  010FFA  0EFF               	movlw	255
 15917  010FFC  22DA               	addwfc	fsr2h,f,c
 15918  010FFE  06DE               	decf	postinc2,f,c
 15919  011000  0E00               	movlw	0
 15920  011002  5ADD               	subwfb	postdec2,f,c
 15921                           
 15922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 15923                           ;stkvar	_i @ sp[(-56)+36]
 15924  011004  0EEC               	movlw	-20
 15925  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 15926  01100C  0EED               	movlw	-19
 15927  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15928  011014  0E94               	movlw	low _dbuf
 15929  011016  240B               	addwf	(btemp+10)^0,w,c
 15930  011018  6ED9               	movwf	fsr2l,c
 15931  01101A  0E03               	movlw	high _dbuf
 15932  01101C  200C               	addwfc	(btemp+11)^0,w,c
 15933  01101E  6EDA               	movwf	fsr2h,c
 15934  011020  0E0A               	movlw	10
 15935  011022  6EE6               	movwf	postinc1,c
 15936  011024  0E00               	movlw	0
 15937  011026  6EE6               	movwf	postinc1,c
 15938                           
 15939                           ;stkvar	_e @ sp[(-58)+34]
 15940  011028  0EE8               	movlw	-24
 15941  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 15942  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 15943  011036  ECCB  F0C1         	call	___awmod	;wreg free
 15944  01103A  5001               	movf	btemp^0,w,c
 15945  01103C  0F30               	addlw	48
 15946  01103E  6EDF               	movwf	indf2,c
 15947                           
 15948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 15949  011040  0E0A               	movlw	10
 15950  011042  6EE6               	movwf	postinc1,c
 15951  011044  0E00               	movlw	0
 15952  011046  6EE6               	movwf	postinc1,c
 15953                           
 15954                           ;stkvar	_e @ sp[(-58)+34]
 15955  011048  0EE8               	movlw	-24
 15956  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 15957  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 15958  011056  ECC7  F0BE         	call	___awdiv	;wreg free
 15959                           
 15960                           ;stkvar	_e @ sp[(-56)+34]
 15961  01105A  0EEA               	movlw	-22
 15962  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 15963  011062  0EEB               	movlw	-21
 15964  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15965                           
 15966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 15967                           ;stkvar	_p @ sp[(-56)+40]
 15968  01106A  50E1               	movf	fsr1l,w,c
 15969  01106C  0FF0               	addlw	-16
 15970  01106E  6ED9               	movwf	fsr2l,c
 15971  011070  50E2               	movf	fsr1h,w,c
 15972  011072  6EDA               	movwf	fsr2h,c
 15973  011074  0EFF               	movlw	255
 15974  011076  22DA               	addwfc	fsr2h,f,c
 15975  011078  06DE               	decf	postinc2,f,c
 15976  01107A  0E00               	movlw	0
 15977  01107C  5ADD               	subwfb	postdec2,f,c
 15978                           
 15979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 15980                           ;stkvar	_w @ sp[(-56)+38]
 15981  01107E  50E1               	movf	fsr1l,w,c
 15982  011080  0FEE               	addlw	-18
 15983  011082  6ED9               	movwf	fsr2l,c
 15984  011084  50E2               	movf	fsr1h,w,c
 15985  011086  6EDA               	movwf	fsr2h,c
 15986  011088  0EFF               	movlw	255
 15987  01108A  22DA               	addwfc	fsr2h,f,c
 15988  01108C  06DE               	decf	postinc2,f,c
 15989  01108E  0E00               	movlw	0
 15990  011090  5ADD               	subwfb	postdec2,f,c
 15991  011092                     l11205:
 15992                           
 15993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 15994                           ;stkvar	_e @ sp[(-56)+34]
 15995  011092  0EEA               	movlw	-22
 15996  011094  006F FF8C  F001    	movff	plusw1,btemp
 15997  01109A  0EEB               	movlw	-21
 15998  01109C  50E3               	movf	plusw1,w,c
 15999  01109E  1001               	iorwf	btemp^0,w,c
 16000  0110A0  A4D8               	btfss	status,2,c
 16001  0110A2  D7A6               	goto	l11195
 16002                           
 16003                           ;stkvar	_p @ sp[(-56)+40]
 16004  0110A4  0EF1               	movlw	-15
 16005  0110A6  BEE3               	btfsc	plusw1,7,c
 16006  0110A8  D007               	goto	u10800
 16007  0110AA  0EF1               	movlw	-15
 16008  0110AC  50E3               	movf	plusw1,w,c
 16009  0110AE  E1A0               	bnz	l11195
 16010  0110B0  0EF0               	movlw	-16
 16011  0110B2  04E3               	decf	plusw1,w,c
 16012  0110B4  B0D8               	btfsc	status,0,c
 16013  0110B6  D79C               	goto	l11195
 16014  0110B8                     u10800:
 16015                           
 16016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 16017                           ;stkvar	_i @ sp[(-56)+36]
 16018  0110B8  50E1               	movf	fsr1l,w,c
 16019  0110BA  0FEC               	addlw	-20
 16020  0110BC  6ED9               	movwf	fsr2l,c
 16021  0110BE  50E2               	movf	fsr1h,w,c
 16022  0110C0  6EDA               	movwf	fsr2h,c
 16023  0110C2  0EFF               	movlw	255
 16024  0110C4  22DA               	addwfc	fsr2h,f,c
 16025  0110C6  06DE               	decf	postinc2,f,c
 16026  0110C8  0E00               	movlw	0
 16027  0110CA  5ADD               	subwfb	postdec2,f,c
 16028                           
 16029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 16030                           ;stkvar	_sign @ sp[(-56)+42]
 16031  0110CC  0EF2               	movlw	-14
 16032  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 16033  0110D4  0EF3               	movlw	-13
 16034  0110D6  50E3               	movf	plusw1,w,c
 16035  0110D8  1001               	iorwf	btemp^0,w,c
 16036  0110DA  A4D8               	btfss	status,2,c
 16037  0110DC  D002               	goto	l11215
 16038  0110DE  0E2B               	movlw	43
 16039  0110E0  D001               	goto	L15
 16040  0110E2                     l11215:
 16041  0110E2  0E2D               	movlw	45
 16042  0110E4                     L15:
 16043  0110E4  6E0B               	movwf	(btemp+10)^0,c
 16044  0110E6  0E00               	movlw	0
 16045  0110E8  6E0C               	movwf	(btemp+11)^0,c
 16046                           
 16047                           ;stkvar	_efgtoa$5197 @ sp[(-56)+4]
 16048  0110EA  0ECC               	movlw	-52
 16049  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16050  0110F2  0ECD               	movlw	-51
 16051  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16052                           
 16053                           ;stkvar	_efgtoa$5197 @ sp[(-56)+4]
 16054                           ;stkvar	_i @ sp[(-56)+36]
 16055  0110FA  0EEC               	movlw	-20
 16056  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16057  011102  0EED               	movlw	-19
 16058  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 16059  01110A  0E94               	movlw	low _dbuf
 16060  01110C  240B               	addwf	(btemp+10)^0,w,c
 16061  01110E  6ED9               	movwf	fsr2l,c
 16062  011110  0E03               	movlw	high _dbuf
 16063  011112  200C               	addwfc	(btemp+11)^0,w,c
 16064  011114  6EDA               	movwf	fsr2h,c
 16065  011116  0ECC               	movlw	-52
 16066  011118  006F FF8F FFDF     	movff	plusw1,indf2
 16067                           
 16068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 16069                           ;stkvar	_w @ sp[(-56)+38]
 16070  01111E  50E1               	movf	fsr1l,w,c
 16071  011120  0FEE               	addlw	-18
 16072  011122  6ED9               	movwf	fsr2l,c
 16073  011124  50E2               	movf	fsr1h,w,c
 16074  011126  6EDA               	movwf	fsr2h,c
 16075  011128  0EFF               	movlw	255
 16076  01112A  22DA               	addwfc	fsr2h,f,c
 16077  01112C  06DE               	decf	postinc2,f,c
 16078  01112E  0E00               	movlw	0
 16079  011130  5ADD               	subwfb	postdec2,f,c
 16080                           
 16081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 16082                           ;stkvar	_i @ sp[(-56)+36]
 16083  011132  50E1               	movf	fsr1l,w,c
 16084  011134  0FEC               	addlw	-20
 16085  011136  6ED9               	movwf	fsr2l,c
 16086  011138  50E2               	movf	fsr1h,w,c
 16087  01113A  6EDA               	movwf	fsr2h,c
 16088  01113C  0EFF               	movlw	255
 16089  01113E  22DA               	addwfc	fsr2h,f,c
 16090  011140  06DE               	decf	postinc2,f,c
 16091  011142  0E00               	movlw	0
 16092  011144  5ADD               	subwfb	postdec2,f,c
 16093  011146  0EBF               	movlw	191
 16094  011148  6E0B               	movwf	(btemp+10)^0,c
 16095  01114A  0EFF               	movlw	255
 16096  01114C  6E0C               	movwf	(btemp+11)^0,c
 16097                           
 16098                           ;stkvar	_c @ sp[(-56)+-7]
 16099  01114E  0EC1               	movlw	-63
 16100  011150  50E3               	movf	plusw1,w,c
 16101  011152  6E09               	movwf	(btemp+8)^0,c
 16102  011154  6A0A               	clrf	(btemp+9)^0,c
 16103  011156  500B               	movf	(btemp+10)^0,w,c
 16104  011158  2609               	addwf	(btemp+8)^0,f,c
 16105  01115A  500C               	movf	(btemp+11)^0,w,c
 16106  01115C  220A               	addwfc	(btemp+9)^0,f,c
 16107  01115E  500A               	movf	(btemp+9)^0,w,c
 16108  011160  E106               	bnz	u10820
 16109  011162  0E1A               	movlw	26
 16110  011164  5C09               	subwf	(btemp+8)^0,w,c
 16111  011166  B0D8               	btfsc	status,0,c
 16112  011168  D002               	goto	u10820
 16113  01116A  0E01               	movlw	1
 16114  01116C  D001               	goto	u10830
 16115  01116E                     u10820:
 16116  01116E  0E00               	movlw	0
 16117  011170                     u10830:
 16118  011170  6E0B               	movwf	(btemp+10)^0,c
 16119  011172  6A0C               	clrf	(btemp+11)^0,c
 16120                           
 16121                           ;stkvar	_efgtoa$5199 @ sp[(-56)+0]
 16122  011174  0EC8               	movlw	-56
 16123  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16124  01117C  0EC9               	movlw	-55
 16125  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16126                           
 16127                           ;stkvar	_efgtoa$5199 @ sp[(-56)+0]
 16128  011184  0EC8               	movlw	-56
 16129  011186  006F FF8C  F001    	movff	plusw1,btemp
 16130  01118C  0EC9               	movlw	-55
 16131  01118E  50E3               	movf	plusw1,w,c
 16132  011190  1001               	iorwf	btemp^0,w,c
 16133  011192  A4D8               	btfss	status,2,c
 16134  011194  D002               	goto	l11231
 16135  011196  0E65               	movlw	101
 16136  011198  D001               	goto	L16
 16137  01119A                     l11231:
 16138  01119A  0E45               	movlw	69
 16139  01119C                     L16:
 16140  01119C  6E0B               	movwf	(btemp+10)^0,c
 16141  01119E  0E00               	movlw	0
 16142  0111A0  6E0C               	movwf	(btemp+11)^0,c
 16143                           
 16144                           ;stkvar	_efgtoa$5198 @ sp[(-56)+2]
 16145  0111A2  0ECA               	movlw	-54
 16146  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16147  0111AA  0ECB               	movlw	-53
 16148  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16149                           
 16150                           ;stkvar	_efgtoa$5198 @ sp[(-56)+2]
 16151                           ;stkvar	_i @ sp[(-56)+36]
 16152  0111B2  0EEC               	movlw	-20
 16153  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 16154  0111BA  0EED               	movlw	-19
 16155  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 16156  0111C2  0E94               	movlw	low _dbuf
 16157  0111C4  240B               	addwf	(btemp+10)^0,w,c
 16158  0111C6  6ED9               	movwf	fsr2l,c
 16159  0111C8  0E03               	movlw	high _dbuf
 16160  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 16161  0111CC  6EDA               	movwf	fsr2h,c
 16162  0111CE  0ECA               	movlw	-54
 16163  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 16164                           
 16165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 16166                           ;stkvar	_w @ sp[(-56)+38]
 16167  0111D6  50E1               	movf	fsr1l,w,c
 16168  0111D8  0FEE               	addlw	-18
 16169  0111DA  6ED9               	movwf	fsr2l,c
 16170  0111DC  50E2               	movf	fsr1h,w,c
 16171  0111DE  6EDA               	movwf	fsr2h,c
 16172  0111E0  0EFF               	movlw	255
 16173  0111E2  22DA               	addwfc	fsr2h,f,c
 16174  0111E4  06DE               	decf	postinc2,f,c
 16175  0111E6  0E00               	movlw	0
 16176  0111E8  5ADD               	subwfb	postdec2,f,c
 16177                           
 16178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 16179                           ;stkvar	_i @ sp[(-56)+36]
 16180  0111EA  0EEC               	movlw	-20
 16181  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16182  0111F2  0EED               	movlw	-19
 16183  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16184  0111FA  0E94               	movlw	low _dbuf
 16185  0111FC  240B               	addwf	(btemp+10)^0,w,c
 16186  0111FE  6E09               	movwf	(btemp+8)^0,c
 16187  011200  0E03               	movlw	high _dbuf
 16188  011202  200C               	addwfc	(btemp+11)^0,w,c
 16189  011204  6E0A               	movwf	(btemp+9)^0,c
 16190  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 16191  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 16192                           
 16193                           ;stkvar	_n @ sp[(-58)+32]
 16194  011212  0E94               	movlw	low _dbuf
 16195  011214  6E0B               	movwf	(btemp+10)^0,c
 16196  011216  0E03               	movlw	high _dbuf
 16197  011218  6E0C               	movwf	(btemp+11)^0,c
 16198  01121A  0EE6               	movlw	-26
 16199  01121C  50E3               	movf	plusw1,w,c
 16200  01121E  260B               	addwf	(btemp+10)^0,f,c
 16201  011220  0EE7               	movlw	-25
 16202  011222  50E3               	movf	plusw1,w,c
 16203  011224  220C               	addwfc	(btemp+11)^0,f,c
 16204  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16205  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16206  011232  ECD8  F0C5         	call	_strcpy	;wreg free
 16207  011236  EF16  F081         	goto	l10983
 16208  01123A                     l2069:
 16209                           
 16210                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 16211  01123A  0EC1               	movlw	193
 16212  01123C  26E1               	addwf	fsr1l,f,c
 16213  01123E  0EFF               	movlw	255
 16214  011240  22E2               	addwfc	fsr1h,f,c
 16215  011242  0012               	return		;funcret
 16216  011244                     __end_of_efgtoa:
 16217                           	opt callstack 0
 16218                           
 16219 ;; *************** function _tolower *****************
 16220 ;; Defined at:
 16221 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 16222 ;; Parameters:    Size  Location     Type
 16223 ;;  c               2  [STACK] int 
 16224 ;; Auto vars:     Size  Location     Type
 16225 ;;		None
 16226 ;; Return value:  Size  Location     Type
 16227 ;;                  2  [STACK] int 
 16228 ;; Registers used:
 16229 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 16230 ;; Tracked objects:
 16231 ;;		On entry : 0/0
 16232 ;;		On exit  : 0/0
 16233 ;;		Unchanged: 0/0
 16234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16239 ;;Total ram usage:        0 bytes
 16240 ;; Hardware stack levels used:    1
 16241 ;; Hardware stack levels required when called:   16
 16242 ;; This function calls:
 16243 ;;		_isupper
 16244 ;; This function is called by:
 16245 ;;		_efgtoa
 16246 ;;		_vfpfcnvrt
 16247 ;; This function uses a reentrant model
 16248 ;;
 16249                           
 16250                           	psect	text54
 16251  019548                     __ptext54:
 16252                           	opt callstack 0
 16253  019548                     _tolower:
 16254                           	opt callstack 0
 16255                           
 16256                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16257  019548  52E6               	movf	postinc1,f,c
 16258  01954A  52E6               	movf	postinc1,f,c
 16259                           
 16260                           ;stkvar	_c @ sp[(-2)+-2]
 16261                           
 16262                           ;incstack = 0
 16263 ;; hardware stack exceeded
 16264  01954C  0EFC               	movlw	-4
 16265  01954E  50E3               	movf	plusw1,w,c
 16266  019550  0FBF               	addlw	191
 16267  019552  6E0B               	movwf	(btemp+10)^0,c
 16268  019554  0EFD               	movlw	-3
 16269  019556  006F FF8C  F00C    	movff	plusw1,btemp+11
 16270  01955C  0EFF               	movlw	255
 16271  01955E  220C               	addwfc	(btemp+11)^0,f,c
 16272  019560  500C               	movf	(btemp+11)^0,w,c
 16273  019562  E106               	bnz	u5670
 16274  019564  0E1A               	movlw	26
 16275  019566  5C0B               	subwf	(btemp+10)^0,w,c
 16276  019568  B0D8               	btfsc	status,0,c
 16277  01956A  D002               	goto	u5670
 16278  01956C  0E01               	movlw	1
 16279  01956E  D001               	goto	u5680
 16280  019570                     u5670:
 16281  019570  0E00               	movlw	0
 16282  019572                     u5680:
 16283  019572  6E0B               	movwf	(btemp+10)^0,c
 16284  019574  6A0C               	clrf	(btemp+11)^0,c
 16285                           
 16286                           ;stkvar	_tolower$6011 @ sp[(-2)+0]
 16287  019576  0EFE               	movlw	-2
 16288  019578  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16289  01957E  0EFF               	movlw	-1
 16290  019580  0060  F033  FFE3   	movff	btemp+11,plusw1
 16291                           
 16292                           ;stkvar	_tolower$6011 @ sp[(-2)+0]
 16293  019586  0EFE               	movlw	-2
 16294  019588  006F FF8C  F001    	movff	plusw1,btemp
 16295  01958E  0EFF               	movlw	-1
 16296  019590  50E3               	movf	plusw1,w,c
 16297  019592  1001               	iorwf	btemp^0,w,c
 16298  019594  B4D8               	btfsc	status,2,c
 16299  019596  D00D               	goto	l7403
 16300                           
 16301                           ;stkvar	_c @ sp[(-2)+-2]
 16302  019598  0EFC               	movlw	-4
 16303  01959A  006F FF8C  F001    	movff	plusw1,btemp
 16304  0195A0  0EFD               	movlw	-3
 16305  0195A2  006F FF8C  F002    	movff	plusw1,btemp+1
 16306  0195A8  0E20               	movlw	32
 16307  0195AA  1201               	iorwf	btemp^0,f,c
 16308  0195AC  0E00               	movlw	0
 16309  0195AE  1202               	iorwf	(btemp+1)^0,f,c
 16310  0195B0  D008               	goto	l3336
 16311  0195B2                     l7403:
 16312                           
 16313                           ;stkvar	_c @ sp[(-2)+-2]
 16314  0195B2  0EFC               	movlw	-4
 16315  0195B4  006F FF8C  F001    	movff	plusw1,btemp
 16316  0195BA  0EFD               	movlw	-3
 16317  0195BC  006F FF8C  F002    	movff	plusw1,btemp+1
 16318  0195C2                     l3336:
 16319                           
 16320                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16321  0195C2  52E5               	movf	postdec1,f,c
 16322  0195C4  52E5               	movf	postdec1,f,c
 16323  0195C6  52E5               	movf	postdec1,f,c
 16324  0195C8  52E5               	movf	postdec1,f,c
 16325  0195CA  0012               	return		;funcret
 16326  0195CC                     __end_of_tolower:
 16327                           	opt callstack 0
 16328                           
 16329 ;; *************** function _isupper *****************
 16330 ;; Defined at:
 16331 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 16332 ;; Parameters:    Size  Location     Type
 16333 ;;  c               2  [STACK] int 
 16334 ;; Auto vars:     Size  Location     Type
 16335 ;;		None
 16336 ;; Return value:  Size  Location     Type
 16337 ;;                  2  [STACK] int 
 16338 ;; Registers used:
 16339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 16340 ;; Tracked objects:
 16341 ;;		On entry : 0/0
 16342 ;;		On exit  : 0/0
 16343 ;;		Unchanged: 0/0
 16344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16349 ;;Total ram usage:        0 bytes
 16350 ;; Hardware stack levels used:    1
 16351 ;; Hardware stack levels required when called:   15
 16352 ;; This function calls:
 16353 ;;		Nothing
 16354 ;; This function is called by:
 16355 ;;		_efgtoa
 16356 ;;		_xtoa
 16357 ;;		_vfpfcnvrt
 16358 ;;		_tolower
 16359 ;; This function uses a reentrant model
 16360 ;;
 16361                           
 16362                           	psect	text55
 16363  01A11E                     __ptext55:
 16364                           	opt callstack 0
 16365  01A11E                     _isupper:
 16366                           	opt callstack 0
 16367                           
 16368                           ;stkvar	_c @ sp[(0)+-2]
 16369                           
 16370                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16371                           ;incstack = 0
 16372 ;; hardware stack exceeded
 16373  01A11E  0EFE               	movlw	-2
 16374  01A120  50E3               	movf	plusw1,w,c
 16375  01A122  0FBF               	addlw	191
 16376  01A124  6E0B               	movwf	(btemp+10)^0,c
 16377  01A126  0EFF               	movlw	-1
 16378  01A128  006F FF8C  F00C    	movff	plusw1,btemp+11
 16379  01A12E  0EFF               	movlw	255
 16380  01A130  220C               	addwfc	(btemp+11)^0,f,c
 16381  01A132  500C               	movf	(btemp+11)^0,w,c
 16382  01A134  E106               	bnz	u5070
 16383  01A136  0E1A               	movlw	26
 16384  01A138  5C0B               	subwf	(btemp+10)^0,w,c
 16385  01A13A  B0D8               	btfsc	status,0,c
 16386  01A13C  D002               	goto	u5070
 16387  01A13E  0E01               	movlw	1
 16388  01A140  D001               	goto	u5080
 16389  01A142                     u5070:
 16390  01A142  0E00               	movlw	0
 16391  01A144                     u5080:
 16392  01A144  6E01               	movwf	btemp^0,c
 16393  01A146  6A02               	clrf	(btemp+1)^0,c
 16394                           
 16395                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16396  01A148  52E5               	movf	postdec1,f,c
 16397  01A14A  52E5               	movf	postdec1,f,c
 16398  01A14C  0012               	return		;funcret
 16399  01A14E                     __end_of_isupper:
 16400                           	opt callstack 0
 16401                           
 16402 ;; *************** function _strcpy *****************
 16403 ;; Defined at:
 16404 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 16405 ;; Parameters:    Size  Location     Type
 16406 ;;  dest            2  [STACK] PTR unsigned char 
 16407 ;;		 -> dbuf(80), 
 16408 ;;  src             2  [STACK] PTR const unsigned char 
 16409 ;;		 -> STR_52(4), STR_51(4), STR_48(4), STR_47(4), 
 16410 ;;		 -> dbuf(80), 
 16411 ;; Auto vars:     Size  Location     Type
 16412 ;;  d               2  [STACK] PTR unsigned char 
 16413 ;;		 -> dbuf(80), 
 16414 ;;  s               2  [STACK] PTR const unsigned char 
 16415 ;;		 -> STR_52(4), STR_51(4), STR_48(4), STR_47(4), 
 16416 ;;		 -> dbuf(80), 
 16417 ;; Return value:  Size  Location     Type
 16418 ;;                  2  [STACK] PTR unsigned char 
 16419 ;; Registers used:
 16420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 16421 ;; Tracked objects:
 16422 ;;		On entry : 0/0
 16423 ;;		On exit  : 0/0
 16424 ;;		Unchanged: 0/0
 16425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16430 ;;Total ram usage:        0 bytes
 16431 ;; Hardware stack levels used:    1
 16432 ;; Hardware stack levels required when called:   15
 16433 ;; This function calls:
 16434 ;;		Nothing
 16435 ;; This function is called by:
 16436 ;;		_efgtoa
 16437 ;; This function uses a reentrant model
 16438 ;;
 16439                           
 16440                           	psect	text56
 16441  018BB0                     __ptext56:
 16442                           	opt callstack 0
 16443  018BB0                     _strcpy:
 16444                           	opt callstack 0
 16445                           
 16446                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16447  018BB0  52E6               	movf	postinc1,f,c
 16448  018BB2  52E6               	movf	postinc1,f,c
 16449  018BB4  52E6               	movf	postinc1,f,c
 16450  018BB6  52E6               	movf	postinc1,f,c
 16451                           
 16452                           ;stkvar	_src @ sp[(-4)+-4]
 16453                           
 16454                           ;incstack = 0
 16455 ;; hardware stack exceeded
 16456  018BB8  0EF8               	movlw	-8
 16457  018BBA  006F FF8C  F00B    	movff	plusw1,btemp+10
 16458  018BC0  0EF9               	movlw	-7
 16459  018BC2  006F FF8C  F00C    	movff	plusw1,btemp+11
 16460                           
 16461                           ;stkvar	_s @ sp[(-4)+2]
 16462  018BC8  0EFF               	movlw	-1
 16463  018BCA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16464  018BD0  0EFE               	movlw	-2
 16465  018BD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16466                           
 16467                           ;stkvar	_dest @ sp[(-4)+-2]
 16468  018BD8  0EFA               	movlw	-6
 16469  018BDA  006F FF8C  F00B    	movff	plusw1,btemp+10
 16470  018BE0  0EFB               	movlw	-5
 16471  018BE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 16472                           
 16473                           ;stkvar	_d @ sp[(-4)+0]
 16474  018BE8  0EFD               	movlw	-3
 16475  018BEA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16476  018BF0  0EFC               	movlw	-4
 16477  018BF2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16478  018BF8                     l10805:
 16479                           
 16480                           ;stkvar	_s @ sp[(-4)+2]
 16481  018BF8  50E1               	movf	fsr1l,w,c
 16482  018BFA  0FFE               	addlw	-2
 16483  018BFC  6ED9               	movwf	fsr2l,c
 16484  018BFE  50E2               	movf	fsr1h,w,c
 16485  018C00  6EDA               	movwf	fsr2h,c
 16486  018C02  0EFF               	movlw	255
 16487  018C04  22DA               	addwfc	fsr2h,f,c
 16488  018C06  006F FF7C  F00B    	movff	indf2,btemp+10
 16489  018C0C  0E01               	movlw	1
 16490  018C0E  26DE               	addwf	postinc2,f,c
 16491  018C10  006F FF7C  F00C    	movff	indf2,btemp+11
 16492  018C16  0E00               	movlw	0
 16493  018C18  22DD               	addwfc	postdec2,f,c
 16494  018C1A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16495  018C20  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16496  018C26  0E00               	movlw	low (__mediumconst shr (0+16))
 16497  018C28  6EF8               	movwf	tblptru,c
 16498                           
 16499                           ;stkvar	_d @ sp[(-4)+0]
 16500  018C2A  50E1               	movf	fsr1l,w,c
 16501  018C2C  0FFC               	addlw	-4
 16502  018C2E  6ED9               	movwf	fsr2l,c
 16503  018C30  50E2               	movf	fsr1h,w,c
 16504  018C32  6EDA               	movwf	fsr2h,c
 16505  018C34  0EFF               	movlw	255
 16506  018C36  22DA               	addwfc	fsr2h,f,c
 16507  018C38  006F FF7C  F00B    	movff	indf2,btemp+10
 16508  018C3E  0E01               	movlw	1
 16509  018C40  26DE               	addwf	postinc2,f,c
 16510  018C42  006F FF7C  F00C    	movff	indf2,btemp+11
 16511  018C48  0E00               	movlw	0
 16512  018C4A  22DD               	addwfc	postdec2,f,c
 16513  018C4C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16514  018C52  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16515  018C58  0E1F               	movlw	(high __ramtop+-1)
 16516  018C5A  64F7               	cpfsgt	tblptrh,c
 16517  018C5C  D003               	bra	u10077
 16518  018C5E  0008               	tblrd		*
 16519  018C60  50F5               	movf	tablat,w,c
 16520  018C62  D007               	bra	u10070
 16521  018C64                     u10077:
 16522  018C64  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16523  018C6A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16524  018C70  50EF               	movf	indf0,w,c
 16525  018C72                     u10070:
 16526  018C72  6EDF               	movwf	indf2,c
 16527  018C74  50DF               	movf	indf2,w,c
 16528  018C76  A4D8               	btfss	status,2,c
 16529  018C78  D7BF               	goto	l10805
 16530                           
 16531                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 16532  018C7A  0EF8               	movlw	248
 16533  018C7C  26E1               	addwf	fsr1l,f,c
 16534  018C7E  0EFF               	movlw	255
 16535  018C80  22E2               	addwfc	fsr1h,f,c
 16536  018C82  0012               	return		;funcret
 16537  018C84                     __end_of_strcpy:
 16538                           	opt callstack 0
 16539                           
 16540 ;; *************** function _floorf *****************
 16541 ;; Defined at:
 16542 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 16543 ;; Parameters:    Size  Location     Type
 16544 ;;  x               4  [STACK] float 
 16545 ;; Auto vars:     Size  Location     Type
 16546 ;;  u               4  [STACK] struct .
 16547 ;;  m               4  [STACK] unsigned long 
 16548 ;;  e               2  [STACK] int 
 16549 ;; Return value:  Size  Location     Type
 16550 ;;                  4  [STACK] float 
 16551 ;; Registers used:
 16552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 16553 ;; Tracked objects:
 16554 ;;		On entry : 0/0
 16555 ;;		On exit  : 0/0
 16556 ;;		Unchanged: 0/0
 16557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16562 ;;Total ram usage:        0 bytes
 16563 ;; Hardware stack levels used:    1
 16564 ;; Hardware stack levels required when called:   15
 16565 ;; This function calls:
 16566 ;;		Nothing
 16567 ;; This function is called by:
 16568 ;;		_efgtoa
 16569 ;; This function uses a reentrant model
 16570 ;;
 16571                           
 16572                           	psect	text57
 16573  01546A                     __ptext57:
 16574                           	opt callstack 0
 16575  01546A                     _floorf:
 16576                           	opt callstack 0
 16577                           
 16578                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16579  01546A  0E0A               	movlw	10
 16580  01546C  26E1               	addwf	fsr1l,f,c
 16581  01546E  0E00               	movlw	0
 16582  015470  22E2               	addwfc	fsr1h,f,c
 16583                           
 16584                           ;incstack = 0
 16585 ;; hardware stack exceeded
 16586  015472  0060  F254  F009   	movff	floorf@F524,btemp+8
 16587  015478  0060  F258  F00A   	movff	floorf@F524+1,btemp+9
 16588  01547E  0060  F25C  F00B   	movff	floorf@F524+2,btemp+10
 16589  015484  0060  F260  F00C   	movff	floorf@F524+3,btemp+11
 16590                           
 16591                           ;stkvar	_u @ sp[(-10)+0]
 16592  01548A  0EF6               	movlw	-10
 16593  01548C  0060  F027  FFE3   	movff	btemp+8,plusw1
 16594  015492  0EF7               	movlw	-9
 16595  015494  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16596  01549A  0EF8               	movlw	-8
 16597  01549C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16598  0154A2  0EF9               	movlw	-7
 16599  0154A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16600                           
 16601                           ;stkvar	_x @ sp[(-10)+-4]
 16602  0154AA  0EF2               	movlw	-14
 16603  0154AC  006F FF8C  F009    	movff	plusw1,btemp+8
 16604  0154B2  0EF3               	movlw	-13
 16605  0154B4  006F FF8C  F00A    	movff	plusw1,btemp+9
 16606  0154BA  0EF4               	movlw	-12
 16607  0154BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16608  0154C2  0EF5               	movlw	-11
 16609  0154C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16610                           
 16611                           ;stkvar	_u @ sp[(-10)+0]
 16612  0154CA  0EF6               	movlw	-10
 16613  0154CC  0060  F027  FFE3   	movff	btemp+8,plusw1
 16614  0154D2  0EF7               	movlw	-9
 16615  0154D4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16616  0154DA  0EF8               	movlw	-8
 16617  0154DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16618  0154E2  0EF9               	movlw	-7
 16619  0154E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16620  0154EA  0E81               	movlw	129
 16621  0154EC  6E0B               	movwf	(btemp+10)^0,c
 16622  0154EE  0EFF               	movlw	255
 16623  0154F0  6E0C               	movwf	(btemp+11)^0,c
 16624                           
 16625                           ;stkvar	_u @ sp[(-10)+0]
 16626  0154F2  0EF6               	movlw	-10
 16627  0154F4  006F FF8C  F005    	movff	plusw1,btemp+4
 16628  0154FA  0EF7               	movlw	-9
 16629  0154FC  006F FF8C  F006    	movff	plusw1,btemp+5
 16630  015502  0EF8               	movlw	-8
 16631  015504  006F FF8C  F007    	movff	plusw1,btemp+6
 16632  01550A  0EF9               	movlw	-7
 16633  01550C  006F FF8C  F008    	movff	plusw1,btemp+7
 16634  015512  0E18               	movlw	24
 16635  015514  D005               	goto	u5700
 16636  015516                     u5705:
 16637  015516  90D8               	bcf	status,0,c
 16638  015518  3208               	rrcf	(btemp+7)^0,f,c
 16639  01551A  3207               	rrcf	(btemp+6)^0,f,c
 16640  01551C  3206               	rrcf	(btemp+5)^0,f,c
 16641  01551E  3205               	rrcf	(btemp+4)^0,f,c
 16642  015520                     u5700:
 16643  015520  2EE8               	decfsz	wreg,f,c
 16644  015522  D7F9               	goto	u5705
 16645  015524  0060  F014  F009   	movff	btemp+4,btemp+8
 16646  01552A  0060  F018  F00A   	movff	btemp+5,btemp+9
 16647  015530  0EFF               	movlw	255
 16648  015532  1609               	andwf	(btemp+8)^0,f,c
 16649  015534  0E00               	movlw	0
 16650  015536  160A               	andwf	(btemp+9)^0,f,c
 16651  015538  500B               	movf	(btemp+10)^0,w,c
 16652  01553A  2609               	addwf	(btemp+8)^0,f,c
 16653  01553C  500C               	movf	(btemp+11)^0,w,c
 16654  01553E  220A               	addwfc	(btemp+9)^0,f,c
 16655                           
 16656                           ;stkvar	_e @ sp[(-10)+8]
 16657  015540  0EFE               	movlw	-2
 16658  015542  0060  F027  FFE3   	movff	btemp+8,plusw1
 16659  015548  0EFF               	movlw	-1
 16660  01554A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16661                           
 16662                           ;stkvar	_e @ sp[(-10)+8]
 16663  015550  0EFF               	movlw	-1
 16664  015552  BEE3               	btfsc	plusw1,7,c
 16665  015554  D019               	goto	l7417
 16666  015556  0EFF               	movlw	-1
 16667  015558  50E3               	movf	plusw1,w,c
 16668  01555A  E108               	bnz	u5710
 16669  01555C  0EFE               	movlw	-2
 16670  01555E  006F FF8C  F001    	movff	plusw1,btemp
 16671  015564  0E17               	movlw	23
 16672  015566  5E01               	subwf	btemp^0,f,c
 16673  015568  A0D8               	btfss	status,0,c
 16674  01556A  D00E               	goto	l7417
 16675  01556C                     u5710:
 16676                           
 16677                           ;stkvar	_x @ sp[(-10)+-4]
 16678  01556C  0EF2               	movlw	-14
 16679  01556E  006F FF8C  F001    	movff	plusw1,btemp
 16680  015574  0EF3               	movlw	-13
 16681  015576  006F FF8C  F002    	movff	plusw1,btemp+1
 16682  01557C  0EF4               	movlw	-12
 16683  01557E  006F FF8C  F003    	movff	plusw1,btemp+2
 16684  015584  0EF5               	movlw	-11
 16685  015586  D11F               	goto	L17
 16686  015588                     l7417:
 16687                           
 16688                           ;stkvar	_e @ sp[(-10)+8]
 16689  015588  0EFF               	movlw	-1
 16690  01558A  BEE3               	btfsc	plusw1,7,c
 16691  01558C  D0B4               	goto	l7433
 16692                           
 16693                           ;stkvar	_e @ sp[(-10)+8]
 16694  01558E  0EFE               	movlw	-2
 16695  015590  006F FF8C  F00C    	movff	plusw1,btemp+11
 16696  015596  0EFF               	movlw	255
 16697  015598  6E05               	movwf	(btemp+4)^0,c
 16698  01559A  0EFF               	movlw	255
 16699  01559C  6E06               	movwf	(btemp+5)^0,c
 16700  01559E  0E7F               	movlw	127
 16701  0155A0  6E07               	movwf	(btemp+6)^0,c
 16702  0155A2  0E00               	movlw	0
 16703  0155A4  6E08               	movwf	(btemp+7)^0,c
 16704  0155A6                     u5735:
 16705  0155A6  660C               	tstfsz	(btemp+11)^0,c
 16706  0155A8  D001               	goto	u5736
 16707  0155AA  D007               	goto	u5737
 16708  0155AC                     u5736:
 16709  0155AC  3408               	rlcf	(btemp+7)^0,w,c
 16710  0155AE  3208               	rrcf	(btemp+7)^0,f,c
 16711  0155B0  3207               	rrcf	(btemp+6)^0,f,c
 16712  0155B2  3206               	rrcf	(btemp+5)^0,f,c
 16713  0155B4  3205               	rrcf	(btemp+4)^0,f,c
 16714  0155B6  2E0C               	decfsz	(btemp+11)^0,f,c
 16715  0155B8  D7F6               	goto	u5735
 16716  0155BA                     u5737:
 16717                           
 16718                           ;stkvar	_m @ sp[(-10)+4]
 16719  0155BA  0EFA               	movlw	-6
 16720  0155BC  0060  F017  FFE3   	movff	btemp+4,plusw1
 16721  0155C2  0EFB               	movlw	-5
 16722  0155C4  0060  F01B  FFE3   	movff	btemp+5,plusw1
 16723  0155CA  0EFC               	movlw	-4
 16724  0155CC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 16725  0155D2  0EFD               	movlw	-3
 16726  0155D4  0060  F023  FFE3   	movff	btemp+7,plusw1
 16727                           
 16728                           ;stkvar	_m @ sp[(-10)+4]
 16729                           ;stkvar	_u @ sp[(-10)+0]
 16730  0155DA  0EF6               	movlw	-10
 16731  0155DC  006F FF8C  F009    	movff	plusw1,btemp+8
 16732  0155E2  0EF7               	movlw	-9
 16733  0155E4  006F FF8C  F00A    	movff	plusw1,btemp+9
 16734  0155EA  0EF8               	movlw	-8
 16735  0155EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16736  0155F2  0EF9               	movlw	-7
 16737  0155F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16738  0155FA  0EFA               	movlw	-6
 16739  0155FC  50E3               	movf	plusw1,w,c
 16740  0155FE  1609               	andwf	(btemp+8)^0,f,c
 16741  015600  0EFB               	movlw	-5
 16742  015602  50E3               	movf	plusw1,w,c
 16743  015604  160A               	andwf	(btemp+9)^0,f,c
 16744  015606  0EFC               	movlw	-4
 16745  015608  50E3               	movf	plusw1,w,c
 16746  01560A  160B               	andwf	(btemp+10)^0,f,c
 16747  01560C  0EFD               	movlw	-3
 16748  01560E  50E3               	movf	plusw1,w,c
 16749  015610  160C               	andwf	(btemp+11)^0,f,c
 16750  015612  5009               	movf	(btemp+8)^0,w,c
 16751  015614  100A               	iorwf	(btemp+9)^0,w,c
 16752  015616  100B               	iorwf	(btemp+10)^0,w,c
 16753  015618  100C               	iorwf	(btemp+11)^0,w,c
 16754  01561A  B4D8               	btfsc	status,2,c
 16755  01561C  D7A7               	goto	u5710
 16756                           
 16757                           ;stkvar	_u @ sp[(-10)+0]
 16758  01561E  0EF6               	movlw	-10
 16759  015620  006F FF8C  F009    	movff	plusw1,btemp+8
 16760  015626  0EF7               	movlw	-9
 16761  015628  006F FF8C  F00A    	movff	plusw1,btemp+9
 16762  01562E  0EF8               	movlw	-8
 16763  015630  006F FF8C  F00B    	movff	plusw1,btemp+10
 16764  015636  0EF9               	movlw	-7
 16765  015638  006F FF8C  F00C    	movff	plusw1,btemp+11
 16766  01563E  0E20               	movlw	32
 16767  015640  D005               	goto	u5750
 16768  015642                     u5755:
 16769  015642  90D8               	bcf	status,0,c
 16770  015644  320C               	rrcf	(btemp+11)^0,f,c
 16771  015646  320B               	rrcf	(btemp+10)^0,f,c
 16772  015648  320A               	rrcf	(btemp+9)^0,f,c
 16773  01564A  3209               	rrcf	(btemp+8)^0,f,c
 16774  01564C                     u5750:
 16775  01564C  2EE8               	decfsz	wreg,f,c
 16776  01564E  D7F9               	goto	u5755
 16777  015650  5009               	movf	(btemp+8)^0,w,c
 16778  015652  B4D8               	btfsc	status,2,c
 16779  015654  D028               	goto	l7431
 16780                           
 16781                           ;stkvar	_m @ sp[(-10)+4]
 16782                           ;stkvar	_u @ sp[(-10)+0]
 16783  015656  0EF6               	movlw	-10
 16784  015658  50E3               	movf	plusw1,w,c
 16785  01565A  6E01               	movwf	btemp^0,c
 16786  01565C  0EFA               	movlw	-6
 16787  01565E  50E3               	movf	plusw1,w,c
 16788  015660  2601               	addwf	btemp^0,f,c
 16789  015662  0EF6               	movlw	-10
 16790  015664  0060  F007  FFE3   	movff	btemp,plusw1
 16791  01566A  0EF7               	movlw	-9
 16792  01566C  50E3               	movf	plusw1,w,c
 16793  01566E  6E01               	movwf	btemp^0,c
 16794  015670  0EFB               	movlw	-5
 16795  015672  50E3               	movf	plusw1,w,c
 16796  015674  2201               	addwfc	btemp^0,f,c
 16797  015676  0EF7               	movlw	-9
 16798  015678  0060  F007  FFE3   	movff	btemp,plusw1
 16799  01567E  0EF8               	movlw	-8
 16800  015680  50E3               	movf	plusw1,w,c
 16801  015682  6E01               	movwf	btemp^0,c
 16802  015684  0EFC               	movlw	-4
 16803  015686  50E3               	movf	plusw1,w,c
 16804  015688  2201               	addwfc	btemp^0,f,c
 16805  01568A  0EF8               	movlw	-8
 16806  01568C  0060  F007  FFE3   	movff	btemp,plusw1
 16807  015692  0EF9               	movlw	-7
 16808  015694  50E3               	movf	plusw1,w,c
 16809  015696  6E01               	movwf	btemp^0,c
 16810  015698  0EFD               	movlw	-3
 16811  01569A  50E3               	movf	plusw1,w,c
 16812  01569C  2201               	addwfc	btemp^0,f,c
 16813  01569E  0EF9               	movlw	-7
 16814  0156A0  0060  F007  FFE3   	movff	btemp,plusw1
 16815  0156A6                     l7431:
 16816                           
 16817                           ;stkvar	_m @ sp[(-10)+4]
 16818  0156A6  0EFA               	movlw	-6
 16819  0156A8  006F FF8C  F009    	movff	plusw1,btemp+8
 16820  0156AE  0EFB               	movlw	-5
 16821  0156B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 16822  0156B6  0EFC               	movlw	-4
 16823  0156B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 16824  0156BE  0EFD               	movlw	-3
 16825  0156C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16826  0156C6  1C09               	comf	(btemp+8)^0,w,c
 16827  0156C8  6E05               	movwf	(btemp+4)^0,c
 16828  0156CA  1C0A               	comf	(btemp+9)^0,w,c
 16829  0156CC  6E06               	movwf	(btemp+5)^0,c
 16830  0156CE  1C0B               	comf	(btemp+10)^0,w,c
 16831  0156D0  6E07               	movwf	(btemp+6)^0,c
 16832  0156D2  1C0C               	comf	(btemp+11)^0,w,c
 16833  0156D4  6E08               	movwf	(btemp+7)^0,c
 16834                           
 16835                           ;stkvar	_u @ sp[(-10)+0]
 16836  0156D6  50E1               	movf	fsr1l,w,c
 16837  0156D8  0FF6               	addlw	-10
 16838  0156DA  6ED9               	movwf	fsr2l,c
 16839  0156DC  50E2               	movf	fsr1h,w,c
 16840  0156DE  6EDA               	movwf	fsr2h,c
 16841  0156E0  0EFF               	movlw	255
 16842  0156E2  22DA               	addwfc	fsr2h,f,c
 16843  0156E4  5005               	movf	(btemp+4)^0,w,c
 16844  0156E6  16DE               	andwf	postinc2,f,c
 16845  0156E8  5006               	movf	(btemp+5)^0,w,c
 16846  0156EA  16DE               	andwf	postinc2,f,c
 16847  0156EC  5007               	movf	(btemp+6)^0,w,c
 16848  0156EE  16DE               	andwf	postinc2,f,c
 16849  0156F0  5008               	movf	(btemp+7)^0,w,c
 16850  0156F2  16DE               	andwf	postinc2,f,c
 16851  0156F4  D05B               	goto	l7441
 16852  0156F6                     l7433:
 16853                           
 16854                           ;stkvar	_u @ sp[(-10)+0]
 16855  0156F6  0EF6               	movlw	-10
 16856  0156F8  006F FF8C  F009    	movff	plusw1,btemp+8
 16857  0156FE  0EF7               	movlw	-9
 16858  015700  006F FF8C  F00A    	movff	plusw1,btemp+9
 16859  015706  0EF8               	movlw	-8
 16860  015708  006F FF8C  F00B    	movff	plusw1,btemp+10
 16861  01570E  0EF9               	movlw	-7
 16862  015710  006F FF8C  F00C    	movff	plusw1,btemp+11
 16863  015716  0E20               	movlw	32
 16864  015718  D005               	goto	u5770
 16865  01571A                     u5775:
 16866  01571A  90D8               	bcf	status,0,c
 16867  01571C  320C               	rrcf	(btemp+11)^0,f,c
 16868  01571E  320B               	rrcf	(btemp+10)^0,f,c
 16869  015720  320A               	rrcf	(btemp+9)^0,f,c
 16870  015722  3209               	rrcf	(btemp+8)^0,f,c
 16871  015724                     u5770:
 16872  015724  2EE8               	decfsz	wreg,f,c
 16873  015726  D7F9               	goto	u5775
 16874  015728  6609               	tstfsz	(btemp+8)^0,c
 16875  01572A  D009               	goto	l7437
 16876                           
 16877                           ;stkvar	_u @ sp[(-10)+0]
 16878  01572C  0EF6               	movlw	-10
 16879  01572E  6AE3               	clrf	plusw1,c
 16880  015730  0EF7               	movlw	-9
 16881  015732  6AE3               	clrf	plusw1,c
 16882  015734  0EF8               	movlw	-8
 16883  015736  6AE3               	clrf	plusw1,c
 16884  015738  0EF9               	movlw	-7
 16885  01573A  6AE3               	clrf	plusw1,c
 16886  01573C  D037               	goto	l7441
 16887  01573E                     l7437:
 16888                           
 16889                           ;stkvar	_u @ sp[(-10)+0]
 16890  01573E  0EF6               	movlw	-10
 16891  015740  006F FF8C  F009    	movff	plusw1,btemp+8
 16892  015746  0EF7               	movlw	-9
 16893  015748  006F FF8C  F00A    	movff	plusw1,btemp+9
 16894  01574E  0EF8               	movlw	-8
 16895  015750  006F FF8C  F00B    	movff	plusw1,btemp+10
 16896  015756  0EF9               	movlw	-7
 16897  015758  006F FF8C  F00C    	movff	plusw1,btemp+11
 16898  01575E  90D8               	bcf	status,0,c
 16899  015760  3409               	rlcf	(btemp+8)^0,w,c
 16900  015762  6E05               	movwf	(btemp+4)^0,c
 16901  015764  340A               	rlcf	(btemp+9)^0,w,c
 16902  015766  6E06               	movwf	(btemp+5)^0,c
 16903  015768  340B               	rlcf	(btemp+10)^0,w,c
 16904  01576A  6E07               	movwf	(btemp+6)^0,c
 16905  01576C  340C               	rlcf	(btemp+11)^0,w,c
 16906  01576E  6E08               	movwf	(btemp+7)^0,c
 16907  015770  5005               	movf	(btemp+4)^0,w,c
 16908  015772  1006               	iorwf	(btemp+5)^0,w,c
 16909  015774  1007               	iorwf	(btemp+6)^0,w,c
 16910  015776  1008               	iorwf	(btemp+7)^0,w,c
 16911  015778  B4D8               	btfsc	status,2,c
 16912  01577A  D018               	goto	l7441
 16913  01577C  0E00               	movlw	0
 16914  01577E  6E09               	movwf	(btemp+8)^0,c
 16915  015780  0E00               	movlw	0
 16916  015782  6E0A               	movwf	(btemp+9)^0,c
 16917  015784  0E80               	movlw	128
 16918  015786  6E0B               	movwf	(btemp+10)^0,c
 16919  015788  0EBF               	movlw	191
 16920  01578A  6E0C               	movwf	(btemp+11)^0,c
 16921                           
 16922                           ;stkvar	_u @ sp[(-10)+0]
 16923  01578C  0EF6               	movlw	-10
 16924  01578E  0060  F027  FFE3   	movff	btemp+8,plusw1
 16925  015794  0EF7               	movlw	-9
 16926  015796  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16927  01579C  0EF8               	movlw	-8
 16928  01579E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16929  0157A4  0EF9               	movlw	-7
 16930  0157A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16931  0157AC                     l7441:
 16932                           
 16933                           ;stkvar	_u @ sp[(-10)+0]
 16934  0157AC  0EF6               	movlw	-10
 16935  0157AE  006F FF8C  F001    	movff	plusw1,btemp
 16936  0157B4  0EF7               	movlw	-9
 16937  0157B6  006F FF8C  F002    	movff	plusw1,btemp+1
 16938  0157BC  0EF8               	movlw	-8
 16939  0157BE  006F FF8C  F003    	movff	plusw1,btemp+2
 16940  0157C4  0EF9               	movlw	-7
 16941  0157C6                     L17:
 16942  0157C6  006F FF8C  F004    	movff	plusw1,btemp+3
 16943                           
 16944                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16945  0157CC  0EF2               	movlw	242
 16946  0157CE  26E1               	addwf	fsr1l,f,c
 16947  0157D0  0EFF               	movlw	255
 16948  0157D2  22E2               	addwfc	fsr1h,f,c
 16949  0157D4  0012               	return		;funcret
 16950  0157D6                     __end_of_floorf:
 16951                           	opt callstack 0
 16952                           
 16953 ;; *************** function ___fpclassifyf *****************
 16954 ;; Defined at:
 16955 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 16956 ;; Parameters:    Size  Location     Type
 16957 ;;  x               4  [STACK] float 
 16958 ;; Auto vars:     Size  Location     Type
 16959 ;;  u               4  [STACK] struct .
 16960 ;;  e               2  [STACK] int 
 16961 ;; Return value:  Size  Location     Type
 16962 ;;                  2  [STACK] int 
 16963 ;; Registers used:
 16964 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 16965 ;; Tracked objects:
 16966 ;;		On entry : 0/0
 16967 ;;		On exit  : 0/0
 16968 ;;		Unchanged: 0/0
 16969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16974 ;;Total ram usage:        0 bytes
 16975 ;; Hardware stack levels used:    1
 16976 ;; Hardware stack levels required when called:   15
 16977 ;; This function calls:
 16978 ;;		Nothing
 16979 ;; This function is called by:
 16980 ;;		_efgtoa
 16981 ;; This function uses a reentrant model
 16982 ;;
 16983                           
 16984                           	psect	text58
 16985  0174D0                     __ptext58:
 16986                           	opt callstack 0
 16987  0174D0                     ___fpclassifyf:
 16988                           	opt callstack 0
 16989                           
 16990                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16991  0174D0  0E06               	movlw	6
 16992  0174D2  26E1               	addwf	fsr1l,f,c
 16993  0174D4  0E00               	movlw	0
 16994  0174D6  22E2               	addwfc	fsr1h,f,c
 16995                           
 16996                           ;incstack = 0
 16997 ;; hardware stack exceeded
 16998  0174D8  0060  F264  F009   	movff	___fpclassifyf@F463,btemp+8
 16999  0174DE  0060  F268  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 17000  0174E4  0060  F26C  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 17001  0174EA  0060  F270  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 17002                           
 17003                           ;stkvar	_u @ sp[(-6)+0]
 17004  0174F0  0EFA               	movlw	-6
 17005  0174F2  0060  F027  FFE3   	movff	btemp+8,plusw1
 17006  0174F8  0EFB               	movlw	-5
 17007  0174FA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17008  017500  0EFC               	movlw	-4
 17009  017502  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17010  017508  0EFD               	movlw	-3
 17011  01750A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17012                           
 17013                           ;stkvar	_x @ sp[(-6)+-4]
 17014  017510  0EF6               	movlw	-10
 17015  017512  006F FF8C  F009    	movff	plusw1,btemp+8
 17016  017518  0EF7               	movlw	-9
 17017  01751A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17018  017520  0EF8               	movlw	-8
 17019  017522  006F FF8C  F00B    	movff	plusw1,btemp+10
 17020  017528  0EF9               	movlw	-7
 17021  01752A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17022                           
 17023                           ;stkvar	_u @ sp[(-6)+0]
 17024  017530  0EFA               	movlw	-6
 17025  017532  0060  F027  FFE3   	movff	btemp+8,plusw1
 17026  017538  0EFB               	movlw	-5
 17027  01753A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17028  017540  0EFC               	movlw	-4
 17029  017542  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17030  017548  0EFD               	movlw	-3
 17031  01754A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17032                           
 17033                           ;stkvar	_u @ sp[(-6)+0]
 17034  017550  0EFA               	movlw	-6
 17035  017552  006F FF8C  F009    	movff	plusw1,btemp+8
 17036  017558  0EFB               	movlw	-5
 17037  01755A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17038  017560  0EFC               	movlw	-4
 17039  017562  006F FF8C  F00B    	movff	plusw1,btemp+10
 17040  017568  0EFD               	movlw	-3
 17041  01756A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17042  017570  0E18               	movlw	24
 17043  017572  D005               	goto	u5580
 17044  017574                     u5585:
 17045  017574  90D8               	bcf	status,0,c
 17046  017576  320C               	rrcf	(btemp+11)^0,f,c
 17047  017578  320B               	rrcf	(btemp+10)^0,f,c
 17048  01757A  320A               	rrcf	(btemp+9)^0,f,c
 17049  01757C  3209               	rrcf	(btemp+8)^0,f,c
 17050  01757E                     u5580:
 17051  01757E  2EE8               	decfsz	wreg,f,c
 17052  017580  D7F9               	goto	u5585
 17053  017582  0060  F024  F007   	movff	btemp+8,btemp+6
 17054  017588  0060  F028  F008   	movff	btemp+9,btemp+7
 17055  01758E  0EFF               	movlw	255
 17056  017590  1607               	andwf	(btemp+6)^0,f,c
 17057  017592  0E00               	movlw	0
 17058  017594  1608               	andwf	(btemp+7)^0,f,c
 17059                           
 17060                           ;stkvar	_e @ sp[(-6)+4]
 17061  017596  0EFE               	movlw	-2
 17062  017598  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17063  01759E  0EFF               	movlw	-1
 17064  0175A0  0060  F023  FFE3   	movff	btemp+7,plusw1
 17065                           
 17066                           ;stkvar	_e @ sp[(-6)+4]
 17067  0175A6  0EFE               	movlw	-2
 17068  0175A8  006F FF8C  F001    	movff	plusw1,btemp
 17069  0175AE  0EFF               	movlw	-1
 17070  0175B0  50E3               	movf	plusw1,w,c
 17071  0175B2  1001               	iorwf	btemp^0,w,c
 17072  0175B4  A4D8               	btfss	status,2,c
 17073  0175B6  D023               	goto	l7379
 17074                           
 17075                           ;stkvar	_u @ sp[(-6)+0]
 17076  0175B8  0EFA               	movlw	-6
 17077  0175BA  006F FF8C  F009    	movff	plusw1,btemp+8
 17078  0175C0  0EFB               	movlw	-5
 17079  0175C2  006F FF8C  F00A    	movff	plusw1,btemp+9
 17080  0175C8  0EFC               	movlw	-4
 17081  0175CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17082  0175D0  0EFD               	movlw	-3
 17083  0175D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 17084  0175D8  90D8               	bcf	status,0,c
 17085  0175DA  3409               	rlcf	(btemp+8)^0,w,c
 17086  0175DC  6E05               	movwf	(btemp+4)^0,c
 17087  0175DE  340A               	rlcf	(btemp+9)^0,w,c
 17088  0175E0  6E06               	movwf	(btemp+5)^0,c
 17089  0175E2  340B               	rlcf	(btemp+10)^0,w,c
 17090  0175E4  6E07               	movwf	(btemp+6)^0,c
 17091  0175E6  340C               	rlcf	(btemp+11)^0,w,c
 17092  0175E8  6E08               	movwf	(btemp+7)^0,c
 17093  0175EA  5005               	movf	(btemp+4)^0,w,c
 17094  0175EC  1006               	iorwf	(btemp+5)^0,w,c
 17095  0175EE  1007               	iorwf	(btemp+6)^0,w,c
 17096  0175F0  1008               	iorwf	(btemp+7)^0,w,c
 17097  0175F2  A4D8               	btfss	status,2,c
 17098  0175F4  D002               	goto	l7375
 17099  0175F6  0E02               	movlw	2
 17100  0175F8  D02E               	goto	L18
 17101  0175FA                     l7375:
 17102  0175FA  0E03               	movlw	3
 17103  0175FC  D02C               	goto	L18
 17104  0175FE                     l7379:
 17105                           
 17106                           ;stkvar	_e @ sp[(-6)+4]
 17107  0175FE  0EFE               	movlw	-2
 17108  017600  28E3               	incf	plusw1,w,c
 17109  017602  E128               	bnz	l7385
 17110  017604  0EFF               	movlw	-1
 17111  017606  50E3               	movf	plusw1,w,c
 17112  017608  A4D8               	btfss	status,2,c
 17113  01760A  D024               	goto	l7385
 17114                           
 17115                           ;stkvar	_u @ sp[(-6)+0]
 17116  01760C  0EFA               	movlw	-6
 17117  01760E  006F FF8C  F009    	movff	plusw1,btemp+8
 17118  017614  0EFB               	movlw	-5
 17119  017616  006F FF8C  F00A    	movff	plusw1,btemp+9
 17120  01761C  0EFC               	movlw	-4
 17121  01761E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17122  017624  0EFD               	movlw	-3
 17123  017626  006F FF8C  F00C    	movff	plusw1,btemp+11
 17124  01762C  0E09               	movlw	9
 17125  01762E                     u5625:
 17126  01762E  90D8               	bcf	status,0,c
 17127  017630  3609               	rlcf	(btemp+8)^0,f,c
 17128  017632  360A               	rlcf	(btemp+9)^0,f,c
 17129  017634  360B               	rlcf	(btemp+10)^0,f,c
 17130  017636  360C               	rlcf	(btemp+11)^0,f,c
 17131  017638  2EE8               	decfsz	wreg,f,c
 17132  01763A  D7F9               	goto	u5625
 17133  01763C  5009               	movf	(btemp+8)^0,w,c
 17134  01763E  100A               	iorwf	(btemp+9)^0,w,c
 17135  017640  100B               	iorwf	(btemp+10)^0,w,c
 17136  017642  100C               	iorwf	(btemp+11)^0,w,c
 17137  017644  A4D8               	btfss	status,2,c
 17138  017646  D002               	goto	u5630
 17139  017648  0E01               	movlw	1
 17140  01764A  D001               	goto	u5640
 17141  01764C                     u5630:
 17142  01764C  0E00               	movlw	0
 17143  01764E                     u5640:
 17144  01764E  6E01               	movwf	btemp^0,c
 17145  017650  6A02               	clrf	(btemp+1)^0,c
 17146  017652  D004               	goto	l2951
 17147  017654                     l7385:
 17148  017654  0E04               	movlw	4
 17149  017656                     L18:
 17150  017656  6E01               	movwf	btemp^0,c
 17151  017658  0E00               	movlw	0
 17152  01765A  6E02               	movwf	(btemp+1)^0,c
 17153  01765C                     l2951:
 17154                           
 17155                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 17156  01765C  0EF6               	movlw	246
 17157  01765E  26E1               	addwf	fsr1l,f,c
 17158  017660  0EFF               	movlw	255
 17159  017662  22E2               	addwfc	fsr1h,f,c
 17160  017664  0012               	return		;funcret
 17161  017666                     __end_of___fpclassifyf:
 17162                           	opt callstack 0
 17163                           
 17164 ;; *************** function ___fltol *****************
 17165 ;; Defined at:
 17166 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 17167 ;; Parameters:    Size  Location     Type
 17168 ;;  f1              4  [STACK] int 
 17169 ;; Auto vars:     Size  Location     Type
 17170 ;;  exp1            1  [STACK] unsigned char 
 17171 ;;  sign1           1  [STACK] unsigned char 
 17172 ;; Return value:  Size  Location     Type
 17173 ;;                  4  [STACK] long 
 17174 ;; Registers used:
 17175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17176 ;; Tracked objects:
 17177 ;;		On entry : 0/1
 17178 ;;		On exit  : 0/0
 17179 ;;		Unchanged: 0/0
 17180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17185 ;;Total ram usage:        0 bytes
 17186 ;; Hardware stack levels used:    1
 17187 ;; Hardware stack levels required when called:   15
 17188 ;; This function calls:
 17189 ;;		Nothing
 17190 ;; This function is called by:
 17191 ;;		_calc_bsoc
 17192 ;;		_init_bsoc
 17193 ;;		_efgtoa
 17194 ;; This function uses a reentrant model
 17195 ;;
 17196                           
 17197                           	psect	text59
 17198  0177E6                     __ptext59:
 17199                           	opt callstack 0
 17200  0177E6                     ___fltol:
 17201                           	opt callstack 0
 17202                           
 17203                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17204  0177E6  52E6               	movf	postinc1,f,c
 17205  0177E8  52E6               	movf	postinc1,f,c
 17206                           
 17207                           ;stkvar	_f1 @ sp[(-2)+-4]
 17208                           
 17209                           ;incstack = 0
 17210 ;; hardware stack exceeded
 17211  0177EA  0EFA               	movlw	-6
 17212  0177EC  006F FF8C  F009    	movff	plusw1,btemp+8
 17213  0177F2  0EFB               	movlw	-5
 17214  0177F4  006F FF8C  F00A    	movff	plusw1,btemp+9
 17215  0177FA  0EFC               	movlw	-4
 17216  0177FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17217  017802  0EFD               	movlw	-3
 17218  017804  006F FF8C  F00C    	movff	plusw1,btemp+11
 17219  01780A  0E18               	movlw	24
 17220  01780C  D005               	goto	u6790
 17221  01780E                     u6795:
 17222  01780E  90D8               	bcf	status,0,c
 17223  017810  320C               	rrcf	(btemp+11)^0,f,c
 17224  017812  320B               	rrcf	(btemp+10)^0,f,c
 17225  017814  320A               	rrcf	(btemp+9)^0,f,c
 17226  017816  3209               	rrcf	(btemp+8)^0,f,c
 17227  017818                     u6790:
 17228  017818  2EE8               	decfsz	wreg,f,c
 17229  01781A  D7F9               	goto	u6795
 17230                           
 17231                           ;stkvar	_exp1 @ sp[(-2)+0]
 17232  01781C  0EFE               	movlw	-2
 17233  01781E  0060  F027  FFE3   	movff	btemp+8,plusw1
 17234  017824  0EFE               	movlw	-2
 17235  017826  50E3               	movf	plusw1,w,c
 17236  017828  A4D8               	btfss	status,2,c
 17237  01782A  D006               	goto	l8005
 17238  01782C                     u6800:
 17239  01782C  0E00               	movlw	0
 17240  01782E  6E01               	movwf	btemp^0,c
 17241  017830  6A02               	clrf	(btemp+1)^0,c
 17242  017832  6A03               	clrf	(btemp+2)^0,c
 17243  017834  6A04               	clrf	(btemp+3)^0,c
 17244  017836  D08B               	goto	l2567
 17245  017838                     l8005:
 17246                           
 17247                           ;stkvar	_f1 @ sp[(-2)+-4]
 17248  017838  0EFA               	movlw	-6
 17249  01783A  006F FF8C  F009    	movff	plusw1,btemp+8
 17250  017840  0EFB               	movlw	-5
 17251  017842  006F FF8C  F00A    	movff	plusw1,btemp+9
 17252  017848  0EFC               	movlw	-4
 17253  01784A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17254  017850  0EFD               	movlw	-3
 17255  017852  006F FF8C  F00C    	movff	plusw1,btemp+11
 17256  017858  0E20               	movlw	32
 17257  01785A  D005               	goto	u6810
 17258  01785C                     u6815:
 17259  01785C  90D8               	bcf	status,0,c
 17260  01785E  320C               	rrcf	(btemp+11)^0,f,c
 17261  017860  320B               	rrcf	(btemp+10)^0,f,c
 17262  017862  320A               	rrcf	(btemp+9)^0,f,c
 17263  017864  3209               	rrcf	(btemp+8)^0,f,c
 17264  017866                     u6810:
 17265  017866  2EE8               	decfsz	wreg,f,c
 17266  017868  D7F9               	goto	u6815
 17267                           
 17268                           ;stkvar	_sign1 @ sp[(-2)+1]
 17269  01786A  0EFF               	movlw	-1
 17270  01786C  0060  F027  FFE3   	movff	btemp+8,plusw1
 17271                           
 17272                           ;stkvar	_f1 @ sp[(-2)+-4]
 17273  017872  0EFC               	movlw	-4
 17274  017874  8EE3               	bsf	plusw1,7,c
 17275                           
 17276                           ;stkvar	_f1 @ sp[(-2)+-4]
 17277  017876  50E1               	movf	fsr1l,w,c
 17278  017878  0FFA               	addlw	-6
 17279  01787A  6ED9               	movwf	fsr2l,c
 17280  01787C  50E2               	movf	fsr1h,w,c
 17281  01787E  6EDA               	movwf	fsr2h,c
 17282  017880  0EFF               	movlw	255
 17283  017882  22DA               	addwfc	fsr2h,f,c
 17284  017884  0EFF               	movlw	255
 17285  017886  16DE               	andwf	postinc2,f,c
 17286  017888  0EFF               	movlw	255
 17287  01788A  16DE               	andwf	postinc2,f,c
 17288  01788C  0EFF               	movlw	255
 17289  01788E  16DE               	andwf	postinc2,f,c
 17290  017890  0E00               	movlw	0
 17291  017892  16DE               	andwf	postinc2,f,c
 17292                           
 17293                           ;stkvar	_exp1 @ sp[(-2)+0]
 17294  017894  0EFE               	movlw	-2
 17295  017896  006F FF8C  F001    	movff	plusw1,btemp
 17296  01789C  0E96               	movlw	150
 17297  01789E  5E01               	subwf	btemp^0,f,c
 17298  0178A0  0EFE               	movlw	-2
 17299  0178A2  0060  F007  FFE3   	movff	btemp,plusw1
 17300                           
 17301                           ;stkvar	_exp1 @ sp[(-2)+0]
 17302  0178A8  0EFE               	movlw	-2
 17303  0178AA  AEE3               	btfss	plusw1,7,c
 17304  0178AC  D014               	goto	l8023
 17305                           
 17306                           ;stkvar	_exp1 @ sp[(-2)+0]
 17307  0178AE  0EFE               	movlw	-2
 17308  0178B0  50E3               	movf	plusw1,w,c
 17309  0178B2  0A80               	xorlw	128
 17310  0178B4  0F97               	addlw	151
 17311  0178B6  A0D8               	btfss	status,0,c
 17312  0178B8  D7B9               	goto	u6800
 17313  0178BA                     l8021:
 17314                           
 17315                           ;stkvar	_f1 @ sp[(-2)+-4]
 17316  0178BA  90D8               	bcf	status,0,c
 17317  0178BC  0EFD               	movlw	-3
 17318  0178BE  32E3               	rrcf	plusw1,f,c
 17319  0178C0  0EFC               	movlw	-4
 17320  0178C2  32E3               	rrcf	plusw1,f,c
 17321  0178C4  0EFB               	movlw	-5
 17322  0178C6  32E3               	rrcf	plusw1,f,c
 17323  0178C8  0EFA               	movlw	-6
 17324  0178CA  32E3               	rrcf	plusw1,f,c
 17325                           
 17326                           ;stkvar	_exp1 @ sp[(-2)+0]
 17327  0178CC  0EFE               	movlw	-2
 17328  0178CE  2AE3               	incf	plusw1,f,c
 17329  0178D0  B4D8               	btfsc	status,2,c
 17330  0178D2  D018               	goto	u6860
 17331  0178D4  D7F2               	goto	l8021
 17332  0178D6                     l8023:
 17333                           
 17334                           ;stkvar	_exp1 @ sp[(-2)+0]
 17335  0178D6  0EFE               	movlw	-2
 17336  0178D8  006F FF8C  F001    	movff	plusw1,btemp
 17337  0178DE  0E1F               	movlw	31
 17338  0178E0  6401               	cpfsgt	btemp^0,c
 17339  0178E2  D00C               	goto	l8031
 17340  0178E4  D7A3               	goto	u6800
 17341  0178E6                     l8029:
 17342                           
 17343                           ;stkvar	_f1 @ sp[(-2)+-4]
 17344  0178E6  90D8               	bcf	status,0,c
 17345  0178E8  0EFA               	movlw	-6
 17346  0178EA  36E3               	rlcf	plusw1,f,c
 17347  0178EC  0EFB               	movlw	-5
 17348  0178EE  36E3               	rlcf	plusw1,f,c
 17349  0178F0  0EFC               	movlw	-4
 17350  0178F2  36E3               	rlcf	plusw1,f,c
 17351  0178F4  0EFD               	movlw	-3
 17352  0178F6  36E3               	rlcf	plusw1,f,c
 17353                           
 17354                           ;stkvar	_exp1 @ sp[(-2)+0]
 17355  0178F8  0EFE               	movlw	-2
 17356  0178FA  06E3               	decf	plusw1,f,c
 17357  0178FC                     l8031:
 17358                           
 17359                           ;stkvar	_exp1 @ sp[(-2)+0]
 17360  0178FC  0EFE               	movlw	-2
 17361  0178FE  50E3               	movf	plusw1,w,c
 17362  017900  A4D8               	btfss	status,2,c
 17363  017902  D7F1               	goto	l8029
 17364  017904                     u6860:
 17365                           
 17366                           ;stkvar	_sign1 @ sp[(-2)+1]
 17367  017904  0EFF               	movlw	-1
 17368  017906  50E3               	movf	plusw1,w,c
 17369  017908  B4D8               	btfsc	status,2,c
 17370  01790A  D011               	goto	u6880
 17371                           
 17372                           ;stkvar	_f1 @ sp[(-2)+-4]
 17373                           ;stkvar	_f1 @ sp[(-2)+-4]
 17374  01790C  0EFA               	movlw	-6
 17375  01790E  6CE3               	negf	plusw1,c
 17376  017910  0EFB               	movlw	-5
 17377  017912  1EE3               	comf	plusw1,f,c
 17378  017914  0EFC               	movlw	-4
 17379  017916  1EE3               	comf	plusw1,f,c
 17380  017918  0EFD               	movlw	-3
 17381  01791A  1EE3               	comf	plusw1,f,c
 17382  01791C  E308               	bnc	u6880
 17383  01791E  0EFB               	movlw	-5
 17384  017920  2AE3               	incf	plusw1,f,c
 17385  017922  E305               	bnc	u6880
 17386  017924  0EFC               	movlw	-4
 17387  017926  2AE3               	incf	plusw1,f,c
 17388  017928  E302               	bnc	u6880
 17389  01792A  0EFD               	movlw	-3
 17390  01792C  2AE3               	incf	plusw1,f,c
 17391  01792E                     u6880:
 17392                           
 17393                           ;stkvar	_f1 @ sp[(-2)+-4]
 17394  01792E  0EFA               	movlw	-6
 17395  017930  006F FF8C  F001    	movff	plusw1,btemp
 17396  017936  0EFB               	movlw	-5
 17397  017938  006F FF8C  F002    	movff	plusw1,btemp+1
 17398  01793E  0EFC               	movlw	-4
 17399  017940  006F FF8C  F003    	movff	plusw1,btemp+2
 17400  017946  0EFD               	movlw	-3
 17401  017948  006F FF8C  F004    	movff	plusw1,btemp+3
 17402  01794E                     l2567:
 17403                           
 17404                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17405  01794E  0EFA               	movlw	250
 17406  017950  26E1               	addwf	fsr1l,f,c
 17407  017952  0EFF               	movlw	255
 17408  017954  22E2               	addwfc	fsr1h,f,c
 17409  017956  0012               	return		;funcret
 17410  017958                     __end_of___fltol:
 17411                           	opt callstack 0
 17412                           
 17413 ;; *************** function ___flneg *****************
 17414 ;; Defined at:
 17415 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 17416 ;; Parameters:    Size  Location     Type
 17417 ;;  f1              4  [STACK] long 
 17418 ;; Auto vars:     Size  Location     Type
 17419 ;;		None
 17420 ;; Return value:  Size  Location     Type
 17421 ;;                  4  [STACK] long 
 17422 ;; Registers used:
 17423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 17424 ;; Tracked objects:
 17425 ;;		On entry : 0/0
 17426 ;;		On exit  : 0/0
 17427 ;;		Unchanged: 0/0
 17428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17433 ;;Total ram usage:        0 bytes
 17434 ;; Hardware stack levels used:    1
 17435 ;; Hardware stack levels required when called:   15
 17436 ;; This function calls:
 17437 ;;		Nothing
 17438 ;; This function is called by:
 17439 ;;		_calc_bsoc
 17440 ;;		_efgtoa
 17441 ;; This function uses a reentrant model
 17442 ;;
 17443                           
 17444                           	psect	text60
 17445  019C14                     __ptext60:
 17446                           	opt callstack 0
 17447  019C14                     ___flneg:
 17448                           	opt callstack 0
 17449                           
 17450                           ;stkvar	_f1 @ sp[(0)+-4]
 17451                           
 17452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17453                           ;incstack = 0
 17454 ;; hardware stack exceeded
 17455  019C14  0EFC               	movlw	-4
 17456  019C16  50E3               	movf	plusw1,w,c
 17457  019C18  E10A               	bnz	u6780
 17458  019C1A  0EFD               	movlw	-3
 17459  019C1C  50E3               	movf	plusw1,w,c
 17460  019C1E  E107               	bnz	u6780
 17461  019C20  0EFE               	movlw	-2
 17462  019C22  50E3               	movf	plusw1,w,c
 17463  019C24  E104               	bnz	u6780
 17464  019C26  0EFF               	movlw	-1
 17465  019C28  50E3               	movf	plusw1,w,c
 17466  019C2A  B4D8               	btfsc	status,2,c
 17467  019C2C  D002               	goto	l7995
 17468  019C2E                     u6780:
 17469                           
 17470                           ;stkvar	_f1 @ sp[(0)+-4]
 17471  019C2E  0EFF               	movlw	-1
 17472  019C30  7EE3               	btg	plusw1,7,c
 17473  019C32                     l7995:
 17474                           
 17475                           ;stkvar	_f1 @ sp[(0)+-4]
 17476  019C32  0EFC               	movlw	-4
 17477  019C34  006F FF8C  F001    	movff	plusw1,btemp
 17478  019C3A  0EFD               	movlw	-3
 17479  019C3C  006F FF8C  F002    	movff	plusw1,btemp+1
 17480  019C42  0EFE               	movlw	-2
 17481  019C44  006F FF8C  F003    	movff	plusw1,btemp+2
 17482  019C4A  0EFF               	movlw	-1
 17483  019C4C  006F FF8C  F004    	movff	plusw1,btemp+3
 17484                           
 17485                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17486  019C52  52E5               	movf	postdec1,f,c
 17487  019C54  52E5               	movf	postdec1,f,c
 17488  019C56  52E5               	movf	postdec1,f,c
 17489  019C58  52E5               	movf	postdec1,f,c
 17490  019C5A  0012               	return		;funcret
 17491  019C5C                     __end_of___flneg:
 17492                           	opt callstack 0
 17493                           
 17494 ;; *************** function ___flge *****************
 17495 ;; Defined at:
 17496 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 17497 ;; Parameters:    Size  Location     Type
 17498 ;;  ff1             4  [STACK] long 
 17499 ;;  ff2             4  [STACK] long 
 17500 ;; Auto vars:     Size  Location     Type
 17501 ;;		None
 17502 ;; Return value:  Size  Location     Type
 17503 ;;		None               void
 17504 ;; Registers used:
 17505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17506 ;; Tracked objects:
 17507 ;;		On entry : 0/0
 17508 ;;		On exit  : 0/0
 17509 ;;		Unchanged: 0/0
 17510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17515 ;;Total ram usage:        0 bytes
 17516 ;; Hardware stack levels used:    1
 17517 ;; Hardware stack levels required when called:   15
 17518 ;; This function calls:
 17519 ;;		Nothing
 17520 ;; This function is called by:
 17521 ;;		_calc_bsoc
 17522 ;;		_efgtoa
 17523 ;; This function uses a reentrant model
 17524 ;;
 17525                           
 17526                           	psect	text61
 17527  017AC8                     __ptext61:
 17528                           	opt callstack 0
 17529  017AC8                     ___flge:
 17530                           	opt callstack 0
 17531                           
 17532                           ;stkvar	_ff1 @ sp[(0)+-4]
 17533                           
 17534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17535                           ;incstack = 0
 17536 ;; hardware stack exceeded
 17537  017AC8  50E1               	movf	fsr1l,w,c
 17538  017ACA  0FFC               	addlw	-4
 17539  017ACC  6ED9               	movwf	fsr2l,c
 17540  017ACE  50E2               	movf	fsr1h,w,c
 17541  017AD0  6EDA               	movwf	fsr2h,c
 17542  017AD2  0EFF               	movlw	255
 17543  017AD4  22DA               	addwfc	fsr2h,f,c
 17544  017AD6  0E00               	movlw	0
 17545  017AD8  14DE               	andwf	postinc2,w,c
 17546  017ADA  6E09               	movwf	(btemp+8)^0,c
 17547  017ADC  0E00               	movlw	0
 17548  017ADE  14DE               	andwf	postinc2,w,c
 17549  017AE0  6E0A               	movwf	(btemp+9)^0,c
 17550  017AE2  0E80               	movlw	128
 17551  017AE4  14DE               	andwf	postinc2,w,c
 17552  017AE6  6E0B               	movwf	(btemp+10)^0,c
 17553  017AE8  0E7F               	movlw	127
 17554  017AEA  14DE               	andwf	postinc2,w,c
 17555  017AEC  6E0C               	movwf	(btemp+11)^0,c
 17556  017AEE  5009               	movf	(btemp+8)^0,w,c
 17557  017AF0  100A               	iorwf	(btemp+9)^0,w,c
 17558  017AF2  100B               	iorwf	(btemp+10)^0,w,c
 17559  017AF4  100C               	iorwf	(btemp+11)^0,w,c
 17560  017AF6  A4D8               	btfss	status,2,c
 17561  017AF8  D008               	goto	l7969
 17562                           
 17563                           ;stkvar	_ff1 @ sp[(0)+-4]
 17564  017AFA  0EFC               	movlw	-4
 17565  017AFC  6AE3               	clrf	plusw1,c
 17566  017AFE  0EFD               	movlw	-3
 17567  017B00  6AE3               	clrf	plusw1,c
 17568  017B02  0EFE               	movlw	-2
 17569  017B04  6AE3               	clrf	plusw1,c
 17570  017B06  0EFF               	movlw	-1
 17571  017B08  6AE3               	clrf	plusw1,c
 17572  017B0A                     l7969:
 17573                           
 17574                           ;stkvar	_ff2 @ sp[(0)+-8]
 17575  017B0A  50E1               	movf	fsr1l,w,c
 17576  017B0C  0FF8               	addlw	-8
 17577  017B0E  6ED9               	movwf	fsr2l,c
 17578  017B10  50E2               	movf	fsr1h,w,c
 17579  017B12  6EDA               	movwf	fsr2h,c
 17580  017B14  0EFF               	movlw	255
 17581  017B16  22DA               	addwfc	fsr2h,f,c
 17582  017B18  0E00               	movlw	0
 17583  017B1A  14DE               	andwf	postinc2,w,c
 17584  017B1C  6E09               	movwf	(btemp+8)^0,c
 17585  017B1E  0E00               	movlw	0
 17586  017B20  14DE               	andwf	postinc2,w,c
 17587  017B22  6E0A               	movwf	(btemp+9)^0,c
 17588  017B24  0E80               	movlw	128
 17589  017B26  14DE               	andwf	postinc2,w,c
 17590  017B28  6E0B               	movwf	(btemp+10)^0,c
 17591  017B2A  0E7F               	movlw	127
 17592  017B2C  14DE               	andwf	postinc2,w,c
 17593  017B2E  6E0C               	movwf	(btemp+11)^0,c
 17594  017B30  5009               	movf	(btemp+8)^0,w,c
 17595  017B32  100A               	iorwf	(btemp+9)^0,w,c
 17596  017B34  100B               	iorwf	(btemp+10)^0,w,c
 17597  017B36  100C               	iorwf	(btemp+11)^0,w,c
 17598  017B38  A4D8               	btfss	status,2,c
 17599  017B3A  D008               	goto	l2533
 17600                           
 17601                           ;stkvar	_ff2 @ sp[(0)+-8]
 17602  017B3C  0EF8               	movlw	-8
 17603  017B3E  6AE3               	clrf	plusw1,c
 17604  017B40  0EF9               	movlw	-7
 17605  017B42  6AE3               	clrf	plusw1,c
 17606  017B44  0EFA               	movlw	-6
 17607  017B46  6AE3               	clrf	plusw1,c
 17608  017B48  0EFB               	movlw	-5
 17609  017B4A  6AE3               	clrf	plusw1,c
 17610  017B4C                     l2533:
 17611                           
 17612                           ;stkvar	_ff1 @ sp[(0)+-4]
 17613  017B4C  0EFF               	movlw	-1
 17614  017B4E  AEE3               	btfss	plusw1,7,c
 17615  017B50  D024               	goto	l7975
 17616                           
 17617                           ;stkvar	_ff1 @ sp[(0)+-4]
 17618  017B52  0E00               	movlw	0
 17619  017B54  6E09               	movwf	(btemp+8)^0,c
 17620  017B56  0E00               	movlw	0
 17621  017B58  6E0A               	movwf	(btemp+9)^0,c
 17622  017B5A  0E00               	movlw	0
 17623  017B5C  6E0B               	movwf	(btemp+10)^0,c
 17624  017B5E  0E80               	movlw	128
 17625  017B60  6E0C               	movwf	(btemp+11)^0,c
 17626  017B62  0EFC               	movlw	-4
 17627  017B64  50E3               	movf	plusw1,w,c
 17628  017B66  5E09               	subwf	(btemp+8)^0,f,c
 17629  017B68  0EFD               	movlw	-3
 17630  017B6A  50E3               	movf	plusw1,w,c
 17631  017B6C  5A0A               	subwfb	(btemp+9)^0,f,c
 17632  017B6E  0EFE               	movlw	-2
 17633  017B70  50E3               	movf	plusw1,w,c
 17634  017B72  5A0B               	subwfb	(btemp+10)^0,f,c
 17635  017B74  0EFF               	movlw	-1
 17636  017B76  50E3               	movf	plusw1,w,c
 17637  017B78  5A0C               	subwfb	(btemp+11)^0,f,c
 17638                           
 17639                           ;stkvar	_ff1 @ sp[(0)+-4]
 17640  017B7A  0EFC               	movlw	-4
 17641  017B7C  0060  F027  FFE3   	movff	btemp+8,plusw1
 17642  017B82  0EFD               	movlw	-3
 17643  017B84  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17644  017B8A  0EFE               	movlw	-2
 17645  017B8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17646  017B92  0EFF               	movlw	-1
 17647  017B94  0060  F033  FFE3   	movff	btemp+11,plusw1
 17648  017B9A                     l7975:
 17649                           
 17650                           ;stkvar	_ff2 @ sp[(0)+-8]
 17651  017B9A  0EFB               	movlw	-5
 17652  017B9C  AEE3               	btfss	plusw1,7,c
 17653  017B9E  D024               	goto	l7979
 17654                           
 17655                           ;stkvar	_ff2 @ sp[(0)+-8]
 17656  017BA0  0E00               	movlw	0
 17657  017BA2  6E09               	movwf	(btemp+8)^0,c
 17658  017BA4  0E00               	movlw	0
 17659  017BA6  6E0A               	movwf	(btemp+9)^0,c
 17660  017BA8  0E00               	movlw	0
 17661  017BAA  6E0B               	movwf	(btemp+10)^0,c
 17662  017BAC  0E80               	movlw	128
 17663  017BAE  6E0C               	movwf	(btemp+11)^0,c
 17664  017BB0  0EF8               	movlw	-8
 17665  017BB2  50E3               	movf	plusw1,w,c
 17666  017BB4  5E09               	subwf	(btemp+8)^0,f,c
 17667  017BB6  0EF9               	movlw	-7
 17668  017BB8  50E3               	movf	plusw1,w,c
 17669  017BBA  5A0A               	subwfb	(btemp+9)^0,f,c
 17670  017BBC  0EFA               	movlw	-6
 17671  017BBE  50E3               	movf	plusw1,w,c
 17672  017BC0  5A0B               	subwfb	(btemp+10)^0,f,c
 17673  017BC2  0EFB               	movlw	-5
 17674  017BC4  50E3               	movf	plusw1,w,c
 17675  017BC6  5A0C               	subwfb	(btemp+11)^0,f,c
 17676                           
 17677                           ;stkvar	_ff2 @ sp[(0)+-8]
 17678  017BC8  0EF8               	movlw	-8
 17679  017BCA  0060  F027  FFE3   	movff	btemp+8,plusw1
 17680  017BD0  0EF9               	movlw	-7
 17681  017BD2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17682  017BD8  0EFA               	movlw	-6
 17683  017BDA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17684  017BE0  0EFB               	movlw	-5
 17685  017BE2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17686  017BE8                     l7979:
 17687                           
 17688                           ;stkvar	_ff1 @ sp[(0)+-4]
 17689  017BE8  0EFF               	movlw	-1
 17690  017BEA  7EE3               	btg	plusw1,7,c
 17691                           
 17692                           ;stkvar	_ff2 @ sp[(0)+-8]
 17693  017BEC  0EFB               	movlw	-5
 17694  017BEE  7EE3               	btg	plusw1,7,c
 17695                           
 17696                           ;stkvar	_ff2 @ sp[(0)+-8]
 17697                           ;stkvar	_ff1 @ sp[(0)+-4]
 17698  017BF0  50E1               	movf	fsr1l,w,c
 17699  017BF2  0FFC               	addlw	-4
 17700  017BF4  6ED9               	movwf	fsr2l,c
 17701  017BF6  50E2               	movf	fsr1h,w,c
 17702  017BF8  6EDA               	movwf	fsr2h,c
 17703  017BFA  0EFF               	movlw	255
 17704  017BFC  22DA               	addwfc	fsr2h,f,c
 17705  017BFE  0EF8               	movlw	-8
 17706  017C00  50E3               	movf	plusw1,w,c
 17707  017C02  5CDE               	subwf	postinc2,w,c
 17708  017C04  0EF9               	movlw	-7
 17709  017C06  50E3               	movf	plusw1,w,c
 17710  017C08  58DE               	subwfb	postinc2,w,c
 17711  017C0A  0EFA               	movlw	-6
 17712  017C0C  50E3               	movf	plusw1,w,c
 17713  017C0E  58DE               	subwfb	postinc2,w,c
 17714  017C10  0EFB               	movlw	-5
 17715  017C12  50E3               	movf	plusw1,w,c
 17716  017C14  58DE               	subwfb	postinc2,w,c
 17717  017C16  B0D8               	btfsc	status,0,c
 17718  017C18  D002               	goto	l7987
 17719  017C1A  9001               	bcf	btemp& (0+255),0,c
 17720  017C1C  D001               	goto	l2540
 17721  017C1E                     l7987:
 17722  017C1E  8001               	bsf	btemp& (0+255),0,c
 17723  017C20                     l2540:
 17724                           
 17725                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17726  017C20  0EF8               	movlw	248
 17727  017C22  26E1               	addwf	fsr1l,f,c
 17728  017C24  0EFF               	movlw	255
 17729  017C26  22E2               	addwfc	fsr1h,f,c
 17730  017C28  0012               	return		;funcret
 17731  017C2A                     __end_of___flge:
 17732                           	opt callstack 0
 17733                           
 17734 ;; *************** function ___fleq *****************
 17735 ;; Defined at:
 17736 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 17737 ;; Parameters:    Size  Location     Type
 17738 ;;  ff1             4  [STACK] long 
 17739 ;;  ff2             4  [STACK] long 
 17740 ;; Auto vars:     Size  Location     Type
 17741 ;;		None
 17742 ;; Return value:  Size  Location     Type
 17743 ;;		None               void
 17744 ;; Registers used:
 17745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17746 ;; Tracked objects:
 17747 ;;		On entry : 0/0
 17748 ;;		On exit  : 0/0
 17749 ;;		Unchanged: 0/0
 17750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17755 ;;Total ram usage:        0 bytes
 17756 ;; Hardware stack levels used:    1
 17757 ;; Hardware stack levels required when called:   15
 17758 ;; This function calls:
 17759 ;;		Nothing
 17760 ;; This function is called by:
 17761 ;;		_efgtoa
 17762 ;; This function uses a reentrant model
 17763 ;;
 17764                           
 17765                           	psect	text62
 17766  018C84                     __ptext62:
 17767                           	opt callstack 0
 17768  018C84                     ___fleq:
 17769                           	opt callstack 0
 17770                           
 17771                           ;stkvar	_ff1 @ sp[(0)+-4]
 17772                           
 17773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17774                           ;incstack = 0
 17775 ;; hardware stack exceeded
 17776  018C84  50E1               	movf	fsr1l,w,c
 17777  018C86  0FFC               	addlw	-4
 17778  018C88  6ED9               	movwf	fsr2l,c
 17779  018C8A  50E2               	movf	fsr1h,w,c
 17780  018C8C  6EDA               	movwf	fsr2h,c
 17781  018C8E  0EFF               	movlw	255
 17782  018C90  22DA               	addwfc	fsr2h,f,c
 17783  018C92  0E00               	movlw	0
 17784  018C94  14DE               	andwf	postinc2,w,c
 17785  018C96  6E09               	movwf	(btemp+8)^0,c
 17786  018C98  0E00               	movlw	0
 17787  018C9A  14DE               	andwf	postinc2,w,c
 17788  018C9C  6E0A               	movwf	(btemp+9)^0,c
 17789  018C9E  0E80               	movlw	128
 17790  018CA0  14DE               	andwf	postinc2,w,c
 17791  018CA2  6E0B               	movwf	(btemp+10)^0,c
 17792  018CA4  0E7F               	movlw	127
 17793  018CA6  14DE               	andwf	postinc2,w,c
 17794  018CA8  6E0C               	movwf	(btemp+11)^0,c
 17795  018CAA  5009               	movf	(btemp+8)^0,w,c
 17796  018CAC  100A               	iorwf	(btemp+9)^0,w,c
 17797  018CAE  100B               	iorwf	(btemp+10)^0,w,c
 17798  018CB0  100C               	iorwf	(btemp+11)^0,w,c
 17799  018CB2  A4D8               	btfss	status,2,c
 17800  018CB4  D008               	goto	l7953
 17801                           
 17802                           ;stkvar	_ff1 @ sp[(0)+-4]
 17803  018CB6  0EFC               	movlw	-4
 17804  018CB8  6AE3               	clrf	plusw1,c
 17805  018CBA  0EFD               	movlw	-3
 17806  018CBC  6AE3               	clrf	plusw1,c
 17807  018CBE  0EFE               	movlw	-2
 17808  018CC0  6AE3               	clrf	plusw1,c
 17809  018CC2  0EFF               	movlw	-1
 17810  018CC4  6AE3               	clrf	plusw1,c
 17811  018CC6                     l7953:
 17812                           
 17813                           ;stkvar	_ff2 @ sp[(0)+-8]
 17814  018CC6  50E1               	movf	fsr1l,w,c
 17815  018CC8  0FF8               	addlw	-8
 17816  018CCA  6ED9               	movwf	fsr2l,c
 17817  018CCC  50E2               	movf	fsr1h,w,c
 17818  018CCE  6EDA               	movwf	fsr2h,c
 17819  018CD0  0EFF               	movlw	255
 17820  018CD2  22DA               	addwfc	fsr2h,f,c
 17821  018CD4  0E00               	movlw	0
 17822  018CD6  14DE               	andwf	postinc2,w,c
 17823  018CD8  6E09               	movwf	(btemp+8)^0,c
 17824  018CDA  0E00               	movlw	0
 17825  018CDC  14DE               	andwf	postinc2,w,c
 17826  018CDE  6E0A               	movwf	(btemp+9)^0,c
 17827  018CE0  0E80               	movlw	128
 17828  018CE2  14DE               	andwf	postinc2,w,c
 17829  018CE4  6E0B               	movwf	(btemp+10)^0,c
 17830  018CE6  0E7F               	movlw	127
 17831  018CE8  14DE               	andwf	postinc2,w,c
 17832  018CEA  6E0C               	movwf	(btemp+11)^0,c
 17833  018CEC  5009               	movf	(btemp+8)^0,w,c
 17834  018CEE  100A               	iorwf	(btemp+9)^0,w,c
 17835  018CF0  100B               	iorwf	(btemp+10)^0,w,c
 17836  018CF2  100C               	iorwf	(btemp+11)^0,w,c
 17837  018CF4  A4D8               	btfss	status,2,c
 17838  018CF6  D008               	goto	l7957
 17839                           
 17840                           ;stkvar	_ff2 @ sp[(0)+-8]
 17841  018CF8  0EF8               	movlw	-8
 17842  018CFA  6AE3               	clrf	plusw1,c
 17843  018CFC  0EF9               	movlw	-7
 17844  018CFE  6AE3               	clrf	plusw1,c
 17845  018D00  0EFA               	movlw	-6
 17846  018D02  6AE3               	clrf	plusw1,c
 17847  018D04  0EFB               	movlw	-5
 17848  018D06  6AE3               	clrf	plusw1,c
 17849  018D08                     l7957:
 17850                           
 17851                           ;stkvar	_ff2 @ sp[(0)+-8]
 17852                           ;stkvar	_ff1 @ sp[(0)+-4]
 17853  018D08  50E1               	movf	fsr1l,w,c
 17854  018D0A  0FFC               	addlw	-4
 17855  018D0C  6ED9               	movwf	fsr2l,c
 17856  018D0E  50E2               	movf	fsr1h,w,c
 17857  018D10  6EDA               	movwf	fsr2h,c
 17858  018D12  0EFF               	movlw	255
 17859  018D14  22DA               	addwfc	fsr2h,f,c
 17860  018D16  0EF8               	movlw	-8
 17861  018D18  50E3               	movf	plusw1,w,c
 17862  018D1A  18DE               	xorwf	postinc2,w,c
 17863  018D1C  E10D               	bnz	u6720
 17864  018D1E  0EF9               	movlw	-7
 17865  018D20  50E3               	movf	plusw1,w,c
 17866  018D22  18DE               	xorwf	postinc2,w,c
 17867  018D24  E109               	bnz	u6720
 17868  018D26  0EFA               	movlw	-6
 17869  018D28  50E3               	movf	plusw1,w,c
 17870  018D2A  18DE               	xorwf	postinc2,w,c
 17871  018D2C  E105               	bnz	u6720
 17872  018D2E  0EFB               	movlw	-5
 17873  018D30  50E3               	movf	plusw1,w,c
 17874  018D32  18DE               	xorwf	postinc2,w,c
 17875  018D34  B4D8               	btfsc	status,2,c
 17876  018D36  D002               	goto	l7961
 17877  018D38                     u6720:
 17878  018D38  9001               	bcf	btemp& (0+255),0,c
 17879  018D3A  D001               	goto	l2529
 17880  018D3C                     l7961:
 17881  018D3C  8001               	bsf	btemp& (0+255),0,c
 17882  018D3E                     l2529:
 17883                           
 17884                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17885  018D3E  0EF8               	movlw	248
 17886  018D40  26E1               	addwf	fsr1l,f,c
 17887  018D42  0EFF               	movlw	255
 17888  018D44  22E2               	addwfc	fsr1h,f,c
 17889  018D46  0012               	return		;funcret
 17890  018D48                     __end_of___fleq:
 17891                           	opt callstack 0
 17892                           
 17893 ;; *************** function ___fldiv *****************
 17894 ;; Defined at:
 17895 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 17896 ;; Parameters:    Size  Location     Type
 17897 ;;  b               4  [STACK] long 
 17898 ;;  a               4  [STACK] long 
 17899 ;; Auto vars:     Size  Location     Type
 17900 ;;  grs             4  [STACK] unsigned long 
 17901 ;;  rem             4  [STACK] unsigned long 
 17902 ;;  new_exp         2  [STACK] short 
 17903 ;;  aexp            1  [STACK] unsigned char 
 17904 ;;  bexp            1  [STACK] unsigned char 
 17905 ;;  sign            1  [STACK] unsigned char 
 17906 ;; Return value:  Size  Location     Type
 17907 ;;                  4  [STACK] unsigned char 
 17908 ;; Registers used:
 17909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17910 ;; Tracked objects:
 17911 ;;		On entry : 0/1
 17912 ;;		On exit  : 0/0
 17913 ;;		Unchanged: 0/0
 17914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17919 ;;Total ram usage:        0 bytes
 17920 ;; Hardware stack levels used:    1
 17921 ;; Hardware stack levels required when called:   15
 17922 ;; This function calls:
 17923 ;;		Nothing
 17924 ;; This function is called by:
 17925 ;;		_conv_raw_result
 17926 ;;		_calc_bsoc
 17927 ;;		_init_bsoc
 17928 ;;		_efgtoa
 17929 ;; This function uses a reentrant model
 17930 ;;
 17931                           
 17932                           	psect	text63
 17933  01420A                     __ptext63:
 17934                           	opt callstack 0
 17935  01420A                     ___fldiv:
 17936                           	opt callstack 0
 17937                           
 17938                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17939  01420A  0E0D               	movlw	13
 17940  01420C  26E1               	addwf	fsr1l,f,c
 17941  01420E  0E00               	movlw	0
 17942  014210  22E2               	addwfc	fsr1h,f,c
 17943                           
 17944                           ;stkvar	_b @ sp[(-13)+-4]
 17945                           
 17946                           ;incstack = 0
 17947 ;; hardware stack exceeded
 17948  014212  0EF2               	movlw	242
 17949  014214  24E1               	addwf	fsr1l,w,c
 17950  014216  6ED9               	movwf	fsr2l,c
 17951  014218  0EFF               	movlw	255
 17952  01421A  20E2               	addwfc	fsr1h,w,c
 17953  01421C  6EDA               	movwf	fsr2h,c
 17954  01421E  50DF               	movf	indf2,w,c
 17955  014220  6E0C               	movwf	(btemp+11)^0,c
 17956  014222  0E80               	movlw	128
 17957  014224  160C               	andwf	(btemp+11)^0,f,c
 17958                           
 17959                           ;stkvar	_sign @ sp[(-13)+12]
 17960  014226  0EFF               	movlw	-1
 17961  014228  0060  F033  FFE3   	movff	btemp+11,plusw1
 17962                           
 17963                           ;stkvar	_b @ sp[(-13)+-4]
 17964  01422E  0EF2               	movlw	242
 17965  014230  24E1               	addwf	fsr1l,w,c
 17966  014232  6ED9               	movwf	fsr2l,c
 17967  014234  0EFF               	movlw	255
 17968  014236  20E2               	addwfc	fsr1h,w,c
 17969  014238  6EDA               	movwf	fsr2h,c
 17970  01423A  50DF               	movf	indf2,w,c
 17971  01423C  6E0C               	movwf	(btemp+11)^0,c
 17972  01423E  90D8               	bcf	status,0,c
 17973  014240  340C               	rlcf	(btemp+11)^0,w,c
 17974  014242  6E0B               	movwf	(btemp+10)^0,c
 17975                           
 17976                           ;stkvar	_bexp @ sp[(-13)+11]
 17977  014244  0EFE               	movlw	-2
 17978  014246  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17979                           
 17980                           ;stkvar	_b @ sp[(-13)+-4]
 17981  01424C  0EF1               	movlw	241
 17982  01424E  24E1               	addwf	fsr1l,w,c
 17983  014250  6ED9               	movwf	fsr2l,c
 17984  014252  0EFF               	movlw	255
 17985  014254  20E2               	addwfc	fsr1h,w,c
 17986  014256  6EDA               	movwf	fsr2h,c
 17987  014258  AEDF               	btfss	indf2,7,c
 17988  01425A  D002               	goto	l7555
 17989                           
 17990                           ;stkvar	_bexp @ sp[(-13)+11]
 17991  01425C  0EFE               	movlw	-2
 17992  01425E  80E3               	bsf	plusw1,0,c
 17993  014260                     l7555:
 17994                           
 17995                           ;stkvar	_bexp @ sp[(-13)+11]
 17996  014260  0EFE               	movlw	-2
 17997  014262  50E3               	movf	plusw1,w,c
 17998  014264  B4D8               	btfsc	status,2,c
 17999  014266  D027               	goto	l7565
 18000                           
 18001                           ;stkvar	_bexp @ sp[(-13)+11]
 18002  014268  0EFE               	movlw	-2
 18003  01426A  28E3               	incf	plusw1,w,c
 18004  01426C  A4D8               	btfss	status,2,c
 18005  01426E  D018               	goto	l7561
 18006  014270  0E00               	movlw	0
 18007  014272  6E09               	movwf	(btemp+8)^0,c
 18008  014274  0E00               	movlw	0
 18009  014276  6E0A               	movwf	(btemp+9)^0,c
 18010  014278  0E00               	movlw	0
 18011  01427A  6E0B               	movwf	(btemp+10)^0,c
 18012  01427C  0E00               	movlw	0
 18013  01427E  6E0C               	movwf	(btemp+11)^0,c
 18014                           
 18015                           ;stkvar	_b @ sp[(-13)+-4]
 18016  014280  0EEF               	movlw	-17
 18017  014282  0060  F027  FFE3   	movff	btemp+8,plusw1
 18018  014288  0EF0               	movlw	-16
 18019  01428A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18020  014290  0EF1               	movlw	-15
 18021  014292  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18022  014298  0EF2               	movlw	-14
 18023  01429A  0060  F033  FFE3   	movff	btemp+11,plusw1
 18024  0142A0                     l7561:
 18025                           
 18026                           ;stkvar	_b @ sp[(-13)+-4]
 18027  0142A0  0EF1               	movlw	-15
 18028  0142A2  8EE3               	bsf	plusw1,7,c
 18029                           
 18030                           ;stkvar	_b @ sp[(-13)+-4]
 18031  0142A4  0EF2               	movlw	242
 18032  0142A6  24E1               	addwf	fsr1l,w,c
 18033  0142A8  6ED9               	movwf	fsr2l,c
 18034  0142AA  0EFF               	movlw	255
 18035  0142AC  20E2               	addwfc	fsr1h,w,c
 18036  0142AE  6EDA               	movwf	fsr2h,c
 18037  0142B0  0E00               	movlw	0
 18038  0142B2  6EDF               	movwf	indf2,c
 18039  0142B4  D018               	goto	l7567
 18040  0142B6                     l7565:
 18041  0142B6  0E00               	movlw	0
 18042  0142B8  6E09               	movwf	(btemp+8)^0,c
 18043  0142BA  0E00               	movlw	0
 18044  0142BC  6E0A               	movwf	(btemp+9)^0,c
 18045  0142BE  0E00               	movlw	0
 18046  0142C0  6E0B               	movwf	(btemp+10)^0,c
 18047  0142C2  0E00               	movlw	0
 18048  0142C4  6E0C               	movwf	(btemp+11)^0,c
 18049                           
 18050                           ;stkvar	_b @ sp[(-13)+-4]
 18051  0142C6  0EEF               	movlw	-17
 18052  0142C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 18053  0142CE  0EF0               	movlw	-16
 18054  0142D0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18055  0142D6  0EF1               	movlw	-15
 18056  0142D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18057  0142DE  0EF2               	movlw	-14
 18058  0142E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 18059  0142E6                     l7567:
 18060                           
 18061                           ;stkvar	_a @ sp[(-13)+-8]
 18062  0142E6  0EEE               	movlw	238
 18063  0142E8  24E1               	addwf	fsr1l,w,c
 18064  0142EA  6ED9               	movwf	fsr2l,c
 18065  0142EC  0EFF               	movlw	255
 18066  0142EE  20E2               	addwfc	fsr1h,w,c
 18067  0142F0  6EDA               	movwf	fsr2h,c
 18068  0142F2  50DF               	movf	indf2,w,c
 18069  0142F4  6E0C               	movwf	(btemp+11)^0,c
 18070  0142F6  0E80               	movlw	128
 18071  0142F8  160C               	andwf	(btemp+11)^0,f,c
 18072                           
 18073                           ;stkvar	_sign @ sp[(-13)+12]
 18074  0142FA  50E1               	movf	fsr1l,w,c
 18075  0142FC  0FFF               	addlw	-1
 18076  0142FE  6ED9               	movwf	fsr2l,c
 18077  014300  50E2               	movf	fsr1h,w,c
 18078  014302  6EDA               	movwf	fsr2h,c
 18079  014304  0EFF               	movlw	255
 18080  014306  22DA               	addwfc	fsr2h,f,c
 18081  014308  500C               	movf	(btemp+11)^0,w,c
 18082  01430A  1ADF               	xorwf	indf2,f,c
 18083                           
 18084                           ;stkvar	_a @ sp[(-13)+-8]
 18085  01430C  0EEE               	movlw	238
 18086  01430E  24E1               	addwf	fsr1l,w,c
 18087  014310  6ED9               	movwf	fsr2l,c
 18088  014312  0EFF               	movlw	255
 18089  014314  20E2               	addwfc	fsr1h,w,c
 18090  014316  6EDA               	movwf	fsr2h,c
 18091  014318  50DF               	movf	indf2,w,c
 18092  01431A  6E0C               	movwf	(btemp+11)^0,c
 18093  01431C  90D8               	bcf	status,0,c
 18094  01431E  340C               	rlcf	(btemp+11)^0,w,c
 18095  014320  6E0B               	movwf	(btemp+10)^0,c
 18096                           
 18097                           ;stkvar	_aexp @ sp[(-13)+10]
 18098  014322  0EFD               	movlw	-3
 18099  014324  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18100                           
 18101                           ;stkvar	_a @ sp[(-13)+-8]
 18102  01432A  0EED               	movlw	237
 18103  01432C  24E1               	addwf	fsr1l,w,c
 18104  01432E  6ED9               	movwf	fsr2l,c
 18105  014330  0EFF               	movlw	255
 18106  014332  20E2               	addwfc	fsr1h,w,c
 18107  014334  6EDA               	movwf	fsr2h,c
 18108  014336  AEDF               	btfss	indf2,7,c
 18109  014338  D002               	goto	l7575
 18110                           
 18111                           ;stkvar	_aexp @ sp[(-13)+10]
 18112  01433A  0EFD               	movlw	-3
 18113  01433C  80E3               	bsf	plusw1,0,c
 18114  01433E                     l7575:
 18115                           
 18116                           ;stkvar	_aexp @ sp[(-13)+10]
 18117  01433E  0EFD               	movlw	-3
 18118  014340  50E3               	movf	plusw1,w,c
 18119  014342  B4D8               	btfsc	status,2,c
 18120  014344  D027               	goto	l7585
 18121                           
 18122                           ;stkvar	_aexp @ sp[(-13)+10]
 18123  014346  0EFD               	movlw	-3
 18124  014348  28E3               	incf	plusw1,w,c
 18125  01434A  A4D8               	btfss	status,2,c
 18126  01434C  D018               	goto	l7581
 18127  01434E  0E00               	movlw	0
 18128  014350  6E09               	movwf	(btemp+8)^0,c
 18129  014352  0E00               	movlw	0
 18130  014354  6E0A               	movwf	(btemp+9)^0,c
 18131  014356  0E00               	movlw	0
 18132  014358  6E0B               	movwf	(btemp+10)^0,c
 18133  01435A  0E00               	movlw	0
 18134  01435C  6E0C               	movwf	(btemp+11)^0,c
 18135                           
 18136                           ;stkvar	_a @ sp[(-13)+-8]
 18137  01435E  0EEB               	movlw	-21
 18138  014360  0060  F027  FFE3   	movff	btemp+8,plusw1
 18139  014366  0EEC               	movlw	-20
 18140  014368  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18141  01436E  0EED               	movlw	-19
 18142  014370  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18143  014376  0EEE               	movlw	-18
 18144  014378  0060  F033  FFE3   	movff	btemp+11,plusw1
 18145  01437E                     l7581:
 18146                           
 18147                           ;stkvar	_a @ sp[(-13)+-8]
 18148  01437E  0EED               	movlw	-19
 18149  014380  8EE3               	bsf	plusw1,7,c
 18150                           
 18151                           ;stkvar	_a @ sp[(-13)+-8]
 18152  014382  0EEE               	movlw	238
 18153  014384  24E1               	addwf	fsr1l,w,c
 18154  014386  6ED9               	movwf	fsr2l,c
 18155  014388  0EFF               	movlw	255
 18156  01438A  20E2               	addwfc	fsr1h,w,c
 18157  01438C  6EDA               	movwf	fsr2h,c
 18158  01438E  0E00               	movlw	0
 18159  014390  6EDF               	movwf	indf2,c
 18160  014392  D018               	goto	l7587
 18161  014394                     l7585:
 18162  014394  0E00               	movlw	0
 18163  014396  6E09               	movwf	(btemp+8)^0,c
 18164  014398  0E00               	movlw	0
 18165  01439A  6E0A               	movwf	(btemp+9)^0,c
 18166  01439C  0E00               	movlw	0
 18167  01439E  6E0B               	movwf	(btemp+10)^0,c
 18168  0143A0  0E00               	movlw	0
 18169  0143A2  6E0C               	movwf	(btemp+11)^0,c
 18170                           
 18171                           ;stkvar	_a @ sp[(-13)+-8]
 18172  0143A4  0EEB               	movlw	-21
 18173  0143A6  0060  F027  FFE3   	movff	btemp+8,plusw1
 18174  0143AC  0EEC               	movlw	-20
 18175  0143AE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18176  0143B4  0EED               	movlw	-19
 18177  0143B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18178  0143BC  0EEE               	movlw	-18
 18179  0143BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 18180  0143C4                     l7587:
 18181                           
 18182                           ;stkvar	_a @ sp[(-13)+-8]
 18183  0143C4  0EEB               	movlw	-21
 18184  0143C6  50E3               	movf	plusw1,w,c
 18185  0143C8  E139               	bnz	l7599
 18186  0143CA  0EEC               	movlw	-20
 18187  0143CC  50E3               	movf	plusw1,w,c
 18188  0143CE  E136               	bnz	l7599
 18189  0143D0  0EED               	movlw	-19
 18190  0143D2  50E3               	movf	plusw1,w,c
 18191  0143D4  E133               	bnz	l7599
 18192  0143D6  0EEE               	movlw	-18
 18193  0143D8  50E3               	movf	plusw1,w,c
 18194  0143DA  A4D8               	btfss	status,2,c
 18195  0143DC  D02F               	goto	l7599
 18196                           
 18197                           ;stkvar	_b @ sp[(-13)+-4]
 18198  0143DE  0EEF               	movlw	-17
 18199  0143E0  6AE3               	clrf	plusw1,c
 18200  0143E2  0EF0               	movlw	-16
 18201  0143E4  6AE3               	clrf	plusw1,c
 18202  0143E6  0EF1               	movlw	-15
 18203  0143E8  6AE3               	clrf	plusw1,c
 18204  0143EA  0EF2               	movlw	-14
 18205  0143EC  6AE3               	clrf	plusw1,c
 18206                           
 18207                           ;stkvar	_b @ sp[(-13)+-4]
 18208  0143EE  0EF1               	movlw	241
 18209  0143F0  24E1               	addwf	fsr1l,w,c
 18210  0143F2  6ED9               	movwf	fsr2l,c
 18211  0143F4  0EFF               	movlw	255
 18212  0143F6  20E2               	addwfc	fsr1h,w,c
 18213  0143F8  6EDA               	movwf	fsr2h,c
 18214  0143FA  0E80               	movlw	128
 18215  0143FC  12DE               	iorwf	postinc2,f,c
 18216  0143FE  0E7F               	movlw	127
 18217  014400  12DD               	iorwf	postdec2,f,c
 18218  014402                     l7593:
 18219                           
 18220                           ;stkvar	_sign @ sp[(-13)+12]
 18221  014402  0EFF               	movlw	-1
 18222  014404  006F FF8C  F00C    	movff	plusw1,btemp+11
 18223                           
 18224                           ;stkvar	_b @ sp[(-13)+-4]
 18225  01440A  0EF2               	movlw	242
 18226  01440C  24E1               	addwf	fsr1l,w,c
 18227  01440E  6ED9               	movwf	fsr2l,c
 18228  014410  0EFF               	movlw	255
 18229  014412  20E2               	addwfc	fsr1h,w,c
 18230  014414  6EDA               	movwf	fsr2h,c
 18231  014416  500C               	movf	(btemp+11)^0,w,c
 18232  014418  12DF               	iorwf	indf2,f,c
 18233                           
 18234                           ;stkvar	_b @ sp[(-13)+-4]
 18235  01441A  0EEF               	movlw	-17
 18236  01441C  006F FF8C  F001    	movff	plusw1,btemp
 18237  014422  0EF0               	movlw	-16
 18238  014424  006F FF8C  F002    	movff	plusw1,btemp+1
 18239  01442A  0EF1               	movlw	-15
 18240  01442C  006F FF8C  F003    	movff	plusw1,btemp+2
 18241  014432  0EF2               	movlw	-14
 18242  014434  006F FF8C  F004    	movff	plusw1,btemp+3
 18243  01443A  D19F               	goto	l2852
 18244  01443C                     l7599:
 18245                           
 18246                           ;stkvar	_bexp @ sp[(-13)+11]
 18247  01443C  0EFE               	movlw	-2
 18248  01443E  50E3               	movf	plusw1,w,c
 18249  014440  A4D8               	btfss	status,2,c
 18250  014442  D009               	goto	l7607
 18251  014444  0E00               	movlw	0
 18252  014446  6E01               	movwf	btemp^0,c
 18253  014448  0E00               	movlw	0
 18254  01444A  6E02               	movwf	(btemp+1)^0,c
 18255  01444C  0E00               	movlw	0
 18256  01444E  6E03               	movwf	(btemp+2)^0,c
 18257  014450  0E00               	movlw	0
 18258  014452  6E04               	movwf	(btemp+3)^0,c
 18259  014454  D192               	goto	l2852
 18260  014456                     l7607:
 18261                           
 18262                           ;stkvar	_bexp @ sp[(-13)+11]
 18263  014456  0EFE               	movlw	-2
 18264  014458  50E3               	movf	plusw1,w,c
 18265  01445A  6E0B               	movwf	(btemp+10)^0,c
 18266  01445C  6A0C               	clrf	(btemp+11)^0,c
 18267                           
 18268                           ;stkvar	_aexp @ sp[(-13)+10]
 18269  01445E  0EFD               	movlw	-3
 18270  014460  50E3               	movf	plusw1,w,c
 18271  014462  5E0B               	subwf	(btemp+10)^0,f,c
 18272  014464  0E00               	movlw	0
 18273  014466  5A0C               	subwfb	(btemp+11)^0,f,c
 18274  014468  0E7F               	movlw	127
 18275  01446A  260B               	addwf	(btemp+10)^0,f,c
 18276  01446C  0E00               	movlw	0
 18277  01446E  220C               	addwfc	(btemp+11)^0,f,c
 18278                           
 18279                           ;stkvar	_new_exp @ sp[(-13)+8]
 18280  014470  0EFB               	movlw	-5
 18281  014472  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18282  014478  0EFC               	movlw	-4
 18283  01447A  0060  F033  FFE3   	movff	btemp+11,plusw1
 18284                           
 18285                           ;stkvar	_b @ sp[(-13)+-4]
 18286  014480  0EEF               	movlw	-17
 18287  014482  006F FF8C  F009    	movff	plusw1,btemp+8
 18288  014488  0EF0               	movlw	-16
 18289  01448A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18290  014490  0EF1               	movlw	-15
 18291  014492  006F FF8C  F00B    	movff	plusw1,btemp+10
 18292  014498  0EF2               	movlw	-14
 18293  01449A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18294                           
 18295                           ;stkvar	_rem @ sp[(-13)+4]
 18296  0144A0  0EF7               	movlw	-9
 18297  0144A2  0060  F027  FFE3   	movff	btemp+8,plusw1
 18298  0144A8  0EF8               	movlw	-8
 18299  0144AA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18300  0144B0  0EF9               	movlw	-7
 18301  0144B2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18302  0144B8  0EFA               	movlw	-6
 18303  0144BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18304                           
 18305                           ;stkvar	_b @ sp[(-13)+-4]
 18306  0144C0  0EEF               	movlw	-17
 18307  0144C2  6AE3               	clrf	plusw1,c
 18308  0144C4  0EF0               	movlw	-16
 18309  0144C6  6AE3               	clrf	plusw1,c
 18310  0144C8  0EF1               	movlw	-15
 18311  0144CA  6AE3               	clrf	plusw1,c
 18312  0144CC  0EF2               	movlw	-14
 18313  0144CE  6AE3               	clrf	plusw1,c
 18314                           
 18315                           ;stkvar	_grs @ sp[(-13)+0]
 18316  0144D0  0EF3               	movlw	-13
 18317  0144D2  6AE3               	clrf	plusw1,c
 18318  0144D4  0EF4               	movlw	-12
 18319  0144D6  6AE3               	clrf	plusw1,c
 18320  0144D8  0EF5               	movlw	-11
 18321  0144DA  6AE3               	clrf	plusw1,c
 18322  0144DC  0EF6               	movlw	-10
 18323  0144DE  6AE3               	clrf	plusw1,c
 18324                           
 18325                           ;stkvar	_aexp @ sp[(-13)+10]
 18326  0144E0  0EFD               	movlw	-3
 18327  0144E2  6AE3               	clrf	plusw1,c
 18328  0144E4  D050               	goto	l7635
 18329  0144E6                     l7617:
 18330                           
 18331                           ;stkvar	_aexp @ sp[(-13)+10]
 18332  0144E6  0EFD               	movlw	-3
 18333  0144E8  50E3               	movf	plusw1,w,c
 18334  0144EA  B4D8               	btfsc	status,2,c
 18335  0144EC  D020               	goto	l7627
 18336                           
 18337                           ;stkvar	_rem @ sp[(-13)+4]
 18338  0144EE  90D8               	bcf	status,0,c
 18339  0144F0  0EF7               	movlw	-9
 18340  0144F2  36E3               	rlcf	plusw1,f,c
 18341  0144F4  0EF8               	movlw	-8
 18342  0144F6  36E3               	rlcf	plusw1,f,c
 18343  0144F8  0EF9               	movlw	-7
 18344  0144FA  36E3               	rlcf	plusw1,f,c
 18345  0144FC  0EFA               	movlw	-6
 18346  0144FE  36E3               	rlcf	plusw1,f,c
 18347                           
 18348                           ;stkvar	_b @ sp[(-13)+-4]
 18349  014500  90D8               	bcf	status,0,c
 18350  014502  0EEF               	movlw	-17
 18351  014504  36E3               	rlcf	plusw1,f,c
 18352  014506  0EF0               	movlw	-16
 18353  014508  36E3               	rlcf	plusw1,f,c
 18354  01450A  0EF1               	movlw	-15
 18355  01450C  36E3               	rlcf	plusw1,f,c
 18356  01450E  0EF2               	movlw	-14
 18357  014510  36E3               	rlcf	plusw1,f,c
 18358                           
 18359                           ;stkvar	_grs @ sp[(-13)+0]
 18360  014512  0EF6               	movlw	-10
 18361  014514  AEE3               	btfss	plusw1,7,c
 18362  014516  D002               	goto	l7625
 18363                           
 18364                           ;stkvar	_b @ sp[(-13)+-4]
 18365  014518  0EEF               	movlw	-17
 18366  01451A  80E3               	bsf	plusw1,0,c
 18367  01451C                     l7625:
 18368                           
 18369                           ;stkvar	_grs @ sp[(-13)+0]
 18370  01451C  90D8               	bcf	status,0,c
 18371  01451E  0EF3               	movlw	-13
 18372  014520  36E3               	rlcf	plusw1,f,c
 18373  014522  0EF4               	movlw	-12
 18374  014524  36E3               	rlcf	plusw1,f,c
 18375  014526  0EF5               	movlw	-11
 18376  014528  36E3               	rlcf	plusw1,f,c
 18377  01452A  0EF6               	movlw	-10
 18378  01452C  36E3               	rlcf	plusw1,f,c
 18379  01452E                     l7627:
 18380                           
 18381                           ;stkvar	_a @ sp[(-13)+-8]
 18382                           ;stkvar	_rem @ sp[(-13)+4]
 18383  01452E  50E1               	movf	fsr1l,w,c
 18384  014530  0FF7               	addlw	-9
 18385  014532  6ED9               	movwf	fsr2l,c
 18386  014534  50E2               	movf	fsr1h,w,c
 18387  014536  6EDA               	movwf	fsr2h,c
 18388  014538  0EFF               	movlw	255
 18389  01453A  22DA               	addwfc	fsr2h,f,c
 18390  01453C  0EEB               	movlw	-21
 18391  01453E  50E3               	movf	plusw1,w,c
 18392  014540  5CDE               	subwf	postinc2,w,c
 18393  014542  0EEC               	movlw	-20
 18394  014544  50E3               	movf	plusw1,w,c
 18395  014546  58DE               	subwfb	postinc2,w,c
 18396  014548  0EED               	movlw	-19
 18397  01454A  50E3               	movf	plusw1,w,c
 18398  01454C  58DE               	subwfb	postinc2,w,c
 18399  01454E  0EEE               	movlw	-18
 18400  014550  50E3               	movf	plusw1,w,c
 18401  014552  58DE               	subwfb	postinc2,w,c
 18402  014554  A0D8               	btfss	status,0,c
 18403  014556  D015               	goto	l7633
 18404                           
 18405                           ;stkvar	_grs @ sp[(-13)+0]
 18406  014558  0EF6               	movlw	-10
 18407  01455A  8CE3               	bsf	plusw1,6,c
 18408                           
 18409                           ;stkvar	_a @ sp[(-13)+-8]
 18410                           ;stkvar	_rem @ sp[(-13)+4]
 18411  01455C  50E1               	movf	fsr1l,w,c
 18412  01455E  0FF7               	addlw	-9
 18413  014560  6ED9               	movwf	fsr2l,c
 18414  014562  50E2               	movf	fsr1h,w,c
 18415  014564  6EDA               	movwf	fsr2h,c
 18416  014566  0EFF               	movlw	255
 18417  014568  22DA               	addwfc	fsr2h,f,c
 18418  01456A  0EEB               	movlw	-21
 18419  01456C  50E3               	movf	plusw1,w,c
 18420  01456E  5EDE               	subwf	postinc2,f,c
 18421  014570  0EEC               	movlw	-20
 18422  014572  50E3               	movf	plusw1,w,c
 18423  014574  5ADE               	subwfb	postinc2,f,c
 18424  014576  0EED               	movlw	-19
 18425  014578  50E3               	movf	plusw1,w,c
 18426  01457A  5ADE               	subwfb	postinc2,f,c
 18427  01457C  0EEE               	movlw	-18
 18428  01457E  50E3               	movf	plusw1,w,c
 18429  014580  5ADE               	subwfb	postinc2,f,c
 18430  014582                     l7633:
 18431                           
 18432                           ;stkvar	_aexp @ sp[(-13)+10]
 18433  014582  0EFD               	movlw	-3
 18434  014584  2AE3               	incf	plusw1,f,c
 18435  014586                     l7635:
 18436                           
 18437                           ;stkvar	_aexp @ sp[(-13)+10]
 18438  014586  0EFD               	movlw	-3
 18439  014588  006F FF8C  F001    	movff	plusw1,btemp
 18440  01458E  0E19               	movlw	25
 18441  014590  6401               	cpfsgt	btemp^0,c
 18442  014592  D7A9               	goto	l7617
 18443                           
 18444                           ;stkvar	_rem @ sp[(-13)+4]
 18445  014594  0EF7               	movlw	-9
 18446  014596  50E3               	movf	plusw1,w,c
 18447  014598  E10A               	bnz	u6220
 18448  01459A  0EF8               	movlw	-8
 18449  01459C  50E3               	movf	plusw1,w,c
 18450  01459E  E107               	bnz	u6220
 18451  0145A0  0EF9               	movlw	-7
 18452  0145A2  50E3               	movf	plusw1,w,c
 18453  0145A4  E104               	bnz	u6220
 18454  0145A6  0EFA               	movlw	-6
 18455  0145A8  50E3               	movf	plusw1,w,c
 18456  0145AA  B4D8               	btfsc	status,2,c
 18457  0145AC  D024               	goto	l7651
 18458  0145AE                     u6220:
 18459                           
 18460                           ;stkvar	_grs @ sp[(-13)+0]
 18461  0145AE  0EF3               	movlw	-13
 18462  0145B0  80E3               	bsf	plusw1,0,c
 18463  0145B2  D021               	goto	l7651
 18464  0145B4                     l7641:
 18465                           
 18466                           ;stkvar	_b @ sp[(-13)+-4]
 18467  0145B4  90D8               	bcf	status,0,c
 18468  0145B6  0EEF               	movlw	-17
 18469  0145B8  36E3               	rlcf	plusw1,f,c
 18470  0145BA  0EF0               	movlw	-16
 18471  0145BC  36E3               	rlcf	plusw1,f,c
 18472  0145BE  0EF1               	movlw	-15
 18473  0145C0  36E3               	rlcf	plusw1,f,c
 18474  0145C2  0EF2               	movlw	-14
 18475  0145C4  36E3               	rlcf	plusw1,f,c
 18476                           
 18477                           ;stkvar	_grs @ sp[(-13)+0]
 18478  0145C6  0EF6               	movlw	-10
 18479  0145C8  AEE3               	btfss	plusw1,7,c
 18480  0145CA  D002               	goto	l7647
 18481                           
 18482                           ;stkvar	_b @ sp[(-13)+-4]
 18483  0145CC  0EEF               	movlw	-17
 18484  0145CE  80E3               	bsf	plusw1,0,c
 18485  0145D0                     l7647:
 18486                           
 18487                           ;stkvar	_grs @ sp[(-13)+0]
 18488  0145D0  90D8               	bcf	status,0,c
 18489  0145D2  0EF3               	movlw	-13
 18490  0145D4  36E3               	rlcf	plusw1,f,c
 18491  0145D6  0EF4               	movlw	-12
 18492  0145D8  36E3               	rlcf	plusw1,f,c
 18493  0145DA  0EF5               	movlw	-11
 18494  0145DC  36E3               	rlcf	plusw1,f,c
 18495  0145DE  0EF6               	movlw	-10
 18496  0145E0  36E3               	rlcf	plusw1,f,c
 18497                           
 18498                           ;stkvar	_new_exp @ sp[(-13)+8]
 18499  0145E2  50E1               	movf	fsr1l,w,c
 18500  0145E4  0FFB               	addlw	-5
 18501  0145E6  6ED9               	movwf	fsr2l,c
 18502  0145E8  50E2               	movf	fsr1h,w,c
 18503  0145EA  6EDA               	movwf	fsr2h,c
 18504  0145EC  0EFF               	movlw	255
 18505  0145EE  22DA               	addwfc	fsr2h,f,c
 18506  0145F0  06DE               	decf	postinc2,f,c
 18507  0145F2  0E00               	movlw	0
 18508  0145F4  5ADD               	subwfb	postdec2,f,c
 18509  0145F6                     l7651:
 18510                           
 18511                           ;stkvar	_b @ sp[(-13)+-4]
 18512  0145F6  0EF1               	movlw	-15
 18513  0145F8  AEE3               	btfss	plusw1,7,c
 18514  0145FA  D7DC               	goto	l7641
 18515                           
 18516                           ;stkvar	_aexp @ sp[(-13)+10]
 18517  0145FC  0EFD               	movlw	-3
 18518  0145FE  6AE3               	clrf	plusw1,c
 18519                           
 18520                           ;stkvar	_grs @ sp[(-13)+0]
 18521  014600  0EF6               	movlw	-10
 18522  014602  AEE3               	btfss	plusw1,7,c
 18523  014604  D020               	goto	l7665
 18524                           
 18525                           ;stkvar	_grs @ sp[(-13)+0]
 18526  014606  50E1               	movf	fsr1l,w,c
 18527  014608  0FF3               	addlw	-13
 18528  01460A  6ED9               	movwf	fsr2l,c
 18529  01460C  50E2               	movf	fsr1h,w,c
 18530  01460E  6EDA               	movwf	fsr2h,c
 18531  014610  0EFF               	movlw	255
 18532  014612  22DA               	addwfc	fsr2h,f,c
 18533  014614  0EFF               	movlw	255
 18534  014616  14DE               	andwf	postinc2,w,c
 18535  014618  6E09               	movwf	(btemp+8)^0,c
 18536  01461A  0EFF               	movlw	255
 18537  01461C  14DE               	andwf	postinc2,w,c
 18538  01461E  6E0A               	movwf	(btemp+9)^0,c
 18539  014620  0EFF               	movlw	255
 18540  014622  14DE               	andwf	postinc2,w,c
 18541  014624  6E0B               	movwf	(btemp+10)^0,c
 18542  014626  0E7F               	movlw	127
 18543  014628  14DE               	andwf	postinc2,w,c
 18544  01462A  6E0C               	movwf	(btemp+11)^0,c
 18545  01462C  5009               	movf	(btemp+8)^0,w,c
 18546  01462E  100A               	iorwf	(btemp+9)^0,w,c
 18547  014630  100B               	iorwf	(btemp+10)^0,w,c
 18548  014632  100C               	iorwf	(btemp+11)^0,w,c
 18549  014634  B4D8               	btfsc	status,2,c
 18550  014636  D004               	goto	l7661
 18551  014638                     u6260:
 18552                           
 18553                           ;stkvar	_aexp @ sp[(-13)+10]
 18554  014638  0EFD               	movlw	-3
 18555  01463A  6AE3               	clrf	plusw1,c
 18556  01463C  2AE3               	incf	plusw1,f,c
 18557  01463E  D003               	goto	l7665
 18558  014640                     l7661:
 18559                           
 18560                           ;stkvar	_b @ sp[(-13)+-4]
 18561  014640  0EEF               	movlw	-17
 18562  014642  B0E3               	btfsc	plusw1,0,c
 18563  014644  D7F9               	goto	u6260
 18564  014646                     l7665:
 18565                           
 18566                           ;stkvar	_aexp @ sp[(-13)+10]
 18567  014646  0EFD               	movlw	-3
 18568  014648  50E3               	movf	plusw1,w,c
 18569  01464A  B4D8               	btfsc	status,2,c
 18570  01464C  D036               	goto	l7675
 18571                           
 18572                           ;stkvar	_b @ sp[(-13)+-4]
 18573  01464E  50E1               	movf	fsr1l,w,c
 18574  014650  0FEF               	addlw	-17
 18575  014652  6ED9               	movwf	fsr2l,c
 18576  014654  50E2               	movf	fsr1h,w,c
 18577  014656  6EDA               	movwf	fsr2h,c
 18578  014658  0EFF               	movlw	255
 18579  01465A  22DA               	addwfc	fsr2h,f,c
 18580  01465C  2ADE               	incf	postinc2,f,c
 18581  01465E  0E00               	movlw	0
 18582  014660  22DE               	addwfc	postinc2,f,c
 18583  014662  22DE               	addwfc	postinc2,f,c
 18584  014664  22DE               	addwfc	postinc2,f,c
 18585                           
 18586                           ;stkvar	_b @ sp[(-13)+-4]
 18587  014666  0EF2               	movlw	-14
 18588  014668  A0E3               	btfss	plusw1,0,c
 18589  01466A  D027               	goto	l7675
 18590  01466C  0E01               	movlw	1
 18591  01466E  6E0C               	movwf	(btemp+11)^0,c
 18592                           
 18593                           ;stkvar	_b @ sp[(-13)+-4]
 18594  014670  50E1               	movf	fsr1l,w,c
 18595  014672  0FEF               	addlw	-17
 18596  014674  6ED9               	movwf	fsr2l,c
 18597  014676  50E2               	movf	fsr1h,w,c
 18598  014678  6EDA               	movwf	fsr2h,c
 18599  01467A  0EFF               	movlw	255
 18600  01467C  22DA               	addwfc	fsr2h,f,c
 18601  01467E  280C               	incf	(btemp+11)^0,w,c
 18602  014680  52DE               	movf	postinc2,f,c
 18603  014682  D008               	goto	u6300
 18604  014684                     u6305:
 18605  014684  52DE               	movf	postinc2,f,c
 18606  014686  90D8               	bcf	status,0,c
 18607  014688  BEDC               	btfsc	preinc2,7,c
 18608  01468A  80D8               	bsf	status,0,c
 18609  01468C  32DD               	rrcf	postdec2,f,c
 18610  01468E  32DD               	rrcf	postdec2,f,c
 18611  014690  32DD               	rrcf	postdec2,f,c
 18612  014692  32DE               	rrcf	postinc2,f,c
 18613  014694                     u6300:
 18614  014694  2EE8               	decfsz	wreg,f,c
 18615  014696  D7F6               	goto	u6305
 18616                           
 18617                           ;stkvar	_new_exp @ sp[(-13)+8]
 18618  014698  0EFB               	movlw	-5
 18619  01469A  50E3               	movf	plusw1,w,c
 18620  01469C  0F01               	addlw	1
 18621  01469E  6E01               	movwf	btemp^0,c
 18622  0146A0  0EFB               	movlw	-5
 18623  0146A2  0060  F007  FFE3   	movff	btemp,plusw1
 18624  0146A8  6A01               	clrf	btemp^0,c
 18625  0146AA  0EFC               	movlw	-4
 18626  0146AC  50E3               	movf	plusw1,w,c
 18627  0146AE  2001               	addwfc	btemp^0,w,c
 18628  0146B0  6E01               	movwf	btemp^0,c
 18629  0146B2  0EFC               	movlw	-4
 18630  0146B4  0060  F007  FFE3   	movff	btemp,plusw1
 18631  0146BA                     l7675:
 18632                           
 18633                           ;stkvar	_new_exp @ sp[(-13)+8]
 18634  0146BA  0EFC               	movlw	-4
 18635  0146BC  BEE3               	btfsc	plusw1,7,c
 18636  0146BE  D01B               	goto	l7681
 18637  0146C0  0EFC               	movlw	-4
 18638  0146C2  50E3               	movf	plusw1,w,c
 18639  0146C4  E104               	bnz	u6310
 18640  0146C6  0EFB               	movlw	-5
 18641  0146C8  28E3               	incf	plusw1,w,c
 18642  0146CA  A0D8               	btfss	status,0,c
 18643  0146CC  D014               	goto	l7681
 18644  0146CE                     u6310:
 18645  0146CE  0EFF               	movlw	255
 18646  0146D0  6E0B               	movwf	(btemp+10)^0,c
 18647  0146D2  0E00               	movlw	0
 18648  0146D4  6E0C               	movwf	(btemp+11)^0,c
 18649                           
 18650                           ;stkvar	_new_exp @ sp[(-13)+8]
 18651  0146D6  0EFB               	movlw	-5
 18652  0146D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18653  0146DE  0EFC               	movlw	-4
 18654  0146E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 18655                           
 18656                           ;stkvar	_b @ sp[(-13)+-4]
 18657  0146E6  0EEF               	movlw	-17
 18658  0146E8  6AE3               	clrf	plusw1,c
 18659  0146EA  0EF0               	movlw	-16
 18660  0146EC  6AE3               	clrf	plusw1,c
 18661  0146EE  0EF1               	movlw	-15
 18662  0146F0  6AE3               	clrf	plusw1,c
 18663  0146F2  0EF2               	movlw	-14
 18664  0146F4  6AE3               	clrf	plusw1,c
 18665  0146F6                     l7681:
 18666                           
 18667                           ;stkvar	_new_exp @ sp[(-13)+8]
 18668  0146F6  0EFC               	movlw	-4
 18669  0146F8  BEE3               	btfsc	plusw1,7,c
 18670  0146FA  D007               	goto	u6320
 18671  0146FC  0EFC               	movlw	-4
 18672  0146FE  50E3               	movf	plusw1,w,c
 18673  014700  E112               	bnz	l7687
 18674  014702  0EFB               	movlw	-5
 18675  014704  04E3               	decf	plusw1,w,c
 18676  014706  B0D8               	btfsc	status,0,c
 18677  014708  D00E               	goto	l7687
 18678  01470A                     u6320:
 18679                           
 18680                           ;stkvar	_new_exp @ sp[(-13)+8]
 18681  01470A  0EFB               	movlw	-5
 18682  01470C  6AE3               	clrf	plusw1,c
 18683  01470E  0EFC               	movlw	-4
 18684  014710  6AE3               	clrf	plusw1,c
 18685                           
 18686                           ;stkvar	_b @ sp[(-13)+-4]
 18687  014712  0EEF               	movlw	-17
 18688  014714  6AE3               	clrf	plusw1,c
 18689  014716  0EF0               	movlw	-16
 18690  014718  6AE3               	clrf	plusw1,c
 18691  01471A  0EF1               	movlw	-15
 18692  01471C  6AE3               	clrf	plusw1,c
 18693  01471E  0EF2               	movlw	-14
 18694  014720  6AE3               	clrf	plusw1,c
 18695                           
 18696                           ;stkvar	_sign @ sp[(-13)+12]
 18697  014722  0EFF               	movlw	-1
 18698  014724  6AE3               	clrf	plusw1,c
 18699  014726                     l7687:
 18700                           
 18701                           ;stkvar	_new_exp @ sp[(-13)+8]
 18702                           ;stkvar	_bexp @ sp[(-13)+11]
 18703  014726  0EFB               	movlw	-5
 18704  014728  006F FF8C  F001    	movff	plusw1,btemp
 18705  01472E  0EFE               	movlw	-2
 18706  014730  0060  F007  FFE3   	movff	btemp,plusw1
 18707                           
 18708                           ;stkvar	_bexp @ sp[(-13)+11]
 18709  014736  0EFE               	movlw	-2
 18710  014738  A0E3               	btfss	plusw1,0,c
 18711  01473A  D009               	goto	l7693
 18712                           
 18713                           ;stkvar	_b @ sp[(-13)+-4]
 18714  01473C  0EF1               	movlw	241
 18715  01473E  24E1               	addwf	fsr1l,w,c
 18716  014740  6ED9               	movwf	fsr2l,c
 18717  014742  0EFF               	movlw	255
 18718  014744  20E2               	addwfc	fsr1h,w,c
 18719  014746  6EDA               	movwf	fsr2h,c
 18720  014748  0E00               	movlw	0
 18721  01474A  8EDB               	bsf	plusw2,7,c
 18722  01474C  D008               	goto	l7695
 18723  01474E                     l7693:
 18724                           
 18725                           ;stkvar	_b @ sp[(-13)+-4]
 18726  01474E  0EF1               	movlw	241
 18727  014750  24E1               	addwf	fsr1l,w,c
 18728  014752  6ED9               	movwf	fsr2l,c
 18729  014754  0EFF               	movlw	255
 18730  014756  20E2               	addwfc	fsr1h,w,c
 18731  014758  6EDA               	movwf	fsr2h,c
 18732  01475A  0E7F               	movlw	127
 18733  01475C  16DF               	andwf	indf2,f,c
 18734  01475E                     l7695:
 18735                           
 18736                           ;stkvar	_b @ sp[(-13)+-4]
 18737  01475E  0EF2               	movlw	242
 18738  014760  24E1               	addwf	fsr1l,w,c
 18739  014762  6ED9               	movwf	fsr2l,c
 18740  014764  0EFF               	movlw	255
 18741  014766  20E2               	addwfc	fsr1h,w,c
 18742  014768  6EDA               	movwf	fsr2h,c
 18743                           
 18744                           ;stkvar	_bexp @ sp[(-13)+11]
 18745  01476A  0EFE               	movlw	-2
 18746  01476C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18747  014772  90D8               	bcf	status,0,c
 18748  014774  300C               	rrcf	(btemp+11)^0,w,c
 18749  014776  6EDF               	movwf	indf2,c
 18750  014778  D644               	goto	l7593
 18751  01477A                     l2852:
 18752                           
 18753                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 18754  01477A  0EEB               	movlw	235
 18755  01477C  26E1               	addwf	fsr1l,f,c
 18756  01477E  0EFF               	movlw	255
 18757  014780  22E2               	addwfc	fsr1h,f,c
 18758  014782  0012               	return		;funcret
 18759  014784                     __end_of___fldiv:
 18760                           	opt callstack 0
 18761                           
 18762 ;; *************** function ___awmod *****************
 18763 ;; Defined at:
 18764 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18765 ;; Parameters:    Size  Location     Type
 18766 ;;  dividend        2  [STACK] int 
 18767 ;;  divisor         2  [STACK] int 
 18768 ;; Auto vars:     Size  Location     Type
 18769 ;;  sign            1  [STACK] unsigned char 
 18770 ;;  counter         1  [STACK] unsigned char 
 18771 ;; Return value:  Size  Location     Type
 18772 ;;                  2  [STACK] int 
 18773 ;; Registers used:
 18774 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18775 ;; Tracked objects:
 18776 ;;		On entry : 0/0
 18777 ;;		On exit  : 0/0
 18778 ;;		Unchanged: 0/0
 18779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18784 ;;Total ram usage:        0 bytes
 18785 ;; Hardware stack levels used:    1
 18786 ;; Hardware stack levels required when called:   15
 18787 ;; This function calls:
 18788 ;;		Nothing
 18789 ;; This function is called by:
 18790 ;;		_efgtoa
 18791 ;; This function uses a reentrant model
 18792 ;;
 18793                           
 18794                           	psect	text64
 18795  018396                     __ptext64:
 18796                           	opt callstack 0
 18797  018396                     ___awmod:
 18798                           	opt callstack 0
 18799                           
 18800                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18801  018396  52E6               	movf	postinc1,f,c
 18802  018398  52E6               	movf	postinc1,f,c
 18803                           
 18804                           ;stkvar	_sign @ sp[(-2)+0]
 18805                           
 18806                           ;incstack = 0
 18807 ;; hardware stack exceeded
 18808  01839A  0EFE               	movlw	-2
 18809  01839C  6AE3               	clrf	plusw1,c
 18810                           
 18811                           ;stkvar	_dividend @ sp[(-2)+-2]
 18812  01839E  0EFD               	movlw	-3
 18813  0183A0  AEE3               	btfss	plusw1,7,c
 18814  0183A2  D009               	goto	l7919
 18815                           
 18816                           ;stkvar	_dividend @ sp[(-2)+-2]
 18817                           ;stkvar	_dividend @ sp[(-2)+-2]
 18818  0183A4  0EFC               	movlw	-4
 18819  0183A6  6CE3               	negf	plusw1,c
 18820  0183A8  0EFD               	movlw	-3
 18821  0183AA  1EE3               	comf	plusw1,f,c
 18822  0183AC  B0D8               	btfsc	status,0,c
 18823  0183AE  2AE3               	incf	plusw1,f,c
 18824                           
 18825                           ;stkvar	_sign @ sp[(-2)+0]
 18826  0183B0  0EFE               	movlw	-2
 18827  0183B2  6AE3               	clrf	plusw1,c
 18828  0183B4  2AE3               	incf	plusw1,f,c
 18829  0183B6                     l7919:
 18830                           
 18831                           ;stkvar	_divisor @ sp[(-2)+-4]
 18832  0183B6  0EFB               	movlw	-5
 18833  0183B8  AEE3               	btfss	plusw1,7,c
 18834  0183BA  D006               	goto	l7923
 18835                           
 18836                           ;stkvar	_divisor @ sp[(-2)+-4]
 18837                           ;stkvar	_divisor @ sp[(-2)+-4]
 18838  0183BC  0EFA               	movlw	-6
 18839  0183BE  6CE3               	negf	plusw1,c
 18840  0183C0  0EFB               	movlw	-5
 18841  0183C2  1EE3               	comf	plusw1,f,c
 18842  0183C4  B0D8               	btfsc	status,0,c
 18843  0183C6  2AE3               	incf	plusw1,f,c
 18844  0183C8                     l7923:
 18845                           
 18846                           ;stkvar	_divisor @ sp[(-2)+-4]
 18847  0183C8  0EFA               	movlw	-6
 18848  0183CA  006F FF8C  F001    	movff	plusw1,btemp
 18849  0183D0  0EFB               	movlw	-5
 18850  0183D2  50E3               	movf	plusw1,w,c
 18851  0183D4  1001               	iorwf	btemp^0,w,c
 18852  0183D6  B4D8               	btfsc	status,2,c
 18853  0183D8  D053               	goto	u6680
 18854                           
 18855                           ;stkvar	_counter @ sp[(-2)+1]
 18856  0183DA  0EFF               	movlw	-1
 18857  0183DC  6AE3               	clrf	plusw1,c
 18858  0183DE  D012               	goto	L19
 18859  0183E0                     l7927:
 18860                           
 18861                           ;stkvar	_divisor @ sp[(-2)+-4]
 18862  0183E0  0EFA               	movlw	-6
 18863  0183E2  50E3               	movf	plusw1,w,c
 18864  0183E4  90D8               	bcf	status,0,c
 18865  0183E6  34E8               	rlcf	wreg,w,c
 18866  0183E8  6E01               	movwf	btemp^0,c
 18867  0183EA  0EFA               	movlw	-6
 18868  0183EC  0060  F007  FFE3   	movff	btemp,plusw1
 18869  0183F2  0EFB               	movlw	-5
 18870  0183F4  50E3               	movf	plusw1,w,c
 18871  0183F6  34E8               	rlcf	wreg,w,c
 18872  0183F8  6E01               	movwf	btemp^0,c
 18873  0183FA  0EFB               	movlw	-5
 18874  0183FC  0060  F007  FFE3   	movff	btemp,plusw1
 18875                           
 18876                           ;stkvar	_counter @ sp[(-2)+1]
 18877  018402  0EFF               	movlw	-1
 18878  018404                     L19:
 18879  018404  2AE3               	incf	plusw1,f,c
 18880                           
 18881                           ;stkvar	_divisor @ sp[(-2)+-4]
 18882  018406  0EFB               	movlw	-5
 18883  018408  AEE3               	btfss	plusw1,7,c
 18884  01840A  D7EA               	goto	l7927
 18885  01840C                     u6660:
 18886                           
 18887                           ;stkvar	_divisor @ sp[(-2)+-4]
 18888  01840C  0EFA               	movlw	-6
 18889  01840E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18890  018414  0EFB               	movlw	-5
 18891  018416  006F FF8C  F00C    	movff	plusw1,btemp+11
 18892                           
 18893                           ;stkvar	_dividend @ sp[(-2)+-2]
 18894  01841C  0EFC               	movlw	-4
 18895  01841E  006F FF8C  F009    	movff	plusw1,btemp+8
 18896  018424  0EFD               	movlw	-3
 18897  018426  006F FF8C  F00A    	movff	plusw1,btemp+9
 18898  01842C  500B               	movf	(btemp+10)^0,w,c
 18899  01842E  5C09               	subwf	(btemp+8)^0,w,c
 18900  018430  500C               	movf	(btemp+11)^0,w,c
 18901  018432  580A               	subwfb	(btemp+9)^0,w,c
 18902  018434  A0D8               	btfss	status,0,c
 18903  018436  D014               	goto	l7937
 18904                           
 18905                           ;stkvar	_divisor @ sp[(-2)+-4]
 18906                           ;stkvar	_dividend @ sp[(-2)+-2]
 18907  018438  0EFC               	movlw	-4
 18908  01843A  50E3               	movf	plusw1,w,c
 18909  01843C  6E01               	movwf	btemp^0,c
 18910  01843E  0EFA               	movlw	-6
 18911  018440  50E3               	movf	plusw1,w,c
 18912  018442  5E01               	subwf	btemp^0,f,c
 18913  018444  0EFC               	movlw	-4
 18914  018446  0060  F007  FFE3   	movff	btemp,plusw1
 18915  01844C  0EFD               	movlw	-3
 18916  01844E  50E3               	movf	plusw1,w,c
 18917  018450  6E01               	movwf	btemp^0,c
 18918  018452  0EFB               	movlw	-5
 18919  018454  50E3               	movf	plusw1,w,c
 18920  018456  5A01               	subwfb	btemp^0,f,c
 18921  018458  0EFD               	movlw	-3
 18922  01845A  0060  F007  FFE3   	movff	btemp,plusw1
 18923  018460                     l7937:
 18924                           
 18925                           ;stkvar	_divisor @ sp[(-2)+-4]
 18926  018460  90D8               	bcf	status,0,c
 18927  018462  0EFB               	movlw	-5
 18928  018464  32E3               	rrcf	plusw1,f,c
 18929  018466  0EFA               	movlw	-6
 18930  018468  32E3               	rrcf	plusw1,f,c
 18931                           
 18932                           ;stkvar	_counter @ sp[(-2)+1]
 18933  01846A  0EFF               	movlw	-1
 18934  01846C  50E3               	movf	plusw1,w,c
 18935  01846E  6E01               	movwf	btemp^0,c
 18936  018470  0E01               	movlw	1
 18937  018472  5E01               	subwf	btemp^0,f,c
 18938  018474  0EFF               	movlw	-1
 18939  018476  0060  F007  FFE3   	movff	btemp,plusw1
 18940  01847C  A4D8               	btfss	status,2,c
 18941  01847E  D7C6               	goto	u6660
 18942  018480                     u6680:
 18943                           
 18944                           ;stkvar	_sign @ sp[(-2)+0]
 18945  018480  0EFE               	movlw	-2
 18946  018482  50E3               	movf	plusw1,w,c
 18947  018484  B4D8               	btfsc	status,2,c
 18948  018486  D006               	goto	l7945
 18949                           
 18950                           ;stkvar	_dividend @ sp[(-2)+-2]
 18951                           ;stkvar	_dividend @ sp[(-2)+-2]
 18952  018488  0EFC               	movlw	-4
 18953  01848A  6CE3               	negf	plusw1,c
 18954  01848C  0EFD               	movlw	-3
 18955  01848E  1EE3               	comf	plusw1,f,c
 18956  018490  B0D8               	btfsc	status,0,c
 18957  018492  2AE3               	incf	plusw1,f,c
 18958  018494                     l7945:
 18959                           
 18960                           ;stkvar	_dividend @ sp[(-2)+-2]
 18961  018494  0EFC               	movlw	-4
 18962  018496  006F FF8C  F001    	movff	plusw1,btemp
 18963  01849C  0EFD               	movlw	-3
 18964  01849E  006F FF8C  F002    	movff	plusw1,btemp+1
 18965                           
 18966                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18967  0184A4  0EFA               	movlw	250
 18968  0184A6  26E1               	addwf	fsr1l,f,c
 18969  0184A8  0EFF               	movlw	255
 18970  0184AA  22E2               	addwfc	fsr1h,f,c
 18971  0184AC  0012               	return		;funcret
 18972  0184AE                     __end_of___awmod:
 18973                           	opt callstack 0
 18974                           
 18975 ;; *************** function ___awdiv *****************
 18976 ;; Defined at:
 18977 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 18978 ;; Parameters:    Size  Location     Type
 18979 ;;  dividend        2  [STACK] int 
 18980 ;;  divisor         2  [STACK] int 
 18981 ;; Auto vars:     Size  Location     Type
 18982 ;;  quotient        2  [STACK] int 
 18983 ;;  sign            1  [STACK] unsigned char 
 18984 ;;  counter         1  [STACK] unsigned char 
 18985 ;; Return value:  Size  Location     Type
 18986 ;;                  2  [STACK] int 
 18987 ;; Registers used:
 18988 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18989 ;; Tracked objects:
 18990 ;;		On entry : 0/0
 18991 ;;		On exit  : 0/0
 18992 ;;		Unchanged: 0/0
 18993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18998 ;;Total ram usage:        0 bytes
 18999 ;; Hardware stack levels used:    1
 19000 ;; Hardware stack levels required when called:   15
 19001 ;; This function calls:
 19002 ;;		Nothing
 19003 ;; This function is called by:
 19004 ;;		_efgtoa
 19005 ;; This function uses a reentrant model
 19006 ;;
 19007                           
 19008                           	psect	text65
 19009  017D8E                     __ptext65:
 19010                           	opt callstack 0
 19011  017D8E                     ___awdiv:
 19012                           	opt callstack 0
 19013                           
 19014                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19015  017D8E  52E6               	movf	postinc1,f,c
 19016  017D90  52E6               	movf	postinc1,f,c
 19017  017D92  52E6               	movf	postinc1,f,c
 19018  017D94  52E6               	movf	postinc1,f,c
 19019                           
 19020                           ;stkvar	_sign @ sp[(-4)+2]
 19021                           
 19022                           ;incstack = 0
 19023 ;; hardware stack exceeded
 19024  017D96  0EFE               	movlw	-2
 19025  017D98  6AE3               	clrf	plusw1,c
 19026                           
 19027                           ;stkvar	_divisor @ sp[(-4)+-4]
 19028  017D9A  0EF9               	movlw	-7
 19029  017D9C  AEE3               	btfss	plusw1,7,c
 19030  017D9E  D009               	goto	l7873
 19031                           
 19032                           ;stkvar	_divisor @ sp[(-4)+-4]
 19033                           ;stkvar	_divisor @ sp[(-4)+-4]
 19034  017DA0  0EF8               	movlw	-8
 19035  017DA2  6CE3               	negf	plusw1,c
 19036  017DA4  0EF9               	movlw	-7
 19037  017DA6  1EE3               	comf	plusw1,f,c
 19038  017DA8  B0D8               	btfsc	status,0,c
 19039  017DAA  2AE3               	incf	plusw1,f,c
 19040                           
 19041                           ;stkvar	_sign @ sp[(-4)+2]
 19042  017DAC  0EFE               	movlw	-2
 19043  017DAE  6AE3               	clrf	plusw1,c
 19044  017DB0  2AE3               	incf	plusw1,f,c
 19045  017DB2                     l7873:
 19046                           
 19047                           ;stkvar	_dividend @ sp[(-4)+-2]
 19048  017DB2  0EFB               	movlw	-5
 19049  017DB4  AEE3               	btfss	plusw1,7,c
 19050  017DB6  D008               	goto	l7879
 19051                           
 19052                           ;stkvar	_dividend @ sp[(-4)+-2]
 19053                           ;stkvar	_dividend @ sp[(-4)+-2]
 19054  017DB8  0EFA               	movlw	-6
 19055  017DBA  6CE3               	negf	plusw1,c
 19056  017DBC  0EFB               	movlw	-5
 19057  017DBE  1EE3               	comf	plusw1,f,c
 19058  017DC0  B0D8               	btfsc	status,0,c
 19059  017DC2  2AE3               	incf	plusw1,f,c
 19060                           
 19061                           ;stkvar	_sign @ sp[(-4)+2]
 19062  017DC4  0EFE               	movlw	-2
 19063  017DC6  70E3               	btg	plusw1,0,c
 19064  017DC8                     l7879:
 19065                           
 19066                           ;stkvar	_quotient @ sp[(-4)+0]
 19067  017DC8  0EFC               	movlw	-4
 19068  017DCA  6AE3               	clrf	plusw1,c
 19069  017DCC  0EFD               	movlw	-3
 19070  017DCE  6AE3               	clrf	plusw1,c
 19071                           
 19072                           ;stkvar	_divisor @ sp[(-4)+-4]
 19073  017DD0  0EF8               	movlw	-8
 19074  017DD2  006F FF8C  F001    	movff	plusw1,btemp
 19075  017DD8  0EF9               	movlw	-7
 19076  017DDA  50E3               	movf	plusw1,w,c
 19077  017DDC  1001               	iorwf	btemp^0,w,c
 19078  017DDE  B4D8               	btfsc	status,2,c
 19079  017DE0  D066               	goto	u6610
 19080                           
 19081                           ;stkvar	_counter @ sp[(-4)+3]
 19082  017DE2  0EFF               	movlw	-1
 19083  017DE4  6AE3               	clrf	plusw1,c
 19084  017DE6  D012               	goto	L20
 19085  017DE8                     l7885:
 19086                           
 19087                           ;stkvar	_divisor @ sp[(-4)+-4]
 19088  017DE8  0EF8               	movlw	-8
 19089  017DEA  50E3               	movf	plusw1,w,c
 19090  017DEC  90D8               	bcf	status,0,c
 19091  017DEE  34E8               	rlcf	wreg,w,c
 19092  017DF0  6E01               	movwf	btemp^0,c
 19093  017DF2  0EF8               	movlw	-8
 19094  017DF4  0060  F007  FFE3   	movff	btemp,plusw1
 19095  017DFA  0EF9               	movlw	-7
 19096  017DFC  50E3               	movf	plusw1,w,c
 19097  017DFE  34E8               	rlcf	wreg,w,c
 19098  017E00  6E01               	movwf	btemp^0,c
 19099  017E02  0EF9               	movlw	-7
 19100  017E04  0060  F007  FFE3   	movff	btemp,plusw1
 19101                           
 19102                           ;stkvar	_counter @ sp[(-4)+3]
 19103  017E0A  0EFF               	movlw	-1
 19104  017E0C                     L20:
 19105  017E0C  2AE3               	incf	plusw1,f,c
 19106                           
 19107                           ;stkvar	_divisor @ sp[(-4)+-4]
 19108  017E0E  0EF9               	movlw	-7
 19109  017E10  AEE3               	btfss	plusw1,7,c
 19110  017E12  D7EA               	goto	l7885
 19111  017E14                     u6590:
 19112                           
 19113                           ;stkvar	_quotient @ sp[(-4)+0]
 19114  017E14  0EFC               	movlw	-4
 19115  017E16  50E3               	movf	plusw1,w,c
 19116  017E18  90D8               	bcf	status,0,c
 19117  017E1A  34E8               	rlcf	wreg,w,c
 19118  017E1C  6E01               	movwf	btemp^0,c
 19119  017E1E  0EFC               	movlw	-4
 19120  017E20  0060  F007  FFE3   	movff	btemp,plusw1
 19121  017E26  0EFD               	movlw	-3
 19122  017E28  50E3               	movf	plusw1,w,c
 19123  017E2A  34E8               	rlcf	wreg,w,c
 19124  017E2C  6E01               	movwf	btemp^0,c
 19125  017E2E  0EFD               	movlw	-3
 19126  017E30  0060  F007  FFE3   	movff	btemp,plusw1
 19127                           
 19128                           ;stkvar	_divisor @ sp[(-4)+-4]
 19129  017E36  0EF8               	movlw	-8
 19130  017E38  006F FF8C  F00B    	movff	plusw1,btemp+10
 19131  017E3E  0EF9               	movlw	-7
 19132  017E40  006F FF8C  F00C    	movff	plusw1,btemp+11
 19133                           
 19134                           ;stkvar	_dividend @ sp[(-4)+-2]
 19135  017E46  0EFA               	movlw	-6
 19136  017E48  006F FF8C  F009    	movff	plusw1,btemp+8
 19137  017E4E  0EFB               	movlw	-5
 19138  017E50  006F FF8C  F00A    	movff	plusw1,btemp+9
 19139  017E56  500B               	movf	(btemp+10)^0,w,c
 19140  017E58  5C09               	subwf	(btemp+8)^0,w,c
 19141  017E5A  500C               	movf	(btemp+11)^0,w,c
 19142  017E5C  580A               	subwfb	(btemp+9)^0,w,c
 19143  017E5E  A0D8               	btfss	status,0,c
 19144  017E60  D016               	goto	l7899
 19145                           
 19146                           ;stkvar	_divisor @ sp[(-4)+-4]
 19147                           ;stkvar	_dividend @ sp[(-4)+-2]
 19148  017E62  0EFA               	movlw	-6
 19149  017E64  50E3               	movf	plusw1,w,c
 19150  017E66  6E01               	movwf	btemp^0,c
 19151  017E68  0EF8               	movlw	-8
 19152  017E6A  50E3               	movf	plusw1,w,c
 19153  017E6C  5E01               	subwf	btemp^0,f,c
 19154  017E6E  0EFA               	movlw	-6
 19155  017E70  0060  F007  FFE3   	movff	btemp,plusw1
 19156  017E76  0EFB               	movlw	-5
 19157  017E78  50E3               	movf	plusw1,w,c
 19158  017E7A  6E01               	movwf	btemp^0,c
 19159  017E7C  0EF9               	movlw	-7
 19160  017E7E  50E3               	movf	plusw1,w,c
 19161  017E80  5A01               	subwfb	btemp^0,f,c
 19162  017E82  0EFB               	movlw	-5
 19163  017E84  0060  F007  FFE3   	movff	btemp,plusw1
 19164                           
 19165                           ;stkvar	_quotient @ sp[(-4)+0]
 19166  017E8A  0EFC               	movlw	-4
 19167  017E8C  80E3               	bsf	plusw1,0,c
 19168  017E8E                     l7899:
 19169                           
 19170                           ;stkvar	_divisor @ sp[(-4)+-4]
 19171  017E8E  90D8               	bcf	status,0,c
 19172  017E90  0EF9               	movlw	-7
 19173  017E92  32E3               	rrcf	plusw1,f,c
 19174  017E94  0EF8               	movlw	-8
 19175  017E96  32E3               	rrcf	plusw1,f,c
 19176                           
 19177                           ;stkvar	_counter @ sp[(-4)+3]
 19178  017E98  0EFF               	movlw	-1
 19179  017E9A  50E3               	movf	plusw1,w,c
 19180  017E9C  6E01               	movwf	btemp^0,c
 19181  017E9E  0E01               	movlw	1
 19182  017EA0  5E01               	subwf	btemp^0,f,c
 19183  017EA2  0EFF               	movlw	-1
 19184  017EA4  0060  F007  FFE3   	movff	btemp,plusw1
 19185  017EAA  A4D8               	btfss	status,2,c
 19186  017EAC  D7B3               	goto	u6590
 19187  017EAE                     u6610:
 19188                           
 19189                           ;stkvar	_sign @ sp[(-4)+2]
 19190  017EAE  0EFE               	movlw	-2
 19191  017EB0  50E3               	movf	plusw1,w,c
 19192  017EB2  B4D8               	btfsc	status,2,c
 19193  017EB4  D006               	goto	l7907
 19194                           
 19195                           ;stkvar	_quotient @ sp[(-4)+0]
 19196                           ;stkvar	_quotient @ sp[(-4)+0]
 19197  017EB6  0EFC               	movlw	-4
 19198  017EB8  6CE3               	negf	plusw1,c
 19199  017EBA  0EFD               	movlw	-3
 19200  017EBC  1EE3               	comf	plusw1,f,c
 19201  017EBE  B0D8               	btfsc	status,0,c
 19202  017EC0  2AE3               	incf	plusw1,f,c
 19203  017EC2                     l7907:
 19204                           
 19205                           ;stkvar	_quotient @ sp[(-4)+0]
 19206  017EC2  0EFC               	movlw	-4
 19207  017EC4  006F FF8C  F001    	movff	plusw1,btemp
 19208  017ECA  0EFD               	movlw	-3
 19209  017ECC  006F FF8C  F002    	movff	plusw1,btemp+1
 19210                           
 19211                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19212  017ED2  0EF8               	movlw	248
 19213  017ED4  26E1               	addwf	fsr1l,f,c
 19214  017ED6  0EFF               	movlw	255
 19215  017ED8  22E2               	addwfc	fsr1h,f,c
 19216  017EDA  0012               	return		;funcret
 19217  017EDC                     __end_of___awdiv:
 19218                           	opt callstack 0
 19219                           
 19220 ;; *************** function _dtoa *****************
 19221 ;; Defined at:
 19222 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19223 ;; Parameters:    Size  Location     Type
 19224 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19225 ;;		 -> f(6), NULL(0), 
 19226 ;;  d               8  [STACK] long long 
 19227 ;; Auto vars:     Size  Location     Type
 19228 ;;  n               8  [STACK] long long 
 19229 ;;  i               2  [STACK] int 
 19230 ;;  s               2  [STACK] int 
 19231 ;;  w               2  [STACK] int 
 19232 ;;  p               2  [STACK] int 
 19233 ;; Return value:  Size  Location     Type
 19234 ;;                  2  [STACK] int 
 19235 ;; Registers used:
 19236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19237 ;; Tracked objects:
 19238 ;;		On entry : 0/0
 19239 ;;		On exit  : 0/0
 19240 ;;		Unchanged: 0/0
 19241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19246 ;;Total ram usage:        0 bytes
 19247 ;; Hardware stack levels used:    1
 19248 ;; Hardware stack levels required when called:   20
 19249 ;; This function calls:
 19250 ;;		___aodiv
 19251 ;;		___aomod
 19252 ;;		_abs
 19253 ;;		_pad
 19254 ;; This function is called by:
 19255 ;;		_vfpfcnvrt
 19256 ;; This function uses a reentrant model
 19257 ;;
 19258                           
 19259                           	psect	text66
 19260  014C30                     __ptext66:
 19261                           	opt callstack 0
 19262  014C30                     _dtoa:
 19263                           	opt callstack 0
 19264                           
 19265                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19266  014C30  0E12               	movlw	18
 19267  014C32  26E1               	addwf	fsr1l,f,c
 19268  014C34  0E00               	movlw	0
 19269  014C36  22E2               	addwfc	fsr1h,f,c
 19270                           
 19271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19272                           ;stkvar	_d @ sp[(-18)+-10]
 19273                           
 19274                           ;incstack = 0
 19275 ;; hardware stack exceeded
 19276  014C38  0EE4               	movlw	228
 19277  014C3A  24E1               	addwf	fsr1l,w,c
 19278  014C3C  6ED9               	movwf	fsr2l,c
 19279  014C3E  0EFF               	movlw	255
 19280  014C40  20E2               	addwfc	fsr1h,w,c
 19281  014C42  6EDA               	movwf	fsr2h,c
 19282                           
 19283                           ;stkvar	_n @ sp[(-18)+2]
 19284  014C44  0E08               	movlw	8
 19285  014C46  6E01               	movwf	btemp^0,c
 19286  014C48  0EF0               	movlw	-16
 19287  014C4A                     us1016999:
 19288  014C4A  006F FF7B FFE3     	movff	postinc2,plusw1
 19289  014C50  28E8               	incf	wreg,w,c
 19290  014C52  2E01               	decfsz	btemp^0,f,c
 19291  014C54  D7FA               	bra	us1016999
 19292                           
 19293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19294                           ;stkvar	_n @ sp[(-18)+2]
 19295  014C56  0EF7               	movlw	-9
 19296  014C58  AEE3               	btfss	plusw1,7,c
 19297  014C5A  D002               	goto	u10170
 19298  014C5C  0E01               	movlw	1
 19299  014C5E  D001               	goto	u10180
 19300  014C60                     u10170:
 19301  014C60  0E00               	movlw	0
 19302  014C62                     u10180:
 19303  014C62  6E0B               	movwf	(btemp+10)^0,c
 19304  014C64  6A0C               	clrf	(btemp+11)^0,c
 19305                           
 19306                           ;stkvar	_s @ sp[(-18)+12]
 19307  014C66  0EFA               	movlw	-6
 19308  014C68  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19309  014C6E  0EFB               	movlw	-5
 19310  014C70  0060  F033  FFE3   	movff	btemp+11,plusw1
 19311                           
 19312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19313                           ;stkvar	_s @ sp[(-18)+12]
 19314  014C76  0EFA               	movlw	-6
 19315  014C78  006F FF8C  F001    	movff	plusw1,btemp
 19316  014C7E  0EFB               	movlw	-5
 19317  014C80  50E3               	movf	plusw1,w,c
 19318  014C82  1001               	iorwf	btemp^0,w,c
 19319  014C84  B4D8               	btfsc	status,2,c
 19320  014C86  D025               	goto	u10200
 19321                           
 19322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19323                           ;stkvar	_n @ sp[(-18)+2]
 19324                           ;stkvar	_n @ sp[(-18)+2]
 19325  014C88  0EF0               	movlw	-16
 19326  014C8A  6CE3               	negf	plusw1,c
 19327  014C8C  0EF1               	movlw	-15
 19328  014C8E  1EE3               	comf	plusw1,f,c
 19329  014C90  0EF2               	movlw	-14
 19330  014C92  1EE3               	comf	plusw1,f,c
 19331  014C94  0EF3               	movlw	-13
 19332  014C96  1EE3               	comf	plusw1,f,c
 19333  014C98  0EF4               	movlw	-12
 19334  014C9A  1EE3               	comf	plusw1,f,c
 19335  014C9C  0EF5               	movlw	-11
 19336  014C9E  1EE3               	comf	plusw1,f,c
 19337  014CA0  0EF6               	movlw	-10
 19338  014CA2  1EE3               	comf	plusw1,f,c
 19339  014CA4  0EF7               	movlw	-9
 19340  014CA6  1EE3               	comf	plusw1,f,c
 19341  014CA8  E314               	bnc	u10200
 19342  014CAA  0EF1               	movlw	-15
 19343  014CAC  2AE3               	incf	plusw1,f,c
 19344  014CAE  E311               	bnc	u10200
 19345  014CB0  0EF2               	movlw	-14
 19346  014CB2  2AE3               	incf	plusw1,f,c
 19347  014CB4  E30E               	bnc	u10200
 19348  014CB6  0EF3               	movlw	-13
 19349  014CB8  2AE3               	incf	plusw1,f,c
 19350  014CBA  E30B               	bnc	u10200
 19351  014CBC  0EF4               	movlw	-12
 19352  014CBE  2AE3               	incf	plusw1,f,c
 19353  014CC0  E308               	bnc	u10200
 19354  014CC2  0EF5               	movlw	-11
 19355  014CC4  2AE3               	incf	plusw1,f,c
 19356  014CC6  E305               	bnc	u10200
 19357  014CC8  0EF6               	movlw	-10
 19358  014CCA  2AE3               	incf	plusw1,f,c
 19359  014CCC  E302               	bnc	u10200
 19360  014CCE  0EF7               	movlw	-9
 19361  014CD0  2AE3               	incf	plusw1,f,c
 19362  014CD2                     u10200:
 19363                           
 19364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19365  014CD2  AE24               	btfss	(_prec+1)^0,7,c
 19366                           
 19367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19368  014CD4  9225               	bcf	_flags^0,1,c
 19369                           
 19370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19371  014CD6  BE24               	btfsc	(_prec+1)^0,7,c
 19372  014CD8  D005               	goto	u10220
 19373  014CDA  5024               	movf	(_prec+1)^0,w,c
 19374  014CDC  E110               	bnz	l10889
 19375  014CDE  0423               	decf	_prec^0,w,c
 19376  014CE0  B0D8               	btfsc	status,0,c
 19377  014CE2  D00D               	goto	l10889
 19378  014CE4                     u10220:
 19379  014CE4  0E01               	movlw	1
 19380  014CE6  6E0B               	movwf	(btemp+10)^0,c
 19381  014CE8  0E00               	movlw	0
 19382  014CEA  6E0C               	movwf	(btemp+11)^0,c
 19383                           
 19384                           ;stkvar	_p @ sp[(-18)+16]
 19385  014CEC  0EFE               	movlw	-2
 19386  014CEE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19387  014CF4  0EFF               	movlw	-1
 19388  014CF6  0060  F033  FFE3   	movff	btemp+11,plusw1
 19389  014CFC  D008               	goto	l2033
 19390  014CFE                     l10889:
 19391                           
 19392                           ;stkvar	_p @ sp[(-18)+16]
 19393  014CFE  0EFE               	movlw	-2
 19394  014D00  0060  F08F  FFE3   	movff	_prec,plusw1
 19395  014D06  0EFF               	movlw	-1
 19396  014D08  0060  F093  FFE3   	movff	_prec+1,plusw1
 19397  014D0E                     l2033:
 19398                           
 19399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19400                           ;stkvar	_w @ sp[(-18)+14]
 19401  014D0E  0EFC               	movlw	-4
 19402  014D10  0060  F087  FFE3   	movff	_width,plusw1
 19403  014D16  0EFD               	movlw	-3
 19404  014D18  0060  F08B  FFE3   	movff	_width+1,plusw1
 19405                           
 19406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19407                           ;stkvar	_s @ sp[(-18)+12]
 19408  014D1E  0EFA               	movlw	-6
 19409  014D20  006F FF8C  F001    	movff	plusw1,btemp
 19410  014D26  0EFB               	movlw	-5
 19411  014D28  50E3               	movf	plusw1,w,c
 19412  014D2A  1001               	iorwf	btemp^0,w,c
 19413  014D2C  A4D8               	btfss	status,2,c
 19414  014D2E  D002               	goto	u10240
 19415  014D30  A425               	btfss	_flags^0,2,c
 19416  014D32  D00A               	goto	l10897
 19417  014D34                     u10240:
 19418                           
 19419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19420                           ;stkvar	_w @ sp[(-18)+14]
 19421  014D34  50E1               	movf	fsr1l,w,c
 19422  014D36  0FFC               	addlw	-4
 19423  014D38  6ED9               	movwf	fsr2l,c
 19424  014D3A  50E2               	movf	fsr1h,w,c
 19425  014D3C  6EDA               	movwf	fsr2h,c
 19426  014D3E  0EFF               	movlw	255
 19427  014D40  22DA               	addwfc	fsr2h,f,c
 19428  014D42  06DE               	decf	postinc2,f,c
 19429  014D44  0E00               	movlw	0
 19430  014D46  5ADD               	subwfb	postdec2,f,c
 19431  014D48                     l10897:
 19432                           
 19433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19434  014D48  0E4F               	movlw	79
 19435  014D4A  6E0B               	movwf	(btemp+10)^0,c
 19436  014D4C  0E00               	movlw	0
 19437  014D4E  6E0C               	movwf	(btemp+11)^0,c
 19438                           
 19439                           ;stkvar	_i @ sp[(-18)+10]
 19440  014D50  0EF8               	movlw	-8
 19441  014D52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19442  014D58  0EF9               	movlw	-7
 19443  014D5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 19444                           
 19445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19446  014D60  0103               	movlb	3	; () banked
 19447  014D62  6BE3               	clrf	(_dbuf+79)& (0+255),b
 19448                           
 19449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19450  014D64  D109               	goto	l10911
 19451  014D66                     l10901:
 19452                           
 19453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19454                           ;stkvar	_i @ sp[(-18)+10]
 19455  014D66  50E1               	movf	fsr1l,w,c
 19456  014D68  0FF8               	addlw	-8
 19457  014D6A  6ED9               	movwf	fsr2l,c
 19458  014D6C  50E2               	movf	fsr1h,w,c
 19459  014D6E  6EDA               	movwf	fsr2h,c
 19460  014D70  0EFF               	movlw	255
 19461  014D72  22DA               	addwfc	fsr2h,f,c
 19462  014D74  06DE               	decf	postinc2,f,c
 19463  014D76  0E00               	movlw	0
 19464  014D78  5ADD               	subwfb	postdec2,f,c
 19465                           
 19466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19467  014D7A  0E0A               	movlw	10
 19468  014D7C  6EE6               	movwf	postinc1,c
 19469  014D7E  0E00               	movlw	0
 19470  014D80  6EE6               	movwf	postinc1,c
 19471  014D82  0E00               	movlw	0
 19472  014D84  6EE6               	movwf	postinc1,c
 19473  014D86  0E00               	movlw	0
 19474  014D88  6EE6               	movwf	postinc1,c
 19475  014D8A  0E00               	movlw	0
 19476  014D8C  6EE6               	movwf	postinc1,c
 19477  014D8E  0E00               	movlw	0
 19478  014D90  6EE6               	movwf	postinc1,c
 19479  014D92  0E00               	movlw	0
 19480  014D94  6EE6               	movwf	postinc1,c
 19481  014D96  0E00               	movlw	0
 19482  014D98  6EE6               	movwf	postinc1,c
 19483                           
 19484                           ;stkvar	_n @ sp[(-26)+2]
 19485  014D9A  50E1               	movf	fsr1l,w,c
 19486  014D9C  0FE8               	addlw	-24
 19487  014D9E  6ED9               	movwf	fsr2l,c
 19488  014DA0  50E2               	movf	fsr1h,w,c
 19489  014DA2  6EDA               	movwf	fsr2h,c
 19490  014DA4  0EFF               	movlw	255
 19491  014DA6  22DA               	addwfc	fsr2h,f,c
 19492  014DA8  006F FF7B FFE6     	movff	postinc2,postinc1
 19493  014DAE  006F FF7B FFE6     	movff	postinc2,postinc1
 19494  014DB4  006F FF7B FFE6     	movff	postinc2,postinc1
 19495  014DBA  006F FF7B FFE6     	movff	postinc2,postinc1
 19496  014DC0  006F FF7B FFE6     	movff	postinc2,postinc1
 19497  014DC6  006F FF7B FFE6     	movff	postinc2,postinc1
 19498  014DCC  006F FF7B FFE6     	movff	postinc2,postinc1
 19499  014DD2  006F FF7B FFE6     	movff	postinc2,postinc1
 19500  014DD8  EC4F  F0B4         	call	___aomod	;wreg free
 19501  014DDC  52E5               	movf	postdec1,f,c
 19502  014DDE  006F FF9C  F018    	movff	indf1,btemp+23
 19503  014DE4  52E5               	movf	postdec1,f,c
 19504  014DE6  006F FF9C  F017    	movff	indf1,btemp+22
 19505  014DEC  52E5               	movf	postdec1,f,c
 19506  014DEE  006F FF9C  F016    	movff	indf1,btemp+21
 19507  014DF4  52E5               	movf	postdec1,f,c
 19508  014DF6  006F FF9C  F015    	movff	indf1,btemp+20
 19509  014DFC  52E5               	movf	postdec1,f,c
 19510  014DFE  006F FF9C  F014    	movff	indf1,btemp+19
 19511  014E04  52E5               	movf	postdec1,f,c
 19512  014E06  006F FF9C  F013    	movff	indf1,btemp+18
 19513  014E0C  52E5               	movf	postdec1,f,c
 19514  014E0E  006F FF9C  F012    	movff	indf1,btemp+17
 19515  014E14  52E5               	movf	postdec1,f,c
 19516  014E16  006F FF9C  F011    	movff	indf1,btemp+16
 19517  014E1C  0EF8               	movlw	248
 19518  014E1E  26E1               	addwf	fsr1l,f,c
 19519  014E20  0EFF               	movlw	255
 19520  014E22  22E2               	addwfc	fsr1h,f,c
 19521  014E24  0060  F044  F00B   	movff	btemp+16,btemp+10
 19522  014E2A  0060  F048  F00C   	movff	btemp+17,btemp+11
 19523  014E30  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19524  014E36  0060  F033  FFE6   	movff	btemp+11,postinc1
 19525  014E3C  EC2E  F0CE         	call	_abs	;wreg free
 19526  014E40  0E30               	movlw	48
 19527  014E42  2601               	addwf	btemp^0,f,c
 19528                           
 19529                           ;stkvar	_i @ sp[(-18)+10]
 19530  014E44  0EF8               	movlw	-8
 19531  014E46  006F FF8C  F00B    	movff	plusw1,btemp+10
 19532  014E4C  0EF9               	movlw	-7
 19533  014E4E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19534  014E54  0E94               	movlw	low _dbuf
 19535  014E56  240B               	addwf	(btemp+10)^0,w,c
 19536  014E58  6ED9               	movwf	fsr2l,c
 19537  014E5A  0E03               	movlw	high _dbuf
 19538  014E5C  200C               	addwfc	(btemp+11)^0,w,c
 19539  014E5E  6EDA               	movwf	fsr2h,c
 19540  014E60  0060  F007  FFDF   	movff	btemp,indf2
 19541                           
 19542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19543                           ;stkvar	_p @ sp[(-18)+16]
 19544  014E66  50E1               	movf	fsr1l,w,c
 19545  014E68  0FFE               	addlw	-2
 19546  014E6A  6ED9               	movwf	fsr2l,c
 19547  014E6C  50E2               	movf	fsr1h,w,c
 19548  014E6E  6EDA               	movwf	fsr2h,c
 19549  014E70  0EFF               	movlw	255
 19550  014E72  22DA               	addwfc	fsr2h,f,c
 19551  014E74  06DE               	decf	postinc2,f,c
 19552  014E76  0E00               	movlw	0
 19553  014E78  5ADD               	subwfb	postdec2,f,c
 19554                           
 19555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19556                           ;stkvar	_w @ sp[(-18)+14]
 19557  014E7A  50E1               	movf	fsr1l,w,c
 19558  014E7C  0FFC               	addlw	-4
 19559  014E7E  6ED9               	movwf	fsr2l,c
 19560  014E80  50E2               	movf	fsr1h,w,c
 19561  014E82  6EDA               	movwf	fsr2h,c
 19562  014E84  0EFF               	movlw	255
 19563  014E86  22DA               	addwfc	fsr2h,f,c
 19564  014E88  06DE               	decf	postinc2,f,c
 19565  014E8A  0E00               	movlw	0
 19566  014E8C  5ADD               	subwfb	postdec2,f,c
 19567                           
 19568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19569  014E8E  0E0A               	movlw	10
 19570  014E90  6EE6               	movwf	postinc1,c
 19571  014E92  0E00               	movlw	0
 19572  014E94  6EE6               	movwf	postinc1,c
 19573  014E96  0E00               	movlw	0
 19574  014E98  6EE6               	movwf	postinc1,c
 19575  014E9A  0E00               	movlw	0
 19576  014E9C  6EE6               	movwf	postinc1,c
 19577  014E9E  0E00               	movlw	0
 19578  014EA0  6EE6               	movwf	postinc1,c
 19579  014EA2  0E00               	movlw	0
 19580  014EA4  6EE6               	movwf	postinc1,c
 19581  014EA6  0E00               	movlw	0
 19582  014EA8  6EE6               	movwf	postinc1,c
 19583  014EAA  0E00               	movlw	0
 19584  014EAC  6EE6               	movwf	postinc1,c
 19585                           
 19586                           ;stkvar	_n @ sp[(-26)+2]
 19587  014EAE  50E1               	movf	fsr1l,w,c
 19588  014EB0  0FE8               	addlw	-24
 19589  014EB2  6ED9               	movwf	fsr2l,c
 19590  014EB4  50E2               	movf	fsr1h,w,c
 19591  014EB6  6EDA               	movwf	fsr2h,c
 19592  014EB8  0EFF               	movlw	255
 19593  014EBA  22DA               	addwfc	fsr2h,f,c
 19594  014EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 19595  014EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 19596  014EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 19597  014ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 19598  014ED4  006F FF7B FFE6     	movff	postinc2,postinc1
 19599  014EDA  006F FF7B FFE6     	movff	postinc2,postinc1
 19600  014EE0  006F FF7B FFE6     	movff	postinc2,postinc1
 19601  014EE6  006F FF7B FFE6     	movff	postinc2,postinc1
 19602  014EEC  ECD5  F0B1         	call	___aodiv	;wreg free
 19603  014EF0  52E5               	movf	postdec1,f,c
 19604  014EF2  006F FF9C  F018    	movff	indf1,btemp+23
 19605  014EF8  52E5               	movf	postdec1,f,c
 19606  014EFA  006F FF9C  F017    	movff	indf1,btemp+22
 19607  014F00  52E5               	movf	postdec1,f,c
 19608  014F02  006F FF9C  F016    	movff	indf1,btemp+21
 19609  014F08  52E5               	movf	postdec1,f,c
 19610  014F0A  006F FF9C  F015    	movff	indf1,btemp+20
 19611  014F10  52E5               	movf	postdec1,f,c
 19612  014F12  006F FF9C  F014    	movff	indf1,btemp+19
 19613  014F18  52E5               	movf	postdec1,f,c
 19614  014F1A  006F FF9C  F013    	movff	indf1,btemp+18
 19615  014F20  52E5               	movf	postdec1,f,c
 19616  014F22  006F FF9C  F012    	movff	indf1,btemp+17
 19617  014F28  52E5               	movf	postdec1,f,c
 19618  014F2A  006F FF9C  F011    	movff	indf1,btemp+16
 19619  014F30  0EF8               	movlw	248
 19620  014F32  26E1               	addwf	fsr1l,f,c
 19621  014F34  0EFF               	movlw	255
 19622  014F36  22E2               	addwfc	fsr1h,f,c
 19623                           
 19624                           ;stkvar	_n @ sp[(-18)+2]
 19625  014F38  0EF0               	movlw	-16
 19626  014F3A  0060  F047  FFE3   	movff	btemp+16,plusw1
 19627  014F40  0EF1               	movlw	-15
 19628  014F42  0060  F04B  FFE3   	movff	btemp+17,plusw1
 19629  014F48  0EF2               	movlw	-14
 19630  014F4A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 19631  014F50  0EF3               	movlw	-13
 19632  014F52  0060  F053  FFE3   	movff	btemp+19,plusw1
 19633  014F58  0EF4               	movlw	-12
 19634  014F5A  0060  F057  FFE3   	movff	btemp+20,plusw1
 19635  014F60  0EF5               	movlw	-11
 19636  014F62  0060  F05B  FFE3   	movff	btemp+21,plusw1
 19637  014F68  0EF6               	movlw	-10
 19638  014F6A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 19639  014F70  0EF7               	movlw	-9
 19640  014F72  0060  F063  FFE3   	movff	btemp+23,plusw1
 19641  014F78                     l10911:
 19642                           
 19643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19644                           ;stkvar	_i @ sp[(-18)+10]
 19645  014F78  0EF9               	movlw	-7
 19646  014F7A  BEE3               	btfsc	plusw1,7,c
 19647  014F7C  D036               	goto	u10290
 19648  014F7E  0EF9               	movlw	-7
 19649  014F80  50E3               	movf	plusw1,w,c
 19650  014F82  E104               	bnz	u10250
 19651  014F84  0EF8               	movlw	-8
 19652  014F86  04E3               	decf	plusw1,w,c
 19653  014F88  A0D8               	btfss	status,0,c
 19654  014F8A  D02F               	goto	u10290
 19655  014F8C                     u10250:
 19656                           
 19657                           ;stkvar	_n @ sp[(-18)+2]
 19658  014F8C  0EF0               	movlw	-16
 19659  014F8E  50E3               	movf	plusw1,w,c
 19660  014F90  E115               	bnz	u10261
 19661  014F92  0EF1               	movlw	-15
 19662  014F94  50E3               	movf	plusw1,w,c
 19663  014F96  E112               	bnz	u10261
 19664  014F98  0EF2               	movlw	-14
 19665  014F9A  50E3               	movf	plusw1,w,c
 19666  014F9C  E10F               	bnz	u10261
 19667  014F9E  0EF3               	movlw	-13
 19668  014FA0  50E3               	movf	plusw1,w,c
 19669  014FA2  E10C               	bnz	u10261
 19670  014FA4  0EF4               	movlw	-12
 19671  014FA6  50E3               	movf	plusw1,w,c
 19672  014FA8  E109               	bnz	u10261
 19673  014FAA  0EF5               	movlw	-11
 19674  014FAC  50E3               	movf	plusw1,w,c
 19675  014FAE  E106               	bnz	u10261
 19676  014FB0  0EF6               	movlw	-10
 19677  014FB2  50E3               	movf	plusw1,w,c
 19678  014FB4  E103               	bnz	u10261
 19679  014FB6  0EF7               	movlw	-9
 19680  014FB8  50E3               	movf	plusw1,w,c
 19681  014FBA  A4D8               	btfss	status,2,c
 19682  014FBC                     u10261:
 19683  014FBC  D6D4               	goto	l10901
 19684                           
 19685                           ;stkvar	_p @ sp[(-18)+16]
 19686  014FBE  0EFF               	movlw	-1
 19687  014FC0  BEE3               	btfsc	plusw1,7,c
 19688  014FC2  D007               	goto	u10270
 19689  014FC4  0EFF               	movlw	-1
 19690  014FC6  50E3               	movf	plusw1,w,c
 19691  014FC8  E103               	bnz	u10271
 19692  014FCA  0EFE               	movlw	-2
 19693  014FCC  04E3               	decf	plusw1,w,c
 19694  014FCE  B0D8               	btfsc	status,0,c
 19695  014FD0                     u10271:
 19696  014FD0  D6CA               	goto	l10901
 19697  014FD2                     u10270:
 19698                           
 19699                           ;stkvar	_w @ sp[(-18)+14]
 19700  014FD2  0EFD               	movlw	-3
 19701  014FD4  BEE3               	btfsc	plusw1,7,c
 19702  014FD6  D009               	goto	u10290
 19703  014FD8  0EFD               	movlw	-3
 19704  014FDA  50E3               	movf	plusw1,w,c
 19705  014FDC  E104               	bnz	u10280
 19706  014FDE  0EFC               	movlw	-4
 19707  014FE0  04E3               	decf	plusw1,w,c
 19708  014FE2  A0D8               	btfss	status,0,c
 19709  014FE4  D002               	goto	u10290
 19710  014FE6                     u10280:
 19711  014FE6  B225               	btfsc	_flags^0,1,c
 19712  014FE8  D6BE               	goto	l10901
 19713  014FEA                     u10290:
 19714                           
 19715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19716                           ;stkvar	_s @ sp[(-18)+12]
 19717  014FEA  0EFA               	movlw	-6
 19718  014FEC  006F FF8C  F001    	movff	plusw1,btemp
 19719  014FF2  0EFB               	movlw	-5
 19720  014FF4  50E3               	movf	plusw1,w,c
 19721  014FF6  1001               	iorwf	btemp^0,w,c
 19722  014FF8  A4D8               	btfss	status,2,c
 19723  014FFA  D002               	goto	u10310
 19724  014FFC  A425               	btfss	_flags^0,2,c
 19725  014FFE  D033               	goto	l10935
 19726  015000                     u10310:
 19727                           
 19728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19729                           ;stkvar	_i @ sp[(-18)+10]
 19730  015000  50E1               	movf	fsr1l,w,c
 19731  015002  0FF8               	addlw	-8
 19732  015004  6ED9               	movwf	fsr2l,c
 19733  015006  50E2               	movf	fsr1h,w,c
 19734  015008  6EDA               	movwf	fsr2h,c
 19735  01500A  0EFF               	movlw	255
 19736  01500C  22DA               	addwfc	fsr2h,f,c
 19737  01500E  06DE               	decf	postinc2,f,c
 19738  015010  0E00               	movlw	0
 19739  015012  5ADD               	subwfb	postdec2,f,c
 19740                           
 19741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19742                           ;stkvar	_s @ sp[(-18)+12]
 19743  015014  0EFA               	movlw	-6
 19744  015016  006F FF8C  F001    	movff	plusw1,btemp
 19745  01501C  0EFB               	movlw	-5
 19746  01501E  50E3               	movf	plusw1,w,c
 19747  015020  1001               	iorwf	btemp^0,w,c
 19748  015022  A4D8               	btfss	status,2,c
 19749  015024  D002               	goto	l10931
 19750  015026  0E2B               	movlw	43
 19751  015028  D001               	goto	L21
 19752  01502A                     l10931:
 19753  01502A  0E2D               	movlw	45
 19754  01502C                     L21:
 19755  01502C  6E0B               	movwf	(btemp+10)^0,c
 19756  01502E  0E00               	movlw	0
 19757  015030  6E0C               	movwf	(btemp+11)^0,c
 19758                           
 19759                           ;stkvar	_dtoa$5165 @ sp[(-18)+0]
 19760  015032  0EEE               	movlw	-18
 19761  015034  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19762  01503A  0EEF               	movlw	-17
 19763  01503C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19764                           
 19765                           ;stkvar	_dtoa$5165 @ sp[(-18)+0]
 19766                           ;stkvar	_i @ sp[(-18)+10]
 19767  015042  0EF8               	movlw	-8
 19768  015044  006F FF8C  F00B    	movff	plusw1,btemp+10
 19769  01504A  0EF9               	movlw	-7
 19770  01504C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19771  015052  0E94               	movlw	low _dbuf
 19772  015054  240B               	addwf	(btemp+10)^0,w,c
 19773  015056  6ED9               	movwf	fsr2l,c
 19774  015058  0E03               	movlw	high _dbuf
 19775  01505A  200C               	addwfc	(btemp+11)^0,w,c
 19776  01505C  6EDA               	movwf	fsr2h,c
 19777  01505E  0EEE               	movlw	-18
 19778  015060  006F FF8F FFDF     	movff	plusw1,indf2
 19779  015066                     l10935:
 19780                           
 19781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19782                           ;stkvar	_w @ sp[(-18)+14]
 19783  015066  0EFC               	movlw	-4
 19784  015068  006F FF8F FFE6     	movff	plusw1,postinc1
 19785  01506E  006F FF8F FFE6     	movff	plusw1,postinc1
 19786                           
 19787                           ;stkvar	_i @ sp[(-20)+10]
 19788  015074  0E94               	movlw	low _dbuf
 19789  015076  6E0B               	movwf	(btemp+10)^0,c
 19790  015078  0E03               	movlw	high _dbuf
 19791  01507A  6E0C               	movwf	(btemp+11)^0,c
 19792  01507C  0EF6               	movlw	-10
 19793  01507E  50E3               	movf	plusw1,w,c
 19794  015080  260B               	addwf	(btemp+10)^0,f,c
 19795  015082  0EF7               	movlw	-9
 19796  015084  50E3               	movf	plusw1,w,c
 19797  015086  220C               	addwfc	(btemp+11)^0,f,c
 19798  015088  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19799  01508E  0060  F033  FFE6   	movff	btemp+11,postinc1
 19800                           
 19801                           ;stkvar	_fp @ sp[(-22)+-2]
 19802  015094  0EE8               	movlw	-24
 19803  015096  006F FF8F FFE6     	movff	plusw1,postinc1
 19804  01509C  006F FF8F FFE6     	movff	plusw1,postinc1
 19805  0150A2  EC57  F0C2         	call	_pad	;wreg free
 19806                           
 19807                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19808  0150A6  0EE4               	movlw	228
 19809  0150A8  26E1               	addwf	fsr1l,f,c
 19810  0150AA  0EFF               	movlw	255
 19811  0150AC  22E2               	addwfc	fsr1h,f,c
 19812  0150AE  0012               	return		;funcret
 19813  0150B0                     __end_of_dtoa:
 19814                           	opt callstack 0
 19815                           
 19816 ;; *************** function _abs *****************
 19817 ;; Defined at:
 19818 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19819 ;; Parameters:    Size  Location     Type
 19820 ;;  a               2  [STACK] int 
 19821 ;; Auto vars:     Size  Location     Type
 19822 ;;		None
 19823 ;; Return value:  Size  Location     Type
 19824 ;;                  2  [STACK] int 
 19825 ;; Registers used:
 19826 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19827 ;; Tracked objects:
 19828 ;;		On entry : 0/3
 19829 ;;		On exit  : 0/0
 19830 ;;		Unchanged: 0/0
 19831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19836 ;;Total ram usage:        0 bytes
 19837 ;; Hardware stack levels used:    1
 19838 ;; Hardware stack levels required when called:   15
 19839 ;; This function calls:
 19840 ;;		Nothing
 19841 ;; This function is called by:
 19842 ;;		_dtoa
 19843 ;; This function uses a reentrant model
 19844 ;;
 19845                           
 19846                           	psect	text67
 19847  019C5C                     __ptext67:
 19848                           	opt callstack 0
 19849  019C5C                     _abs:
 19850                           	opt callstack 0
 19851                           
 19852                           ;stkvar	_a @ sp[(0)+-2]
 19853                           
 19854                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19855                           ;incstack = 0
 19856 ;; hardware stack exceeded
 19857  019C5C  0EFF               	movlw	-1
 19858  019C5E  BEE3               	btfsc	plusw1,7,c
 19859  019C60  D007               	goto	u5570
 19860  019C62  0EFF               	movlw	-1
 19861  019C64  50E3               	movf	plusw1,w,c
 19862  019C66  E112               	bnz	l7361
 19863  019C68  0EFE               	movlw	-2
 19864  019C6A  04E3               	decf	plusw1,w,c
 19865  019C6C  B0D8               	btfsc	status,0,c
 19866  019C6E  D00E               	goto	l7361
 19867  019C70                     u5570:
 19868                           
 19869                           ;stkvar	_a @ sp[(0)+-2]
 19870  019C70  0EFE               	movlw	-2
 19871  019C72  006F FF8C  F001    	movff	plusw1,btemp
 19872  019C78  1E01               	comf	btemp^0,f,c
 19873  019C7A  0EFF               	movlw	-1
 19874  019C7C  006F FF8C  F002    	movff	plusw1,btemp+1
 19875  019C82  1E02               	comf	(btemp+1)^0,f,c
 19876  019C84  2A01               	incf	btemp^0,f,c
 19877  019C86  B4D8               	btfsc	status,2,c
 19878  019C88  2A02               	incf	(btemp+1)^0,f,c
 19879  019C8A  D008               	goto	l2959
 19880  019C8C                     l7361:
 19881                           
 19882                           ;stkvar	_a @ sp[(0)+-2]
 19883  019C8C  0EFE               	movlw	-2
 19884  019C8E  006F FF8C  F001    	movff	plusw1,btemp
 19885  019C94  0EFF               	movlw	-1
 19886  019C96  006F FF8C  F002    	movff	plusw1,btemp+1
 19887  019C9C                     l2959:
 19888                           
 19889                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19890  019C9C  52E5               	movf	postdec1,f,c
 19891  019C9E  52E5               	movf	postdec1,f,c
 19892  019CA0  0012               	return		;funcret
 19893  019CA2                     __end_of_abs:
 19894                           	opt callstack 0
 19895                           
 19896 ;; *************** function ___aomod *****************
 19897 ;; Defined at:
 19898 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19899 ;; Parameters:    Size  Location     Type
 19900 ;;  dividend        8  [STACK] long long 
 19901 ;;  divisor         8  [STACK] long long 
 19902 ;; Auto vars:     Size  Location     Type
 19903 ;;  sign            1  [STACK] unsigned char 
 19904 ;;  counter         1  [STACK] unsigned char 
 19905 ;; Return value:  Size  Location     Type
 19906 ;;                  8  [STACK] long long 
 19907 ;; Registers used:
 19908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19909 ;; Tracked objects:
 19910 ;;		On entry : 0/3
 19911 ;;		On exit  : 0/0
 19912 ;;		Unchanged: 0/0
 19913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19918 ;;Total ram usage:        0 bytes
 19919 ;; Hardware stack levels used:    1
 19920 ;; Hardware stack levels required when called:   15
 19921 ;; This function calls:
 19922 ;;		Nothing
 19923 ;; This function is called by:
 19924 ;;		_dtoa
 19925 ;; This function uses a reentrant model
 19926 ;;
 19927                           
 19928                           	psect	text68
 19929  01689E                     __ptext68:
 19930                           	opt callstack 0
 19931  01689E                     ___aomod:
 19932                           	opt callstack 0
 19933                           
 19934                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19935  01689E  52E6               	movf	postinc1,f,c
 19936  0168A0  52E6               	movf	postinc1,f,c
 19937                           
 19938                           ;stkvar	_sign @ sp[(-2)+0]
 19939                           
 19940                           ;incstack = 0
 19941 ;; hardware stack exceeded
 19942  0168A2  0EFE               	movlw	-2
 19943  0168A4  6AE3               	clrf	plusw1,c
 19944                           
 19945                           ;stkvar	_dividend @ sp[(-2)+-8]
 19946  0168A6  0EFD               	movlw	-3
 19947  0168A8  AEE3               	btfss	plusw1,7,c
 19948  0168AA  D028               	goto	l7519
 19949                           
 19950                           ;stkvar	_dividend @ sp[(-2)+-8]
 19951                           ;stkvar	_dividend @ sp[(-2)+-8]
 19952  0168AC  0EF6               	movlw	-10
 19953  0168AE  6CE3               	negf	plusw1,c
 19954  0168B0  0EF7               	movlw	-9
 19955  0168B2  1EE3               	comf	plusw1,f,c
 19956  0168B4  0EF8               	movlw	-8
 19957  0168B6  1EE3               	comf	plusw1,f,c
 19958  0168B8  0EF9               	movlw	-7
 19959  0168BA  1EE3               	comf	plusw1,f,c
 19960  0168BC  0EFA               	movlw	-6
 19961  0168BE  1EE3               	comf	plusw1,f,c
 19962  0168C0  0EFB               	movlw	-5
 19963  0168C2  1EE3               	comf	plusw1,f,c
 19964  0168C4  0EFC               	movlw	-4
 19965  0168C6  1EE3               	comf	plusw1,f,c
 19966  0168C8  0EFD               	movlw	-3
 19967  0168CA  1EE3               	comf	plusw1,f,c
 19968  0168CC  E314               	bnc	u6000
 19969  0168CE  0EF7               	movlw	-9
 19970  0168D0  2AE3               	incf	plusw1,f,c
 19971  0168D2  E311               	bnc	u6000
 19972  0168D4  0EF8               	movlw	-8
 19973  0168D6  2AE3               	incf	plusw1,f,c
 19974  0168D8  E30E               	bnc	u6000
 19975  0168DA  0EF9               	movlw	-7
 19976  0168DC  2AE3               	incf	plusw1,f,c
 19977  0168DE  E30B               	bnc	u6000
 19978  0168E0  0EFA               	movlw	-6
 19979  0168E2  2AE3               	incf	plusw1,f,c
 19980  0168E4  E308               	bnc	u6000
 19981  0168E6  0EFB               	movlw	-5
 19982  0168E8  2AE3               	incf	plusw1,f,c
 19983  0168EA  E305               	bnc	u6000
 19984  0168EC  0EFC               	movlw	-4
 19985  0168EE  2AE3               	incf	plusw1,f,c
 19986  0168F0  E302               	bnc	u6000
 19987  0168F2  0EFD               	movlw	-3
 19988  0168F4  2AE3               	incf	plusw1,f,c
 19989  0168F6                     u6000:
 19990                           
 19991                           ;stkvar	_sign @ sp[(-2)+0]
 19992  0168F6  0EFE               	movlw	-2
 19993  0168F8  6AE3               	clrf	plusw1,c
 19994  0168FA  2AE3               	incf	plusw1,f,c
 19995  0168FC                     l7519:
 19996                           
 19997                           ;stkvar	_divisor @ sp[(-2)+-16]
 19998  0168FC  0EF5               	movlw	-11
 19999  0168FE  AEE3               	btfss	plusw1,7,c
 20000  016900  D025               	goto	u6020
 20001                           
 20002                           ;stkvar	_divisor @ sp[(-2)+-16]
 20003                           ;stkvar	_divisor @ sp[(-2)+-16]
 20004  016902  0EEE               	movlw	-18
 20005  016904  6CE3               	negf	plusw1,c
 20006  016906  0EEF               	movlw	-17
 20007  016908  1EE3               	comf	plusw1,f,c
 20008  01690A  0EF0               	movlw	-16
 20009  01690C  1EE3               	comf	plusw1,f,c
 20010  01690E  0EF1               	movlw	-15
 20011  016910  1EE3               	comf	plusw1,f,c
 20012  016912  0EF2               	movlw	-14
 20013  016914  1EE3               	comf	plusw1,f,c
 20014  016916  0EF3               	movlw	-13
 20015  016918  1EE3               	comf	plusw1,f,c
 20016  01691A  0EF4               	movlw	-12
 20017  01691C  1EE3               	comf	plusw1,f,c
 20018  01691E  0EF5               	movlw	-11
 20019  016920  1EE3               	comf	plusw1,f,c
 20020  016922  E314               	bnc	u6020
 20021  016924  0EEF               	movlw	-17
 20022  016926  2AE3               	incf	plusw1,f,c
 20023  016928  E311               	bnc	u6020
 20024  01692A  0EF0               	movlw	-16
 20025  01692C  2AE3               	incf	plusw1,f,c
 20026  01692E  E30E               	bnc	u6020
 20027  016930  0EF1               	movlw	-15
 20028  016932  2AE3               	incf	plusw1,f,c
 20029  016934  E30B               	bnc	u6020
 20030  016936  0EF2               	movlw	-14
 20031  016938  2AE3               	incf	plusw1,f,c
 20032  01693A  E308               	bnc	u6020
 20033  01693C  0EF3               	movlw	-13
 20034  01693E  2AE3               	incf	plusw1,f,c
 20035  016940  E305               	bnc	u6020
 20036  016942  0EF4               	movlw	-12
 20037  016944  2AE3               	incf	plusw1,f,c
 20038  016946  E302               	bnc	u6020
 20039  016948  0EF5               	movlw	-11
 20040  01694A  2AE3               	incf	plusw1,f,c
 20041  01694C                     u6020:
 20042                           
 20043                           ;stkvar	_divisor @ sp[(-2)+-16]
 20044  01694C  0EEE               	movlw	-18
 20045  01694E  50E3               	movf	plusw1,w,c
 20046  016950  E116               	bnz	u6030
 20047  016952  0EEF               	movlw	-17
 20048  016954  50E3               	movf	plusw1,w,c
 20049  016956  E113               	bnz	u6030
 20050  016958  0EF0               	movlw	-16
 20051  01695A  50E3               	movf	plusw1,w,c
 20052  01695C  E110               	bnz	u6030
 20053  01695E  0EF1               	movlw	-15
 20054  016960  50E3               	movf	plusw1,w,c
 20055  016962  E10D               	bnz	u6030
 20056  016964  0EF2               	movlw	-14
 20057  016966  50E3               	movf	plusw1,w,c
 20058  016968  E10A               	bnz	u6030
 20059  01696A  0EF3               	movlw	-13
 20060  01696C  50E3               	movf	plusw1,w,c
 20061  01696E  E107               	bnz	u6030
 20062  016970  0EF4               	movlw	-12
 20063  016972  50E3               	movf	plusw1,w,c
 20064  016974  E104               	bnz	u6030
 20065  016976  0EF5               	movlw	-11
 20066  016978  50E3               	movf	plusw1,w,c
 20067  01697A  B4D8               	btfsc	status,2,c
 20068  01697C  D075               	goto	u6060
 20069  01697E                     u6030:
 20070                           
 20071                           ;stkvar	_counter @ sp[(-2)+1]
 20072  01697E  0EFF               	movlw	-1
 20073  016980  6AE3               	clrf	plusw1,c
 20074  016982  D012               	goto	L22
 20075  016984                     l7527:
 20076                           
 20077                           ;stkvar	_divisor @ sp[(-2)+-16]
 20078  016984  90D8               	bcf	status,0,c
 20079  016986  0EEE               	movlw	-18
 20080  016988  36E3               	rlcf	plusw1,f,c
 20081  01698A  0EEF               	movlw	-17
 20082  01698C  36E3               	rlcf	plusw1,f,c
 20083  01698E  0EF0               	movlw	-16
 20084  016990  36E3               	rlcf	plusw1,f,c
 20085  016992  0EF1               	movlw	-15
 20086  016994  36E3               	rlcf	plusw1,f,c
 20087  016996  0EF2               	movlw	-14
 20088  016998  36E3               	rlcf	plusw1,f,c
 20089  01699A  0EF3               	movlw	-13
 20090  01699C  36E3               	rlcf	plusw1,f,c
 20091  01699E  0EF4               	movlw	-12
 20092  0169A0  36E3               	rlcf	plusw1,f,c
 20093  0169A2  0EF5               	movlw	-11
 20094  0169A4  36E3               	rlcf	plusw1,f,c
 20095                           
 20096                           ;stkvar	_counter @ sp[(-2)+1]
 20097  0169A6  0EFF               	movlw	-1
 20098  0169A8                     L22:
 20099  0169A8  2AE3               	incf	plusw1,f,c
 20100                           
 20101                           ;stkvar	_divisor @ sp[(-2)+-16]
 20102  0169AA  0EF5               	movlw	-11
 20103  0169AC  AEE3               	btfss	plusw1,7,c
 20104  0169AE  D7EA               	goto	l7527
 20105  0169B0                     u6040:
 20106                           
 20107                           ;stkvar	_divisor @ sp[(-2)+-16]
 20108                           ;stkvar	_dividend @ sp[(-2)+-8]
 20109  0169B0  50E1               	movf	fsr1l,w,c
 20110  0169B2  0FF6               	addlw	-10
 20111  0169B4  6ED9               	movwf	fsr2l,c
 20112  0169B6  50E2               	movf	fsr1h,w,c
 20113  0169B8  6EDA               	movwf	fsr2h,c
 20114  0169BA  0EFF               	movlw	255
 20115  0169BC  22DA               	addwfc	fsr2h,f,c
 20116  0169BE  0EEE               	movlw	-18
 20117  0169C0  50E3               	movf	plusw1,w,c
 20118  0169C2  5CDE               	subwf	postinc2,w,c
 20119  0169C4  0EEF               	movlw	-17
 20120  0169C6  50E3               	movf	plusw1,w,c
 20121  0169C8  58DE               	subwfb	postinc2,w,c
 20122  0169CA  0EF0               	movlw	-16
 20123  0169CC  50E3               	movf	plusw1,w,c
 20124  0169CE  58DE               	subwfb	postinc2,w,c
 20125  0169D0  0EF1               	movlw	-15
 20126  0169D2  50E3               	movf	plusw1,w,c
 20127  0169D4  58DE               	subwfb	postinc2,w,c
 20128  0169D6  0EF2               	movlw	-14
 20129  0169D8  50E3               	movf	plusw1,w,c
 20130  0169DA  58DE               	subwfb	postinc2,w,c
 20131  0169DC  0EF3               	movlw	-13
 20132  0169DE  50E3               	movf	plusw1,w,c
 20133  0169E0  58DE               	subwfb	postinc2,w,c
 20134  0169E2  0EF4               	movlw	-12
 20135  0169E4  50E3               	movf	plusw1,w,c
 20136  0169E6  58DE               	subwfb	postinc2,w,c
 20137  0169E8  0EF5               	movlw	-11
 20138  0169EA  50E3               	movf	plusw1,w,c
 20139  0169EC  58DE               	subwfb	postinc2,w,c
 20140  0169EE  A0D8               	btfss	status,0,c
 20141  0169F0  D01F               	goto	l7535
 20142                           
 20143                           ;stkvar	_divisor @ sp[(-2)+-16]
 20144                           ;stkvar	_dividend @ sp[(-2)+-8]
 20145  0169F2  50E1               	movf	fsr1l,w,c
 20146  0169F4  0FF6               	addlw	-10
 20147  0169F6  6ED9               	movwf	fsr2l,c
 20148  0169F8  50E2               	movf	fsr1h,w,c
 20149  0169FA  6EDA               	movwf	fsr2h,c
 20150  0169FC  0EFF               	movlw	255
 20151  0169FE  22DA               	addwfc	fsr2h,f,c
 20152  016A00  0EEE               	movlw	-18
 20153  016A02  50E3               	movf	plusw1,w,c
 20154  016A04  5EDE               	subwf	postinc2,f,c
 20155  016A06  0EEF               	movlw	-17
 20156  016A08  50E3               	movf	plusw1,w,c
 20157  016A0A  5ADE               	subwfb	postinc2,f,c
 20158  016A0C  0EF0               	movlw	-16
 20159  016A0E  50E3               	movf	plusw1,w,c
 20160  016A10  5ADE               	subwfb	postinc2,f,c
 20161  016A12  0EF1               	movlw	-15
 20162  016A14  50E3               	movf	plusw1,w,c
 20163  016A16  5ADE               	subwfb	postinc2,f,c
 20164  016A18  0EF2               	movlw	-14
 20165  016A1A  50E3               	movf	plusw1,w,c
 20166  016A1C  5ADE               	subwfb	postinc2,f,c
 20167  016A1E  0EF3               	movlw	-13
 20168  016A20  50E3               	movf	plusw1,w,c
 20169  016A22  5ADE               	subwfb	postinc2,f,c
 20170  016A24  0EF4               	movlw	-12
 20171  016A26  50E3               	movf	plusw1,w,c
 20172  016A28  5ADE               	subwfb	postinc2,f,c
 20173  016A2A  0EF5               	movlw	-11
 20174  016A2C  50E3               	movf	plusw1,w,c
 20175  016A2E  5ADE               	subwfb	postinc2,f,c
 20176  016A30                     l7535:
 20177                           
 20178                           ;stkvar	_divisor @ sp[(-2)+-16]
 20179  016A30  90D8               	bcf	status,0,c
 20180  016A32  0EF5               	movlw	-11
 20181  016A34  32E3               	rrcf	plusw1,f,c
 20182  016A36  0EF4               	movlw	-12
 20183  016A38  32E3               	rrcf	plusw1,f,c
 20184  016A3A  0EF3               	movlw	-13
 20185  016A3C  32E3               	rrcf	plusw1,f,c
 20186  016A3E  0EF2               	movlw	-14
 20187  016A40  32E3               	rrcf	plusw1,f,c
 20188  016A42  0EF1               	movlw	-15
 20189  016A44  32E3               	rrcf	plusw1,f,c
 20190  016A46  0EF0               	movlw	-16
 20191  016A48  32E3               	rrcf	plusw1,f,c
 20192  016A4A  0EEF               	movlw	-17
 20193  016A4C  32E3               	rrcf	plusw1,f,c
 20194  016A4E  0EEE               	movlw	-18
 20195  016A50  32E3               	rrcf	plusw1,f,c
 20196                           
 20197                           ;stkvar	_counter @ sp[(-2)+1]
 20198  016A52  0EFF               	movlw	-1
 20199  016A54  50E3               	movf	plusw1,w,c
 20200  016A56  6E01               	movwf	btemp^0,c
 20201  016A58  0E01               	movlw	1
 20202  016A5A  5E01               	subwf	btemp^0,f,c
 20203  016A5C  0EFF               	movlw	-1
 20204  016A5E  0060  F007  FFE3   	movff	btemp,plusw1
 20205  016A64  A4D8               	btfss	status,2,c
 20206  016A66  D7A4               	goto	u6040
 20207  016A68                     u6060:
 20208                           
 20209                           ;stkvar	_sign @ sp[(-2)+0]
 20210  016A68  0EFE               	movlw	-2
 20211  016A6A  50E3               	movf	plusw1,w,c
 20212  016A6C  B4D8               	btfsc	status,2,c
 20213  016A6E  D025               	goto	u6080
 20214                           
 20215                           ;stkvar	_dividend @ sp[(-2)+-8]
 20216                           ;stkvar	_dividend @ sp[(-2)+-8]
 20217  016A70  0EF6               	movlw	-10
 20218  016A72  6CE3               	negf	plusw1,c
 20219  016A74  0EF7               	movlw	-9
 20220  016A76  1EE3               	comf	plusw1,f,c
 20221  016A78  0EF8               	movlw	-8
 20222  016A7A  1EE3               	comf	plusw1,f,c
 20223  016A7C  0EF9               	movlw	-7
 20224  016A7E  1EE3               	comf	plusw1,f,c
 20225  016A80  0EFA               	movlw	-6
 20226  016A82  1EE3               	comf	plusw1,f,c
 20227  016A84  0EFB               	movlw	-5
 20228  016A86  1EE3               	comf	plusw1,f,c
 20229  016A88  0EFC               	movlw	-4
 20230  016A8A  1EE3               	comf	plusw1,f,c
 20231  016A8C  0EFD               	movlw	-3
 20232  016A8E  1EE3               	comf	plusw1,f,c
 20233  016A90  E314               	bnc	u6080
 20234  016A92  0EF7               	movlw	-9
 20235  016A94  2AE3               	incf	plusw1,f,c
 20236  016A96  E311               	bnc	u6080
 20237  016A98  0EF8               	movlw	-8
 20238  016A9A  2AE3               	incf	plusw1,f,c
 20239  016A9C  E30E               	bnc	u6080
 20240  016A9E  0EF9               	movlw	-7
 20241  016AA0  2AE3               	incf	plusw1,f,c
 20242  016AA2  E30B               	bnc	u6080
 20243  016AA4  0EFA               	movlw	-6
 20244  016AA6  2AE3               	incf	plusw1,f,c
 20245  016AA8  E308               	bnc	u6080
 20246  016AAA  0EFB               	movlw	-5
 20247  016AAC  2AE3               	incf	plusw1,f,c
 20248  016AAE  E305               	bnc	u6080
 20249  016AB0  0EFC               	movlw	-4
 20250  016AB2  2AE3               	incf	plusw1,f,c
 20251  016AB4  E302               	bnc	u6080
 20252  016AB6  0EFD               	movlw	-3
 20253  016AB8  2AE3               	incf	plusw1,f,c
 20254  016ABA                     u6080:
 20255                           
 20256                           ;stkvar	_dividend @ sp[(-2)+-8]
 20257  016ABA  0EF6               	movlw	246
 20258  016ABC  24E1               	addwf	fsr1l,w,c
 20259  016ABE  6ED9               	movwf	fsr2l,c
 20260  016AC0  0EFF               	movlw	255
 20261  016AC2  20E2               	addwfc	fsr1h,w,c
 20262  016AC4  6EDA               	movwf	fsr2h,c
 20263                           
 20264                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20265  016AC6  0E08               	movlw	8
 20266  016AC8  6E01               	movwf	btemp^0,c
 20267  016ACA  0EF6               	movlw	-10
 20268  016ACC                     us609999:
 20269  016ACC  006F FF7B FFE3     	movff	postinc2,plusw1
 20270  016AD2  28E8               	incf	wreg,w,c
 20271  016AD4  2E01               	decfsz	btemp^0,f,c
 20272  016AD6  D7FA               	bra	us609999
 20273                           
 20274                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20275  016AD8  52E5               	movf	postdec1,f,c
 20276  016ADA  52E5               	movf	postdec1,f,c
 20277  016ADC  0012               	return		;funcret
 20278  016ADE                     __end_of___aomod:
 20279                           	opt callstack 0
 20280                           
 20281 ;; *************** function ___aodiv *****************
 20282 ;; Defined at:
 20283 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20284 ;; Parameters:    Size  Location     Type
 20285 ;;  dividend        8  [STACK] long long 
 20286 ;;  divisor         8  [STACK] long long 
 20287 ;; Auto vars:     Size  Location     Type
 20288 ;;  quotient        8  [STACK] long long 
 20289 ;;  sign            1  [STACK] unsigned char 
 20290 ;;  counter         1  [STACK] unsigned char 
 20291 ;; Return value:  Size  Location     Type
 20292 ;;                  8  [STACK] long long 
 20293 ;; Registers used:
 20294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20295 ;; Tracked objects:
 20296 ;;		On entry : 0/3
 20297 ;;		On exit  : 0/0
 20298 ;;		Unchanged: 0/0
 20299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20304 ;;Total ram usage:        0 bytes
 20305 ;; Hardware stack levels used:    1
 20306 ;; Hardware stack levels required when called:   15
 20307 ;; This function calls:
 20308 ;;		Nothing
 20309 ;; This function is called by:
 20310 ;;		_dtoa
 20311 ;; This function uses a reentrant model
 20312 ;;
 20313                           
 20314                           	psect	text69
 20315  0163AA                     __ptext69:
 20316                           	opt callstack 0
 20317  0163AA                     ___aodiv:
 20318                           	opt callstack 0
 20319                           
 20320                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20321  0163AA  0E0A               	movlw	10
 20322  0163AC  26E1               	addwf	fsr1l,f,c
 20323  0163AE  0E00               	movlw	0
 20324  0163B0  22E2               	addwfc	fsr1h,f,c
 20325                           
 20326                           ;stkvar	_sign @ sp[(-10)+8]
 20327                           
 20328                           ;incstack = 0
 20329 ;; hardware stack exceeded
 20330  0163B2  0EFE               	movlw	-2
 20331  0163B4  6AE3               	clrf	plusw1,c
 20332                           
 20333                           ;stkvar	_divisor @ sp[(-10)+-16]
 20334  0163B6  0EED               	movlw	-19
 20335  0163B8  AEE3               	btfss	plusw1,7,c
 20336  0163BA  D028               	goto	l7475
 20337                           
 20338                           ;stkvar	_divisor @ sp[(-10)+-16]
 20339                           ;stkvar	_divisor @ sp[(-10)+-16]
 20340  0163BC  0EE6               	movlw	-26
 20341  0163BE  6CE3               	negf	plusw1,c
 20342  0163C0  0EE7               	movlw	-25
 20343  0163C2  1EE3               	comf	plusw1,f,c
 20344  0163C4  0EE8               	movlw	-24
 20345  0163C6  1EE3               	comf	plusw1,f,c
 20346  0163C8  0EE9               	movlw	-23
 20347  0163CA  1EE3               	comf	plusw1,f,c
 20348  0163CC  0EEA               	movlw	-22
 20349  0163CE  1EE3               	comf	plusw1,f,c
 20350  0163D0  0EEB               	movlw	-21
 20351  0163D2  1EE3               	comf	plusw1,f,c
 20352  0163D4  0EEC               	movlw	-20
 20353  0163D6  1EE3               	comf	plusw1,f,c
 20354  0163D8  0EED               	movlw	-19
 20355  0163DA  1EE3               	comf	plusw1,f,c
 20356  0163DC  E314               	bnc	u5880
 20357  0163DE  0EE7               	movlw	-25
 20358  0163E0  2AE3               	incf	plusw1,f,c
 20359  0163E2  E311               	bnc	u5880
 20360  0163E4  0EE8               	movlw	-24
 20361  0163E6  2AE3               	incf	plusw1,f,c
 20362  0163E8  E30E               	bnc	u5880
 20363  0163EA  0EE9               	movlw	-23
 20364  0163EC  2AE3               	incf	plusw1,f,c
 20365  0163EE  E30B               	bnc	u5880
 20366  0163F0  0EEA               	movlw	-22
 20367  0163F2  2AE3               	incf	plusw1,f,c
 20368  0163F4  E308               	bnc	u5880
 20369  0163F6  0EEB               	movlw	-21
 20370  0163F8  2AE3               	incf	plusw1,f,c
 20371  0163FA  E305               	bnc	u5880
 20372  0163FC  0EEC               	movlw	-20
 20373  0163FE  2AE3               	incf	plusw1,f,c
 20374  016400  E302               	bnc	u5880
 20375  016402  0EED               	movlw	-19
 20376  016404  2AE3               	incf	plusw1,f,c
 20377  016406                     u5880:
 20378                           
 20379                           ;stkvar	_sign @ sp[(-10)+8]
 20380  016406  0EFE               	movlw	-2
 20381  016408  6AE3               	clrf	plusw1,c
 20382  01640A  2AE3               	incf	plusw1,f,c
 20383  01640C                     l7475:
 20384                           
 20385                           ;stkvar	_dividend @ sp[(-10)+-8]
 20386  01640C  0EF5               	movlw	-11
 20387  01640E  AEE3               	btfss	plusw1,7,c
 20388  016410  D027               	goto	l7481
 20389                           
 20390                           ;stkvar	_dividend @ sp[(-10)+-8]
 20391                           ;stkvar	_dividend @ sp[(-10)+-8]
 20392  016412  0EEE               	movlw	-18
 20393  016414  6CE3               	negf	plusw1,c
 20394  016416  0EEF               	movlw	-17
 20395  016418  1EE3               	comf	plusw1,f,c
 20396  01641A  0EF0               	movlw	-16
 20397  01641C  1EE3               	comf	plusw1,f,c
 20398  01641E  0EF1               	movlw	-15
 20399  016420  1EE3               	comf	plusw1,f,c
 20400  016422  0EF2               	movlw	-14
 20401  016424  1EE3               	comf	plusw1,f,c
 20402  016426  0EF3               	movlw	-13
 20403  016428  1EE3               	comf	plusw1,f,c
 20404  01642A  0EF4               	movlw	-12
 20405  01642C  1EE3               	comf	plusw1,f,c
 20406  01642E  0EF5               	movlw	-11
 20407  016430  1EE3               	comf	plusw1,f,c
 20408  016432  E314               	bnc	u5900
 20409  016434  0EEF               	movlw	-17
 20410  016436  2AE3               	incf	plusw1,f,c
 20411  016438  E311               	bnc	u5900
 20412  01643A  0EF0               	movlw	-16
 20413  01643C  2AE3               	incf	plusw1,f,c
 20414  01643E  E30E               	bnc	u5900
 20415  016440  0EF1               	movlw	-15
 20416  016442  2AE3               	incf	plusw1,f,c
 20417  016444  E30B               	bnc	u5900
 20418  016446  0EF2               	movlw	-14
 20419  016448  2AE3               	incf	plusw1,f,c
 20420  01644A  E308               	bnc	u5900
 20421  01644C  0EF3               	movlw	-13
 20422  01644E  2AE3               	incf	plusw1,f,c
 20423  016450  E305               	bnc	u5900
 20424  016452  0EF4               	movlw	-12
 20425  016454  2AE3               	incf	plusw1,f,c
 20426  016456  E302               	bnc	u5900
 20427  016458  0EF5               	movlw	-11
 20428  01645A  2AE3               	incf	plusw1,f,c
 20429  01645C                     u5900:
 20430                           
 20431                           ;stkvar	_sign @ sp[(-10)+8]
 20432  01645C  0EFE               	movlw	-2
 20433  01645E  70E3               	btg	plusw1,0,c
 20434  016460                     l7481:
 20435                           
 20436                           ;stkvar	_quotient @ sp[(-10)+0]
 20437  016460  0E07               	movlw	7
 20438  016462  6E01               	movwf	btemp^0,c
 20439  016464  0EF6               	movlw	-10
 20440  016466                     u5911:
 20441  016466  6AE3               	clrf	plusw1,c
 20442  016468  2AE8               	incf	wreg,f,c
 20443  01646A  0601               	decf	btemp^0,f,c
 20444  01646C  E2FC               	bc	u5911
 20445                           
 20446                           ;stkvar	_divisor @ sp[(-10)+-16]
 20447  01646E  0EE6               	movlw	-26
 20448  016470  50E3               	movf	plusw1,w,c
 20449  016472  E116               	bnz	u5920
 20450  016474  0EE7               	movlw	-25
 20451  016476  50E3               	movf	plusw1,w,c
 20452  016478  E113               	bnz	u5920
 20453  01647A  0EE8               	movlw	-24
 20454  01647C  50E3               	movf	plusw1,w,c
 20455  01647E  E110               	bnz	u5920
 20456  016480  0EE9               	movlw	-23
 20457  016482  50E3               	movf	plusw1,w,c
 20458  016484  E10D               	bnz	u5920
 20459  016486  0EEA               	movlw	-22
 20460  016488  50E3               	movf	plusw1,w,c
 20461  01648A  E10A               	bnz	u5920
 20462  01648C  0EEB               	movlw	-21
 20463  01648E  50E3               	movf	plusw1,w,c
 20464  016490  E107               	bnz	u5920
 20465  016492  0EEC               	movlw	-20
 20466  016494  50E3               	movf	plusw1,w,c
 20467  016496  E104               	bnz	u5920
 20468  016498  0EED               	movlw	-19
 20469  01649A  50E3               	movf	plusw1,w,c
 20470  01649C  B4D8               	btfsc	status,2,c
 20471  01649E  D088               	goto	u5950
 20472  0164A0                     u5920:
 20473                           
 20474                           ;stkvar	_counter @ sp[(-10)+9]
 20475  0164A0  0EFF               	movlw	-1
 20476  0164A2  6AE3               	clrf	plusw1,c
 20477  0164A4  D012               	goto	L23
 20478  0164A6                     l7487:
 20479                           
 20480                           ;stkvar	_divisor @ sp[(-10)+-16]
 20481  0164A6  90D8               	bcf	status,0,c
 20482  0164A8  0EE6               	movlw	-26
 20483  0164AA  36E3               	rlcf	plusw1,f,c
 20484  0164AC  0EE7               	movlw	-25
 20485  0164AE  36E3               	rlcf	plusw1,f,c
 20486  0164B0  0EE8               	movlw	-24
 20487  0164B2  36E3               	rlcf	plusw1,f,c
 20488  0164B4  0EE9               	movlw	-23
 20489  0164B6  36E3               	rlcf	plusw1,f,c
 20490  0164B8  0EEA               	movlw	-22
 20491  0164BA  36E3               	rlcf	plusw1,f,c
 20492  0164BC  0EEB               	movlw	-21
 20493  0164BE  36E3               	rlcf	plusw1,f,c
 20494  0164C0  0EEC               	movlw	-20
 20495  0164C2  36E3               	rlcf	plusw1,f,c
 20496  0164C4  0EED               	movlw	-19
 20497  0164C6  36E3               	rlcf	plusw1,f,c
 20498                           
 20499                           ;stkvar	_counter @ sp[(-10)+9]
 20500  0164C8  0EFF               	movlw	-1
 20501  0164CA                     L23:
 20502  0164CA  2AE3               	incf	plusw1,f,c
 20503                           
 20504                           ;stkvar	_divisor @ sp[(-10)+-16]
 20505  0164CC  0EED               	movlw	-19
 20506  0164CE  AEE3               	btfss	plusw1,7,c
 20507  0164D0  D7EA               	goto	l7487
 20508  0164D2                     u5930:
 20509                           
 20510                           ;stkvar	_quotient @ sp[(-10)+0]
 20511  0164D2  90D8               	bcf	status,0,c
 20512  0164D4  0EF6               	movlw	-10
 20513  0164D6  36E3               	rlcf	plusw1,f,c
 20514  0164D8  0EF7               	movlw	-9
 20515  0164DA  36E3               	rlcf	plusw1,f,c
 20516  0164DC  0EF8               	movlw	-8
 20517  0164DE  36E3               	rlcf	plusw1,f,c
 20518  0164E0  0EF9               	movlw	-7
 20519  0164E2  36E3               	rlcf	plusw1,f,c
 20520  0164E4  0EFA               	movlw	-6
 20521  0164E6  36E3               	rlcf	plusw1,f,c
 20522  0164E8  0EFB               	movlw	-5
 20523  0164EA  36E3               	rlcf	plusw1,f,c
 20524  0164EC  0EFC               	movlw	-4
 20525  0164EE  36E3               	rlcf	plusw1,f,c
 20526  0164F0  0EFD               	movlw	-3
 20527  0164F2  36E3               	rlcf	plusw1,f,c
 20528                           
 20529                           ;stkvar	_divisor @ sp[(-10)+-16]
 20530                           ;stkvar	_dividend @ sp[(-10)+-8]
 20531  0164F4  50E1               	movf	fsr1l,w,c
 20532  0164F6  0FEE               	addlw	-18
 20533  0164F8  6ED9               	movwf	fsr2l,c
 20534  0164FA  50E2               	movf	fsr1h,w,c
 20535  0164FC  6EDA               	movwf	fsr2h,c
 20536  0164FE  0EFF               	movlw	255
 20537  016500  22DA               	addwfc	fsr2h,f,c
 20538  016502  0EE6               	movlw	-26
 20539  016504  50E3               	movf	plusw1,w,c
 20540  016506  5CDE               	subwf	postinc2,w,c
 20541  016508  0EE7               	movlw	-25
 20542  01650A  50E3               	movf	plusw1,w,c
 20543  01650C  58DE               	subwfb	postinc2,w,c
 20544  01650E  0EE8               	movlw	-24
 20545  016510  50E3               	movf	plusw1,w,c
 20546  016512  58DE               	subwfb	postinc2,w,c
 20547  016514  0EE9               	movlw	-23
 20548  016516  50E3               	movf	plusw1,w,c
 20549  016518  58DE               	subwfb	postinc2,w,c
 20550  01651A  0EEA               	movlw	-22
 20551  01651C  50E3               	movf	plusw1,w,c
 20552  01651E  58DE               	subwfb	postinc2,w,c
 20553  016520  0EEB               	movlw	-21
 20554  016522  50E3               	movf	plusw1,w,c
 20555  016524  58DE               	subwfb	postinc2,w,c
 20556  016526  0EEC               	movlw	-20
 20557  016528  50E3               	movf	plusw1,w,c
 20558  01652A  58DE               	subwfb	postinc2,w,c
 20559  01652C  0EED               	movlw	-19
 20560  01652E  50E3               	movf	plusw1,w,c
 20561  016530  58DE               	subwfb	postinc2,w,c
 20562  016532  A0D8               	btfss	status,0,c
 20563  016534  D021               	goto	l7499
 20564                           
 20565                           ;stkvar	_divisor @ sp[(-10)+-16]
 20566                           ;stkvar	_dividend @ sp[(-10)+-8]
 20567  016536  50E1               	movf	fsr1l,w,c
 20568  016538  0FEE               	addlw	-18
 20569  01653A  6ED9               	movwf	fsr2l,c
 20570  01653C  50E2               	movf	fsr1h,w,c
 20571  01653E  6EDA               	movwf	fsr2h,c
 20572  016540  0EFF               	movlw	255
 20573  016542  22DA               	addwfc	fsr2h,f,c
 20574  016544  0EE6               	movlw	-26
 20575  016546  50E3               	movf	plusw1,w,c
 20576  016548  5EDE               	subwf	postinc2,f,c
 20577  01654A  0EE7               	movlw	-25
 20578  01654C  50E3               	movf	plusw1,w,c
 20579  01654E  5ADE               	subwfb	postinc2,f,c
 20580  016550  0EE8               	movlw	-24
 20581  016552  50E3               	movf	plusw1,w,c
 20582  016554  5ADE               	subwfb	postinc2,f,c
 20583  016556  0EE9               	movlw	-23
 20584  016558  50E3               	movf	plusw1,w,c
 20585  01655A  5ADE               	subwfb	postinc2,f,c
 20586  01655C  0EEA               	movlw	-22
 20587  01655E  50E3               	movf	plusw1,w,c
 20588  016560  5ADE               	subwfb	postinc2,f,c
 20589  016562  0EEB               	movlw	-21
 20590  016564  50E3               	movf	plusw1,w,c
 20591  016566  5ADE               	subwfb	postinc2,f,c
 20592  016568  0EEC               	movlw	-20
 20593  01656A  50E3               	movf	plusw1,w,c
 20594  01656C  5ADE               	subwfb	postinc2,f,c
 20595  01656E  0EED               	movlw	-19
 20596  016570  50E3               	movf	plusw1,w,c
 20597  016572  5ADE               	subwfb	postinc2,f,c
 20598                           
 20599                           ;stkvar	_quotient @ sp[(-10)+0]
 20600  016574  0EF6               	movlw	-10
 20601  016576  80E3               	bsf	plusw1,0,c
 20602  016578                     l7499:
 20603                           
 20604                           ;stkvar	_divisor @ sp[(-10)+-16]
 20605  016578  90D8               	bcf	status,0,c
 20606  01657A  0EED               	movlw	-19
 20607  01657C  32E3               	rrcf	plusw1,f,c
 20608  01657E  0EEC               	movlw	-20
 20609  016580  32E3               	rrcf	plusw1,f,c
 20610  016582  0EEB               	movlw	-21
 20611  016584  32E3               	rrcf	plusw1,f,c
 20612  016586  0EEA               	movlw	-22
 20613  016588  32E3               	rrcf	plusw1,f,c
 20614  01658A  0EE9               	movlw	-23
 20615  01658C  32E3               	rrcf	plusw1,f,c
 20616  01658E  0EE8               	movlw	-24
 20617  016590  32E3               	rrcf	plusw1,f,c
 20618  016592  0EE7               	movlw	-25
 20619  016594  32E3               	rrcf	plusw1,f,c
 20620  016596  0EE6               	movlw	-26
 20621  016598  32E3               	rrcf	plusw1,f,c
 20622                           
 20623                           ;stkvar	_counter @ sp[(-10)+9]
 20624  01659A  0EFF               	movlw	-1
 20625  01659C  50E3               	movf	plusw1,w,c
 20626  01659E  6E01               	movwf	btemp^0,c
 20627  0165A0  0E01               	movlw	1
 20628  0165A2  5E01               	subwf	btemp^0,f,c
 20629  0165A4  0EFF               	movlw	-1
 20630  0165A6  0060  F007  FFE3   	movff	btemp,plusw1
 20631  0165AC  A4D8               	btfss	status,2,c
 20632  0165AE  D791               	goto	u5930
 20633  0165B0                     u5950:
 20634                           
 20635                           ;stkvar	_sign @ sp[(-10)+8]
 20636  0165B0  0EFE               	movlw	-2
 20637  0165B2  50E3               	movf	plusw1,w,c
 20638  0165B4  B4D8               	btfsc	status,2,c
 20639  0165B6  D025               	goto	u5970
 20640                           
 20641                           ;stkvar	_quotient @ sp[(-10)+0]
 20642                           ;stkvar	_quotient @ sp[(-10)+0]
 20643  0165B8  0EF6               	movlw	-10
 20644  0165BA  6CE3               	negf	plusw1,c
 20645  0165BC  0EF7               	movlw	-9
 20646  0165BE  1EE3               	comf	plusw1,f,c
 20647  0165C0  0EF8               	movlw	-8
 20648  0165C2  1EE3               	comf	plusw1,f,c
 20649  0165C4  0EF9               	movlw	-7
 20650  0165C6  1EE3               	comf	plusw1,f,c
 20651  0165C8  0EFA               	movlw	-6
 20652  0165CA  1EE3               	comf	plusw1,f,c
 20653  0165CC  0EFB               	movlw	-5
 20654  0165CE  1EE3               	comf	plusw1,f,c
 20655  0165D0  0EFC               	movlw	-4
 20656  0165D2  1EE3               	comf	plusw1,f,c
 20657  0165D4  0EFD               	movlw	-3
 20658  0165D6  1EE3               	comf	plusw1,f,c
 20659  0165D8  E314               	bnc	u5970
 20660  0165DA  0EF7               	movlw	-9
 20661  0165DC  2AE3               	incf	plusw1,f,c
 20662  0165DE  E311               	bnc	u5970
 20663  0165E0  0EF8               	movlw	-8
 20664  0165E2  2AE3               	incf	plusw1,f,c
 20665  0165E4  E30E               	bnc	u5970
 20666  0165E6  0EF9               	movlw	-7
 20667  0165E8  2AE3               	incf	plusw1,f,c
 20668  0165EA  E30B               	bnc	u5970
 20669  0165EC  0EFA               	movlw	-6
 20670  0165EE  2AE3               	incf	plusw1,f,c
 20671  0165F0  E308               	bnc	u5970
 20672  0165F2  0EFB               	movlw	-5
 20673  0165F4  2AE3               	incf	plusw1,f,c
 20674  0165F6  E305               	bnc	u5970
 20675  0165F8  0EFC               	movlw	-4
 20676  0165FA  2AE3               	incf	plusw1,f,c
 20677  0165FC  E302               	bnc	u5970
 20678  0165FE  0EFD               	movlw	-3
 20679  016600  2AE3               	incf	plusw1,f,c
 20680  016602                     u5970:
 20681                           
 20682                           ;stkvar	_quotient @ sp[(-10)+0]
 20683  016602  0EF6               	movlw	246
 20684  016604  24E1               	addwf	fsr1l,w,c
 20685  016606  6ED9               	movwf	fsr2l,c
 20686  016608  0EFF               	movlw	255
 20687  01660A  20E2               	addwfc	fsr1h,w,c
 20688  01660C  6EDA               	movwf	fsr2h,c
 20689                           
 20690                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20691  01660E  0E08               	movlw	8
 20692  016610  6E01               	movwf	btemp^0,c
 20693  016612  0EEE               	movlw	-18
 20694  016614                     us598999:
 20695  016614  006F FF7B FFE3     	movff	postinc2,plusw1
 20696  01661A  28E8               	incf	wreg,w,c
 20697  01661C  2E01               	decfsz	btemp^0,f,c
 20698  01661E  D7FA               	bra	us598999
 20699                           
 20700                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20701  016620  0EF6               	movlw	246
 20702  016622  26E1               	addwf	fsr1l,f,c
 20703  016624  0EFF               	movlw	255
 20704  016626  22E2               	addwfc	fsr1h,f,c
 20705  016628  0012               	return		;funcret
 20706  01662A                     __end_of___aodiv:
 20707                           	opt callstack 0
 20708                           
 20709 ;; *************** function _ctoa *****************
 20710 ;; Defined at:
 20711 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20712 ;; Parameters:    Size  Location     Type
 20713 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20714 ;;		 -> f(6), NULL(0), 
 20715 ;;  c               1  [STACK] unsigned char 
 20716 ;; Auto vars:     Size  Location     Type
 20717 ;;  w               2  [STACK] int 
 20718 ;;  l               2    0        int 
 20719 ;; Return value:  Size  Location     Type
 20720 ;;                  2  [STACK] int 
 20721 ;; Registers used:
 20722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20723 ;; Tracked objects:
 20724 ;;		On entry : 0/0
 20725 ;;		On exit  : 0/0
 20726 ;;		Unchanged: 0/0
 20727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20732 ;;Total ram usage:        0 bytes
 20733 ;; Hardware stack levels used:    1
 20734 ;; Hardware stack levels required when called:   20
 20735 ;; This function calls:
 20736 ;;		_pad
 20737 ;; This function is called by:
 20738 ;;		_vfpfcnvrt
 20739 ;; This function uses a reentrant model
 20740 ;;
 20741                           
 20742                           	psect	text70
 20743  01943C                     __ptext70:
 20744                           	opt callstack 0
 20745  01943C                     _ctoa:
 20746                           	opt callstack 0
 20747                           
 20748                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20749  01943C  52E6               	movf	postinc1,f,c
 20750  01943E  52E6               	movf	postinc1,f,c
 20751                           
 20752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20753                           
 20754                           ;incstack = 0
 20755 ;; hardware stack exceeded
 20756  019440  5021               	movf	_width^0,w,c
 20757  019442  1022               	iorwf	(_width+1)^0,w,c
 20758  019444  A4D8               	btfss	status,2,c
 20759  019446  D009               	goto	l10863
 20760                           
 20761                           ;stkvar	_w @ sp[(-2)+0]
 20762  019448  0EFE               	movlw	-2
 20763  01944A  0060  F087  FFE3   	movff	_width,plusw1
 20764  019450  0EFF               	movlw	-1
 20765  019452  0060  F08B  FFE3   	movff	_width+1,plusw1
 20766  019458  D016               	goto	l10865
 20767  01945A                     l10863:
 20768  01945A  0EFF               	movlw	255
 20769  01945C  6E0B               	movwf	(btemp+10)^0,c
 20770  01945E  0EFF               	movlw	255
 20771  019460  6E0C               	movwf	(btemp+11)^0,c
 20772  019462  0060  F084  F009   	movff	_width,btemp+8
 20773  019468  0060  F088  F00A   	movff	_width+1,btemp+9
 20774  01946E  500B               	movf	(btemp+10)^0,w,c
 20775  019470  2609               	addwf	(btemp+8)^0,f,c
 20776  019472  500C               	movf	(btemp+11)^0,w,c
 20777  019474  220A               	addwfc	(btemp+9)^0,f,c
 20778                           
 20779                           ;stkvar	_w @ sp[(-2)+0]
 20780  019476  0EFE               	movlw	-2
 20781  019478  0060  F027  FFE3   	movff	btemp+8,plusw1
 20782  01947E  0EFF               	movlw	-1
 20783  019480  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20784  019486                     l10865:
 20785                           
 20786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20787                           ;stkvar	_c @ sp[(-2)+-3]
 20788  019486  0EFB               	movlw	-5
 20789  019488  006F FF8C  F394    	movff	plusw1,_dbuf
 20790                           
 20791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20792  01948E  0103               	movlb	3	; () banked
 20793  019490  6B95               	clrf	(_dbuf+1)& (0+255),b
 20794                           
 20795                           ; BSR set to: 3
 20796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20797                           ;stkvar	_w @ sp[(-2)+0]
 20798  019492  0EFE               	movlw	-2
 20799  019494  006F FF8F FFE6     	movff	plusw1,postinc1
 20800  01949A  006F FF8F FFE6     	movff	plusw1,postinc1
 20801  0194A0  0E94               	movlw	low _dbuf
 20802  0194A2  6EE6               	movwf	postinc1,c
 20803  0194A4  0E03               	movlw	high _dbuf
 20804  0194A6  6EE6               	movwf	postinc1,c
 20805                           
 20806                           ;stkvar	_fp @ sp[(-6)+-2]
 20807  0194A8  0EF8               	movlw	-8
 20808  0194AA  006F FF8F FFE6     	movff	plusw1,postinc1
 20809  0194B0  006F FF8F FFE6     	movff	plusw1,postinc1
 20810  0194B6  EC57  F0C2         	call	_pad	;wreg free
 20811                           
 20812                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20813  0194BA  0EFB               	movlw	251
 20814  0194BC  26E1               	addwf	fsr1l,f,c
 20815  0194BE  0EFF               	movlw	255
 20816  0194C0  22E2               	addwfc	fsr1h,f,c
 20817  0194C2  0012               	return		;funcret
 20818  0194C4                     __end_of_ctoa:
 20819                           	opt callstack 0
 20820                           
 20821 ;; *************** function _pad *****************
 20822 ;; Defined at:
 20823 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20824 ;; Parameters:    Size  Location     Type
 20825 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20826 ;;		 -> f(6), NULL(0), 
 20827 ;;  buf             2  [STACK] PTR unsigned char 
 20828 ;;		 -> dbuf(80), 
 20829 ;;  p               2  [STACK] int 
 20830 ;; Auto vars:     Size  Location     Type
 20831 ;;  w               2  [STACK] int 
 20832 ;;  i               2  [STACK] int 
 20833 ;; Return value:  Size  Location     Type
 20834 ;;                  2  [STACK] int 
 20835 ;; Registers used:
 20836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20837 ;; Tracked objects:
 20838 ;;		On entry : 0/3
 20839 ;;		On exit  : 0/0
 20840 ;;		Unchanged: 0/0
 20841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20846 ;;Total ram usage:        0 bytes
 20847 ;; Hardware stack levels used:    1
 20848 ;; Hardware stack levels required when called:   19
 20849 ;; This function calls:
 20850 ;;		_fputc
 20851 ;;		_fputs
 20852 ;;		_strlen
 20853 ;; This function is called by:
 20854 ;;		_ctoa
 20855 ;;		_dtoa
 20856 ;;		_efgtoa
 20857 ;;		_utoa
 20858 ;;		_xtoa
 20859 ;; This function uses a reentrant model
 20860 ;;
 20861                           
 20862                           	psect	text71
 20863  0184AE                     __ptext71:
 20864                           	opt callstack 0
 20865  0184AE                     _pad:
 20866                           	opt callstack 0
 20867                           
 20868                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20869  0184AE  52E6               	movf	postinc1,f,c
 20870  0184B0  52E6               	movf	postinc1,f,c
 20871  0184B2  52E6               	movf	postinc1,f,c
 20872  0184B4  52E6               	movf	postinc1,f,c
 20873                           
 20874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20875                           
 20876                           ;incstack = 0
 20877 ;; hardware stack exceeded
 20878  0184B6  A025               	btfss	_flags^0,0,c
 20879  0184B8  D010               	goto	l10785
 20880                           
 20881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20882                           ;stkvar	_fp @ sp[(-4)+-2]
 20883  0184BA  0EFA               	movlw	-6
 20884  0184BC  006F FF8F FFE6     	movff	plusw1,postinc1
 20885  0184C2  006F FF8F FFE6     	movff	plusw1,postinc1
 20886                           
 20887                           ;stkvar	_buf @ sp[(-6)+-4]
 20888  0184C8  0EF6               	movlw	-10
 20889  0184CA  006F FF8F FFE6     	movff	plusw1,postinc1
 20890  0184D0  006F FF8F FFE6     	movff	plusw1,postinc1
 20891  0184D6  ECAD  F0C8         	call	_fputs	;wreg free
 20892  0184DA                     l10785:
 20893                           
 20894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20895                           ;stkvar	_p @ sp[(-4)+-6]
 20896  0184DA  0EF7               	movlw	-9
 20897  0184DC  BEE3               	btfsc	plusw1,7,c
 20898  0184DE  D011               	goto	l10789
 20899                           
 20900                           ;stkvar	_p @ sp[(-4)+-6]
 20901                           ;stkvar	_w @ sp[(-4)+0]
 20902  0184E0  0EF6               	movlw	-10
 20903  0184E2  006F FF8C  F001    	movff	plusw1,btemp
 20904  0184E8  0EFC               	movlw	-4
 20905  0184EA  0060  F007  FFE3   	movff	btemp,plusw1
 20906  0184F0  0EF7               	movlw	-9
 20907  0184F2  006F FF8C  F001    	movff	plusw1,btemp
 20908  0184F8  0EFD               	movlw	-3
 20909  0184FA  0060  F007  FFE3   	movff	btemp,plusw1
 20910  018500  D004               	goto	l2013
 20911  018502                     l10789:
 20912                           
 20913                           ;stkvar	_w @ sp[(-4)+0]
 20914  018502  0EFC               	movlw	-4
 20915  018504  6AE3               	clrf	plusw1,c
 20916  018506  0EFD               	movlw	-3
 20917  018508  6AE3               	clrf	plusw1,c
 20918  01850A                     l2013:
 20919                           
 20920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20921                           ;stkvar	_i @ sp[(-4)+2]
 20922  01850A  0EFE               	movlw	-2
 20923  01850C  6AE3               	clrf	plusw1,c
 20924  01850E  0EFF               	movlw	-1
 20925  018510  6AE3               	clrf	plusw1,c
 20926                           
 20927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20928  018512  D01E               	goto	l10795
 20929  018514                     l10791:
 20930                           
 20931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20932                           ;stkvar	_fp @ sp[(-4)+-2]
 20933  018514  0EFA               	movlw	-6
 20934  018516  006F FF8F FFE6     	movff	plusw1,postinc1
 20935  01851C  006F FF8F FFE6     	movff	plusw1,postinc1
 20936  018522  0E20               	movlw	32
 20937  018524  6EE6               	movwf	postinc1,c
 20938  018526  0E00               	movlw	0
 20939  018528  6EE6               	movwf	postinc1,c
 20940  01852A  EC39  F0C1         	call	_fputc	;wreg free
 20941                           
 20942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20943                           ;stkvar	_i @ sp[(-4)+2]
 20944  01852E  0EFE               	movlw	-2
 20945  018530  50E3               	movf	plusw1,w,c
 20946  018532  0F01               	addlw	1
 20947  018534  6E01               	movwf	btemp^0,c
 20948  018536  0EFE               	movlw	-2
 20949  018538  0060  F007  FFE3   	movff	btemp,plusw1
 20950  01853E  6A01               	clrf	btemp^0,c
 20951  018540  0EFF               	movlw	-1
 20952  018542  50E3               	movf	plusw1,w,c
 20953  018544  2001               	addwfc	btemp^0,w,c
 20954  018546  6E01               	movwf	btemp^0,c
 20955  018548  0EFF               	movlw	-1
 20956  01854A  0060  F007  FFE3   	movff	btemp,plusw1
 20957  018550                     l10795:
 20958                           
 20959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20960                           ;stkvar	_w @ sp[(-4)+0]
 20961                           ;stkvar	_i @ sp[(-4)+2]
 20962  018550  50E1               	movf	fsr1l,w,c
 20963  018552  0FFE               	addlw	-2
 20964  018554  6ED9               	movwf	fsr2l,c
 20965  018556  50E2               	movf	fsr1h,w,c
 20966  018558  6EDA               	movwf	fsr2h,c
 20967  01855A  0EFF               	movlw	255
 20968  01855C  22DA               	addwfc	fsr2h,f,c
 20969  01855E  0EFC               	movlw	-4
 20970  018560  50E3               	movf	plusw1,w,c
 20971  018562  5CDE               	subwf	postinc2,w,c
 20972  018564  50DE               	movf	postinc2,w,c
 20973  018566  0A80               	xorlw	128
 20974  018568  6E01               	movwf	btemp^0,c
 20975  01856A  0EFD               	movlw	-3
 20976  01856C  50E3               	movf	plusw1,w,c
 20977  01856E  0A80               	xorlw	128
 20978  018570  5801               	subwfb	btemp^0,w,c
 20979  018572  A0D8               	btfss	status,0,c
 20980  018574  D7CF               	goto	l10791
 20981                           
 20982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 20983  018576  B025               	btfsc	_flags^0,0,c
 20984  018578  D010               	goto	l10799
 20985                           
 20986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 20987                           ;stkvar	_fp @ sp[(-4)+-2]
 20988  01857A  0EFA               	movlw	-6
 20989  01857C  006F FF8F FFE6     	movff	plusw1,postinc1
 20990  018582  006F FF8F FFE6     	movff	plusw1,postinc1
 20991                           
 20992                           ;stkvar	_buf @ sp[(-6)+-4]
 20993  018588  0EF6               	movlw	-10
 20994  01858A  006F FF8F FFE6     	movff	plusw1,postinc1
 20995  018590  006F FF8F FFE6     	movff	plusw1,postinc1
 20996  018596  ECAD  F0C8         	call	_fputs	;wreg free
 20997  01859A                     l10799:
 20998                           
 20999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21000                           ;stkvar	_w @ sp[(-4)+0]
 21001                           ;stkvar	_buf @ sp[(-4)+-4]
 21002  01859A  0EF8               	movlw	-8
 21003  01859C  006F FF8F FFE6     	movff	plusw1,postinc1
 21004  0185A2  006F FF8F FFE6     	movff	plusw1,postinc1
 21005  0185A8  EC5C  F0C8         	call	_strlen	;wreg free
 21006  0185AC  0EFC               	movlw	-4
 21007  0185AE  50E3               	movf	plusw1,w,c
 21008  0185B0  2601               	addwf	btemp^0,f,c
 21009  0185B2  0EFD               	movlw	-3
 21010  0185B4  50E3               	movf	plusw1,w,c
 21011  0185B6  2202               	addwfc	(btemp+1)^0,f,c
 21012                           
 21013                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21014  0185B8  0EF6               	movlw	246
 21015  0185BA  26E1               	addwf	fsr1l,f,c
 21016  0185BC  0EFF               	movlw	255
 21017  0185BE  22E2               	addwfc	fsr1h,f,c
 21018  0185C0  0012               	return		;funcret
 21019  0185C2                     __end_of_pad:
 21020                           	opt callstack 0
 21021                           
 21022 ;; *************** function _strlen *****************
 21023 ;; Defined at:
 21024 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21025 ;; Parameters:    Size  Location     Type
 21026 ;;  s               2  [STACK] PTR const unsigned char 
 21027 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21028 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 21029 ;;		 -> T(144), port_data(512), STR_7(4), STR_3(4), 
 21030 ;;		 -> V(188), 
 21031 ;; Auto vars:     Size  Location     Type
 21032 ;;  a               2  [STACK] PTR const unsigned char 
 21033 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21034 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 21035 ;;		 -> T(144), port_data(512), STR_7(4), STR_3(4), 
 21036 ;;		 -> V(188), 
 21037 ;; Return value:  Size  Location     Type
 21038 ;;                  2  [STACK] unsigned int 
 21039 ;; Registers used:
 21040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21041 ;; Tracked objects:
 21042 ;;		On entry : 0/0
 21043 ;;		On exit  : 0/0
 21044 ;;		Unchanged: 0/0
 21045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21050 ;;Total ram usage:        0 bytes
 21051 ;; Hardware stack levels used:    1
 21052 ;; Hardware stack levels required when called:   15
 21053 ;; This function calls:
 21054 ;;		Nothing
 21055 ;; This function is called by:
 21056 ;;		_eaDogM_WriteString
 21057 ;;		_calc_bsoc
 21058 ;;		_pad
 21059 ;;		_stoa
 21060 ;; This function uses a reentrant model
 21061 ;;
 21062                           
 21063                           	psect	text72
 21064  0190B8                     __ptext72:
 21065                           	opt callstack 0
 21066  0190B8                     _strlen:
 21067                           	opt callstack 0
 21068                           
 21069                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21070  0190B8  52E6               	movf	postinc1,f,c
 21071  0190BA  52E6               	movf	postinc1,f,c
 21072                           
 21073                           ;stkvar	_s @ sp[(-2)+-2]
 21074                           
 21075                           ;incstack = 0
 21076 ;; hardware stack exceeded
 21077  0190BC  0EFC               	movlw	-4
 21078  0190BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 21079  0190C4  0EFD               	movlw	-3
 21080  0190C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21081                           
 21082                           ;stkvar	_a @ sp[(-2)+0]
 21083  0190CC  0EFF               	movlw	-1
 21084  0190CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 21085  0190D4  0EFE               	movlw	-2
 21086  0190D6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21087  0190DC  D011               	goto	l7093
 21088  0190DE                     l7091:
 21089                           
 21090                           ;stkvar	_s @ sp[(-2)+-2]
 21091  0190DE  0EFC               	movlw	-4
 21092  0190E0  50E3               	movf	plusw1,w,c
 21093  0190E2  0F01               	addlw	1
 21094  0190E4  6E01               	movwf	btemp^0,c
 21095  0190E6  0EFC               	movlw	-4
 21096  0190E8  0060  F007  FFE3   	movff	btemp,plusw1
 21097  0190EE  6A01               	clrf	btemp^0,c
 21098  0190F0  0EFD               	movlw	-3
 21099  0190F2  50E3               	movf	plusw1,w,c
 21100  0190F4  2001               	addwfc	btemp^0,w,c
 21101  0190F6  6E01               	movwf	btemp^0,c
 21102  0190F8  0EFD               	movlw	-3
 21103  0190FA  0060  F007  FFE3   	movff	btemp,plusw1
 21104  019100                     l7093:
 21105                           
 21106                           ;stkvar	_s @ sp[(-2)+-2]
 21107  019100  0EFC               	movlw	-4
 21108  019102  006F FF8F FFF6     	movff	plusw1,tblptrl
 21109  019108  0EFD               	movlw	-3
 21110  01910A  006F FF8F FFF7     	movff	plusw1,tblptrh
 21111  019110  0E00               	movlw	low (__mediumconst shr (0+16))
 21112  019112  6EF8               	movwf	tblptru,c
 21113  019114  0E1F               	movlw	(high __ramtop+-1)
 21114  019116  64F7               	cpfsgt	tblptrh,c
 21115  019118  D003               	bra	u5047
 21116  01911A  0008               	tblrd		*
 21117  01911C  50F5               	movf	tablat,w,c
 21118  01911E  D007               	bra	u5040
 21119  019120                     u5047:
 21120  019120  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21121  019126  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21122  01912C  50EF               	movf	indf0,w,c
 21123  01912E                     u5040:
 21124  01912E  0900               	iorlw	0
 21125  019130  A4D8               	btfss	status,2,c
 21126  019132  D7D5               	goto	l7091
 21127                           
 21128                           ;stkvar	_a @ sp[(-2)+0]
 21129                           ;stkvar	_s @ sp[(-2)+-2]
 21130  019134  0EFC               	movlw	-4
 21131  019136  006F FF8C  F001    	movff	plusw1,btemp
 21132  01913C  0EFD               	movlw	-3
 21133  01913E  006F FF8C  F002    	movff	plusw1,btemp+1
 21134  019144  0EFE               	movlw	-2
 21135  019146  50E3               	movf	plusw1,w,c
 21136  019148  5E01               	subwf	btemp^0,f,c
 21137  01914A  0EFF               	movlw	-1
 21138  01914C  50E3               	movf	plusw1,w,c
 21139  01914E  5A02               	subwfb	(btemp+1)^0,f,c
 21140                           
 21141                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21142  019150  52E5               	movf	postdec1,f,c
 21143  019152  52E5               	movf	postdec1,f,c
 21144  019154  52E5               	movf	postdec1,f,c
 21145  019156  52E5               	movf	postdec1,f,c
 21146  019158  0012               	return		;funcret
 21147  01915A                     __end_of_strlen:
 21148                           	opt callstack 0
 21149                           
 21150 ;; *************** function _fputs *****************
 21151 ;; Defined at:
 21152 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21153 ;; Parameters:    Size  Location     Type
 21154 ;;  s               2  [STACK] PTR const unsigned char 
 21155 ;;		 -> dbuf(80), 
 21156 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21157 ;;		 -> f(6), NULL(0), 
 21158 ;; Auto vars:     Size  Location     Type
 21159 ;;  i               2  [STACK] int 
 21160 ;;  c               1  [STACK] unsigned char 
 21161 ;; Return value:  Size  Location     Type
 21162 ;;                  2  [STACK] int 
 21163 ;; Registers used:
 21164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21165 ;; Tracked objects:
 21166 ;;		On entry : 0/3
 21167 ;;		On exit  : 0/0
 21168 ;;		Unchanged: 0/0
 21169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21174 ;;Total ram usage:        0 bytes
 21175 ;; Hardware stack levels used:    1
 21176 ;; Hardware stack levels required when called:   18
 21177 ;; This function calls:
 21178 ;;		_fputc
 21179 ;; This function is called by:
 21180 ;;		_pad
 21181 ;; This function uses a reentrant model
 21182 ;;
 21183                           
 21184                           	psect	text73
 21185  01915A                     __ptext73:
 21186                           	opt callstack 0
 21187  01915A                     _fputs:
 21188                           	opt callstack 0
 21189                           
 21190                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21191  01915A  52E6               	movf	postinc1,f,c
 21192  01915C  52E6               	movf	postinc1,f,c
 21193  01915E  52E6               	movf	postinc1,f,c
 21194                           
 21195                           ;stkvar	_i @ sp[(-3)+0]
 21196                           
 21197                           ;incstack = 0
 21198 ;; hardware stack exceeded
 21199  019160  0EFD               	movlw	-3
 21200  019162  6AE3               	clrf	plusw1,c
 21201  019164  0EFE               	movlw	-2
 21202  019166  6AE3               	clrf	plusw1,c
 21203  019168  D01F               	goto	l10779
 21204  01916A                     l10775:
 21205                           
 21206                           ;stkvar	_fp @ sp[(-3)+-4]
 21207  01916A  0EF9               	movlw	-7
 21208  01916C  006F FF8F FFE6     	movff	plusw1,postinc1
 21209  019172  006F FF8F FFE6     	movff	plusw1,postinc1
 21210                           
 21211                           ;stkvar	_c @ sp[(-5)+2]
 21212  019178  0EFD               	movlw	-3
 21213  01917A  50E3               	movf	plusw1,w,c
 21214  01917C  6EE6               	movwf	postinc1,c
 21215  01917E  0E00               	movlw	0
 21216  019180  6EE6               	movwf	postinc1,c
 21217  019182  EC39  F0C1         	call	_fputc	;wreg free
 21218                           
 21219                           ;stkvar	_i @ sp[(-3)+0]
 21220  019186  0EFD               	movlw	-3
 21221  019188  50E3               	movf	plusw1,w,c
 21222  01918A  0F01               	addlw	1
 21223  01918C  6E01               	movwf	btemp^0,c
 21224  01918E  0EFD               	movlw	-3
 21225  019190  0060  F007  FFE3   	movff	btemp,plusw1
 21226  019196  6A01               	clrf	btemp^0,c
 21227  019198  0EFE               	movlw	-2
 21228  01919A  50E3               	movf	plusw1,w,c
 21229  01919C  2001               	addwfc	btemp^0,w,c
 21230  01919E  6E01               	movwf	btemp^0,c
 21231  0191A0  0EFE               	movlw	-2
 21232  0191A2  0060  F007  FFE3   	movff	btemp,plusw1
 21233  0191A8                     l10779:
 21234                           
 21235                           ;stkvar	_i @ sp[(-3)+0]
 21236  0191A8  0EFD               	movlw	-3
 21237  0191AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 21238  0191B0  0EFE               	movlw	-2
 21239  0191B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 21240                           
 21241                           ;stkvar	_s @ sp[(-3)+-2]
 21242  0191B8  0EFB               	movlw	-5
 21243  0191BA  006F FF8C  F009    	movff	plusw1,btemp+8
 21244  0191C0  0EFC               	movlw	-4
 21245  0191C2  006F FF8C  F00A    	movff	plusw1,btemp+9
 21246  0191C8  500B               	movf	(btemp+10)^0,w,c
 21247  0191CA  2409               	addwf	(btemp+8)^0,w,c
 21248  0191CC  6ED9               	movwf	fsr2l,c
 21249  0191CE  500C               	movf	(btemp+11)^0,w,c
 21250  0191D0  200A               	addwfc	(btemp+9)^0,w,c
 21251  0191D2  6EDA               	movwf	fsr2h,c
 21252  0191D4  50DF               	movf	indf2,w,c
 21253  0191D6  6E0C               	movwf	(btemp+11)^0,c
 21254                           
 21255                           ;stkvar	_c @ sp[(-3)+2]
 21256  0191D8  0EFF               	movlw	-1
 21257  0191DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 21258  0191E0  0EFF               	movlw	-1
 21259  0191E2  50E3               	movf	plusw1,w,c
 21260  0191E4  A4D8               	btfss	status,2,c
 21261  0191E6  D7C1               	goto	l10775
 21262                           
 21263                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21264  0191E8  0EF9               	movlw	249
 21265  0191EA  26E1               	addwf	fsr1l,f,c
 21266  0191EC  0EFF               	movlw	255
 21267  0191EE  22E2               	addwfc	fsr1h,f,c
 21268  0191F0  0012               	return		;funcret
 21269  0191F2                     __end_of_fputs:
 21270                           	opt callstack 0
 21271                           
 21272 ;; *************** function _fputc *****************
 21273 ;; Defined at:
 21274 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21275 ;; Parameters:    Size  Location     Type
 21276 ;;  c               2  [STACK] int 
 21277 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21278 ;;		 -> f(6), NULL(0), 
 21279 ;; Auto vars:     Size  Location     Type
 21280 ;;		None
 21281 ;; Return value:  Size  Location     Type
 21282 ;;                  2  [STACK] int 
 21283 ;; Registers used:
 21284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21285 ;; Tracked objects:
 21286 ;;		On entry : 0/0
 21287 ;;		On exit  : 0/0
 21288 ;;		Unchanged: 0/0
 21289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21294 ;;Total ram usage:        0 bytes
 21295 ;; Hardware stack levels used:    1
 21296 ;; Hardware stack levels required when called:   17
 21297 ;; This function calls:
 21298 ;;		_putch
 21299 ;; This function is called by:
 21300 ;;		_pad
 21301 ;;		_stoa
 21302 ;;		_vfpfcnvrt
 21303 ;;		_fputs
 21304 ;; This function uses a reentrant model
 21305 ;;
 21306                           
 21307                           	psect	text74
 21308  018272                     __ptext74:
 21309                           	opt callstack 0
 21310  018272                     _fputc:
 21311                           	opt callstack 0
 21312                           
 21313                           ;stkvar	_fp @ sp[(0)+-4]
 21314                           
 21315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21316                           ;incstack = 0
 21317 ;; hardware stack exceeded
 21318  018272  0EFC               	movlw	-4
 21319  018274  006F FF8C  F001    	movff	plusw1,btemp
 21320  01827A  0EFD               	movlw	-3
 21321  01827C  50E3               	movf	plusw1,w,c
 21322  01827E  1001               	iorwf	btemp^0,w,c
 21323  018280  B4D8               	btfsc	status,2,c
 21324  018282  D009               	goto	u9990
 21325                           
 21326                           ;stkvar	_fp @ sp[(0)+-4]
 21327  018284  0EFC               	movlw	-4
 21328  018286  006F FF8C  F001    	movff	plusw1,btemp
 21329  01828C  0EFD               	movlw	-3
 21330  01828E  50E3               	movf	plusw1,w,c
 21331  018290  1001               	iorwf	btemp^0,w,c
 21332  018292  A4D8               	btfss	status,2,c
 21333  018294  D006               	goto	l10763
 21334  018296                     u9990:
 21335                           
 21336                           ;stkvar	_c @ sp[(0)+-2]
 21337  018296  0EFE               	movlw	-2
 21338  018298  50E3               	movf	plusw1,w,c
 21339  01829A  6EE6               	movwf	postinc1,c
 21340  01829C  ECA0  F0D3         	call	_putch	;wreg free
 21341  0182A0  D075               	goto	l3054
 21342  0182A2                     l10763:
 21343                           
 21344                           ;stkvar	_fp @ sp[(0)+-4]
 21345  0182A2  0EFC               	movlw	-4
 21346  0182A4  006F FF8C  F00B    	movff	plusw1,btemp+10
 21347  0182AA  0EFD               	movlw	-3
 21348  0182AC  006F FF8C  F00C    	movff	plusw1,btemp+11
 21349  0182B2  0E04               	movlw	4
 21350  0182B4  240B               	addwf	(btemp+10)^0,w,c
 21351  0182B6  6ED9               	movwf	fsr2l,c
 21352  0182B8  0E00               	movlw	0
 21353  0182BA  200C               	addwfc	(btemp+11)^0,w,c
 21354  0182BC  6EDA               	movwf	fsr2h,c
 21355  0182BE  50DE               	movf	postinc2,w,c
 21356  0182C0  10DE               	iorwf	postinc2,w,c
 21357  0182C2  B4D8               	btfsc	status,2,c
 21358  0182C4  D026               	goto	u10010
 21359                           
 21360                           ;stkvar	_fp @ sp[(0)+-4]
 21361  0182C6  0EFC               	movlw	-4
 21362  0182C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 21363  0182CE  0EFD               	movlw	-3
 21364  0182D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21365  0182D6  0E04               	movlw	4
 21366  0182D8  240B               	addwf	(btemp+10)^0,w,c
 21367  0182DA  6ED9               	movwf	fsr2l,c
 21368  0182DC  0E00               	movlw	0
 21369  0182DE  200C               	addwfc	(btemp+11)^0,w,c
 21370  0182E0  6EDA               	movwf	fsr2h,c
 21371                           
 21372                           ;stkvar	_fp @ sp[(0)+-4]
 21373  0182E2  0EFC               	movlw	-4
 21374  0182E4  006F FF8C  F00B    	movff	plusw1,btemp+10
 21375  0182EA  0EFD               	movlw	-3
 21376  0182EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 21377  0182F2  0E02               	movlw	2
 21378  0182F4  240B               	addwf	(btemp+10)^0,w,c
 21379  0182F6  6EE9               	movwf	fsr0l,c
 21380  0182F8  0E00               	movlw	0
 21381  0182FA  200C               	addwfc	(btemp+11)^0,w,c
 21382  0182FC  6EEA               	movwf	fsr0h,c
 21383  0182FE  50DE               	movf	postinc2,w,c
 21384  018300  5CEE               	subwf	postinc0,w,c
 21385  018302  50EE               	movf	postinc0,w,c
 21386  018304  0A80               	xorlw	128
 21387  018306  6E01               	movwf	btemp^0,c
 21388  018308  50DE               	movf	postinc2,w,c
 21389  01830A  0A80               	xorlw	128
 21390  01830C  5801               	subwfb	btemp^0,w,c
 21391  01830E  B0D8               	btfsc	status,0,c
 21392  018310  D03D               	goto	l3054
 21393  018312                     u10010:
 21394                           
 21395                           ;stkvar	_c @ sp[(0)+-2]
 21396                           ;stkvar	_fp @ sp[(0)+-4]
 21397  018312  0EFC               	movlw	-4
 21398  018314  006F FF8C  F00B    	movff	plusw1,btemp+10
 21399  01831A  0EFD               	movlw	-3
 21400  01831C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21401  018322  0E02               	movlw	2
 21402  018324  240B               	addwf	(btemp+10)^0,w,c
 21403  018326  6ED9               	movwf	fsr2l,c
 21404  018328  0E00               	movlw	0
 21405  01832A  200C               	addwfc	(btemp+11)^0,w,c
 21406  01832C  6EDA               	movwf	fsr2h,c
 21407  01832E  006F FF78  F00B    	movff	postinc2,btemp+10
 21408  018334  006F FF74  F00C    	movff	postdec2,btemp+11
 21409                           
 21410                           ;stkvar	_fp @ sp[(0)+-4]
 21411  01833A  0EFC               	movlw	-4
 21412  01833C  006F FF8F FFD9     	movff	plusw1,fsr2l
 21413  018342  0EFD               	movlw	-3
 21414  018344  006F FF8F FFDA     	movff	plusw1,fsr2h
 21415  01834A  006F FF78  F009    	movff	postinc2,btemp+8
 21416  018350  006F FF74  F00A    	movff	postdec2,btemp+9
 21417  018356  500B               	movf	(btemp+10)^0,w,c
 21418  018358  2409               	addwf	(btemp+8)^0,w,c
 21419  01835A  6ED9               	movwf	fsr2l,c
 21420  01835C  500C               	movf	(btemp+11)^0,w,c
 21421  01835E  200A               	addwfc	(btemp+9)^0,w,c
 21422  018360  6EDA               	movwf	fsr2h,c
 21423  018362  0EFE               	movlw	-2
 21424  018364  006F FF8F FFDF     	movff	plusw1,indf2
 21425                           
 21426                           ;stkvar	_fp @ sp[(0)+-4]
 21427  01836A  0EFC               	movlw	-4
 21428  01836C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21429  018372  0EFD               	movlw	-3
 21430  018374  006F FF8C  F00C    	movff	plusw1,btemp+11
 21431  01837A  0E02               	movlw	2
 21432  01837C  240B               	addwf	(btemp+10)^0,w,c
 21433  01837E  6ED9               	movwf	fsr2l,c
 21434  018380  0E00               	movlw	0
 21435  018382  200C               	addwfc	(btemp+11)^0,w,c
 21436  018384  6EDA               	movwf	fsr2h,c
 21437  018386  2ADE               	incf	postinc2,f,c
 21438  018388  0E00               	movlw	0
 21439  01838A  22DD               	addwfc	postdec2,f,c
 21440  01838C                     l3054:
 21441                           
 21442                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21443  01838C  52E5               	movf	postdec1,f,c
 21444  01838E  52E5               	movf	postdec1,f,c
 21445  018390  52E5               	movf	postdec1,f,c
 21446  018392  52E5               	movf	postdec1,f,c
 21447  018394  0012               	return		;funcret
 21448  018396                     __end_of_fputc:
 21449                           	opt callstack 0
 21450                           
 21451 ;; *************** function _putch *****************
 21452 ;; Defined at:
 21453 ;;		line 170 in file "eadog.c"
 21454 ;; Parameters:    Size  Location     Type
 21455 ;;  c               1  [STACK] unsigned char 
 21456 ;; Auto vars:     Size  Location     Type
 21457 ;;		None
 21458 ;; Return value:  Size  Location     Type
 21459 ;;                  1  [STACK] void 
 21460 ;; Registers used:
 21461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21462 ;; Tracked objects:
 21463 ;;		On entry : 0/0
 21464 ;;		On exit  : 0/0
 21465 ;;		Unchanged: 0/0
 21466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21471 ;;Total ram usage:        0 bytes
 21472 ;; Hardware stack levels used:    1
 21473 ;; Hardware stack levels required when called:   16
 21474 ;; This function calls:
 21475 ;;		_ringBufS_put_dma
 21476 ;; This function is called by:
 21477 ;;		_fputc
 21478 ;; This function uses a reentrant model
 21479 ;;
 21480                           
 21481                           	psect	text75
 21482  01A740                     __ptext75:
 21483                           	opt callstack 0
 21484  01A740                     _putch:
 21485                           	opt callstack 0
 21486                           
 21487                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21488                           ;stkvar	_c @ sp[(0)+-1]
 21489                           
 21490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21491                           ;incstack = 0
 21492 ;; hardware stack exceeded
 21493  01A740  0EFF               	movlw	-1
 21494  01A742  50E3               	movf	plusw1,w,c
 21495  01A744  6EE6               	movwf	postinc1,c
 21496  01A746  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
 21497  01A74C  0060  F243  FFE6   	movff	_spi_link+7,postinc1
 21498  01A752  ECB4  F0C7         	call	_ringBufS_put_dma	;wreg free
 21499                           
 21500                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21501  01A756  52E5               	movf	postdec1,f,c
 21502  01A758  0012               	return		;funcret
 21503  01A75A                     __end_of_putch:
 21504                           	opt callstack 0
 21505                           
 21506 ;; *************** function _ringBufS_put_dma *****************
 21507 ;; Defined at:
 21508 ;;		line 67 in file "ringbufs.c"
 21509 ;; Parameters:    Size  Location     Type
 21510 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21511 ;;		 -> ring_buf1(67), 
 21512 ;;  c               1  [STACK] const unsigned char 
 21513 ;; Auto vars:     Size  Location     Type
 21514 ;;		None
 21515 ;; Return value:  Size  Location     Type
 21516 ;;                  1  [STACK] void 
 21517 ;; Registers used:
 21518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21519 ;; Tracked objects:
 21520 ;;		On entry : 0/0
 21521 ;;		On exit  : 0/0
 21522 ;;		Unchanged: 0/0
 21523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21528 ;;Total ram usage:        0 bytes
 21529 ;; Hardware stack levels used:    1
 21530 ;; Hardware stack levels required when called:   15
 21531 ;; This function calls:
 21532 ;;		Nothing
 21533 ;; This function is called by:
 21534 ;;		_putch
 21535 ;; This function uses a reentrant model
 21536 ;;
 21537                           
 21538                           	psect	text76
 21539  018F68                     __ptext76:
 21540                           	opt callstack 0
 21541  018F68                     _ringBufS_put_dma:
 21542                           	opt callstack 0
 21543                           
 21544                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21545                           ;stkvar	__this @ sp[(0)+-2]
 21546                           
 21547                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21548                           ;incstack = 0
 21549 ;; hardware stack exceeded
 21550  018F68  0EFE               	movlw	-2
 21551  018F6A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21552  018F70  0EFF               	movlw	-1
 21553  018F72  006F FF8C  F00C    	movff	plusw1,btemp+11
 21554  018F78  0E42               	movlw	66
 21555  018F7A  240B               	addwf	(btemp+10)^0,w,c
 21556  018F7C  6ED9               	movwf	fsr2l,c
 21557  018F7E  0E00               	movlw	0
 21558  018F80  200C               	addwfc	(btemp+11)^0,w,c
 21559  018F82  6EDA               	movwf	fsr2h,c
 21560  018F84  0E40               	movlw	64
 21561  018F86  60DF               	cpfslt	indf2,c
 21562  018F88  D040               	goto	l1554
 21563                           
 21564                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21565                           ;stkvar	_c @ sp[(0)+-3]
 21566                           ;stkvar	__this @ sp[(0)+-2]
 21567  018F8A  0EFE               	movlw	-2
 21568  018F8C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21569  018F92  0EFF               	movlw	-1
 21570  018F94  006F FF8C  F00C    	movff	plusw1,btemp+11
 21571  018F9A  0E40               	movlw	64
 21572  018F9C  240B               	addwf	(btemp+10)^0,w,c
 21573  018F9E  6ED9               	movwf	fsr2l,c
 21574  018FA0  0E00               	movlw	0
 21575  018FA2  200C               	addwfc	(btemp+11)^0,w,c
 21576  018FA4  6EDA               	movwf	fsr2h,c
 21577  018FA6  50DF               	movf	indf2,w,c
 21578  018FA8  6E0C               	movwf	(btemp+11)^0,c
 21579                           
 21580                           ;stkvar	__this @ sp[(0)+-2]
 21581  018FAA  0EFE               	movlw	-2
 21582  018FAC  006F FF8C  F009    	movff	plusw1,btemp+8
 21583  018FB2  0EFF               	movlw	-1
 21584  018FB4  006F FF8C  F00A    	movff	plusw1,btemp+9
 21585  018FBA  500C               	movf	(btemp+11)^0,w,c
 21586  018FBC  2409               	addwf	(btemp+8)^0,w,c
 21587  018FBE  6ED9               	movwf	fsr2l,c
 21588  018FC0  0E00               	movlw	0
 21589  018FC2  200A               	addwfc	(btemp+9)^0,w,c
 21590  018FC4  6EDA               	movwf	fsr2h,c
 21591  018FC6  0EFD               	movlw	-3
 21592  018FC8  006F FF8F FFDF     	movff	plusw1,indf2
 21593                           
 21594                           ;ringbufs.c: 71:   ++_this->head;
 21595                           ;stkvar	__this @ sp[(0)+-2]
 21596  018FCE  0EFE               	movlw	-2
 21597  018FD0  006F FF8C  F00B    	movff	plusw1,btemp+10
 21598  018FD6  0EFF               	movlw	-1
 21599  018FD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 21600  018FDE  0E40               	movlw	64
 21601  018FE0  240B               	addwf	(btemp+10)^0,w,c
 21602  018FE2  6ED9               	movwf	fsr2l,c
 21603  018FE4  0E00               	movlw	0
 21604  018FE6  200C               	addwfc	(btemp+11)^0,w,c
 21605  018FE8  6EDA               	movwf	fsr2h,c
 21606  018FEA  2ADF               	incf	indf2,f,c
 21607                           
 21608                           ;ringbufs.c: 72:   ++_this->count;
 21609                           ;stkvar	__this @ sp[(0)+-2]
 21610  018FEC  0EFE               	movlw	-2
 21611  018FEE  006F FF8C  F00B    	movff	plusw1,btemp+10
 21612  018FF4  0EFF               	movlw	-1
 21613  018FF6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21614  018FFC  0E42               	movlw	66
 21615  018FFE  240B               	addwf	(btemp+10)^0,w,c
 21616  019000  6ED9               	movwf	fsr2l,c
 21617  019002  0E00               	movlw	0
 21618  019004  200C               	addwfc	(btemp+11)^0,w,c
 21619  019006  6EDA               	movwf	fsr2h,c
 21620  019008  2ADF               	incf	indf2,f,c
 21621  01900A                     l1554:
 21622                           
 21623                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21624  01900A  52E5               	movf	postdec1,f,c
 21625  01900C  52E5               	movf	postdec1,f,c
 21626  01900E  52E5               	movf	postdec1,f,c
 21627  019010  0012               	return		;funcret
 21628  019012                     __end_of_ringBufS_put_dma:
 21629                           	opt callstack 0
 21630                           
 21631 ;; *************** function _atoi *****************
 21632 ;; Defined at:
 21633 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21634 ;; Parameters:    Size  Location     Type
 21635 ;;  s               2  [STACK] PTR const unsigned char 
 21636 ;;		 -> STR_46(79), STR_44(3), STR_43(3), STR_42(19), 
 21637 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
 21638 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
 21639 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
 21640 ;;		 -> STR_29(19), STR_26(3), STR_25(3), STR_24(3), 
 21641 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
 21642 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
 21643 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
 21644 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
 21645 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 21646 ;;		 -> STR_1(17), 
 21647 ;; Auto vars:     Size  Location     Type
 21648 ;;  n               2  [STACK] int 
 21649 ;;  neg             2  [STACK] int 
 21650 ;; Return value:  Size  Location     Type
 21651 ;;                  2  [STACK] int 
 21652 ;; Registers used:
 21653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21654 ;; Tracked objects:
 21655 ;;		On entry : 0/0
 21656 ;;		On exit  : 0/0
 21657 ;;		Unchanged: 0/0
 21658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21663 ;;Total ram usage:        0 bytes
 21664 ;; Hardware stack levels used:    1
 21665 ;; Hardware stack levels required when called:   16
 21666 ;; This function calls:
 21667 ;;		_isdigit
 21668 ;;		_isspace
 21669 ;; This function is called by:
 21670 ;;		_vfpfcnvrt
 21671 ;; This function uses a reentrant model
 21672 ;;
 21673                           
 21674                           	psect	text77
 21675  01662A                     __ptext77:
 21676                           	opt callstack 0
 21677  01662A                     _atoi:
 21678                           	opt callstack 0
 21679                           
 21680                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21681  01662A  0E09               	movlw	9
 21682  01662C  26E1               	addwf	fsr1l,f,c
 21683  01662E  0E00               	movlw	0
 21684  016630  22E2               	addwfc	fsr1h,f,c
 21685                           
 21686                           ;stkvar	_n @ sp[(-9)+5]
 21687                           
 21688                           ;incstack = 0
 21689 ;; hardware stack exceeded
 21690  016632  0EFC               	movlw	-4
 21691  016634  6AE3               	clrf	plusw1,c
 21692  016636  0EFD               	movlw	-3
 21693  016638  6AE3               	clrf	plusw1,c
 21694                           
 21695                           ;stkvar	_neg @ sp[(-9)+7]
 21696  01663A  0EFE               	movlw	-2
 21697  01663C  6AE3               	clrf	plusw1,c
 21698  01663E  0EFF               	movlw	-1
 21699  016640  6AE3               	clrf	plusw1,c
 21700  016642  D011               	goto	l8701
 21701  016644                     l8699:
 21702                           
 21703                           ;stkvar	_s @ sp[(-9)+-2]
 21704  016644  0EF5               	movlw	-11
 21705  016646  50E3               	movf	plusw1,w,c
 21706  016648  0F01               	addlw	1
 21707  01664A  6E01               	movwf	btemp^0,c
 21708  01664C  0EF5               	movlw	-11
 21709  01664E  0060  F007  FFE3   	movff	btemp,plusw1
 21710  016654  6A01               	clrf	btemp^0,c
 21711  016656  0EF6               	movlw	-10
 21712  016658  50E3               	movf	plusw1,w,c
 21713  01665A  2001               	addwfc	btemp^0,w,c
 21714  01665C  6E01               	movwf	btemp^0,c
 21715  01665E  0EF6               	movlw	-10
 21716  016660  0060  F007  FFE3   	movff	btemp,plusw1
 21717  016666                     l8701:
 21718                           
 21719                           ;stkvar	_atoi$5748 @ sp[(-9)+4]
 21720  016666  0EFB               	movlw	-5
 21721  016668  6AE3               	clrf	plusw1,c
 21722  01666A  2AE3               	incf	plusw1,f,c
 21723                           
 21724                           ;stkvar	_s @ sp[(-9)+-2]
 21725  01666C  50E1               	movf	fsr1l,w,c
 21726  01666E  0FF5               	addlw	-11
 21727  016670  6ED9               	movwf	fsr2l,c
 21728  016672  50E2               	movf	fsr1h,w,c
 21729  016674  6EDA               	movwf	fsr2h,c
 21730  016676  0EFF               	movlw	255
 21731  016678  22DA               	addwfc	fsr2h,f,c
 21732  01667A  006F FF7B FFF6     	movff	postinc2,tblptrl
 21733  016680  006F FF77 FFF7     	movff	postdec2,tblptrh
 21734  016686                     	if	0	;tblptru may be non-zero
 21735  016686                     	endif
 21736  016686                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21737  016686  0E00               	movlw	low (__mediumconst shr (0+16))
 21738  016688  6EF8               	movwf	tblptru,c
 21739  01668A                     	endif
 21740  01668A  0008               	tblrd		*
 21741  01668C  50F5               	movf	tablat,w,c
 21742  01668E  0A20               	xorlw	32
 21743  016690  B4D8               	btfsc	status,2,c
 21744  016692  D023               	goto	l8709
 21745  016694  0EF7               	movlw	247
 21746  016696  6E0B               	movwf	(btemp+10)^0,c
 21747  016698  0EFF               	movlw	255
 21748  01669A  6E0C               	movwf	(btemp+11)^0,c
 21749                           
 21750                           ;stkvar	_s @ sp[(-9)+-2]
 21751  01669C  50E1               	movf	fsr1l,w,c
 21752  01669E  0FF5               	addlw	-11
 21753  0166A0  6ED9               	movwf	fsr2l,c
 21754  0166A2  50E2               	movf	fsr1h,w,c
 21755  0166A4  6EDA               	movwf	fsr2h,c
 21756  0166A6  0EFF               	movlw	255
 21757  0166A8  22DA               	addwfc	fsr2h,f,c
 21758  0166AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 21759  0166B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 21760  0166B6                     	if	0	;tblptru may be non-zero
 21761  0166B6                     	endif
 21762  0166B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21763  0166B6  0E00               	movlw	low (__mediumconst shr (0+16))
 21764  0166B8  6EF8               	movwf	tblptru,c
 21765  0166BA                     	endif
 21766  0166BA  0008               	tblrd		*
 21767  0166BC  50F5               	movf	tablat,w,c
 21768  0166BE  6E09               	movwf	(btemp+8)^0,c
 21769  0166C0  6A0A               	clrf	(btemp+9)^0,c
 21770  0166C2  500B               	movf	(btemp+10)^0,w,c
 21771  0166C4  2609               	addwf	(btemp+8)^0,f,c
 21772  0166C6  500C               	movf	(btemp+11)^0,w,c
 21773  0166C8  220A               	addwfc	(btemp+9)^0,f,c
 21774  0166CA  500A               	movf	(btemp+9)^0,w,c
 21775  0166CC  E104               	bnz	u8150
 21776  0166CE  0E05               	movlw	5
 21777  0166D0  5C09               	subwf	(btemp+8)^0,w,c
 21778  0166D2  A0D8               	btfss	status,0,c
 21779  0166D4  D002               	goto	l8709
 21780  0166D6                     u8150:
 21781                           
 21782                           ;stkvar	_atoi$5748 @ sp[(-9)+4]
 21783  0166D6  0EFB               	movlw	-5
 21784  0166D8  6AE3               	clrf	plusw1,c
 21785  0166DA                     l8709:
 21786                           
 21787                           ;stkvar	_atoi$5748 @ sp[(-9)+4]
 21788  0166DA  0EFB               	movlw	-5
 21789  0166DC  50E3               	movf	plusw1,w,c
 21790  0166DE  6E0B               	movwf	(btemp+10)^0,c
 21791  0166E0  6A0C               	clrf	(btemp+11)^0,c
 21792                           
 21793                           ;stkvar	_atoi$5747 @ sp[(-9)+2]
 21794  0166E2  0EF9               	movlw	-7
 21795  0166E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21796  0166EA  0EFA               	movlw	-6
 21797  0166EC  0060  F033  FFE3   	movff	btemp+11,plusw1
 21798                           
 21799                           ;stkvar	_atoi$5747 @ sp[(-9)+2]
 21800  0166F2  0EF9               	movlw	-7
 21801  0166F4  006F FF8C  F001    	movff	plusw1,btemp
 21802  0166FA  0EFA               	movlw	-6
 21803  0166FC  50E3               	movf	plusw1,w,c
 21804  0166FE  1001               	iorwf	btemp^0,w,c
 21805  016700  B4D8               	btfsc	status,2,c
 21806  016702  D01F               	goto	l8719
 21807  016704  D79F               	goto	l8699
 21808  016706                     l8715:
 21809  016706  0E01               	movlw	1
 21810  016708  6E0B               	movwf	(btemp+10)^0,c
 21811  01670A  0E00               	movlw	0
 21812  01670C  6E0C               	movwf	(btemp+11)^0,c
 21813                           
 21814                           ;stkvar	_neg @ sp[(-9)+7]
 21815  01670E  0EFE               	movlw	-2
 21816  016710  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21817  016716  0EFF               	movlw	-1
 21818  016718  0060  F033  FFE3   	movff	btemp+11,plusw1
 21819  01671E                     l8717:
 21820                           
 21821                           ;stkvar	_s @ sp[(-9)+-2]
 21822  01671E  0EF5               	movlw	-11
 21823  016720  50E3               	movf	plusw1,w,c
 21824  016722  0F01               	addlw	1
 21825  016724  6E01               	movwf	btemp^0,c
 21826  016726  0EF5               	movlw	-11
 21827  016728  0060  F007  FFE3   	movff	btemp,plusw1
 21828  01672E  6A01               	clrf	btemp^0,c
 21829  016730  0EF6               	movlw	-10
 21830  016732  50E3               	movf	plusw1,w,c
 21831  016734  2001               	addwfc	btemp^0,w,c
 21832  016736  6E01               	movwf	btemp^0,c
 21833  016738  0EF6               	movlw	-10
 21834  01673A  0060  F007  FFE3   	movff	btemp,plusw1
 21835  016740  D053               	goto	l8725
 21836  016742                     l8719:
 21837                           
 21838                           ;stkvar	_s @ sp[(-9)+-2]
 21839  016742  50E1               	movf	fsr1l,w,c
 21840  016744  0FF5               	addlw	-11
 21841  016746  6ED9               	movwf	fsr2l,c
 21842  016748  50E2               	movf	fsr1h,w,c
 21843  01674A  6EDA               	movwf	fsr2h,c
 21844  01674C  0EFF               	movlw	255
 21845  01674E  22DA               	addwfc	fsr2h,f,c
 21846  016750  006F FF7B FFF6     	movff	postinc2,tblptrl
 21847  016756  006F FF77 FFF7     	movff	postdec2,tblptrh
 21848  01675C                     	if	0	;tblptru may be non-zero
 21849  01675C                     	endif
 21850  01675C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21851  01675C  0E00               	movlw	low (__mediumconst shr (0+16))
 21852  01675E  6EF8               	movwf	tblptru,c
 21853  016760                     	endif
 21854  016760  0008               	tblrd		*
 21855  016762  50F5               	movf	tablat,w,c
 21856  016764  6E0B               	movwf	(btemp+10)^0,c
 21857  016766  6A0C               	clrf	(btemp+11)^0,c
 21858                           
 21859                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21860                           ; Switch size 1, requested type "simple"
 21861                           ; Number of cases is 1, Range of values is 0 to 0
 21862                           ; switch strategies available:
 21863                           ; Name         Instructions Cycles
 21864                           ; simple_byte            4     3 (average)
 21865                           ;	Chosen strategy is simple_byte
 21866  016768  500C               	movf	(btemp+11)^0,w,c
 21867  01676A  0A00               	xorlw	0	; case 0
 21868  01676C  A4D8               	btfss	status,2,c
 21869  01676E  D03C               	goto	l8725
 21870                           
 21871                           ; Switch size 1, requested type "simple"
 21872                           ; Number of cases is 2, Range of values is 43 to 45
 21873                           ; switch strategies available:
 21874                           ; Name         Instructions Cycles
 21875                           ; simple_byte            7     4 (average)
 21876                           ;	Chosen strategy is simple_byte
 21877  016770  500B               	movf	(btemp+10)^0,w,c
 21878  016772  0A2B               	xorlw	43	; case 43
 21879  016774  B4D8               	btfsc	status,2,c
 21880  016776  D7D3               	goto	l8717
 21881  016778  0A06               	xorlw	6	; case 45
 21882  01677A  B4D8               	btfsc	status,2,c
 21883  01677C  D7C4               	goto	l8715
 21884  01677E  D034               	goto	l8725
 21885  016780                     l8721:
 21886                           
 21887                           ;stkvar	_n @ sp[(-9)+5]
 21888  016780  0EFC               	movlw	-4
 21889  016782  006F FF8C  F00B    	movff	plusw1,btemp+10
 21890  016788  0EFD               	movlw	-3
 21891  01678A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21892  016790  0E0A               	movlw	10
 21893  016792  020B               	mulwf	(btemp+10)^0,c
 21894  016794  006F FFCC  F009    	movff	prodl,btemp+8
 21895  01679A  006F FFD0  F00A    	movff	prodh,btemp+9
 21896  0167A0  020C               	mulwf	(btemp+11)^0,c
 21897  0167A2  50F3               	movf	prodl,w,c
 21898  0167A4  260A               	addwf	(btemp+9)^0,f,c
 21899                           
 21900                           ;stkvar	_s @ sp[(-9)+-2]
 21901  0167A6  50E1               	movf	fsr1l,w,c
 21902  0167A8  0FF5               	addlw	-11
 21903  0167AA  6ED9               	movwf	fsr2l,c
 21904  0167AC  50E2               	movf	fsr1h,w,c
 21905  0167AE  6EDA               	movwf	fsr2h,c
 21906  0167B0  0EFF               	movlw	255
 21907  0167B2  22DA               	addwfc	fsr2h,f,c
 21908  0167B4  006F FF7B FFF6     	movff	postinc2,tblptrl
 21909  0167BA  006F FF77 FFF7     	movff	postdec2,tblptrh
 21910  0167C0                     	if	0	;tblptru may be non-zero
 21911  0167C0                     	endif
 21912  0167C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21913  0167C0  0E00               	movlw	low (__mediumconst shr (0+16))
 21914  0167C2  6EF8               	movwf	tblptru,c
 21915  0167C4                     	endif
 21916  0167C4  0008               	tblrd		*
 21917  0167C6  50F5               	movf	tablat,w,c
 21918  0167C8  5E09               	subwf	(btemp+8)^0,f,c
 21919  0167CA  0E00               	movlw	0
 21920  0167CC  5A0A               	subwfb	(btemp+9)^0,f,c
 21921  0167CE  0E30               	movlw	48
 21922  0167D0  2609               	addwf	(btemp+8)^0,f,c
 21923  0167D2  0E00               	movlw	0
 21924  0167D4  220A               	addwfc	(btemp+9)^0,f,c
 21925                           
 21926                           ;stkvar	_n @ sp[(-9)+5]
 21927  0167D6  0EFC               	movlw	-4
 21928  0167D8  0060  F027  FFE3   	movff	btemp+8,plusw1
 21929  0167DE  0EFD               	movlw	-3
 21930  0167E0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21931  0167E6  D79B               	goto	l8717
 21932  0167E8                     l8725:
 21933  0167E8  0ED0               	movlw	208
 21934  0167EA  6E0B               	movwf	(btemp+10)^0,c
 21935  0167EC  0EFF               	movlw	255
 21936  0167EE  6E0C               	movwf	(btemp+11)^0,c
 21937                           
 21938                           ;stkvar	_s @ sp[(-9)+-2]
 21939  0167F0  50E1               	movf	fsr1l,w,c
 21940  0167F2  0FF5               	addlw	-11
 21941  0167F4  6ED9               	movwf	fsr2l,c
 21942  0167F6  50E2               	movf	fsr1h,w,c
 21943  0167F8  6EDA               	movwf	fsr2h,c
 21944  0167FA  0EFF               	movlw	255
 21945  0167FC  22DA               	addwfc	fsr2h,f,c
 21946  0167FE  006F FF7B FFF6     	movff	postinc2,tblptrl
 21947  016804  006F FF77 FFF7     	movff	postdec2,tblptrh
 21948  01680A                     	if	0	;tblptru may be non-zero
 21949  01680A                     	endif
 21950  01680A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21951  01680A  0E00               	movlw	low (__mediumconst shr (0+16))
 21952  01680C  6EF8               	movwf	tblptru,c
 21953  01680E                     	endif
 21954  01680E  0008               	tblrd		*
 21955  016810  50F5               	movf	tablat,w,c
 21956  016812  6E09               	movwf	(btemp+8)^0,c
 21957  016814  6A0A               	clrf	(btemp+9)^0,c
 21958  016816  500B               	movf	(btemp+10)^0,w,c
 21959  016818  2609               	addwf	(btemp+8)^0,f,c
 21960  01681A  500C               	movf	(btemp+11)^0,w,c
 21961  01681C  220A               	addwfc	(btemp+9)^0,f,c
 21962  01681E  500A               	movf	(btemp+9)^0,w,c
 21963  016820  E106               	bnz	u8170
 21964  016822  0E0A               	movlw	10
 21965  016824  5C09               	subwf	(btemp+8)^0,w,c
 21966  016826  B0D8               	btfsc	status,0,c
 21967  016828  D002               	goto	u8170
 21968  01682A  0E01               	movlw	1
 21969  01682C  D001               	goto	u8180
 21970  01682E                     u8170:
 21971  01682E  0E00               	movlw	0
 21972  016830                     u8180:
 21973  016830  6E0B               	movwf	(btemp+10)^0,c
 21974  016832  6A0C               	clrf	(btemp+11)^0,c
 21975                           
 21976                           ;stkvar	_atoi$5749 @ sp[(-9)+0]
 21977  016834  0EF7               	movlw	-9
 21978  016836  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21979  01683C  0EF8               	movlw	-8
 21980  01683E  0060  F033  FFE3   	movff	btemp+11,plusw1
 21981                           
 21982                           ;stkvar	_atoi$5749 @ sp[(-9)+0]
 21983  016844  0EF7               	movlw	-9
 21984  016846  006F FF8C  F001    	movff	plusw1,btemp
 21985  01684C  0EF8               	movlw	-8
 21986  01684E  50E3               	movf	plusw1,w,c
 21987  016850  1001               	iorwf	btemp^0,w,c
 21988  016852  A4D8               	btfss	status,2,c
 21989  016854  D795               	goto	l8721
 21990                           
 21991                           ;stkvar	_neg @ sp[(-9)+7]
 21992  016856  0EFE               	movlw	-2
 21993  016858  006F FF8C  F001    	movff	plusw1,btemp
 21994  01685E  0EFF               	movlw	-1
 21995  016860  50E3               	movf	plusw1,w,c
 21996  016862  1001               	iorwf	btemp^0,w,c
 21997  016864  A4D8               	btfss	status,2,c
 21998  016866  D00E               	goto	l8735
 21999                           
 22000                           ;stkvar	_n @ sp[(-9)+5]
 22001  016868  0EFC               	movlw	-4
 22002  01686A  006F FF8C  F001    	movff	plusw1,btemp
 22003  016870  1E01               	comf	btemp^0,f,c
 22004  016872  0EFD               	movlw	-3
 22005  016874  006F FF8C  F002    	movff	plusw1,btemp+1
 22006  01687A  1E02               	comf	(btemp+1)^0,f,c
 22007  01687C  2A01               	incf	btemp^0,f,c
 22008  01687E  B4D8               	btfsc	status,2,c
 22009  016880  2A02               	incf	(btemp+1)^0,f,c
 22010  016882  D008               	goto	l2990
 22011  016884                     l8735:
 22012                           
 22013                           ;stkvar	_n @ sp[(-9)+5]
 22014  016884  0EFC               	movlw	-4
 22015  016886  006F FF8C  F001    	movff	plusw1,btemp
 22016  01688C  0EFD               	movlw	-3
 22017  01688E  006F FF8C  F002    	movff	plusw1,btemp+1
 22018  016894                     l2990:
 22019                           
 22020                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22021  016894  0EF5               	movlw	245
 22022  016896  26E1               	addwf	fsr1l,f,c
 22023  016898  0EFF               	movlw	255
 22024  01689A  22E2               	addwfc	fsr1h,f,c
 22025  01689C  0012               	return		;funcret
 22026  01689E                     __end_of_atoi:
 22027                           	opt callstack 0
 22028                           
 22029 ;; *************** function _isspace *****************
 22030 ;; Defined at:
 22031 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22032 ;; Parameters:    Size  Location     Type
 22033 ;;  c               2  [STACK] int 
 22034 ;; Auto vars:     Size  Location     Type
 22035 ;;		None
 22036 ;; Return value:  Size  Location     Type
 22037 ;;                  2  [STACK] int 
 22038 ;; Registers used:
 22039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22040 ;; Tracked objects:
 22041 ;;		On entry : 0/0
 22042 ;;		On exit  : 0/0
 22043 ;;		Unchanged: 0/0
 22044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22049 ;;Total ram usage:        0 bytes
 22050 ;; Hardware stack levels used:    1
 22051 ;; Hardware stack levels required when called:   15
 22052 ;; This function calls:
 22053 ;;		Nothing
 22054 ;; This function is called by:
 22055 ;;		_atoi
 22056 ;; This function uses a reentrant model
 22057 ;;
 22058                           
 22059                           	psect	text78
 22060  019AD8                     __ptext78:
 22061                           	opt callstack 0
 22062  019AD8                     _isspace:
 22063                           	opt callstack 0
 22064                           
 22065                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22066  019AD8  52E6               	movf	postinc1,f,c
 22067                           
 22068                           ;stkvar	_isspace$5787 @ sp[(-1)+0]
 22069                           
 22070                           ;incstack = 0
 22071 ;; hardware stack exceeded
 22072  019ADA  0EFF               	movlw	-1
 22073  019ADC  6AE3               	clrf	plusw1,c
 22074  019ADE  2AE3               	incf	plusw1,f,c
 22075                           
 22076                           ;stkvar	_c @ sp[(-1)+-2]
 22077  019AE0  0EFD               	movlw	-3
 22078  019AE2  006F FF8C  F001    	movff	plusw1,btemp
 22079  019AE8  0E20               	movlw	32
 22080  019AEA  1801               	xorwf	btemp^0,w,c
 22081  019AEC  E104               	bnz	u7000
 22082  019AEE  0EFE               	movlw	-2
 22083  019AF0  50E3               	movf	plusw1,w,c
 22084  019AF2  B4D8               	btfsc	status,2,c
 22085  019AF4  D012               	goto	l8093
 22086  019AF6                     u7000:
 22087                           
 22088                           ;stkvar	_c @ sp[(-1)+-2]
 22089  019AF6  0EFD               	movlw	-3
 22090  019AF8  50E3               	movf	plusw1,w,c
 22091  019AFA  0FF7               	addlw	247
 22092  019AFC  6E0B               	movwf	(btemp+10)^0,c
 22093  019AFE  0EFE               	movlw	-2
 22094  019B00  006F FF8C  F00C    	movff	plusw1,btemp+11
 22095  019B06  0EFF               	movlw	255
 22096  019B08  220C               	addwfc	(btemp+11)^0,f,c
 22097  019B0A  500C               	movf	(btemp+11)^0,w,c
 22098  019B0C  E104               	bnz	u7010
 22099  019B0E  0E05               	movlw	5
 22100  019B10  5C0B               	subwf	(btemp+10)^0,w,c
 22101  019B12  A0D8               	btfss	status,0,c
 22102  019B14  D002               	goto	l8093
 22103  019B16                     u7010:
 22104                           
 22105                           ;stkvar	_isspace$5787 @ sp[(-1)+0]
 22106  019B16  0EFF               	movlw	-1
 22107  019B18  6AE3               	clrf	plusw1,c
 22108  019B1A                     l8093:
 22109                           
 22110                           ;stkvar	_isspace$5787 @ sp[(-1)+0]
 22111  019B1A  0EFF               	movlw	-1
 22112  019B1C  50E3               	movf	plusw1,w,c
 22113  019B1E  6E01               	movwf	btemp^0,c
 22114  019B20  6A02               	clrf	(btemp+1)^0,c
 22115                           
 22116                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22117  019B22  52E5               	movf	postdec1,f,c
 22118  019B24  52E5               	movf	postdec1,f,c
 22119  019B26  52E5               	movf	postdec1,f,c
 22120  019B28  0012               	return		;funcret
 22121  019B2A                     __end_of_isspace:
 22122                           	opt callstack 0
 22123                           
 22124 ;; *************** function _isdigit *****************
 22125 ;; Defined at:
 22126 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22127 ;; Parameters:    Size  Location     Type
 22128 ;;  c               2  [STACK] int 
 22129 ;; Auto vars:     Size  Location     Type
 22130 ;;		None
 22131 ;; Return value:  Size  Location     Type
 22132 ;;                  2  [STACK] int 
 22133 ;; Registers used:
 22134 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22135 ;; Tracked objects:
 22136 ;;		On entry : 0/0
 22137 ;;		On exit  : 0/0
 22138 ;;		Unchanged: 0/0
 22139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22144 ;;Total ram usage:        0 bytes
 22145 ;; Hardware stack levels used:    1
 22146 ;; Hardware stack levels required when called:   15
 22147 ;; This function calls:
 22148 ;;		Nothing
 22149 ;; This function is called by:
 22150 ;;		_vfpfcnvrt
 22151 ;;		_atoi
 22152 ;; This function uses a reentrant model
 22153 ;;
 22154                           
 22155                           	psect	text79
 22156  01A14E                     __ptext79:
 22157                           	opt callstack 0
 22158  01A14E                     _isdigit:
 22159                           	opt callstack 0
 22160                           
 22161                           ;stkvar	_c @ sp[(0)+-2]
 22162                           
 22163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22164                           ;incstack = 0
 22165 ;; hardware stack exceeded
 22166  01A14E  0EFE               	movlw	-2
 22167  01A150  50E3               	movf	plusw1,w,c
 22168  01A152  0FD0               	addlw	208
 22169  01A154  6E0B               	movwf	(btemp+10)^0,c
 22170  01A156  0EFF               	movlw	-1
 22171  01A158  006F FF8C  F00C    	movff	plusw1,btemp+11
 22172  01A15E  0EFF               	movlw	255
 22173  01A160  220C               	addwfc	(btemp+11)^0,f,c
 22174  01A162  500C               	movf	(btemp+11)^0,w,c
 22175  01A164  E106               	bnz	u5850
 22176  01A166  0E0A               	movlw	10
 22177  01A168  5C0B               	subwf	(btemp+10)^0,w,c
 22178  01A16A  B0D8               	btfsc	status,0,c
 22179  01A16C  D002               	goto	u5850
 22180  01A16E  0E01               	movlw	1
 22181  01A170  D001               	goto	u5860
 22182  01A172                     u5850:
 22183  01A172  0E00               	movlw	0
 22184  01A174                     u5860:
 22185  01A174  6E01               	movwf	btemp^0,c
 22186  01A176  6A02               	clrf	(btemp+1)^0,c
 22187                           
 22188                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22189  01A178  52E5               	movf	postdec1,f,c
 22190  01A17A  52E5               	movf	postdec1,f,c
 22191  01A17C  0012               	return		;funcret
 22192  01A17E                     __end_of_isdigit:
 22193                           	opt callstack 0
 22194                           
 22195 ;; *************** function _set_vterm *****************
 22196 ;; Defined at:
 22197 ;;		line 107 in file "mconfig.c"
 22198 ;; Parameters:    Size  Location     Type
 22199 ;;  vterm           1  [STACK] const unsigned char 
 22200 ;; Auto vars:     Size  Location     Type
 22201 ;;		None
 22202 ;; Return value:  Size  Location     Type
 22203 ;;                  1  [STACK] unsigned char 
 22204 ;; Registers used:
 22205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22206 ;; Tracked objects:
 22207 ;;		On entry : 0/2
 22208 ;;		On exit  : 0/0
 22209 ;;		Unchanged: 0/0
 22210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22215 ;;Total ram usage:        0 bytes
 22216 ;; Hardware stack levels used:    1
 22217 ;; Hardware stack levels required when called:   15
 22218 ;; This function calls:
 22219 ;;		Nothing
 22220 ;; This function is called by:
 22221 ;;		_main
 22222 ;;		_check_help
 22223 ;; This function uses a reentrant model
 22224 ;;
 22225                           
 22226                           	psect	text80
 22227  01A6CA                     __ptext80:
 22228                           	opt callstack 0
 22229  01A6CA                     _set_vterm:
 22230                           	opt callstack 15
 22231                           
 22232                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22233                           ;stkvar	_vterm @ sp[(0)+-1]
 22234                           
 22235                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22236                           ;incstack = 0
 22237  01A6CA  0EFF               	movlw	-1
 22238  01A6CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22239  01A6D2  0E03               	movlw	3
 22240  01A6D4  160C               	andwf	(btemp+11)^0,f,c
 22241  01A6D6  EE22  F11F         	lfsr	2,_D+288
 22242  01A6DA  50DF               	movf	223,w,c
 22243  01A6DC  180C               	xorwf	(btemp+11)^0,w,c
 22244  01A6DE  0BFE               	andlw	-2
 22245  01A6E0  180C               	xorwf	(btemp+11)^0,w,c
 22246  01A6E2  6EDF               	movwf	223,c
 22247                           
 22248                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22249  01A6E4  52E5               	movf	postdec1,f,c
 22250  01A6E6  0012               	return		;funcret
 22251  01A6E8                     __end_of_set_vterm:
 22252                           	opt callstack 0
 22253                           
 22254 ;; *************** function _set_temp_display_help *****************
 22255 ;; Defined at:
 22256 ;;		line 211 in file "mconfig.c"
 22257 ;; Parameters:    Size  Location     Type
 22258 ;;  new_response    1  [STACK] const enum E16509
 22259 ;; Auto vars:     Size  Location     Type
 22260 ;;		None
 22261 ;; Return value:  Size  Location     Type
 22262 ;;                  1  [STACK] enum E16509
 22263 ;; Registers used:
 22264 ;;		wreg, fsr1l, fsr1h
 22265 ;; Tracked objects:
 22266 ;;		On entry : 0/2
 22267 ;;		On exit  : 3F/2
 22268 ;;		Unchanged: 0/0
 22269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22274 ;;Total ram usage:        0 bytes
 22275 ;; Hardware stack levels used:    1
 22276 ;; Hardware stack levels required when called:   15
 22277 ;; This function calls:
 22278 ;;		Nothing
 22279 ;; This function is called by:
 22280 ;;		_check_help
 22281 ;; This function uses a reentrant model
 22282 ;;
 22283                           
 22284                           	psect	text81
 22285  01A80E                     __ptext81:
 22286                           	opt callstack 0
 22287  01A80E                     _set_temp_display_help:
 22288                           	opt callstack 14
 22289                           
 22290                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22291                           
 22292                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22293                           ;incstack = 0
 22294  01A80E  0102               	movlb	2	; () banked
 22295  01A810  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 22296                           
 22297                           ; BSR set to: 2
 22298                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22299                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22300  01A812  0EFF               	movlw	-1
 22301  01A814  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 22302                           
 22303                           ; BSR set to: 2
 22304                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22305  01A81A  52E5               	movf	postdec1,f,c
 22306  01A81C  0012               	return		;funcret
 22307  01A81E                     __end_of_set_temp_display_help:
 22308                           	opt callstack 0
 22309                           
 22310 ;; *************** function _set_display_info *****************
 22311 ;; Defined at:
 22312 ;;		line 200 in file "mconfig.c"
 22313 ;; Parameters:    Size  Location     Type
 22314 ;;  new_response    1  [STACK] const enum E16509
 22315 ;; Auto vars:     Size  Location     Type
 22316 ;;		None
 22317 ;; Return value:  Size  Location     Type
 22318 ;;                  1  [STACK] enum E16994
 22319 ;; Registers used:
 22320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22321 ;; Tracked objects:
 22322 ;;		On entry : 0/1
 22323 ;;		On exit  : 0/0
 22324 ;;		Unchanged: 0/0
 22325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22330 ;;Total ram usage:        0 bytes
 22331 ;; Hardware stack levels used:    1
 22332 ;; Hardware stack levels required when called:   16
 22333 ;; This function calls:
 22334 ;;		_TimerDone
 22335 ;; This function is called by:
 22336 ;;		_main
 22337 ;;		_check_help
 22338 ;; This function uses a reentrant model
 22339 ;;
 22340                           
 22341                           	psect	text82
 22342  01A6E8                     __ptext82:
 22343                           	opt callstack 0
 22344  01A6E8                     _set_display_info:
 22345                           	opt callstack 14
 22346                           
 22347                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22348                           
 22349                           ; BSR set to: 2
 22350                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22351                           ;incstack = 0
 22352  01A6E8  0E07               	movlw	7
 22353  01A6EA  6EE6               	movwf	postinc1,c
 22354  01A6EC  EC7F  F0D1         	call	_TimerDone	;wreg free
 22355  01A6F0  5001               	movf	btemp^0,w,c
 22356  01A6F2  B4D8               	btfsc	status,2,c
 22357  01A6F4  D006               	goto	l1689
 22358                           
 22359                           ;mconfig.c: 205:   old_info = V.response.info;
 22360  01A6F6  0102               	movlb	2	; () banked
 22361  01A6F8  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 22362                           
 22363                           ; BSR set to: 2
 22364                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22365                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22366  01A6FA  0EFF               	movlw	-1
 22367  01A6FC  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 22368  01A702                     l1689:
 22369                           
 22370                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22371  01A702  52E5               	movf	postdec1,f,c
 22372  01A704  0012               	return		;funcret
 22373  01A706                     __end_of_set_display_info:
 22374                           	opt callstack 0
 22375                           
 22376 ;; *************** function _mode_lamp_dim *****************
 22377 ;; Defined at:
 22378 ;;		line 13 in file "mconfig.c"
 22379 ;; Parameters:    Size  Location     Type
 22380 ;;  level           2  [STACK] const unsigned short 
 22381 ;; Auto vars:     Size  Location     Type
 22382 ;;		None
 22383 ;; Return value:  Size  Location     Type
 22384 ;;                  1  [STACK] void 
 22385 ;; Registers used:
 22386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22387 ;; Tracked objects:
 22388 ;;		On entry : 0/2
 22389 ;;		On exit  : 0/0
 22390 ;;		Unchanged: 0/0
 22391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22396 ;;Total ram usage:        0 bytes
 22397 ;; Hardware stack levels used:    1
 22398 ;; Hardware stack levels required when called:   16
 22399 ;; This function calls:
 22400 ;;		_PWM8_LoadDutyValue
 22401 ;; This function is called by:
 22402 ;;		_main
 22403 ;;		_check_help
 22404 ;; This function uses a reentrant model
 22405 ;;
 22406                           
 22407                           	psect	text83
 22408  01A776                     __ptext83:
 22409                           	opt callstack 0
 22410  01A776                     _mode_lamp_dim:
 22411                           	opt callstack 14
 22412                           
 22413                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22414                           ;stkvar	_level @ sp[(0)+-2]
 22415                           
 22416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22417                           ;incstack = 0
 22418  01A776  0EFE               	movlw	-2
 22419  01A778  006F FF8F FFE6     	movff	plusw1,postinc1
 22420  01A77E  006F FF8F FFE6     	movff	plusw1,postinc1
 22421  01A784  ECFF  F0CE         	call	_PWM8_LoadDutyValue	;wreg free
 22422                           
 22423                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22424  01A788  52E5               	movf	postdec1,f,c
 22425  01A78A  52E5               	movf	postdec1,f,c
 22426  01A78C  0012               	return		;funcret
 22427  01A78E                     __end_of_mode_lamp_dim:
 22428                           	opt callstack 0
 22429                           
 22430 ;; *************** function _mode_lamp_bright *****************
 22431 ;; Defined at:
 22432 ;;		line 18 in file "mconfig.c"
 22433 ;; Parameters:    Size  Location     Type
 22434 ;;		None
 22435 ;; Auto vars:     Size  Location     Type
 22436 ;;		None
 22437 ;; Return value:  Size  Location     Type
 22438 ;;                  1  [STACK] void 
 22439 ;; Registers used:
 22440 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22441 ;; Tracked objects:
 22442 ;;		On entry : 0/0
 22443 ;;		On exit  : 0/0
 22444 ;;		Unchanged: 0/0
 22445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22450 ;;Total ram usage:        0 bytes
 22451 ;; Hardware stack levels used:    1
 22452 ;; Hardware stack levels required when called:   16
 22453 ;; This function calls:
 22454 ;;		_PWM8_LoadDutyValue
 22455 ;; This function is called by:
 22456 ;;		_check_help
 22457 ;; This function uses a reentrant model
 22458 ;;
 22459                           
 22460                           	psect	text84
 22461  01A84C                     __ptext84:
 22462                           	opt callstack 0
 22463  01A84C                     _mode_lamp_bright:
 22464                           	opt callstack 13
 22465                           
 22466                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22467                           
 22468                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22469                           ;incstack = 0
 22470  01A84C  0E2C               	movlw	44
 22471  01A84E  6EE6               	movwf	postinc1,c
 22472  01A850  0E01               	movlw	1
 22473  01A852  6EE6               	movwf	postinc1,c
 22474  01A854  ECFF  F0CE         	call	_PWM8_LoadDutyValue	;wreg free
 22475                           
 22476                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22477  01A858  0012               	return		;funcret
 22478  01A85A                     __end_of_mode_lamp_bright:
 22479                           	opt callstack 0
 22480                           
 22481 ;; *************** function _PWM8_LoadDutyValue *****************
 22482 ;; Defined at:
 22483 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22484 ;; Parameters:    Size  Location     Type
 22485 ;;  dutyValue       2  [STACK] unsigned short 
 22486 ;; Auto vars:     Size  Location     Type
 22487 ;;		None
 22488 ;; Return value:  Size  Location     Type
 22489 ;;                  1  [STACK] void 
 22490 ;; Registers used:
 22491 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22492 ;; Tracked objects:
 22493 ;;		On entry : 0/2
 22494 ;;		On exit  : 0/0
 22495 ;;		Unchanged: 0/0
 22496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22501 ;;Total ram usage:        0 bytes
 22502 ;; Hardware stack levels used:    1
 22503 ;; Hardware stack levels required when called:   15
 22504 ;; This function calls:
 22505 ;;		Nothing
 22506 ;; This function is called by:
 22507 ;;		_mode_lamp_dim
 22508 ;;		_mode_lamp_bright
 22509 ;; This function uses a reentrant model
 22510 ;;
 22511                           
 22512                           	psect	text85
 22513  019DFE                     __ptext85:
 22514                           	opt callstack 0
 22515  019DFE                     _PWM8_LoadDutyValue:
 22516                           	opt callstack 14
 22517                           
 22518                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22519                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22520                           
 22521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22522                           ;incstack = 0
 22523  019DFE  0EFE               	movlw	-2
 22524  019E00  006F FF8C  F00B    	movff	plusw1,btemp+10
 22525  019E06  0EFF               	movlw	-1
 22526  019E08  006F FF8C  F00C    	movff	plusw1,btemp+11
 22527  019E0E  90D8               	bcf	status,0,c
 22528  019E10  320C               	rrcf	(btemp+11)^0,f,c
 22529  019E12  320B               	rrcf	(btemp+10)^0,f,c
 22530  019E14  90D8               	bcf	status,0,c
 22531  019E16  320C               	rrcf	(btemp+11)^0,f,c
 22532  019E18  320B               	rrcf	(btemp+10)^0,f,c
 22533  019E1A  500B               	movf	(btemp+10)^0,w,c
 22534  019E1C  6E61               	movwf	97,c	;volatile
 22535                           
 22536                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22537                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22538  019E1E  0EFE               	movlw	-2
 22539  019E20  006F FF8C  F00C    	movff	plusw1,btemp+11
 22540  019E26  0E03               	movlw	3
 22541  019E28  160C               	andwf	(btemp+11)^0,f,c
 22542  019E2A  0E06               	movlw	6
 22543  019E2C  6E01               	movwf	btemp^0,c
 22544  019E2E                     u8655:
 22545  019E2E  90D8               	bcf	status,0,c
 22546  019E30  360C               	rlcf	(btemp+11)^0,f,c
 22547  019E32  2E01               	decfsz	btemp^0,f,c
 22548  019E34  D7FC               	goto	u8655
 22549  019E36  500C               	movf	(btemp+11)^0,w,c
 22550  019E38  6E60               	movwf	96,c	;volatile
 22551                           
 22552                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22553  019E3A  52E5               	movf	postdec1,f,c
 22554  019E3C  52E5               	movf	postdec1,f,c
 22555  019E3E  0012               	return		;funcret
 22556  019E40                     __end_of_PWM8_LoadDutyValue:
 22557                           	opt callstack 0
 22558                           
 22559 ;; *************** function _help_button *****************
 22560 ;; Defined at:
 22561 ;;		line 26 in file "mconfig.c"
 22562 ;; Parameters:    Size  Location     Type
 22563 ;;		None
 22564 ;; Auto vars:     Size  Location     Type
 22565 ;;		None
 22566 ;; Return value:  Size  Location     Type
 22567 ;;                  1  [STACK] _Bool 
 22568 ;; Registers used:
 22569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22570 ;; Tracked objects:
 22571 ;;		On entry : 0/2
 22572 ;;		On exit  : 0/0
 22573 ;;		Unchanged: 0/0
 22574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22579 ;;Total ram usage:        0 bytes
 22580 ;; Hardware stack levels used:    1
 22581 ;; Hardware stack levels required when called:   16
 22582 ;; This function calls:
 22583 ;;		_StartTimer
 22584 ;;		_TimerDone
 22585 ;; This function is called by:
 22586 ;;		_check_help
 22587 ;; This function uses a reentrant model
 22588 ;;
 22589                           
 22590                           	psect	text86
 22591  019F7E                     __ptext86:
 22592                           	opt callstack 0
 22593  019F7E                     _help_button:
 22594                           	opt callstack 13
 22595                           
 22596                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22597                           
 22598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22599                           ;incstack = 0
 22600  019F7E  B0CB               	btfsc	203,0,c	;volatile
 22601  019F80  D00C               	goto	l1632
 22602                           
 22603                           ;mconfig.c: 29:   V.help = 1;
 22604  019F82  0102               	movlb	2	; () banked
 22605  019F84  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22606                           
 22607                           ; BSR set to: 2
 22608                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22609  019F86  0E08               	movlw	8
 22610  019F88  6EE6               	movwf	postinc1,c
 22611  019F8A  EC7F  F0D1         	call	_TimerDone	;wreg free
 22612  019F8E  5001               	movf	btemp^0,w,c
 22613  019F90  B4D8               	btfsc	status,2,c
 22614  019F92  D003               	goto	l1632
 22615                           
 22616                           ;mconfig.c: 31:    return 1;
 22617  019F94  0E01               	movlw	1
 22618  019F96  6E01               	movwf	btemp^0,c
 22619  019F98  0012               	return	
 22620  019F9A                     l1632:
 22621                           
 22622                           ;mconfig.c: 34:  if (!V.help)
 22623  019F9A  0102               	movlb	2	; () banked
 22624  019F9C  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22625  019F9E  D008               	goto	l9701
 22626                           
 22627                           ; BSR set to: 2
 22628                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22629  019FA0  0E2C               	movlw	44
 22630  019FA2  6EE6               	movwf	postinc1,c
 22631  019FA4  0E01               	movlw	1
 22632  019FA6  6EE6               	movwf	postinc1,c
 22633  019FA8  0E08               	movlw	8
 22634  019FAA  6EE6               	movwf	postinc1,c
 22635  019FAC  EC20  F0CF         	call	_StartTimer	;wreg free
 22636  019FB0                     l9701:
 22637                           
 22638                           ;mconfig.c: 37:  return 0;
 22639  019FB0  0E00               	movlw	0
 22640  019FB2  6E01               	movwf	btemp^0,c
 22641                           
 22642                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22643  019FB4  0012               	return		;funcret
 22644  019FB6                     __end_of_help_button:
 22645                           	opt callstack 0
 22646                           
 22647 ;; *************** function _TimerDone *****************
 22648 ;; Defined at:
 22649 ;;		line 20 in file "timers.c"
 22650 ;; Parameters:    Size  Location     Type
 22651 ;;  timer           1  [STACK] const unsigned char 
 22652 ;; Auto vars:     Size  Location     Type
 22653 ;;		None
 22654 ;; Return value:  Size  Location     Type
 22655 ;;                  1  [STACK] _Bool 
 22656 ;; Registers used:
 22657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22658 ;; Tracked objects:
 22659 ;;		On entry : 0/1
 22660 ;;		On exit  : 0/0
 22661 ;;		Unchanged: 0/0
 22662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22667 ;;Total ram usage:        0 bytes
 22668 ;; Hardware stack levels used:    1
 22669 ;; Hardware stack levels required when called:   15
 22670 ;; This function calls:
 22671 ;;		Nothing
 22672 ;; This function is called by:
 22673 ;;		_main
 22674 ;;		_WaitMs
 22675 ;;		_help_button
 22676 ;;		_check_help
 22677 ;;		_set_display_info
 22678 ;; This function uses a reentrant model
 22679 ;;
 22680                           
 22681                           	psect	text87
 22682  01A2FE                     __ptext87:
 22683                           	opt callstack 0
 22684  01A2FE                     _TimerDone:
 22685                           	opt callstack 14
 22686                           
 22687                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22688                           ;incstack = 0
 22689  01A2FE  0004               	clrwdt		;# 
 22690                           
 22691                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22692                           ;stkvar	_timer @ sp[(0)+-1]
 22693  01A300  0EFF               	movlw	-1
 22694  01A302  50E3               	movf	plusw1,w,c
 22695  01A304  0D02               	mullw	2
 22696  01A306  0EDA               	movlw	low _tickCount
 22697  01A308  24F3               	addwf	243,w,c
 22698  01A30A  6ED9               	movwf	fsr2l,c
 22699  01A30C  0E01               	movlw	high _tickCount
 22700  01A30E  20F4               	addwfc	prodh,w,c
 22701  01A310  6EDA               	movwf	fsr2h,c
 22702  01A312  50DE               	movf	postinc2,w,c
 22703  01A314  10DE               	iorwf	postinc2,w,c
 22704  01A316  A4D8               	btfss	status,2,c
 22705  01A318  D002               	goto	l9001
 22706                           
 22707                           ;timers.c: 24:   return 1;
 22708  01A31A  0E01               	movlw	1
 22709  01A31C  D001               	goto	L24
 22710  01A31E                     l9001:
 22711                           
 22712                           ;timers.c: 26:  return 0;
 22713  01A31E  0E00               	movlw	0
 22714  01A320                     L24:
 22715  01A320  6E01               	movwf	btemp^0,c
 22716                           
 22717                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22718  01A322  52E5               	movf	postdec1,f,c
 22719  01A324  0012               	return		;funcret
 22720  01A326                     __end_of_TimerDone:
 22721                           	opt callstack 0
 22722                           
 22723 ;; *************** function _StartTimer *****************
 22724 ;; Defined at:
 22725 ;;		line 12 in file "timers.c"
 22726 ;; Parameters:    Size  Location     Type
 22727 ;;  timer           1  [STACK] const unsigned char 
 22728 ;;  count           2  [STACK] const unsigned short 
 22729 ;; Auto vars:     Size  Location     Type
 22730 ;;		None
 22731 ;; Return value:  Size  Location     Type
 22732 ;;                  1  [STACK] void 
 22733 ;; Registers used:
 22734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22735 ;; Tracked objects:
 22736 ;;		On entry : 0/0
 22737 ;;		On exit  : 0/0
 22738 ;;		Unchanged: 0/0
 22739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22744 ;;Total ram usage:        0 bytes
 22745 ;; Hardware stack levels used:    1
 22746 ;; Hardware stack levels required when called:   15
 22747 ;; This function calls:
 22748 ;;		Nothing
 22749 ;; This function is called by:
 22750 ;;		_main
 22751 ;;		_WaitMs
 22752 ;;		_help_button
 22753 ;;		_check_help
 22754 ;;		_calc_bsoc
 22755 ;; This function uses a reentrant model
 22756 ;;
 22757                           
 22758                           	psect	text88
 22759  019E40                     __ptext88:
 22760                           	opt callstack 0
 22761  019E40                     _StartTimer:
 22762                           	opt callstack 0
 22763                           
 22764                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22765                           ;stkvar	_count @ sp[(0)+-3]
 22766                           
 22767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22768                           ;incstack = 0
 22769 ;; hardware stack exceeded
 22770  019E40  0EFD               	movlw	-3
 22771  019E42  006F FF8C  F00B    	movff	plusw1,btemp+10
 22772  019E48  0EFE               	movlw	-2
 22773  019E4A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22774  019E50  90D8               	bcf	status,0,c
 22775  019E52  340B               	rlcf	(btemp+10)^0,w,c
 22776  019E54  6E09               	movwf	(btemp+8)^0,c
 22777  019E56  340C               	rlcf	(btemp+11)^0,w,c
 22778  019E58  6E0A               	movwf	(btemp+9)^0,c
 22779                           
 22780                           ;stkvar	_timer @ sp[(0)+-1]
 22781  019E5A  0EFF               	movlw	-1
 22782  019E5C  50E3               	movf	plusw1,w,c
 22783  019E5E  0D02               	mullw	2
 22784  019E60  0EDA               	movlw	low _tickCount
 22785  019E62  24F3               	addwf	243,w,c
 22786  019E64  6ED9               	movwf	fsr2l,c
 22787  019E66  0E01               	movlw	high _tickCount
 22788  019E68  20F4               	addwfc	prodh,w,c
 22789  019E6A  6EDA               	movwf	fsr2h,c
 22790  019E6C  0060  F027  FFDE   	movff	btemp+8,postinc2
 22791  019E72  0060  F02B  FFDD   	movff	btemp+9,postdec2
 22792                           
 22793                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22794  019E78  52E5               	movf	postdec1,f,c
 22795  019E7A  52E5               	movf	postdec1,f,c
 22796  019E7C  52E5               	movf	postdec1,f,c
 22797  019E7E  0012               	return		;funcret
 22798  019E80                     __end_of_StartTimer:
 22799                           	opt callstack 0
 22800                           
 22801 ;; *************** function _display_info *****************
 22802 ;; Defined at:
 22803 ;;		line 190 in file "mconfig.c"
 22804 ;; Parameters:    Size  Location     Type
 22805 ;;		None
 22806 ;; Auto vars:     Size  Location     Type
 22807 ;;		None
 22808 ;; Return value:  Size  Location     Type
 22809 ;;                  1  [STACK] enum E16509
 22810 ;; Registers used:
 22811 ;;		btemp
 22812 ;; Tracked objects:
 22813 ;;		On entry : 0/2
 22814 ;;		On exit  : 0/0
 22815 ;;		Unchanged: 0/0
 22816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22821 ;;Total ram usage:        0 bytes
 22822 ;; Hardware stack levels used:    1
 22823 ;; Hardware stack levels required when called:   15
 22824 ;; This function calls:
 22825 ;;		Nothing
 22826 ;; This function is called by:
 22827 ;;		_check_help
 22828 ;; This function uses a reentrant model
 22829 ;;
 22830                           
 22831                           	psect	text89
 22832  01A8BA                     __ptext89:
 22833                           	opt callstack 0
 22834  01A8BA                     _display_info:
 22835                           	opt callstack 14
 22836                           
 22837                           ;mconfig.c: 192:  return V.response.info;
 22838                           
 22839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22840                           ;incstack = 0
 22841  01A8BA  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 22842                           
 22843                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22844  01A8C0  0012               	return		;funcret
 22845  01A8C2                     __end_of_display_info:
 22846                           	opt callstack 0
 22847                           
 22848 ;; *************** function _display_help *****************
 22849 ;; Defined at:
 22850 ;;		line 195 in file "mconfig.c"
 22851 ;; Parameters:    Size  Location     Type
 22852 ;;		None
 22853 ;; Auto vars:     Size  Location     Type
 22854 ;;		None
 22855 ;; Return value:  Size  Location     Type
 22856 ;;                  1  [STACK] enum E16509
 22857 ;; Registers used:
 22858 ;;		btemp
 22859 ;; Tracked objects:
 22860 ;;		On entry : 3F/2
 22861 ;;		On exit  : 0/0
 22862 ;;		Unchanged: 0/0
 22863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22868 ;;Total ram usage:        0 bytes
 22869 ;; Hardware stack levels used:    1
 22870 ;; Hardware stack levels required when called:   15
 22871 ;; This function calls:
 22872 ;;		Nothing
 22873 ;; This function is called by:
 22874 ;;		_check_help
 22875 ;; This function uses a reentrant model
 22876 ;;
 22877                           
 22878                           	psect	text90
 22879  01A8C2                     __ptext90:
 22880                           	opt callstack 0
 22881  01A8C2                     _display_help:
 22882                           	opt callstack 14
 22883                           
 22884                           ;mconfig.c: 197:  return V.response.help_temp;
 22885                           
 22886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22887                           ;incstack = 0
 22888  01A8C2  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 22889                           
 22890                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22891  01A8C8  0012               	return		;funcret
 22892  01A8CA                     __end_of_display_help:
 22893                           	opt callstack 0
 22894                           
 22895 ;; *************** function _check_enter_button *****************
 22896 ;; Defined at:
 22897 ;;		line 42 in file "hid.c"
 22898 ;; Parameters:    Size  Location     Type
 22899 ;;  h               1  [STACK] PTR struct H_data
 22900 ;;		 -> H(7), 
 22901 ;; Auto vars:     Size  Location     Type
 22902 ;;		None
 22903 ;; Return value:  Size  Location     Type
 22904 ;;                  1  [STACK] _Bool 
 22905 ;; Registers used:
 22906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22907 ;; Tracked objects:
 22908 ;;		On entry : 0/1
 22909 ;;		On exit  : 0/0
 22910 ;;		Unchanged: 0/0
 22911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22916 ;;Total ram usage:        0 bytes
 22917 ;; Hardware stack levels used:    1
 22918 ;; Hardware stack levels required when called:   15
 22919 ;; This function calls:
 22920 ;;		Nothing
 22921 ;; This function is called by:
 22922 ;;		_main
 22923 ;; This function uses a reentrant model
 22924 ;;
 22925                           
 22926                           	psect	text91
 22927  019E80                     __ptext91:
 22928                           	opt callstack 0
 22929  019E80                     _check_enter_button:
 22930                           	opt callstack 15
 22931                           
 22932                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 22933                           ;stkvar	_h @ sp[(0)+-1]
 22934                           
 22935                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22936                           ;incstack = 0
 22937  019E80  0EFF               	movlw	-1
 22938  019E82  50E3               	movf	plusw1,w,c
 22939  019E84  6ED9               	movwf	fsr2l,c
 22940  019E86  6ADA               	clrf	fsr2h,c
 22941  019E88  0E04               	movlw	4
 22942  019E8A  26D9               	addwf	fsr2l,f,c
 22943  019E8C  50DF               	movf	indf2,w,c
 22944  019E8E  A4D8               	btfss	status,2,c
 22945  019E90  D013               	goto	l10277
 22946                           
 22947                           ;stkvar	_h @ sp[(0)+-1]
 22948  019E92  0EFF               	movlw	-1
 22949  019E94  50E3               	movf	plusw1,w,c
 22950  019E96  6ED9               	movwf	fsr2l,c
 22951  019E98  6ADA               	clrf	fsr2h,c
 22952  019E9A  0E05               	movlw	5
 22953  019E9C  26D9               	addwf	fsr2l,f,c
 22954  019E9E  50DF               	movf	indf2,w,c
 22955  019EA0  A4D8               	btfss	status,2,c
 22956  019EA2  D00A               	goto	l10277
 22957                           
 22958                           ;hid.c: 45:   h->wait_enter = 1;
 22959                           ;stkvar	_h @ sp[(0)+-1]
 22960  019EA4  0EFF               	movlw	-1
 22961  019EA6  50E3               	movf	plusw1,w,c
 22962  019EA8  6ED9               	movwf	fsr2l,c
 22963  019EAA  6ADA               	clrf	fsr2h,c
 22964  019EAC  0E04               	movlw	4
 22965  019EAE  26D9               	addwf	fsr2l,f,c
 22966  019EB0  0E01               	movlw	1
 22967  019EB2  6EDF               	movwf	indf2,c
 22968                           
 22969                           ;hid.c: 46:   return 1;
 22970  019EB4  0E01               	movlw	1
 22971  019EB6  D001               	goto	L25
 22972  019EB8                     l10277:
 22973                           
 22974                           ;hid.c: 48:  return 0;
 22975  019EB8  0E00               	movlw	0
 22976  019EBA                     L25:
 22977  019EBA  6E01               	movwf	btemp^0,c
 22978                           
 22979                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 22980  019EBC  52E5               	movf	postdec1,f,c
 22981  019EBE  0012               	return		;funcret
 22982  019EC0                     __end_of_check_enter_button:
 22983                           	opt callstack 0
 22984                           
 22985 ;; *************** function _check_adc_scan *****************
 22986 ;; Defined at:
 22987 ;;		line 56 in file "daq.c"
 22988 ;; Parameters:    Size  Location     Type
 22989 ;;		None
 22990 ;; Auto vars:     Size  Location     Type
 22991 ;;		None
 22992 ;; Return value:  Size  Location     Type
 22993 ;;                  1  [STACK] _Bool 
 22994 ;; Registers used:
 22995 ;;		btemp
 22996 ;; Tracked objects:
 22997 ;;		On entry : 0/1
 22998 ;;		On exit  : 0/0
 22999 ;;		Unchanged: 0/0
 23000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23005 ;;Total ram usage:        0 bytes
 23006 ;; Hardware stack levels used:    1
 23007 ;; Hardware stack levels required when called:   15
 23008 ;; This function calls:
 23009 ;;		Nothing
 23010 ;; This function is called by:
 23011 ;;		_main
 23012 ;; This function uses a reentrant model
 23013 ;;
 23014                           
 23015                           	psect	text92
 23016  01A8CA                     __ptext92:
 23017                           	opt callstack 0
 23018  01A8CA                     _check_adc_scan:
 23019                           	opt callstack 15
 23020                           
 23021                           ;daq.c: 58:  return R.done;
 23022                           
 23023                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23024                           ;incstack = 0
 23025  01A8CA  0060  F3C8  F001   	movff	_R+39,btemp	;volatile
 23026                           
 23027                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23028  01A8D0  0012               	return		;funcret
 23029  01A8D2                     __end_of_check_adc_scan:
 23030                           	opt callstack 0
 23031                           
 23032 ;; *************** function _calc_model_data *****************
 23033 ;; Defined at:
 23034 ;;		line 56 in file "mbmc.c"
 23035 ;; Parameters:    Size  Location     Type
 23036 ;;		None
 23037 ;; Auto vars:     Size  Location     Type
 23038 ;;		None
 23039 ;; Return value:  Size  Location     Type
 23040 ;;                  1  [STACK] void 
 23041 ;; Registers used:
 23042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23043 ;; Tracked objects:
 23044 ;;		On entry : 0/1
 23045 ;;		On exit  : 3F/1
 23046 ;;		Unchanged: 0/0
 23047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23052 ;;Total ram usage:        0 bytes
 23053 ;; Hardware stack levels used:    1
 23054 ;; Hardware stack levels required when called:   18
 23055 ;; This function calls:
 23056 ;;		___fladd
 23057 ;;		___flmul
 23058 ;;		___flsub
 23059 ;;		_lp_filter
 23060 ;;		_start_bsoc
 23061 ;;		_stop_bsoc
 23062 ;; This function is called by:
 23063 ;;		_main
 23064 ;; This function uses a reentrant model
 23065 ;;
 23066                           
 23067                           	psect	text93
 23068  015E02                     __ptext93:
 23069                           	opt callstack 0
 23070  015E02                     _calc_model_data:
 23071                           	opt callstack 12
 23072                           
 23073                           ;mbmc.c: 58:  stop_bsoc();
 23074                           
 23075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23076                           ;incstack = 0
 23077  015E02  EC76  F0D4         	call	_stop_bsoc	;wreg free
 23078                           
 23079                           ; BSR set to: 57
 23080                           ;mbmc.c: 60:  if (!V.calib) {
 23081  015E06  0102               	movlb	2	; () banked
 23082  015E08  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 23083  015E0A  A4D8               	btfss	status,2,c
 23084  015E0C  D169               	goto	l10177
 23085                           
 23086                           ; BSR set to: 2
 23087                           ;mbmc.c: 61:   C.c_bat = C.calc[C_BATT];
 23088  015E0E  C100  F144         	movff	_C,_C+68	;volatile
 23089  015E12  C101  F145         	movff	_C+1,_C+69	;volatile
 23090  015E16  C102  F146         	movff	_C+2,_C+70	;volatile
 23091  015E1A  C103  F147         	movff	_C+3,_C+71	;volatile
 23092                           
 23093                           ;mbmc.c: 62:   C.c_pv = C.calc[C_PV];
 23094  015E1E  C104  F148         	movff	_C+4,_C+72	;volatile
 23095  015E22  C105  F149         	movff	_C+5,_C+73	;volatile
 23096  015E26  C106  F14A         	movff	_C+6,_C+74	;volatile
 23097  015E2A  C107  F14B         	movff	_C+7,_C+75	;volatile
 23098                           
 23099                           ;mbmc.c: 63:   C.v_bat = C.calc[V_BAT];
 23100  015E2E  C110  F154         	movff	_C+16,_C+84	;volatile
 23101  015E32  C111  F155         	movff	_C+17,_C+85	;volatile
 23102  015E36  C112  F156         	movff	_C+18,_C+86	;volatile
 23103  015E3A  C113  F157         	movff	_C+19,_C+87	;volatile
 23104                           
 23105                           ;mbmc.c: 64:   C.v_pv = C.calc[V_PV];
 23106  015E3E  C114  F150         	movff	_C+20,_C+80	;volatile
 23107  015E42  C115  F151         	movff	_C+21,_C+81	;volatile
 23108  015E46  C116  F152         	movff	_C+22,_C+82	;volatile
 23109  015E4A  C117  F153         	movff	_C+23,_C+83	;volatile
 23110                           
 23111                           ;mbmc.c: 65:   C.v_cc = C.calc[V_CC];
 23112  015E4E  C108  F14C         	movff	_C+8,_C+76	;volatile
 23113  015E52  C109  F14D         	movff	_C+9,_C+77	;volatile
 23114  015E56  C10A  F14E         	movff	_C+10,_C+78	;volatile
 23115  015E5A  C10B  F14F         	movff	_C+11,_C+79	;volatile
 23116                           
 23117                           ;mbmc.c: 66:   C.v_inverter = C.calc[V_INVERTER];
 23118  015E5E  C130  F164         	movff	_C+48,_C+100	;volatile
 23119  015E62  C131  F165         	movff	_C+49,_C+101	;volatile
 23120  015E66  C132  F166         	movff	_C+50,_C+102	;volatile
 23121  015E6A  C133  F167         	movff	_C+51,_C+103	;volatile
 23122                           
 23123                           ; BSR set to: 2
 23124                           ;mbmc.c: 67:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 23125  015E6E  0E01               	movlw	1
 23126  015E70  6EE6               	movwf	postinc1,c
 23127  015E72  0E10               	movlw	16
 23128  015E74  6EE6               	movwf	postinc1,c
 23129  015E76  0060  F403  FFE6   	movff	_C,postinc1
 23130  015E7C  0060  F407  FFE6   	movff	_C+1,postinc1
 23131  015E82  0060  F40B  FFE6   	movff	_C+2,postinc1
 23132  015E88  0060  F40F  FFE6   	movff	_C+3,postinc1
 23133  015E8E  0060  F413  FFE6   	movff	_C+4,postinc1
 23134  015E94  0060  F417  FFE6   	movff	_C+5,postinc1
 23135  015E9A  0060  F41B  FFE6   	movff	_C+6,postinc1
 23136  015EA0  0060  F41F  FFE6   	movff	_C+7,postinc1
 23137  015EA6  EC51  F0CE         	call	___flsub	;wreg free
 23138  015EAA  0060  F007  FFE6   	movff	btemp,postinc1
 23139  015EB0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23140  015EB6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23141  015EBC  0060  F013  FFE6   	movff	btemp+3,postinc1
 23142  015EC2  EC8A  F0B9         	call	_lp_filter	;wreg free
 23143  015EC6  0060  F004  F140   	movff	btemp,_C+64	;volatile
 23144  015ECC  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 23145  015ED2  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 23146  015ED8  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 23147                           
 23148                           ;mbmc.c: 68:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 23149  015EDE  0E01               	movlw	1
 23150  015EE0  6EE6               	movwf	postinc1,c
 23151  015EE2  0E11               	movlw	17
 23152  015EE4  6EE6               	movwf	postinc1,c
 23153  015EE6  0060  F553  FFE6   	movff	_C+84,postinc1
 23154  015EEC  0060  F557  FFE6   	movff	_C+85,postinc1
 23155  015EF2  0060  F55B  FFE6   	movff	_C+86,postinc1
 23156  015EF8  0060  F55F  FFE6   	movff	_C+87,postinc1
 23157  015EFE  0060  F503  FFE6   	movff	_C+64,postinc1
 23158  015F04  0060  F507  FFE6   	movff	_C+65,postinc1
 23159  015F0A  0060  F50B  FFE6   	movff	_C+66,postinc1
 23160  015F10  0060  F50F  FFE6   	movff	_C+67,postinc1
 23161  015F16  EC53  F095         	call	___flmul	;wreg free
 23162  015F1A  0060  F007  FFE6   	movff	btemp,postinc1
 23163  015F20  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23164  015F26  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23165  015F2C  0060  F013  FFE6   	movff	btemp+3,postinc1
 23166  015F32  EC8A  F0B9         	call	_lp_filter	;wreg free
 23167  015F36  0060  F004  F168   	movff	btemp,_C+104	;volatile
 23168  015F3C  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 23169  015F42  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 23170  015F48  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 23171                           
 23172                           ;mbmc.c: 69:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 23173  015F4E  0E01               	movlw	1
 23174  015F50  6EE6               	movwf	postinc1,c
 23175  015F52  0E12               	movlw	18
 23176  015F54  6EE6               	movwf	postinc1,c
 23177  015F56  0060  F543  FFE6   	movff	_C+80,postinc1
 23178  015F5C  0060  F547  FFE6   	movff	_C+81,postinc1
 23179  015F62  0060  F54B  FFE6   	movff	_C+82,postinc1
 23180  015F68  0060  F54F  FFE6   	movff	_C+83,postinc1
 23181  015F6E  0060  F523  FFE6   	movff	_C+72,postinc1
 23182  015F74  0060  F527  FFE6   	movff	_C+73,postinc1
 23183  015F7A  0060  F52B  FFE6   	movff	_C+74,postinc1
 23184  015F80  0060  F52F  FFE6   	movff	_C+75,postinc1
 23185  015F86  EC53  F095         	call	___flmul	;wreg free
 23186  015F8A  0060  F007  FFE6   	movff	btemp,postinc1
 23187  015F90  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23188  015F96  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23189  015F9C  0060  F013  FFE6   	movff	btemp+3,postinc1
 23190  015FA2  EC8A  F0B9         	call	_lp_filter	;wreg free
 23191  015FA6  0060  F004  F170   	movff	btemp,_C+112	;volatile
 23192  015FAC  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 23193  015FB2  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 23194  015FB8  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 23195                           
 23196                           ;mbmc.c: 70:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 23197  015FBE  0E01               	movlw	1
 23198  015FC0  6EE6               	movwf	postinc1,c
 23199  015FC2  0E13               	movlw	19
 23200  015FC4  6EE6               	movwf	postinc1,c
 23201  015FC6  0E00               	movlw	0
 23202  015FC8  6EE6               	movwf	postinc1,c
 23203  015FCA  0E00               	movlw	0
 23204  015FCC  6EE6               	movwf	postinc1,c
 23205  015FCE  0E60               	movlw	96
 23206  015FD0  6EE6               	movwf	postinc1,c
 23207  015FD2  0EC1               	movlw	193
 23208  015FD4  6EE6               	movwf	postinc1,c
 23209  015FD6  0060  F593  FFE6   	movff	_C+100,postinc1
 23210  015FDC  0060  F597  FFE6   	movff	_C+101,postinc1
 23211  015FE2  0060  F59B  FFE6   	movff	_C+102,postinc1
 23212  015FE8  0060  F59F  FFE6   	movff	_C+103,postinc1
 23213  015FEE  0060  F503  FFE6   	movff	_C+64,postinc1
 23214  015FF4  0060  F507  FFE6   	movff	_C+65,postinc1
 23215  015FFA  0060  F50B  FFE6   	movff	_C+66,postinc1
 23216  016000  0060  F50F  FFE6   	movff	_C+67,postinc1
 23217  016006  EC53  F095         	call	___flmul	;wreg free
 23218  01600A  0060  F007  FFE6   	movff	btemp,postinc1
 23219  016010  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23220  016016  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23221  01601C  0060  F013  FFE6   	movff	btemp+3,postinc1
 23222  016022  EC68  F099         	call	___fladd	;wreg free
 23223  016026  0060  F007  FFE6   	movff	btemp,postinc1
 23224  01602C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23225  016032  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23226  016038  0060  F013  FFE6   	movff	btemp+3,postinc1
 23227  01603E  EC8A  F0B9         	call	_lp_filter	;wreg free
 23228  016042  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 23229  016048  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 23230  01604E  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 23231  016054  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 23232                           
 23233                           ;mbmc.c: 71:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 23234  01605A  0E01               	movlw	1
 23235  01605C  6EE6               	movwf	postinc1,c
 23236  01605E  0E14               	movlw	20
 23237  016060  6EE6               	movwf	postinc1,c
 23238  016062  0060  F553  FFE6   	movff	_C+84,postinc1
 23239  016068  0060  F557  FFE6   	movff	_C+85,postinc1
 23240  01606E  0060  F55B  FFE6   	movff	_C+86,postinc1
 23241  016074  0060  F55F  FFE6   	movff	_C+87,postinc1
 23242  01607A  0060  F513  FFE6   	movff	_C+68,postinc1
 23243  016080  0060  F517  FFE6   	movff	_C+69,postinc1
 23244  016086  0060  F51B  FFE6   	movff	_C+70,postinc1
 23245  01608C  0060  F51F  FFE6   	movff	_C+71,postinc1
 23246  016092  EC53  F095         	call	___flmul	;wreg free
 23247  016096  0060  F007  FFE6   	movff	btemp,postinc1
 23248  01609C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23249  0160A2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23250  0160A8  0060  F013  FFE6   	movff	btemp+3,postinc1
 23251  0160AE  EC8A  F0B9         	call	_lp_filter	;wreg free
 23252  0160B2  0060  F004  F174   	movff	btemp,_C+116	;volatile
 23253  0160B8  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 23254  0160BE  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 23255  0160C4  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 23256                           
 23257                           ;mbmc.c: 75:   if (C.p_inverter < 0.0)
 23258  0160CA  0101               	movlb	1	; () banked
 23259  0160CC  AF6F               	btfss	(_C+111)& (0+255),7,b	;volatile
 23260  0160CE  D008               	goto	l10177
 23261                           
 23262                           ; BSR set to: 1
 23263                           ;mbmc.c: 76:    C.p_inverter = 0.0001;
 23264  0160D0  0E17               	movlw	23
 23265  0160D2  6F6C               	movwf	(_C+108)& (0+255),b	;volatile
 23266  0160D4  0EB7               	movlw	183
 23267  0160D6  6F6D               	movwf	(_C+109)& (0+255),b	;volatile
 23268  0160D8  0ED1               	movlw	209
 23269  0160DA  6F6E               	movwf	(_C+110)& (0+255),b	;volatile
 23270  0160DC  0E38               	movlw	56
 23271  0160DE  6F6F               	movwf	(_C+111)& (0+255),b	;volatile
 23272  0160E0                     l10177:
 23273                           
 23274                           ;mbmc.c: 78:  start_bsoc();
 23275  0160E0  EC16  F0D3         	call	_start_bsoc	;wreg free
 23276                           
 23277                           ; BSR set to: 57
 23278                           ;mbmc.c: 79:  C.update = 1;
 23279  0160E4  0E01               	movlw	1
 23280  0160E6  0101               	movlb	1	; () banked
 23281  0160E8  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
 23282                           
 23283                           ; BSR set to: 1
 23284                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23285  0160EA  0012               	return		;funcret
 23286  0160EC                     __end_of_calc_model_data:
 23287                           	opt callstack 0
 23288                           
 23289 ;; *************** function _stop_bsoc *****************
 23290 ;; Defined at:
 23291 ;;		line 111 in file "bsoc.c"
 23292 ;; Parameters:    Size  Location     Type
 23293 ;;		None
 23294 ;; Auto vars:     Size  Location     Type
 23295 ;;		None
 23296 ;; Return value:  Size  Location     Type
 23297 ;;                  1  [STACK] void 
 23298 ;; Registers used:
 23299 ;;		None
 23300 ;; Tracked objects:
 23301 ;;		On entry : 0/1
 23302 ;;		On exit  : 3F/39
 23303 ;;		Unchanged: 0/0
 23304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23309 ;;Total ram usage:        0 bytes
 23310 ;; Hardware stack levels used:    1
 23311 ;; Hardware stack levels required when called:   15
 23312 ;; This function calls:
 23313 ;;		Nothing
 23314 ;; This function is called by:
 23315 ;;		_calc_model_data
 23316 ;; This function uses a reentrant model
 23317 ;;
 23318                           
 23319                           	psect	text94
 23320  01A8EC                     __ptext94:
 23321                           	opt callstack 0
 23322  01A8EC                     _stop_bsoc:
 23323                           	opt callstack 14
 23324                           
 23325                           ;bsoc.c: 114:  PIE6bits.TMR3IE = 0;
 23326                           
 23327                           ; BSR set to: 1
 23328                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23329                           ;incstack = 0
 23330  01A8EC  0139               	movlb	57	; () banked
 23331  01A8EE  9D96               	bcf	150,6,b	;volatile
 23332                           
 23333                           ; BSR set to: 57
 23334                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 23335  01A8F0  0012               	return		;funcret
 23336  01A8F2                     __end_of_stop_bsoc:
 23337                           	opt callstack 0
 23338                           
 23339 ;; *************** function _start_bsoc *****************
 23340 ;; Defined at:
 23341 ;;		line 102 in file "bsoc.c"
 23342 ;; Parameters:    Size  Location     Type
 23343 ;;		None
 23344 ;; Auto vars:     Size  Location     Type
 23345 ;;		None
 23346 ;; Return value:  Size  Location     Type
 23347 ;;                  1  [STACK] void 
 23348 ;; Registers used:
 23349 ;;		wreg, status,2, status,0, btemp+11
 23350 ;; Tracked objects:
 23351 ;;		On entry : 3C/2
 23352 ;;		On exit  : 3F/39
 23353 ;;		Unchanged: 0/0
 23354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23359 ;;Total ram usage:        0 bytes
 23360 ;; Hardware stack levels used:    1
 23361 ;; Hardware stack levels required when called:   15
 23362 ;; This function calls:
 23363 ;;		Nothing
 23364 ;; This function is called by:
 23365 ;;		_calc_model_data
 23366 ;; This function uses a reentrant model
 23367 ;;
 23368                           
 23369                           	psect	text95
 23370  01A62C                     __ptext95:
 23371                           	opt callstack 0
 23372  01A62C                     _start_bsoc:
 23373                           	opt callstack 14
 23374                           
 23375                           ;bsoc.c: 105:  PIE6bits.TMR3IE = 1;
 23376                           
 23377                           ; BSR set to: 57
 23378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23379                           ;incstack = 0
 23380  01A62C  0139               	movlb	57	; () banked
 23381  01A62E  8D96               	bsf	150,6,b	;volatile
 23382                           
 23383                           ; BSR set to: 57
 23384  01A630  A4BE               	btfss	190,2,c	;volatile
 23385  01A632  D002               	goto	u9110
 23386  01A634  0E01               	movlw	1
 23387  01A636  D001               	goto	u9116
 23388  01A638                     u9110:
 23389  01A638  0E00               	movlw	0
 23390  01A63A                     u9116:
 23391  01A63A  0AFF               	xorlw	255
 23392  01A63C  6E0C               	movwf	(btemp+11)^0,c
 23393  01A63E  460C               	rlncf	(btemp+11)^0,f,c
 23394  01A640  460C               	rlncf	(btemp+11)^0,f,c
 23395  01A642  50BE               	movf	190,w,c	;volatile
 23396  01A644  180C               	xorwf	(btemp+11)^0,w,c
 23397  01A646  0BFB               	andlw	-5
 23398  01A648  180C               	xorwf	(btemp+11)^0,w,c
 23399  01A64A  6EBE               	movwf	190,c	;volatile
 23400                           
 23401                           ; BSR set to: 57
 23402                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 23403  01A64C  0012               	return		;funcret
 23404  01A64E                     __end_of_start_bsoc:
 23405                           	opt callstack 0
 23406                           
 23407 ;; *************** function _lp_filter *****************
 23408 ;; Defined at:
 23409 ;;		line 18 in file "mbmc.c"
 23410 ;; Parameters:    Size  Location     Type
 23411 ;;  new             4  [STACK] const float 
 23412 ;;  bn              1  [STACK] const unsigned char 
 23413 ;;  slow            1  [STACK] const char 
 23414 ;; Auto vars:     Size  Location     Type
 23415 ;;  lp_speed        4  [STACK] float 
 23416 ;; Return value:  Size  Location     Type
 23417 ;;                  4  [STACK] float 
 23418 ;; Registers used:
 23419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23420 ;; Tracked objects:
 23421 ;;		On entry : 0/2
 23422 ;;		On exit  : 0/0
 23423 ;;		Unchanged: 0/0
 23424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23429 ;;Total ram usage:        0 bytes
 23430 ;; Hardware stack levels used:    1
 23431 ;; Hardware stack levels required when called:   17
 23432 ;; This function calls:
 23433 ;;		___fladd
 23434 ;;		___flmul
 23435 ;;		___flsub
 23436 ;; This function is called by:
 23437 ;;		_main
 23438 ;;		_convert_adc_data
 23439 ;;		_calc_model_data
 23440 ;; This function uses a reentrant model
 23441 ;;
 23442                           
 23443                           	psect	text96
 23444  017314                     __ptext96:
 23445                           	opt callstack 0
 23446  017314                     _lp_filter:
 23447                           	opt callstack 0
 23448                           
 23449                           ; BSR set to: 57
 23450                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23451  017314  52E6               	movf	postinc1,f,c
 23452  017316  52E6               	movf	postinc1,f,c
 23453  017318  52E6               	movf	postinc1,f,c
 23454  01731A  52E6               	movf	postinc1,f,c
 23455                           
 23456                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 23457                           ;stkvar	_bn @ sp[(-4)+-5]
 23458                           
 23459                           ;incstack = 0
 23460  01731C  0EF7               	movlw	-9
 23461  01731E  006F FF8C  F001    	movff	plusw1,btemp
 23462  017324  0E14               	movlw	20
 23463  017326  6401               	cpfsgt	btemp^0,c
 23464  017328  D011               	goto	l9655
 23465  01732A                     u8930:
 23466                           
 23467                           ;mbmc.c: 24:   return new;
 23468                           ;stkvar	_new @ sp[(-4)+-4]
 23469  01732A  0EF8               	movlw	-8
 23470  01732C  006F FF8C  F001    	movff	plusw1,btemp
 23471  017332  0EF9               	movlw	-7
 23472  017334  006F FF8C  F002    	movff	plusw1,btemp+1
 23473  01733A  0EFA               	movlw	-6
 23474  01733C  006F FF8C  F003    	movff	plusw1,btemp+2
 23475  017342  0EFB               	movlw	-5
 23476  017344  006F FF8C  F004    	movff	plusw1,btemp+3
 23477  01734A  D0BD               	goto	l1782
 23478  01734C                     l9655:
 23479                           
 23480                           ;mbmc.c: 26:  if (slow == (-1)) {
 23481                           ;stkvar	_slow @ sp[(-4)+-6]
 23482  01734C  0EF6               	movlw	-10
 23483  01734E  28E3               	incf	plusw1,w,c
 23484  017350  A4D8               	btfss	status,2,c
 23485  017352  D012               	goto	l9663
 23486                           
 23487                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 23488                           ;stkvar	_bn @ sp[(-4)+-5]
 23489  017354  0EF7               	movlw	-9
 23490  017356  50E3               	movf	plusw1,w,c
 23491  017358  0D04               	mullw	4
 23492  01735A  0E00               	movlw	low lp_filter@smooth
 23493  01735C  24F3               	addwf	243,w,c
 23494  01735E  6ED9               	movwf	fsr2l,c
 23495  017360  0E03               	movlw	high lp_filter@smooth
 23496  017362  20F4               	addwfc	prodh,w,c
 23497  017364  6EDA               	movwf	fsr2h,c
 23498  017366  0E00               	movlw	0
 23499  017368  6EDE               	movwf	postinc2,c
 23500  01736A  0E00               	movlw	0
 23501  01736C  6EDE               	movwf	postinc2,c
 23502  01736E  0E00               	movlw	0
 23503  017370  6EDE               	movwf	postinc2,c
 23504  017372  0E00               	movlw	0
 23505  017374  6EDD               	movwf	postdec2,c
 23506  017376  D7D9               	goto	u8930
 23507  017378                     l9663:
 23508                           
 23509                           ;mbmc.c: 31:  if (slow) {
 23510                           ;stkvar	_slow @ sp[(-4)+-6]
 23511  017378  0EF6               	movlw	-10
 23512  01737A  50E3               	movf	plusw1,w,c
 23513  01737C  B4D8               	btfsc	status,2,c
 23514  01737E  D006               	goto	l9667
 23515                           
 23516                           ;mbmc.c: 32:   lp_speed = 0.033;
 23517  017380  0E02               	movlw	2
 23518  017382  6E09               	movwf	(btemp+8)^0,c
 23519  017384  0E2B               	movlw	43
 23520  017386  6E0A               	movwf	(btemp+9)^0,c
 23521  017388  0E07               	movlw	7
 23522  01738A  D005               	goto	L26
 23523  01738C                     l9667:
 23524                           
 23525                           ;mbmc.c: 34:   lp_speed = 0.066;
 23526  01738C  0E02               	movlw	2
 23527  01738E  6E09               	movwf	(btemp+8)^0,c
 23528  017390  0E2B               	movlw	43
 23529  017392  6E0A               	movwf	(btemp+9)^0,c
 23530  017394  0E87               	movlw	135
 23531  017396                     L26:
 23532  017396  6E0B               	movwf	(btemp+10)^0,c
 23533  017398  0E3D               	movlw	61
 23534  01739A  6E0C               	movwf	(btemp+11)^0,c
 23535                           
 23536                           ;stkvar	_lp_speed @ sp[(-4)+0]
 23537  01739C  0EFC               	movlw	-4
 23538  01739E  0060  F027  FFE3   	movff	btemp+8,plusw1
 23539  0173A4  0EFD               	movlw	-3
 23540  0173A6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23541  0173AC  0EFE               	movlw	-2
 23542  0173AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23543  0173B4  0EFF               	movlw	-1
 23544  0173B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 23545                           
 23546                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 23547                           ;stkvar	_bn @ sp[(-4)+-5]
 23548  0173BC  0EF7               	movlw	-9
 23549  0173BE  50E3               	movf	plusw1,w,c
 23550  0173C0  0D04               	mullw	4
 23551  0173C2  0E00               	movlw	low lp_filter@smooth
 23552  0173C4  24F3               	addwf	243,w,c
 23553  0173C6  6ED9               	movwf	fsr2l,c
 23554  0173C8  0E03               	movlw	high lp_filter@smooth
 23555  0173CA  20F4               	addwfc	prodh,w,c
 23556  0173CC  6EDA               	movwf	fsr2h,c
 23557  0173CE  006F FF7B FFE6     	movff	postinc2,postinc1
 23558  0173D4  006F FF7B FFE6     	movff	postinc2,postinc1
 23559  0173DA  006F FF7B FFE6     	movff	postinc2,postinc1
 23560  0173E0  006F FF7B FFE6     	movff	postinc2,postinc1
 23561                           
 23562                           ;stkvar	_lp_speed @ sp[(-8)+0]
 23563  0173E6  0EF8               	movlw	-8
 23564  0173E8  006F FF8F FFE6     	movff	plusw1,postinc1
 23565  0173EE  006F FF8F FFE6     	movff	plusw1,postinc1
 23566  0173F4  006F FF8F FFE6     	movff	plusw1,postinc1
 23567  0173FA  006F FF8F FFE6     	movff	plusw1,postinc1
 23568                           
 23569                           ;stkvar	_bn @ sp[(-12)+-5]
 23570  017400  0EEF               	movlw	-17
 23571  017402  50E3               	movf	plusw1,w,c
 23572  017404  0D04               	mullw	4
 23573  017406  0E00               	movlw	low lp_filter@smooth
 23574  017408  24F3               	addwf	243,w,c
 23575  01740A  6ED9               	movwf	fsr2l,c
 23576  01740C  0E03               	movlw	high lp_filter@smooth
 23577  01740E  20F4               	addwfc	prodh,w,c
 23578  017410  6EDA               	movwf	fsr2h,c
 23579  017412  006F FF7B FFE6     	movff	postinc2,postinc1
 23580  017418  006F FF7B FFE6     	movff	postinc2,postinc1
 23581  01741E  006F FF7B FFE6     	movff	postinc2,postinc1
 23582  017424  006F FF7B FFE6     	movff	postinc2,postinc1
 23583                           
 23584                           ;stkvar	_new @ sp[(-16)+-4]
 23585  01742A  0EEC               	movlw	-20
 23586  01742C  006F FF8F FFE6     	movff	plusw1,postinc1
 23587  017432  006F FF8F FFE6     	movff	plusw1,postinc1
 23588  017438  006F FF8F FFE6     	movff	plusw1,postinc1
 23589  01743E  006F FF8F FFE6     	movff	plusw1,postinc1
 23590  017444  EC51  F0CE         	call	___flsub	;wreg free
 23591  017448  0060  F007  FFE6   	movff	btemp,postinc1
 23592  01744E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23593  017454  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23594  01745A  0060  F013  FFE6   	movff	btemp+3,postinc1
 23595  017460  EC53  F095         	call	___flmul	;wreg free
 23596  017464  0060  F007  FFE6   	movff	btemp,postinc1
 23597  01746A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23598  017470  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23599  017476  0060  F013  FFE6   	movff	btemp+3,postinc1
 23600  01747C  EC68  F099         	call	___fladd	;wreg free
 23601                           
 23602                           ;stkvar	_bn @ sp[(-4)+-5]
 23603  017480  0EF7               	movlw	-9
 23604  017482  50E3               	movf	plusw1,w,c
 23605  017484  0D04               	mullw	4
 23606  017486  0E00               	movlw	low lp_filter@smooth
 23607  017488  24F3               	addwf	243,w,c
 23608  01748A  6ED9               	movwf	fsr2l,c
 23609  01748C  0E03               	movlw	high lp_filter@smooth
 23610  01748E  20F4               	addwfc	prodh,w,c
 23611  017490  6EDA               	movwf	fsr2h,c
 23612  017492  0060  F007  FFDE   	movff	btemp,postinc2
 23613  017498  0060  F00B  FFDE   	movff	btemp+1,postinc2
 23614  01749E  0060  F00F  FFDE   	movff	btemp+2,postinc2
 23615  0174A4  0060  F013  FFDD   	movff	btemp+3,postdec2
 23616  0174AA  52DD               	movf	postdec2,f,c
 23617  0174AC  52DD               	movf	postdec2,f,c
 23618  0174AE  006F FF78  F001    	movff	postinc2,btemp
 23619  0174B4  006F FF78  F002    	movff	postinc2,btemp+1
 23620  0174BA  006F FF78  F003    	movff	postinc2,btemp+2
 23621  0174C0  006F FF78  F004    	movff	postinc2,btemp+3
 23622  0174C6                     l1782:
 23623                           
 23624                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 23625  0174C6  0EF6               	movlw	246
 23626  0174C8  26E1               	addwf	fsr1l,f,c
 23627  0174CA  0EFF               	movlw	255
 23628  0174CC  22E2               	addwfc	fsr1h,f,c
 23629  0174CE  0012               	return		;funcret
 23630  0174D0                     __end_of_lp_filter:
 23631                           	opt callstack 0
 23632                           
 23633 ;; *************** function ___flsub *****************
 23634 ;; Defined at:
 23635 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 23636 ;; Parameters:    Size  Location     Type
 23637 ;;  b               4  [STACK] float 
 23638 ;;  a               4  [STACK] float 
 23639 ;; Auto vars:     Size  Location     Type
 23640 ;;		None
 23641 ;; Return value:  Size  Location     Type
 23642 ;;                  4  [STACK] float 
 23643 ;; Registers used:
 23644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23645 ;; Tracked objects:
 23646 ;;		On entry : 0/1
 23647 ;;		On exit  : 0/0
 23648 ;;		Unchanged: 0/0
 23649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23654 ;;Total ram usage:        0 bytes
 23655 ;; Hardware stack levels used:    1
 23656 ;; Hardware stack levels required when called:   16
 23657 ;; This function calls:
 23658 ;;		___fladd
 23659 ;; This function is called by:
 23660 ;;		_conv_raw_result
 23661 ;;		_lp_filter
 23662 ;;		_calc_model_data
 23663 ;;		_efgtoa
 23664 ;; This function uses a reentrant model
 23665 ;;
 23666                           
 23667                           	psect	text97
 23668  019CA2                     __ptext97:
 23669                           	opt callstack 0
 23670  019CA2                     ___flsub:
 23671                           	opt callstack 0
 23672                           
 23673                           ;stkvar	_a @ sp[(0)+-8]
 23674                           
 23675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23676                           ;incstack = 0
 23677 ;; hardware stack exceeded
 23678  019CA2  0EFB               	movlw	-5
 23679  019CA4  7EE3               	btg	plusw1,7,c
 23680                           
 23681                           ;stkvar	_a @ sp[(0)+-8]
 23682  019CA6  0EF8               	movlw	-8
 23683  019CA8  006F FF8F FFE6     	movff	plusw1,postinc1
 23684  019CAE  006F FF8F FFE6     	movff	plusw1,postinc1
 23685  019CB4  006F FF8F FFE6     	movff	plusw1,postinc1
 23686  019CBA  006F FF8F FFE6     	movff	plusw1,postinc1
 23687                           
 23688                           ;stkvar	_b @ sp[(-4)+-4]
 23689  019CC0  0EF8               	movlw	-8
 23690  019CC2  006F FF8F FFE6     	movff	plusw1,postinc1
 23691  019CC8  006F FF8F FFE6     	movff	plusw1,postinc1
 23692  019CCE  006F FF8F FFE6     	movff	plusw1,postinc1
 23693  019CD4  006F FF8F FFE6     	movff	plusw1,postinc1
 23694  019CDA  EC68  F099         	call	___fladd	;wreg free
 23695                           
 23696                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 23697  019CDE  0EF8               	movlw	248
 23698  019CE0  26E1               	addwf	fsr1l,f,c
 23699  019CE2  0EFF               	movlw	255
 23700  019CE4  22E2               	addwfc	fsr1h,f,c
 23701  019CE6  0012               	return		;funcret
 23702  019CE8                     __end_of___flsub:
 23703                           	opt callstack 0
 23704                           
 23705 ;; *************** function ___fladd *****************
 23706 ;; Defined at:
 23707 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 23708 ;; Parameters:    Size  Location     Type
 23709 ;;  b               4  [STACK] float 
 23710 ;;  a               4  [STACK] float 
 23711 ;; Auto vars:     Size  Location     Type
 23712 ;;  grs             1  [STACK] unsigned char 
 23713 ;;  bexp            1  [STACK] unsigned char 
 23714 ;;  aexp            1  [STACK] unsigned char 
 23715 ;;  signs           1  [STACK] unsigned char 
 23716 ;; Return value:  Size  Location     Type
 23717 ;;                  4  [STACK] unsigned char 
 23718 ;; Registers used:
 23719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23720 ;; Tracked objects:
 23721 ;;		On entry : 0/0
 23722 ;;		On exit  : 0/0
 23723 ;;		Unchanged: 0/0
 23724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23729 ;;Total ram usage:        0 bytes
 23730 ;; Hardware stack levels used:    1
 23731 ;; Hardware stack levels required when called:   15
 23732 ;; This function calls:
 23733 ;;		Nothing
 23734 ;; This function is called by:
 23735 ;;		_lp_filter
 23736 ;;		_calc_model_data
 23737 ;;		_calc_bsoc
 23738 ;;		_efgtoa
 23739 ;;		___flsub
 23740 ;; This function uses a reentrant model
 23741 ;;
 23742                           
 23743                           	psect	text98
 23744  0132D0                     __ptext98:
 23745                           	opt callstack 0
 23746  0132D0                     ___fladd:
 23747                           	opt callstack 0
 23748                           
 23749                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23750  0132D0  52E6               	movf	postinc1,f,c
 23751  0132D2  52E6               	movf	postinc1,f,c
 23752  0132D4  52E6               	movf	postinc1,f,c
 23753  0132D6  52E6               	movf	postinc1,f,c
 23754                           
 23755                           ;stkvar	_b @ sp[(-4)+-4]
 23756                           
 23757                           ;incstack = 0
 23758 ;; hardware stack exceeded
 23759  0132D8  0EFB               	movlw	251
 23760  0132DA  24E1               	addwf	fsr1l,w,c
 23761  0132DC  6ED9               	movwf	fsr2l,c
 23762  0132DE  0EFF               	movlw	255
 23763  0132E0  20E2               	addwfc	fsr1h,w,c
 23764  0132E2  6EDA               	movwf	fsr2h,c
 23765  0132E4  50DF               	movf	indf2,w,c
 23766  0132E6  6E0C               	movwf	(btemp+11)^0,c
 23767  0132E8  0E80               	movlw	128
 23768  0132EA  160C               	andwf	(btemp+11)^0,f,c
 23769                           
 23770                           ;stkvar	_signs @ sp[(-4)+3]
 23771  0132EC  0EFF               	movlw	-1
 23772  0132EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 23773                           
 23774                           ;stkvar	_b @ sp[(-4)+-4]
 23775  0132F4  0EFB               	movlw	251
 23776  0132F6  24E1               	addwf	fsr1l,w,c
 23777  0132F8  6ED9               	movwf	fsr2l,c
 23778  0132FA  0EFF               	movlw	255
 23779  0132FC  20E2               	addwfc	fsr1h,w,c
 23780  0132FE  6EDA               	movwf	fsr2h,c
 23781  013300  50DF               	movf	indf2,w,c
 23782  013302  6E0C               	movwf	(btemp+11)^0,c
 23783  013304  90D8               	bcf	status,0,c
 23784  013306  340C               	rlcf	(btemp+11)^0,w,c
 23785  013308  6E0B               	movwf	(btemp+10)^0,c
 23786                           
 23787                           ;stkvar	_bexp @ sp[(-4)+1]
 23788  01330A  0EFD               	movlw	-3
 23789  01330C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23790                           
 23791                           ;stkvar	_b @ sp[(-4)+-4]
 23792  013312  0EFA               	movlw	250
 23793  013314  24E1               	addwf	fsr1l,w,c
 23794  013316  6ED9               	movwf	fsr2l,c
 23795  013318  0EFF               	movlw	255
 23796  01331A  20E2               	addwfc	fsr1h,w,c
 23797  01331C  6EDA               	movwf	fsr2h,c
 23798  01331E  AEDF               	btfss	indf2,7,c
 23799  013320  D002               	goto	l7119
 23800                           
 23801                           ;stkvar	_bexp @ sp[(-4)+1]
 23802  013322  0EFD               	movlw	-3
 23803  013324  80E3               	bsf	plusw1,0,c
 23804  013326                     l7119:
 23805                           
 23806                           ;stkvar	_bexp @ sp[(-4)+1]
 23807  013326  0EFD               	movlw	-3
 23808  013328  50E3               	movf	plusw1,w,c
 23809  01332A  B4D8               	btfsc	status,2,c
 23810  01332C  D027               	goto	l7129
 23811                           
 23812                           ;stkvar	_bexp @ sp[(-4)+1]
 23813  01332E  0EFD               	movlw	-3
 23814  013330  28E3               	incf	plusw1,w,c
 23815  013332  A4D8               	btfss	status,2,c
 23816  013334  D018               	goto	l7125
 23817  013336  0E00               	movlw	0
 23818  013338  6E09               	movwf	(btemp+8)^0,c
 23819  01333A  0E00               	movlw	0
 23820  01333C  6E0A               	movwf	(btemp+9)^0,c
 23821  01333E  0E00               	movlw	0
 23822  013340  6E0B               	movwf	(btemp+10)^0,c
 23823  013342  0E00               	movlw	0
 23824  013344  6E0C               	movwf	(btemp+11)^0,c
 23825                           
 23826                           ;stkvar	_b @ sp[(-4)+-4]
 23827  013346  0EF8               	movlw	-8
 23828  013348  0060  F027  FFE3   	movff	btemp+8,plusw1
 23829  01334E  0EF9               	movlw	-7
 23830  013350  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23831  013356  0EFA               	movlw	-6
 23832  013358  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23833  01335E  0EFB               	movlw	-5
 23834  013360  0060  F033  FFE3   	movff	btemp+11,plusw1
 23835  013366                     l7125:
 23836                           
 23837                           ;stkvar	_b @ sp[(-4)+-4]
 23838  013366  0EFA               	movlw	-6
 23839  013368  8EE3               	bsf	plusw1,7,c
 23840                           
 23841                           ;stkvar	_b @ sp[(-4)+-4]
 23842  01336A  0EFB               	movlw	251
 23843  01336C  24E1               	addwf	fsr1l,w,c
 23844  01336E  6ED9               	movwf	fsr2l,c
 23845  013370  0EFF               	movlw	255
 23846  013372  20E2               	addwfc	fsr1h,w,c
 23847  013374  6EDA               	movwf	fsr2h,c
 23848  013376  0E00               	movlw	0
 23849  013378  6EDF               	movwf	indf2,c
 23850  01337A  D018               	goto	l7131
 23851  01337C                     l7129:
 23852  01337C  0E00               	movlw	0
 23853  01337E  6E09               	movwf	(btemp+8)^0,c
 23854  013380  0E00               	movlw	0
 23855  013382  6E0A               	movwf	(btemp+9)^0,c
 23856  013384  0E00               	movlw	0
 23857  013386  6E0B               	movwf	(btemp+10)^0,c
 23858  013388  0E00               	movlw	0
 23859  01338A  6E0C               	movwf	(btemp+11)^0,c
 23860                           
 23861                           ;stkvar	_b @ sp[(-4)+-4]
 23862  01338C  0EF8               	movlw	-8
 23863  01338E  0060  F027  FFE3   	movff	btemp+8,plusw1
 23864  013394  0EF9               	movlw	-7
 23865  013396  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23866  01339C  0EFA               	movlw	-6
 23867  01339E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23868  0133A4  0EFB               	movlw	-5
 23869  0133A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 23870  0133AC                     l7131:
 23871                           
 23872                           ;stkvar	_a @ sp[(-4)+-8]
 23873  0133AC  0EF7               	movlw	247
 23874  0133AE  24E1               	addwf	fsr1l,w,c
 23875  0133B0  6ED9               	movwf	fsr2l,c
 23876  0133B2  0EFF               	movlw	255
 23877  0133B4  20E2               	addwfc	fsr1h,w,c
 23878  0133B6  6EDA               	movwf	fsr2h,c
 23879  0133B8  50DF               	movf	indf2,w,c
 23880  0133BA  6E0C               	movwf	(btemp+11)^0,c
 23881  0133BC  0E80               	movlw	128
 23882  0133BE  160C               	andwf	(btemp+11)^0,f,c
 23883                           
 23884                           ;stkvar	_aexp @ sp[(-4)+2]
 23885  0133C0  0EFE               	movlw	-2
 23886  0133C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 23887                           
 23888                           ;stkvar	_signs @ sp[(-4)+3]
 23889                           ;stkvar	_aexp @ sp[(-4)+2]
 23890  0133C8  50E1               	movf	fsr1l,w,c
 23891  0133CA  0FFE               	addlw	-2
 23892  0133CC  6ED9               	movwf	fsr2l,c
 23893  0133CE  50E2               	movf	fsr1h,w,c
 23894  0133D0  6EDA               	movwf	fsr2h,c
 23895  0133D2  0EFF               	movlw	255
 23896  0133D4  22DA               	addwfc	fsr2h,f,c
 23897  0133D6  0EFF               	movlw	-1
 23898  0133D8  50E3               	movf	plusw1,w,c
 23899  0133DA  18DE               	xorwf	postinc2,w,c
 23900  0133DC  B4D8               	btfsc	status,2,c
 23901  0133DE  D002               	goto	l7137
 23902                           
 23903                           ;stkvar	_signs @ sp[(-4)+3]
 23904  0133E0  0EFF               	movlw	-1
 23905  0133E2  8CE3               	bsf	plusw1,6,c
 23906  0133E4                     l7137:
 23907                           
 23908                           ;stkvar	_a @ sp[(-4)+-8]
 23909  0133E4  0EF7               	movlw	247
 23910  0133E6  24E1               	addwf	fsr1l,w,c
 23911  0133E8  6ED9               	movwf	fsr2l,c
 23912  0133EA  0EFF               	movlw	255
 23913  0133EC  20E2               	addwfc	fsr1h,w,c
 23914  0133EE  6EDA               	movwf	fsr2h,c
 23915  0133F0  50DF               	movf	indf2,w,c
 23916  0133F2  6E0C               	movwf	(btemp+11)^0,c
 23917  0133F4  90D8               	bcf	status,0,c
 23918  0133F6  340C               	rlcf	(btemp+11)^0,w,c
 23919  0133F8  6E0B               	movwf	(btemp+10)^0,c
 23920                           
 23921                           ;stkvar	_aexp @ sp[(-4)+2]
 23922  0133FA  0EFE               	movlw	-2
 23923  0133FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23924                           
 23925                           ;stkvar	_a @ sp[(-4)+-8]
 23926  013402  0EF6               	movlw	246
 23927  013404  24E1               	addwf	fsr1l,w,c
 23928  013406  6ED9               	movwf	fsr2l,c
 23929  013408  0EFF               	movlw	255
 23930  01340A  20E2               	addwfc	fsr1h,w,c
 23931  01340C  6EDA               	movwf	fsr2h,c
 23932  01340E  AEDF               	btfss	indf2,7,c
 23933  013410  D002               	goto	l7143
 23934                           
 23935                           ;stkvar	_aexp @ sp[(-4)+2]
 23936  013412  0EFE               	movlw	-2
 23937  013414  80E3               	bsf	plusw1,0,c
 23938  013416                     l7143:
 23939                           
 23940                           ;stkvar	_aexp @ sp[(-4)+2]
 23941  013416  0EFE               	movlw	-2
 23942  013418  50E3               	movf	plusw1,w,c
 23943  01341A  B4D8               	btfsc	status,2,c
 23944  01341C  D027               	goto	l7153
 23945                           
 23946                           ;stkvar	_aexp @ sp[(-4)+2]
 23947  01341E  0EFE               	movlw	-2
 23948  013420  28E3               	incf	plusw1,w,c
 23949  013422  A4D8               	btfss	status,2,c
 23950  013424  D018               	goto	l7149
 23951  013426  0E00               	movlw	0
 23952  013428  6E09               	movwf	(btemp+8)^0,c
 23953  01342A  0E00               	movlw	0
 23954  01342C  6E0A               	movwf	(btemp+9)^0,c
 23955  01342E  0E00               	movlw	0
 23956  013430  6E0B               	movwf	(btemp+10)^0,c
 23957  013432  0E00               	movlw	0
 23958  013434  6E0C               	movwf	(btemp+11)^0,c
 23959                           
 23960                           ;stkvar	_a @ sp[(-4)+-8]
 23961  013436  0EF4               	movlw	-12
 23962  013438  0060  F027  FFE3   	movff	btemp+8,plusw1
 23963  01343E  0EF5               	movlw	-11
 23964  013440  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23965  013446  0EF6               	movlw	-10
 23966  013448  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23967  01344E  0EF7               	movlw	-9
 23968  013450  0060  F033  FFE3   	movff	btemp+11,plusw1
 23969  013456                     l7149:
 23970                           
 23971                           ;stkvar	_a @ sp[(-4)+-8]
 23972  013456  0EF6               	movlw	-10
 23973  013458  8EE3               	bsf	plusw1,7,c
 23974                           
 23975                           ;stkvar	_a @ sp[(-4)+-8]
 23976  01345A  0EF7               	movlw	247
 23977  01345C  24E1               	addwf	fsr1l,w,c
 23978  01345E  6ED9               	movwf	fsr2l,c
 23979  013460  0EFF               	movlw	255
 23980  013462  20E2               	addwfc	fsr1h,w,c
 23981  013464  6EDA               	movwf	fsr2h,c
 23982  013466  0E00               	movlw	0
 23983  013468  6EDF               	movwf	indf2,c
 23984  01346A  D018               	goto	l7155
 23985  01346C                     l7153:
 23986  01346C  0E00               	movlw	0
 23987  01346E  6E09               	movwf	(btemp+8)^0,c
 23988  013470  0E00               	movlw	0
 23989  013472  6E0A               	movwf	(btemp+9)^0,c
 23990  013474  0E00               	movlw	0
 23991  013476  6E0B               	movwf	(btemp+10)^0,c
 23992  013478  0E00               	movlw	0
 23993  01347A  6E0C               	movwf	(btemp+11)^0,c
 23994                           
 23995                           ;stkvar	_a @ sp[(-4)+-8]
 23996  01347C  0EF4               	movlw	-12
 23997  01347E  0060  F027  FFE3   	movff	btemp+8,plusw1
 23998  013484  0EF5               	movlw	-11
 23999  013486  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24000  01348C  0EF6               	movlw	-10
 24001  01348E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24002  013494  0EF7               	movlw	-9
 24003  013496  0060  F033  FFE3   	movff	btemp+11,plusw1
 24004  01349C                     l7155:
 24005                           
 24006                           ;stkvar	_bexp @ sp[(-4)+1]
 24007                           ;stkvar	_aexp @ sp[(-4)+2]
 24008  01349C  50E1               	movf	fsr1l,w,c
 24009  01349E  0FFE               	addlw	-2
 24010  0134A0  6ED9               	movwf	fsr2l,c
 24011  0134A2  50E2               	movf	fsr1h,w,c
 24012  0134A4  6EDA               	movwf	fsr2h,c
 24013  0134A6  0EFF               	movlw	255
 24014  0134A8  22DA               	addwfc	fsr2h,f,c
 24015  0134AA  0EFD               	movlw	-3
 24016  0134AC  50E3               	movf	plusw1,w,c
 24017  0134AE  5CDE               	subwf	postinc2,w,c
 24018  0134B0  B0D8               	btfsc	status,0,c
 24019  0134B2  D0A4               	goto	l7191
 24020                           
 24021                           ;stkvar	_signs @ sp[(-4)+3]
 24022  0134B4  0EFF               	movlw	-1
 24023  0134B6  ACE3               	btfss	plusw1,6,c
 24024  0134B8  D002               	goto	l7161
 24025                           
 24026                           ;stkvar	_signs @ sp[(-4)+3]
 24027  0134BA  0EFF               	movlw	-1
 24028  0134BC  7EE3               	btg	plusw1,7,c
 24029  0134BE                     l7161:
 24030                           
 24031                           ;stkvar	_bexp @ sp[(-4)+1]
 24032                           ;stkvar	_grs @ sp[(-4)+0]
 24033  0134BE  0EFD               	movlw	-3
 24034  0134C0  006F FF8C  F001    	movff	plusw1,btemp
 24035  0134C6  0EFC               	movlw	-4
 24036  0134C8  0060  F007  FFE3   	movff	btemp,plusw1
 24037                           
 24038                           ;stkvar	_aexp @ sp[(-4)+2]
 24039                           ;stkvar	_bexp @ sp[(-4)+1]
 24040  0134CE  0EFE               	movlw	-2
 24041  0134D0  006F FF8C  F001    	movff	plusw1,btemp
 24042  0134D6  0EFD               	movlw	-3
 24043  0134D8  0060  F007  FFE3   	movff	btemp,plusw1
 24044                           
 24045                           ;stkvar	_grs @ sp[(-4)+0]
 24046                           ;stkvar	_aexp @ sp[(-4)+2]
 24047  0134DE  0EFC               	movlw	-4
 24048  0134E0  006F FF8C  F001    	movff	plusw1,btemp
 24049  0134E6  0EFE               	movlw	-2
 24050  0134E8  0060  F007  FFE3   	movff	btemp,plusw1
 24051                           
 24052                           ;stkvar	_b @ sp[(-4)+-4]
 24053                           ;stkvar	_grs @ sp[(-4)+0]
 24054  0134EE  0EF8               	movlw	-8
 24055  0134F0  006F FF8C  F001    	movff	plusw1,btemp
 24056  0134F6  0EFC               	movlw	-4
 24057  0134F8  0060  F007  FFE3   	movff	btemp,plusw1
 24058                           
 24059                           ;stkvar	_a @ sp[(-4)+-8]
 24060                           ;stkvar	_b @ sp[(-4)+-4]
 24061  0134FE  0EF4               	movlw	-12
 24062  013500  006F FF8C  F001    	movff	plusw1,btemp
 24063  013506  0EF8               	movlw	-8
 24064  013508  0060  F007  FFE3   	movff	btemp,plusw1
 24065                           
 24066                           ;stkvar	_grs @ sp[(-4)+0]
 24067                           ;stkvar	_a @ sp[(-4)+-8]
 24068  01350E  0EFC               	movlw	-4
 24069  013510  006F FF8C  F001    	movff	plusw1,btemp
 24070  013516  0EF4               	movlw	-12
 24071  013518  0060  F007  FFE3   	movff	btemp,plusw1
 24072                           
 24073                           ;stkvar	_b @ sp[(-4)+-4]
 24074  01351E  0EF9               	movlw	249
 24075  013520  24E1               	addwf	fsr1l,w,c
 24076  013522  6ED9               	movwf	fsr2l,c
 24077  013524  0EFF               	movlw	255
 24078  013526  20E2               	addwfc	fsr1h,w,c
 24079  013528  6EDA               	movwf	fsr2h,c
 24080  01352A  50DF               	movf	indf2,w,c
 24081  01352C  6E0C               	movwf	(btemp+11)^0,c
 24082                           
 24083                           ;stkvar	_grs @ sp[(-4)+0]
 24084  01352E  0EFC               	movlw	-4
 24085  013530  0060  F033  FFE3   	movff	btemp+11,plusw1
 24086                           
 24087                           ;stkvar	_a @ sp[(-4)+-8]
 24088  013536  0EF5               	movlw	245
 24089  013538  24E1               	addwf	fsr1l,w,c
 24090  01353A  6ED9               	movwf	fsr2l,c
 24091  01353C  0EFF               	movlw	255
 24092  01353E  20E2               	addwfc	fsr1h,w,c
 24093  013540  6EDA               	movwf	fsr2h,c
 24094                           
 24095                           ;stkvar	_b @ sp[(-4)+-4]
 24096  013542  0EF9               	movlw	249
 24097  013544  24E1               	addwf	fsr1l,w,c
 24098  013546  6EE9               	movwf	fsr0l,c
 24099  013548  0EFF               	movlw	255
 24100  01354A  20E2               	addwfc	fsr1h,w,c
 24101  01354C  6EEA               	movwf	fsr0h,c
 24102  01354E  006F FF7F FFEF     	movff	indf2,indf0
 24103                           
 24104                           ;stkvar	_grs @ sp[(-4)+0]
 24105                           ;stkvar	_a @ sp[(-4)+-8]
 24106  013554  0EF5               	movlw	245
 24107  013556  24E1               	addwf	fsr1l,w,c
 24108  013558  6ED9               	movwf	fsr2l,c
 24109  01355A  0EFF               	movlw	255
 24110  01355C  20E2               	addwfc	fsr1h,w,c
 24111  01355E  6EDA               	movwf	fsr2h,c
 24112  013560  0EFC               	movlw	-4
 24113  013562  006F FF8F FFDF     	movff	plusw1,indf2
 24114                           
 24115                           ;stkvar	_b @ sp[(-4)+-4]
 24116  013568  0EFA               	movlw	250
 24117  01356A  24E1               	addwf	fsr1l,w,c
 24118  01356C  6ED9               	movwf	fsr2l,c
 24119  01356E  0EFF               	movlw	255
 24120  013570  20E2               	addwfc	fsr1h,w,c
 24121  013572  6EDA               	movwf	fsr2h,c
 24122  013574  50DF               	movf	indf2,w,c
 24123  013576  6E0C               	movwf	(btemp+11)^0,c
 24124                           
 24125                           ;stkvar	_grs @ sp[(-4)+0]
 24126  013578  0EFC               	movlw	-4
 24127  01357A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24128                           
 24129                           ;stkvar	_a @ sp[(-4)+-8]
 24130  013580  0EF6               	movlw	246
 24131  013582  24E1               	addwf	fsr1l,w,c
 24132  013584  6ED9               	movwf	fsr2l,c
 24133  013586  0EFF               	movlw	255
 24134  013588  20E2               	addwfc	fsr1h,w,c
 24135  01358A  6EDA               	movwf	fsr2h,c
 24136                           
 24137                           ;stkvar	_b @ sp[(-4)+-4]
 24138  01358C  0EFA               	movlw	250
 24139  01358E  24E1               	addwf	fsr1l,w,c
 24140  013590  6EE9               	movwf	fsr0l,c
 24141  013592  0EFF               	movlw	255
 24142  013594  20E2               	addwfc	fsr1h,w,c
 24143  013596  6EEA               	movwf	fsr0h,c
 24144  013598  006F FF7F FFEF     	movff	indf2,indf0
 24145                           
 24146                           ;stkvar	_grs @ sp[(-4)+0]
 24147                           ;stkvar	_a @ sp[(-4)+-8]
 24148  01359E  0EF6               	movlw	246
 24149  0135A0  24E1               	addwf	fsr1l,w,c
 24150  0135A2  6ED9               	movwf	fsr2l,c
 24151  0135A4  0EFF               	movlw	255
 24152  0135A6  20E2               	addwfc	fsr1h,w,c
 24153  0135A8  6EDA               	movwf	fsr2h,c
 24154  0135AA  0EFC               	movlw	-4
 24155  0135AC  006F FF8F FFDF     	movff	plusw1,indf2
 24156                           
 24157                           ;stkvar	_b @ sp[(-4)+-4]
 24158  0135B2  0EFB               	movlw	251
 24159  0135B4  24E1               	addwf	fsr1l,w,c
 24160  0135B6  6ED9               	movwf	fsr2l,c
 24161  0135B8  0EFF               	movlw	255
 24162  0135BA  20E2               	addwfc	fsr1h,w,c
 24163  0135BC  6EDA               	movwf	fsr2h,c
 24164  0135BE  50DF               	movf	indf2,w,c
 24165  0135C0  6E0C               	movwf	(btemp+11)^0,c
 24166                           
 24167                           ;stkvar	_grs @ sp[(-4)+0]
 24168  0135C2  0EFC               	movlw	-4
 24169  0135C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24170                           
 24171                           ;stkvar	_a @ sp[(-4)+-8]
 24172  0135CA  0EF7               	movlw	247
 24173  0135CC  24E1               	addwf	fsr1l,w,c
 24174  0135CE  6ED9               	movwf	fsr2l,c
 24175  0135D0  0EFF               	movlw	255
 24176  0135D2  20E2               	addwfc	fsr1h,w,c
 24177  0135D4  6EDA               	movwf	fsr2h,c
 24178                           
 24179                           ;stkvar	_b @ sp[(-4)+-4]
 24180  0135D6  0EFB               	movlw	251
 24181  0135D8  24E1               	addwf	fsr1l,w,c
 24182  0135DA  6EE9               	movwf	fsr0l,c
 24183  0135DC  0EFF               	movlw	255
 24184  0135DE  20E2               	addwfc	fsr1h,w,c
 24185  0135E0  6EEA               	movwf	fsr0h,c
 24186  0135E2  006F FF7F FFEF     	movff	indf2,indf0
 24187                           
 24188                           ;stkvar	_grs @ sp[(-4)+0]
 24189                           ;stkvar	_a @ sp[(-4)+-8]
 24190  0135E8  0EF7               	movlw	247
 24191  0135EA  24E1               	addwf	fsr1l,w,c
 24192  0135EC  6ED9               	movwf	fsr2l,c
 24193  0135EE  0EFF               	movlw	255
 24194  0135F0  20E2               	addwfc	fsr1h,w,c
 24195  0135F2  6EDA               	movwf	fsr2h,c
 24196  0135F4  0EFC               	movlw	-4
 24197  0135F6  006F FF8F FFDF     	movff	plusw1,indf2
 24198  0135FC                     l7191:
 24199                           
 24200                           ;stkvar	_grs @ sp[(-4)+0]
 24201  0135FC  0EFC               	movlw	-4
 24202  0135FE  6AE3               	clrf	plusw1,c
 24203                           
 24204                           ;stkvar	_aexp @ sp[(-4)+2]
 24205  013600  0EFE               	movlw	-2
 24206  013602  50E3               	movf	plusw1,w,c
 24207  013604  6E0B               	movwf	(btemp+10)^0,c
 24208  013606  6A0C               	clrf	(btemp+11)^0,c
 24209                           
 24210                           ;stkvar	_bexp @ sp[(-4)+1]
 24211  013608  0EFD               	movlw	-3
 24212  01360A  50E3               	movf	plusw1,w,c
 24213  01360C  5E0B               	subwf	(btemp+10)^0,f,c
 24214  01360E  0E00               	movlw	0
 24215  013610  5A0C               	subwfb	(btemp+11)^0,f,c
 24216  013612  BE0C               	btfsc	(btemp+11)^0,7,c
 24217  013614  D062               	goto	l7215
 24218  013616  500C               	movf	(btemp+11)^0,w,c
 24219  013618  E104               	bnz	u5180
 24220  01361A  0E1A               	movlw	26
 24221  01361C  5C0B               	subwf	(btemp+10)^0,w,c
 24222  01361E  A0D8               	btfss	status,0,c
 24223  013620  D05C               	goto	l7215
 24224  013622                     u5180:
 24225                           
 24226                           ;stkvar	_b @ sp[(-4)+-4]
 24227  013622  0EF8               	movlw	-8
 24228  013624  50E3               	movf	plusw1,w,c
 24229  013626  E10A               	bnz	u5191
 24230  013628  0EF9               	movlw	-7
 24231  01362A  50E3               	movf	plusw1,w,c
 24232  01362C  E107               	bnz	u5191
 24233  01362E  0EFA               	movlw	-6
 24234  013630  50E3               	movf	plusw1,w,c
 24235  013632  E104               	bnz	u5191
 24236  013634  0EFB               	movlw	-5
 24237  013636  50E3               	movf	plusw1,w,c
 24238  013638  B4D8               	btfsc	status,2,c
 24239  01363A  D003               	goto	u5190
 24240  01363C                     u5191:
 24241  01363C  6A0C               	clrf	(btemp+11)^0,c
 24242  01363E  2A0C               	incf	(btemp+11)^0,f,c
 24243  013640  D001               	goto	u5208
 24244  013642                     u5190:
 24245  013642  6A0C               	clrf	(btemp+11)^0,c
 24246  013644                     u5208:
 24247                           
 24248                           ;stkvar	_grs @ sp[(-4)+0]
 24249  013644  0EFC               	movlw	-4
 24250  013646  0060  F033  FFE3   	movff	btemp+11,plusw1
 24251                           
 24252                           ;stkvar	_b @ sp[(-4)+-4]
 24253  01364C  0EF8               	movlw	-8
 24254  01364E  6AE3               	clrf	plusw1,c
 24255  013650  0EF9               	movlw	-7
 24256  013652  6AE3               	clrf	plusw1,c
 24257  013654  0EFA               	movlw	-6
 24258  013656  6AE3               	clrf	plusw1,c
 24259  013658  0EFB               	movlw	-5
 24260  01365A  6AE3               	clrf	plusw1,c
 24261                           
 24262                           ;stkvar	_aexp @ sp[(-4)+2]
 24263                           ;stkvar	_bexp @ sp[(-4)+1]
 24264  01365C  0EFE               	movlw	-2
 24265  01365E  006F FF8C  F001    	movff	plusw1,btemp
 24266  013664  0EFD               	movlw	-3
 24267  013666  0060  F007  FFE3   	movff	btemp,plusw1
 24268  01366C  D042               	goto	u5240
 24269  01366E                     l7201:
 24270                           
 24271                           ;stkvar	_grs @ sp[(-4)+0]
 24272  01366E  0EFC               	movlw	-4
 24273  013670  A0E3               	btfss	plusw1,0,c
 24274  013672  D00D               	goto	l7205
 24275                           
 24276                           ;stkvar	_grs @ sp[(-4)+0]
 24277  013674  0EFC               	movlw	-4
 24278  013676  006F FF8C  F00C    	movff	plusw1,btemp+11
 24279  01367C  90D8               	bcf	status,0,c
 24280  01367E  320C               	rrcf	(btemp+11)^0,f,c
 24281  013680  0E01               	movlw	1
 24282  013682  120C               	iorwf	(btemp+11)^0,f,c
 24283                           
 24284                           ;stkvar	_grs @ sp[(-4)+0]
 24285  013684  0EFC               	movlw	-4
 24286  013686  0060  F033  FFE3   	movff	btemp+11,plusw1
 24287  01368C  D009               	goto	l7207
 24288  01368E                     l7205:
 24289                           
 24290                           ;stkvar	_grs @ sp[(-4)+0]
 24291  01368E  50E1               	movf	fsr1l,w,c
 24292  013690  0FFC               	addlw	-4
 24293  013692  6ED9               	movwf	fsr2l,c
 24294  013694  50E2               	movf	fsr1h,w,c
 24295  013696  6EDA               	movwf	fsr2h,c
 24296  013698  0EFF               	movlw	255
 24297  01369A  22DA               	addwfc	fsr2h,f,c
 24298  01369C  90D8               	bcf	status,0,c
 24299  01369E  32DF               	rrcf	indf2,f,c
 24300  0136A0                     l7207:
 24301                           
 24302                           ;stkvar	_b @ sp[(-4)+-4]
 24303  0136A0  0EF8               	movlw	-8
 24304  0136A2  A0E3               	btfss	plusw1,0,c
 24305  0136A4  D002               	goto	l7211
 24306                           
 24307                           ;stkvar	_grs @ sp[(-4)+0]
 24308  0136A6  0EFC               	movlw	-4
 24309  0136A8  8EE3               	bsf	plusw1,7,c
 24310  0136AA                     l7211:
 24311  0136AA  0E01               	movlw	1
 24312  0136AC  6E0C               	movwf	(btemp+11)^0,c
 24313                           
 24314                           ;stkvar	_b @ sp[(-4)+-4]
 24315  0136AE  50E1               	movf	fsr1l,w,c
 24316  0136B0  0FF8               	addlw	-8
 24317  0136B2  6ED9               	movwf	fsr2l,c
 24318  0136B4  50E2               	movf	fsr1h,w,c
 24319  0136B6  6EDA               	movwf	fsr2h,c
 24320  0136B8  0EFF               	movlw	255
 24321  0136BA  22DA               	addwfc	fsr2h,f,c
 24322  0136BC  280C               	incf	(btemp+11)^0,w,c
 24323  0136BE  52DE               	movf	postinc2,f,c
 24324  0136C0  D008               	goto	u5230
 24325  0136C2                     u5235:
 24326  0136C2  52DE               	movf	postinc2,f,c
 24327  0136C4  90D8               	bcf	status,0,c
 24328  0136C6  BEDC               	btfsc	preinc2,7,c
 24329  0136C8  80D8               	bsf	status,0,c
 24330  0136CA  32DD               	rrcf	postdec2,f,c
 24331  0136CC  32DD               	rrcf	postdec2,f,c
 24332  0136CE  32DD               	rrcf	postdec2,f,c
 24333  0136D0  32DE               	rrcf	postinc2,f,c
 24334  0136D2                     u5230:
 24335  0136D2  2EE8               	decfsz	wreg,f,c
 24336  0136D4  D7F6               	goto	u5235
 24337                           
 24338                           ;stkvar	_bexp @ sp[(-4)+1]
 24339  0136D6  0EFD               	movlw	-3
 24340  0136D8  2AE3               	incf	plusw1,f,c
 24341  0136DA                     l7215:
 24342                           
 24343                           ;stkvar	_aexp @ sp[(-4)+2]
 24344                           ;stkvar	_bexp @ sp[(-4)+1]
 24345  0136DA  50E1               	movf	fsr1l,w,c
 24346  0136DC  0FFD               	addlw	-3
 24347  0136DE  6ED9               	movwf	fsr2l,c
 24348  0136E0  50E2               	movf	fsr1h,w,c
 24349  0136E2  6EDA               	movwf	fsr2h,c
 24350  0136E4  0EFF               	movlw	255
 24351  0136E6  22DA               	addwfc	fsr2h,f,c
 24352  0136E8  0EFE               	movlw	-2
 24353  0136EA  50E3               	movf	plusw1,w,c
 24354  0136EC  5CDE               	subwf	postinc2,w,c
 24355  0136EE  A0D8               	btfss	status,0,c
 24356  0136F0  D7BE               	goto	l7201
 24357  0136F2                     u5240:
 24358                           
 24359                           ;stkvar	_signs @ sp[(-4)+3]
 24360  0136F2  0EFF               	movlw	-1
 24361  0136F4  BCE3               	btfsc	plusw1,6,c
 24362  0136F6  D066               	goto	l7243
 24363                           
 24364                           ;stkvar	_bexp @ sp[(-4)+1]
 24365  0136F8  0EFD               	movlw	-3
 24366  0136FA  50E3               	movf	plusw1,w,c
 24367  0136FC  B4D8               	btfsc	status,2,c
 24368  0136FE  D0F2               	goto	u5340
 24369                           
 24370                           ;stkvar	_a @ sp[(-4)+-8]
 24371                           ;stkvar	_b @ sp[(-4)+-4]
 24372  013700  0EF8               	movlw	-8
 24373  013702  50E3               	movf	plusw1,w,c
 24374  013704  6E01               	movwf	btemp^0,c
 24375  013706  0EF4               	movlw	-12
 24376  013708  50E3               	movf	plusw1,w,c
 24377  01370A  2601               	addwf	btemp^0,f,c
 24378  01370C  0EF8               	movlw	-8
 24379  01370E  0060  F007  FFE3   	movff	btemp,plusw1
 24380  013714  0EF9               	movlw	-7
 24381  013716  50E3               	movf	plusw1,w,c
 24382  013718  6E01               	movwf	btemp^0,c
 24383  01371A  0EF5               	movlw	-11
 24384  01371C  50E3               	movf	plusw1,w,c
 24385  01371E  2201               	addwfc	btemp^0,f,c
 24386  013720  0EF9               	movlw	-7
 24387  013722  0060  F007  FFE3   	movff	btemp,plusw1
 24388  013728  0EFA               	movlw	-6
 24389  01372A  50E3               	movf	plusw1,w,c
 24390  01372C  6E01               	movwf	btemp^0,c
 24391  01372E  0EF6               	movlw	-10
 24392  013730  50E3               	movf	plusw1,w,c
 24393  013732  2201               	addwfc	btemp^0,f,c
 24394  013734  0EFA               	movlw	-6
 24395  013736  0060  F007  FFE3   	movff	btemp,plusw1
 24396  01373C  0EFB               	movlw	-5
 24397  01373E  50E3               	movf	plusw1,w,c
 24398  013740  6E01               	movwf	btemp^0,c
 24399  013742  0EF7               	movlw	-9
 24400  013744  50E3               	movf	plusw1,w,c
 24401  013746  2201               	addwfc	btemp^0,f,c
 24402  013748  0EFB               	movlw	-5
 24403  01374A  0060  F007  FFE3   	movff	btemp,plusw1
 24404                           
 24405                           ;stkvar	_b @ sp[(-4)+-4]
 24406  013750  0EFB               	movlw	-5
 24407  013752  A0E3               	btfss	plusw1,0,c
 24408  013754  D101               	goto	u5380
 24409                           
 24410                           ;stkvar	_grs @ sp[(-4)+0]
 24411  013756  0EFC               	movlw	-4
 24412  013758  A0E3               	btfss	plusw1,0,c
 24413  01375A  D00D               	goto	l7233
 24414                           
 24415                           ;stkvar	_grs @ sp[(-4)+0]
 24416  01375C  0EFC               	movlw	-4
 24417  01375E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24418  013764  90D8               	bcf	status,0,c
 24419  013766  320C               	rrcf	(btemp+11)^0,f,c
 24420  013768  0E01               	movlw	1
 24421  01376A  120C               	iorwf	(btemp+11)^0,f,c
 24422                           
 24423                           ;stkvar	_grs @ sp[(-4)+0]
 24424  01376C  0EFC               	movlw	-4
 24425  01376E  0060  F033  FFE3   	movff	btemp+11,plusw1
 24426  013774  D009               	goto	l7235
 24427  013776                     l7233:
 24428                           
 24429                           ;stkvar	_grs @ sp[(-4)+0]
 24430  013776  50E1               	movf	fsr1l,w,c
 24431  013778  0FFC               	addlw	-4
 24432  01377A  6ED9               	movwf	fsr2l,c
 24433  01377C  50E2               	movf	fsr1h,w,c
 24434  01377E  6EDA               	movwf	fsr2h,c
 24435  013780  0EFF               	movlw	255
 24436  013782  22DA               	addwfc	fsr2h,f,c
 24437  013784  90D8               	bcf	status,0,c
 24438  013786  32DF               	rrcf	indf2,f,c
 24439  013788                     l7235:
 24440                           
 24441                           ;stkvar	_b @ sp[(-4)+-4]
 24442  013788  0EF8               	movlw	-8
 24443  01378A  A0E3               	btfss	plusw1,0,c
 24444  01378C  D002               	goto	l7239
 24445                           
 24446                           ;stkvar	_grs @ sp[(-4)+0]
 24447  01378E  0EFC               	movlw	-4
 24448  013790  8EE3               	bsf	plusw1,7,c
 24449  013792                     l7239:
 24450  013792  0E01               	movlw	1
 24451  013794  6E0C               	movwf	(btemp+11)^0,c
 24452                           
 24453                           ;stkvar	_b @ sp[(-4)+-4]
 24454  013796  50E1               	movf	fsr1l,w,c
 24455  013798  0FF8               	addlw	-8
 24456  01379A  6ED9               	movwf	fsr2l,c
 24457  01379C  50E2               	movf	fsr1h,w,c
 24458  01379E  6EDA               	movwf	fsr2h,c
 24459  0137A0  0EFF               	movlw	255
 24460  0137A2  22DA               	addwfc	fsr2h,f,c
 24461  0137A4  280C               	incf	(btemp+11)^0,w,c
 24462  0137A6  52DE               	movf	postinc2,f,c
 24463  0137A8  D008               	goto	u5300
 24464  0137AA                     u5305:
 24465  0137AA  52DE               	movf	postinc2,f,c
 24466  0137AC  90D8               	bcf	status,0,c
 24467  0137AE  BEDC               	btfsc	preinc2,7,c
 24468  0137B0  80D8               	bsf	status,0,c
 24469  0137B2  32DD               	rrcf	postdec2,f,c
 24470  0137B4  32DD               	rrcf	postdec2,f,c
 24471  0137B6  32DD               	rrcf	postdec2,f,c
 24472  0137B8  32DE               	rrcf	postinc2,f,c
 24473  0137BA                     u5300:
 24474  0137BA  2EE8               	decfsz	wreg,f,c
 24475  0137BC  D7F6               	goto	u5305
 24476                           
 24477                           ;stkvar	_bexp @ sp[(-4)+1]
 24478  0137BE  0EFD               	movlw	-3
 24479  0137C0  2AE3               	incf	plusw1,f,c
 24480  0137C2  D0CA               	goto	u5380
 24481  0137C4                     l7243:
 24482                           
 24483                           ;stkvar	_a @ sp[(-4)+-8]
 24484                           ;stkvar	_b @ sp[(-4)+-4]
 24485  0137C4  50E1               	movf	fsr1l,w,c
 24486  0137C6  0FF8               	addlw	-8
 24487  0137C8  6ED9               	movwf	fsr2l,c
 24488  0137CA  50E2               	movf	fsr1h,w,c
 24489  0137CC  6EDA               	movwf	fsr2h,c
 24490  0137CE  0EFF               	movlw	255
 24491  0137D0  22DA               	addwfc	fsr2h,f,c
 24492  0137D2  0EF4               	movlw	-12
 24493  0137D4  50E3               	movf	plusw1,w,c
 24494  0137D6  5CDE               	subwf	postinc2,w,c
 24495  0137D8  0EF5               	movlw	-11
 24496  0137DA  50E3               	movf	plusw1,w,c
 24497  0137DC  58DE               	subwfb	postinc2,w,c
 24498  0137DE  0EF6               	movlw	-10
 24499  0137E0  50E3               	movf	plusw1,w,c
 24500  0137E2  58DE               	subwfb	postinc2,w,c
 24501  0137E4  50DE               	movf	postinc2,w,c
 24502  0137E6  0A80               	xorlw	128
 24503  0137E8  6E01               	movwf	btemp^0,c
 24504  0137EA  0EF7               	movlw	-9
 24505  0137EC  50E3               	movf	plusw1,w,c
 24506  0137EE  0A80               	xorlw	128
 24507  0137F0  5801               	subwfb	btemp^0,w,c
 24508  0137F2  B0D8               	btfsc	status,0,c
 24509  0137F4  D053               	goto	l7255
 24510                           
 24511                           ;stkvar	_b @ sp[(-4)+-4]
 24512                           ;stkvar	_a @ sp[(-4)+-8]
 24513  0137F6  0EF4               	movlw	-12
 24514  0137F8  006F FF8C  F009    	movff	plusw1,btemp+8
 24515  0137FE  0EF5               	movlw	-11
 24516  013800  006F FF8C  F00A    	movff	plusw1,btemp+9
 24517  013806  0EF6               	movlw	-10
 24518  013808  006F FF8C  F00B    	movff	plusw1,btemp+10
 24519  01380E  0EF7               	movlw	-9
 24520  013810  006F FF8C  F00C    	movff	plusw1,btemp+11
 24521  013816  0EF8               	movlw	-8
 24522  013818  50E3               	movf	plusw1,w,c
 24523  01381A  5E09               	subwf	(btemp+8)^0,f,c
 24524  01381C  0EF9               	movlw	-7
 24525  01381E  50E3               	movf	plusw1,w,c
 24526  013820  5A0A               	subwfb	(btemp+9)^0,f,c
 24527  013822  0EFA               	movlw	-6
 24528  013824  50E3               	movf	plusw1,w,c
 24529  013826  5A0B               	subwfb	(btemp+10)^0,f,c
 24530  013828  0EFB               	movlw	-5
 24531  01382A  50E3               	movf	plusw1,w,c
 24532  01382C  5A0C               	subwfb	(btemp+11)^0,f,c
 24533  01382E  0EFF               	movlw	255
 24534  013830  2409               	addwf	(btemp+8)^0,w,c
 24535  013832  6E05               	movwf	(btemp+4)^0,c
 24536  013834  0EFF               	movlw	255
 24537  013836  200A               	addwfc	(btemp+9)^0,w,c
 24538  013838  6E06               	movwf	(btemp+5)^0,c
 24539  01383A  0EFF               	movlw	255
 24540  01383C  200B               	addwfc	(btemp+10)^0,w,c
 24541  01383E  6E07               	movwf	(btemp+6)^0,c
 24542  013840  0EFF               	movlw	255
 24543  013842  200C               	addwfc	(btemp+11)^0,w,c
 24544  013844  6E08               	movwf	(btemp+7)^0,c
 24545                           
 24546                           ;stkvar	_b @ sp[(-4)+-4]
 24547  013846  0EF8               	movlw	-8
 24548  013848  0060  F017  FFE3   	movff	btemp+4,plusw1
 24549  01384E  0EF9               	movlw	-7
 24550  013850  0060  F01B  FFE3   	movff	btemp+5,plusw1
 24551  013856  0EFA               	movlw	-6
 24552  013858  0060  F01F  FFE3   	movff	btemp+6,plusw1
 24553  01385E  0EFB               	movlw	-5
 24554  013860  0060  F023  FFE3   	movff	btemp+7,plusw1
 24555                           
 24556                           ;stkvar	_signs @ sp[(-4)+3]
 24557  013866  0EFF               	movlw	-1
 24558  013868  7EE3               	btg	plusw1,7,c
 24559                           
 24560                           ;stkvar	_grs @ sp[(-4)+0]
 24561  01386A  0EFC               	movlw	-4
 24562  01386C  50E3               	movf	plusw1,w,c
 24563  01386E  0800               	sublw	0
 24564  013870  6E0C               	movwf	(btemp+11)^0,c
 24565                           
 24566                           ;stkvar	_grs @ sp[(-4)+0]
 24567  013872  0EFC               	movlw	-4
 24568  013874  0060  F033  FFE3   	movff	btemp+11,plusw1
 24569                           
 24570                           ;stkvar	_grs @ sp[(-4)+0]
 24571  01387A  0EFC               	movlw	-4
 24572  01387C  50E3               	movf	plusw1,w,c
 24573  01387E  A4D8               	btfss	status,2,c
 24574  013880  D020               	goto	l7257
 24575                           
 24576                           ;stkvar	_b @ sp[(-4)+-4]
 24577  013882  50E1               	movf	fsr1l,w,c
 24578  013884  0FF8               	addlw	-8
 24579  013886  6ED9               	movwf	fsr2l,c
 24580  013888  50E2               	movf	fsr1h,w,c
 24581  01388A  6EDA               	movwf	fsr2h,c
 24582  01388C  0EFF               	movlw	255
 24583  01388E  22DA               	addwfc	fsr2h,f,c
 24584  013890  2ADE               	incf	postinc2,f,c
 24585  013892  0E00               	movlw	0
 24586  013894  22DE               	addwfc	postinc2,f,c
 24587  013896  22DE               	addwfc	postinc2,f,c
 24588  013898  22DE               	addwfc	postinc2,f,c
 24589  01389A  D013               	goto	l7257
 24590  01389C                     l7255:
 24591                           
 24592                           ;stkvar	_a @ sp[(-4)+-8]
 24593                           ;stkvar	_b @ sp[(-4)+-4]
 24594  01389C  50E1               	movf	fsr1l,w,c
 24595  01389E  0FF8               	addlw	-8
 24596  0138A0  6ED9               	movwf	fsr2l,c
 24597  0138A2  50E2               	movf	fsr1h,w,c
 24598  0138A4  6EDA               	movwf	fsr2h,c
 24599  0138A6  0EFF               	movlw	255
 24600  0138A8  22DA               	addwfc	fsr2h,f,c
 24601  0138AA  0EF4               	movlw	-12
 24602  0138AC  50E3               	movf	plusw1,w,c
 24603  0138AE  5EDE               	subwf	postinc2,f,c
 24604  0138B0  0EF5               	movlw	-11
 24605  0138B2  50E3               	movf	plusw1,w,c
 24606  0138B4  5ADE               	subwfb	postinc2,f,c
 24607  0138B6  0EF6               	movlw	-10
 24608  0138B8  50E3               	movf	plusw1,w,c
 24609  0138BA  5ADE               	subwfb	postinc2,f,c
 24610  0138BC  0EF7               	movlw	-9
 24611  0138BE  50E3               	movf	plusw1,w,c
 24612  0138C0  5ADE               	subwfb	postinc2,f,c
 24613  0138C2                     l7257:
 24614                           
 24615                           ;stkvar	_b @ sp[(-4)+-4]
 24616  0138C2  0EF8               	movlw	-8
 24617  0138C4  50E3               	movf	plusw1,w,c
 24618  0138C6  E145               	bnz	l7279
 24619  0138C8  0EF9               	movlw	-7
 24620  0138CA  50E3               	movf	plusw1,w,c
 24621  0138CC  E142               	bnz	l7279
 24622  0138CE  0EFA               	movlw	-6
 24623  0138D0  50E3               	movf	plusw1,w,c
 24624  0138D2  E13F               	bnz	l7279
 24625  0138D4  0EFB               	movlw	-5
 24626  0138D6  50E3               	movf	plusw1,w,c
 24627  0138D8  A4D8               	btfss	status,2,c
 24628  0138DA  D03B               	goto	l7279
 24629                           
 24630                           ;stkvar	_grs @ sp[(-4)+0]
 24631  0138DC  0EFC               	movlw	-4
 24632  0138DE  50E3               	movf	plusw1,w,c
 24633  0138E0  A4D8               	btfss	status,2,c
 24634  0138E2  D037               	goto	l7279
 24635  0138E4                     u5340:
 24636  0138E4  0E00               	movlw	0
 24637  0138E6  6E01               	movwf	btemp^0,c
 24638  0138E8  0E00               	movlw	0
 24639  0138EA  6E02               	movwf	(btemp+1)^0,c
 24640  0138EC  0E00               	movlw	0
 24641  0138EE  6E03               	movwf	(btemp+2)^0,c
 24642  0138F0  0E00               	movlw	0
 24643  0138F2  6E04               	movwf	(btemp+3)^0,c
 24644  0138F4  D0C6               	goto	l2807
 24645  0138F6                     l7265:
 24646                           
 24647                           ;stkvar	_b @ sp[(-4)+-4]
 24648  0138F6  90D8               	bcf	status,0,c
 24649  0138F8  0EF8               	movlw	-8
 24650  0138FA  36E3               	rlcf	plusw1,f,c
 24651  0138FC  0EF9               	movlw	-7
 24652  0138FE  36E3               	rlcf	plusw1,f,c
 24653  013900  0EFA               	movlw	-6
 24654  013902  36E3               	rlcf	plusw1,f,c
 24655  013904  0EFB               	movlw	-5
 24656  013906  36E3               	rlcf	plusw1,f,c
 24657                           
 24658                           ;stkvar	_grs @ sp[(-4)+0]
 24659  013908  0EFC               	movlw	-4
 24660  01390A  AEE3               	btfss	plusw1,7,c
 24661  01390C  D002               	goto	l2819
 24662                           
 24663                           ;stkvar	_b @ sp[(-4)+-4]
 24664  01390E  0EF8               	movlw	-8
 24665  013910  80E3               	bsf	plusw1,0,c
 24666  013912                     l2819:
 24667                           
 24668                           ;stkvar	_grs @ sp[(-4)+0]
 24669  013912  0EFC               	movlw	-4
 24670  013914  A0E3               	btfss	plusw1,0,c
 24671  013916  D00E               	goto	l7273
 24672                           
 24673                           ;stkvar	_grs @ sp[(-4)+0]
 24674  013918  0EFC               	movlw	-4
 24675  01391A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24676  013920  90D8               	bcf	status,0,c
 24677  013922  340C               	rlcf	(btemp+11)^0,w,c
 24678  013924  6E0B               	movwf	(btemp+10)^0,c
 24679  013926  0E01               	movlw	1
 24680  013928  120B               	iorwf	(btemp+10)^0,f,c
 24681                           
 24682                           ;stkvar	_grs @ sp[(-4)+0]
 24683  01392A  0EFC               	movlw	-4
 24684  01392C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24685  013932  D009               	goto	l7275
 24686  013934                     l7273:
 24687                           
 24688                           ;stkvar	_grs @ sp[(-4)+0]
 24689  013934  50E1               	movf	fsr1l,w,c
 24690  013936  0FFC               	addlw	-4
 24691  013938  6ED9               	movwf	fsr2l,c
 24692  01393A  50E2               	movf	fsr1h,w,c
 24693  01393C  6EDA               	movwf	fsr2h,c
 24694  01393E  0EFF               	movlw	255
 24695  013940  22DA               	addwfc	fsr2h,f,c
 24696  013942  90D8               	bcf	status,0,c
 24697  013944  36DF               	rlcf	indf2,f,c
 24698  013946                     l7275:
 24699                           
 24700                           ;stkvar	_bexp @ sp[(-4)+1]
 24701  013946  0EFD               	movlw	-3
 24702  013948  50E3               	movf	plusw1,w,c
 24703  01394A  B4D8               	btfsc	status,2,c
 24704  01394C  D002               	goto	l7279
 24705                           
 24706                           ;stkvar	_bexp @ sp[(-4)+1]
 24707  01394E  0EFD               	movlw	-3
 24708  013950  06E3               	decf	plusw1,f,c
 24709  013952                     l7279:
 24710                           
 24711                           ;stkvar	_b @ sp[(-4)+-4]
 24712  013952  0EFA               	movlw	-6
 24713  013954  AEE3               	btfss	plusw1,7,c
 24714  013956  D7CF               	goto	l7265
 24715  013958                     u5380:
 24716                           
 24717                           ;stkvar	_aexp @ sp[(-4)+2]
 24718  013958  0EFE               	movlw	-2
 24719  01395A  6AE3               	clrf	plusw1,c
 24720                           
 24721                           ;stkvar	_grs @ sp[(-4)+0]
 24722  01395C  0EFC               	movlw	-4
 24723  01395E  AEE3               	btfss	plusw1,7,c
 24724  013960  D00F               	goto	l7293
 24725                           
 24726                           ;stkvar	_grs @ sp[(-4)+0]
 24727  013962  0EFC               	movlw	-4
 24728  013964  006F FF8C  F00C    	movff	plusw1,btemp+11
 24729  01396A  0E7F               	movlw	127
 24730  01396C  160C               	andwf	(btemp+11)^0,f,c
 24731  01396E  B4D8               	btfsc	status,2,c
 24732  013970  D004               	goto	l7289
 24733  013972                     u5400:
 24734                           
 24735                           ;stkvar	_aexp @ sp[(-4)+2]
 24736  013972  0EFE               	movlw	-2
 24737  013974  6AE3               	clrf	plusw1,c
 24738  013976  2AE3               	incf	plusw1,f,c
 24739  013978  D003               	goto	l7293
 24740  01397A                     l7289:
 24741                           
 24742                           ;stkvar	_b @ sp[(-4)+-4]
 24743  01397A  0EF8               	movlw	-8
 24744  01397C  B0E3               	btfsc	plusw1,0,c
 24745  01397E  D7F9               	goto	u5400
 24746  013980                     l7293:
 24747                           
 24748                           ;stkvar	_aexp @ sp[(-4)+2]
 24749  013980  0EFE               	movlw	-2
 24750  013982  50E3               	movf	plusw1,w,c
 24751  013984  B4D8               	btfsc	status,2,c
 24752  013986  D02B               	goto	l7305
 24753                           
 24754                           ;stkvar	_b @ sp[(-4)+-4]
 24755  013988  50E1               	movf	fsr1l,w,c
 24756  01398A  0FF8               	addlw	-8
 24757  01398C  6ED9               	movwf	fsr2l,c
 24758  01398E  50E2               	movf	fsr1h,w,c
 24759  013990  6EDA               	movwf	fsr2h,c
 24760  013992  0EFF               	movlw	255
 24761  013994  22DA               	addwfc	fsr2h,f,c
 24762  013996  2ADE               	incf	postinc2,f,c
 24763  013998  0E00               	movlw	0
 24764  01399A  22DE               	addwfc	postinc2,f,c
 24765  01399C  22DE               	addwfc	postinc2,f,c
 24766  01399E  22DE               	addwfc	postinc2,f,c
 24767                           
 24768                           ;stkvar	_b @ sp[(-4)+-4]
 24769  0139A0  0EFB               	movlw	-5
 24770  0139A2  A0E3               	btfss	plusw1,0,c
 24771  0139A4  D01C               	goto	l7305
 24772  0139A6  0E01               	movlw	1
 24773  0139A8  6E0C               	movwf	(btemp+11)^0,c
 24774                           
 24775                           ;stkvar	_b @ sp[(-4)+-4]
 24776  0139AA  50E1               	movf	fsr1l,w,c
 24777  0139AC  0FF8               	addlw	-8
 24778  0139AE  6ED9               	movwf	fsr2l,c
 24779  0139B0  50E2               	movf	fsr1h,w,c
 24780  0139B2  6EDA               	movwf	fsr2h,c
 24781  0139B4  0EFF               	movlw	255
 24782  0139B6  22DA               	addwfc	fsr2h,f,c
 24783  0139B8  280C               	incf	(btemp+11)^0,w,c
 24784  0139BA  52DE               	movf	postinc2,f,c
 24785  0139BC  D008               	goto	u5440
 24786  0139BE                     u5445:
 24787  0139BE  52DE               	movf	postinc2,f,c
 24788  0139C0  90D8               	bcf	status,0,c
 24789  0139C2  BEDC               	btfsc	preinc2,7,c
 24790  0139C4  80D8               	bsf	status,0,c
 24791  0139C6  32DD               	rrcf	postdec2,f,c
 24792  0139C8  32DD               	rrcf	postdec2,f,c
 24793  0139CA  32DD               	rrcf	postdec2,f,c
 24794  0139CC  32DE               	rrcf	postinc2,f,c
 24795  0139CE                     u5440:
 24796  0139CE  2EE8               	decfsz	wreg,f,c
 24797  0139D0  D7F6               	goto	u5445
 24798                           
 24799                           ;stkvar	_bexp @ sp[(-4)+1]
 24800  0139D2  0EFD               	movlw	-3
 24801  0139D4  28E3               	incf	plusw1,w,c
 24802  0139D6  B4D8               	btfsc	status,2,c
 24803  0139D8  D002               	goto	l7305
 24804                           
 24805                           ;stkvar	_bexp @ sp[(-4)+1]
 24806  0139DA  0EFD               	movlw	-3
 24807  0139DC  2AE3               	incf	plusw1,f,c
 24808  0139DE                     l7305:
 24809                           
 24810                           ;stkvar	_bexp @ sp[(-4)+1]
 24811  0139DE  0EFD               	movlw	-3
 24812  0139E0  28E3               	incf	plusw1,w,c
 24813  0139E2  B4D8               	btfsc	status,2,c
 24814  0139E4  D004               	goto	u5470
 24815                           
 24816                           ;stkvar	_bexp @ sp[(-4)+1]
 24817  0139E6  0EFD               	movlw	-3
 24818  0139E8  50E3               	movf	plusw1,w,c
 24819  0139EA  A4D8               	btfss	status,2,c
 24820  0139EC  D00E               	goto	l7315
 24821  0139EE                     u5470:
 24822                           
 24823                           ;stkvar	_b @ sp[(-4)+-4]
 24824  0139EE  0EF8               	movlw	-8
 24825  0139F0  6AE3               	clrf	plusw1,c
 24826  0139F2  0EF9               	movlw	-7
 24827  0139F4  6AE3               	clrf	plusw1,c
 24828  0139F6  0EFA               	movlw	-6
 24829  0139F8  6AE3               	clrf	plusw1,c
 24830  0139FA  0EFB               	movlw	-5
 24831  0139FC  6AE3               	clrf	plusw1,c
 24832                           
 24833                           ;stkvar	_bexp @ sp[(-4)+1]
 24834  0139FE  0EFD               	movlw	-3
 24835  013A00  50E3               	movf	plusw1,w,c
 24836  013A02  A4D8               	btfss	status,2,c
 24837  013A04  D002               	goto	l7315
 24838                           
 24839                           ;stkvar	_signs @ sp[(-4)+3]
 24840  013A06  0EFF               	movlw	-1
 24841  013A08  6AE3               	clrf	plusw1,c
 24842  013A0A                     l7315:
 24843                           
 24844                           ;stkvar	_bexp @ sp[(-4)+1]
 24845  013A0A  0EFD               	movlw	-3
 24846  013A0C  A0E3               	btfss	plusw1,0,c
 24847  013A0E  D009               	goto	l7319
 24848                           
 24849                           ;stkvar	_b @ sp[(-4)+-4]
 24850  013A10  0EFA               	movlw	250
 24851  013A12  24E1               	addwf	fsr1l,w,c
 24852  013A14  6ED9               	movwf	fsr2l,c
 24853  013A16  0EFF               	movlw	255
 24854  013A18  20E2               	addwfc	fsr1h,w,c
 24855  013A1A  6EDA               	movwf	fsr2h,c
 24856  013A1C  0E00               	movlw	0
 24857  013A1E  8EDB               	bsf	plusw2,7,c
 24858  013A20  D008               	goto	l7321
 24859  013A22                     l7319:
 24860                           
 24861                           ;stkvar	_b @ sp[(-4)+-4]
 24862  013A22  0EFA               	movlw	250
 24863  013A24  24E1               	addwf	fsr1l,w,c
 24864  013A26  6ED9               	movwf	fsr2l,c
 24865  013A28  0EFF               	movlw	255
 24866  013A2A  20E2               	addwfc	fsr1h,w,c
 24867  013A2C  6EDA               	movwf	fsr2h,c
 24868  013A2E  0E7F               	movlw	127
 24869  013A30  16DF               	andwf	indf2,f,c
 24870  013A32                     l7321:
 24871                           
 24872                           ;stkvar	_b @ sp[(-4)+-4]
 24873  013A32  0EFB               	movlw	251
 24874  013A34  24E1               	addwf	fsr1l,w,c
 24875  013A36  6ED9               	movwf	fsr2l,c
 24876  013A38  0EFF               	movlw	255
 24877  013A3A  20E2               	addwfc	fsr1h,w,c
 24878  013A3C  6EDA               	movwf	fsr2h,c
 24879                           
 24880                           ;stkvar	_bexp @ sp[(-4)+1]
 24881  013A3E  0EFD               	movlw	-3
 24882  013A40  006F FF8C  F00C    	movff	plusw1,btemp+11
 24883  013A46  90D8               	bcf	status,0,c
 24884  013A48  300C               	rrcf	(btemp+11)^0,w,c
 24885  013A4A  6EDF               	movwf	indf2,c
 24886                           
 24887                           ;stkvar	_signs @ sp[(-4)+3]
 24888  013A4C  0EFF               	movlw	-1
 24889  013A4E  AEE3               	btfss	plusw1,7,c
 24890  013A50  D008               	goto	l7327
 24891                           
 24892                           ;stkvar	_b @ sp[(-4)+-4]
 24893  013A52  0EFB               	movlw	251
 24894  013A54  24E1               	addwf	fsr1l,w,c
 24895  013A56  6ED9               	movwf	fsr2l,c
 24896  013A58  0EFF               	movlw	255
 24897  013A5A  20E2               	addwfc	fsr1h,w,c
 24898  013A5C  6EDA               	movwf	fsr2h,c
 24899  013A5E  0E00               	movlw	0
 24900  013A60  8EDB               	bsf	plusw2,7,c
 24901  013A62                     l7327:
 24902                           
 24903                           ;stkvar	_b @ sp[(-4)+-4]
 24904  013A62  0EF8               	movlw	-8
 24905  013A64  006F FF8C  F001    	movff	plusw1,btemp
 24906  013A6A  0EF9               	movlw	-7
 24907  013A6C  006F FF8C  F002    	movff	plusw1,btemp+1
 24908  013A72  0EFA               	movlw	-6
 24909  013A74  006F FF8C  F003    	movff	plusw1,btemp+2
 24910  013A7A  0EFB               	movlw	-5
 24911  013A7C  006F FF8C  F004    	movff	plusw1,btemp+3
 24912  013A82                     l2807:
 24913                           
 24914                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 24915  013A82  0EF4               	movlw	244
 24916  013A84  26E1               	addwf	fsr1l,f,c
 24917  013A86  0EFF               	movlw	255
 24918  013A88  22E2               	addwfc	fsr1h,f,c
 24919  013A8A  0012               	return		;funcret
 24920  013A8C                     __end_of___fladd:
 24921                           	opt callstack 0
 24922                           
 24923 ;; *************** function ___flmul *****************
 24924 ;; Defined at:
 24925 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 24926 ;; Parameters:    Size  Location     Type
 24927 ;;  b               4  [STACK] unsigned char 
 24928 ;;  a               4  [STACK] unsigned char 
 24929 ;; Auto vars:     Size  Location     Type
 24930 ;;  prod            4  [STACK] struct .
 24931 ;;  grs             4  [STACK] unsigned long 
 24932 ;;  temp            2  [STACK] struct .
 24933 ;;  bexp            1  [STACK] unsigned char 
 24934 ;;  aexp            1  [STACK] unsigned char 
 24935 ;;  sign            1  [STACK] unsigned char 
 24936 ;; Return value:  Size  Location     Type
 24937 ;;                  4  [STACK] unsigned char 
 24938 ;; Registers used:
 24939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24940 ;; Tracked objects:
 24941 ;;		On entry : 0/1
 24942 ;;		On exit  : 0/0
 24943 ;;		Unchanged: 0/0
 24944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24949 ;;Total ram usage:        0 bytes
 24950 ;; Hardware stack levels used:    1
 24951 ;; Hardware stack levels required when called:   15
 24952 ;; This function calls:
 24953 ;;		Nothing
 24954 ;; This function is called by:
 24955 ;;		_conv_raw_result
 24956 ;;		_lp_filter
 24957 ;;		_calc_model_data
 24958 ;;		_calc_bsoc
 24959 ;;		_init_bsoc
 24960 ;;		_efgtoa
 24961 ;; This function uses a reentrant model
 24962 ;;
 24963                           
 24964                           	psect	text99
 24965  012AA6                     __ptext99:
 24966                           	opt callstack 0
 24967  012AA6                     ___flmul:
 24968                           	opt callstack 0
 24969                           
 24970                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24971  012AA6  0E0D               	movlw	13
 24972  012AA8  26E1               	addwf	fsr1l,f,c
 24973  012AAA  0E00               	movlw	0
 24974  012AAC  22E2               	addwfc	fsr1h,f,c
 24975                           
 24976                           ;stkvar	_b @ sp[(-13)+-4]
 24977                           
 24978                           ;incstack = 0
 24979 ;; hardware stack exceeded
 24980  012AAE  0EF2               	movlw	242
 24981  012AB0  24E1               	addwf	fsr1l,w,c
 24982  012AB2  6ED9               	movwf	fsr2l,c
 24983  012AB4  0EFF               	movlw	255
 24984  012AB6  20E2               	addwfc	fsr1h,w,c
 24985  012AB8  6EDA               	movwf	fsr2h,c
 24986  012ABA  50DF               	movf	indf2,w,c
 24987  012ABC  6E0C               	movwf	(btemp+11)^0,c
 24988  012ABE  0E80               	movlw	128
 24989  012AC0  160C               	andwf	(btemp+11)^0,f,c
 24990                           
 24991                           ;stkvar	_sign @ sp[(-13)+12]
 24992  012AC2  0EFF               	movlw	-1
 24993  012AC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24994                           
 24995                           ;stkvar	_b @ sp[(-13)+-4]
 24996  012ACA  0EF2               	movlw	242
 24997  012ACC  24E1               	addwf	fsr1l,w,c
 24998  012ACE  6ED9               	movwf	fsr2l,c
 24999  012AD0  0EFF               	movlw	255
 25000  012AD2  20E2               	addwfc	fsr1h,w,c
 25001  012AD4  6EDA               	movwf	fsr2h,c
 25002  012AD6  50DF               	movf	indf2,w,c
 25003  012AD8  6E0C               	movwf	(btemp+11)^0,c
 25004  012ADA  90D8               	bcf	status,0,c
 25005  012ADC  340C               	rlcf	(btemp+11)^0,w,c
 25006  012ADE  6E0B               	movwf	(btemp+10)^0,c
 25007                           
 25008                           ;stkvar	_bexp @ sp[(-13)+10]
 25009  012AE0  0EFD               	movlw	-3
 25010  012AE2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25011                           
 25012                           ;stkvar	_b @ sp[(-13)+-4]
 25013  012AE8  0EF1               	movlw	241
 25014  012AEA  24E1               	addwf	fsr1l,w,c
 25015  012AEC  6ED9               	movwf	fsr2l,c
 25016  012AEE  0EFF               	movlw	255
 25017  012AF0  20E2               	addwfc	fsr1h,w,c
 25018  012AF2  6EDA               	movwf	fsr2h,c
 25019  012AF4  AEDF               	btfss	indf2,7,c
 25020  012AF6  D002               	goto	l7711
 25021                           
 25022                           ;stkvar	_bexp @ sp[(-13)+10]
 25023  012AF8  0EFD               	movlw	-3
 25024  012AFA  80E3               	bsf	plusw1,0,c
 25025  012AFC                     l7711:
 25026                           
 25027                           ;stkvar	_bexp @ sp[(-13)+10]
 25028  012AFC  0EFD               	movlw	-3
 25029  012AFE  50E3               	movf	plusw1,w,c
 25030  012B00  B4D8               	btfsc	status,2,c
 25031  012B02  D01F               	goto	l7719
 25032                           
 25033                           ;stkvar	_bexp @ sp[(-13)+10]
 25034  012B04  0EFD               	movlw	-3
 25035  012B06  28E3               	incf	plusw1,w,c
 25036  012B08  A4D8               	btfss	status,2,c
 25037  012B0A  D018               	goto	l7717
 25038  012B0C  0E00               	movlw	0
 25039  012B0E  6E09               	movwf	(btemp+8)^0,c
 25040  012B10  0E00               	movlw	0
 25041  012B12  6E0A               	movwf	(btemp+9)^0,c
 25042  012B14  0E00               	movlw	0
 25043  012B16  6E0B               	movwf	(btemp+10)^0,c
 25044  012B18  0E00               	movlw	0
 25045  012B1A  6E0C               	movwf	(btemp+11)^0,c
 25046                           
 25047                           ;stkvar	_b @ sp[(-13)+-4]
 25048  012B1C  0EEF               	movlw	-17
 25049  012B1E  0060  F027  FFE3   	movff	btemp+8,plusw1
 25050  012B24  0EF0               	movlw	-16
 25051  012B26  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25052  012B2C  0EF1               	movlw	-15
 25053  012B2E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25054  012B34  0EF2               	movlw	-14
 25055  012B36  0060  F033  FFE3   	movff	btemp+11,plusw1
 25056  012B3C                     l7717:
 25057                           
 25058                           ;stkvar	_b @ sp[(-13)+-4]
 25059  012B3C  0EF1               	movlw	-15
 25060  012B3E  8EE3               	bsf	plusw1,7,c
 25061  012B40  D018               	goto	l7721
 25062  012B42                     l7719:
 25063  012B42  0E00               	movlw	0
 25064  012B44  6E09               	movwf	(btemp+8)^0,c
 25065  012B46  0E00               	movlw	0
 25066  012B48  6E0A               	movwf	(btemp+9)^0,c
 25067  012B4A  0E00               	movlw	0
 25068  012B4C  6E0B               	movwf	(btemp+10)^0,c
 25069  012B4E  0E00               	movlw	0
 25070  012B50  6E0C               	movwf	(btemp+11)^0,c
 25071                           
 25072                           ;stkvar	_b @ sp[(-13)+-4]
 25073  012B52  0EEF               	movlw	-17
 25074  012B54  0060  F027  FFE3   	movff	btemp+8,plusw1
 25075  012B5A  0EF0               	movlw	-16
 25076  012B5C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25077  012B62  0EF1               	movlw	-15
 25078  012B64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25079  012B6A  0EF2               	movlw	-14
 25080  012B6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25081  012B72                     l7721:
 25082                           
 25083                           ;stkvar	_a @ sp[(-13)+-8]
 25084  012B72  0EEE               	movlw	238
 25085  012B74  24E1               	addwf	fsr1l,w,c
 25086  012B76  6ED9               	movwf	fsr2l,c
 25087  012B78  0EFF               	movlw	255
 25088  012B7A  20E2               	addwfc	fsr1h,w,c
 25089  012B7C  6EDA               	movwf	fsr2h,c
 25090  012B7E  50DF               	movf	indf2,w,c
 25091  012B80  6E0C               	movwf	(btemp+11)^0,c
 25092  012B82  0E80               	movlw	128
 25093  012B84  160C               	andwf	(btemp+11)^0,f,c
 25094                           
 25095                           ;stkvar	_sign @ sp[(-13)+12]
 25096  012B86  50E1               	movf	fsr1l,w,c
 25097  012B88  0FFF               	addlw	-1
 25098  012B8A  6ED9               	movwf	fsr2l,c
 25099  012B8C  50E2               	movf	fsr1h,w,c
 25100  012B8E  6EDA               	movwf	fsr2h,c
 25101  012B90  0EFF               	movlw	255
 25102  012B92  22DA               	addwfc	fsr2h,f,c
 25103  012B94  500C               	movf	(btemp+11)^0,w,c
 25104  012B96  1ADF               	xorwf	indf2,f,c
 25105                           
 25106                           ;stkvar	_a @ sp[(-13)+-8]
 25107  012B98  0EEE               	movlw	238
 25108  012B9A  24E1               	addwf	fsr1l,w,c
 25109  012B9C  6ED9               	movwf	fsr2l,c
 25110  012B9E  0EFF               	movlw	255
 25111  012BA0  20E2               	addwfc	fsr1h,w,c
 25112  012BA2  6EDA               	movwf	fsr2h,c
 25113  012BA4  50DF               	movf	indf2,w,c
 25114  012BA6  6E0C               	movwf	(btemp+11)^0,c
 25115  012BA8  90D8               	bcf	status,0,c
 25116  012BAA  340C               	rlcf	(btemp+11)^0,w,c
 25117  012BAC  6E0B               	movwf	(btemp+10)^0,c
 25118                           
 25119                           ;stkvar	_aexp @ sp[(-13)+11]
 25120  012BAE  0EFE               	movlw	-2
 25121  012BB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25122                           
 25123                           ;stkvar	_a @ sp[(-13)+-8]
 25124  012BB6  0EED               	movlw	237
 25125  012BB8  24E1               	addwf	fsr1l,w,c
 25126  012BBA  6ED9               	movwf	fsr2l,c
 25127  012BBC  0EFF               	movlw	255
 25128  012BBE  20E2               	addwfc	fsr1h,w,c
 25129  012BC0  6EDA               	movwf	fsr2h,c
 25130  012BC2  AEDF               	btfss	indf2,7,c
 25131  012BC4  D002               	goto	l7729
 25132                           
 25133                           ;stkvar	_aexp @ sp[(-13)+11]
 25134  012BC6  0EFE               	movlw	-2
 25135  012BC8  80E3               	bsf	plusw1,0,c
 25136  012BCA                     l7729:
 25137                           
 25138                           ;stkvar	_aexp @ sp[(-13)+11]
 25139  012BCA  0EFE               	movlw	-2
 25140  012BCC  50E3               	movf	plusw1,w,c
 25141  012BCE  B4D8               	btfsc	status,2,c
 25142  012BD0  D01F               	goto	l7737
 25143                           
 25144                           ;stkvar	_aexp @ sp[(-13)+11]
 25145  012BD2  0EFE               	movlw	-2
 25146  012BD4  28E3               	incf	plusw1,w,c
 25147  012BD6  A4D8               	btfss	status,2,c
 25148  012BD8  D018               	goto	l7735
 25149  012BDA  0E00               	movlw	0
 25150  012BDC  6E09               	movwf	(btemp+8)^0,c
 25151  012BDE  0E00               	movlw	0
 25152  012BE0  6E0A               	movwf	(btemp+9)^0,c
 25153  012BE2  0E00               	movlw	0
 25154  012BE4  6E0B               	movwf	(btemp+10)^0,c
 25155  012BE6  0E00               	movlw	0
 25156  012BE8  6E0C               	movwf	(btemp+11)^0,c
 25157                           
 25158                           ;stkvar	_a @ sp[(-13)+-8]
 25159  012BEA  0EEB               	movlw	-21
 25160  012BEC  0060  F027  FFE3   	movff	btemp+8,plusw1
 25161  012BF2  0EEC               	movlw	-20
 25162  012BF4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25163  012BFA  0EED               	movlw	-19
 25164  012BFC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25165  012C02  0EEE               	movlw	-18
 25166  012C04  0060  F033  FFE3   	movff	btemp+11,plusw1
 25167  012C0A                     l7735:
 25168                           
 25169                           ;stkvar	_a @ sp[(-13)+-8]
 25170  012C0A  0EED               	movlw	-19
 25171  012C0C  8EE3               	bsf	plusw1,7,c
 25172  012C0E  D018               	goto	l7739
 25173  012C10                     l7737:
 25174  012C10  0E00               	movlw	0
 25175  012C12  6E09               	movwf	(btemp+8)^0,c
 25176  012C14  0E00               	movlw	0
 25177  012C16  6E0A               	movwf	(btemp+9)^0,c
 25178  012C18  0E00               	movlw	0
 25179  012C1A  6E0B               	movwf	(btemp+10)^0,c
 25180  012C1C  0E00               	movlw	0
 25181  012C1E  6E0C               	movwf	(btemp+11)^0,c
 25182                           
 25183                           ;stkvar	_a @ sp[(-13)+-8]
 25184  012C20  0EEB               	movlw	-21
 25185  012C22  0060  F027  FFE3   	movff	btemp+8,plusw1
 25186  012C28  0EEC               	movlw	-20
 25187  012C2A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25188  012C30  0EED               	movlw	-19
 25189  012C32  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25190  012C38  0EEE               	movlw	-18
 25191  012C3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25192  012C40                     l7739:
 25193                           
 25194                           ;stkvar	_aexp @ sp[(-13)+11]
 25195  012C40  0EFE               	movlw	-2
 25196  012C42  50E3               	movf	plusw1,w,c
 25197  012C44  B4D8               	btfsc	status,2,c
 25198  012C46  D004               	goto	u6410
 25199                           
 25200                           ;stkvar	_bexp @ sp[(-13)+10]
 25201  012C48  0EFD               	movlw	-3
 25202  012C4A  50E3               	movf	plusw1,w,c
 25203  012C4C  A4D8               	btfss	status,2,c
 25204  012C4E  D009               	goto	l7747
 25205  012C50                     u6410:
 25206  012C50  0E00               	movlw	0
 25207  012C52  6E01               	movwf	btemp^0,c
 25208  012C54  0E00               	movlw	0
 25209  012C56  6E02               	movwf	(btemp+1)^0,c
 25210  012C58  0E00               	movlw	0
 25211  012C5A  6E03               	movwf	(btemp+2)^0,c
 25212  012C5C  0E00               	movlw	0
 25213  012C5E  6E04               	movwf	(btemp+3)^0,c
 25214  012C60  D332               	goto	l2888
 25215  012C62                     l7747:
 25216                           
 25217                           ;stkvar	_b @ sp[(-13)+-4]
 25218  012C62  0EEF               	movlw	-17
 25219  012C64  006F FF8C  F00C    	movff	plusw1,btemp+11
 25220                           
 25221                           ;stkvar	_a @ sp[(-13)+-8]
 25222  012C6A  0EED               	movlw	237
 25223  012C6C  24E1               	addwf	fsr1l,w,c
 25224  012C6E  6ED9               	movwf	fsr2l,c
 25225  012C70  0EFF               	movlw	255
 25226  012C72  20E2               	addwfc	fsr1h,w,c
 25227  012C74  6EDA               	movwf	fsr2h,c
 25228  012C76  50DF               	movf	indf2,w,c
 25229  012C78  020C               	mulwf	(btemp+11)^0,c
 25230                           
 25231                           ;stkvar	_temp @ sp[(-13)+8]
 25232  012C7A  0EFB               	movlw	-5
 25233  012C7C  006F FFCF FFE3     	movff	prodl,plusw1
 25234  012C82  0EFC               	movlw	-4
 25235  012C84  006F FFD3 FFE3     	movff	prodh,plusw1
 25236                           
 25237                           ;stkvar	_temp @ sp[(-13)+8]
 25238  012C8A  0EFB               	movlw	-5
 25239  012C8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 25240  012C92  0060  F030  F005   	movff	btemp+11,btemp+4
 25241  012C98  6A06               	clrf	(btemp+5)^0,c
 25242  012C9A  6A07               	clrf	(btemp+6)^0,c
 25243  012C9C  6A08               	clrf	(btemp+7)^0,c
 25244                           
 25245                           ;stkvar	_grs @ sp[(-13)+4]
 25246  012C9E  0EF7               	movlw	-9
 25247  012CA0  0060  F017  FFE3   	movff	btemp+4,plusw1
 25248  012CA6  0EF8               	movlw	-8
 25249  012CA8  0060  F01B  FFE3   	movff	btemp+5,plusw1
 25250  012CAE  0EF9               	movlw	-7
 25251  012CB0  0060  F01F  FFE3   	movff	btemp+6,plusw1
 25252  012CB6  0EFA               	movlw	-6
 25253  012CB8  0060  F023  FFE3   	movff	btemp+7,plusw1
 25254                           
 25255                           ;stkvar	_temp @ sp[(-13)+8]
 25256  012CBE  0EFC               	movlw	252
 25257  012CC0  24E1               	addwf	fsr1l,w,c
 25258  012CC2  6ED9               	movwf	fsr2l,c
 25259  012CC4  0EFF               	movlw	255
 25260  012CC6  20E2               	addwfc	fsr1h,w,c
 25261  012CC8  6EDA               	movwf	fsr2h,c
 25262  012CCA  50DF               	movf	indf2,w,c
 25263  012CCC  6E0C               	movwf	(btemp+11)^0,c
 25264  012CCE  0060  F030  F005   	movff	btemp+11,btemp+4
 25265  012CD4  6A06               	clrf	(btemp+5)^0,c
 25266  012CD6  6A07               	clrf	(btemp+6)^0,c
 25267  012CD8  6A08               	clrf	(btemp+7)^0,c
 25268                           
 25269                           ;stkvar	_prod @ sp[(-13)+0]
 25270  012CDA  0EF3               	movlw	-13
 25271  012CDC  0060  F017  FFE3   	movff	btemp+4,plusw1
 25272  012CE2  0EF4               	movlw	-12
 25273  012CE4  0060  F01B  FFE3   	movff	btemp+5,plusw1
 25274  012CEA  0EF5               	movlw	-11
 25275  012CEC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 25276  012CF2  0EF6               	movlw	-10
 25277  012CF4  0060  F023  FFE3   	movff	btemp+7,plusw1
 25278                           
 25279                           ;stkvar	_b @ sp[(-13)+-4]
 25280  012CFA  0EF0               	movlw	240
 25281  012CFC  24E1               	addwf	fsr1l,w,c
 25282  012CFE  6ED9               	movwf	fsr2l,c
 25283  012D00  0EFF               	movlw	255
 25284  012D02  20E2               	addwfc	fsr1h,w,c
 25285  012D04  6EDA               	movwf	fsr2h,c
 25286  012D06  50DF               	movf	indf2,w,c
 25287  012D08  6E0C               	movwf	(btemp+11)^0,c
 25288                           
 25289                           ;stkvar	_a @ sp[(-13)+-8]
 25290  012D0A  0EEC               	movlw	236
 25291  012D0C  24E1               	addwf	fsr1l,w,c
 25292  012D0E  6ED9               	movwf	fsr2l,c
 25293  012D10  0EFF               	movlw	255
 25294  012D12  20E2               	addwfc	fsr1h,w,c
 25295  012D14  6EDA               	movwf	fsr2h,c
 25296  012D16  50DF               	movf	indf2,w,c
 25297  012D18  020C               	mulwf	(btemp+11)^0,c
 25298                           
 25299                           ;stkvar	_temp @ sp[(-13)+8]
 25300  012D1A  0EFB               	movlw	-5
 25301  012D1C  006F FFCF FFE3     	movff	prodl,plusw1
 25302  012D22  0EFC               	movlw	-4
 25303  012D24  006F FFD3 FFE3     	movff	prodh,plusw1
 25304                           
 25305                           ;stkvar	_grs @ sp[(-13)+4]
 25306  012D2A  50E1               	movf	fsr1l,w,c
 25307  012D2C  0FF7               	addlw	-9
 25308  012D2E  6ED9               	movwf	fsr2l,c
 25309  012D30  50E2               	movf	fsr1h,w,c
 25310  012D32  6EDA               	movwf	fsr2h,c
 25311  012D34  0EFF               	movlw	255
 25312  012D36  22DA               	addwfc	fsr2h,f,c
 25313                           
 25314                           ;stkvar	_temp @ sp[(-13)+8]
 25315  012D38  0EFB               	movlw	-5
 25316  012D3A  50E3               	movf	plusw1,w,c
 25317  012D3C  26DE               	addwf	postinc2,f,c
 25318  012D3E  0E00               	movlw	0
 25319  012D40  22DE               	addwfc	postinc2,f,c
 25320  012D42  22DE               	addwfc	postinc2,f,c
 25321  012D44  22DE               	addwfc	postinc2,f,c
 25322                           
 25323                           ;stkvar	_prod @ sp[(-13)+0]
 25324  012D46  50E1               	movf	fsr1l,w,c
 25325  012D48  0FF3               	addlw	-13
 25326  012D4A  6ED9               	movwf	fsr2l,c
 25327  012D4C  50E2               	movf	fsr1h,w,c
 25328  012D4E  6EDA               	movwf	fsr2h,c
 25329  012D50  0EFF               	movlw	255
 25330  012D52  22DA               	addwfc	fsr2h,f,c
 25331                           
 25332                           ;stkvar	_temp @ sp[(-13)+8]
 25333  012D54  0EFC               	movlw	252
 25334  012D56  24E1               	addwf	fsr1l,w,c
 25335  012D58  6EE9               	movwf	fsr0l,c
 25336  012D5A  0EFF               	movlw	255
 25337  012D5C  20E2               	addwfc	fsr1h,w,c
 25338  012D5E  6EEA               	movwf	fsr0h,c
 25339  012D60  50EF               	movf	indf0,w,c
 25340  012D62  26DE               	addwf	postinc2,f,c
 25341  012D64  0E00               	movlw	0
 25342  012D66  22DE               	addwfc	postinc2,f,c
 25343  012D68  22DE               	addwfc	postinc2,f,c
 25344  012D6A  22DE               	addwfc	postinc2,f,c
 25345                           
 25346                           ;stkvar	_b @ sp[(-13)+-4]
 25347  012D6C  0EF1               	movlw	241
 25348  012D6E  24E1               	addwf	fsr1l,w,c
 25349  012D70  6ED9               	movwf	fsr2l,c
 25350  012D72  0EFF               	movlw	255
 25351  012D74  20E2               	addwfc	fsr1h,w,c
 25352  012D76  6EDA               	movwf	fsr2h,c
 25353  012D78  50DF               	movf	indf2,w,c
 25354  012D7A  6E0C               	movwf	(btemp+11)^0,c
 25355                           
 25356                           ;stkvar	_a @ sp[(-13)+-8]
 25357  012D7C  0EEB               	movlw	-21
 25358  012D7E  50E3               	movf	plusw1,w,c
 25359  012D80  020C               	mulwf	(btemp+11)^0,c
 25360                           
 25361                           ;stkvar	_temp @ sp[(-13)+8]
 25362  012D82  0EFB               	movlw	-5
 25363  012D84  006F FFCF FFE3     	movff	prodl,plusw1
 25364  012D8A  0EFC               	movlw	-4
 25365  012D8C  006F FFD3 FFE3     	movff	prodh,plusw1
 25366                           
 25367                           ;stkvar	_grs @ sp[(-13)+4]
 25368  012D92  50E1               	movf	fsr1l,w,c
 25369  012D94  0FF7               	addlw	-9
 25370  012D96  6ED9               	movwf	fsr2l,c
 25371  012D98  50E2               	movf	fsr1h,w,c
 25372  012D9A  6EDA               	movwf	fsr2h,c
 25373  012D9C  0EFF               	movlw	255
 25374  012D9E  22DA               	addwfc	fsr2h,f,c
 25375                           
 25376                           ;stkvar	_temp @ sp[(-13)+8]
 25377  012DA0  0EFB               	movlw	-5
 25378  012DA2  50E3               	movf	plusw1,w,c
 25379  012DA4  26DE               	addwf	postinc2,f,c
 25380  012DA6  0E00               	movlw	0
 25381  012DA8  22DE               	addwfc	postinc2,f,c
 25382  012DAA  22DE               	addwfc	postinc2,f,c
 25383  012DAC  22DE               	addwfc	postinc2,f,c
 25384                           
 25385                           ;stkvar	_prod @ sp[(-13)+0]
 25386  012DAE  50E1               	movf	fsr1l,w,c
 25387  012DB0  0FF3               	addlw	-13
 25388  012DB2  6ED9               	movwf	fsr2l,c
 25389  012DB4  50E2               	movf	fsr1h,w,c
 25390  012DB6  6EDA               	movwf	fsr2h,c
 25391  012DB8  0EFF               	movlw	255
 25392  012DBA  22DA               	addwfc	fsr2h,f,c
 25393                           
 25394                           ;stkvar	_temp @ sp[(-13)+8]
 25395  012DBC  0EFC               	movlw	252
 25396  012DBE  24E1               	addwf	fsr1l,w,c
 25397  012DC0  6EE9               	movwf	fsr0l,c
 25398  012DC2  0EFF               	movlw	255
 25399  012DC4  20E2               	addwfc	fsr1h,w,c
 25400  012DC6  6EEA               	movwf	fsr0h,c
 25401  012DC8  50EF               	movf	indf0,w,c
 25402  012DCA  26DE               	addwf	postinc2,f,c
 25403  012DCC  0E00               	movlw	0
 25404  012DCE  22DE               	addwfc	postinc2,f,c
 25405  012DD0  22DE               	addwfc	postinc2,f,c
 25406  012DD2  22DE               	addwfc	postinc2,f,c
 25407                           
 25408                           ;stkvar	_grs @ sp[(-13)+4]
 25409  012DD4  50E1               	movf	fsr1l,w,c
 25410  012DD6  0FF7               	addlw	-9
 25411  012DD8  6ED9               	movwf	fsr2l,c
 25412  012DDA  50E2               	movf	fsr1h,w,c
 25413  012DDC  6EDA               	movwf	fsr2h,c
 25414  012DDE  0EFF               	movlw	255
 25415  012DE0  22DA               	addwfc	fsr2h,f,c
 25416  012DE2  0E08               	movlw	8
 25417  012DE4                     u6425:
 25418  012DE4  90D8               	bcf	status,0,c
 25419  012DE6  36DE               	rlcf	postinc2,f,c
 25420  012DE8  36DE               	rlcf	postinc2,f,c
 25421  012DEA  36DE               	rlcf	postinc2,f,c
 25422  012DEC  36DD               	rlcf	postdec2,f,c
 25423  012DEE  52DD               	movf	postdec2,f,c
 25424  012DF0  52DD               	movf	postdec2,f,c
 25425  012DF2  2EE8               	decfsz	wreg,f,c
 25426  012DF4  D7F7               	goto	u6425
 25427                           
 25428                           ;stkvar	_b @ sp[(-13)+-4]
 25429  012DF6  0EF0               	movlw	240
 25430  012DF8  24E1               	addwf	fsr1l,w,c
 25431  012DFA  6ED9               	movwf	fsr2l,c
 25432  012DFC  0EFF               	movlw	255
 25433  012DFE  20E2               	addwfc	fsr1h,w,c
 25434  012E00  6EDA               	movwf	fsr2h,c
 25435  012E02  50DF               	movf	indf2,w,c
 25436  012E04  6E0C               	movwf	(btemp+11)^0,c
 25437                           
 25438                           ;stkvar	_a @ sp[(-13)+-8]
 25439  012E06  0EEB               	movlw	-21
 25440  012E08  50E3               	movf	plusw1,w,c
 25441  012E0A  020C               	mulwf	(btemp+11)^0,c
 25442                           
 25443                           ;stkvar	_temp @ sp[(-13)+8]
 25444  012E0C  0EFB               	movlw	-5
 25445  012E0E  006F FFCF FFE3     	movff	prodl,plusw1
 25446  012E14  0EFC               	movlw	-4
 25447  012E16  006F FFD3 FFE3     	movff	prodh,plusw1
 25448                           
 25449                           ;stkvar	_temp @ sp[(-13)+8]
 25450  012E1C  0EFB               	movlw	-5
 25451  012E1E  006F FF8C  F00B    	movff	plusw1,btemp+10
 25452  012E24  0EFC               	movlw	-4
 25453  012E26  006F FF8C  F00C    	movff	plusw1,btemp+11
 25454                           
 25455                           ;stkvar	_grs @ sp[(-13)+4]
 25456  012E2C  50E1               	movf	fsr1l,w,c
 25457  012E2E  0FF7               	addlw	-9
 25458  012E30  6ED9               	movwf	fsr2l,c
 25459  012E32  50E2               	movf	fsr1h,w,c
 25460  012E34  6EDA               	movwf	fsr2h,c
 25461  012E36  0EFF               	movlw	255
 25462  012E38  22DA               	addwfc	fsr2h,f,c
 25463  012E3A  500B               	movf	(btemp+10)^0,w,c
 25464  012E3C  26DE               	addwf	postinc2,f,c
 25465  012E3E  500C               	movf	(btemp+11)^0,w,c
 25466  012E40  22DE               	addwfc	postinc2,f,c
 25467  012E42  0E00               	movlw	0
 25468  012E44  22DE               	addwfc	postinc2,f,c
 25469  012E46  22DE               	addwfc	postinc2,f,c
 25470                           
 25471                           ;stkvar	_b @ sp[(-13)+-4]
 25472  012E48  0EEF               	movlw	-17
 25473  012E4A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25474                           
 25475                           ;stkvar	_a @ sp[(-13)+-8]
 25476  012E50  0EEC               	movlw	236
 25477  012E52  24E1               	addwf	fsr1l,w,c
 25478  012E54  6ED9               	movwf	fsr2l,c
 25479  012E56  0EFF               	movlw	255
 25480  012E58  20E2               	addwfc	fsr1h,w,c
 25481  012E5A  6EDA               	movwf	fsr2h,c
 25482  012E5C  50DF               	movf	indf2,w,c
 25483  012E5E  020C               	mulwf	(btemp+11)^0,c
 25484                           
 25485                           ;stkvar	_temp @ sp[(-13)+8]
 25486  012E60  0EFB               	movlw	-5
 25487  012E62  006F FFCF FFE3     	movff	prodl,plusw1
 25488  012E68  0EFC               	movlw	-4
 25489  012E6A  006F FFD3 FFE3     	movff	prodh,plusw1
 25490                           
 25491                           ;stkvar	_temp @ sp[(-13)+8]
 25492  012E70  0EFB               	movlw	-5
 25493  012E72  006F FF8C  F00B    	movff	plusw1,btemp+10
 25494  012E78  0EFC               	movlw	-4
 25495  012E7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25496                           
 25497                           ;stkvar	_grs @ sp[(-13)+4]
 25498  012E80  50E1               	movf	fsr1l,w,c
 25499  012E82  0FF7               	addlw	-9
 25500  012E84  6ED9               	movwf	fsr2l,c
 25501  012E86  50E2               	movf	fsr1h,w,c
 25502  012E88  6EDA               	movwf	fsr2h,c
 25503  012E8A  0EFF               	movlw	255
 25504  012E8C  22DA               	addwfc	fsr2h,f,c
 25505  012E8E  500B               	movf	(btemp+10)^0,w,c
 25506  012E90  26DE               	addwf	postinc2,f,c
 25507  012E92  500C               	movf	(btemp+11)^0,w,c
 25508  012E94  22DE               	addwfc	postinc2,f,c
 25509  012E96  0E00               	movlw	0
 25510  012E98  22DE               	addwfc	postinc2,f,c
 25511  012E9A  22DE               	addwfc	postinc2,f,c
 25512                           
 25513                           ;stkvar	_grs @ sp[(-13)+4]
 25514  012E9C  50E1               	movf	fsr1l,w,c
 25515  012E9E  0FF7               	addlw	-9
 25516  012EA0  6ED9               	movwf	fsr2l,c
 25517  012EA2  50E2               	movf	fsr1h,w,c
 25518  012EA4  6EDA               	movwf	fsr2h,c
 25519  012EA6  0EFF               	movlw	255
 25520  012EA8  22DA               	addwfc	fsr2h,f,c
 25521  012EAA  0E08               	movlw	8
 25522  012EAC                     u6435:
 25523  012EAC  90D8               	bcf	status,0,c
 25524  012EAE  36DE               	rlcf	postinc2,f,c
 25525  012EB0  36DE               	rlcf	postinc2,f,c
 25526  012EB2  36DE               	rlcf	postinc2,f,c
 25527  012EB4  36DD               	rlcf	postdec2,f,c
 25528  012EB6  52DD               	movf	postdec2,f,c
 25529  012EB8  52DD               	movf	postdec2,f,c
 25530  012EBA  2EE8               	decfsz	wreg,f,c
 25531  012EBC  D7F7               	goto	u6435
 25532                           
 25533                           ;stkvar	_b @ sp[(-13)+-4]
 25534  012EBE  0EEF               	movlw	-17
 25535  012EC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 25536                           
 25537                           ;stkvar	_a @ sp[(-13)+-8]
 25538  012EC6  0EEB               	movlw	-21
 25539  012EC8  50E3               	movf	plusw1,w,c
 25540  012ECA  020C               	mulwf	(btemp+11)^0,c
 25541                           
 25542                           ;stkvar	_temp @ sp[(-13)+8]
 25543  012ECC  0EFB               	movlw	-5
 25544  012ECE  006F FFCF FFE3     	movff	prodl,plusw1
 25545  012ED4  0EFC               	movlw	-4
 25546  012ED6  006F FFD3 FFE3     	movff	prodh,plusw1
 25547                           
 25548                           ;stkvar	_temp @ sp[(-13)+8]
 25549  012EDC  0EFB               	movlw	-5
 25550  012EDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 25551  012EE4  0EFC               	movlw	-4
 25552  012EE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 25553                           
 25554                           ;stkvar	_grs @ sp[(-13)+4]
 25555  012EEC  50E1               	movf	fsr1l,w,c
 25556  012EEE  0FF7               	addlw	-9
 25557  012EF0  6ED9               	movwf	fsr2l,c
 25558  012EF2  50E2               	movf	fsr1h,w,c
 25559  012EF4  6EDA               	movwf	fsr2h,c
 25560  012EF6  0EFF               	movlw	255
 25561  012EF8  22DA               	addwfc	fsr2h,f,c
 25562  012EFA  500B               	movf	(btemp+10)^0,w,c
 25563  012EFC  26DE               	addwf	postinc2,f,c
 25564  012EFE  500C               	movf	(btemp+11)^0,w,c
 25565  012F00  22DE               	addwfc	postinc2,f,c
 25566  012F02  0E00               	movlw	0
 25567  012F04  22DE               	addwfc	postinc2,f,c
 25568  012F06  22DE               	addwfc	postinc2,f,c
 25569                           
 25570                           ;stkvar	_b @ sp[(-13)+-4]
 25571  012F08  0EF0               	movlw	240
 25572  012F0A  24E1               	addwf	fsr1l,w,c
 25573  012F0C  6ED9               	movwf	fsr2l,c
 25574  012F0E  0EFF               	movlw	255
 25575  012F10  20E2               	addwfc	fsr1h,w,c
 25576  012F12  6EDA               	movwf	fsr2h,c
 25577  012F14  50DF               	movf	indf2,w,c
 25578  012F16  6E0C               	movwf	(btemp+11)^0,c
 25579                           
 25580                           ;stkvar	_a @ sp[(-13)+-8]
 25581  012F18  0EED               	movlw	237
 25582  012F1A  24E1               	addwf	fsr1l,w,c
 25583  012F1C  6ED9               	movwf	fsr2l,c
 25584  012F1E  0EFF               	movlw	255
 25585  012F20  20E2               	addwfc	fsr1h,w,c
 25586  012F22  6EDA               	movwf	fsr2h,c
 25587  012F24  50DF               	movf	indf2,w,c
 25588  012F26  020C               	mulwf	(btemp+11)^0,c
 25589                           
 25590                           ;stkvar	_temp @ sp[(-13)+8]
 25591  012F28  0EFB               	movlw	-5
 25592  012F2A  006F FFCF FFE3     	movff	prodl,plusw1
 25593  012F30  0EFC               	movlw	-4
 25594  012F32  006F FFD3 FFE3     	movff	prodh,plusw1
 25595                           
 25596                           ;stkvar	_temp @ sp[(-13)+8]
 25597  012F38  0EFB               	movlw	-5
 25598  012F3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 25599  012F40  0EFC               	movlw	-4
 25600  012F42  006F FF8C  F00C    	movff	plusw1,btemp+11
 25601                           
 25602                           ;stkvar	_prod @ sp[(-13)+0]
 25603  012F48  50E1               	movf	fsr1l,w,c
 25604  012F4A  0FF3               	addlw	-13
 25605  012F4C  6ED9               	movwf	fsr2l,c
 25606  012F4E  50E2               	movf	fsr1h,w,c
 25607  012F50  6EDA               	movwf	fsr2h,c
 25608  012F52  0EFF               	movlw	255
 25609  012F54  22DA               	addwfc	fsr2h,f,c
 25610  012F56  500B               	movf	(btemp+10)^0,w,c
 25611  012F58  26DE               	addwf	postinc2,f,c
 25612  012F5A  500C               	movf	(btemp+11)^0,w,c
 25613  012F5C  22DE               	addwfc	postinc2,f,c
 25614  012F5E  0E00               	movlw	0
 25615  012F60  22DE               	addwfc	postinc2,f,c
 25616  012F62  22DE               	addwfc	postinc2,f,c
 25617                           
 25618                           ;stkvar	_b @ sp[(-13)+-4]
 25619  012F64  0EF1               	movlw	241
 25620  012F66  24E1               	addwf	fsr1l,w,c
 25621  012F68  6ED9               	movwf	fsr2l,c
 25622  012F6A  0EFF               	movlw	255
 25623  012F6C  20E2               	addwfc	fsr1h,w,c
 25624  012F6E  6EDA               	movwf	fsr2h,c
 25625  012F70  50DF               	movf	indf2,w,c
 25626  012F72  6E0C               	movwf	(btemp+11)^0,c
 25627                           
 25628                           ;stkvar	_a @ sp[(-13)+-8]
 25629  012F74  0EEC               	movlw	236
 25630  012F76  24E1               	addwf	fsr1l,w,c
 25631  012F78  6ED9               	movwf	fsr2l,c
 25632  012F7A  0EFF               	movlw	255
 25633  012F7C  20E2               	addwfc	fsr1h,w,c
 25634  012F7E  6EDA               	movwf	fsr2h,c
 25635  012F80  50DF               	movf	indf2,w,c
 25636  012F82  020C               	mulwf	(btemp+11)^0,c
 25637                           
 25638                           ;stkvar	_temp @ sp[(-13)+8]
 25639  012F84  0EFB               	movlw	-5
 25640  012F86  006F FFCF FFE3     	movff	prodl,plusw1
 25641  012F8C  0EFC               	movlw	-4
 25642  012F8E  006F FFD3 FFE3     	movff	prodh,plusw1
 25643                           
 25644                           ;stkvar	_temp @ sp[(-13)+8]
 25645  012F94  0EFB               	movlw	-5
 25646  012F96  006F FF8C  F00B    	movff	plusw1,btemp+10
 25647  012F9C  0EFC               	movlw	-4
 25648  012F9E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25649                           
 25650                           ;stkvar	_prod @ sp[(-13)+0]
 25651  012FA4  50E1               	movf	fsr1l,w,c
 25652  012FA6  0FF3               	addlw	-13
 25653  012FA8  6ED9               	movwf	fsr2l,c
 25654  012FAA  50E2               	movf	fsr1h,w,c
 25655  012FAC  6EDA               	movwf	fsr2h,c
 25656  012FAE  0EFF               	movlw	255
 25657  012FB0  22DA               	addwfc	fsr2h,f,c
 25658  012FB2  500B               	movf	(btemp+10)^0,w,c
 25659  012FB4  26DE               	addwf	postinc2,f,c
 25660  012FB6  500C               	movf	(btemp+11)^0,w,c
 25661  012FB8  22DE               	addwfc	postinc2,f,c
 25662  012FBA  0E00               	movlw	0
 25663  012FBC  22DE               	addwfc	postinc2,f,c
 25664  012FBE  22DE               	addwfc	postinc2,f,c
 25665                           
 25666                           ;stkvar	_b @ sp[(-13)+-4]
 25667  012FC0  0EF1               	movlw	241
 25668  012FC2  24E1               	addwf	fsr1l,w,c
 25669  012FC4  6ED9               	movwf	fsr2l,c
 25670  012FC6  0EFF               	movlw	255
 25671  012FC8  20E2               	addwfc	fsr1h,w,c
 25672  012FCA  6EDA               	movwf	fsr2h,c
 25673  012FCC  50DF               	movf	indf2,w,c
 25674  012FCE  6E0C               	movwf	(btemp+11)^0,c
 25675                           
 25676                           ;stkvar	_a @ sp[(-13)+-8]
 25677  012FD0  0EED               	movlw	237
 25678  012FD2  24E1               	addwf	fsr1l,w,c
 25679  012FD4  6ED9               	movwf	fsr2l,c
 25680  012FD6  0EFF               	movlw	255
 25681  012FD8  20E2               	addwfc	fsr1h,w,c
 25682  012FDA  6EDA               	movwf	fsr2h,c
 25683  012FDC  50DF               	movf	indf2,w,c
 25684  012FDE  020C               	mulwf	(btemp+11)^0,c
 25685                           
 25686                           ;stkvar	_temp @ sp[(-13)+8]
 25687  012FE0  0EFB               	movlw	-5
 25688  012FE2  006F FFCF FFE3     	movff	prodl,plusw1
 25689  012FE8  0EFC               	movlw	-4
 25690  012FEA  006F FFD3 FFE3     	movff	prodh,plusw1
 25691                           
 25692                           ;stkvar	_temp @ sp[(-13)+8]
 25693  012FF0  0EFB               	movlw	-5
 25694  012FF2  006F FF8C  F00B    	movff	plusw1,btemp+10
 25695  012FF8  0EFC               	movlw	-4
 25696  012FFA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25697  013000  500B               	movf	(btemp+10)^0,w,c
 25698  013002  6E05               	movwf	(btemp+4)^0,c
 25699  013004  500C               	movf	(btemp+11)^0,w,c
 25700  013006  6E06               	movwf	(btemp+5)^0,c
 25701  013008  6A07               	clrf	(btemp+6)^0,c
 25702  01300A  6A08               	clrf	(btemp+7)^0,c
 25703  01300C  0060  F01C  F008   	movff	btemp+6,btemp+7
 25704  013012  0060  F018  F007   	movff	btemp+5,btemp+6
 25705  013018  0060  F014  F006   	movff	btemp+4,btemp+5
 25706  01301E  6A05               	clrf	(btemp+4)^0,c
 25707                           
 25708                           ;stkvar	_prod @ sp[(-13)+0]
 25709  013020  50E1               	movf	fsr1l,w,c
 25710  013022  0FF3               	addlw	-13
 25711  013024  6ED9               	movwf	fsr2l,c
 25712  013026  50E2               	movf	fsr1h,w,c
 25713  013028  6EDA               	movwf	fsr2h,c
 25714  01302A  0EFF               	movlw	255
 25715  01302C  22DA               	addwfc	fsr2h,f,c
 25716  01302E  5005               	movf	(btemp+4)^0,w,c
 25717  013030  26DE               	addwf	postinc2,f,c
 25718  013032  5006               	movf	(btemp+5)^0,w,c
 25719  013034  22DE               	addwfc	postinc2,f,c
 25720  013036  5007               	movf	(btemp+6)^0,w,c
 25721  013038  22DE               	addwfc	postinc2,f,c
 25722  01303A  5008               	movf	(btemp+7)^0,w,c
 25723  01303C  22DE               	addwfc	postinc2,f,c
 25724                           
 25725                           ;stkvar	_prod @ sp[(-13)+0]
 25726  01303E  50E1               	movf	fsr1l,w,c
 25727  013040  0FF3               	addlw	-13
 25728  013042  6ED9               	movwf	fsr2l,c
 25729  013044  50E2               	movf	fsr1h,w,c
 25730  013046  6EDA               	movwf	fsr2h,c
 25731  013048  0EFF               	movlw	255
 25732  01304A  22DA               	addwfc	fsr2h,f,c
 25733                           
 25734                           ;stkvar	_grs @ sp[(-13)+4]
 25735  01304C  0EFA               	movlw	250
 25736  01304E  24E1               	addwf	fsr1l,w,c
 25737  013050  6EE9               	movwf	fsr0l,c
 25738  013052  0EFF               	movlw	255
 25739  013054  20E2               	addwfc	fsr1h,w,c
 25740  013056  6EEA               	movwf	fsr0h,c
 25741  013058  50EF               	movf	indf0,w,c
 25742  01305A  26DE               	addwf	postinc2,f,c
 25743  01305C  0E00               	movlw	0
 25744  01305E  22DE               	addwfc	postinc2,f,c
 25745  013060  22DE               	addwfc	postinc2,f,c
 25746  013062  22DE               	addwfc	postinc2,f,c
 25747                           
 25748                           ;stkvar	_grs @ sp[(-13)+4]
 25749  013064  50E1               	movf	fsr1l,w,c
 25750  013066  0FF7               	addlw	-9
 25751  013068  6ED9               	movwf	fsr2l,c
 25752  01306A  50E2               	movf	fsr1h,w,c
 25753  01306C  6EDA               	movwf	fsr2h,c
 25754  01306E  0EFF               	movlw	255
 25755  013070  22DA               	addwfc	fsr2h,f,c
 25756  013072  0E08               	movlw	8
 25757  013074                     u6445:
 25758  013074  90D8               	bcf	status,0,c
 25759  013076  36DE               	rlcf	postinc2,f,c
 25760  013078  36DE               	rlcf	postinc2,f,c
 25761  01307A  36DE               	rlcf	postinc2,f,c
 25762  01307C  36DD               	rlcf	postdec2,f,c
 25763  01307E  52DD               	movf	postdec2,f,c
 25764  013080  52DD               	movf	postdec2,f,c
 25765  013082  2EE8               	decfsz	wreg,f,c
 25766  013084  D7F7               	goto	u6445
 25767  013086  0E82               	movlw	130
 25768  013088  6E0B               	movwf	(btemp+10)^0,c
 25769  01308A  0EFF               	movlw	255
 25770  01308C  6E0C               	movwf	(btemp+11)^0,c
 25771                           
 25772                           ;stkvar	_bexp @ sp[(-13)+10]
 25773  01308E  0EFD               	movlw	-3
 25774  013090  50E3               	movf	plusw1,w,c
 25775  013092  6E09               	movwf	(btemp+8)^0,c
 25776  013094  6A0A               	clrf	(btemp+9)^0,c
 25777                           
 25778                           ;stkvar	_aexp @ sp[(-13)+11]
 25779  013096  0EFE               	movlw	-2
 25780  013098  50E3               	movf	plusw1,w,c
 25781  01309A  2609               	addwf	(btemp+8)^0,f,c
 25782  01309C  0E00               	movlw	0
 25783  01309E  220A               	addwfc	(btemp+9)^0,f,c
 25784  0130A0  500B               	movf	(btemp+10)^0,w,c
 25785  0130A2  2609               	addwf	(btemp+8)^0,f,c
 25786  0130A4  500C               	movf	(btemp+11)^0,w,c
 25787  0130A6  220A               	addwfc	(btemp+9)^0,f,c
 25788                           
 25789                           ;stkvar	_temp @ sp[(-13)+8]
 25790  0130A8  0EFB               	movlw	-5
 25791  0130AA  0060  F027  FFE3   	movff	btemp+8,plusw1
 25792  0130B0  0EFC               	movlw	-4
 25793  0130B2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25794  0130B8  D021               	goto	l7809
 25795  0130BA                     l7799:
 25796                           
 25797                           ;stkvar	_prod @ sp[(-13)+0]
 25798  0130BA  90D8               	bcf	status,0,c
 25799  0130BC  0EF3               	movlw	-13
 25800  0130BE  36E3               	rlcf	plusw1,f,c
 25801  0130C0  0EF4               	movlw	-12
 25802  0130C2  36E3               	rlcf	plusw1,f,c
 25803  0130C4  0EF5               	movlw	-11
 25804  0130C6  36E3               	rlcf	plusw1,f,c
 25805  0130C8  0EF6               	movlw	-10
 25806  0130CA  36E3               	rlcf	plusw1,f,c
 25807                           
 25808                           ;stkvar	_grs @ sp[(-13)+4]
 25809  0130CC  0EFA               	movlw	-6
 25810  0130CE  AEE3               	btfss	plusw1,7,c
 25811  0130D0  D002               	goto	l7805
 25812                           
 25813                           ;stkvar	_prod @ sp[(-13)+0]
 25814  0130D2  0EF3               	movlw	-13
 25815  0130D4  80E3               	bsf	plusw1,0,c
 25816  0130D6                     l7805:
 25817                           
 25818                           ;stkvar	_grs @ sp[(-13)+4]
 25819  0130D6  90D8               	bcf	status,0,c
 25820  0130D8  0EF7               	movlw	-9
 25821  0130DA  36E3               	rlcf	plusw1,f,c
 25822  0130DC  0EF8               	movlw	-8
 25823  0130DE  36E3               	rlcf	plusw1,f,c
 25824  0130E0  0EF9               	movlw	-7
 25825  0130E2  36E3               	rlcf	plusw1,f,c
 25826  0130E4  0EFA               	movlw	-6
 25827  0130E6  36E3               	rlcf	plusw1,f,c
 25828                           
 25829                           ;stkvar	_temp @ sp[(-13)+8]
 25830  0130E8  50E1               	movf	fsr1l,w,c
 25831  0130EA  0FFB               	addlw	-5
 25832  0130EC  6ED9               	movwf	fsr2l,c
 25833  0130EE  50E2               	movf	fsr1h,w,c
 25834  0130F0  6EDA               	movwf	fsr2h,c
 25835  0130F2  0EFF               	movlw	255
 25836  0130F4  22DA               	addwfc	fsr2h,f,c
 25837  0130F6  06DE               	decf	postinc2,f,c
 25838  0130F8  0E00               	movlw	0
 25839  0130FA  5ADD               	subwfb	postdec2,f,c
 25840  0130FC                     l7809:
 25841                           
 25842                           ;stkvar	_prod @ sp[(-13)+0]
 25843  0130FC  0EF5               	movlw	-11
 25844  0130FE  AEE3               	btfss	plusw1,7,c
 25845  013100  D7DC               	goto	l7799
 25846                           
 25847                           ;stkvar	_aexp @ sp[(-13)+11]
 25848  013102  0EFE               	movlw	-2
 25849  013104  6AE3               	clrf	plusw1,c
 25850                           
 25851                           ;stkvar	_grs @ sp[(-13)+4]
 25852  013106  0EFA               	movlw	-6
 25853  013108  AEE3               	btfss	plusw1,7,c
 25854  01310A  D020               	goto	l7823
 25855                           
 25856                           ;stkvar	_grs @ sp[(-13)+4]
 25857  01310C  50E1               	movf	fsr1l,w,c
 25858  01310E  0FF7               	addlw	-9
 25859  013110  6ED9               	movwf	fsr2l,c
 25860  013112  50E2               	movf	fsr1h,w,c
 25861  013114  6EDA               	movwf	fsr2h,c
 25862  013116  0EFF               	movlw	255
 25863  013118  22DA               	addwfc	fsr2h,f,c
 25864  01311A  0EFF               	movlw	255
 25865  01311C  14DE               	andwf	postinc2,w,c
 25866  01311E  6E09               	movwf	(btemp+8)^0,c
 25867  013120  0EFF               	movlw	255
 25868  013122  14DE               	andwf	postinc2,w,c
 25869  013124  6E0A               	movwf	(btemp+9)^0,c
 25870  013126  0EFF               	movlw	255
 25871  013128  14DE               	andwf	postinc2,w,c
 25872  01312A  6E0B               	movwf	(btemp+10)^0,c
 25873  01312C  0E7F               	movlw	127
 25874  01312E  14DE               	andwf	postinc2,w,c
 25875  013130  6E0C               	movwf	(btemp+11)^0,c
 25876  013132  5009               	movf	(btemp+8)^0,w,c
 25877  013134  100A               	iorwf	(btemp+9)^0,w,c
 25878  013136  100B               	iorwf	(btemp+10)^0,w,c
 25879  013138  100C               	iorwf	(btemp+11)^0,w,c
 25880  01313A  B4D8               	btfsc	status,2,c
 25881  01313C  D004               	goto	l7819
 25882  01313E                     u6480:
 25883                           
 25884                           ;stkvar	_aexp @ sp[(-13)+11]
 25885  01313E  0EFE               	movlw	-2
 25886  013140  6AE3               	clrf	plusw1,c
 25887  013142  2AE3               	incf	plusw1,f,c
 25888  013144  D003               	goto	l7823
 25889  013146                     l7819:
 25890                           
 25891                           ;stkvar	_prod @ sp[(-13)+0]
 25892  013146  0EF3               	movlw	-13
 25893  013148  B0E3               	btfsc	plusw1,0,c
 25894  01314A  D7F9               	goto	u6480
 25895  01314C                     l7823:
 25896                           
 25897                           ;stkvar	_aexp @ sp[(-13)+11]
 25898  01314C  0EFE               	movlw	-2
 25899  01314E  50E3               	movf	plusw1,w,c
 25900  013150  B4D8               	btfsc	status,2,c
 25901  013152  D036               	goto	l7833
 25902                           
 25903                           ;stkvar	_prod @ sp[(-13)+0]
 25904  013154  50E1               	movf	fsr1l,w,c
 25905  013156  0FF3               	addlw	-13
 25906  013158  6ED9               	movwf	fsr2l,c
 25907  01315A  50E2               	movf	fsr1h,w,c
 25908  01315C  6EDA               	movwf	fsr2h,c
 25909  01315E  0EFF               	movlw	255
 25910  013160  22DA               	addwfc	fsr2h,f,c
 25911  013162  2ADE               	incf	postinc2,f,c
 25912  013164  0E00               	movlw	0
 25913  013166  22DE               	addwfc	postinc2,f,c
 25914  013168  22DE               	addwfc	postinc2,f,c
 25915  01316A  22DE               	addwfc	postinc2,f,c
 25916                           
 25917                           ;stkvar	_prod @ sp[(-13)+0]
 25918  01316C  0EF6               	movlw	-10
 25919  01316E  A0E3               	btfss	plusw1,0,c
 25920  013170  D027               	goto	l7833
 25921  013172  0E01               	movlw	1
 25922  013174  6E0C               	movwf	(btemp+11)^0,c
 25923                           
 25924                           ;stkvar	_prod @ sp[(-13)+0]
 25925  013176  50E1               	movf	fsr1l,w,c
 25926  013178  0FF3               	addlw	-13
 25927  01317A  6ED9               	movwf	fsr2l,c
 25928  01317C  50E2               	movf	fsr1h,w,c
 25929  01317E  6EDA               	movwf	fsr2h,c
 25930  013180  0EFF               	movlw	255
 25931  013182  22DA               	addwfc	fsr2h,f,c
 25932  013184  280C               	incf	(btemp+11)^0,w,c
 25933  013186  52DE               	movf	postinc2,f,c
 25934  013188  D008               	goto	u6520
 25935  01318A                     u6525:
 25936  01318A  52DE               	movf	postinc2,f,c
 25937  01318C  90D8               	bcf	status,0,c
 25938  01318E  BEDC               	btfsc	preinc2,7,c
 25939  013190  80D8               	bsf	status,0,c
 25940  013192  32DD               	rrcf	postdec2,f,c
 25941  013194  32DD               	rrcf	postdec2,f,c
 25942  013196  32DD               	rrcf	postdec2,f,c
 25943  013198  32DE               	rrcf	postinc2,f,c
 25944  01319A                     u6520:
 25945  01319A  2EE8               	decfsz	wreg,f,c
 25946  01319C  D7F6               	goto	u6525
 25947                           
 25948                           ;stkvar	_temp @ sp[(-13)+8]
 25949  01319E  0EFB               	movlw	-5
 25950  0131A0  50E3               	movf	plusw1,w,c
 25951  0131A2  0F01               	addlw	1
 25952  0131A4  6E01               	movwf	btemp^0,c
 25953  0131A6  0EFB               	movlw	-5
 25954  0131A8  0060  F007  FFE3   	movff	btemp,plusw1
 25955  0131AE  6A01               	clrf	btemp^0,c
 25956  0131B0  0EFC               	movlw	-4
 25957  0131B2  50E3               	movf	plusw1,w,c
 25958  0131B4  2001               	addwfc	btemp^0,w,c
 25959  0131B6  6E01               	movwf	btemp^0,c
 25960  0131B8  0EFC               	movlw	-4
 25961  0131BA  0060  F007  FFE3   	movff	btemp,plusw1
 25962  0131C0                     l7833:
 25963                           
 25964                           ;stkvar	_temp @ sp[(-13)+8]
 25965  0131C0  0EFC               	movlw	-4
 25966  0131C2  BEE3               	btfsc	plusw1,7,c
 25967  0131C4  D020               	goto	l7837
 25968  0131C6  0EFC               	movlw	-4
 25969  0131C8  50E3               	movf	plusw1,w,c
 25970  0131CA  E104               	bnz	u6530
 25971  0131CC  0EFB               	movlw	-5
 25972  0131CE  28E3               	incf	plusw1,w,c
 25973  0131D0  A0D8               	btfss	status,0,c
 25974  0131D2  D019               	goto	l7837
 25975  0131D4                     u6530:
 25976  0131D4  0E00               	movlw	0
 25977  0131D6  6E09               	movwf	(btemp+8)^0,c
 25978  0131D8  0E00               	movlw	0
 25979  0131DA  6E0A               	movwf	(btemp+9)^0,c
 25980  0131DC  0E80               	movlw	128
 25981  0131DE  6E0B               	movwf	(btemp+10)^0,c
 25982  0131E0  0E7F               	movlw	127
 25983  0131E2  6E0C               	movwf	(btemp+11)^0,c
 25984                           
 25985                           ;stkvar	_prod @ sp[(-13)+0]
 25986  0131E4  0EF3               	movlw	-13
 25987  0131E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 25988  0131EC  0EF4               	movlw	-12
 25989  0131EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25990  0131F4  0EF5               	movlw	-11
 25991  0131F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25992  0131FC  0EF6               	movlw	-10
 25993  0131FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25994  013204  D044               	goto	l7853
 25995  013206                     l7837:
 25996                           
 25997                           ;stkvar	_temp @ sp[(-13)+8]
 25998  013206  0EFC               	movlw	-4
 25999  013208  BEE3               	btfsc	plusw1,7,c
 26000  01320A  D007               	goto	u6540
 26001  01320C  0EFC               	movlw	-4
 26002  01320E  50E3               	movf	plusw1,w,c
 26003  013210  E10F               	bnz	l7843
 26004  013212  0EFB               	movlw	-5
 26005  013214  04E3               	decf	plusw1,w,c
 26006  013216  B0D8               	btfsc	status,0,c
 26007  013218  D00B               	goto	l7843
 26008  01321A                     u6540:
 26009                           
 26010                           ;stkvar	_prod @ sp[(-13)+0]
 26011  01321A  0EF3               	movlw	-13
 26012  01321C  6AE3               	clrf	plusw1,c
 26013  01321E  0EF4               	movlw	-12
 26014  013220  6AE3               	clrf	plusw1,c
 26015  013222  0EF5               	movlw	-11
 26016  013224  6AE3               	clrf	plusw1,c
 26017  013226  0EF6               	movlw	-10
 26018  013228  6AE3               	clrf	plusw1,c
 26019                           
 26020                           ;stkvar	_sign @ sp[(-13)+12]
 26021  01322A  0EFF               	movlw	-1
 26022  01322C  6AE3               	clrf	plusw1,c
 26023  01322E  D02F               	goto	l7853
 26024  013230                     l7843:
 26025                           
 26026                           ;stkvar	_temp @ sp[(-13)+8]
 26027                           ;stkvar	_bexp @ sp[(-13)+10]
 26028  013230  0EFB               	movlw	-5
 26029  013232  006F FF8C  F001    	movff	plusw1,btemp
 26030  013238  0EFD               	movlw	-3
 26031  01323A  0060  F007  FFE3   	movff	btemp,plusw1
 26032                           
 26033                           ;stkvar	_prod @ sp[(-13)+0]
 26034  013240  50E1               	movf	fsr1l,w,c
 26035  013242  0FF3               	addlw	-13
 26036  013244  6ED9               	movwf	fsr2l,c
 26037  013246  50E2               	movf	fsr1h,w,c
 26038  013248  6EDA               	movwf	fsr2h,c
 26039  01324A  0EFF               	movlw	255
 26040  01324C  22DA               	addwfc	fsr2h,f,c
 26041  01324E  0EFF               	movlw	255
 26042  013250  16DE               	andwf	postinc2,f,c
 26043  013252  0EFF               	movlw	255
 26044  013254  16DE               	andwf	postinc2,f,c
 26045  013256  0E7F               	movlw	127
 26046  013258  16DE               	andwf	postinc2,f,c
 26047  01325A  0E00               	movlw	0
 26048  01325C  16DE               	andwf	postinc2,f,c
 26049                           
 26050                           ;stkvar	_bexp @ sp[(-13)+10]
 26051  01325E  0EFD               	movlw	-3
 26052  013260  A0E3               	btfss	plusw1,0,c
 26053  013262  D008               	goto	l7851
 26054                           
 26055                           ;stkvar	_prod @ sp[(-13)+0]
 26056  013264  0EF5               	movlw	245
 26057  013266  24E1               	addwf	fsr1l,w,c
 26058  013268  6ED9               	movwf	fsr2l,c
 26059  01326A  0EFF               	movlw	255
 26060  01326C  20E2               	addwfc	fsr1h,w,c
 26061  01326E  6EDA               	movwf	fsr2h,c
 26062  013270  0E00               	movlw	0
 26063  013272  8EDB               	bsf	plusw2,7,c
 26064  013274                     l7851:
 26065                           
 26066                           ;stkvar	_prod @ sp[(-13)+0]
 26067  013274  0EF6               	movlw	246
 26068  013276  24E1               	addwf	fsr1l,w,c
 26069  013278  6ED9               	movwf	fsr2l,c
 26070  01327A  0EFF               	movlw	255
 26071  01327C  20E2               	addwfc	fsr1h,w,c
 26072  01327E  6EDA               	movwf	fsr2h,c
 26073                           
 26074                           ;stkvar	_bexp @ sp[(-13)+10]
 26075  013280  0EFD               	movlw	-3
 26076  013282  006F FF8C  F00C    	movff	plusw1,btemp+11
 26077  013288  90D8               	bcf	status,0,c
 26078  01328A  300C               	rrcf	(btemp+11)^0,w,c
 26079  01328C  6EDF               	movwf	indf2,c
 26080  01328E                     l7853:
 26081                           
 26082                           ;stkvar	_sign @ sp[(-13)+12]
 26083  01328E  0EFF               	movlw	-1
 26084  013290  006F FF8C  F00C    	movff	plusw1,btemp+11
 26085                           
 26086                           ;stkvar	_prod @ sp[(-13)+0]
 26087  013296  0EF6               	movlw	246
 26088  013298  24E1               	addwf	fsr1l,w,c
 26089  01329A  6ED9               	movwf	fsr2l,c
 26090  01329C  0EFF               	movlw	255
 26091  01329E  20E2               	addwfc	fsr1h,w,c
 26092  0132A0  6EDA               	movwf	fsr2h,c
 26093  0132A2  500C               	movf	(btemp+11)^0,w,c
 26094  0132A4  12DF               	iorwf	indf2,f,c
 26095                           
 26096                           ;stkvar	_prod @ sp[(-13)+0]
 26097  0132A6  0EF3               	movlw	-13
 26098  0132A8  006F FF8C  F001    	movff	plusw1,btemp
 26099  0132AE  0EF4               	movlw	-12
 26100  0132B0  006F FF8C  F002    	movff	plusw1,btemp+1
 26101  0132B6  0EF5               	movlw	-11
 26102  0132B8  006F FF8C  F003    	movff	plusw1,btemp+2
 26103  0132BE  0EF6               	movlw	-10
 26104  0132C0  006F FF8C  F004    	movff	plusw1,btemp+3
 26105  0132C6                     l2888:
 26106                           
 26107                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 26108  0132C6  0EEB               	movlw	235
 26109  0132C8  26E1               	addwf	fsr1l,f,c
 26110  0132CA  0EFF               	movlw	255
 26111  0132CC  22E2               	addwfc	fsr1h,f,c
 26112  0132CE  0012               	return		;funcret
 26113  0132D0                     __end_of___flmul:
 26114                           	opt callstack 0
 26115                           
 26116 ;; *************** function _SYSTEM_Initialize *****************
 26117 ;; Defined at:
 26118 ;;		line 50 in file "mcc_generated_files/mcc.c"
 26119 ;; Parameters:    Size  Location     Type
 26120 ;;		None
 26121 ;; Auto vars:     Size  Location     Type
 26122 ;;		None
 26123 ;; Return value:  Size  Location     Type
 26124 ;;                  1  [STACK] void 
 26125 ;; Registers used:
 26126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 26127 ;; Tracked objects:
 26128 ;;		On entry : 0/0
 26129 ;;		On exit  : 3F/3C
 26130 ;;		Unchanged: 0/0
 26131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26136 ;;Total ram usage:        0 bytes
 26137 ;; Hardware stack levels used:    1
 26138 ;; Hardware stack levels required when called:   17
 26139 ;; This function calls:
 26140 ;;		_ADCC_Initialize
 26141 ;;		_CLKREF_Initialize
 26142 ;;		_DMA1_Initialize
 26143 ;;		_DMA2_Initialize
 26144 ;;		_EXT_INT_Initialize
 26145 ;;		_FVR_Initialize
 26146 ;;		_INTERRUPT_Initialize
 26147 ;;		_OSCILLATOR_Initialize
 26148 ;;		_PIN_MANAGER_Initialize
 26149 ;;		_PMD_Initialize
 26150 ;;		_PWM8_Initialize
 26151 ;;		_SPI1_Initialize
 26152 ;;		_TMR2_Initialize
 26153 ;;		_TMR3_Initialize
 26154 ;;		_TMR5_Initialize
 26155 ;;		_TMR6_Initialize
 26156 ;;		_UART1_Initialize
 26157 ;;		_UART2_Initialize
 26158 ;; This function is called by:
 26159 ;;		_main
 26160 ;; This function uses a reentrant model
 26161 ;;
 26162                           
 26163                           	psect	text100
 26164  019BCA                     __ptext100:
 26165                           	opt callstack 0
 26166  019BCA                     _SYSTEM_Initialize:
 26167                           	opt callstack 13
 26168                           
 26169                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 26170                           
 26171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26172                           ;incstack = 0
 26173  019BCA  ECC5  F0CB         	call	_INTERRUPT_Initialize	;wreg free
 26174                           
 26175                           ; BSR set to: 57
 26176                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 26177  019BCE  ECF4  F0D3         	call	_PMD_Initialize	;wreg free
 26178                           
 26179                           ; BSR set to: 57
 26180                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 26181  019BD2  EC8D  F0C9         	call	_PIN_MANAGER_Initialize	;wreg free
 26182                           
 26183                           ; BSR set to: 58
 26184                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 26185  019BD6  ECE9  F0D3         	call	_OSCILLATOR_Initialize	;wreg free
 26186                           
 26187                           ; BSR set to: 57
 26188                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 26189  019BDA  EC69  F0D4         	call	_FVR_Initialize	;wreg free
 26190                           
 26191                           ; BSR set to: 62
 26192                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 26193  019BDE  EC5A  F0CB         	call	_ADCC_Initialize	;wreg free
 26194                           
 26195                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 26196  019BE2  ECDE  F0D3         	call	_PWM8_Initialize	;wreg free
 26197                           
 26198                           ; BSR set to: 63
 26199                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 26200  019BE6  ECC7  F0D3         	call	_TMR2_Initialize	;wreg free
 26201                           
 26202                           ; BSR set to: 57
 26203                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 26204  019BEA  EC2B  F0D0         	call	_EXT_INT_Initialize	;wreg free
 26205                           
 26206                           ; BSR set to: 57
 26207                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 26208  019BEE  EC1A  F0D1         	call	_TMR6_Initialize	;wreg free
 26209                           
 26210                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 26211  019BF2  ECBA  F0CE         	call	_TMR3_Initialize	;wreg free
 26212                           
 26213                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 26214  019BF6  EC97  F0CE         	call	_TMR5_Initialize	;wreg free
 26215                           
 26216                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 26217  019BFA  EC74  F0CE         	call	_UART1_Initialize	;wreg free
 26218                           
 26219                           ; BSR set to: 57
 26220                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 26221  019BFE  EC8C  F0CC         	call	_UART2_Initialize	;wreg free
 26222                           
 26223                           ; BSR set to: 57
 26224                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 26225  019C02  ECD3  F0D3         	call	_SPI1_Initialize	;wreg free
 26226                           
 26227                           ; BSR set to: 61
 26228                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 26229  019C06  ECE8  F0CC         	call	_DMA2_Initialize	;wreg free
 26230                           
 26231                           ; BSR set to: 59
 26232                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 26233  019C0A  EC25  F0CB         	call	_DMA1_Initialize	;wreg free
 26234                           
 26235                           ; BSR set to: 59
 26236                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 26237  019C0E  EC3D  F0D4         	call	_CLKREF_Initialize	;wreg free
 26238                           
 26239                           ; BSR set to: 60
 26240                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26241  019C12  0012               	return		;funcret
 26242  019C14                     __end_of_SYSTEM_Initialize:
 26243                           	opt callstack 0
 26244                           
 26245 ;; *************** function _UART2_Initialize *****************
 26246 ;; Defined at:
 26247 ;;		line 78 in file "mcc_generated_files/uart2.c"
 26248 ;; Parameters:    Size  Location     Type
 26249 ;;		None
 26250 ;; Auto vars:     Size  Location     Type
 26251 ;;		None
 26252 ;; Return value:  Size  Location     Type
 26253 ;;                  1  [STACK] void 
 26254 ;; Registers used:
 26255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 26256 ;; Tracked objects:
 26257 ;;		On entry : 3F/39
 26258 ;;		On exit  : 3F/39
 26259 ;;		Unchanged: 0/0
 26260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26265 ;;Total ram usage:        0 bytes
 26266 ;; Hardware stack levels used:    1
 26267 ;; Hardware stack levels required when called:   16
 26268 ;; This function calls:
 26269 ;;		_UART2_SetRxInterruptHandler
 26270 ;;		_UART2_SetTxInterruptHandler
 26271 ;; This function is called by:
 26272 ;;		_SYSTEM_Initialize
 26273 ;; This function uses a reentrant model
 26274 ;;
 26275                           
 26276                           	psect	text101
 26277  019918                     __ptext101:
 26278                           	opt callstack 0
 26279  019918                     _UART2_Initialize:
 26280                           	opt callstack 13
 26281                           
 26282                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 26283                           
 26284                           ; BSR set to: 60
 26285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26286                           ;incstack = 0
 26287  019918  0139               	movlb	57	; () banked
 26288  01991A  9596               	bcf	150,2,b	;volatile
 26289                           
 26290                           ; BSR set to: 57
 26291                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 26292  01991C  0E06               	movlw	low _UART2_Receive_ISR
 26293  01991E  6EE6               	movwf	postinc1,c
 26294  019920  0EA7               	movlw	high _UART2_Receive_ISR
 26295  019922  6EE6               	movwf	postinc1,c
 26296  019924  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 26297  019926  6EE6               	movwf	postinc1,c
 26298  019928  ECA7  F0D1         	call	_UART2_SetRxInterruptHandler	;wreg free
 26299                           
 26300                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 26301  01992C  0139               	movlb	57	; () banked
 26302  01992E  9796               	bcf	150,3,b	;volatile
 26303                           
 26304                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 26305  019930  0E08               	movlw	low _UART2_Transmit_ISR
 26306  019932  6EE6               	movwf	postinc1,c
 26307  019934  0EA2               	movlw	high _UART2_Transmit_ISR
 26308  019936  6EE6               	movwf	postinc1,c
 26309  019938  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 26310  01993A  6EE6               	movwf	postinc1,c
 26311  01993C  EC93  F0D1         	call	_UART2_SetTxInterruptHandler	;wreg free
 26312                           
 26313                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 26314  019940  013D               	movlb	61	; () banked
 26315  019942  6BD4               	clrf	212,b	;volatile
 26316                           
 26317                           ; BSR set to: 61
 26318                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 26319  019944  6BD6               	clrf	214,b	;volatile
 26320                           
 26321                           ; BSR set to: 61
 26322                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 26323  019946  6BD8               	clrf	216,b	;volatile
 26324                           
 26325                           ; BSR set to: 61
 26326                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 26327  019948  0EB0               	movlw	176
 26328  01994A  6FDA               	movwf	218,b	;volatile
 26329                           
 26330                           ; BSR set to: 61
 26331                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 26332  01994C  0E80               	movlw	128
 26333  01994E  6FDB               	movwf	219,b	;volatile
 26334                           
 26335                           ; BSR set to: 61
 26336                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 26337  019950  6BDC               	clrf	220,b	;volatile
 26338                           
 26339                           ; BSR set to: 61
 26340                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 26341  019952  0E82               	movlw	130
 26342  019954  6FDD               	movwf	221,b	;volatile
 26343                           
 26344                           ; BSR set to: 61
 26345                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 26346  019956  0E06               	movlw	6
 26347  019958  6FDE               	movwf	222,b	;volatile
 26348                           
 26349                           ; BSR set to: 61
 26350                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 26351  01995A  6BDF               	clrf	223,b	;volatile
 26352                           
 26353                           ; BSR set to: 61
 26354                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 26355  01995C  6BE0               	clrf	224,b	;volatile
 26356                           
 26357                           ; BSR set to: 61
 26358                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 26359  01995E  6BE1               	clrf	225,b	;volatile
 26360                           
 26361                           ; BSR set to: 61
 26362                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 26363  019960  6BE2               	clrf	226,b	;volatile
 26364                           
 26365                           ; BSR set to: 61
 26366                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 26367  019962  6A34               	clrf	_uart2TxHead^0,c	;volatile
 26368                           
 26369                           ; BSR set to: 61
 26370                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 26371  019964  6A33               	clrf	_uart2TxTail^0,c	;volatile
 26372                           
 26373                           ; BSR set to: 61
 26374                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 26375  019966  0E40               	movlw	64
 26376  019968  6E32               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 26377                           
 26378                           ; BSR set to: 61
 26379                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 26380  01996A  6A31               	clrf	_uart2RxHead^0,c	;volatile
 26381                           
 26382                           ; BSR set to: 61
 26383                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 26384  01996C  6A30               	clrf	_uart2RxTail^0,c	;volatile
 26385                           
 26386                           ; BSR set to: 61
 26387                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 26388  01996E  6A2F               	clrf	_uart2RxCount^0,c	;volatile
 26389                           
 26390                           ; BSR set to: 61
 26391                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 26392  019970  0139               	movlb	57	; () banked
 26393  019972  8596               	bsf	150,2,b	;volatile
 26394                           
 26395                           ; BSR set to: 57
 26396                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 26397  019974  0012               	return		;funcret
 26398  019976                     __end_of_UART2_Initialize:
 26399                           	opt callstack 0
 26400                           
 26401 ;; *************** function _UART2_SetTxInterruptHandler *****************
 26402 ;; Defined at:
 26403 ;;		line 252 in file "mcc_generated_files/uart2.c"
 26404 ;; Parameters:    Size  Location     Type
 26405 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26406 ;;		 -> UART2_Transmit_ISR(1), 
 26407 ;; Auto vars:     Size  Location     Type
 26408 ;;		None
 26409 ;; Return value:  Size  Location     Type
 26410 ;;                  1  [STACK] void 
 26411 ;; Registers used:
 26412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26413 ;; Tracked objects:
 26414 ;;		On entry : 3F/39
 26415 ;;		On exit  : 0/0
 26416 ;;		Unchanged: 0/0
 26417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26422 ;;Total ram usage:        0 bytes
 26423 ;; Hardware stack levels used:    1
 26424 ;; Hardware stack levels required when called:   15
 26425 ;; This function calls:
 26426 ;;		Nothing
 26427 ;; This function is called by:
 26428 ;;		_UART2_Initialize
 26429 ;; This function uses a reentrant model
 26430 ;;
 26431                           
 26432                           	psect	text102
 26433  01A326                     __ptext102:
 26434                           	opt callstack 0
 26435  01A326                     _UART2_SetTxInterruptHandler:
 26436                           	opt callstack 13
 26437                           
 26438                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 26439                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26440                           
 26441                           ; BSR set to: 57
 26442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26443                           ;incstack = 0
 26444  01A326  50E1               	movf	fsr1l,w,c
 26445  01A328  0FFD               	addlw	-3
 26446  01A32A  6ED9               	movwf	fsr2l,c
 26447  01A32C  50E2               	movf	fsr1h,w,c
 26448  01A32E  6EDA               	movwf	fsr2h,c
 26449  01A330  0EFF               	movlw	255
 26450  01A332  22DA               	addwfc	fsr2h,f,c
 26451  01A334  006F FF78  F0BB    	movff	postinc2,_UART2_TxInterruptHandler
 26452  01A33A  006F FF78  F0BC    	movff	postinc2,_UART2_TxInterruptHandler+1
 26453  01A340  006F FF74  F0BD    	movff	postdec2,_UART2_TxInterruptHandler+2
 26454                           
 26455                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26456  01A346  52E5               	movf	postdec1,f,c
 26457  01A348  52E5               	movf	postdec1,f,c
 26458  01A34A  52E5               	movf	postdec1,f,c
 26459  01A34C  0012               	return		;funcret
 26460  01A34E                     __end_of_UART2_SetTxInterruptHandler:
 26461                           	opt callstack 0
 26462                           
 26463 ;; *************** function _UART2_SetRxInterruptHandler *****************
 26464 ;; Defined at:
 26465 ;;		line 248 in file "mcc_generated_files/uart2.c"
 26466 ;; Parameters:    Size  Location     Type
 26467 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26468 ;;		 -> UART2_Receive_ISR(1), 
 26469 ;; Auto vars:     Size  Location     Type
 26470 ;;		None
 26471 ;; Return value:  Size  Location     Type
 26472 ;;                  1  [STACK] void 
 26473 ;; Registers used:
 26474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26475 ;; Tracked objects:
 26476 ;;		On entry : 3F/39
 26477 ;;		On exit  : 0/0
 26478 ;;		Unchanged: 0/0
 26479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26484 ;;Total ram usage:        0 bytes
 26485 ;; Hardware stack levels used:    1
 26486 ;; Hardware stack levels required when called:   15
 26487 ;; This function calls:
 26488 ;;		Nothing
 26489 ;; This function is called by:
 26490 ;;		_UART2_Initialize
 26491 ;; This function uses a reentrant model
 26492 ;;
 26493                           
 26494                           	psect	text103
 26495  01A34E                     __ptext103:
 26496                           	opt callstack 0
 26497  01A34E                     _UART2_SetRxInterruptHandler:
 26498                           	opt callstack 13
 26499                           
 26500                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 26501                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26502                           
 26503                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26504                           ;incstack = 0
 26505  01A34E  50E1               	movf	fsr1l,w,c
 26506  01A350  0FFD               	addlw	-3
 26507  01A352  6ED9               	movwf	fsr2l,c
 26508  01A354  50E2               	movf	fsr1h,w,c
 26509  01A356  6EDA               	movwf	fsr2h,c
 26510  01A358  0EFF               	movlw	255
 26511  01A35A  22DA               	addwfc	fsr2h,f,c
 26512  01A35C  006F FF78  F0BE    	movff	postinc2,_UART2_RxInterruptHandler
 26513  01A362  006F FF78  F0BF    	movff	postinc2,_UART2_RxInterruptHandler+1
 26514  01A368  006F FF74  F0C0    	movff	postdec2,_UART2_RxInterruptHandler+2
 26515                           
 26516                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26517  01A36E  52E5               	movf	postdec1,f,c
 26518  01A370  52E5               	movf	postdec1,f,c
 26519  01A372  52E5               	movf	postdec1,f,c
 26520  01A374  0012               	return		;funcret
 26521  01A376                     __end_of_UART2_SetRxInterruptHandler:
 26522                           	opt callstack 0
 26523                           
 26524 ;; *************** function _UART1_Initialize *****************
 26525 ;; Defined at:
 26526 ;;		line 75 in file "mcc_generated_files/uart1.c"
 26527 ;; Parameters:    Size  Location     Type
 26528 ;;		None
 26529 ;; Auto vars:     Size  Location     Type
 26530 ;;		None
 26531 ;; Return value:  Size  Location     Type
 26532 ;;                  1  [STACK] void 
 26533 ;; Registers used:
 26534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 26535 ;; Tracked objects:
 26536 ;;		On entry : 0/39
 26537 ;;		On exit  : 3F/39
 26538 ;;		Unchanged: 0/0
 26539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26544 ;;Total ram usage:        0 bytes
 26545 ;; Hardware stack levels used:    1
 26546 ;; Hardware stack levels required when called:   16
 26547 ;; This function calls:
 26548 ;;		_UART1_SetRxInterruptHandler
 26549 ;; This function is called by:
 26550 ;;		_SYSTEM_Initialize
 26551 ;; This function uses a reentrant model
 26552 ;;
 26553                           
 26554                           	psect	text104
 26555  019CE8                     __ptext104:
 26556                           	opt callstack 0
 26557  019CE8                     _UART1_Initialize:
 26558                           	opt callstack 13
 26559                           
 26560                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 26561                           
 26562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26563                           ;incstack = 0
 26564  019CE8  0139               	movlb	57	; () banked
 26565  019CEA  9793               	bcf	147,3,b	;volatile
 26566                           
 26567                           ; BSR set to: 57
 26568                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 26569  019CEC  0E6E               	movlw	low _UART1_Receive_ISR
 26570  019CEE  6EE6               	movwf	postinc1,c
 26571  019CF0  0EA6               	movlw	high _UART1_Receive_ISR
 26572  019CF2  6EE6               	movwf	postinc1,c
 26573  019CF4  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 26574  019CF6  6EE6               	movwf	postinc1,c
 26575  019CF8  ECBB  F0D1         	call	_UART1_SetRxInterruptHandler	;wreg free
 26576                           
 26577                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 26578  019CFC  013D               	movlb	61	; () banked
 26579  019CFE  6BEC               	clrf	236,b	;volatile
 26580                           
 26581                           ; BSR set to: 61
 26582                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 26583  019D00  6BED               	clrf	237,b	;volatile
 26584                           
 26585                           ; BSR set to: 61
 26586                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 26587  019D02  6BEE               	clrf	238,b	;volatile
 26588                           
 26589                           ; BSR set to: 61
 26590                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 26591  019D04  6BEF               	clrf	239,b	;volatile
 26592                           
 26593                           ; BSR set to: 61
 26594                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 26595  019D06  6BF0               	clrf	240,b	;volatile
 26596                           
 26597                           ; BSR set to: 61
 26598                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 26599  019D08  6BF1               	clrf	241,b	;volatile
 26600                           
 26601                           ; BSR set to: 61
 26602                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 26603  019D0A  0EB0               	movlw	176
 26604  019D0C  6FF2               	movwf	242,b	;volatile
 26605                           
 26606                           ; BSR set to: 61
 26607                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 26608  019D0E  0E80               	movlw	128
 26609  019D10  6FF3               	movwf	243,b	;volatile
 26610                           
 26611                           ; BSR set to: 61
 26612                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 26613  019D12  6BF4               	clrf	244,b	;volatile
 26614                           
 26615                           ; BSR set to: 61
 26616                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 26617  019D14  0E8A               	movlw	138
 26618  019D16  6FF5               	movwf	245,b	;volatile
 26619                           
 26620                           ; BSR set to: 61
 26621                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 26622  019D18  6BF6               	clrf	246,b	;volatile
 26623                           
 26624                           ; BSR set to: 61
 26625                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 26626  019D1A  6BF7               	clrf	247,b	;volatile
 26627                           
 26628                           ; BSR set to: 61
 26629                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 26630  019D1C  6BF8               	clrf	248,b	;volatile
 26631                           
 26632                           ; BSR set to: 61
 26633                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 26634  019D1E  6BF9               	clrf	249,b	;volatile
 26635                           
 26636                           ; BSR set to: 61
 26637                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 26638  019D20  6BFA               	clrf	250,b	;volatile
 26639                           
 26640                           ; BSR set to: 61
 26641                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 26642  019D22  6A37               	clrf	_uart1RxHead^0,c	;volatile
 26643                           
 26644                           ; BSR set to: 61
 26645                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 26646  019D24  6A36               	clrf	_uart1RxTail^0,c	;volatile
 26647                           
 26648                           ; BSR set to: 61
 26649                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 26650  019D26  6A35               	clrf	_uart1RxCount^0,c	;volatile
 26651                           
 26652                           ; BSR set to: 61
 26653                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 26654  019D28  0139               	movlb	57	; () banked
 26655  019D2A  8793               	bsf	147,3,b	;volatile
 26656                           
 26657                           ; BSR set to: 57
 26658                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 26659  019D2C  0012               	return		;funcret
 26660  019D2E                     __end_of_UART1_Initialize:
 26661                           	opt callstack 0
 26662                           
 26663 ;; *************** function _UART1_SetRxInterruptHandler *****************
 26664 ;; Defined at:
 26665 ;;		line 207 in file "mcc_generated_files/uart1.c"
 26666 ;; Parameters:    Size  Location     Type
 26667 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26668 ;;		 -> UART1_Receive_ISR(1), 
 26669 ;; Auto vars:     Size  Location     Type
 26670 ;;		None
 26671 ;; Return value:  Size  Location     Type
 26672 ;;                  1  [STACK] void 
 26673 ;; Registers used:
 26674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26675 ;; Tracked objects:
 26676 ;;		On entry : 3F/39
 26677 ;;		On exit  : 0/0
 26678 ;;		Unchanged: 0/0
 26679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26684 ;;Total ram usage:        0 bytes
 26685 ;; Hardware stack levels used:    1
 26686 ;; Hardware stack levels required when called:   15
 26687 ;; This function calls:
 26688 ;;		Nothing
 26689 ;; This function is called by:
 26690 ;;		_UART1_Initialize
 26691 ;; This function uses a reentrant model
 26692 ;;
 26693                           
 26694                           	psect	text105
 26695  01A376                     __ptext105:
 26696                           	opt callstack 0
 26697  01A376                     _UART1_SetRxInterruptHandler:
 26698                           	opt callstack 13
 26699                           
 26700                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 26701                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26702                           
 26703                           ; BSR set to: 57
 26704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26705                           ;incstack = 0
 26706  01A376  50E1               	movf	fsr1l,w,c
 26707  01A378  0FFD               	addlw	-3
 26708  01A37A  6ED9               	movwf	fsr2l,c
 26709  01A37C  50E2               	movf	fsr1h,w,c
 26710  01A37E  6EDA               	movwf	fsr2h,c
 26711  01A380  0EFF               	movlw	255
 26712  01A382  22DA               	addwfc	fsr2h,f,c
 26713  01A384  006F FF78  F0B8    	movff	postinc2,_UART1_RxInterruptHandler
 26714  01A38A  006F FF78  F0B9    	movff	postinc2,_UART1_RxInterruptHandler+1
 26715  01A390  006F FF74  F0BA    	movff	postdec2,_UART1_RxInterruptHandler+2
 26716                           
 26717                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26718  01A396  52E5               	movf	postdec1,f,c
 26719  01A398  52E5               	movf	postdec1,f,c
 26720  01A39A  52E5               	movf	postdec1,f,c
 26721  01A39C  0012               	return		;funcret
 26722  01A39E                     __end_of_UART1_SetRxInterruptHandler:
 26723                           	opt callstack 0
 26724                           
 26725 ;; *************** function _TMR6_Initialize *****************
 26726 ;; Defined at:
 26727 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 26728 ;; Parameters:    Size  Location     Type
 26729 ;;		None
 26730 ;; Auto vars:     Size  Location     Type
 26731 ;;		None
 26732 ;; Return value:  Size  Location     Type
 26733 ;;                  1  [STACK] void 
 26734 ;; Registers used:
 26735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 26736 ;; Tracked objects:
 26737 ;;		On entry : 3F/39
 26738 ;;		On exit  : 0/0
 26739 ;;		Unchanged: 0/0
 26740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26745 ;;Total ram usage:        0 bytes
 26746 ;; Hardware stack levels used:    1
 26747 ;; Hardware stack levels required when called:   16
 26748 ;; This function calls:
 26749 ;;		_TMR6_SetInterruptHandler
 26750 ;; This function is called by:
 26751 ;;		_SYSTEM_Initialize
 26752 ;; This function uses a reentrant model
 26753 ;;
 26754                           
 26755                           	psect	text106
 26756  01A234                     __ptext106:
 26757                           	opt callstack 0
 26758  01A234                     _TMR6_Initialize:
 26759                           	opt callstack 13
 26760                           
 26761                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 26762                           
 26763                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26764                           ;incstack = 0
 26765  01A234  0E01               	movlw	1
 26766  01A236  6E96               	movwf	150,c	;volatile
 26767                           
 26768                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 26769  01A238  6A95               	clrf	149,c	;volatile
 26770                           
 26771                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 26772  01A23A  6A97               	clrf	151,c	;volatile
 26773                           
 26774                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 26775  01A23C  0E7C               	movlw	124
 26776  01A23E  6E93               	movwf	147,c	;volatile
 26777                           
 26778                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 26779  01A240  6A92               	clrf	146,c	;volatile
 26780                           
 26781                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 26782  01A242  0139               	movlb	57	; () banked
 26783  01A244  91A9               	bcf	169,0,b	;volatile
 26784                           
 26785                           ; BSR set to: 57
 26786                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 26787  01A246  8199               	bsf	153,0,b	;volatile
 26788                           
 26789                           ; BSR set to: 57
 26790                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 26791  01A248  0E7C               	movlw	low _TMR6_DefaultInterruptHandler
 26792  01A24A  6EE6               	movwf	postinc1,c
 26793  01A24C  0E9B               	movlw	high _TMR6_DefaultInterruptHandler
 26794  01A24E  6EE6               	movwf	postinc1,c
 26795  01A250  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 26796  01A252  6EE6               	movwf	postinc1,c
 26797  01A254  ECCF  F0D1         	call	_TMR6_SetInterruptHandler	;wreg free
 26798                           
 26799                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 26800  01A258  0EE0               	movlw	224
 26801  01A25A  6E94               	movwf	148,c	;volatile
 26802                           
 26803                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26804  01A25C  0012               	return		;funcret
 26805  01A25E                     __end_of_TMR6_Initialize:
 26806                           	opt callstack 0
 26807                           
 26808 ;; *************** function _TMR6_SetInterruptHandler *****************
 26809 ;; Defined at:
 26810 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 26811 ;; Parameters:    Size  Location     Type
 26812 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26813 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 26814 ;; Auto vars:     Size  Location     Type
 26815 ;;		None
 26816 ;; Return value:  Size  Location     Type
 26817 ;;                  1  [STACK] void 
 26818 ;; Registers used:
 26819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26820 ;; Tracked objects:
 26821 ;;		On entry : 3F/39
 26822 ;;		On exit  : 0/0
 26823 ;;		Unchanged: 0/0
 26824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26829 ;;Total ram usage:        0 bytes
 26830 ;; Hardware stack levels used:    1
 26831 ;; Hardware stack levels required when called:   15
 26832 ;; This function calls:
 26833 ;;		Nothing
 26834 ;; This function is called by:
 26835 ;;		_TMR6_Initialize
 26836 ;; This function uses a reentrant model
 26837 ;;
 26838                           
 26839                           	psect	text107
 26840  01A39E                     __ptext107:
 26841                           	opt callstack 0
 26842  01A39E                     _TMR6_SetInterruptHandler:
 26843                           	opt callstack 13
 26844                           
 26845                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 26846                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26847                           
 26848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26849                           ;incstack = 0
 26850  01A39E  50E1               	movf	fsr1l,w,c
 26851  01A3A0  0FFD               	addlw	-3
 26852  01A3A2  6ED9               	movwf	fsr2l,c
 26853  01A3A4  50E2               	movf	fsr1h,w,c
 26854  01A3A6  6EDA               	movwf	fsr2h,c
 26855  01A3A8  0EFF               	movlw	255
 26856  01A3AA  22DA               	addwfc	fsr2h,f,c
 26857  01A3AC  006F FF78  F0AF    	movff	postinc2,_TMR6_InterruptHandler
 26858  01A3B2  006F FF78  F0B0    	movff	postinc2,_TMR6_InterruptHandler+1
 26859  01A3B8  006F FF74  F0B1    	movff	postdec2,_TMR6_InterruptHandler+2
 26860                           
 26861                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 26862  01A3BE  52E5               	movf	postdec1,f,c
 26863  01A3C0  52E5               	movf	postdec1,f,c
 26864  01A3C2  52E5               	movf	postdec1,f,c
 26865  01A3C4  0012               	return		;funcret
 26866  01A3C6                     __end_of_TMR6_SetInterruptHandler:
 26867                           	opt callstack 0
 26868                           
 26869 ;; *************** function _TMR5_Initialize *****************
 26870 ;; Defined at:
 26871 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 26872 ;; Parameters:    Size  Location     Type
 26873 ;;		None
 26874 ;; Auto vars:     Size  Location     Type
 26875 ;;		None
 26876 ;; Return value:  Size  Location     Type
 26877 ;;                  1  [STACK] void 
 26878 ;; Registers used:
 26879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 26880 ;; Tracked objects:
 26881 ;;		On entry : 0/39
 26882 ;;		On exit  : 0/0
 26883 ;;		Unchanged: 0/0
 26884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26889 ;;Total ram usage:        0 bytes
 26890 ;; Hardware stack levels used:    1
 26891 ;; Hardware stack levels required when called:   16
 26892 ;; This function calls:
 26893 ;;		_TMR5_SetInterruptHandler
 26894 ;; This function is called by:
 26895 ;;		_SYSTEM_Initialize
 26896 ;; This function uses a reentrant model
 26897 ;;
 26898                           
 26899                           	psect	text108
 26900  019D2E                     __ptext108:
 26901                           	opt callstack 0
 26902  019D2E                     _TMR5_Initialize:
 26903                           	opt callstack 13
 26904                           
 26905                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 26906                           
 26907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26908                           ;incstack = 0
 26909  019D2E  6A9B               	clrf	155,c	;volatile
 26910                           
 26911                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 26912  019D30  6A9C               	clrf	156,c	;volatile
 26913                           
 26914                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 26915  019D32  0E01               	movlw	1
 26916  019D34  6E9D               	movwf	157,c	;volatile
 26917                           
 26918                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 26919  019D36  0E63               	movlw	99
 26920  019D38  6E99               	movwf	153,c	;volatile
 26921                           
 26922                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 26923  019D3A  0EC0               	movlw	192
 26924  019D3C  6E98               	movwf	152,c	;volatile
 26925                           
 26926                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 26927  019D3E  5098               	movf	152,w,c	;volatile
 26928  019D40  006F FE64  F001    	movff	16281,btemp	;volatile
 26929  019D46  6A02               	clrf	(btemp+1)^0,c
 26930  019D48  0060  F004  F002   	movff	btemp,btemp+1
 26931  019D4E  6A01               	clrf	btemp^0,c
 26932  019D50  1001               	iorwf	btemp^0,w,c
 26933  019D52  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 26934  019D54  5002               	movf	(btemp+1)^0,w,c
 26935  019D56  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 26936                           
 26937                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 26938  019D58  0139               	movlb	57	; () banked
 26939  019D5A  9DA8               	bcf	168,6,b	;volatile
 26940                           
 26941                           ; BSR set to: 57
 26942                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 26943  019D5C  8D98               	bsf	152,6,b	;volatile
 26944                           
 26945                           ; BSR set to: 57
 26946                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 26947  019D5E  0E8A               	movlw	low _TMR5_DefaultInterruptHandler
 26948  019D60  6EE6               	movwf	postinc1,c
 26949  019D62  0EA0               	movlw	high _TMR5_DefaultInterruptHandler
 26950  019D64  6EE6               	movwf	postinc1,c
 26951  019D66  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 26952  019D68  6EE6               	movwf	postinc1,c
 26953  019D6A  ECE3  F0D1         	call	_TMR5_SetInterruptHandler	;wreg free
 26954                           
 26955                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 26956  019D6E  0E31               	movlw	49
 26957  019D70  6E9A               	movwf	154,c	;volatile
 26958                           
 26959                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26960  019D72  0012               	return		;funcret
 26961  019D74                     __end_of_TMR5_Initialize:
 26962                           	opt callstack 0
 26963                           
 26964 ;; *************** function _TMR5_SetInterruptHandler *****************
 26965 ;; Defined at:
 26966 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 26967 ;; Parameters:    Size  Location     Type
 26968 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26969 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 26970 ;; Auto vars:     Size  Location     Type
 26971 ;;		None
 26972 ;; Return value:  Size  Location     Type
 26973 ;;                  1  [STACK] void 
 26974 ;; Registers used:
 26975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26976 ;; Tracked objects:
 26977 ;;		On entry : 3F/39
 26978 ;;		On exit  : 0/0
 26979 ;;		Unchanged: 0/0
 26980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26985 ;;Total ram usage:        0 bytes
 26986 ;; Hardware stack levels used:    1
 26987 ;; Hardware stack levels required when called:   15
 26988 ;; This function calls:
 26989 ;;		Nothing
 26990 ;; This function is called by:
 26991 ;;		_TMR5_Initialize
 26992 ;; This function uses a reentrant model
 26993 ;;
 26994                           
 26995                           	psect	text109
 26996  01A3C6                     __ptext109:
 26997                           	opt callstack 0
 26998  01A3C6                     _TMR5_SetInterruptHandler:
 26999                           	opt callstack 13
 27000                           
 27001                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 27002                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27003                           
 27004                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27005                           ;incstack = 0
 27006  01A3C6  50E1               	movf	fsr1l,w,c
 27007  01A3C8  0FFD               	addlw	-3
 27008  01A3CA  6ED9               	movwf	fsr2l,c
 27009  01A3CC  50E2               	movf	fsr1h,w,c
 27010  01A3CE  6EDA               	movwf	fsr2h,c
 27011  01A3D0  0EFF               	movlw	255
 27012  01A3D2  22DA               	addwfc	fsr2h,f,c
 27013  01A3D4  006F FF78  F0AC    	movff	postinc2,_TMR5_InterruptHandler
 27014  01A3DA  006F FF78  F0AD    	movff	postinc2,_TMR5_InterruptHandler+1
 27015  01A3E0  006F FF74  F0AE    	movff	postdec2,_TMR5_InterruptHandler+2
 27016                           
 27017                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27018  01A3E6  52E5               	movf	postdec1,f,c
 27019  01A3E8  52E5               	movf	postdec1,f,c
 27020  01A3EA  52E5               	movf	postdec1,f,c
 27021  01A3EC  0012               	return		;funcret
 27022  01A3EE                     __end_of_TMR5_SetInterruptHandler:
 27023                           	opt callstack 0
 27024                           
 27025 ;; *************** function _TMR3_Initialize *****************
 27026 ;; Defined at:
 27027 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 27028 ;; Parameters:    Size  Location     Type
 27029 ;;		None
 27030 ;; Auto vars:     Size  Location     Type
 27031 ;;		None
 27032 ;; Return value:  Size  Location     Type
 27033 ;;                  1  [STACK] void 
 27034 ;; Registers used:
 27035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 27036 ;; Tracked objects:
 27037 ;;		On entry : 0/39
 27038 ;;		On exit  : 0/0
 27039 ;;		Unchanged: 0/0
 27040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27045 ;;Total ram usage:        0 bytes
 27046 ;; Hardware stack levels used:    1
 27047 ;; Hardware stack levels required when called:   16
 27048 ;; This function calls:
 27049 ;;		_TMR3_SetInterruptHandler
 27050 ;; This function is called by:
 27051 ;;		_SYSTEM_Initialize
 27052 ;; This function uses a reentrant model
 27053 ;;
 27054                           
 27055                           	psect	text110
 27056  019D74                     __ptext110:
 27057                           	opt callstack 0
 27058  019D74                     _TMR3_Initialize:
 27059                           	opt callstack 13
 27060                           
 27061                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 27062                           
 27063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27064                           ;incstack = 0
 27065  019D74  6AA7               	clrf	167,c	;volatile
 27066                           
 27067                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 27068  019D76  6AA8               	clrf	168,c	;volatile
 27069                           
 27070                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 27071  019D78  0E01               	movlw	1
 27072  019D7A  6EA9               	movwf	169,c	;volatile
 27073                           
 27074                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 27075  019D7C  0E3C               	movlw	60
 27076  019D7E  6EA5               	movwf	165,c	;volatile
 27077                           
 27078                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 27079  019D80  0EB0               	movlw	176
 27080  019D82  6EA4               	movwf	164,c	;volatile
 27081                           
 27082                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 27083  019D84  50A4               	movf	164,w,c	;volatile
 27084  019D86  006F FE94  F001    	movff	16293,btemp	;volatile
 27085  019D8C  6A02               	clrf	(btemp+1)^0,c
 27086  019D8E  0060  F004  F002   	movff	btemp,btemp+1
 27087  019D94  6A01               	clrf	btemp^0,c
 27088  019D96  1001               	iorwf	btemp^0,w,c
 27089  019D98  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 27090  019D9A  5002               	movf	(btemp+1)^0,w,c
 27091  019D9C  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 27092                           
 27093                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 27094  019D9E  0139               	movlb	57	; () banked
 27095  019DA0  9DA6               	bcf	166,6,b	;volatile
 27096                           
 27097                           ; BSR set to: 57
 27098                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 27099  019DA2  8D96               	bsf	150,6,b	;volatile
 27100                           
 27101                           ; BSR set to: 57
 27102                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 27103  019DA4  0EFC               	movlw	low _TMR3_DefaultInterruptHandler
 27104  019DA6  6EE6               	movwf	postinc1,c
 27105  019DA8  0EA8               	movlw	high _TMR3_DefaultInterruptHandler
 27106  019DAA  6EE6               	movwf	postinc1,c
 27107  019DAC  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 27108  019DAE  6EE6               	movwf	postinc1,c
 27109  019DB0  ECF7  F0D1         	call	_TMR3_SetInterruptHandler	;wreg free
 27110                           
 27111                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 27112  019DB4  0E31               	movlw	49
 27113  019DB6  6EA6               	movwf	166,c	;volatile
 27114                           
 27115                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27116  019DB8  0012               	return		;funcret
 27117  019DBA                     __end_of_TMR3_Initialize:
 27118                           	opt callstack 0
 27119                           
 27120 ;; *************** function _TMR3_SetInterruptHandler *****************
 27121 ;; Defined at:
 27122 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 27123 ;; Parameters:    Size  Location     Type
 27124 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27125 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 27126 ;; Auto vars:     Size  Location     Type
 27127 ;;		None
 27128 ;; Return value:  Size  Location     Type
 27129 ;;                  1  [STACK] void 
 27130 ;; Registers used:
 27131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27132 ;; Tracked objects:
 27133 ;;		On entry : 0/1
 27134 ;;		On exit  : 0/0
 27135 ;;		Unchanged: 0/0
 27136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27141 ;;Total ram usage:        0 bytes
 27142 ;; Hardware stack levels used:    1
 27143 ;; Hardware stack levels required when called:   15
 27144 ;; This function calls:
 27145 ;;		Nothing
 27146 ;; This function is called by:
 27147 ;;		_TMR3_Initialize
 27148 ;;		_init_bsoc
 27149 ;; This function uses a reentrant model
 27150 ;;
 27151                           
 27152                           	psect	text111
 27153  01A3EE                     __ptext111:
 27154                           	opt callstack 0
 27155  01A3EE                     _TMR3_SetInterruptHandler:
 27156                           	opt callstack 14
 27157                           
 27158                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 27159                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27160                           
 27161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27162                           ;incstack = 0
 27163  01A3EE  50E1               	movf	fsr1l,w,c
 27164  01A3F0  0FFD               	addlw	-3
 27165  01A3F2  6ED9               	movwf	fsr2l,c
 27166  01A3F4  50E2               	movf	fsr1h,w,c
 27167  01A3F6  6EDA               	movwf	fsr2h,c
 27168  01A3F8  0EFF               	movlw	255
 27169  01A3FA  22DA               	addwfc	fsr2h,f,c
 27170  01A3FC  006F FF78  F0A9    	movff	postinc2,_TMR3_InterruptHandler
 27171  01A402  006F FF78  F0AA    	movff	postinc2,_TMR3_InterruptHandler+1
 27172  01A408  006F FF74  F0AB    	movff	postdec2,_TMR3_InterruptHandler+2
 27173                           
 27174                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27175  01A40E  52E5               	movf	postdec1,f,c
 27176  01A410  52E5               	movf	postdec1,f,c
 27177  01A412  52E5               	movf	postdec1,f,c
 27178  01A414  0012               	return		;funcret
 27179  01A416                     __end_of_TMR3_SetInterruptHandler:
 27180                           	opt callstack 0
 27181                           
 27182 ;; *************** function _TMR2_Initialize *****************
 27183 ;; Defined at:
 27184 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 27185 ;; Parameters:    Size  Location     Type
 27186 ;;		None
 27187 ;; Auto vars:     Size  Location     Type
 27188 ;;		None
 27189 ;; Return value:  Size  Location     Type
 27190 ;;                  1  [STACK] void 
 27191 ;; Registers used:
 27192 ;;		wreg, status,2
 27193 ;; Tracked objects:
 27194 ;;		On entry : 3F/3F
 27195 ;;		On exit  : 3F/39
 27196 ;;		Unchanged: 0/0
 27197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27202 ;;Total ram usage:        0 bytes
 27203 ;; Hardware stack levels used:    1
 27204 ;; Hardware stack levels required when called:   15
 27205 ;; This function calls:
 27206 ;;		Nothing
 27207 ;; This function is called by:
 27208 ;;		_SYSTEM_Initialize
 27209 ;; This function uses a reentrant model
 27210 ;;
 27211                           
 27212                           	psect	text112
 27213  01A78E                     __ptext112:
 27214                           	opt callstack 0
 27215  01A78E                     _TMR2_Initialize:
 27216                           	opt callstack 14
 27217                           
 27218                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 27219                           
 27220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27221                           ;incstack = 0
 27222  01A78E  0E01               	movlw	1
 27223  01A790  6EAE               	movwf	174,c	;volatile
 27224                           
 27225                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 27226  01A792  6AAD               	clrf	173,c	;volatile
 27227                           
 27228                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 27229  01A794  6AAF               	clrf	175,c	;volatile
 27230                           
 27231                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 27232  01A796  0E63               	movlw	99
 27233  01A798  6EAB               	movwf	171,c	;volatile
 27234                           
 27235                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 27236  01A79A  6AAA               	clrf	170,c	;volatile
 27237                           
 27238                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 27239  01A79C  0139               	movlb	57	; () banked
 27240  01A79E  95A4               	bcf	164,2,b	;volatile
 27241                           
 27242                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 27243  01A7A0  0EC0               	movlw	192
 27244  01A7A2  6EAC               	movwf	172,c	;volatile
 27245                           
 27246                           ; BSR set to: 57
 27247                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27248  01A7A4  0012               	return		;funcret
 27249  01A7A6                     __end_of_TMR2_Initialize:
 27250                           	opt callstack 0
 27251                           
 27252 ;; *************** function _SPI1_Initialize *****************
 27253 ;; Defined at:
 27254 ;;		line 64 in file "mcc_generated_files/spi1.c"
 27255 ;; Parameters:    Size  Location     Type
 27256 ;;		None
 27257 ;; Auto vars:     Size  Location     Type
 27258 ;;		None
 27259 ;; Return value:  Size  Location     Type
 27260 ;;                  1  [STACK] void 
 27261 ;; Registers used:
 27262 ;;		wreg, status,2
 27263 ;; Tracked objects:
 27264 ;;		On entry : 3F/39
 27265 ;;		On exit  : 3F/3D
 27266 ;;		Unchanged: 0/0
 27267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27272 ;;Total ram usage:        0 bytes
 27273 ;; Hardware stack levels used:    1
 27274 ;; Hardware stack levels required when called:   15
 27275 ;; This function calls:
 27276 ;;		Nothing
 27277 ;; This function is called by:
 27278 ;;		_SYSTEM_Initialize
 27279 ;; This function uses a reentrant model
 27280 ;;
 27281                           
 27282                           	psect	text113
 27283  01A7A6                     __ptext113:
 27284                           	opt callstack 0
 27285  01A7A6                     _SPI1_Initialize:
 27286                           	opt callstack 14
 27287                           
 27288                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 27289                           
 27290                           ; BSR set to: 57
 27291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27292                           ;incstack = 0
 27293  01A7A6  0E40               	movlw	64
 27294  01A7A8  013D               	movlb	61	; () banked
 27295  01A7AA  6F15               	movwf	21,b	;volatile
 27296                           
 27297                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 27298  01A7AC  0E03               	movlw	3
 27299  01A7AE  6F16               	movwf	22,b	;volatile
 27300                           
 27301                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 27302  01A7B0  0E4F               	movlw	79
 27303  01A7B2  6F19               	movwf	25,b	;volatile
 27304                           
 27305                           ; BSR set to: 61
 27306                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 27307  01A7B4  6B1C               	clrf	28,b	;volatile
 27308                           
 27309                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 27310  01A7B6  0E83               	movlw	131
 27311  01A7B8  6F14               	movwf	20,b	;volatile
 27312                           
 27313                           ; BSR set to: 61
 27314                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27315  01A7BA  0012               	return		;funcret
 27316  01A7BC                     __end_of_SPI1_Initialize:
 27317                           	opt callstack 0
 27318                           
 27319 ;; *************** function _PWM8_Initialize *****************
 27320 ;; Defined at:
 27321 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 27322 ;; Parameters:    Size  Location     Type
 27323 ;;		None
 27324 ;; Auto vars:     Size  Location     Type
 27325 ;;		None
 27326 ;; Return value:  Size  Location     Type
 27327 ;;                  1  [STACK] void 
 27328 ;; Registers used:
 27329 ;;		wreg, status,2
 27330 ;; Tracked objects:
 27331 ;;		On entry : 0/3E
 27332 ;;		On exit  : 3F/3F
 27333 ;;		Unchanged: 0/0
 27334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27339 ;;Total ram usage:        0 bytes
 27340 ;; Hardware stack levels used:    1
 27341 ;; Hardware stack levels required when called:   15
 27342 ;; This function calls:
 27343 ;;		Nothing
 27344 ;; This function is called by:
 27345 ;;		_SYSTEM_Initialize
 27346 ;; This function uses a reentrant model
 27347 ;;
 27348                           
 27349                           	psect	text114
 27350  01A7BC                     __ptext114:
 27351                           	opt callstack 0
 27352  01A7BC                     _PWM8_Initialize:
 27353                           	opt callstack 14
 27354                           
 27355                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 27356                           
 27357                           ; BSR set to: 61
 27358                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27359                           ;incstack = 0
 27360  01A7BC  0E80               	movlw	128
 27361  01A7BE  6E62               	movwf	98,c	;volatile
 27362                           
 27363                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 27364  01A7C0  6A61               	clrf	97,c	;volatile
 27365                           
 27366                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 27367  01A7C2  0E40               	movlw	64
 27368  01A7C4  6E60               	movwf	96,c	;volatile
 27369                           
 27370                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 27371  01A7C6  013F               	movlb	63	; () banked
 27372  01A7C8  515F               	movf	95,w,b	;volatile
 27373  01A7CA  0B3F               	andlw	-193
 27374  01A7CC  0940               	iorlw	64
 27375  01A7CE  6F5F               	movwf	95,b	;volatile
 27376                           
 27377                           ; BSR set to: 63
 27378                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27379  01A7D0  0012               	return		;funcret
 27380  01A7D2                     __end_of_PWM8_Initialize:
 27381                           	opt callstack 0
 27382                           
 27383 ;; *************** function _PMD_Initialize *****************
 27384 ;; Defined at:
 27385 ;;		line 90 in file "mcc_generated_files/mcc.c"
 27386 ;; Parameters:    Size  Location     Type
 27387 ;;		None
 27388 ;; Auto vars:     Size  Location     Type
 27389 ;;		None
 27390 ;; Return value:  Size  Location     Type
 27391 ;;                  1  [STACK] void 
 27392 ;; Registers used:
 27393 ;;		None
 27394 ;; Tracked objects:
 27395 ;;		On entry : 3F/39
 27396 ;;		On exit  : 3F/39
 27397 ;;		Unchanged: 0/0
 27398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27403 ;;Total ram usage:        0 bytes
 27404 ;; Hardware stack levels used:    1
 27405 ;; Hardware stack levels required when called:   15
 27406 ;; This function calls:
 27407 ;;		Nothing
 27408 ;; This function is called by:
 27409 ;;		_SYSTEM_Initialize
 27410 ;; This function uses a reentrant model
 27411 ;;
 27412                           
 27413                           	psect	text115
 27414  01A7E8                     __ptext115:
 27415                           	opt callstack 0
 27416  01A7E8                     _PMD_Initialize:
 27417                           	opt callstack 14
 27418                           
 27419                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 27420                           
 27421                           ; BSR set to: 63
 27422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27423                           ;incstack = 0
 27424  01A7E8  0139               	movlb	57	; () banked
 27425  01A7EA  6BC0               	clrf	192,b	;volatile
 27426                           
 27427                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 27428  01A7EC  6BC1               	clrf	193,b	;volatile
 27429                           
 27430                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 27431  01A7EE  6BC2               	clrf	194,b	;volatile
 27432                           
 27433                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 27434  01A7F0  6BC3               	clrf	195,b	;volatile
 27435                           
 27436                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 27437  01A7F2  6BC4               	clrf	196,b	;volatile
 27438                           
 27439                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 27440  01A7F4  6BC5               	clrf	197,b	;volatile
 27441                           
 27442                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 27443  01A7F6  6BC6               	clrf	198,b	;volatile
 27444                           
 27445                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 27446  01A7F8  6BC7               	clrf	199,b	;volatile
 27447                           
 27448                           ; BSR set to: 57
 27449                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 27450  01A7FA  0012               	return		;funcret
 27451  01A7FC                     __end_of_PMD_Initialize:
 27452                           	opt callstack 0
 27453                           
 27454 ;; *************** function _PIN_MANAGER_Initialize *****************
 27455 ;; Defined at:
 27456 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 27457 ;; Parameters:    Size  Location     Type
 27458 ;;		None
 27459 ;; Auto vars:     Size  Location     Type
 27460 ;;		None
 27461 ;; Return value:  Size  Location     Type
 27462 ;;                  1  [STACK] void 
 27463 ;; Registers used:
 27464 ;;		wreg, status,2
 27465 ;; Tracked objects:
 27466 ;;		On entry : 3F/39
 27467 ;;		On exit  : 3F/3A
 27468 ;;		Unchanged: 0/0
 27469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27474 ;;Total ram usage:        0 bytes
 27475 ;; Hardware stack levels used:    1
 27476 ;; Hardware stack levels required when called:   15
 27477 ;; This function calls:
 27478 ;;		Nothing
 27479 ;; This function is called by:
 27480 ;;		_SYSTEM_Initialize
 27481 ;; This function uses a reentrant model
 27482 ;;
 27483                           
 27484                           	psect	text116
 27485  01931A                     __ptext116:
 27486                           	opt callstack 0
 27487  01931A                     _PIN_MANAGER_Initialize:
 27488                           	opt callstack 14
 27489                           
 27490                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 27491                           
 27492                           ; BSR set to: 57
 27493                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27494                           ;incstack = 0
 27495  01931A  0E07               	movlw	7
 27496  01931C  6EBE               	movwf	190,c	;volatile
 27497                           
 27498                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 27499  01931E  0E80               	movlw	128
 27500  019320  6EBD               	movwf	189,c	;volatile
 27501                           
 27502                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 27503  019322  6ABA               	clrf	186,c	;volatile
 27504                           
 27505                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 27506  019324  6ABF               	clrf	191,c	;volatile
 27507                           
 27508                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 27509  019326  6ABB               	clrf	187,c	;volatile
 27510                           
 27511                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 27512  019328  0E07               	movlw	7
 27513  01932A  6EBC               	movwf	188,c	;volatile
 27514                           
 27515                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 27516  01932C  6AC6               	clrf	198,c	;volatile
 27517                           
 27518                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 27519  01932E  0E0F               	movlw	15
 27520  019330  6EC7               	movwf	199,c	;volatile
 27521                           
 27522                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 27523  019332  68C2               	setf	194,c	;volatile
 27524                           
 27525                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 27526  019334  0EBF               	movlw	191
 27527  019336  6EC3               	movwf	195,c	;volatile
 27528                           
 27529                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 27530  019338  0E90               	movlw	144
 27531  01933A  6EC4               	movwf	196,c	;volatile
 27532                           
 27533                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 27534  01933C  0E0C               	movlw	12
 27535  01933E  6EC5               	movwf	197,c	;volatile
 27536                           
 27537                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 27538  019340  013A               	movlb	58	; () banked
 27539  019342  6B70               	clrf	112,b	;volatile
 27540                           
 27541                           ; BSR set to: 58
 27542                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 27543  019344  6B60               	clrf	96,b	;volatile
 27544                           
 27545                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 27546  019346  0E3C               	movlw	60
 27547  019348  6F50               	movwf	80,b	;volatile
 27548                           
 27549                           ; BSR set to: 58
 27550                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 27551  01934A  6B80               	clrf	128,b	;volatile
 27552                           
 27553                           ; BSR set to: 58
 27554                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 27555  01934C  6B90               	clrf	144,b	;volatile
 27556                           
 27557                           ; BSR set to: 58
 27558                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 27559  01934E  6940               	setf	64,b	;volatile
 27560                           
 27561                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 27562  019350  0E0C               	movlw	12
 27563  019352  6F71               	movwf	113,b	;volatile
 27564                           
 27565                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 27566  019354  0E0F               	movlw	15
 27567  019356  6F91               	movwf	145,b	;volatile
 27568                           
 27569                           ; BSR set to: 58
 27570                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 27571  019358  6B81               	clrf	129,b	;volatile
 27572                           
 27573                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 27574  01935A  0E83               	movlw	131
 27575  01935C  6F51               	movwf	81,b	;volatile
 27576                           
 27577                           ; BSR set to: 58
 27578                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 27579  01935E  6B41               	clrf	65,b	;volatile
 27580                           
 27581                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 27582  019360  0E97               	movlw	151
 27583  019362  6F61               	movwf	97,b	;volatile
 27584                           
 27585                           ; BSR set to: 58
 27586                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 27587  019364  6B82               	clrf	130,b	;volatile
 27588                           
 27589                           ; BSR set to: 58
 27590                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 27591  019366  6B92               	clrf	146,b	;volatile
 27592                           
 27593                           ; BSR set to: 58
 27594                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 27595  019368  6B42               	clrf	66,b	;volatile
 27596                           
 27597                           ; BSR set to: 58
 27598                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 27599  01936A  6B52               	clrf	82,b	;volatile
 27600                           
 27601                           ; BSR set to: 58
 27602                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 27603  01936C  6B62               	clrf	98,b	;volatile
 27604                           
 27605                           ; BSR set to: 58
 27606                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 27607  01936E  6B72               	clrf	114,b	;volatile
 27608                           
 27609                           ; BSR set to: 58
 27610                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 27611  019370  6943               	setf	67,b	;volatile
 27612                           
 27613                           ; BSR set to: 58
 27614                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 27615  019372  6953               	setf	83,b	;volatile
 27616                           
 27617                           ; BSR set to: 58
 27618                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 27619  019374  6963               	setf	99,b	;volatile
 27620                           
 27621                           ; BSR set to: 58
 27622                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 27623  019376  6973               	setf	115,b	;volatile
 27624                           
 27625                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 27626  019378  0E07               	movlw	7
 27627  01937A  6F83               	movwf	131,b	;volatile
 27628                           
 27629                           ; BSR set to: 58
 27630                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 27631  01937C  6993               	setf	147,b	;volatile
 27632                           
 27633                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 27634  01937E  0E0F               	movlw	15
 27635  019380  6FE8               	movwf	232,b	;volatile
 27636                           
 27637                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 27638  019382  0E13               	movlw	19
 27639  019384  6FDE               	movwf	222,b	;volatile
 27640                           
 27641                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 27642  019386  0E16               	movlw	22
 27643  019388  6F0E               	movwf	14,b	;volatile
 27644                           
 27645                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 27646  01938A  0E1E               	movlw	30
 27647  01938C  6F13               	movwf	19,b	;volatile
 27648                           
 27649                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 27650  01938E  0E08               	movlw	8
 27651  019390  6FC0               	movwf	192,b	;volatile
 27652                           
 27653                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 27654  019392  0E10               	movlw	16
 27655  019394  6F19               	movwf	25,b	;volatile
 27656                           
 27657                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 27658  019396  0E09               	movlw	9
 27659  019398  6FC1               	movwf	193,b	;volatile
 27660                           
 27661                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 27662  01939A  0E1F               	movlw	31
 27663  01939C  6F15               	movwf	21,b	;volatile
 27664                           
 27665                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 27666  01939E  0E13               	movlw	19
 27667  0193A0  6F16               	movwf	22,b	;volatile
 27668                           
 27669                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 27670  0193A2  0E17               	movlw	23
 27671  0193A4  6FE5               	movwf	229,b	;volatile
 27672                           
 27673                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 27674  0193A6  0E14               	movlw	20
 27675  0193A8  6FDF               	movwf	223,b	;volatile
 27676                           
 27677                           ; BSR set to: 58
 27678                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 27679  0193AA  0012               	return		;funcret
 27680  0193AC                     __end_of_PIN_MANAGER_Initialize:
 27681                           	opt callstack 0
 27682                           
 27683 ;; *************** function _OSCILLATOR_Initialize *****************
 27684 ;; Defined at:
 27685 ;;		line 72 in file "mcc_generated_files/mcc.c"
 27686 ;; Parameters:    Size  Location     Type
 27687 ;;		None
 27688 ;; Auto vars:     Size  Location     Type
 27689 ;;		None
 27690 ;; Return value:  Size  Location     Type
 27691 ;;                  1  [STACK] void 
 27692 ;; Registers used:
 27693 ;;		wreg, status,2
 27694 ;; Tracked objects:
 27695 ;;		On entry : 3F/3A
 27696 ;;		On exit  : 3F/39
 27697 ;;		Unchanged: 0/0
 27698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27703 ;;Total ram usage:        0 bytes
 27704 ;; Hardware stack levels used:    1
 27705 ;; Hardware stack levels required when called:   15
 27706 ;; This function calls:
 27707 ;;		Nothing
 27708 ;; This function is called by:
 27709 ;;		_SYSTEM_Initialize
 27710 ;; This function uses a reentrant model
 27711 ;;
 27712                           
 27713                           	psect	text117
 27714  01A7D2                     __ptext117:
 27715                           	opt callstack 0
 27716  01A7D2                     _OSCILLATOR_Initialize:
 27717                           	opt callstack 14
 27718                           
 27719                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 27720                           
 27721                           ; BSR set to: 58
 27722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27723                           ;incstack = 0
 27724  01A7D2  0E20               	movlw	32
 27725  01A7D4  0139               	movlb	57	; () banked
 27726  01A7D6  6FD9               	movwf	217,b	;volatile
 27727                           
 27728                           ; BSR set to: 57
 27729                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 27730  01A7D8  6BDB               	clrf	219,b	;volatile
 27731                           
 27732                           ; BSR set to: 57
 27733                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 27734  01A7DA  6BDD               	clrf	221,b	;volatile
 27735                           
 27736                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 27737  01A7DC  0E02               	movlw	2
 27738  01A7DE  6FDF               	movwf	223,b	;volatile
 27739                           
 27740                           ; BSR set to: 57
 27741                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 27742  01A7E0  6BDE               	clrf	222,b	;volatile
 27743  01A7E2                     l169:
 27744                           
 27745                           ; BSR set to: 57
 27746                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 27747  01A7E2  B1DC               	btfsc	220,0,b	;volatile
 27748  01A7E4  0012               	return	
 27749  01A7E6  D7FD               	goto	l169
 27750  01A7E8                     __end_of_OSCILLATOR_Initialize:
 27751                           	opt callstack 0
 27752                           
 27753 ;; *************** function _INTERRUPT_Initialize *****************
 27754 ;; Defined at:
 27755 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 27756 ;; Parameters:    Size  Location     Type
 27757 ;;		None
 27758 ;; Auto vars:     Size  Location     Type
 27759 ;;  state           1  [STACK] _Bool 
 27760 ;; Return value:  Size  Location     Type
 27761 ;;                  1  [STACK] void 
 27762 ;; Registers used:
 27763 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 27764 ;; Tracked objects:
 27765 ;;		On entry : 0/0
 27766 ;;		On exit  : 3F/39
 27767 ;;		Unchanged: 0/0
 27768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27773 ;;Total ram usage:        0 bytes
 27774 ;; Hardware stack levels used:    1
 27775 ;; Hardware stack levels required when called:   15
 27776 ;; This function calls:
 27777 ;;		Nothing
 27778 ;; This function is called by:
 27779 ;;		_SYSTEM_Initialize
 27780 ;; This function uses a reentrant model
 27781 ;;
 27782                           
 27783                           	psect	text118
 27784  01978A                     __ptext118:
 27785                           	opt callstack 0
 27786  01978A                     _INTERRUPT_Initialize:
 27787                           	opt callstack 0
 27788                           
 27789                           ; BSR set to: 57
 27790                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27791  01978A  52E6               	movf	postinc1,f,c
 27792                           
 27793                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 27794                           
 27795                           ;incstack = 0
 27796  01978C  8AD2               	bsf	210,5,c	;volatile
 27797                           
 27798                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 27799  01978E  AED2               	btfss	16338,7,c	;volatile
 27800  019790  D003               	goto	u8830
 27801  019792  6A0C               	clrf	(btemp+11)^0,c
 27802  019794  2A0C               	incf	(btemp+11)^0,f,c
 27803  019796  D001               	goto	u8848
 27804  019798                     u8830:
 27805  019798  6A0C               	clrf	(btemp+11)^0,c
 27806  01979A                     u8848:
 27807                           
 27808                           ;stkvar	_state @ sp[(-1)+0]
 27809  01979A  0EFF               	movlw	-1
 27810  01979C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27811                           
 27812                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 27813  0197A2  9ED2               	bcf	16338,7,c	;volatile
 27814                           
 27815                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 27816  0197A4  0E55               	movlw	85
 27817  0197A6  6ED4               	movwf	212,c	;volatile
 27818                           
 27819                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 27820  0197A8  0EAA               	movlw	170
 27821  0197AA  6ED4               	movwf	212,c	;volatile
 27822                           
 27823                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 27824  0197AC  90D4               	bcf	212,0,c	;volatile
 27825                           
 27826                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 27827  0197AE  0138               	movlb	56	; () banked
 27828  0197B0  6B9F               	clrf	159,b	;volatile
 27829                           
 27830                           ; BSR set to: 56
 27831                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 27832  0197B2  6B9E               	clrf	158,b	;volatile
 27833                           
 27834                           ; BSR set to: 56
 27835                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 27836  0197B4  0E08               	movlw	8
 27837  0197B6  6F9D               	movwf	157,b	;volatile
 27838                           
 27839                           ; BSR set to: 56
 27840                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 27841  0197B8  0E55               	movlw	85
 27842  0197BA  6ED4               	movwf	212,c	;volatile
 27843                           
 27844                           ; BSR set to: 56
 27845                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 27846  0197BC  0EAA               	movlw	170
 27847  0197BE  6ED4               	movwf	212,c	;volatile
 27848                           
 27849                           ; BSR set to: 56
 27850                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 27851  0197C0  80D4               	bsf	212,0,c	;volatile
 27852                           
 27853                           ; BSR set to: 56
 27854                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 27855                           ;stkvar	_state @ sp[(-1)+0]
 27856  0197C2  0EFF               	movlw	-1
 27857  0197C4  B0E3               	btfsc	plusw1,0,c
 27858  0197C6  D002               	bra	u8855
 27859  0197C8  9ED2               	bcf	16338,7,c	;volatile
 27860  0197CA  D001               	bra	u8856
 27861  0197CC                     u8855:
 27862  0197CC  8ED2               	bsf	16338,7,c	;volatile
 27863  0197CE                     u8856:
 27864                           
 27865                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 27866  0197CE  0139               	movlb	57	; () banked
 27867  0197D0  8782               	bsf	130,3,b	;volatile
 27868                           
 27869                           ; BSR set to: 57
 27870                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 27871  0197D2  8382               	bsf	130,1,b	;volatile
 27872                           
 27873                           ; BSR set to: 57
 27874                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 27875  0197D4  8182               	bsf	130,0,b	;volatile
 27876                           
 27877                           ; BSR set to: 57
 27878                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 27879  0197D6  8582               	bsf	130,2,b	;volatile
 27880                           
 27881                           ; BSR set to: 57
 27882                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 27883  0197D8  8786               	bsf	134,3,b	;volatile
 27884                           
 27885                           ; BSR set to: 57
 27886                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 27887  0197DA  8586               	bsf	134,2,b	;volatile
 27888                           
 27889                           ; BSR set to: 57
 27890                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 27891  0197DC  8783               	bsf	131,3,b	;volatile
 27892                           
 27893                           ; BSR set to: 57
 27894                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 27895  0197DE  8181               	bsf	129,0,b	;volatile
 27896                           
 27897                           ; BSR set to: 57
 27898                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 27899  0197E0  9185               	bcf	133,0,b	;volatile
 27900                           
 27901                           ; BSR set to: 57
 27902                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 27903  0197E2  8189               	bsf	137,0,b	;volatile
 27904                           
 27905                           ; BSR set to: 57
 27906                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 27907  0197E4  9D88               	bcf	136,6,b	;volatile
 27908                           
 27909                           ; BSR set to: 57
 27910                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 27911  0197E6  9D86               	bcf	134,6,b	;volatile
 27912                           
 27913                           ; BSR set to: 57
 27914                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 27915  0197E8  8581               	bsf	129,2,b	;volatile
 27916                           
 27917                           ; BSR set to: 57
 27918                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 27919  0197EA  8781               	bsf	129,3,b	;volatile
 27920                           
 27921                           ; BSR set to: 57
 27922                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 27923  0197EC  52E5               	movf	postdec1,f,c
 27924  0197EE  0012               	return		;funcret
 27925  0197F0                     __end_of_INTERRUPT_Initialize:
 27926                           	opt callstack 0
 27927                           
 27928 ;; *************** function _FVR_Initialize *****************
 27929 ;; Defined at:
 27930 ;;		line 58 in file "mcc_generated_files/fvr.c"
 27931 ;; Parameters:    Size  Location     Type
 27932 ;;		None
 27933 ;; Auto vars:     Size  Location     Type
 27934 ;;		None
 27935 ;; Return value:  Size  Location     Type
 27936 ;;                  1  [STACK] void 
 27937 ;; Registers used:
 27938 ;;		wreg, status,2
 27939 ;; Tracked objects:
 27940 ;;		On entry : 3F/39
 27941 ;;		On exit  : 3F/3E
 27942 ;;		Unchanged: 0/0
 27943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27948 ;;Total ram usage:        0 bytes
 27949 ;; Hardware stack levels used:    1
 27950 ;; Hardware stack levels required when called:   15
 27951 ;; This function calls:
 27952 ;;		Nothing
 27953 ;; This function is called by:
 27954 ;;		_SYSTEM_Initialize
 27955 ;; This function uses a reentrant model
 27956 ;;
 27957                           
 27958                           	psect	text119
 27959  01A8D2                     __ptext119:
 27960                           	opt callstack 0
 27961  01A8D2                     _FVR_Initialize:
 27962                           	opt callstack 14
 27963                           
 27964                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 27965                           
 27966                           ; BSR set to: 57
 27967                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27968                           ;incstack = 0
 27969  01A8D2  0EAF               	movlw	175
 27970  01A8D4  013E               	movlb	62	; () banked
 27971  01A8D6  6FC1               	movwf	193,b	;volatile
 27972                           
 27973                           ; BSR set to: 62
 27974                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 27975  01A8D8  0012               	return		;funcret
 27976  01A8DA                     __end_of_FVR_Initialize:
 27977                           	opt callstack 0
 27978                           
 27979 ;; *************** function _EXT_INT_Initialize *****************
 27980 ;; Defined at:
 27981 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 27982 ;; Parameters:    Size  Location     Type
 27983 ;;		None
 27984 ;; Auto vars:     Size  Location     Type
 27985 ;;		None
 27986 ;; Return value:  Size  Location     Type
 27987 ;;                  1  [STACK] void 
 27988 ;; Registers used:
 27989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27990 ;; Tracked objects:
 27991 ;;		On entry : 3F/39
 27992 ;;		On exit  : 3F/39
 27993 ;;		Unchanged: 0/0
 27994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27999 ;;Total ram usage:        0 bytes
 28000 ;; Hardware stack levels used:    1
 28001 ;; Hardware stack levels required when called:   16
 28002 ;; This function calls:
 28003 ;;		_INT0_SetInterruptHandler
 28004 ;;		_INT1_SetInterruptHandler
 28005 ;; This function is called by:
 28006 ;;		_SYSTEM_Initialize
 28007 ;; This function uses a reentrant model
 28008 ;;
 28009                           
 28010                           	psect	text120
 28011  01A056                     __ptext120:
 28012                           	opt callstack 0
 28013  01A056                     _EXT_INT_Initialize:
 28014                           	opt callstack 13
 28015                           
 28016                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 28017                           
 28018                           ; BSR set to: 62
 28019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28020                           ;incstack = 0
 28021  01A056  0139               	movlb	57	; () banked
 28022  01A058  91A1               	bcf	161,0,b	;volatile
 28023                           
 28024                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 28025  01A05A  90D2               	bcf	210,0,c	;volatile
 28026                           
 28027                           ; BSR set to: 57
 28028                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 28029  01A05C  0EFE               	movlw	low _INT0_DefaultInterruptHandler
 28030  01A05E  6EE6               	movwf	postinc1,c
 28031  01A060  0EA8               	movlw	high _INT0_DefaultInterruptHandler
 28032  01A062  6EE6               	movwf	postinc1,c
 28033  01A064  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 28034  01A066  6EE6               	movwf	postinc1,c
 28035  01A068  EC1F  F0D2         	call	_INT0_SetInterruptHandler	;wreg free
 28036                           
 28037                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 28038  01A06C  0139               	movlb	57	; () banked
 28039  01A06E  8191               	bsf	145,0,b	;volatile
 28040                           
 28041                           ; BSR set to: 57
 28042                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 28043  01A070  91A5               	bcf	165,0,b	;volatile
 28044                           
 28045                           ; BSR set to: 57
 28046                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 28047  01A072  92D2               	bcf	210,1,c	;volatile
 28048                           
 28049                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 28050  01A074  0EFA               	movlw	low _INT1_DefaultInterruptHandler
 28051  01A076  6EE6               	movwf	postinc1,c
 28052  01A078  0EA8               	movlw	high _INT1_DefaultInterruptHandler
 28053  01A07A  6EE6               	movwf	postinc1,c
 28054  01A07C  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 28055  01A07E  6EE6               	movwf	postinc1,c
 28056  01A080  EC0B  F0D2         	call	_INT1_SetInterruptHandler	;wreg free
 28057                           
 28058                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 28059  01A084  0139               	movlb	57	; () banked
 28060  01A086  8195               	bsf	149,0,b	;volatile
 28061                           
 28062                           ; BSR set to: 57
 28063                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28064  01A088  0012               	return		;funcret
 28065  01A08A                     __end_of_EXT_INT_Initialize:
 28066                           	opt callstack 0
 28067                           
 28068 ;; *************** function _INT1_SetInterruptHandler *****************
 28069 ;; Defined at:
 28070 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 28071 ;; Parameters:    Size  Location     Type
 28072 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28073 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 28074 ;; Auto vars:     Size  Location     Type
 28075 ;;		None
 28076 ;; Return value:  Size  Location     Type
 28077 ;;                  1  [STACK] void 
 28078 ;; Registers used:
 28079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28080 ;; Tracked objects:
 28081 ;;		On entry : 3F/39
 28082 ;;		On exit  : 0/0
 28083 ;;		Unchanged: 0/0
 28084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28089 ;;Total ram usage:        0 bytes
 28090 ;; Hardware stack levels used:    1
 28091 ;; Hardware stack levels required when called:   15
 28092 ;; This function calls:
 28093 ;;		Nothing
 28094 ;; This function is called by:
 28095 ;;		_EXT_INT_Initialize
 28096 ;;		_start_switch_handler
 28097 ;; This function uses a reentrant model
 28098 ;;
 28099                           
 28100                           	psect	text121
 28101  01A416                     __ptext121:
 28102                           	opt callstack 0
 28103  01A416                     _INT1_SetInterruptHandler:
 28104                           	opt callstack 14
 28105                           
 28106                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 28107                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28108                           
 28109                           ; BSR set to: 57
 28110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28111                           ;incstack = 0
 28112  01A416  50E1               	movf	fsr1l,w,c
 28113  01A418  0FFD               	addlw	-3
 28114  01A41A  6ED9               	movwf	fsr2l,c
 28115  01A41C  50E2               	movf	fsr1h,w,c
 28116  01A41E  6EDA               	movwf	fsr2h,c
 28117  01A420  0EFF               	movlw	255
 28118  01A422  22DA               	addwfc	fsr2h,f,c
 28119  01A424  006F FF78  F0C1    	movff	postinc2,_INT1_InterruptHandler
 28120  01A42A  006F FF78  F0C2    	movff	postinc2,_INT1_InterruptHandler+1
 28121  01A430  006F FF74  F0C3    	movff	postdec2,_INT1_InterruptHandler+2
 28122                           
 28123                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28124  01A436  52E5               	movf	postdec1,f,c
 28125  01A438  52E5               	movf	postdec1,f,c
 28126  01A43A  52E5               	movf	postdec1,f,c
 28127  01A43C  0012               	return		;funcret
 28128  01A43E                     __end_of_INT1_SetInterruptHandler:
 28129                           	opt callstack 0
 28130                           
 28131 ;; *************** function _INT0_SetInterruptHandler *****************
 28132 ;; Defined at:
 28133 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 28134 ;; Parameters:    Size  Location     Type
 28135 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28136 ;;		 -> INT0_DefaultInterruptHandler(1), 
 28137 ;; Auto vars:     Size  Location     Type
 28138 ;;		None
 28139 ;; Return value:  Size  Location     Type
 28140 ;;                  1  [STACK] void 
 28141 ;; Registers used:
 28142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28143 ;; Tracked objects:
 28144 ;;		On entry : 3F/39
 28145 ;;		On exit  : 0/0
 28146 ;;		Unchanged: 0/0
 28147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28152 ;;Total ram usage:        0 bytes
 28153 ;; Hardware stack levels used:    1
 28154 ;; Hardware stack levels required when called:   15
 28155 ;; This function calls:
 28156 ;;		Nothing
 28157 ;; This function is called by:
 28158 ;;		_EXT_INT_Initialize
 28159 ;; This function uses a reentrant model
 28160 ;;
 28161                           
 28162                           	psect	text122
 28163  01A43E                     __ptext122:
 28164                           	opt callstack 0
 28165  01A43E                     _INT0_SetInterruptHandler:
 28166                           	opt callstack 13
 28167                           
 28168                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 28169                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28170                           
 28171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28172                           ;incstack = 0
 28173  01A43E  50E1               	movf	fsr1l,w,c
 28174  01A440  0FFD               	addlw	-3
 28175  01A442  6ED9               	movwf	fsr2l,c
 28176  01A444  50E2               	movf	fsr1h,w,c
 28177  01A446  6EDA               	movwf	fsr2h,c
 28178  01A448  0EFF               	movlw	255
 28179  01A44A  22DA               	addwfc	fsr2h,f,c
 28180  01A44C  006F FF78  F0C4    	movff	postinc2,_INT0_InterruptHandler
 28181  01A452  006F FF78  F0C5    	movff	postinc2,_INT0_InterruptHandler+1
 28182  01A458  006F FF74  F0C6    	movff	postdec2,_INT0_InterruptHandler+2
 28183                           
 28184                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28185  01A45E  52E5               	movf	postdec1,f,c
 28186  01A460  52E5               	movf	postdec1,f,c
 28187  01A462  52E5               	movf	postdec1,f,c
 28188  01A464  0012               	return		;funcret
 28189  01A466                     __end_of_INT0_SetInterruptHandler:
 28190                           	opt callstack 0
 28191                           
 28192 ;; *************** function _DMA2_Initialize *****************
 28193 ;; Defined at:
 28194 ;;		line 61 in file "mcc_generated_files/dma2.c"
 28195 ;; Parameters:    Size  Location     Type
 28196 ;;		None
 28197 ;; Auto vars:     Size  Location     Type
 28198 ;;		None
 28199 ;; Return value:  Size  Location     Type
 28200 ;;                  1  [STACK] void 
 28201 ;; Registers used:
 28202 ;;		wreg, status,2
 28203 ;; Tracked objects:
 28204 ;;		On entry : 3F/3D
 28205 ;;		On exit  : 3F/3B
 28206 ;;		Unchanged: 0/0
 28207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28212 ;;Total ram usage:        0 bytes
 28213 ;; Hardware stack levels used:    1
 28214 ;; Hardware stack levels required when called:   15
 28215 ;; This function calls:
 28216 ;;		Nothing
 28217 ;; This function is called by:
 28218 ;;		_SYSTEM_Initialize
 28219 ;; This function uses a reentrant model
 28220 ;;
 28221                           
 28222                           	psect	text123
 28223  0199D0                     __ptext123:
 28224                           	opt callstack 0
 28225  0199D0                     _DMA2_Initialize:
 28226                           	opt callstack 14
 28227                           
 28228                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 28229                           
 28230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28231                           ;incstack = 0
 28232  0199D0  0E00               	movlw	0
 28233  0199D2  013B               	movlb	59	; () banked
 28234  0199D4  6FD9               	movwf	217,b	;volatile
 28235  0199D6  0E10               	movlw	16
 28236  0199D8  6FDA               	movwf	218,b	;volatile
 28237  0199DA  0E00               	movlw	0
 28238  0199DC  6FDB               	movwf	219,b	;volatile
 28239                           
 28240                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 28241  0199DE  0E3F               	movlw	63
 28242  0199E0  6FD1               	movwf	209,b	;volatile
 28243  0199E2  0EBB               	movlw	187
 28244  0199E4  6FD0               	movwf	208,b	;volatile
 28245                           
 28246                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 28247  0199E6  0E03               	movlw	3
 28248  0199E8  6FDD               	movwf	221,b	;volatile
 28249                           
 28250                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 28251  0199EA  0E00               	movlw	0
 28252  0199EC  6FD8               	movwf	216,b	;volatile
 28253  0199EE  0E01               	movlw	1
 28254  0199F0  6FD7               	movwf	215,b	;volatile
 28255                           
 28256                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 28257  0199F2  0E00               	movlw	0
 28258  0199F4  6FCF               	movwf	207,b	;volatile
 28259  0199F6  0E01               	movlw	1
 28260  0199F8  6FCE               	movwf	206,b	;volatile
 28261                           
 28262                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 28263  0199FA  0E1C               	movlw	28
 28264  0199FC  6FDF               	movwf	223,b	;volatile
 28265                           
 28266                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 28267  0199FE  0E3D               	movlw	61
 28268  019A00  6FDE               	movwf	222,b	;volatile
 28269                           
 28270                           ; BSR set to: 59
 28271                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 28272  019A02  0139               	movlb	57	; () banked
 28273  019A04  97A5               	bcf	165,3,b	;volatile
 28274                           
 28275                           ; BSR set to: 57
 28276                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 28277  019A06  95A5               	bcf	165,2,b	;volatile
 28278                           
 28279                           ; BSR set to: 57
 28280                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 28281  019A08  9BA5               	bcf	165,5,b	;volatile
 28282                           
 28283                           ; BSR set to: 57
 28284                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 28285  019A0A  99A5               	bcf	165,4,b	;volatile
 28286                           
 28287                           ; BSR set to: 57
 28288                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 28289  019A0C  9795               	bcf	149,3,b	;volatile
 28290                           
 28291                           ; BSR set to: 57
 28292                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 28293  019A0E  9595               	bcf	149,2,b	;volatile
 28294                           
 28295                           ; BSR set to: 57
 28296                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 28297  019A10  9B95               	bcf	149,5,b	;volatile
 28298                           
 28299                           ; BSR set to: 57
 28300                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 28301  019A12  9995               	bcf	149,4,b	;volatile
 28302  019A14  9ED2               	bcf	16338,7,c	;# 
 28303  019A16  0139               	banksel	14831	;# 
 28304  019A18  0E55               	movlw	85	;# 
 28305  019A1A  6FEF               	movwf	14831,b	;# 
 28306  019A1C  0EAA               	movlw	170	;# 
 28307  019A1E  6FEF               	movwf	14831,b	;# 
 28308  019A20  81EF               	bsf	14831,0,b	;# 
 28309  019A22  8ED2               	bsf	16338,7,c	;# 
 28310                           
 28311                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 28312  019A24  013B               	movlb	59	; () banked
 28313  019A26  6BDC               	clrf	220,b	;volatile
 28314                           
 28315                           ; BSR set to: 59
 28316                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28317  019A28  0012               	return		;funcret
 28318  019A2A                     __end_of_DMA2_Initialize:
 28319                           	opt callstack 0
 28320                           
 28321 ;; *************** function _DMA1_Initialize *****************
 28322 ;; Defined at:
 28323 ;;		line 86 in file "mcc_generated_files/dma1.c"
 28324 ;; Parameters:    Size  Location     Type
 28325 ;;		None
 28326 ;; Auto vars:     Size  Location     Type
 28327 ;;		None
 28328 ;; Return value:  Size  Location     Type
 28329 ;;                  1  [STACK] void 
 28330 ;; Registers used:
 28331 ;;		wreg, status,2
 28332 ;; Tracked objects:
 28333 ;;		On entry : 3F/3B
 28334 ;;		On exit  : 3F/3B
 28335 ;;		Unchanged: 0/0
 28336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28341 ;;Total ram usage:        0 bytes
 28342 ;; Hardware stack levels used:    1
 28343 ;; Hardware stack levels required when called:   15
 28344 ;; This function calls:
 28345 ;;		Nothing
 28346 ;; This function is called by:
 28347 ;;		_SYSTEM_Initialize
 28348 ;; This function uses a reentrant model
 28349 ;;
 28350                           
 28351                           	psect	text124
 28352  01964A                     __ptext124:
 28353                           	opt callstack 0
 28354  01964A                     _DMA1_Initialize:
 28355                           	opt callstack 14
 28356                           
 28357                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 28358                           
 28359                           ; BSR set to: 59
 28360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28361                           ;incstack = 0
 28362  01964A  0E00               	movlw	0
 28363  01964C  013B               	movlb	59	; () banked
 28364  01964E  6FF9               	movwf	249,b	;volatile
 28365  019650  0E10               	movlw	16
 28366  019652  6FFA               	movwf	250,b	;volatile
 28367  019654  0E00               	movlw	0
 28368  019656  6FFB               	movwf	251,b	;volatile
 28369                           
 28370                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 28371  019658  0E3D               	movlw	61
 28372  01965A  6FF1               	movwf	241,b	;volatile
 28373  01965C  0E11               	movlw	17
 28374  01965E  6FF0               	movwf	240,b	;volatile
 28375                           
 28376                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 28377  019660  0E03               	movlw	3
 28378  019662  6FFD               	movwf	253,b	;volatile
 28379                           
 28380                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 28381  019664  0E00               	movlw	0
 28382  019666  6FF8               	movwf	248,b	;volatile
 28383  019668  0E01               	movlw	1
 28384  01966A  6FF7               	movwf	247,b	;volatile
 28385                           
 28386                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 28387  01966C  0E00               	movlw	0
 28388  01966E  6FEF               	movwf	239,b	;volatile
 28389  019670  0E01               	movlw	1
 28390  019672  6FEE               	movwf	238,b	;volatile
 28391                           
 28392                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 28393  019674  0E15               	movlw	21
 28394  019676  6FFF               	movwf	255,b	;volatile
 28395                           
 28396                           ; BSR set to: 59
 28397                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 28398  019678  6BFE               	clrf	254,b	;volatile
 28399                           
 28400                           ; BSR set to: 59
 28401                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 28402  01967A  0139               	movlb	57	; () banked
 28403  01967C  93A2               	bcf	162,1,b	;volatile
 28404                           
 28405                           ; BSR set to: 57
 28406                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 28407  01967E  91A2               	bcf	162,0,b	;volatile
 28408                           
 28409                           ; BSR set to: 57
 28410                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 28411  019680  97A2               	bcf	162,3,b	;volatile
 28412                           
 28413                           ; BSR set to: 57
 28414                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 28415  019682  95A2               	bcf	162,2,b	;volatile
 28416                           
 28417                           ; BSR set to: 57
 28418                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 28419  019684  8392               	bsf	146,1,b	;volatile
 28420                           
 28421                           ; BSR set to: 57
 28422                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 28423  019686  8192               	bsf	146,0,b	;volatile
 28424                           
 28425                           ; BSR set to: 57
 28426                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 28427  019688  8792               	bsf	146,3,b	;volatile
 28428                           
 28429                           ; BSR set to: 57
 28430                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 28431  01968A  8592               	bsf	146,2,b	;volatile
 28432                           
 28433                           ; BSR set to: 57
 28434                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 28435  01968C  6BF1               	clrf	241,b	;volatile
 28436                           
 28437                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 28438  01968E  0E01               	movlw	1
 28439  019690  6FF2               	movwf	242,b	;volatile
 28440                           
 28441                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 28442  019692  0E04               	movlw	4
 28443  019694  6FF3               	movwf	243,b	;volatile
 28444                           
 28445                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 28446  019696  0E02               	movlw	2
 28447  019698  6FF4               	movwf	244,b	;volatile
 28448                           
 28449                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 28450  01969A  0E03               	movlw	3
 28451  01969C  6FF7               	movwf	247,b	;volatile
 28452  01969E  9ED2               	bcf	16338,7,c	;# 
 28453  0196A0  0139               	banksel	14831	;# 
 28454  0196A2  0E55               	movlw	85	;# 
 28455  0196A4  6FEF               	movwf	14831,b	;# 
 28456  0196A6  0EAA               	movlw	170	;# 
 28457  0196A8  6FEF               	movwf	14831,b	;# 
 28458  0196AA  81EF               	bsf	14831,0,b	;# 
 28459  0196AC  8ED2               	bsf	16338,7,c	;# 
 28460                           
 28461                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 28462  0196AE  013B               	movlb	59	; () banked
 28463  0196B0  6BFC               	clrf	252,b	;volatile
 28464                           
 28465                           ; BSR set to: 59
 28466                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28467  0196B2  0012               	return		;funcret
 28468  0196B4                     __end_of_DMA1_Initialize:
 28469                           	opt callstack 0
 28470                           
 28471 ;; *************** function _CLKREF_Initialize *****************
 28472 ;; Defined at:
 28473 ;;		line 58 in file "mcc_generated_files/clkref.c"
 28474 ;; Parameters:    Size  Location     Type
 28475 ;;		None
 28476 ;; Auto vars:     Size  Location     Type
 28477 ;;		None
 28478 ;; Return value:  Size  Location     Type
 28479 ;;                  1  [STACK] void 
 28480 ;; Registers used:
 28481 ;;		wreg, status,2
 28482 ;; Tracked objects:
 28483 ;;		On entry : 3F/3B
 28484 ;;		On exit  : 3F/3C
 28485 ;;		Unchanged: 0/0
 28486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28491 ;;Total ram usage:        0 bytes
 28492 ;; Hardware stack levels used:    1
 28493 ;; Hardware stack levels required when called:   15
 28494 ;; This function calls:
 28495 ;;		Nothing
 28496 ;; This function is called by:
 28497 ;;		_SYSTEM_Initialize
 28498 ;; This function uses a reentrant model
 28499 ;;
 28500                           
 28501                           	psect	text125
 28502  01A87A                     __ptext125:
 28503                           	opt callstack 0
 28504  01A87A                     _CLKREF_Initialize:
 28505                           	opt callstack 14
 28506                           
 28507                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 28508                           
 28509                           ; BSR set to: 59
 28510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28511                           ;incstack = 0
 28512  01A87A  013C               	movlb	60	; () banked
 28513  01A87C  6BE6               	clrf	230,b	;volatile
 28514                           
 28515                           ; BSR set to: 60
 28516                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 28517  01A87E  0E94               	movlw	148
 28518  01A880  6FE5               	movwf	229,b	;volatile
 28519                           
 28520                           ; BSR set to: 60
 28521                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28522  01A882  0012               	return		;funcret
 28523  01A884                     __end_of_CLKREF_Initialize:
 28524                           	opt callstack 0
 28525                           
 28526 ;; *************** function _ADCC_Initialize *****************
 28527 ;; Defined at:
 28528 ;;		line 65 in file "mcc_generated_files/adcc.c"
 28529 ;; Parameters:    Size  Location     Type
 28530 ;;		None
 28531 ;; Auto vars:     Size  Location     Type
 28532 ;;		None
 28533 ;; Return value:  Size  Location     Type
 28534 ;;                  1  [STACK] void 
 28535 ;; Registers used:
 28536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28537 ;; Tracked objects:
 28538 ;;		On entry : 3F/3E
 28539 ;;		On exit  : 0/0
 28540 ;;		Unchanged: 0/0
 28541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28546 ;;Total ram usage:        0 bytes
 28547 ;; Hardware stack levels used:    1
 28548 ;; Hardware stack levels required when called:   16
 28549 ;; This function calls:
 28550 ;;		_ADCC_SetADIInterruptHandler
 28551 ;;		_ADCC_SetADTIInterruptHandler
 28552 ;; This function is called by:
 28553 ;;		_SYSTEM_Initialize
 28554 ;; This function uses a reentrant model
 28555 ;;
 28556                           
 28557                           	psect	text126
 28558  0196B4                     __ptext126:
 28559                           	opt callstack 0
 28560  0196B4                     _ADCC_Initialize:
 28561                           	opt callstack 13
 28562                           
 28563                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 28564                           
 28565                           ; BSR set to: 60
 28566                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28567                           ;incstack = 0
 28568  0196B4  013E               	movlb	62	; () banked
 28569  0196B6  6BDE               	clrf	222,b	;volatile
 28570                           
 28571                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 28572  0196B8  6BDF               	clrf	223,b	;volatile
 28573                           
 28574                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 28575  0196BA  6BE0               	clrf	224,b	;volatile
 28576                           
 28577                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 28578  0196BC  6BE1               	clrf	225,b	;volatile
 28579                           
 28580                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 28581  0196BE  6BE4               	clrf	228,b	;volatile
 28582                           
 28583                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 28584  0196C0  6BE5               	clrf	229,b	;volatile
 28585                           
 28586                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 28587  0196C2  6BEA               	clrf	234,b	;volatile
 28588                           
 28589                           ; BSR set to: 62
 28590                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 28591  0196C4  0E40               	movlw	64
 28592  0196C6  6FEC               	movwf	236,b	;volatile
 28593                           
 28594                           ; BSR set to: 62
 28595                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 28596  0196C8  6BF1               	clrf	241,b	;volatile
 28597                           
 28598                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 28599  0196CA  0E20               	movlw	32
 28600  0196CC  6FF3               	movwf	243,b	;volatile
 28601                           
 28602                           ; BSR set to: 62
 28603                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 28604  0196CE  6BF4               	clrf	244,b	;volatile
 28605                           
 28606                           ; BSR set to: 62
 28607                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 28608  0196D0  6BF5               	clrf	245,b	;volatile
 28609                           
 28610                           ; BSR set to: 62
 28611                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 28612  0196D2  6BF6               	clrf	246,b	;volatile
 28613                           
 28614                           ; BSR set to: 62
 28615                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 28616  0196D4  6BF7               	clrf	247,b	;volatile
 28617                           
 28618                           ; BSR set to: 62
 28619                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 28620  0196D6  6BF9               	clrf	249,b	;volatile
 28621                           
 28622                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 28623  0196D8  0E5B               	movlw	91
 28624  0196DA  6FFA               	movwf	250,b	;volatile
 28625                           
 28626                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 28627  0196DC  0E27               	movlw	39
 28628  0196DE  6FFB               	movwf	251,b	;volatile
 28629                           
 28630                           ; BSR set to: 62
 28631                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 28632  0196E0  6BFC               	clrf	252,b	;volatile
 28633                           
 28634                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 28635  0196E2  0E02               	movlw	2
 28636  0196E4  6FFD               	movwf	253,b	;volatile
 28637                           
 28638                           ; BSR set to: 62
 28639                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 28640  0196E6  6BFE               	clrf	254,b	;volatile
 28641                           
 28642                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 28643  0196E8  0E07               	movlw	7
 28644  0196EA  6FFF               	movwf	255,b	;volatile
 28645                           
 28646                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 28647  0196EC  0E84               	movlw	132
 28648  0196EE  6FF8               	movwf	248,b	;volatile
 28649                           
 28650                           ; BSR set to: 62
 28651                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 28652  0196F0  0139               	movlb	57	; () banked
 28653  0196F2  95A1               	bcf	161,2,b	;volatile
 28654                           
 28655                           ; BSR set to: 57
 28656                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 28657  0196F4  8591               	bsf	145,2,b	;volatile
 28658                           
 28659                           ; BSR set to: 57
 28660                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 28661  0196F6  0E00               	movlw	low _ADCC_DefaultInterruptHandler
 28662  0196F8  6EE6               	movwf	postinc1,c
 28663  0196FA  0EA9               	movlw	high _ADCC_DefaultInterruptHandler
 28664  0196FC  6EE6               	movwf	postinc1,c
 28665  0196FE  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 28666  019700  6EE6               	movwf	postinc1,c
 28667  019702  EC47  F0D2         	call	_ADCC_SetADIInterruptHandler	;wreg free
 28668                           
 28669                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 28670  019706  0139               	movlb	57	; () banked
 28671  019708  97A1               	bcf	161,3,b	;volatile
 28672                           
 28673                           ; BSR set to: 57
 28674                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 28675  01970A  8791               	bsf	145,3,b	;volatile
 28676                           
 28677                           ; BSR set to: 57
 28678                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 28679  01970C  0E00               	movlw	low _ADCC_DefaultInterruptHandler
 28680  01970E  6EE6               	movwf	postinc1,c
 28681  019710  0EA9               	movlw	high _ADCC_DefaultInterruptHandler
 28682  019712  6EE6               	movwf	postinc1,c
 28683  019714  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 28684  019716  6EE6               	movwf	postinc1,c
 28685  019718  EC33  F0D2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 28686                           
 28687                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28688  01971C  0012               	return		;funcret
 28689  01971E                     __end_of_ADCC_Initialize:
 28690                           	opt callstack 0
 28691                           
 28692 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 28693 ;; Defined at:
 28694 ;;		line 336 in file "mcc_generated_files/adcc.c"
 28695 ;; Parameters:    Size  Location     Type
 28696 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28697 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 28698 ;; Auto vars:     Size  Location     Type
 28699 ;;		None
 28700 ;; Return value:  Size  Location     Type
 28701 ;;                  1  [STACK] void 
 28702 ;; Registers used:
 28703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28704 ;; Tracked objects:
 28705 ;;		On entry : 0/0
 28706 ;;		On exit  : 0/0
 28707 ;;		Unchanged: 0/0
 28708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28713 ;;Total ram usage:        0 bytes
 28714 ;; Hardware stack levels used:    1
 28715 ;; Hardware stack levels required when called:   15
 28716 ;; This function calls:
 28717 ;;		Nothing
 28718 ;; This function is called by:
 28719 ;;		_ADCC_Initialize
 28720 ;;		_start_adc_scan
 28721 ;; This function uses a reentrant model
 28722 ;;
 28723                           
 28724                           	psect	text127
 28725  01A466                     __ptext127:
 28726                           	opt callstack 0
 28727  01A466                     _ADCC_SetADTIInterruptHandler:
 28728                           	opt callstack 14
 28729                           
 28730                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 28731                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28732                           
 28733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28734                           ;incstack = 0
 28735  01A466  50E1               	movf	fsr1l,w,c
 28736  01A468  0FFD               	addlw	-3
 28737  01A46A  6ED9               	movwf	fsr2l,c
 28738  01A46C  50E2               	movf	fsr1h,w,c
 28739  01A46E  6EDA               	movwf	fsr2h,c
 28740  01A470  0EFF               	movlw	255
 28741  01A472  22DA               	addwfc	fsr2h,f,c
 28742  01A474  006F FF78  F0B2    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 28743  01A47A  006F FF78  F0B3    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 28744  01A480  006F FF74  F0B4    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 28745                           
 28746                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 28747  01A486  52E5               	movf	postdec1,f,c
 28748  01A488  52E5               	movf	postdec1,f,c
 28749  01A48A  52E5               	movf	postdec1,f,c
 28750  01A48C  0012               	return		;funcret
 28751  01A48E                     __end_of_ADCC_SetADTIInterruptHandler:
 28752                           	opt callstack 0
 28753                           
 28754 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 28755 ;; Defined at:
 28756 ;;		line 323 in file "mcc_generated_files/adcc.c"
 28757 ;; Parameters:    Size  Location     Type
 28758 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28759 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 28760 ;; Auto vars:     Size  Location     Type
 28761 ;;		None
 28762 ;; Return value:  Size  Location     Type
 28763 ;;                  1  [STACK] void 
 28764 ;; Registers used:
 28765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28766 ;; Tracked objects:
 28767 ;;		On entry : 6/0
 28768 ;;		On exit  : 0/0
 28769 ;;		Unchanged: 0/0
 28770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28775 ;;Total ram usage:        0 bytes
 28776 ;; Hardware stack levels used:    1
 28777 ;; Hardware stack levels required when called:   15
 28778 ;; This function calls:
 28779 ;;		Nothing
 28780 ;; This function is called by:
 28781 ;;		_ADCC_Initialize
 28782 ;;		_start_adc_scan
 28783 ;; This function uses a reentrant model
 28784 ;;
 28785                           
 28786                           	psect	text128
 28787  01A48E                     __ptext128:
 28788                           	opt callstack 0
 28789  01A48E                     _ADCC_SetADIInterruptHandler:
 28790                           	opt callstack 14
 28791                           
 28792                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 28793                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28794                           
 28795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28796                           ;incstack = 0
 28797  01A48E  50E1               	movf	fsr1l,w,c
 28798  01A490  0FFD               	addlw	-3
 28799  01A492  6ED9               	movwf	fsr2l,c
 28800  01A494  50E2               	movf	fsr1h,w,c
 28801  01A496  6EDA               	movwf	fsr2h,c
 28802  01A498  0EFF               	movlw	255
 28803  01A49A  22DA               	addwfc	fsr2h,f,c
 28804  01A49C  006F FF78  F0B5    	movff	postinc2,_ADCC_ADI_InterruptHandler
 28805  01A4A2  006F FF78  F0B6    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 28806  01A4A8  006F FF74  F0B7    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 28807                           
 28808                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28809  01A4AE  52E5               	movf	postdec1,f,c
 28810  01A4B0  52E5               	movf	postdec1,f,c
 28811  01A4B2  52E5               	movf	postdec1,f,c
 28812  01A4B4  0012               	return		;funcret
 28813  01A4B6                     __end_of_ADCC_SetADIInterruptHandler:
 28814                           	opt callstack 0
 28815                           
 28816 ;; *************** function _INT1_ISR *****************
 28817 ;; Defined at:
 28818 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 28819 ;; Parameters:    Size  Location     Type
 28820 ;;		None
 28821 ;; Auto vars:     Size  Location     Type
 28822 ;;		None
 28823 ;; Return value:  Size  Location     Type
 28824 ;;                  1    wreg      void 
 28825 ;; Registers used:
 28826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 28827 ;; Tracked objects:
 28828 ;;		On entry : 0/0
 28829 ;;		On exit  : 0/0
 28830 ;;		Unchanged: 0/0
 28831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28834 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28835 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28836 ;;Total ram usage:        4 bytes
 28837 ;; Hardware stack levels used:    1
 28838 ;; Hardware stack levels required when called:    5
 28839 ;; This function calls:
 28840 ;;		_INT1_CallBack
 28841 ;; This function is called by:
 28842 ;;		Interrupt level 1
 28843 ;; This function uses a non-reentrant model
 28844 ;;
 28845                           
 28846                           	psect	text129
 28847  019F40                     __ptext129:
 28848                           	opt callstack 0
 28849  019F40                     _INT1_ISR:
 28850                           	opt callstack 12
 28851                           
 28852                           ;incstack = 0
 28853  019F40  006F FF60  F03E    	movff	status,??_INT1_ISR
 28854  019F46  0060  F004  F03F   	movff	btemp,??_INT1_ISR+1
 28855  019F4C  0060  F02C  F040   	movff	btemp+10,??_INT1_ISR+2
 28856  019F52  0060  F030  F041   	movff	btemp+11,??_INT1_ISR+3
 28857  019F58  EE16  F061         	lfsr	1,___intlo_sp
 28858                           
 28859                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 28860  019F5C  0139               	movlb	57	; () banked
 28861  019F5E  91A5               	bcf	165,0,b	;volatile
 28862                           
 28863                           ; BSR set to: 57
 28864                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 28865  019F60  ECBC  F0D2         	call	_INT1_CallBack	;wreg free
 28866  019F64  0060  F104  F00C   	movff	??_INT1_ISR+3,btemp+11
 28867  019F6A  0060  F100  F00B   	movff	??_INT1_ISR+2,btemp+10
 28868  019F70  0060  F0FC  F001   	movff	??_INT1_ISR+1,btemp
 28869  019F76  0060  F0FB  FFD8   	movff	??_INT1_ISR,status
 28870  019F7C  0011               	retfie		f
 28871  019F7E                     __end_of_INT1_ISR:
 28872                           	opt callstack 0
 28873                           
 28874 ;; *************** function _INT1_CallBack *****************
 28875 ;; Defined at:
 28876 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 28877 ;; Parameters:    Size  Location     Type
 28878 ;;		None
 28879 ;; Auto vars:     Size  Location     Type
 28880 ;;		None
 28881 ;; Return value:  Size  Location     Type
 28882 ;;                  1  [STACK] void 
 28883 ;; Registers used:
 28884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 28885 ;; Tracked objects:
 28886 ;;		On entry : 3F/39
 28887 ;;		On exit  : 0/0
 28888 ;;		Unchanged: 0/0
 28889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28894 ;;Total ram usage:        0 bytes
 28895 ;; Hardware stack levels used:    1
 28896 ;; Hardware stack levels required when called:    4
 28897 ;; This function calls:
 28898 ;;		Absolute function
 28899 ;;		_INT1_DefaultInterruptHandler
 28900 ;;		_switch_handler
 28901 ;; This function is called by:
 28902 ;;		_INT1_ISR
 28903 ;; This function uses a reentrant model
 28904 ;;
 28905                           
 28906                           	psect	text130
 28907  01A578                     __ptext130:
 28908                           	opt callstack 0
 28909  01A578                     _INT1_CallBack:
 28910                           	opt callstack 12
 28911                           
 28912                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 28913                           
 28914                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28915                           ;incstack = 0
 28916  01A578  0100               	movlb	0	; () banked
 28917  01A57A  51C1               	movf	_INT1_InterruptHandler& (0+255),w,b
 28918  01A57C  11C2               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 28919  01A57E  11C3               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 28920  01A580  B4D8               	btfsc	status,2,c
 28921  01A582  0012               	return	
 28922                           
 28923                           ; BSR set to: 0
 28924                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 28925  01A584  D801               	call	u941_28
 28926  01A586  0012               	return	
 28927  01A588                     u941_28:
 28928  01A588  0005               	push	
 28929  01A58A  6EFA               	movwf	pclath,c
 28930  01A58C  51C1               	movf	_INT1_InterruptHandler& (0+255),w,b
 28931  01A58E  6EFD               	movwf	tosl,c
 28932  01A590  51C2               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 28933  01A592  6EFE               	movwf	tosh,c
 28934  01A594  51C3               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 28935  01A596  6EFF               	movwf	tosu,c
 28936  01A598  50FA               	movf	pclath,w,c
 28937  01A59A  0012               	return		;indir
 28938  01A59C                     __end_of_INT1_CallBack:
 28939                           	opt callstack 0
 28940                           
 28941 ;; *************** function _INT1_DefaultInterruptHandler *****************
 28942 ;; Defined at:
 28943 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 28944 ;; Parameters:    Size  Location     Type
 28945 ;;		None
 28946 ;; Auto vars:     Size  Location     Type
 28947 ;;		None
 28948 ;; Return value:  Size  Location     Type
 28949 ;;                  1  [STACK] void 
 28950 ;; Registers used:
 28951 ;;		None
 28952 ;; Tracked objects:
 28953 ;;		On entry : 3F/0
 28954 ;;		On exit  : 0/0
 28955 ;;		Unchanged: 0/0
 28956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28961 ;;Total ram usage:        0 bytes
 28962 ;; Hardware stack levels used:    1
 28963 ;; Hardware stack levels required when called:    3
 28964 ;; This function calls:
 28965 ;;		Nothing
 28966 ;; This function is called by:
 28967 ;;		_EXT_INT_Initialize
 28968 ;;		_INT1_CallBack
 28969 ;; This function uses a reentrant model
 28970 ;;
 28971                           
 28972                           	psect	text131
 28973  01A8FA                     __ptext131:
 28974                           	opt callstack 0
 28975  01A8FA                     _INT1_DefaultInterruptHandler:
 28976                           	opt callstack 12
 28977                           
 28978                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28979                           
 28980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28981                           ;incstack = 0
 28982  01A8FA  0012               	return		;funcret
 28983  01A8FC                     __end_of_INT1_DefaultInterruptHandler:
 28984                           	opt callstack 0
 28985                           
 28986 ;; *************** function _switch_handler *****************
 28987 ;; Defined at:
 28988 ;;		line 58 in file "dio.c"
 28989 ;; Parameters:    Size  Location     Type
 28990 ;;		None
 28991 ;; Auto vars:     Size  Location     Type
 28992 ;;  i               1  [STACK] unsigned char 
 28993 ;;  sw_value        1  [STACK] unsigned char 
 28994 ;; Return value:  Size  Location     Type
 28995 ;;                  1  [STACK] void 
 28996 ;; Registers used:
 28997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 28998 ;; Tracked objects:
 28999 ;;		On entry : 3F/0
 29000 ;;		On exit  : 0/0
 29001 ;;		Unchanged: 0/0
 29002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29007 ;;Total ram usage:        0 bytes
 29008 ;; Hardware stack levels used:    1
 29009 ;; Hardware stack levels required when called:    3
 29010 ;; This function calls:
 29011 ;;		Nothing
 29012 ;; This function is called by:
 29013 ;;		_start_switch_handler
 29014 ;;		_INT1_CallBack
 29015 ;; This function uses a reentrant model
 29016 ;;
 29017                           
 29018                           	psect	text132
 29019  01814A                     __ptext132:
 29020                           	opt callstack 0
 29021  01814A                     _switch_handler:
 29022                           	opt callstack 0
 29023                           
 29024                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29025  01814A  52E6               	movf	postinc1,f,c
 29026  01814C  52E6               	movf	postinc1,f,c
 29027                           
 29028                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 29029                           ;stkvar	_i @ sp[(-2)+0]
 29030                           
 29031                           ;incstack = 0
 29032  01814E  0EFE               	movlw	-2
 29033  018150  6AE3               	clrf	plusw1,c
 29034  018152  9EBD               	bcf	189,7,c	;volatile
 29035                           
 29036                           ;dio.c: 72:  __nop();
 29037  018154  F000               	nop	
 29038                           
 29039                           ;dio.c: 73:  __nop();
 29040  018156  F000               	nop	
 29041                           
 29042                           ;dio.c: 74:  __nop();
 29043  018158  F000               	nop	
 29044  01815A  D019               	goto	l9829
 29045  01815C                     l9817:
 29046                           
 29047                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 29048  01815C  A6CF               	btfss	207,3,c	;volatile
 29049  01815E  D011               	goto	u915_20
 29050  018160  D00D               	goto	u915_21
 29051  018162                     u912_28:
 29052                           
 29053                           ;stkvar	_sw_value @ sp[(-2)+1]
 29054  018162  0EFF               	movlw	-1
 29055  018164  0060  F033  FFE3   	movff	btemp+11,plusw1
 29056                           
 29057                           ;dio.c: 80:    break;
 29058  01816A  D027               	goto	l9831
 29059  01816C                     l9819:
 29060                           
 29061                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 29062  01816C  A4CF               	btfss	207,2,c	;volatile
 29063  01816E  D009               	goto	u915_20
 29064  018170  D005               	goto	u915_21
 29065  018172                     l9821:
 29066                           
 29067                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 29068  018172  A2CF               	btfss	207,1,c	;volatile
 29069  018174  D006               	goto	u915_20
 29070  018176  D002               	goto	u915_21
 29071  018178                     l9823:
 29072                           
 29073                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 29074  018178  A0CF               	btfss	207,0,c	;volatile
 29075  01817A  D003               	goto	u915_20
 29076  01817C                     u915_21:
 29077  01817C  6A0C               	clrf	(btemp+11)^0,c
 29078  01817E  2A0C               	incf	(btemp+11)^0,f,c
 29079  018180  D7F0               	goto	u912_28
 29080  018182                     u915_20:
 29081  018182  6A0C               	clrf	(btemp+11)^0,c
 29082  018184  D7EE               	goto	u912_28
 29083  018186                     l9825:
 29084                           
 29085                           ;dio.c: 91:    sw_value = 1;
 29086                           ;stkvar	_sw_value @ sp[(-2)+1]
 29087  018186  0EFF               	movlw	-1
 29088  018188  6AE3               	clrf	plusw1,c
 29089  01818A  2AE3               	incf	plusw1,f,c
 29090                           
 29091                           ;dio.c: 92:    break;
 29092  01818C  D016               	goto	l9831
 29093  01818E                     l9829:
 29094                           
 29095                           ;stkvar	_i @ sp[(-2)+0]
 29096  01818E  0EFE               	movlw	-2
 29097  018190  50E3               	movf	plusw1,w,c
 29098  018192  6E0B               	movwf	(btemp+10)^0,c
 29099  018194  6A0C               	clrf	(btemp+11)^0,c
 29100                           
 29101                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29102                           ; Switch size 1, requested type "simple"
 29103                           ; Number of cases is 1, Range of values is 0 to 0
 29104                           ; switch strategies available:
 29105                           ; Name         Instructions Cycles
 29106                           ; simple_byte            4     3 (average)
 29107                           ;	Chosen strategy is simple_byte
 29108  018196  500C               	movf	(btemp+11)^0,w,c
 29109  018198  0A00               	xorlw	0	; case 0
 29110  01819A  A4D8               	btfss	status,2,c
 29111  01819C  D7F4               	goto	l9825
 29112                           
 29113                           ; Switch size 1, requested type "simple"
 29114                           ; Number of cases is 4, Range of values is 0 to 3
 29115                           ; switch strategies available:
 29116                           ; Name         Instructions Cycles
 29117                           ; simple_byte           13     7 (average)
 29118                           ;	Chosen strategy is simple_byte
 29119  01819E  500B               	movf	(btemp+10)^0,w,c
 29120  0181A0  0A00               	xorlw	0	; case 0
 29121  0181A2  B4D8               	btfsc	status,2,c
 29122  0181A4  D7E9               	goto	l9823
 29123  0181A6  0A01               	xorlw	1	; case 1
 29124  0181A8  B4D8               	btfsc	status,2,c
 29125  0181AA  D7E3               	goto	l9821
 29126  0181AC  0A03               	xorlw	3	; case 2
 29127  0181AE  B4D8               	btfsc	status,2,c
 29128  0181B0  D7DD               	goto	l9819
 29129  0181B2  0A01               	xorlw	1	; case 3
 29130  0181B4  B4D8               	btfsc	status,2,c
 29131  0181B6  D7D2               	goto	l9817
 29132  0181B8  D7E6               	goto	l9825
 29133  0181BA                     l9831:
 29134                           
 29135                           ;dio.c: 96:   if (sw_value) {
 29136                           ;stkvar	_sw_value @ sp[(-2)+1]
 29137  0181BA  0EFF               	movlw	-1
 29138  0181BC  50E3               	movf	plusw1,w,c
 29139  0181BE  B4D8               	btfsc	status,2,c
 29140  0181C0  D014               	goto	l9837
 29141                           
 29142                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 29143                           ;stkvar	_i @ sp[(-2)+0]
 29144  0181C2  0EFE               	movlw	-2
 29145  0181C4  50E3               	movf	plusw1,w,c
 29146  0181C6  0D05               	mullw	5
 29147  0181C8  50F3               	movf	243,w,c
 29148  0181CA  0F60               	addlw	low _S
 29149  0181CC  6ED9               	movwf	fsr2l,c
 29150  0181CE  6ADA               	clrf	fsr2h,c
 29151  0181D0  04DE               	decf	postinc2,w,c
 29152  0181D2  A4D8               	btfss	status,2,c
 29153  0181D4  D041               	goto	l9845
 29154                           
 29155                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 29156                           ;stkvar	_i @ sp[(-2)+0]
 29157  0181D6  0EFE               	movlw	-2
 29158  0181D8  50E3               	movf	plusw1,w,c
 29159  0181DA  0D05               	mullw	5
 29160  0181DC  50F3               	movf	243,w,c
 29161  0181DE  0F60               	addlw	low _S
 29162  0181E0  6ED9               	movwf	fsr2l,c
 29163  0181E2  6ADA               	clrf	fsr2h,c
 29164  0181E4  0E00               	movlw	0
 29165  0181E6  6EDF               	movwf	indf2,c
 29166  0181E8  D037               	goto	l9845
 29167  0181EA                     l9837:
 29168                           
 29169                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 29170                           ;stkvar	_i @ sp[(-2)+0]
 29171  0181EA  0EFE               	movlw	-2
 29172  0181EC  50E3               	movf	plusw1,w,c
 29173  0181EE  0D05               	mullw	5
 29174  0181F0  50F3               	movf	243,w,c
 29175  0181F2  0F60               	addlw	low _S
 29176  0181F4  6ED9               	movwf	fsr2l,c
 29177  0181F6  6ADA               	clrf	fsr2h,c
 29178  0181F8  50DF               	movf	indf2,w,c
 29179  0181FA  A4D8               	btfss	status,2,c
 29180  0181FC  D02D               	goto	l9845
 29181                           
 29182                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 29183                           ;stkvar	_i @ sp[(-2)+0]
 29184  0181FE  0EFE               	movlw	-2
 29185  018200  50E3               	movf	plusw1,w,c
 29186  018202  0D05               	mullw	5
 29187  018204  50F3               	movf	243,w,c
 29188  018206  0F60               	addlw	low _S
 29189  018208  6ED9               	movwf	fsr2l,c
 29190  01820A  6ADA               	clrf	fsr2h,c
 29191  01820C  0E01               	movlw	1
 29192  01820E  6EDF               	movwf	indf2,c
 29193                           
 29194                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 29195  018210  EE20  F2B8         	lfsr	2,_V+184	;volatile
 29196                           
 29197                           ;stkvar	_i @ sp[(-2)+0]
 29198  018214  0EFE               	movlw	-2
 29199  018216  50E3               	movf	plusw1,w,c
 29200  018218  0D05               	mullw	5
 29201  01821A  50F3               	movf	243,w,c
 29202  01821C  0F61               	addlw	low (_S+1)
 29203  01821E  6EE9               	movwf	fsr0l,c
 29204  018220  6AEA               	clrf	fsr0h,c
 29205  018222  006F FF7B FFEE     	movff	postinc2,postinc0
 29206  018228  006F FF7B FFEE     	movff	postinc2,postinc0
 29207  01822E  006F FF7B FFEE     	movff	postinc2,postinc0
 29208  018234  006F FF7B FFEE     	movff	postinc2,postinc0
 29209                           
 29210                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 29211                           ;stkvar	_i @ sp[(-2)+0]
 29212  01823A  0EFE               	movlw	-2
 29213  01823C  006F FF8C  F00C    	movff	plusw1,btemp+11
 29214  018242  0E01               	movlw	1
 29215  018244  6E0B               	movwf	(btemp+10)^0,c
 29216  018246  2A0C               	incf	(btemp+11)^0,f,c
 29217  018248  D002               	goto	u919_24
 29218  01824A                     u919_25:
 29219  01824A  90D8               	bcf	status,0,c
 29220  01824C  360B               	rlcf	(btemp+10)^0,f,c
 29221  01824E                     u919_24:
 29222  01824E  2E0C               	decfsz	(btemp+11)^0,f,c
 29223  018250  D7FC               	goto	u919_25
 29224  018252  500B               	movf	(btemp+10)^0,w,c
 29225  018254  0100               	movlb	0	; () banked
 29226  018256  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 29227  018258                     l9845:
 29228                           
 29229                           ;dio.c: 107:  } while (++i < 4);
 29230                           ;stkvar	_i @ sp[(-2)+0]
 29231  018258  0EFE               	movlw	-2
 29232  01825A  2AE3               	incf	plusw1,f,c
 29233  01825C  0EFE               	movlw	-2
 29234  01825E  006F FF8C  F001    	movff	plusw1,btemp
 29235  018264  0E03               	movlw	3
 29236  018266  6401               	cpfsgt	btemp^0,c
 29237  018268  D792               	goto	l9829
 29238                           
 29239                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 29240  01826A  8EBD               	bsf	189,7,c	;volatile
 29241                           
 29242                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29243  01826C  52E5               	movf	postdec1,f,c
 29244  01826E  52E5               	movf	postdec1,f,c
 29245  018270  0012               	return		;funcret
 29246  018272                     __end_of_switch_handler:
 29247                           	opt callstack 0
 29248                           
 29249 ;; *************** function _TMR5_ISR *****************
 29250 ;; Defined at:
 29251 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 29252 ;; Parameters:    Size  Location     Type
 29253 ;;		None
 29254 ;; Auto vars:     Size  Location     Type
 29255 ;;		None
 29256 ;; Return value:  Size  Location     Type
 29257 ;;                  1    wreg      void 
 29258 ;; Registers used:
 29259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 29260 ;; Tracked objects:
 29261 ;;		On entry : 0/0
 29262 ;;		On exit  : 0/0
 29263 ;;		Unchanged: 0/0
 29264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29267 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29268 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29269 ;;Total ram usage:        4 bytes
 29270 ;; Hardware stack levels used:    1
 29271 ;; Hardware stack levels required when called:    5
 29272 ;; This function calls:
 29273 ;;		_TMR5_CallBack
 29274 ;;		_TMR5_WriteTimer
 29275 ;; This function is called by:
 29276 ;;		Interrupt level 1
 29277 ;; This function uses a non-reentrant model
 29278 ;;
 29279                           
 29280                           	psect	text133
 29281  019A2C                     __ptext133:
 29282                           	opt callstack 0
 29283  019A2C                     _TMR5_ISR:
 29284                           	opt callstack 12
 29285                           
 29286                           ;incstack = 0
 29287  019A2C  006F FF60  F044    	movff	status,??_TMR5_ISR+2
 29288  019A32  0060  F030  F045   	movff	btemp+11,??_TMR5_ISR+3
 29289  019A38  EE16  F061         	lfsr	1,___intlo_sp
 29290                           
 29291                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 29292  019A3C  0139               	movlb	57	; () banked
 29293  019A3E  9DA8               	bcf	168,6,b	;volatile
 29294                           
 29295                           ; BSR set to: 57
 29296                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 29297  019A40  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 29298  019A46  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 29299  019A4C  EC60  F0CF         	call	_TMR5_WriteTimer	;wreg free
 29300                           
 29301                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 29302  019A50  0102               	movlb	2	; () banked
 29303  019A52  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 29304  019A54  6E42               	movwf	??_TMR5_ISR^0,c
 29305  019A56  6A43               	clrf	(??_TMR5_ISR+1)^0,c
 29306  019A58  0E05               	movlw	5
 29307  019A5A  2642               	addwf	??_TMR5_ISR^0,f,c
 29308  019A5C  0E00               	movlw	0
 29309  019A5E  2243               	addwfc	(??_TMR5_ISR+1)^0,f,c
 29310  019A60  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 29311  019A62  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 29312  019A64  5042               	movf	??_TMR5_ISR^0,w,c
 29313  019A66  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 29314  019A68  5043               	movf	(??_TMR5_ISR+1)^0,w,c
 29315  019A6A  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 29316  019A6C  A0D8               	btfss	status,0,c
 29317  019A6E  D004               	goto	i1l1017
 29318                           
 29319                           ; BSR set to: 2
 29320                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 29321  019A70  ECCE  F0D2         	call	_TMR5_CallBack	;wreg free
 29322                           
 29323                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 29324  019A74  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 29325  019A76  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 29326  019A78                     i1l1017:
 29327  019A78  0060  F114  F00C   	movff	??_TMR5_ISR+3,btemp+11
 29328  019A7E  0060  F113  FFD8   	movff	??_TMR5_ISR+2,status
 29329  019A84  0011               	retfie		f
 29330  019A86                     __end_of_TMR5_ISR:
 29331                           	opt callstack 0
 29332                           
 29333 ;; *************** function _TMR5_WriteTimer *****************
 29334 ;; Defined at:
 29335 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 29336 ;; Parameters:    Size  Location     Type
 29337 ;;  timerVal        2  [STACK] unsigned short 
 29338 ;; Auto vars:     Size  Location     Type
 29339 ;;		None
 29340 ;; Return value:  Size  Location     Type
 29341 ;;                  1  [STACK] void 
 29342 ;; Registers used:
 29343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29344 ;; Tracked objects:
 29345 ;;		On entry : 3F/39
 29346 ;;		On exit  : 0/0
 29347 ;;		Unchanged: 0/0
 29348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29353 ;;Total ram usage:        0 bytes
 29354 ;; Hardware stack levels used:    1
 29355 ;; Hardware stack levels required when called:    3
 29356 ;; This function calls:
 29357 ;;		Nothing
 29358 ;; This function is called by:
 29359 ;;		_TMR5_ISR
 29360 ;; This function uses a reentrant model
 29361 ;;
 29362                           
 29363                           	psect	text134
 29364  019EC0                     __ptext134:
 29365                           	opt callstack 0
 29366  019EC0                     _TMR5_WriteTimer:
 29367                           	opt callstack 13
 29368                           
 29369                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 29370                           
 29371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29372                           ;incstack = 0
 29373  019EC0  A49A               	btfss	154,2,c	;volatile
 29374  019EC2  D00F               	goto	l10015
 29375                           
 29376                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 29377  019EC4  909A               	bcf	154,0,c	;volatile
 29378                           
 29379                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 29380                           ;stkvar	_timerVal @ sp[(0)+-2]
 29381  019EC6  0EFF               	movlw	255
 29382  019EC8  24E1               	addwf	fsr1l,w,c
 29383  019ECA  6ED9               	movwf	fsr2l,c
 29384  019ECC  0EFF               	movlw	255
 29385  019ECE  20E2               	addwfc	fsr1h,w,c
 29386  019ED0  6EDA               	movwf	fsr2h,c
 29387  019ED2  50DF               	movf	indf2,w,c
 29388  019ED4  6E99               	movwf	153,c	;volatile
 29389                           
 29390                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 29391                           ;stkvar	_timerVal @ sp[(0)+-2]
 29392  019ED6  0EFE               	movlw	-2
 29393  019ED8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 29394                           
 29395                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 29396  019EDE  809A               	bsf	154,0,c	;volatile
 29397                           
 29398                           ;mcc_generated_files/tmr5.c: 142:  } else {
 29399  019EE0  D00C               	goto	l1000
 29400  019EE2                     l10015:
 29401                           
 29402                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 29403                           ;stkvar	_timerVal @ sp[(0)+-2]
 29404  019EE2  0EFF               	movlw	255
 29405  019EE4  24E1               	addwf	fsr1l,w,c
 29406  019EE6  6ED9               	movwf	fsr2l,c
 29407  019EE8  0EFF               	movlw	255
 29408  019EEA  20E2               	addwfc	fsr1h,w,c
 29409  019EEC  6EDA               	movwf	fsr2h,c
 29410  019EEE  50DF               	movf	indf2,w,c
 29411  019EF0  6E99               	movwf	153,c	;volatile
 29412                           
 29413                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 29414                           ;stkvar	_timerVal @ sp[(0)+-2]
 29415  019EF2  0EFE               	movlw	-2
 29416  019EF4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 29417  019EFA                     l1000:
 29418                           
 29419                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 29420  019EFA  52E5               	movf	postdec1,f,c
 29421  019EFC  52E5               	movf	postdec1,f,c
 29422  019EFE  0012               	return		;funcret
 29423  019F00                     __end_of_TMR5_WriteTimer:
 29424                           	opt callstack 0
 29425                           
 29426 ;; *************** function _TMR5_CallBack *****************
 29427 ;; Defined at:
 29428 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 29429 ;; Parameters:    Size  Location     Type
 29430 ;;		None
 29431 ;; Auto vars:     Size  Location     Type
 29432 ;;		None
 29433 ;; Return value:  Size  Location     Type
 29434 ;;                  1  [STACK] void 
 29435 ;; Registers used:
 29436 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 29437 ;; Tracked objects:
 29438 ;;		On entry : 3F/2
 29439 ;;		On exit  : 0/0
 29440 ;;		Unchanged: 0/0
 29441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29446 ;;Total ram usage:        0 bytes
 29447 ;; Hardware stack levels used:    1
 29448 ;; Hardware stack levels required when called:    4
 29449 ;; This function calls:
 29450 ;;		Absolute function
 29451 ;;		_TMR5_DefaultInterruptHandler
 29452 ;; This function is called by:
 29453 ;;		_TMR5_ISR
 29454 ;; This function uses a reentrant model
 29455 ;;
 29456                           
 29457                           	psect	text135
 29458  01A59C                     __ptext135:
 29459                           	opt callstack 0
 29460  01A59C                     _TMR5_CallBack:
 29461                           	opt callstack 12
 29462                           
 29463                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 29464                           
 29465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29466                           ;incstack = 0
 29467  01A59C  0100               	movlb	0	; () banked
 29468  01A59E  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 29469  01A5A0  11AD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 29470  01A5A2  11AE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 29471  01A5A4  B4D8               	btfsc	status,2,c
 29472  01A5A6  0012               	return	
 29473                           
 29474                           ; BSR set to: 0
 29475                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 29476  01A5A8  D801               	call	u950_28
 29477  01A5AA  0012               	return	
 29478  01A5AC                     u950_28:
 29479  01A5AC  0005               	push	
 29480  01A5AE  6EFA               	movwf	pclath,c
 29481  01A5B0  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 29482  01A5B2  6EFD               	movwf	tosl,c
 29483  01A5B4  51AD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 29484  01A5B6  6EFE               	movwf	tosh,c
 29485  01A5B8  51AE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 29486  01A5BA  6EFF               	movwf	tosu,c
 29487  01A5BC  50FA               	movf	pclath,w,c
 29488  01A5BE  0012               	return		;indir
 29489  01A5C0                     __end_of_TMR5_CallBack:
 29490                           	opt callstack 0
 29491                           
 29492 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 29493 ;; Defined at:
 29494 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 29495 ;; Parameters:    Size  Location     Type
 29496 ;;		None
 29497 ;; Auto vars:     Size  Location     Type
 29498 ;;		None
 29499 ;; Return value:  Size  Location     Type
 29500 ;;                  1  [STACK] void 
 29501 ;; Registers used:
 29502 ;;		wreg, status,2, status,0, btemp+11
 29503 ;; Tracked objects:
 29504 ;;		On entry : 3F/0
 29505 ;;		On exit  : 3F/2
 29506 ;;		Unchanged: 0/0
 29507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29512 ;;Total ram usage:        0 bytes
 29513 ;; Hardware stack levels used:    1
 29514 ;; Hardware stack levels required when called:    3
 29515 ;; This function calls:
 29516 ;;		Nothing
 29517 ;; This function is called by:
 29518 ;;		_TMR5_Initialize
 29519 ;;		_TMR5_CallBack
 29520 ;; This function uses a reentrant model
 29521 ;;
 29522                           
 29523                           	psect	text136
 29524  01A08A                     __ptext136:
 29525                           	opt callstack 0
 29526  01A08A                     _TMR5_DefaultInterruptHandler:
 29527                           	opt callstack 12
 29528                           
 29529                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 29530                           
 29531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29532                           ;incstack = 0
 29533  01A08A  A0BE               	btfss	190,0,c	;volatile
 29534  01A08C  D002               	goto	u889_20
 29535  01A08E  0E01               	movlw	1
 29536  01A090  D001               	goto	u889_26
 29537  01A092                     u889_20:
 29538  01A092  0E00               	movlw	0
 29539  01A094                     u889_26:
 29540  01A094  0AFF               	xorlw	255
 29541  01A096  6E0C               	movwf	(btemp+11)^0,c
 29542  01A098  50BE               	movf	190,w,c	;volatile
 29543  01A09A  180C               	xorwf	(btemp+11)^0,w,c
 29544  01A09C  0BFE               	andlw	-2
 29545  01A09E  180C               	xorwf	(btemp+11)^0,w,c
 29546  01A0A0  6EBE               	movwf	190,c	;volatile
 29547                           
 29548                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 29549  01A0A2  0E01               	movlw	1
 29550  01A0A4  0102               	movlb	2	; () banked
 29551  01A0A6  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 29552  01A0A8  0E00               	movlw	0
 29553  01A0AA  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 29554  01A0AC  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 29555  01A0AE  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 29556                           
 29557                           ; BSR set to: 2
 29558                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 29559  01A0B0  0E01               	movlw	1
 29560  01A0B2  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 29561  01A0B4  0E00               	movlw	0
 29562  01A0B6  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 29563  01A0B8  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 29564  01A0BA  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 29565                           
 29566                           ; BSR set to: 2
 29567                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29568  01A0BC  0012               	return		;funcret
 29569  01A0BE                     __end_of_TMR5_DefaultInterruptHandler:
 29570                           	opt callstack 0
 29571                           
 29572 ;; *************** function _TMR3_ISR *****************
 29573 ;; Defined at:
 29574 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 29575 ;; Parameters:    Size  Location     Type
 29576 ;;		None
 29577 ;; Auto vars:     Size  Location     Type
 29578 ;;		None
 29579 ;; Return value:  Size  Location     Type
 29580 ;;                  1    wreg      void 
 29581 ;; Registers used:
 29582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 29583 ;; Tracked objects:
 29584 ;;		On entry : 0/0
 29585 ;;		On exit  : 3F/0
 29586 ;;		Unchanged: 0/0
 29587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29590 ;;      Temps:          0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29591 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29592 ;;Total ram usage:       25 bytes
 29593 ;; Hardware stack levels used:    1
 29594 ;; Hardware stack levels required when called:   14
 29595 ;; This function calls:
 29596 ;;		_TMR3_CallBack
 29597 ;;		_TMR3_WriteTimer
 29598 ;; This function is called by:
 29599 ;;		Interrupt level 1
 29600 ;; This function uses a non-reentrant model
 29601 ;;
 29602                           
 29603                           	psect	text137
 29604  017C2C                     __ptext137:
 29605                           	opt callstack 0
 29606  017C2C                     _TMR3_ISR:
 29607                           	opt callstack 3
 29608                           
 29609                           ; BSR set to: 2
 29610                           ;incstack = 0
 29611  017C2C  006F FF60  F2BC    	movff	status,??_TMR3_ISR
 29612  017C32  006F FFD8  F2BD    	movff	tblptrl,??_TMR3_ISR+1
 29613  017C38  006F FFDC  F2BE    	movff	tblptrh,??_TMR3_ISR+2
 29614  017C3E  006F FFE0  F2BF    	movff	tblptru,??_TMR3_ISR+3
 29615  017C44  006F FFD4  F2C0    	movff	tablat,??_TMR3_ISR+4
 29616  017C4A  0060  F004  F2C1   	movff	btemp,??_TMR3_ISR+5
 29617  017C50  0060  F008  F2C2   	movff	btemp+1,??_TMR3_ISR+6
 29618  017C56  0060  F00C  F2C3   	movff	btemp+2,??_TMR3_ISR+7
 29619  017C5C  0060  F010  F2C4   	movff	btemp+3,??_TMR3_ISR+8
 29620  017C62  0060  F014  F2C5   	movff	btemp+4,??_TMR3_ISR+9
 29621  017C68  0060  F018  F2C6   	movff	btemp+5,??_TMR3_ISR+10
 29622  017C6E  0060  F01C  F2C7   	movff	btemp+6,??_TMR3_ISR+11
 29623  017C74  0060  F020  F2C8   	movff	btemp+7,??_TMR3_ISR+12
 29624  017C7A  0060  F024  F2C9   	movff	btemp+8,??_TMR3_ISR+13
 29625  017C80  0060  F028  F2CA   	movff	btemp+9,??_TMR3_ISR+14
 29626  017C86  0060  F02C  F2CB   	movff	btemp+10,??_TMR3_ISR+15
 29627  017C8C  0060  F030  F2CC   	movff	btemp+11,??_TMR3_ISR+16
 29628  017C92  0060  F044  F2CD   	movff	btemp+16,??_TMR3_ISR+17
 29629  017C98  0060  F048  F2CE   	movff	btemp+17,??_TMR3_ISR+18
 29630  017C9E  0060  F04C  F2CF   	movff	btemp+18,??_TMR3_ISR+19
 29631  017CA4  0060  F050  F2D0   	movff	btemp+19,??_TMR3_ISR+20
 29632  017CAA  0060  F054  F2D1   	movff	btemp+20,??_TMR3_ISR+21
 29633  017CB0  0060  F058  F2D2   	movff	btemp+21,??_TMR3_ISR+22
 29634  017CB6  0060  F05C  F2D3   	movff	btemp+22,??_TMR3_ISR+23
 29635  017CBC  0060  F060  F2D4   	movff	btemp+23,??_TMR3_ISR+24
 29636  017CC2  EE16  F061         	lfsr	1,___intlo_sp
 29637                           
 29638                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 29639  017CC6  0139               	movlb	57	; () banked
 29640  017CC8  9DA6               	bcf	166,6,b	;volatile
 29641                           
 29642                           ; BSR set to: 57
 29643                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 29644  017CCA  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 29645  017CD0  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 29646  017CD6  EC80  F0CF         	call	_TMR3_WriteTimer	;wreg free
 29647                           
 29648                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 29649  017CDA  0100               	movlb	0	; () banked
 29650  017CDC  4BC9               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 29651  017CDE  2BCA               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 29652  017CE0  51CA               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 29653  017CE2  E104               	bnz	i1u1199_20
 29654  017CE4  0E28               	movlw	40
 29655  017CE6  5DC9               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 29656  017CE8  A0D8               	btfss	status,0,c
 29657  017CEA  D005               	goto	i1l1205
 29658  017CEC                     i1u1199_20:
 29659                           
 29660                           ; BSR set to: 0
 29661                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 29662  017CEC  ECE0  F0D2         	call	_TMR3_CallBack	;wreg free
 29663                           
 29664                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 29665  017CF0  0100               	movlb	0	; () banked
 29666  017CF2  6BC9               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 29667  017CF4  6BCA               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 29668  017CF6                     i1l1205:
 29669                           
 29670                           ; BSR set to: 0
 29671  017CF6  0060  FB50  F018   	movff	??_TMR3_ISR+24,btemp+23
 29672  017CFC  0060  FB4C  F017   	movff	??_TMR3_ISR+23,btemp+22
 29673  017D02  0060  FB48  F016   	movff	??_TMR3_ISR+22,btemp+21
 29674  017D08  0060  FB44  F015   	movff	??_TMR3_ISR+21,btemp+20
 29675  017D0E  0060  FB40  F014   	movff	??_TMR3_ISR+20,btemp+19
 29676  017D14  0060  FB3C  F013   	movff	??_TMR3_ISR+19,btemp+18
 29677  017D1A  0060  FB38  F012   	movff	??_TMR3_ISR+18,btemp+17
 29678  017D20  0060  FB34  F011   	movff	??_TMR3_ISR+17,btemp+16
 29679  017D26  0060  FB30  F00C   	movff	??_TMR3_ISR+16,btemp+11
 29680  017D2C  0060  FB2C  F00B   	movff	??_TMR3_ISR+15,btemp+10
 29681  017D32  0060  FB28  F00A   	movff	??_TMR3_ISR+14,btemp+9
 29682  017D38  0060  FB24  F009   	movff	??_TMR3_ISR+13,btemp+8
 29683  017D3E  0060  FB20  F008   	movff	??_TMR3_ISR+12,btemp+7
 29684  017D44  0060  FB1C  F007   	movff	??_TMR3_ISR+11,btemp+6
 29685  017D4A  0060  FB18  F006   	movff	??_TMR3_ISR+10,btemp+5
 29686  017D50  0060  FB14  F005   	movff	??_TMR3_ISR+9,btemp+4
 29687  017D56  0060  FB10  F004   	movff	??_TMR3_ISR+8,btemp+3
 29688  017D5C  0060  FB0C  F003   	movff	??_TMR3_ISR+7,btemp+2
 29689  017D62  0060  FB08  F002   	movff	??_TMR3_ISR+6,btemp+1
 29690  017D68  0060  FB04  F001   	movff	??_TMR3_ISR+5,btemp
 29691  017D6E  0060  FB03  FFF5   	movff	??_TMR3_ISR+4,tablat
 29692  017D74  0060  FAFF  FFF8   	movff	??_TMR3_ISR+3,tblptru
 29693  017D7A  0060  FAFB  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 29694  017D80  0060  FAF7  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 29695  017D86  0060  FAF3  FFD8   	movff	??_TMR3_ISR,status
 29696  017D8C  0011               	retfie		f
 29697  017D8E                     __end_of_TMR3_ISR:
 29698                           	opt callstack 0
 29699                           
 29700 ;; *************** function _TMR3_WriteTimer *****************
 29701 ;; Defined at:
 29702 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 29703 ;; Parameters:    Size  Location     Type
 29704 ;;  timerVal        2  [STACK] unsigned short 
 29705 ;; Auto vars:     Size  Location     Type
 29706 ;;		None
 29707 ;; Return value:  Size  Location     Type
 29708 ;;                  1  [STACK] void 
 29709 ;; Registers used:
 29710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29711 ;; Tracked objects:
 29712 ;;		On entry : 3F/39
 29713 ;;		On exit  : 0/0
 29714 ;;		Unchanged: 0/0
 29715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29720 ;;Total ram usage:        0 bytes
 29721 ;; Hardware stack levels used:    1
 29722 ;; Hardware stack levels required when called:    3
 29723 ;; This function calls:
 29724 ;;		Nothing
 29725 ;; This function is called by:
 29726 ;;		_TMR3_ISR
 29727 ;; This function uses a reentrant model
 29728 ;;
 29729                           
 29730                           	psect	text138
 29731  019F00                     __ptext138:
 29732                           	opt callstack 0
 29733  019F00                     _TMR3_WriteTimer:
 29734                           	opt callstack 13
 29735                           
 29736                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 29737                           
 29738                           ; BSR set to: 0
 29739                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29740                           ;incstack = 0
 29741  019F00  A4A6               	btfss	166,2,c	;volatile
 29742  019F02  D00F               	goto	l10033
 29743                           
 29744                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 29745  019F04  90A6               	bcf	166,0,c	;volatile
 29746                           
 29747                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 29748                           ;stkvar	_timerVal @ sp[(0)+-2]
 29749  019F06  0EFF               	movlw	255
 29750  019F08  24E1               	addwf	fsr1l,w,c
 29751  019F0A  6ED9               	movwf	fsr2l,c
 29752  019F0C  0EFF               	movlw	255
 29753  019F0E  20E2               	addwfc	fsr1h,w,c
 29754  019F10  6EDA               	movwf	fsr2h,c
 29755  019F12  50DF               	movf	indf2,w,c
 29756  019F14  6EA5               	movwf	165,c	;volatile
 29757                           
 29758                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 29759                           ;stkvar	_timerVal @ sp[(0)+-2]
 29760  019F16  0EFE               	movlw	-2
 29761  019F18  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 29762                           
 29763                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 29764  019F1E  80A6               	bsf	166,0,c	;volatile
 29765                           
 29766                           ;mcc_generated_files/tmr3.c: 141:     }
 29767  019F20  D00C               	goto	l1188
 29768  019F22                     l10033:
 29769                           
 29770                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 29771                           ;stkvar	_timerVal @ sp[(0)+-2]
 29772  019F22  0EFF               	movlw	255
 29773  019F24  24E1               	addwf	fsr1l,w,c
 29774  019F26  6ED9               	movwf	fsr2l,c
 29775  019F28  0EFF               	movlw	255
 29776  019F2A  20E2               	addwfc	fsr1h,w,c
 29777  019F2C  6EDA               	movwf	fsr2h,c
 29778  019F2E  50DF               	movf	indf2,w,c
 29779  019F30  6EA5               	movwf	165,c	;volatile
 29780                           
 29781                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 29782                           ;stkvar	_timerVal @ sp[(0)+-2]
 29783  019F32  0EFE               	movlw	-2
 29784  019F34  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 29785  019F3A                     l1188:
 29786                           
 29787                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 29788  019F3A  52E5               	movf	postdec1,f,c
 29789  019F3C  52E5               	movf	postdec1,f,c
 29790  019F3E  0012               	return		;funcret
 29791  019F40                     __end_of_TMR3_WriteTimer:
 29792                           	opt callstack 0
 29793                           
 29794 ;; *************** function _TMR3_CallBack *****************
 29795 ;; Defined at:
 29796 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 29797 ;; Parameters:    Size  Location     Type
 29798 ;;		None
 29799 ;; Auto vars:     Size  Location     Type
 29800 ;;		None
 29801 ;; Return value:  Size  Location     Type
 29802 ;;                  1  [STACK] void 
 29803 ;; Registers used:
 29804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 29805 ;; Tracked objects:
 29806 ;;		On entry : 3F/0
 29807 ;;		On exit  : 0/0
 29808 ;;		Unchanged: 0/0
 29809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29814 ;;Total ram usage:        0 bytes
 29815 ;; Hardware stack levels used:    1
 29816 ;; Hardware stack levels required when called:   13
 29817 ;; This function calls:
 29818 ;;		Absolute function
 29819 ;;		_TMR3_DefaultInterruptHandler
 29820 ;;		_calc_bsoc
 29821 ;; This function is called by:
 29822 ;;		_TMR3_ISR
 29823 ;; This function uses a reentrant model
 29824 ;;
 29825                           
 29826                           	psect	text139
 29827  01A5C0                     __ptext139:
 29828                           	opt callstack 0
 29829  01A5C0                     _TMR3_CallBack:
 29830                           	opt callstack 3
 29831                           
 29832                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 29833                           
 29834                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29835                           ;incstack = 0
 29836  01A5C0  0100               	movlb	0	; () banked
 29837  01A5C2  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 29838  01A5C4  11AA               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 29839  01A5C6  11AB               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 29840  01A5C8  B4D8               	btfsc	status,2,c
 29841  01A5CA  0012               	return	
 29842                           
 29843                           ; BSR set to: 0
 29844                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 29845  01A5CC  D801               	call	u1174_28
 29846  01A5CE  0012               	return	
 29847  01A5D0                     u1174_28:
 29848  01A5D0  0005               	push	
 29849  01A5D2  6EFA               	movwf	pclath,c
 29850  01A5D4  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 29851  01A5D6  6EFD               	movwf	tosl,c
 29852  01A5D8  51AA               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 29853  01A5DA  6EFE               	movwf	tosh,c
 29854  01A5DC  51AB               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 29855  01A5DE  6EFF               	movwf	tosu,c
 29856  01A5E0  50FA               	movf	pclath,w,c
 29857  01A5E2  0012               	return		;indir
 29858  01A5E4                     __end_of_TMR3_CallBack:
 29859                           	opt callstack 0
 29860                           
 29861 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 29862 ;; Defined at:
 29863 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 29864 ;; Parameters:    Size  Location     Type
 29865 ;;		None
 29866 ;; Auto vars:     Size  Location     Type
 29867 ;;		None
 29868 ;; Return value:  Size  Location     Type
 29869 ;;                  1  [STACK] void 
 29870 ;; Registers used:
 29871 ;;		None
 29872 ;; Tracked objects:
 29873 ;;		On entry : 3F/0
 29874 ;;		On exit  : 0/0
 29875 ;;		Unchanged: 0/0
 29876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29881 ;;Total ram usage:        0 bytes
 29882 ;; Hardware stack levels used:    1
 29883 ;; Hardware stack levels required when called:    3
 29884 ;; This function calls:
 29885 ;;		Nothing
 29886 ;; This function is called by:
 29887 ;;		_TMR3_Initialize
 29888 ;;		_TMR3_CallBack
 29889 ;; This function uses a reentrant model
 29890 ;;
 29891                           
 29892                           	psect	text140
 29893  01A8FC                     __ptext140:
 29894                           	opt callstack 0
 29895  01A8FC                     _TMR3_DefaultInterruptHandler:
 29896                           	opt callstack 12
 29897                           
 29898                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29899                           
 29900                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29901                           ;incstack = 0
 29902  01A8FC  0012               	return		;funcret
 29903  01A8FE                     __end_of_TMR3_DefaultInterruptHandler:
 29904                           	opt callstack 0
 29905                           
 29906 ;; *************** function _calc_bsoc *****************
 29907 ;; Defined at:
 29908 ;;		line 39 in file "bsoc.c"
 29909 ;; Parameters:    Size  Location     Type
 29910 ;;		None
 29911 ;; Auto vars:     Size  Location     Type
 29912 ;;  log_ptr         2  [STACK] PTR unsigned char 
 29913 ;;		 -> port_data(512), 
 29914 ;;  temp            2  [STACK] unsigned short 
 29915 ;; Return value:  Size  Location     Type
 29916 ;;                  1  [STACK] void 
 29917 ;; Registers used:
 29918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 29919 ;; Tracked objects:
 29920 ;;		On entry : 3F/0
 29921 ;;		On exit  : 3F/1
 29922 ;;		Unchanged: 0/0
 29923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29928 ;;Total ram usage:        0 bytes
 29929 ;; Hardware stack levels used:    1
 29930 ;; Hardware stack levels required when called:   12
 29931 ;; This function calls:
 29932 ;;		_StartTimer
 29933 ;;		_Volts_to_SOC
 29934 ;;		___fladd
 29935 ;;		___fldiv
 29936 ;;		___flge
 29937 ;;		___flmul
 29938 ;;		___flneg
 29939 ;;		___fltol
 29940 ;;		___xxtofl
 29941 ;;		_port_data_dma_ptr
 29942 ;;		_send_port_data_dma
 29943 ;;		_set_load_relay_one
 29944 ;;		_set_load_relay_two
 29945 ;;		_sprintf
 29946 ;;		_strlen
 29947 ;; This function is called by:
 29948 ;;		_init_bsoc
 29949 ;;		_TMR3_CallBack
 29950 ;; This function uses a reentrant model
 29951 ;;
 29952                           
 29953                           	psect	text141
 29954  013A8C                     __ptext141:
 29955                           	opt callstack 0
 29956  013A8C                     _calc_bsoc:
 29957                           	opt callstack 0
 29958                           
 29959                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29960  013A8C  52E6               	movf	postinc1,f,c
 29961  013A8E  52E6               	movf	postinc1,f,c
 29962  013A90  52E6               	movf	postinc1,f,c
 29963  013A92  52E6               	movf	postinc1,f,c
 29964                           
 29965                           ;incstack = 0
 29966                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  uint16_t temp;;bsoc.c: 44:  do { LATEbits.
      +                          LATE1 = 1; } while(0);
 29967  013A94  82BE               	bsf	190,1,c	;volatile
 29968                           
 29969                           ;bsoc.c: 46:  C.dynamic_ah += (C.c_bat / 3600.0);
 29970  013A96  0E00               	movlw	0
 29971  013A98  6EE6               	movwf	postinc1,c
 29972  013A9A  0E00               	movlw	0
 29973  013A9C  6EE6               	movwf	postinc1,c
 29974  013A9E  0E61               	movlw	97
 29975  013AA0  6EE6               	movwf	postinc1,c
 29976  013AA2  0E45               	movlw	69
 29977  013AA4  6EE6               	movwf	postinc1,c
 29978  013AA6  0060  F513  FFE6   	movff	_C+68,postinc1
 29979  013AAC  0060  F517  FFE6   	movff	_C+69,postinc1
 29980  013AB2  0060  F51B  FFE6   	movff	_C+70,postinc1
 29981  013AB8  0060  F51F  FFE6   	movff	_C+71,postinc1
 29982  013ABE  EC05  F0A1         	call	___fldiv	;wreg free
 29983  013AC2  0060  F007  FFE6   	movff	btemp,postinc1
 29984  013AC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29985  013ACE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29986  013AD4  0060  F013  FFE6   	movff	btemp+3,postinc1
 29987  013ADA  0060  F603  FFE6   	movff	_C+128,postinc1
 29988  013AE0  0060  F607  FFE6   	movff	_C+129,postinc1
 29989  013AE6  0060  F60B  FFE6   	movff	_C+130,postinc1
 29990  013AEC  0060  F60F  FFE6   	movff	_C+131,postinc1
 29991  013AF2  EC68  F099         	call	___fladd	;wreg free
 29992  013AF6  0060  F004  F180   	movff	btemp,_C+128	;volatile
 29993  013AFC  0060  F008  F181   	movff	btemp+1,_C+129	;volatile
 29994  013B02  0060  F00C  F182   	movff	btemp+2,_C+130	;volatile
 29995  013B08  0060  F010  F183   	movff	btemp+3,_C+131	;volatile
 29996                           
 29997                           ;bsoc.c: 47:  if (C.dynamic_ah > (C.bank_ah))
 29998  013B0E  0060  F603  FFE6   	movff	_C+128,postinc1
 29999  013B14  0060  F607  FFE6   	movff	_C+129,postinc1
 30000  013B1A  0060  F60B  FFE6   	movff	_C+130,postinc1
 30001  013B20  0060  F60F  FFE6   	movff	_C+131,postinc1
 30002  013B26  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30003  013B2C  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30004  013B32  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30005  013B38  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30006  013B3E  EC64  F0BD         	call	___flge	;wreg free
 30007  013B42  B001               	btfsc	btemp& (0+255),0,c
 30008  013B44  D008               	goto	l11855
 30009                           
 30010                           ;bsoc.c: 48:   C.dynamic_ah = C.bank_ah;
 30011  013B46  C17C  F180         	movff	_C+124,_C+128	;volatile
 30012  013B4A  C17D  F181         	movff	_C+125,_C+129	;volatile
 30013  013B4E  C17E  F182         	movff	_C+126,_C+130	;volatile
 30014  013B52  C17F  F183         	movff	_C+127,_C+131	;volatile
 30015  013B56                     l11855:
 30016                           
 30017                           ;bsoc.c: 49:  if (C.dynamic_ah < 0.1)
 30018  013B56  0ECD               	movlw	205
 30019  013B58  6EE6               	movwf	postinc1,c
 30020  013B5A  0ECC               	movlw	204
 30021  013B5C  6EE6               	movwf	postinc1,c
 30022  013B5E  0ECC               	movlw	204
 30023  013B60  6EE6               	movwf	postinc1,c
 30024  013B62  0E3D               	movlw	61
 30025  013B64  6EE6               	movwf	postinc1,c
 30026  013B66  0060  F603  FFE6   	movff	_C+128,postinc1
 30027  013B6C  0060  F607  FFE6   	movff	_C+129,postinc1
 30028  013B72  0060  F60B  FFE6   	movff	_C+130,postinc1
 30029  013B78  0060  F60F  FFE6   	movff	_C+131,postinc1
 30030  013B7E  EC64  F0BD         	call	___flge	;wreg free
 30031  013B82  B001               	btfsc	btemp& (0+255),0,c
 30032  013B84  D009               	goto	l11859
 30033                           
 30034                           ;bsoc.c: 50:   C.dynamic_ah = 0.1;
 30035  013B86  0ECD               	movlw	205
 30036  013B88  0101               	movlb	1	; () banked
 30037  013B8A  6F80               	movwf	(_C+128)& (0+255),b	;volatile
 30038  013B8C  0ECC               	movlw	204
 30039  013B8E  6F81               	movwf	(_C+129)& (0+255),b	;volatile
 30040  013B90  0ECC               	movlw	204
 30041  013B92  6F82               	movwf	(_C+130)& (0+255),b	;volatile
 30042  013B94  0E3D               	movlw	61
 30043  013B96  6F83               	movwf	(_C+131)& (0+255),b	;volatile
 30044  013B98                     l11859:
 30045                           
 30046                           ;bsoc.c: 52:  C.pv_ah += (C.c_pv / 3600.0);
 30047  013B98  0E00               	movlw	0
 30048  013B9A  6EE6               	movwf	postinc1,c
 30049  013B9C  0E00               	movlw	0
 30050  013B9E  6EE6               	movwf	postinc1,c
 30051  013BA0  0E61               	movlw	97
 30052  013BA2  6EE6               	movwf	postinc1,c
 30053  013BA4  0E45               	movlw	69
 30054  013BA6  6EE6               	movwf	postinc1,c
 30055  013BA8  0060  F523  FFE6   	movff	_C+72,postinc1
 30056  013BAE  0060  F527  FFE6   	movff	_C+73,postinc1
 30057  013BB4  0060  F52B  FFE6   	movff	_C+74,postinc1
 30058  013BBA  0060  F52F  FFE6   	movff	_C+75,postinc1
 30059  013BC0  EC05  F0A1         	call	___fldiv	;wreg free
 30060  013BC4  0060  F007  FFE6   	movff	btemp,postinc1
 30061  013BCA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30062  013BD0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30063  013BD6  0060  F013  FFE6   	movff	btemp+3,postinc1
 30064  013BDC  0060  F613  FFE6   	movff	_C+132,postinc1
 30065  013BE2  0060  F617  FFE6   	movff	_C+133,postinc1
 30066  013BE8  0060  F61B  FFE6   	movff	_C+134,postinc1
 30067  013BEE  0060  F61F  FFE6   	movff	_C+135,postinc1
 30068  013BF4  EC68  F099         	call	___fladd	;wreg free
 30069  013BF8  0060  F004  F184   	movff	btemp,_C+132	;volatile
 30070  013BFE  0060  F008  F185   	movff	btemp+1,_C+133	;volatile
 30071  013C04  0060  F00C  F186   	movff	btemp+2,_C+134	;volatile
 30072  013C0A  0060  F010  F187   	movff	btemp+3,_C+135	;volatile
 30073                           
 30074                           ;bsoc.c: 53:  C.pvkw += (C.p_pv / 3600.0);
 30075  013C10  0E00               	movlw	0
 30076  013C12  6EE6               	movwf	postinc1,c
 30077  013C14  0E00               	movlw	0
 30078  013C16  6EE6               	movwf	postinc1,c
 30079  013C18  0E61               	movlw	97
 30080  013C1A  6EE6               	movwf	postinc1,c
 30081  013C1C  0E45               	movlw	69
 30082  013C1E  6EE6               	movwf	postinc1,c
 30083  013C20  0060  F5C3  FFE6   	movff	_C+112,postinc1
 30084  013C26  0060  F5C7  FFE6   	movff	_C+113,postinc1
 30085  013C2C  0060  F5CB  FFE6   	movff	_C+114,postinc1
 30086  013C32  0060  F5CF  FFE6   	movff	_C+115,postinc1
 30087  013C38  EC05  F0A1         	call	___fldiv	;wreg free
 30088  013C3C  0060  F007  FFE6   	movff	btemp,postinc1
 30089  013C42  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30090  013C48  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30091  013C4E  0060  F013  FFE6   	movff	btemp+3,postinc1
 30092  013C54  0060  F653  FFE6   	movff	_C+148,postinc1
 30093  013C5A  0060  F657  FFE6   	movff	_C+149,postinc1
 30094  013C60  0060  F65B  FFE6   	movff	_C+150,postinc1
 30095  013C66  0060  F65F  FFE6   	movff	_C+151,postinc1
 30096  013C6C  EC68  F099         	call	___fladd	;wreg free
 30097  013C70  0060  F004  F194   	movff	btemp,_C+148	;volatile
 30098  013C76  0060  F008  F195   	movff	btemp+1,_C+149	;volatile
 30099  013C7C  0060  F00C  F196   	movff	btemp+2,_C+150	;volatile
 30100  013C82  0060  F010  F197   	movff	btemp+3,_C+151	;volatile
 30101                           
 30102                           ;bsoc.c: 54:  C.invkw += (C.p_inverter / 3600.0);
 30103  013C88  0E00               	movlw	0
 30104  013C8A  6EE6               	movwf	postinc1,c
 30105  013C8C  0E00               	movlw	0
 30106  013C8E  6EE6               	movwf	postinc1,c
 30107  013C90  0E61               	movlw	97
 30108  013C92  6EE6               	movwf	postinc1,c
 30109  013C94  0E45               	movlw	69
 30110  013C96  6EE6               	movwf	postinc1,c
 30111  013C98  0060  F5B3  FFE6   	movff	_C+108,postinc1
 30112  013C9E  0060  F5B7  FFE6   	movff	_C+109,postinc1
 30113  013CA4  0060  F5BB  FFE6   	movff	_C+110,postinc1
 30114  013CAA  0060  F5BF  FFE6   	movff	_C+111,postinc1
 30115  013CB0  EC05  F0A1         	call	___fldiv	;wreg free
 30116  013CB4  0060  F007  FFE6   	movff	btemp,postinc1
 30117  013CBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30118  013CC0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30119  013CC6  0060  F013  FFE6   	movff	btemp+3,postinc1
 30120  013CCC  0060  F663  FFE6   	movff	_C+152,postinc1
 30121  013CD2  0060  F667  FFE6   	movff	_C+153,postinc1
 30122  013CD8  0060  F66B  FFE6   	movff	_C+154,postinc1
 30123  013CDE  0060  F66F  FFE6   	movff	_C+155,postinc1
 30124  013CE4  EC68  F099         	call	___fladd	;wreg free
 30125  013CE8  0060  F004  F198   	movff	btemp,_C+152	;volatile
 30126  013CEE  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 30127  013CF4  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 30128  013CFA  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 30129                           
 30130                           ;bsoc.c: 55:  if (C.p_bat > 0.0)
 30131  013D00  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30132  013D06  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30133  013D0C  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30134  013D12  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30135  013D18  0E00               	movlw	0
 30136  013D1A  6EE6               	movwf	postinc1,c
 30137  013D1C  0E00               	movlw	0
 30138  013D1E  6EE6               	movwf	postinc1,c
 30139  013D20  0E00               	movlw	0
 30140  013D22  6EE6               	movwf	postinc1,c
 30141  013D24  0E00               	movlw	0
 30142  013D26  6EE6               	movwf	postinc1,c
 30143  013D28  EC64  F0BD         	call	___flge	;wreg free
 30144  013D2C  B001               	btfsc	btemp& (0+255),0,c
 30145  013D2E  D03C               	goto	l11869
 30146                           
 30147                           ;bsoc.c: 56:   C.bkwi += (C.p_bat / 3600.0);
 30148  013D30  0E00               	movlw	0
 30149  013D32  6EE6               	movwf	postinc1,c
 30150  013D34  0E00               	movlw	0
 30151  013D36  6EE6               	movwf	postinc1,c
 30152  013D38  0E61               	movlw	97
 30153  013D3A  6EE6               	movwf	postinc1,c
 30154  013D3C  0E45               	movlw	69
 30155  013D3E  6EE6               	movwf	postinc1,c
 30156  013D40  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30157  013D46  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30158  013D4C  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30159  013D52  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30160  013D58  EC05  F0A1         	call	___fldiv	;wreg free
 30161  013D5C  0060  F007  FFE6   	movff	btemp,postinc1
 30162  013D62  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30163  013D68  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30164  013D6E  0060  F013  FFE6   	movff	btemp+3,postinc1
 30165  013D74  0060  F633  FFE6   	movff	_C+140,postinc1
 30166  013D7A  0060  F637  FFE6   	movff	_C+141,postinc1
 30167  013D80  0060  F63B  FFE6   	movff	_C+142,postinc1
 30168  013D86  0060  F63F  FFE6   	movff	_C+143,postinc1
 30169  013D8C  EC68  F099         	call	___fladd	;wreg free
 30170  013D90  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 30171  013D96  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 30172  013D9C  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 30173  013DA2  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 30174  013DA8                     l11869:
 30175                           
 30176                           ;bsoc.c: 57:  if (C.p_bat < 0.0)
 30177  013DA8  0101               	movlb	1	; () banked
 30178  013DAA  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 30179  013DAC  D03C               	goto	l11873
 30180                           
 30181                           ; BSR set to: 1
 30182                           ;bsoc.c: 58:   C.bkwo += (C.p_bat / 3600.0);
 30183  013DAE  0E00               	movlw	0
 30184  013DB0  6EE6               	movwf	postinc1,c
 30185  013DB2  0E00               	movlw	0
 30186  013DB4  6EE6               	movwf	postinc1,c
 30187  013DB6  0E61               	movlw	97
 30188  013DB8  6EE6               	movwf	postinc1,c
 30189  013DBA  0E45               	movlw	69
 30190  013DBC  6EE6               	movwf	postinc1,c
 30191  013DBE  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30192  013DC4  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30193  013DCA  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30194  013DD0  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30195  013DD6  EC05  F0A1         	call	___fldiv	;wreg free
 30196  013DDA  0060  F007  FFE6   	movff	btemp,postinc1
 30197  013DE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30198  013DE6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30199  013DEC  0060  F013  FFE6   	movff	btemp+3,postinc1
 30200  013DF2  0060  F643  FFE6   	movff	_C+144,postinc1
 30201  013DF8  0060  F647  FFE6   	movff	_C+145,postinc1
 30202  013DFE  0060  F64B  FFE6   	movff	_C+146,postinc1
 30203  013E04  0060  F64F  FFE6   	movff	_C+147,postinc1
 30204  013E0A  EC68  F099         	call	___fladd	;wreg free
 30205  013E0E  0060  F004  F190   	movff	btemp,_C+144	;volatile
 30206  013E14  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 30207  013E1A  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 30208  013E20  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 30209  013E26                     l11873:
 30210                           
 30211                           ;bsoc.c: 60:  temp = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 30212  013E26  0E00               	movlw	0
 30213  013E28  6EE6               	movwf	postinc1,c
 30214  013E2A  0E00               	movlw	0
 30215  013E2C  6EE6               	movwf	postinc1,c
 30216  013E2E  0EC8               	movlw	200
 30217  013E30  6EE6               	movwf	postinc1,c
 30218  013E32  0E42               	movlw	66
 30219  013E34  6EE6               	movwf	postinc1,c
 30220  013E36  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30221  013E3C  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30222  013E42  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30223  013E48  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30224  013E4E  0060  F603  FFE6   	movff	_C+128,postinc1
 30225  013E54  0060  F607  FFE6   	movff	_C+129,postinc1
 30226  013E5A  0060  F60B  FFE6   	movff	_C+130,postinc1
 30227  013E60  0060  F60F  FFE6   	movff	_C+131,postinc1
 30228  013E66  EC05  F0A1         	call	___fldiv	;wreg free
 30229  013E6A  0060  F007  FFE6   	movff	btemp,postinc1
 30230  013E70  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30231  013E76  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30232  013E7C  0060  F013  FFE6   	movff	btemp+3,postinc1
 30233  013E82  EC53  F095         	call	___flmul	;wreg free
 30234  013E86  0060  F007  FFE6   	movff	btemp,postinc1
 30235  013E8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30236  013E92  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30237  013E98  0060  F013  FFE6   	movff	btemp+3,postinc1
 30238  013E9E  ECF3  F0BB         	call	___fltol	;wreg free
 30239  013EA2  0060  F004  F00B   	movff	btemp,btemp+10
 30240  013EA8  0060  F008  F00C   	movff	btemp+1,btemp+11
 30241  013EAE  0E01               	movlw	1
 30242  013EB0  260B               	addwf	(btemp+10)^0,f,c
 30243  013EB2  0E00               	movlw	0
 30244  013EB4  220C               	addwfc	(btemp+11)^0,f,c
 30245                           
 30246                           ;stkvar	_temp @ sp[(-4)+2]
 30247  013EB6  0EFE               	movlw	-2
 30248  013EB8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30249  013EBE  0EFF               	movlw	-1
 30250  013EC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 30251                           
 30252                           ;bsoc.c: 61:  C.soc = (Volts_to_SOC((uint32_t) C.v_bat * 1000.0) + temp) / 2;
 30253                           ;stkvar	_temp @ sp[(-4)+2]
 30254  013EC6  0E00               	movlw	0
 30255  013EC8  6EE6               	movwf	postinc1,c
 30256  013ECA  0E00               	movlw	0
 30257  013ECC  6EE6               	movwf	postinc1,c
 30258  013ECE  0E7A               	movlw	122
 30259  013ED0  6EE6               	movwf	postinc1,c
 30260  013ED2  0E44               	movlw	68
 30261  013ED4  6EE6               	movwf	postinc1,c
 30262  013ED6  0060  F553  FFE6   	movff	_C+84,postinc1
 30263  013EDC  0060  F557  FFE6   	movff	_C+85,postinc1
 30264  013EE2  0060  F55B  FFE6   	movff	_C+86,postinc1
 30265  013EE8  0060  F55F  FFE6   	movff	_C+87,postinc1
 30266  013EEE  ECF3  F0BB         	call	___fltol	;wreg free
 30267  013EF2  0060  F007  FFE6   	movff	btemp,postinc1
 30268  013EF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30269  013EFE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30270  013F04  0060  F013  FFE6   	movff	btemp+3,postinc1
 30271  013F0A  0E00               	movlw	0
 30272  013F0C  6EE6               	movwf	postinc1,c
 30273  013F0E  EC88  F0B7         	call	___xxtofl	;wreg free
 30274  013F12  0060  F007  FFE6   	movff	btemp,postinc1
 30275  013F18  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30276  013F1E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30277  013F24  0060  F013  FFE6   	movff	btemp+3,postinc1
 30278  013F2A  EC53  F095         	call	___flmul	;wreg free
 30279  013F2E  0060  F007  FFE6   	movff	btemp,postinc1
 30280  013F34  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30281  013F3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30282  013F40  0060  F013  FFE6   	movff	btemp+3,postinc1
 30283  013F46  ECF3  F0BB         	call	___fltol	;wreg free
 30284  013F4A  0060  F007  FFE6   	movff	btemp,postinc1
 30285  013F50  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30286  013F56  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30287  013F5C  0060  F013  FFE6   	movff	btemp+3,postinc1
 30288  013F62  ECF9  F0C8         	call	_Volts_to_SOC	;wreg free
 30289  013F66  0EFE               	movlw	-2
 30290  013F68  50E3               	movf	plusw1,w,c
 30291  013F6A  2601               	addwf	btemp^0,f,c
 30292  013F6C  0EFF               	movlw	-1
 30293  013F6E  50E3               	movf	plusw1,w,c
 30294  013F70  2202               	addwfc	(btemp+1)^0,f,c
 30295  013F72  90D8               	bcf	status,0,c
 30296  013F74  3002               	rrcf	(btemp+1)^0,w,c
 30297  013F76  6E0C               	movwf	(btemp+11)^0,c
 30298  013F78  3001               	rrcf	btemp^0,w,c
 30299  013F7A  6E0B               	movwf	(btemp+10)^0,c
 30300  013F7C  0060  F02C  F19E   	movff	btemp+10,_C+158	;volatile
 30301  013F82  0060  F030  F19F   	movff	btemp+11,_C+159	;volatile
 30302                           
 30303                           ;bsoc.c: 62:  if (C.soc > 100)
 30304  013F88  0101               	movlb	1	; () banked
 30305  013F8A  519F               	movf	(_C+159)& (0+255),w,b	;volatile
 30306  013F8C  E104               	bnz	u1163_20
 30307  013F8E  0E65               	movlw	101
 30308  013F90  5D9E               	subwf	(_C+158)& (0+255),w,b	;volatile
 30309  013F92  A0D8               	btfss	status,0,c
 30310  013F94  D004               	goto	l11881
 30311  013F96                     u1163_20:
 30312                           
 30313                           ; BSR set to: 1
 30314                           ;bsoc.c: 63:   C.soc = 100;
 30315  013F96  0E00               	movlw	0
 30316  013F98  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
 30317  013F9A  0E64               	movlw	100
 30318  013F9C  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
 30319  013F9E                     l11881:
 30320                           
 30321                           ; BSR set to: 1
 30322                           ;bsoc.c: 65:  if (C.c_bat < 0.0) {
 30323  013F9E  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 30324  013FA0  D043               	goto	l11885
 30325                           
 30326                           ; BSR set to: 1
 30327                           ;bsoc.c: 66:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 30328  013FA2  0060  F513  FFE6   	movff	_C+68,postinc1
 30329  013FA8  0060  F517  FFE6   	movff	_C+69,postinc1
 30330  013FAE  0060  F51B  FFE6   	movff	_C+70,postinc1
 30331  013FB4  0060  F51F  FFE6   	movff	_C+71,postinc1
 30332  013FBA  0060  F603  FFE6   	movff	_C+128,postinc1
 30333  013FC0  0060  F607  FFE6   	movff	_C+129,postinc1
 30334  013FC6  0060  F60B  FFE6   	movff	_C+130,postinc1
 30335  013FCC  0060  F60F  FFE6   	movff	_C+131,postinc1
 30336  013FD2  EC05  F0A1         	call	___fldiv	;wreg free
 30337  013FD6  0060  F007  FFE6   	movff	btemp,postinc1
 30338  013FDC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30339  013FE2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30340  013FE8  0060  F013  FFE6   	movff	btemp+3,postinc1
 30341  013FEE  EC0A  F0CE         	call	___flneg	;wreg free
 30342  013FF2  0060  F007  FFE6   	movff	btemp,postinc1
 30343  013FF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30344  013FFE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30345  014004  0060  F013  FFE6   	movff	btemp+3,postinc1
 30346  01400A  ECF3  F0BB         	call	___fltol	;wreg free
 30347  01400E  0060  F004  F00B   	movff	btemp,btemp+10
 30348  014014  0060  F008  F00C   	movff	btemp+1,btemp+11
 30349  01401A  0060  F02C  F19C   	movff	btemp+10,_C+156	;volatile
 30350  014020  0060  F030  F19D   	movff	btemp+11,_C+157	;volatile
 30351                           
 30352                           ;bsoc.c: 67:  } else {
 30353  014026  D004               	goto	l11887
 30354  014028                     l11885:
 30355                           
 30356                           ; BSR set to: 1
 30357                           ;bsoc.c: 68:   C.runtime = 120;
 30358  014028  0E00               	movlw	0
 30359  01402A  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
 30360  01402C  0E78               	movlw	120
 30361  01402E  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
 30362  014030                     l11887:
 30363                           
 30364                           ;bsoc.c: 70:  if (C.runtime > 120)
 30365  014030  0101               	movlb	1	; () banked
 30366  014032  519D               	movf	(_C+157)& (0+255),w,b	;volatile
 30367  014034  E104               	bnz	u1165_20
 30368  014036  0E79               	movlw	121
 30369  014038  5D9C               	subwf	(_C+156)& (0+255),w,b	;volatile
 30370  01403A  A0D8               	btfss	status,0,c
 30371  01403C  D004               	goto	l11891
 30372  01403E                     u1165_20:
 30373                           
 30374                           ; BSR set to: 1
 30375                           ;bsoc.c: 71:   C.runtime = 120;
 30376  01403E  0E00               	movlw	0
 30377  014040  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
 30378  014042  0E78               	movlw	120
 30379  014044  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
 30380  014046                     l11891:
 30381                           
 30382                           ; BSR set to: 1
 30383                           ;bsoc.c: 73:  V.lowint_count++;
 30384  014046  0E01               	movlw	1
 30385  014048  0102               	movlb	2	; () banked
 30386  01404A  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 30387  01404C  0E00               	movlw	0
 30388  01404E  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 30389  014050  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 30390  014052  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 30391                           
 30392                           ; BSR set to: 2
 30393                           ;bsoc.c: 75:  set_load_relay_one(V.lowint_count&1);
 30394  014054  A1B0               	btfss	(_V+176)& (0+255),0,b	;volatile
 30395  014056  D002               	goto	u1166_20
 30396  014058  0E01               	movlw	1
 30397  01405A  D001               	goto	u1167_20
 30398  01405C                     u1166_20:
 30399  01405C  0E00               	movlw	0
 30400  01405E                     u1167_20:
 30401  01405E  6EE6               	movwf	postinc1,c
 30402  014060  EC17  F0D4         	call	_set_load_relay_one	;wreg free
 30403                           
 30404                           ;bsoc.c: 76:  set_load_relay_two(!(V.lowint_count&1));
 30405  014064  0102               	movlb	2	; () banked
 30406  014066  B1B0               	btfsc	(_V+176)& (0+255),0,b	;volatile
 30407  014068  D002               	goto	u1168_20
 30408  01406A  0E01               	movlw	1
 30409  01406C  D001               	goto	u1169_20
 30410  01406E                     u1168_20:
 30411  01406E  0E00               	movlw	0
 30412  014070                     u1169_20:
 30413  014070  6EE6               	movwf	postinc1,c
 30414  014072  EC0F  F0D4         	call	_set_load_relay_two	;wreg free
 30415                           
 30416                           ;bsoc.c: 78:  log_ptr = port_data_dma_ptr();
 30417  014076  EC42  F0D4         	call	_port_data_dma_ptr	;wreg free
 30418                           
 30419                           ;stkvar	_log_ptr @ sp[(-4)+0]
 30420  01407A  0EFD               	movlw	-3
 30421  01407C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30422  014082  0EFC               	movlw	-4
 30423  014084  0060  F007  FFE3   	movff	btemp,plusw1
 30424                           
 30425                           ;bsoc.c: 79:  sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d\r\n",
 30426  01408A  0060  F673  FFE6   	movff	_C+156,postinc1
 30427  014090  0060  F677  FFE6   	movff	_C+157,postinc1
 30428  014096  0060  F67B  FFE6   	movff	_C+158,postinc1
 30429  01409C  0060  F67F  FFE6   	movff	_C+159,postinc1
 30430  0140A2  0060  F613  FFE6   	movff	_C+132,postinc1
 30431  0140A8  0060  F617  FFE6   	movff	_C+133,postinc1
 30432  0140AE  0060  F61B  FFE6   	movff	_C+134,postinc1
 30433  0140B4  0060  F61F  FFE6   	movff	_C+135,postinc1
 30434  0140BA  0060  F603  FFE6   	movff	_C+128,postinc1
 30435  0140C0  0060  F607  FFE6   	movff	_C+129,postinc1
 30436  0140C6  0060  F60B  FFE6   	movff	_C+130,postinc1
 30437  0140CC  0060  F60F  FFE6   	movff	_C+131,postinc1
 30438  0140D2  0060  F5B3  FFE6   	movff	_C+108,postinc1
 30439  0140D8  0060  F5B7  FFE6   	movff	_C+109,postinc1
 30440  0140DE  0060  F5BB  FFE6   	movff	_C+110,postinc1
 30441  0140E4  0060  F5BF  FFE6   	movff	_C+111,postinc1
 30442  0140EA  0060  F5A3  FFE6   	movff	_C+104,postinc1
 30443  0140F0  0060  F5A7  FFE6   	movff	_C+105,postinc1
 30444  0140F6  0060  F5AB  FFE6   	movff	_C+106,postinc1
 30445  0140FC  0060  F5AF  FFE6   	movff	_C+107,postinc1
 30446  014102  0060  F5C3  FFE6   	movff	_C+112,postinc1
 30447  014108  0060  F5C7  FFE6   	movff	_C+113,postinc1
 30448  01410E  0060  F5CB  FFE6   	movff	_C+114,postinc1
 30449  014114  0060  F5CF  FFE6   	movff	_C+115,postinc1
 30450  01411A  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30451  014120  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30452  014126  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30453  01412C  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30454  014132  0060  F593  FFE6   	movff	_C+100,postinc1
 30455  014138  0060  F597  FFE6   	movff	_C+101,postinc1
 30456  01413E  0060  F59B  FFE6   	movff	_C+102,postinc1
 30457  014144  0060  F59F  FFE6   	movff	_C+103,postinc1
 30458  01414A  0060  F533  FFE6   	movff	_C+76,postinc1
 30459  014150  0060  F537  FFE6   	movff	_C+77,postinc1
 30460  014156  0060  F53B  FFE6   	movff	_C+78,postinc1
 30461  01415C  0060  F53F  FFE6   	movff	_C+79,postinc1
 30462  014162  0060  F543  FFE6   	movff	_C+80,postinc1
 30463  014168  0060  F547  FFE6   	movff	_C+81,postinc1
 30464  01416E  0060  F54B  FFE6   	movff	_C+82,postinc1
 30465  014174  0060  F54F  FFE6   	movff	_C+83,postinc1
 30466  01417A  0060  F553  FFE6   	movff	_C+84,postinc1
 30467  014180  0060  F557  FFE6   	movff	_C+85,postinc1
 30468  014186  0060  F55B  FFE6   	movff	_C+86,postinc1
 30469  01418C  0060  F55F  FFE6   	movff	_C+87,postinc1
 30470  014192  0060  FA07  FFE6   	movff	_V+129,postinc1
 30471  014198  0060  FA0B  FFE6   	movff	_V+130,postinc1
 30472  01419E  0060  FA0F  FFE6   	movff	_V+131,postinc1
 30473  0141A4  0060  FA13  FFE6   	movff	_V+132,postinc1
 30474  0141AA  0EE5               	movlw	low STR_46
 30475  0141AC  6EE6               	movwf	postinc1,c
 30476  0141AE  0EFD               	movlw	high STR_46
 30477  0141B0  6EE6               	movwf	postinc1,c
 30478                           
 30479                           ;stkvar	_log_ptr @ sp[(-54)+0]
 30480  0141B2  0ECA               	movlw	-54
 30481  0141B4  006F FF8F FFE6     	movff	plusw1,postinc1
 30482  0141BA  006F FF8F FFE6     	movff	plusw1,postinc1
 30483  0141C0  0E34               	movlw	52
 30484  0141C2  6EE6               	movwf	postinc1,c
 30485  0141C4  ECF0  F0C3         	call	_sprintf	;wreg free
 30486                           
 30487                           ; BSR set to: 0
 30488                           ;bsoc.c: 84:  StartTimer(TMR_DISPLAY, 125);
 30489  0141C8  0E7D               	movlw	125
 30490  0141CA  6EE6               	movwf	postinc1,c
 30491  0141CC  0E00               	movlw	0
 30492  0141CE  6EE6               	movwf	postinc1,c
 30493  0141D0  0E0A               	movlw	10
 30494  0141D2  6EE6               	movwf	postinc1,c
 30495  0141D4  EC20  F0CF         	call	_StartTimer	;wreg free
 30496                           
 30497                           ;bsoc.c: 85:  send_port_data_dma(strlen((char*) log_ptr));
 30498                           ;stkvar	_log_ptr @ sp[(-4)+0]
 30499  0141D8  0EFC               	movlw	-4
 30500  0141DA  006F FF8F FFE6     	movff	plusw1,postinc1
 30501  0141E0  006F FF8F FFE6     	movff	plusw1,postinc1
 30502  0141E6  EC5C  F0C8         	call	_strlen	;wreg free
 30503  0141EA  0060  F007  FFE6   	movff	btemp,postinc1
 30504  0141F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30505  0141F6  EC95  F0CD         	call	_send_port_data_dma	;wreg free
 30506                           
 30507                           ; BSR set to: 59
 30508                           ;bsoc.c: 86:  C.update = 0;
 30509  0141FA  0101               	movlb	1	; () banked
 30510  0141FC  6BA0               	clrf	(_C+160)& (0+255),b	;volatile
 30511                           
 30512                           ; BSR set to: 1
 30513  0141FE  92BE               	bcf	190,1,c	;volatile
 30514                           
 30515                           ; BSR set to: 1
 30516                           ; _calc_bsoc: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 30517  014200  52E5               	movf	postdec1,f,c
 30518  014202  52E5               	movf	postdec1,f,c
 30519  014204  52E5               	movf	postdec1,f,c
 30520  014206  52E5               	movf	postdec1,f,c
 30521  014208  0012               	return		;funcret
 30522  01420A                     __end_of_calc_bsoc:
 30523                           	opt callstack 0
 30524                           
 30525 ;; *************** function _set_load_relay_two *****************
 30526 ;; Defined at:
 30527 ;;		line 97 in file "mbmc.c"
 30528 ;; Parameters:    Size  Location     Type
 30529 ;;  mode            1  [STACK] _Bool 
 30530 ;; Auto vars:     Size  Location     Type
 30531 ;;		None
 30532 ;; Return value:  Size  Location     Type
 30533 ;;                  1  [STACK] void 
 30534 ;; Registers used:
 30535 ;;		wreg, fsr1l, fsr1h
 30536 ;; Tracked objects:
 30537 ;;		On entry : 3F/2
 30538 ;;		On exit  : 0/0
 30539 ;;		Unchanged: 0/0
 30540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30545 ;;Total ram usage:        0 bytes
 30546 ;; Hardware stack levels used:    1
 30547 ;; Hardware stack levels required when called:    3
 30548 ;; This function calls:
 30549 ;;		Nothing
 30550 ;; This function is called by:
 30551 ;;		_calc_bsoc
 30552 ;; This function uses a reentrant model
 30553 ;;
 30554                           
 30555                           	psect	text142
 30556  01A81E                     __ptext142:
 30557                           	opt callstack 0
 30558  01A81E                     _set_load_relay_two:
 30559                           	opt callstack 11
 30560                           
 30561                           ;mbmc.c: 97: void set_load_relay_two(_Bool mode);mbmc.c: 98: {;mbmc.c: 99:  LATDbits.LAT
      +                          D5=mode;
 30562                           ;stkvar	_mode @ sp[(0)+-1]
 30563                           
 30564                           ; BSR set to: 1
 30565                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30566                           ;incstack = 0
 30567  01A81E  0EFF               	movlw	-1
 30568  01A820  B0E3               	btfsc	plusw1,0,c
 30569  01A822  D002               	bra	u870_25
 30570  01A824  9ABD               	bcf	189,5,c	;volatile
 30571  01A826  D001               	bra	u870_26
 30572  01A828                     u870_25:
 30573  01A828  8ABD               	bsf	189,5,c	;volatile
 30574  01A82A                     u870_26:
 30575                           
 30576                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 30577  01A82A  52E5               	movf	postdec1,f,c
 30578  01A82C  0012               	return		;funcret
 30579  01A82E                     __end_of_set_load_relay_two:
 30580                           	opt callstack 0
 30581                           
 30582 ;; *************** function _set_load_relay_one *****************
 30583 ;; Defined at:
 30584 ;;		line 92 in file "mbmc.c"
 30585 ;; Parameters:    Size  Location     Type
 30586 ;;  mode            1  [STACK] _Bool 
 30587 ;; Auto vars:     Size  Location     Type
 30588 ;;		None
 30589 ;; Return value:  Size  Location     Type
 30590 ;;                  1  [STACK] void 
 30591 ;; Registers used:
 30592 ;;		wreg, fsr1l, fsr1h
 30593 ;; Tracked objects:
 30594 ;;		On entry : 3F/2
 30595 ;;		On exit  : 0/0
 30596 ;;		Unchanged: 0/0
 30597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30602 ;;Total ram usage:        0 bytes
 30603 ;; Hardware stack levels used:    1
 30604 ;; Hardware stack levels required when called:    3
 30605 ;; This function calls:
 30606 ;;		Nothing
 30607 ;; This function is called by:
 30608 ;;		_calc_bsoc
 30609 ;; This function uses a reentrant model
 30610 ;;
 30611                           
 30612                           	psect	text143
 30613  01A82E                     __ptext143:
 30614                           	opt callstack 0
 30615  01A82E                     _set_load_relay_one:
 30616                           	opt callstack 11
 30617                           
 30618                           ;mbmc.c: 92: void set_load_relay_one(_Bool mode);mbmc.c: 93: {;mbmc.c: 94:  LATDbits.LAT
      +                          D4=mode;
 30619                           ;stkvar	_mode @ sp[(0)+-1]
 30620                           
 30621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30622                           ;incstack = 0
 30623  01A82E  0EFF               	movlw	-1
 30624  01A830  B0E3               	btfsc	plusw1,0,c
 30625  01A832  D002               	bra	u869_25
 30626  01A834  98BD               	bcf	189,4,c	;volatile
 30627  01A836  D001               	bra	u869_26
 30628  01A838                     u869_25:
 30629  01A838  88BD               	bsf	189,4,c	;volatile
 30630  01A83A                     u869_26:
 30631                           
 30632                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 30633  01A83A  52E5               	movf	postdec1,f,c
 30634  01A83C  0012               	return		;funcret
 30635  01A83E                     __end_of_set_load_relay_one:
 30636                           	opt callstack 0
 30637                           
 30638 ;; *************** function _send_port_data_dma *****************
 30639 ;; Defined at:
 30640 ;;		line 258 in file "eadog.c"
 30641 ;; Parameters:    Size  Location     Type
 30642 ;;  dsize           2  [STACK] unsigned short 
 30643 ;; Auto vars:     Size  Location     Type
 30644 ;;		None
 30645 ;; Return value:  Size  Location     Type
 30646 ;;                  1  [STACK] void 
 30647 ;; Registers used:
 30648 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 30649 ;; Tracked objects:
 30650 ;;		On entry : 0/0
 30651 ;;		On exit  : 3F/3B
 30652 ;;		Unchanged: 0/0
 30653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30658 ;;Total ram usage:        0 bytes
 30659 ;; Hardware stack levels used:    1
 30660 ;; Hardware stack levels required when called:    3
 30661 ;; This function calls:
 30662 ;;		Nothing
 30663 ;; This function is called by:
 30664 ;;		_calc_bsoc
 30665 ;; This function uses a reentrant model
 30666 ;;
 30667                           
 30668                           	psect	text144
 30669  019B2A                     __ptext144:
 30670                           	opt callstack 0
 30671  019B2A                     _send_port_data_dma:
 30672                           	opt callstack 11
 30673                           
 30674                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 30675                           ;stkvar	_dsize @ sp[(0)+-2]
 30676                           
 30677                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30678                           ;incstack = 0
 30679  019B2A  0EFE               	movlw	-2
 30680  019B2C  04E3               	decf	plusw1,w,c
 30681  019B2E  0EFF               	movlw	-1
 30682  019B30  006F FF8C  F001    	movff	plusw1,btemp
 30683  019B36  0E02               	movlw	2
 30684  019B38  5A01               	subwfb	btemp^0,f,c
 30685  019B3A  A0D8               	btfss	status,0,c
 30686  019B3C  D00C               	goto	l9133
 30687                           
 30688                           ;eadog.c: 261:   dsize = 512;
 30689  019B3E  0E00               	movlw	0
 30690  019B40  6E0B               	movwf	(btemp+10)^0,c
 30691  019B42  0E02               	movlw	2
 30692  019B44  6E0C               	movwf	(btemp+11)^0,c
 30693                           
 30694                           ;stkvar	_dsize @ sp[(0)+-2]
 30695  019B46  0EFE               	movlw	-2
 30696  019B48  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30697  019B4E  0EFF               	movlw	-1
 30698  019B50  0060  F033  FFE3   	movff	btemp+11,plusw1
 30699  019B56                     l9133:
 30700                           
 30701                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 30702  019B56  013B               	movlb	59	; () banked
 30703  019B58  9FDC               	bcf	220,7,b	;volatile
 30704                           
 30705                           ; BSR set to: 59
 30706                           ;eadog.c: 264:  DMA2SSZ = dsize;
 30707                           ;stkvar	_dsize @ sp[(0)+-2]
 30708  019B5A  0EFE               	movlw	-2
 30709  019B5C  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 30710  019B62  0EFF               	movlw	-1
 30711  019B64  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 30712                           
 30713                           ; BSR set to: 59
 30714                           ;eadog.c: 265:  DMA2DSZ = 1;
 30715  019B6A  0E00               	movlw	0
 30716  019B6C  6FCF               	movwf	207,b	;volatile
 30717  019B6E  0E01               	movlw	1
 30718  019B70  6FCE               	movwf	206,b	;volatile
 30719                           
 30720                           ; BSR set to: 59
 30721                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 30722  019B72  8FDC               	bsf	220,7,b	;volatile
 30723                           
 30724                           ; BSR set to: 59
 30725                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 30726  019B74  8DDC               	bsf	220,6,b	;volatile
 30727                           
 30728                           ; BSR set to: 59
 30729                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 30730  019B76  52E5               	movf	postdec1,f,c
 30731  019B78  52E5               	movf	postdec1,f,c
 30732  019B7A  0012               	return		;funcret
 30733  019B7C                     __end_of_send_port_data_dma:
 30734                           	opt callstack 0
 30735                           
 30736 ;; *************** function _port_data_dma_ptr *****************
 30737 ;; Defined at:
 30738 ;;		line 273 in file "eadog.c"
 30739 ;; Parameters:    Size  Location     Type
 30740 ;;		None
 30741 ;; Auto vars:     Size  Location     Type
 30742 ;;		None
 30743 ;; Return value:  Size  Location     Type
 30744 ;;                  2  [STACK] PTR unsigned char 
 30745 ;; Registers used:
 30746 ;;		wreg, status,2, status,0, btemp, btemp+1
 30747 ;; Tracked objects:
 30748 ;;		On entry : 0/2
 30749 ;;		On exit  : 0/0
 30750 ;;		Unchanged: 0/0
 30751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30756 ;;Total ram usage:        0 bytes
 30757 ;; Hardware stack levels used:    1
 30758 ;; Hardware stack levels required when called:    3
 30759 ;; This function calls:
 30760 ;;		Nothing
 30761 ;; This function is called by:
 30762 ;;		_calc_bsoc
 30763 ;; This function uses a reentrant model
 30764 ;;
 30765                           
 30766                           	psect	text145
 30767  01A884                     __ptext145:
 30768                           	opt callstack 0
 30769  01A884                     _port_data_dma_ptr:
 30770                           	opt callstack 11
 30771                           
 30772                           ;eadog.c: 275:  return port_data;
 30773                           
 30774                           ; BSR set to: 59
 30775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30776                           ;incstack = 0
 30777  01A884  0EFF               	movlw	low _port_data
 30778  01A886  6E01               	movwf	btemp^0,c
 30779  01A888  0E05               	movlw	high _port_data
 30780  01A88A  6E02               	movwf	(btemp+1)^0,c
 30781                           
 30782                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30783  01A88C  0012               	return		;funcret
 30784  01A88E                     __end_of_port_data_dma_ptr:
 30785                           	opt callstack 0
 30786                           
 30787 ;; *************** function _INT0_ISR *****************
 30788 ;; Defined at:
 30789 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 30790 ;; Parameters:    Size  Location     Type
 30791 ;;		None
 30792 ;; Auto vars:     Size  Location     Type
 30793 ;;		None
 30794 ;; Return value:  Size  Location     Type
 30795 ;;                  1    wreg      void 
 30796 ;; Registers used:
 30797 ;;		wreg, status,2, status,0, pclath, tosl
 30798 ;; Tracked objects:
 30799 ;;		On entry : 0/0
 30800 ;;		On exit  : 0/0
 30801 ;;		Unchanged: 0/0
 30802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30807 ;;Total ram usage:        0 bytes
 30808 ;; Hardware stack levels used:    1
 30809 ;; Hardware stack levels required when called:    2
 30810 ;; This function calls:
 30811 ;;		_INT0_CallBack
 30812 ;; This function is called by:
 30813 ;;		Interrupt level 2
 30814 ;; This function uses a non-reentrant model
 30815 ;;
 30816                           
 30817                           	psect	text146
 30818  01A85C                     __ptext146:
 30819                           	opt callstack 0
 30820  01A85C                     _INT0_ISR:
 30821                           	opt callstack 3
 30822                           
 30823                           ;incstack = 0
 30824  01A85C  EE14  F0C2         	lfsr	1,___inthi_sp
 30825                           
 30826                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 30827  01A860  0139               	movlb	57	; () banked
 30828  01A862  91A1               	bcf	161,0,b	;volatile
 30829                           
 30830                           ; BSR set to: 57
 30831                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 30832  01A864  ECF2  F0D2         	call	_INT0_CallBack	;wreg free
 30833  01A868  0011               	retfie		f
 30834  01A86A                     __end_of_INT0_ISR:
 30835                           	opt callstack 0
 30836                           
 30837 ;; *************** function _INT0_CallBack *****************
 30838 ;; Defined at:
 30839 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 30840 ;; Parameters:    Size  Location     Type
 30841 ;;		None
 30842 ;; Auto vars:     Size  Location     Type
 30843 ;;		None
 30844 ;; Return value:  Size  Location     Type
 30845 ;;                  1  [STACK] void 
 30846 ;; Registers used:
 30847 ;;		wreg, status,2, status,0, pclath, tosl
 30848 ;; Tracked objects:
 30849 ;;		On entry : 3F/39
 30850 ;;		On exit  : 0/0
 30851 ;;		Unchanged: 0/0
 30852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30857 ;;Total ram usage:        0 bytes
 30858 ;; Hardware stack levels used:    1
 30859 ;; Hardware stack levels required when called:    1
 30860 ;; This function calls:
 30861 ;;		Absolute function
 30862 ;;		_INT0_DefaultInterruptHandler
 30863 ;; This function is called by:
 30864 ;;		_INT0_ISR
 30865 ;; This function uses a reentrant model
 30866 ;;
 30867                           
 30868                           	psect	text147
 30869  01A5E4                     __ptext147:
 30870                           	opt callstack 0
 30871  01A5E4                     _INT0_CallBack:
 30872                           	opt callstack 3
 30873                           
 30874                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 30875                           
 30876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30877                           ;incstack = 0
 30878  01A5E4  0100               	movlb	0	; () banked
 30879  01A5E6  51C4               	movf	_INT0_InterruptHandler& (0+255),w,b
 30880  01A5E8  11C5               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 30881  01A5EA  11C6               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 30882  01A5EC  B4D8               	btfsc	status,2,c
 30883  01A5EE  0012               	return	
 30884                           
 30885                           ; BSR set to: 0
 30886                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 30887  01A5F0  D801               	call	u939_48
 30888  01A5F2  0012               	return	
 30889  01A5F4                     u939_48:
 30890  01A5F4  0005               	push	
 30891  01A5F6  6EFA               	movwf	pclath,c
 30892  01A5F8  51C4               	movf	_INT0_InterruptHandler& (0+255),w,b
 30893  01A5FA  6EFD               	movwf	tosl,c
 30894  01A5FC  51C5               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 30895  01A5FE  6EFE               	movwf	tosh,c
 30896  01A600  51C6               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 30897  01A602  6EFF               	movwf	tosu,c
 30898  01A604  50FA               	movf	pclath,w,c
 30899  01A606  0012               	return		;indir
 30900  01A608                     __end_of_INT0_CallBack:
 30901                           	opt callstack 0
 30902                           
 30903 ;; *************** function _INT0_DefaultInterruptHandler *****************
 30904 ;; Defined at:
 30905 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 30906 ;; Parameters:    Size  Location     Type
 30907 ;;		None
 30908 ;; Auto vars:     Size  Location     Type
 30909 ;;		None
 30910 ;; Return value:  Size  Location     Type
 30911 ;;                  1  [STACK] void 
 30912 ;; Registers used:
 30913 ;;		None
 30914 ;; Tracked objects:
 30915 ;;		On entry : 3F/0
 30916 ;;		On exit  : 0/0
 30917 ;;		Unchanged: 0/0
 30918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30923 ;;Total ram usage:        0 bytes
 30924 ;; Hardware stack levels used:    1
 30925 ;; This function calls:
 30926 ;;		Nothing
 30927 ;; This function is called by:
 30928 ;;		_EXT_INT_Initialize
 30929 ;;		_INT0_CallBack
 30930 ;; This function uses a reentrant model
 30931 ;;
 30932                           
 30933                           	psect	text148
 30934  01A8FE                     __ptext148:
 30935                           	opt callstack 0
 30936  01A8FE                     _INT0_DefaultInterruptHandler:
 30937                           	opt callstack 3
 30938                           
 30939                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30940                           
 30941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30942                           ;incstack = 0
 30943  01A8FE  0012               	return		;funcret
 30944  01A900                     __end_of_INT0_DefaultInterruptHandler:
 30945                           	opt callstack 0
 30946                           
 30947 ;; *************** function _Default_ISR *****************
 30948 ;; Defined at:
 30949 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 30950 ;; Parameters:    Size  Location     Type
 30951 ;;		None
 30952 ;; Auto vars:     Size  Location     Type
 30953 ;;		None
 30954 ;; Return value:  Size  Location     Type
 30955 ;;                  1    wreg      void 
 30956 ;; Registers used:
 30957 ;;		None
 30958 ;; Tracked objects:
 30959 ;;		On entry : 0/0
 30960 ;;		On exit  : 0/0
 30961 ;;		Unchanged: 0/0
 30962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30967 ;;Total ram usage:        0 bytes
 30968 ;; Hardware stack levels used:    1
 30969 ;; This function calls:
 30970 ;;		Nothing
 30971 ;; This function is called by:
 30972 ;;		Interrupt level 2
 30973 ;; This function uses a non-reentrant model
 30974 ;;
 30975                           
 30976                           	psect	text149
 30977  01A8F4                     __ptext149:
 30978                           	opt callstack 0
 30979  01A8F4                     _Default_ISR:
 30980                           	opt callstack 5
 30981                           
 30982                           ;incstack = 0
 30983  01A8F4  EE14  F0C2         	lfsr	1,___inthi_sp
 30984  01A8F8  0011               	retfie		f
 30985  01A8FA                     __end_of_Default_ISR:
 30986                           	opt callstack 0
 30987                           
 30988 ;; *************** function _ADCC_ISR *****************
 30989 ;; Defined at:
 30990 ;;		line 314 in file "mcc_generated_files/adcc.c"
 30991 ;; Parameters:    Size  Location     Type
 30992 ;;		None
 30993 ;; Auto vars:     Size  Location     Type
 30994 ;;		None
 30995 ;; Return value:  Size  Location     Type
 30996 ;;                  1    wreg      void 
 30997 ;; Registers used:
 30998 ;;		wreg, status,2, status,0, pclath, tosl
 30999 ;; Tracked objects:
 31000 ;;		On entry : 0/0
 31001 ;;		On exit  : 0/0
 31002 ;;		Unchanged: 0/0
 31003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31008 ;;Total ram usage:        0 bytes
 31009 ;; Hardware stack levels used:    1
 31010 ;; Hardware stack levels required when called:    1
 31011 ;; This function calls:
 31012 ;;		Absolute function
 31013 ;;		_ADCC_DefaultInterruptHandler
 31014 ;;		_adc_int_handler
 31015 ;; This function is called by:
 31016 ;;		Interrupt level 2
 31017 ;; This function uses a non-reentrant model
 31018 ;;
 31019                           
 31020                           	psect	text150
 31021  01A1DC                     __ptext150:
 31022                           	opt callstack 0
 31023  01A1DC                     _ADCC_ISR:
 31024                           	opt callstack 4
 31025                           
 31026                           ;incstack = 0
 31027  01A1DC  EE14  F0C2         	lfsr	1,___inthi_sp
 31028                           
 31029                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 31030  01A1E0  0139               	movlb	57	; () banked
 31031  01A1E2  95A1               	bcf	161,2,b	;volatile
 31032                           
 31033                           ; BSR set to: 57
 31034                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 31035  01A1E4  0100               	movlb	0	; () banked
 31036  01A1E6  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 31037  01A1E8  11B6               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 31038  01A1EA  11B7               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 31039  01A1EC  B4D8               	btfsc	status,2,c
 31040  01A1EE  0011               	retfie		f
 31041                           
 31042                           ; BSR set to: 0
 31043                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 31044  01A1F0  D801               	call	i2u975_48
 31045  01A1F2  0011               	retfie		f
 31046  01A1F4                     i2u975_48:
 31047  01A1F4  0005               	push	
 31048  01A1F6  6EFA               	movwf	pclath,c
 31049  01A1F8  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 31050  01A1FA  6EFD               	movwf	tosl,c
 31051  01A1FC  51B6               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 31052  01A1FE  6EFE               	movwf	tosh,c
 31053  01A200  51B7               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 31054  01A202  6EFF               	movwf	tosu,c
 31055  01A204  50FA               	movf	pclath,w,c
 31056  01A206  0012               	return		;indir
 31057  01A208                     __end_of_ADCC_ISR:
 31058                           	opt callstack 0
 31059                           
 31060 ;; *************** function _adc_int_t_handler *****************
 31061 ;; Defined at:
 31062 ;;		line 128 in file "daq.c"
 31063 ;; Parameters:    Size  Location     Type
 31064 ;;		None
 31065 ;; Auto vars:     Size  Location     Type
 31066 ;;		None
 31067 ;; Return value:  Size  Location     Type
 31068 ;;                  1  [STACK] void 
 31069 ;; Registers used:
 31070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 31071 ;; Tracked objects:
 31072 ;;		On entry : 3F/0
 31073 ;;		On exit  : 1/0
 31074 ;;		Unchanged: 0/0
 31075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31080 ;;Total ram usage:        0 bytes
 31081 ;; Hardware stack levels used:    1
 31082 ;; Hardware stack levels required when called:    1
 31083 ;; This function calls:
 31084 ;;		_ADCC_DischargeSampleCapacitor
 31085 ;;		_ADCC_StartConversion
 31086 ;; This function is called by:
 31087 ;;		_start_adc_scan
 31088 ;;		_ADCC_ThresholdISR
 31089 ;; This function uses a reentrant model
 31090 ;;
 31091                           
 31092                           	psect	text151
 31093  0195CC                     __ptext151:
 31094                           	opt callstack 0
 31095  0195CC                     _adc_int_t_handler:
 31096                           	opt callstack 3
 31097                           
 31098                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 31099                           
 31100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31101                           ;incstack = 0
 31102  0195CC  013E               	movlb	62	; () banked
 31103  0195CE  51E6               	movf	230,w,b	;volatile
 31104  0195D0  006F FB9C  F001    	movff	16103,btemp	;volatile
 31105  0195D6  6A02               	clrf	(btemp+1)^0,c
 31106  0195D8  0060  F004  F002   	movff	btemp,btemp+1
 31107  0195DE  6A01               	clrf	btemp^0,c
 31108  0195E0  2601               	addwf	btemp^0,f,c
 31109  0195E2  0E00               	movlw	0
 31110  0195E4  2202               	addwfc	(btemp+1)^0,f,c
 31111  0195E6  0100               	movlb	0	; () banked
 31112  0195E8  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
 31113  0195EA  0D02               	mullw	2
 31114  0195EC  50F3               	movf	243,w,c
 31115  0195EE  0FCB               	addlw	low _R
 31116  0195F0  6ED9               	movwf	fsr2l,c
 31117  0195F2  6ADA               	clrf	fsr2h,c
 31118  0195F4  0060  F007  FFDE   	movff	btemp,postinc2
 31119  0195FA  0060  F00B  FFDD   	movff	btemp+1,postdec2
 31120  019600                     l10283:
 31121                           
 31122                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 31123  019600  0100               	movlb	0	; () banked
 31124  019602  2BEF               	incf	(_R+36)& (0+255),f,b	;volatile
 31125  019604  0E0D               	movlw	13
 31126  019606  65EF               	cpfsgt	(_R+36)& (0+255),b	;volatile
 31127  019608  D003               	goto	l10289
 31128                           
 31129                           ; BSR set to: 0
 31130                           ;daq.c: 136:    R.done = 1;
 31131  01960A  0E01               	movlw	1
 31132  01960C  6FF2               	movwf	(_R+39)& (0+255),b	;volatile
 31133  01960E  0012               	return	
 31134  019610                     l10289:
 31135                           
 31136                           ; BSR set to: 0
 31137                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 31138  019610  0060  F3BC  F00C   	movff	_R+36,btemp+11	;volatile
 31139  019616  EE20  F0F0         	lfsr	2,_R+37	;volatile
 31140  01961A  006F FF78  F009    	movff	postinc2,btemp+8
 31141  019620  006F FF74  F00A    	movff	postdec2,btemp+9
 31142  019626  2A0C               	incf	(btemp+11)^0,f,c
 31143  019628  D003               	goto	u972_44
 31144  01962A                     u972_45:
 31145  01962A  90D8               	bcf	status,0,c
 31146  01962C  320A               	rrcf	(btemp+9)^0,f,c
 31147  01962E  3209               	rrcf	(btemp+8)^0,f,c
 31148  019630                     u972_44:
 31149  019630  2E0C               	decfsz	(btemp+11)^0,f,c
 31150  019632  D7FB               	goto	u972_45
 31151  019634  A009               	btfss	(btemp+8)^0,0,c
 31152  019636  D7E4               	goto	l10283
 31153                           
 31154                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 31155  019638  EC59  F0D4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 31156                           
 31157                           ; BSR set to: 62
 31158                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 31159  01963C  0100               	movlb	0	; () banked
 31160  01963E  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
 31161  019640  0B0F               	andlw	15
 31162  019642  6EE6               	movwf	postinc1,c
 31163  019644  ECFE  F0D3         	call	_ADCC_StartConversion	;wreg free
 31164                           
 31165                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31166  019648  0012               	return		;funcret
 31167  01964A                     __end_of_adc_int_t_handler:
 31168                           	opt callstack 0
 31169                           
 31170 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 31171 ;; Defined at:
 31172 ;;		line 339 in file "mcc_generated_files/adcc.c"
 31173 ;; Parameters:    Size  Location     Type
 31174 ;;		None
 31175 ;; Auto vars:     Size  Location     Type
 31176 ;;		None
 31177 ;; Return value:  Size  Location     Type
 31178 ;;                  1  [STACK] void 
 31179 ;; Registers used:
 31180 ;;		None
 31181 ;; Tracked objects:
 31182 ;;		On entry : 3F/0
 31183 ;;		On exit  : 0/0
 31184 ;;		Unchanged: 0/0
 31185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31190 ;;Total ram usage:        0 bytes
 31191 ;; Hardware stack levels used:    1
 31192 ;; This function calls:
 31193 ;;		Nothing
 31194 ;; This function is called by:
 31195 ;;		_ADCC_Initialize
 31196 ;;		_ADCC_ISR
 31197 ;;		_ADCC_ThresholdISR
 31198 ;; This function uses a reentrant model
 31199 ;;
 31200                           
 31201                           	psect	text152
 31202  01A900                     __ptext152:
 31203                           	opt callstack 0
 31204  01A900                     _ADCC_DefaultInterruptHandler:
 31205                           	opt callstack 4
 31206                           
 31207                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31208                           
 31209                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31210                           ;incstack = 0
 31211  01A900  0012               	return		;funcret
 31212  01A902                     __end_of_ADCC_DefaultInterruptHandler:
 31213                           	opt callstack 0
 31214                           
 31215 ;; *************** function _adc_int_handler *****************
 31216 ;; Defined at:
 31217 ;;		line 118 in file "daq.c"
 31218 ;; Parameters:    Size  Location     Type
 31219 ;;		None
 31220 ;; Auto vars:     Size  Location     Type
 31221 ;;		None
 31222 ;; Return value:  Size  Location     Type
 31223 ;;                  1  [STACK] void 
 31224 ;; Registers used:
 31225 ;;		None
 31226 ;; Tracked objects:
 31227 ;;		On entry : 3F/0
 31228 ;;		On exit  : 0/0
 31229 ;;		Unchanged: 0/0
 31230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31235 ;;Total ram usage:        0 bytes
 31236 ;; Hardware stack levels used:    1
 31237 ;; This function calls:
 31238 ;;		Nothing
 31239 ;; This function is called by:
 31240 ;;		_start_adc_scan
 31241 ;;		_ADCC_ISR
 31242 ;; This function uses a reentrant model
 31243 ;;
 31244                           
 31245                           	psect	text153
 31246  01A902                     __ptext153:
 31247                           	opt callstack 0
 31248  01A902                     _adc_int_handler:
 31249                           	opt callstack 4
 31250                           
 31251                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31252                           
 31253                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31254                           ;incstack = 0
 31255  01A902  0012               	return		;funcret
 31256  01A904                     __end_of_adc_int_handler:
 31257                           	opt callstack 0
 31258                           
 31259 ;; *************** function _ADCC_ThresholdISR *****************
 31260 ;; Defined at:
 31261 ;;		line 327 in file "mcc_generated_files/adcc.c"
 31262 ;; Parameters:    Size  Location     Type
 31263 ;;		None
 31264 ;; Auto vars:     Size  Location     Type
 31265 ;;		None
 31266 ;; Return value:  Size  Location     Type
 31267 ;;                  1    wreg      void 
 31268 ;; Registers used:
 31269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 31270 ;; Tracked objects:
 31271 ;;		On entry : 0/0
 31272 ;;		On exit  : 0/0
 31273 ;;		Unchanged: 0/0
 31274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31277 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31278 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31279 ;;Total ram usage:        5 bytes
 31280 ;; Hardware stack levels used:    1
 31281 ;; Hardware stack levels required when called:    2
 31282 ;; This function calls:
 31283 ;;		Absolute function
 31284 ;;		_ADCC_DefaultInterruptHandler
 31285 ;;		_adc_int_t_handler
 31286 ;; This function is called by:
 31287 ;;		Interrupt level 2
 31288 ;; This function uses a non-reentrant model
 31289 ;;
 31290                           
 31291                           	psect	text154
 31292  019720                     __ptext154:
 31293                           	opt callstack 0
 31294  019720                     _ADCC_ThresholdISR:
 31295                           	opt callstack 3
 31296                           
 31297                           ;incstack = 0
 31298  019720  0060  F004  F038   	movff	btemp,??_ADCC_ThresholdISR
 31299  019726  0060  F008  F039   	movff	btemp+1,??_ADCC_ThresholdISR+1
 31300  01972C  0060  F024  F03A   	movff	btemp+8,??_ADCC_ThresholdISR+2
 31301  019732  0060  F028  F03B   	movff	btemp+9,??_ADCC_ThresholdISR+3
 31302  019738  0060  F030  F03C   	movff	btemp+11,??_ADCC_ThresholdISR+4
 31303  01973E  EE14  F0C2         	lfsr	1,___inthi_sp
 31304                           
 31305                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 31306  019742  0139               	movlb	57	; () banked
 31307  019744  97A1               	bcf	161,3,b	;volatile
 31308                           
 31309                           ; BSR set to: 57
 31310                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 31311  019746  0100               	movlb	0	; () banked
 31312  019748  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31313  01974A  11B3               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31314  01974C  11B4               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31315  01974E  B4D8               	btfsc	status,2,c
 31316  019750  D00C               	goto	i2u977_49
 31317                           
 31318                           ; BSR set to: 0
 31319                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 31320  019752  D801               	call	i2u977_48
 31321  019754  D00A               	goto	i2u977_49
 31322  019756                     i2u977_48:
 31323  019756  0005               	push	
 31324  019758  6EFA               	movwf	pclath,c
 31325  01975A  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31326  01975C  6EFD               	movwf	tosl,c
 31327  01975E  51B3               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31328  019760  6EFE               	movwf	tosh,c
 31329  019762  51B4               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31330  019764  6EFF               	movwf	tosu,c
 31331  019766  50FA               	movf	pclath,w,c
 31332  019768  0012               	return		;indir
 31333  01976A                     i2u977_49:
 31334  01976A  0060  F0F0  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 31335  019770  0060  F0EC  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 31336  019776  0060  F0E8  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 31337  01977C  0060  F0E4  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 31338  019782  0060  F0E0  F001   	movff	??_ADCC_ThresholdISR,btemp
 31339  019788  0011               	retfie		f
 31340  01978A                     __end_of_ADCC_ThresholdISR:
 31341                           	opt callstack 0
 31342                           
 31343 ;; *************** function _UART1_rx_vect_isr *****************
 31344 ;; Defined at:
 31345 ;;		line 181 in file "mcc_generated_files/uart1.c"
 31346 ;; Parameters:    Size  Location     Type
 31347 ;;		None
 31348 ;; Auto vars:     Size  Location     Type
 31349 ;;		None
 31350 ;; Return value:  Size  Location     Type
 31351 ;;                  1    wreg      void 
 31352 ;; Registers used:
 31353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31354 ;; Tracked objects:
 31355 ;;		On entry : 0/0
 31356 ;;		On exit  : 0/0
 31357 ;;		Unchanged: 0/0
 31358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31363 ;;Total ram usage:        0 bytes
 31364 ;; Hardware stack levels used:    1
 31365 ;; Hardware stack levels required when called:    1
 31366 ;; This function calls:
 31367 ;;		Absolute function
 31368 ;;		_UART1_Receive_ISR
 31369 ;; This function is called by:
 31370 ;;		Interrupt level 2
 31371 ;; This function uses a non-reentrant model
 31372 ;;
 31373                           
 31374                           	psect	text155
 31375  01A4B8                     __ptext155:
 31376                           	opt callstack 0
 31377  01A4B8                     _UART1_rx_vect_isr:
 31378                           	opt callstack 4
 31379                           
 31380                           ;incstack = 0
 31381  01A4B8  EE14  F0C2         	lfsr	1,___inthi_sp
 31382                           
 31383                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 31384  01A4BC  0100               	movlb	0	; () banked
 31385  01A4BE  51B8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 31386  01A4C0  11B9               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 31387  01A4C2  11BA               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 31388  01A4C4  B4D8               	btfsc	status,2,c
 31389  01A4C6  0011               	retfie		f
 31390                           
 31391                           ; BSR set to: 0
 31392                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 31393  01A4C8  D801               	call	i2u1184_48
 31394  01A4CA  0011               	retfie		f
 31395  01A4CC                     i2u1184_48:
 31396  01A4CC  0005               	push	
 31397  01A4CE  6EFA               	movwf	pclath,c
 31398  01A4D0  51B8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 31399  01A4D2  6EFD               	movwf	tosl,c
 31400  01A4D4  51B9               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 31401  01A4D6  6EFE               	movwf	tosh,c
 31402  01A4D8  51BA               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 31403  01A4DA  6EFF               	movwf	tosu,c
 31404  01A4DC  50FA               	movf	pclath,w,c
 31405  01A4DE  0012               	return		;indir
 31406  01A4E0                     __end_of_UART1_rx_vect_isr:
 31407                           	opt callstack 0
 31408                           
 31409 ;; *************** function _UART1_Receive_ISR *****************
 31410 ;; Defined at:
 31411 ;;		line 192 in file "mcc_generated_files/uart1.c"
 31412 ;; Parameters:    Size  Location     Type
 31413 ;;		None
 31414 ;; Auto vars:     Size  Location     Type
 31415 ;;		None
 31416 ;; Return value:  Size  Location     Type
 31417 ;;                  1  [STACK] void 
 31418 ;; Registers used:
 31419 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31420 ;; Tracked objects:
 31421 ;;		On entry : 3F/0
 31422 ;;		On exit  : 0/0
 31423 ;;		Unchanged: 0/0
 31424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31429 ;;Total ram usage:        0 bytes
 31430 ;; Hardware stack levels used:    1
 31431 ;; This function calls:
 31432 ;;		Nothing
 31433 ;; This function is called by:
 31434 ;;		_UART1_Initialize
 31435 ;;		_UART1_rx_vect_isr
 31436 ;; This function uses a reentrant model
 31437 ;;
 31438                           
 31439                           	psect	text156
 31440  01A66E                     __ptext156:
 31441                           	opt callstack 0
 31442  01A66E                     _UART1_Receive_ISR:
 31443                           	opt callstack 4
 31444                           
 31445                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 31446                           
 31447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31448                           ;incstack = 0
 31449  01A66E  0EF2               	movlw	low _uart1RxBuffer
 31450  01A670  2437               	addwf	_uart1RxHead^0,w,c	;volatile
 31451  01A672  6ED9               	movwf	fsr2l,c
 31452  01A674  6ADA               	clrf	fsr2h,c
 31453  01A676  0E01               	movlw	high _uart1RxBuffer
 31454  01A678  22DA               	addwfc	fsr2h,f,c
 31455  01A67A  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 31456  01A680  2A37               	incf	_uart1RxHead^0,f,c	;volatile
 31457                           
 31458                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 31459  01A682  0E07               	movlw	7
 31460  01A684  6437               	cpfsgt	_uart1RxHead^0,c
 31461  01A686  D001               	goto	l11953
 31462                           
 31463                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 31464  01A688  6A37               	clrf	_uart1RxHead^0,c	;volatile
 31465  01A68A                     l11953:
 31466                           
 31467                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 31468  01A68A  2A35               	incf	_uart1RxCount^0,f,c	;volatile
 31469                           
 31470                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31471  01A68C  0012               	return		;funcret
 31472  01A68E                     __end_of_UART1_Receive_ISR:
 31473                           	opt callstack 0
 31474                           
 31475 ;; *************** function _UART2_tx_vect_isr *****************
 31476 ;; Defined at:
 31477 ;;		line 195 in file "mcc_generated_files/uart2.c"
 31478 ;; Parameters:    Size  Location     Type
 31479 ;;		None
 31480 ;; Auto vars:     Size  Location     Type
 31481 ;;		None
 31482 ;; Return value:  Size  Location     Type
 31483 ;;                  1    wreg      void 
 31484 ;; Registers used:
 31485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31486 ;; Tracked objects:
 31487 ;;		On entry : 0/0
 31488 ;;		On exit  : 0/0
 31489 ;;		Unchanged: 0/0
 31490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31495 ;;Total ram usage:        0 bytes
 31496 ;; Hardware stack levels used:    1
 31497 ;; Hardware stack levels required when called:    1
 31498 ;; This function calls:
 31499 ;;		Absolute function
 31500 ;;		_UART2_Transmit_ISR
 31501 ;; This function is called by:
 31502 ;;		Interrupt level 2
 31503 ;; This function uses a non-reentrant model
 31504 ;;
 31505                           
 31506                           	psect	text157
 31507  01A4E0                     __ptext157:
 31508                           	opt callstack 0
 31509  01A4E0                     _UART2_tx_vect_isr:
 31510                           	opt callstack 4
 31511                           
 31512                           ;incstack = 0
 31513  01A4E0  EE14  F0C2         	lfsr	1,___inthi_sp
 31514                           
 31515                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 31516  01A4E4  0100               	movlb	0	; () banked
 31517  01A4E6  51BB               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 31518  01A4E8  11BC               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 31519  01A4EA  11BD               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 31520  01A4EC  B4D8               	btfsc	status,2,c
 31521  01A4EE  0011               	retfie		f
 31522                           
 31523                           ; BSR set to: 0
 31524                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 31525  01A4F0  D801               	call	i2u1186_48
 31526  01A4F2  0011               	retfie		f
 31527  01A4F4                     i2u1186_48:
 31528  01A4F4  0005               	push	
 31529  01A4F6  6EFA               	movwf	pclath,c
 31530  01A4F8  51BB               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 31531  01A4FA  6EFD               	movwf	tosl,c
 31532  01A4FC  51BC               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 31533  01A4FE  6EFE               	movwf	tosh,c
 31534  01A500  51BD               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 31535  01A502  6EFF               	movwf	tosu,c
 31536  01A504  50FA               	movf	pclath,w,c
 31537  01A506  0012               	return		;indir
 31538  01A508                     __end_of_UART2_tx_vect_isr:
 31539                           	opt callstack 0
 31540                           
 31541 ;; *************** function _UART2_Transmit_ISR *****************
 31542 ;; Defined at:
 31543 ;;		line 213 in file "mcc_generated_files/uart2.c"
 31544 ;; Parameters:    Size  Location     Type
 31545 ;;		None
 31546 ;; Auto vars:     Size  Location     Type
 31547 ;;		None
 31548 ;; Return value:  Size  Location     Type
 31549 ;;                  1  [STACK] void 
 31550 ;; Registers used:
 31551 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31552 ;; Tracked objects:
 31553 ;;		On entry : 3F/0
 31554 ;;		On exit  : 3B/39
 31555 ;;		Unchanged: 0/0
 31556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31561 ;;Total ram usage:        0 bytes
 31562 ;; Hardware stack levels used:    1
 31563 ;; This function calls:
 31564 ;;		Nothing
 31565 ;; This function is called by:
 31566 ;;		_UART2_Initialize
 31567 ;;		_UART2_tx_vect_isr
 31568 ;; This function uses a reentrant model
 31569 ;;
 31570                           
 31571                           	psect	text158
 31572  01A208                     __ptext158:
 31573                           	opt callstack 0
 31574  01A208                     _UART2_Transmit_ISR:
 31575                           	opt callstack 4
 31576                           
 31577                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 31578                           
 31579                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31580                           ;incstack = 0
 31581  01A208  0E40               	movlw	64
 31582  01A20A  6032               	cpfslt	_uart2TxBufferRemaining^0,c
 31583  01A20C  D010               	goto	l673
 31584                           
 31585                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 31586  01A20E  0E54               	movlw	low _uart2TxBuffer
 31587  01A210  2433               	addwf	_uart2TxTail^0,w,c	;volatile
 31588  01A212  6ED9               	movwf	fsr2l,c
 31589  01A214  6ADA               	clrf	fsr2h,c
 31590  01A216  0E03               	movlw	high _uart2TxBuffer
 31591  01A218  22DA               	addwfc	fsr2h,f,c
 31592  01A21A  50DF               	movf	indf2,w,c
 31593  01A21C  013D               	movlb	61	; () banked
 31594  01A21E  6FD2               	movwf	210,b	;volatile
 31595                           
 31596                           ; BSR set to: 61
 31597  01A220  2A33               	incf	_uart2TxTail^0,f,c	;volatile
 31598                           
 31599                           ; BSR set to: 61
 31600                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 31601  01A222  0E3F               	movlw	63
 31602  01A224  6433               	cpfsgt	_uart2TxTail^0,c
 31603  01A226  D001               	goto	l11965
 31604                           
 31605                           ; BSR set to: 61
 31606                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 31607  01A228  6A33               	clrf	_uart2TxTail^0,c	;volatile
 31608  01A22A                     l11965:
 31609                           
 31610                           ; BSR set to: 61
 31611                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 31612  01A22A  2A32               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 31613                           
 31614                           ;mcc_generated_files/uart2.c: 224:     }
 31615  01A22C  0012               	return	
 31616  01A22E                     l673:
 31617                           
 31618                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 31619  01A22E  0139               	movlb	57	; () banked
 31620  01A230  9796               	bcf	150,3,b	;volatile
 31621                           
 31622                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31623  01A232  0012               	return		;funcret
 31624  01A234                     __end_of_UART2_Transmit_ISR:
 31625                           	opt callstack 0
 31626                           
 31627 ;; *************** function _UART2_rx_vect_isr *****************
 31628 ;; Defined at:
 31629 ;;		line 203 in file "mcc_generated_files/uart2.c"
 31630 ;; Parameters:    Size  Location     Type
 31631 ;;		None
 31632 ;; Auto vars:     Size  Location     Type
 31633 ;;		None
 31634 ;; Return value:  Size  Location     Type
 31635 ;;                  1    wreg      void 
 31636 ;; Registers used:
 31637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31638 ;; Tracked objects:
 31639 ;;		On entry : 0/0
 31640 ;;		On exit  : 0/0
 31641 ;;		Unchanged: 0/0
 31642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31647 ;;Total ram usage:        0 bytes
 31648 ;; Hardware stack levels used:    1
 31649 ;; Hardware stack levels required when called:    1
 31650 ;; This function calls:
 31651 ;;		Absolute function
 31652 ;;		_UART2_Receive_ISR
 31653 ;; This function is called by:
 31654 ;;		Interrupt level 2
 31655 ;; This function uses a non-reentrant model
 31656 ;;
 31657                           
 31658                           	psect	text159
 31659  01A508                     __ptext159:
 31660                           	opt callstack 0
 31661  01A508                     _UART2_rx_vect_isr:
 31662                           	opt callstack 4
 31663                           
 31664                           ;incstack = 0
 31665  01A508  EE14  F0C2         	lfsr	1,___inthi_sp
 31666                           
 31667                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 31668  01A50C  0100               	movlb	0	; () banked
 31669  01A50E  51BE               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 31670  01A510  11BF               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 31671  01A512  11C0               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 31672  01A514  B4D8               	btfsc	status,2,c
 31673  01A516  0011               	retfie		f
 31674                           
 31675                           ; BSR set to: 0
 31676                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 31677  01A518  D801               	call	i2u983_48
 31678  01A51A  0011               	retfie		f
 31679  01A51C                     i2u983_48:
 31680  01A51C  0005               	push	
 31681  01A51E  6EFA               	movwf	pclath,c
 31682  01A520  51BE               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 31683  01A522  6EFD               	movwf	tosl,c
 31684  01A524  51BF               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 31685  01A526  6EFE               	movwf	tosh,c
 31686  01A528  51C0               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 31687  01A52A  6EFF               	movwf	tosu,c
 31688  01A52C  50FA               	movf	pclath,w,c
 31689  01A52E  0012               	return		;indir
 31690  01A530                     __end_of_UART2_rx_vect_isr:
 31691                           	opt callstack 0
 31692                           
 31693 ;; *************** function _UART2_Receive_ISR *****************
 31694 ;; Defined at:
 31695 ;;		line 233 in file "mcc_generated_files/uart2.c"
 31696 ;; Parameters:    Size  Location     Type
 31697 ;;		None
 31698 ;; Auto vars:     Size  Location     Type
 31699 ;;		None
 31700 ;; Return value:  Size  Location     Type
 31701 ;;                  1  [STACK] void 
 31702 ;; Registers used:
 31703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31704 ;; Tracked objects:
 31705 ;;		On entry : 3F/0
 31706 ;;		On exit  : 0/0
 31707 ;;		Unchanged: 0/0
 31708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31713 ;;Total ram usage:        0 bytes
 31714 ;; Hardware stack levels used:    1
 31715 ;; This function calls:
 31716 ;;		Nothing
 31717 ;; This function is called by:
 31718 ;;		_UART2_Initialize
 31719 ;;		_UART2_rx_vect_isr
 31720 ;; This function uses a reentrant model
 31721 ;;
 31722                           
 31723                           	psect	text160
 31724  01A706                     __ptext160:
 31725                           	opt callstack 0
 31726  01A706                     _UART2_Receive_ISR:
 31727                           	opt callstack 4
 31728                           
 31729                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 31730                           
 31731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31732                           ;incstack = 0
 31733  01A706  0E00               	movlw	low _uart2RxBuffer
 31734  01A708  2431               	addwf	_uart2RxHead^0,w,c	;volatile
 31735  01A70A  6ED9               	movwf	fsr2l,c
 31736  01A70C  6ADA               	clrf	fsr2h,c
 31737  01A70E  0E05               	movlw	high _uart2RxBuffer
 31738  01A710  22DA               	addwfc	fsr2h,f,c
 31739  01A712  006F F743 FFDF     	movff	15824,indf2	;volatile
 31740  01A718  2A31               	incf	_uart2RxHead^0,f,c	;volatile
 31741                           
 31742                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 31743  01A71A  2831               	incf	_uart2RxHead^0,w,c
 31744  01A71C  B4D8               	btfsc	status,2,c
 31745                           
 31746                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 31747  01A71E  6A31               	clrf	_uart2RxHead^0,c	;volatile
 31748                           
 31749                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 31750  01A720  2A2F               	incf	_uart2RxCount^0,f,c	;volatile
 31751                           
 31752                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31753  01A722  0012               	return		;funcret
 31754  01A724                     __end_of_UART2_Receive_ISR:
 31755                           	opt callstack 0
 31756                           
 31757 ;; *************** function _TMR6_ISR *****************
 31758 ;; Defined at:
 31759 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 31760 ;; Parameters:    Size  Location     Type
 31761 ;;		None
 31762 ;; Auto vars:     Size  Location     Type
 31763 ;;		None
 31764 ;; Return value:  Size  Location     Type
 31765 ;;                  1    wreg      void 
 31766 ;; Registers used:
 31767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 31768 ;; Tracked objects:
 31769 ;;		On entry : 0/0
 31770 ;;		On exit  : 0/0
 31771 ;;		Unchanged: 0/0
 31772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31777 ;;Total ram usage:        1 bytes
 31778 ;; Hardware stack levels used:    1
 31779 ;; Hardware stack levels required when called:    2
 31780 ;; This function calls:
 31781 ;;		_TMR6_CallBack
 31782 ;; This function is called by:
 31783 ;;		Interrupt level 2
 31784 ;; This function uses a non-reentrant model
 31785 ;;
 31786                           
 31787                           	psect	text161
 31788  01A75C                     __ptext161:
 31789                           	opt callstack 0
 31790  01A75C                     _TMR6_ISR:
 31791                           	opt callstack 3
 31792                           
 31793                           ;incstack = 0
 31794  01A75C  0060  F004  F03D   	movff	btemp,??_TMR6_ISR
 31795  01A762  EE14  F0C2         	lfsr	1,___inthi_sp
 31796                           
 31797                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 31798  01A766  0139               	movlb	57	; () banked
 31799  01A768  91A9               	bcf	169,0,b	;volatile
 31800                           
 31801                           ; BSR set to: 57
 31802                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 31803  01A76A  EC04  F0D3         	call	_TMR6_CallBack	;wreg free
 31804  01A76E  0060  F0F4  F001   	movff	??_TMR6_ISR,btemp
 31805  01A774  0011               	retfie		f
 31806  01A776                     __end_of_TMR6_ISR:
 31807                           	opt callstack 0
 31808                           
 31809 ;; *************** function _TMR6_CallBack *****************
 31810 ;; Defined at:
 31811 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 31812 ;; Parameters:    Size  Location     Type
 31813 ;;		None
 31814 ;; Auto vars:     Size  Location     Type
 31815 ;;		None
 31816 ;; Return value:  Size  Location     Type
 31817 ;;                  1  [STACK] void 
 31818 ;; Registers used:
 31819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 31820 ;; Tracked objects:
 31821 ;;		On entry : 3F/39
 31822 ;;		On exit  : 0/0
 31823 ;;		Unchanged: 0/0
 31824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31829 ;;Total ram usage:        0 bytes
 31830 ;; Hardware stack levels used:    1
 31831 ;; Hardware stack levels required when called:    1
 31832 ;; This function calls:
 31833 ;;		Absolute function
 31834 ;;		_TMR6_DefaultInterruptHandler
 31835 ;; This function is called by:
 31836 ;;		_TMR6_ISR
 31837 ;; This function uses a reentrant model
 31838 ;;
 31839                           
 31840                           	psect	text162
 31841  01A608                     __ptext162:
 31842                           	opt callstack 0
 31843  01A608                     _TMR6_CallBack:
 31844                           	opt callstack 3
 31845                           
 31846                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 31847                           
 31848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31849                           ;incstack = 0
 31850  01A608  0100               	movlb	0	; () banked
 31851  01A60A  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31852  01A60C  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31853  01A60E  11B1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 31854  01A610  B4D8               	btfsc	status,2,c
 31855  01A612  0012               	return	
 31856                           
 31857                           ; BSR set to: 0
 31858                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 31859  01A614  D801               	call	u947_48
 31860  01A616  0012               	return	
 31861  01A618                     u947_48:
 31862  01A618  0005               	push	
 31863  01A61A  6EFA               	movwf	pclath,c
 31864  01A61C  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31865  01A61E  6EFD               	movwf	tosl,c
 31866  01A620  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31867  01A622  6EFE               	movwf	tosh,c
 31868  01A624  51B1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 31869  01A626  6EFF               	movwf	tosu,c
 31870  01A628  50FA               	movf	pclath,w,c
 31871  01A62A  0012               	return		;indir
 31872  01A62C                     __end_of_TMR6_CallBack:
 31873                           	opt callstack 0
 31874                           
 31875 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 31876 ;; Defined at:
 31877 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 31878 ;; Parameters:    Size  Location     Type
 31879 ;;		None
 31880 ;; Auto vars:     Size  Location     Type
 31881 ;;  i               1  [STACK] unsigned char 
 31882 ;; Return value:  Size  Location     Type
 31883 ;;                  1  [STACK] void 
 31884 ;; Registers used:
 31885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 31886 ;; Tracked objects:
 31887 ;;		On entry : 3F/0
 31888 ;;		On exit  : 0/0
 31889 ;;		Unchanged: 0/0
 31890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31895 ;;Total ram usage:        0 bytes
 31896 ;; Hardware stack levels used:    1
 31897 ;; This function calls:
 31898 ;;		Nothing
 31899 ;; This function is called by:
 31900 ;;		_TMR6_Initialize
 31901 ;;		_TMR6_CallBack
 31902 ;; This function uses a reentrant model
 31903 ;;
 31904                           
 31905                           	psect	text163
 31906  019B7C                     __ptext163:
 31907                           	opt callstack 0
 31908  019B7C                     _TMR6_DefaultInterruptHandler:
 31909                           	opt callstack 0
 31910                           
 31911                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31912  019B7C  52E6               	movf	postinc1,f,c
 31913                           
 31914                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 31915                           ;stkvar	_i @ sp[(-1)+0]
 31916                           
 31917                           ;incstack = 0
 31918  019B7E  0EFF               	movlw	-1
 31919  019B80  6AE3               	clrf	plusw1,c
 31920  019B82                     l9597:
 31921                           
 31922                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 31923                           ;stkvar	_i @ sp[(-1)+0]
 31924  019B82  0EFF               	movlw	-1
 31925  019B84  50E3               	movf	plusw1,w,c
 31926  019B86  0D02               	mullw	2
 31927  019B88  0EDA               	movlw	low _tickCount
 31928  019B8A  24F3               	addwf	243,w,c
 31929  019B8C  6ED9               	movwf	fsr2l,c
 31930  019B8E  0E01               	movlw	high _tickCount
 31931  019B90  20F4               	addwfc	prodh,w,c
 31932  019B92  6EDA               	movwf	fsr2h,c
 31933  019B94  50DE               	movf	postinc2,w,c
 31934  019B96  10DE               	iorwf	postinc2,w,c
 31935  019B98  B4D8               	btfsc	status,2,c
 31936  019B9A  D00C               	goto	l9601
 31937                           
 31938                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 31939                           ;stkvar	_i @ sp[(-1)+0]
 31940  019B9C  0EFF               	movlw	-1
 31941  019B9E  50E3               	movf	plusw1,w,c
 31942  019BA0  0D02               	mullw	2
 31943  019BA2  0EDA               	movlw	low _tickCount
 31944  019BA4  24F3               	addwf	243,w,c
 31945  019BA6  6ED9               	movwf	fsr2l,c
 31946  019BA8  0E01               	movlw	high _tickCount
 31947  019BAA  20F4               	addwfc	prodh,w,c
 31948  019BAC  6EDA               	movwf	fsr2h,c
 31949  019BAE  06DE               	decf	postinc2,f,c
 31950  019BB0  0E00               	movlw	0
 31951  019BB2  5ADD               	subwfb	postdec2,f,c
 31952  019BB4                     l9601:
 31953                           
 31954                           ;mcc_generated_files/tmr6.c: 207:  }
 31955                           ;stkvar	_i @ sp[(-1)+0]
 31956  019BB4  0EFF               	movlw	-1
 31957  019BB6  2AE3               	incf	plusw1,f,c
 31958                           
 31959                           ;stkvar	_i @ sp[(-1)+0]
 31960  019BB8  0EFF               	movlw	-1
 31961  019BBA  006F FF8C  F001    	movff	plusw1,btemp
 31962  019BC0  0E0B               	movlw	11
 31963  019BC2  6401               	cpfsgt	btemp^0,c
 31964  019BC4  D7DE               	goto	l9597
 31965                           
 31966                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31967  019BC6  52E5               	movf	postdec1,f,c
 31968  019BC8  0012               	return		;funcret
 31969  019BCA                     __end_of_TMR6_DefaultInterruptHandler:
 31970                           	opt callstack 0
 31971                           
 31972 ;; *************** function _DMA1_DMASCNT_ISR *****************
 31973 ;; Defined at:
 31974 ;;		line 126 in file "mcc_generated_files/dma1.c"
 31975 ;; Parameters:    Size  Location     Type
 31976 ;;		None
 31977 ;; Auto vars:     Size  Location     Type
 31978 ;;		None
 31979 ;; Return value:  Size  Location     Type
 31980 ;;                  1    wreg      void 
 31981 ;; Registers used:
 31982 ;;		None
 31983 ;; Tracked objects:
 31984 ;;		On entry : 0/0
 31985 ;;		On exit  : 3F/0
 31986 ;;		Unchanged: 0/0
 31987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31992 ;;Total ram usage:        0 bytes
 31993 ;; Hardware stack levels used:    1
 31994 ;; This function calls:
 31995 ;;		Nothing
 31996 ;; This function is called by:
 31997 ;;		Interrupt level 2
 31998 ;; This function uses a non-reentrant model
 31999 ;;
 32000                           
 32001                           	psect	text164
 32002  01A86C                     __ptext164:
 32003                           	opt callstack 0
 32004  01A86C                     _DMA1_DMASCNT_ISR:
 32005                           	opt callstack 5
 32006                           
 32007                           ;incstack = 0
 32008  01A86C  EE14  F0C2         	lfsr	1,___inthi_sp
 32009                           
 32010                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 32011  01A870  0139               	movlb	57	; () banked
 32012  01A872  91A2               	bcf	162,0,b	;volatile
 32013                           
 32014                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 32015  01A874  0100               	movlb	0	; () banked
 32016  01A876  9789               	bcf	_spi_link& (0+255),3,b	;volatile
 32017                           
 32018                           ; BSR set to: 0
 32019  01A878  0011               	retfie		f
 32020  01A87A                     __end_of_DMA1_DMASCNT_ISR:
 32021                           	opt callstack 0
 32022                           
 32023 ;; *************** function _DMA1_DMADCNT_ISR *****************
 32024 ;; Defined at:
 32025 ;;		line 134 in file "mcc_generated_files/dma1.c"
 32026 ;; Parameters:    Size  Location     Type
 32027 ;;		None
 32028 ;; Auto vars:     Size  Location     Type
 32029 ;;		None
 32030 ;; Return value:  Size  Location     Type
 32031 ;;                  1    wreg      void 
 32032 ;; Registers used:
 32033 ;;		None
 32034 ;; Tracked objects:
 32035 ;;		On entry : 0/0
 32036 ;;		On exit  : 3F/39
 32037 ;;		Unchanged: 0/0
 32038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32043 ;;Total ram usage:        0 bytes
 32044 ;; Hardware stack levels used:    1
 32045 ;; This function calls:
 32046 ;;		Nothing
 32047 ;; This function is called by:
 32048 ;;		Interrupt level 2
 32049 ;; This function uses a non-reentrant model
 32050 ;;
 32051                           
 32052                           	psect	text165
 32053  01A890                     __ptext165:
 32054                           	opt callstack 0
 32055  01A890                     _DMA1_DMADCNT_ISR:
 32056                           	opt callstack 5
 32057                           
 32058                           ; BSR set to: 0
 32059                           ;incstack = 0
 32060  01A890  EE14  F0C2         	lfsr	1,___inthi_sp
 32061                           
 32062                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 32063  01A894  0139               	movlb	57	; () banked
 32064  01A896  93A2               	bcf	162,1,b	;volatile
 32065                           
 32066                           ; BSR set to: 57
 32067  01A898  0011               	retfie		f
 32068  01A89A                     __end_of_DMA1_DMADCNT_ISR:
 32069                           	opt callstack 0
 32070                           
 32071 ;; *************** function _DMA1_DMAA_ISR *****************
 32072 ;; Defined at:
 32073 ;;		line 144 in file "mcc_generated_files/dma1.c"
 32074 ;; Parameters:    Size  Location     Type
 32075 ;;		None
 32076 ;; Auto vars:     Size  Location     Type
 32077 ;;		None
 32078 ;; Return value:  Size  Location     Type
 32079 ;;                  1    wreg      void 
 32080 ;; Registers used:
 32081 ;;		None
 32082 ;; Tracked objects:
 32083 ;;		On entry : 0/0
 32084 ;;		On exit  : 3F/39
 32085 ;;		Unchanged: 0/0
 32086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32091 ;;Total ram usage:        0 bytes
 32092 ;; Hardware stack levels used:    1
 32093 ;; This function calls:
 32094 ;;		Nothing
 32095 ;; This function is called by:
 32096 ;;		Interrupt level 2
 32097 ;; This function uses a non-reentrant model
 32098 ;;
 32099                           
 32100                           	psect	text166
 32101  01A89C                     __ptext166:
 32102                           	opt callstack 0
 32103  01A89C                     _DMA1_DMAA_ISR:
 32104                           	opt callstack 5
 32105                           
 32106                           ; BSR set to: 57
 32107                           ;incstack = 0
 32108  01A89C  EE14  F0C2         	lfsr	1,___inthi_sp
 32109                           
 32110                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 32111  01A8A0  0139               	movlb	57	; () banked
 32112  01A8A2  97A2               	bcf	162,3,b	;volatile
 32113                           
 32114                           ; BSR set to: 57
 32115  01A8A4  0011               	retfie		f
 32116  01A8A6                     __end_of_DMA1_DMAA_ISR:
 32117                           	opt callstack 0
 32118                           
 32119 ;; *************** function _DMA1_DMAOR_ISR *****************
 32120 ;; Defined at:
 32121 ;;		line 155 in file "mcc_generated_files/dma1.c"
 32122 ;; Parameters:    Size  Location     Type
 32123 ;;		None
 32124 ;; Auto vars:     Size  Location     Type
 32125 ;;		None
 32126 ;; Return value:  Size  Location     Type
 32127 ;;                  1    wreg      void 
 32128 ;; Registers used:
 32129 ;;		None
 32130 ;; Tracked objects:
 32131 ;;		On entry : 0/0
 32132 ;;		On exit  : 3F/39
 32133 ;;		Unchanged: 0/0
 32134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32139 ;;Total ram usage:        0 bytes
 32140 ;; Hardware stack levels used:    1
 32141 ;; This function calls:
 32142 ;;		Nothing
 32143 ;; This function is called by:
 32144 ;;		Interrupt level 2
 32145 ;; This function uses a non-reentrant model
 32146 ;;
 32147                           
 32148                           	psect	text167
 32149  01A8A8                     __ptext167:
 32150                           	opt callstack 0
 32151  01A8A8                     _DMA1_DMAOR_ISR:
 32152                           	opt callstack 5
 32153                           
 32154                           ; BSR set to: 57
 32155                           ;incstack = 0
 32156  01A8A8  EE14  F0C2         	lfsr	1,___inthi_sp
 32157                           
 32158                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 32159  01A8AC  0139               	movlb	57	; () banked
 32160  01A8AE  95A2               	bcf	162,2,b	;volatile
 32161                           
 32162                           ; BSR set to: 57
 32163  01A8B0  0011               	retfie		f
 32164  01A8B2                     __end_of_DMA1_DMAOR_ISR:
 32165                           	opt callstack 0
 32166                           
 32167                           ;
 32168                           ; Interrupt Vector Table @ 0x8
 32169                           ;
 32170                           
 32171                           	psect	ivt0x8
 32172  000008                     __pivt0x8:
 32173                           	opt callstack 0
 32174  000008                     ivt0x8_base:
 32175                           	opt callstack 0
 32176                           
 32177                           ; Vector 0 : SWINT
 32178  000008  6A3D               	dw	_Default_ISR shr (0+2)
 32179                           
 32180                           ; Vector 1 : HLVD
 32181  00000A  6A3D               	dw	_Default_ISR shr (0+2)
 32182                           
 32183                           ; Vector 2 : OSF
 32184  00000C  6A3D               	dw	_Default_ISR shr (0+2)
 32185                           
 32186                           ; Vector 3 : CSW
 32187  00000E  6A3D               	dw	_Default_ISR shr (0+2)
 32188                           
 32189                           ; Vector 4 : NVM
 32190  000010  6A3D               	dw	_Default_ISR shr (0+2)
 32191                           
 32192                           ; Vector 5 : SCAN
 32193  000012  6A3D               	dw	_Default_ISR shr (0+2)
 32194                           
 32195                           ; Vector 6 : CRC
 32196  000014  6A3D               	dw	_Default_ISR shr (0+2)
 32197                           
 32198                           ; Vector 7 : IOC
 32199  000016  6A3D               	dw	_Default_ISR shr (0+2)
 32200                           
 32201                           ; Vector 8 : INT0
 32202  000018  6A17               	dw	_INT0_ISR shr (0+2)
 32203                           
 32204                           ; Vector 9 : ZCD
 32205  00001A  6A3D               	dw	_Default_ISR shr (0+2)
 32206                           
 32207                           ; Vector 10 : AD
 32208  00001C  6877               	dw	_ADCC_ISR shr (0+2)
 32209                           
 32210                           ; Vector 11 : ADT
 32211  00001E  65C8               	dw	_ADCC_ThresholdISR shr (0+2)
 32212                           
 32213                           ; Vector 12 : CMP1
 32214  000020  6A3D               	dw	_Default_ISR shr (0+2)
 32215                           
 32216                           ; Vector 13 : SMT1
 32217  000022  6A3D               	dw	_Default_ISR shr (0+2)
 32218                           
 32219                           ; Vector 14 : SMT1PRA
 32220  000024  6A3D               	dw	_Default_ISR shr (0+2)
 32221                           
 32222                           ; Vector 15 : SMT1PRW
 32223  000026  6A3D               	dw	_Default_ISR shr (0+2)
 32224                           
 32225                           ; Vector 16 : DMA1SCNT
 32226  000028  6A1B               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 32227                           
 32228                           ; Vector 17 : DMA1DCNT
 32229  00002A  6A24               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 32230                           
 32231                           ; Vector 18 : DMA1OR
 32232  00002C  6A2A               	dw	_DMA1_DMAOR_ISR shr (0+2)
 32233                           
 32234                           ; Vector 19 : DMA1A
 32235  00002E  6A27               	dw	_DMA1_DMAA_ISR shr (0+2)
 32236                           
 32237                           ; Vector 20 : SPI1RX
 32238  000030  6A3D               	dw	_Default_ISR shr (0+2)
 32239                           
 32240                           ; Vector 21 : SPI1TX
 32241  000032  6A3D               	dw	_Default_ISR shr (0+2)
 32242                           
 32243                           ; Vector 22 : SPI1
 32244  000034  6A3D               	dw	_Default_ISR shr (0+2)
 32245                           
 32246                           ; Vector 23 : I2C1RX
 32247  000036  6A3D               	dw	_Default_ISR shr (0+2)
 32248                           
 32249                           ; Vector 24 : I2C1TX
 32250  000038  6A3D               	dw	_Default_ISR shr (0+2)
 32251                           
 32252                           ; Vector 25 : I2C1
 32253  00003A  6A3D               	dw	_Default_ISR shr (0+2)
 32254                           
 32255                           ; Vector 26 : I2C1E
 32256  00003C  6A3D               	dw	_Default_ISR shr (0+2)
 32257                           
 32258                           ; Vector 27 : U1RX
 32259  00003E  692E               	dw	_UART1_rx_vect_isr shr (0+2)
 32260                           
 32261                           ; Vector 28 : U1TX
 32262  000040  6A3D               	dw	_Default_ISR shr (0+2)
 32263                           
 32264                           ; Vector 29 : U1E
 32265  000042  6A3D               	dw	_Default_ISR shr (0+2)
 32266                           
 32267                           ; Vector 30 : U1
 32268  000044  6A3D               	dw	_Default_ISR shr (0+2)
 32269                           
 32270                           ; Vector 31 : TMR0
 32271  000046  6A3D               	dw	_Default_ISR shr (0+2)
 32272                           
 32273                           ; Vector 32 : TMR1
 32274  000048  6A3D               	dw	_Default_ISR shr (0+2)
 32275                           
 32276                           ; Vector 33 : TMR1G
 32277  00004A  6A3D               	dw	_Default_ISR shr (0+2)
 32278                           
 32279                           ; Vector 34 : TMR2
 32280  00004C  6A3D               	dw	_Default_ISR shr (0+2)
 32281                           
 32282                           ; Vector 35 : CCP1
 32283  00004E  6A3D               	dw	_Default_ISR shr (0+2)
 32284                           
 32285                           ; Vector 36 : Undefined
 32286  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 32287                           
 32288                           ; Vector 37 : NCO1
 32289  000052  6A3D               	dw	_Default_ISR shr (0+2)
 32290                           
 32291                           ; Vector 38 : CWG1
 32292  000054  6A3D               	dw	_Default_ISR shr (0+2)
 32293                           
 32294                           ; Vector 39 : CLC1
 32295  000056  6A3D               	dw	_Default_ISR shr (0+2)
 32296                           
 32297                           ; Vector 40 : INT1
 32298  000058  67D0               	dw	_INT1_ISR shr (0+2)
 32299                           
 32300                           ; Vector 41 : CMP2
 32301  00005A  6A3D               	dw	_Default_ISR shr (0+2)
 32302                           
 32303                           ; Vector 42 : DMA2SCNT
 32304  00005C  6A3D               	dw	_Default_ISR shr (0+2)
 32305                           
 32306                           ; Vector 43 : DMA2DCNT
 32307  00005E  6A3D               	dw	_Default_ISR shr (0+2)
 32308                           
 32309                           ; Vector 44 : DMA2OR
 32310  000060  6A3D               	dw	_Default_ISR shr (0+2)
 32311                           
 32312                           ; Vector 45 : DMA2A
 32313  000062  6A3D               	dw	_Default_ISR shr (0+2)
 32314                           
 32315                           ; Vector 46 : I2C2RX
 32316  000064  6A3D               	dw	_Default_ISR shr (0+2)
 32317                           
 32318                           ; Vector 47 : I2C2TX
 32319  000066  6A3D               	dw	_Default_ISR shr (0+2)
 32320                           
 32321                           ; Vector 48 : I2C2
 32322  000068  6A3D               	dw	_Default_ISR shr (0+2)
 32323                           
 32324                           ; Vector 49 : I2C2E
 32325  00006A  6A3D               	dw	_Default_ISR shr (0+2)
 32326                           
 32327                           ; Vector 50 : U2RX
 32328  00006C  6942               	dw	_UART2_rx_vect_isr shr (0+2)
 32329                           
 32330                           ; Vector 51 : U2TX
 32331  00006E  6938               	dw	_UART2_tx_vect_isr shr (0+2)
 32332                           
 32333                           ; Vector 52 : U2E
 32334  000070  6A3D               	dw	_Default_ISR shr (0+2)
 32335                           
 32336                           ; Vector 53 : U2
 32337  000072  6A3D               	dw	_Default_ISR shr (0+2)
 32338                           
 32339                           ; Vector 54 : TMR3
 32340  000074  5F0B               	dw	_TMR3_ISR shr (0+2)
 32341                           
 32342                           ; Vector 55 : TMR3G
 32343  000076  6A3D               	dw	_Default_ISR shr (0+2)
 32344                           
 32345                           ; Vector 56 : TMR4
 32346  000078  6A3D               	dw	_Default_ISR shr (0+2)
 32347                           
 32348                           ; Vector 57 : CCP2
 32349  00007A  6A3D               	dw	_Default_ISR shr (0+2)
 32350                           
 32351                           ; Vector 58 : Undefined
 32352  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 32353                           
 32354                           ; Vector 59 : CWG2
 32355  00007E  6A3D               	dw	_Default_ISR shr (0+2)
 32356                           
 32357                           ; Vector 60 : CLC2
 32358  000080  6A3D               	dw	_Default_ISR shr (0+2)
 32359                           
 32360                           ; Vector 61 : INT2
 32361  000082  6A3D               	dw	_Default_ISR shr (0+2)
 32362                           
 32363                           ; Vector 62 : Undefined
 32364  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 32365                           
 32366                           ; Vector 63 : Undefined
 32367  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 32368                           
 32369                           ; Vector 64 : Undefined
 32370  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 32371                           
 32372                           ; Vector 65 : Undefined
 32373  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 32374                           
 32375                           ; Vector 66 : Undefined
 32376  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 32377                           
 32378                           ; Vector 67 : Undefined
 32379  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 32380                           
 32381                           ; Vector 68 : Undefined
 32382  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 32383                           
 32384                           ; Vector 69 : Undefined
 32385  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 32386                           
 32387                           ; Vector 70 : TMR5
 32388  000094  668B               	dw	_TMR5_ISR shr (0+2)
 32389                           
 32390                           ; Vector 71 : TMR5G
 32391  000096  6A3D               	dw	_Default_ISR shr (0+2)
 32392                           
 32393                           ; Vector 72 : TMR6
 32394  000098  69D7               	dw	_TMR6_ISR shr (0+2)
 32395                           
 32396                           ; Vector 73 : CCP3
 32397  00009A  6A3D               	dw	_Default_ISR shr (0+2)
 32398                           
 32399                           ; Vector 74 : CWG3
 32400  00009C  6A3D               	dw	_Default_ISR shr (0+2)
 32401                           
 32402                           ; Vector 75 : CLC3
 32403  00009E  6A3D               	dw	_Default_ISR shr (0+2)
 32404                           
 32405                           ; Vector 76 : Undefined
 32406  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 32407                           
 32408                           ; Vector 77 : Undefined
 32409  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 32410                           
 32411                           ; Vector 78 : Undefined
 32412  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 32413                           
 32414                           ; Vector 79 : Undefined
 32415  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 32416                           
 32417                           ; Vector 80 : CCP4
 32418  0000A8  6A3D               	dw	_Default_ISR shr (0+2)
 32419                           
 32420                           ; Vector 81 : CLC4
 32421  0000AA  6A3D               	dw	_Default_ISR shr (0+2)
 32422  0000AC                     ivt0x8_undefint:
 32423                           	opt callstack 0
 32424  0000AC  00FF               	reset	
 32425                           
 32426                           	psect	text168
 32427  000000                     __ptext168:
 32428                           	opt callstack 0
 32429                           
 32430                           	psect	rparam
 32431  0000                     
 32432                           	psect	temp
 32433  000001                     btemp:
 32434                           	opt callstack 0
 32435  000001                     	ds	32
 32436  0000                     wtemp0	set	btemp
 32437  0000                     wtemp1	set	btemp+2
 32438  0000                     wtemp2	set	btemp+4
 32439  0000                     wtemp3	set	btemp+6
 32440  0000                     wtemp4	set	btemp+8
 32441  0000                     wtemp5	set	btemp+10
 32442  0000                     wtemp8	set	btemp+1
 32443  0000                     ttemp0	set	btemp
 32444  0000                     ttemp1	set	btemp+3
 32445  0000                     ttemp2	set	btemp+6
 32446  0000                     ttemp3	set	btemp+9
 32447  0000                     ttemp5	set	btemp+1
 32448  0000                     ttemp6	set	btemp+4
 32449  0000                     ttemp7	set	btemp+8
 32450  0000                     ltemp0	set	btemp
 32451  0000                     ltemp1	set	btemp+4
 32452  0000                     ltemp2	set	btemp+8
 32453  0000                     lltemp0	set	btemp
 32454  0000                     lltemp1	set	btemp+8
 32455  0000                     lltemp2	set	btemp+16
 32456  0000                     lltemp3	set	btemp+24
 32457                           tosu	equ	0x3FFF
 32458                           tosh	equ	0x3FFE
 32459                           tosl	equ	0x3FFD
 32460                           stkptr	equ	0x3FFC
 32461                           pclatu	equ	0x3FFB
 32462                           pclath	equ	0x3FFA
 32463                           pcl	equ	0x3FF9
 32464                           tblptru	equ	0x3FF8
 32465                           tblptrh	equ	0x3FF7
 32466                           tblptrl	equ	0x3FF6
 32467                           tablat	equ	0x3FF5
 32468                           prodh	equ	0x3FF4
 32469                           prodl	equ	0x3FF3
 32470                           indf0	equ	0x3FEF
 32471                           postinc0	equ	0x3FEE
 32472                           postdec0	equ	0x3FED
 32473                           preinc0	equ	0x3FEC
 32474                           plusw0	equ	0x3FEB
 32475                           fsr0h	equ	0x3FEA
 32476                           fsr0l	equ	0x3FE9
 32477                           wreg	equ	0x3FE8
 32478                           indf1	equ	0x3FE7
 32479                           postinc1	equ	0x3FE6
 32480                           postdec1	equ	0x3FE5
 32481                           preinc1	equ	0x3FE4
 32482                           plusw1	equ	0x3FE3
 32483                           fsr1h	equ	0x3FE2
 32484                           fsr1l	equ	0x3FE1
 32485                           bsr	equ	0x3FE0
 32486                           indf2	equ	0x3FDF
 32487                           postinc2	equ	0x3FDE
 32488                           postdec2	equ	0x3FDD
 32489                           preinc2	equ	0x3FDC
 32490                           plusw2	equ	0x3FDB
 32491                           fsr2h	equ	0x3FDA
 32492                           fsr2l	equ	0x3FD9
 32493                           status	equ	0x3FD8


Data Sizes:
    Strings     538
    Constant    372
    Data        965
    BSS         1077
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      37
    BANK0           160      0     154
    BANK1           256      0     250
    BANK2           256     25     221
    BANK3           256      0     228
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_83(CODE[1]), STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_80(CODE[3]), STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), 
		 -> STR_61(CODE[3]), STR_57(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_80(CODE[3]), STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), 
		 -> STR_61(CODE[3]), STR_57(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 79
		 -> ct(STACK[3]), STR_46(CODE[79]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), 
		 -> STR_34(CODE[15]), STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[3]), STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), 
		 -> STR_20(CODE[19]), STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[19]), STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 79
		 -> ct(STACK[3]), STR_46(CODE[79]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), 
		 -> STR_34(CODE[15]), STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[3]), STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), 
		 -> STR_20(CODE[19]), STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[19]), STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[4]), STR_3(CODE[4]), 
		 -> V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[4]), STR_3(CODE[4]), 
		 -> V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_52(CODE[4]), STR_51(CODE[4]), STR_48(CODE[4]), STR_47(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_52(CODE[4]), STR_51(CODE[4]), STR_48(CODE[4]), STR_47(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_46(CODE[79]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), 
		 -> STR_20(CODE[19]), STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[19]), STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5815_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_46(CODE[79]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_46(CODE[79]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 79
		 -> STR_46(CODE[79]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4381tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1994spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1994spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  349956
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1358
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (17) _Volts_to_SOC                                        4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31208
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186304
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92899
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            62    10     52   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62850
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62568
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31177
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      62
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      62
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35855
                                              0 BANK2     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35765
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           4     4      0   35765
                         _StartTimer
                       _Volts_to_SOC
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                  _port_data_dma_ptr
                 _send_port_data_dma
                 _set_load_relay_one
                 _set_load_relay_two
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            62    10     52   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _set_load_relay_two                                  1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _set_load_relay_one                                  1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (17) _Volts_to_SOC                                        4     0      4      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       _Volts_to_SOC
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       ___xxtofl
       _port_data_dma_ptr
       _send_port_data_dma
       _set_load_relay_one
       _set_load_relay_two
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     19      DD       9       86.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      25       1       58.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4FF      58        0.0%
DATA                 0      0     821       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 11 00:22:57 2019

                     _SPI1_Exchange8bit A68E                __end_of_set_display_info A706  
                                     _C 0100                                       _D 07FF  
                                     _H 00F3                                       _P 00A5  
                                     _R 00CB                                       _S 0060  
                                     _T FD41                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler A3EE            __end_of_start_switch_handler A66E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FDD1                  __end_of_FVR_Initialize A8DA  
                           __CFG_LVP$ON 000000                                     l169 A7E2  
                                   l807 A69C                                     l673 A22E  
                                   _GIE 01FE97                                     _abs 9C5C  
                                   _pad 84AE                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize A78E                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack A5E4                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 0096                           _INT1_CallBack A578  
                          __CFG_ZCD$OFF 000000                                    l1000 9EFA  
                                  l2013 850A                                    l2033 4D0E  
                                  l2113 0B1A                                    l1316 2416  
                                  l1308 224E                                    l1333 2A6A  
                                  l1414 9980                                    l1326 24B4  
                                  l1318 241C                                    l2151 61D6  
                                  l1328 257A                                    l1329 2688  
                       _timer3ReloadVal 0027                                    l1188 9F3A  
                                  l2172 581A                                    l2069 123A  
                                  l2237 21E6                                    l3054 838C  
                                  l1632 9F9A                                    l3321 6CF4  
                                  l1641 6DB0                                    l1554 900A  
                                  l2098 066A                                    l1642 6F0C  
                                  l2187 50F4                                    l2540 7C20  
                                  l2533 7B4C                                    l1573 9FCE  
                                  l1558 9312                                    l3336 95C2  
                                  l2529 8D3E                                    l1649 86CE  
                                  l1737 4C2A                                    l3349 953E  
                                  l1782 74C6                    _ADCC_StartConversion A7FC  
                                  l2807 3A82                                    l2567 794E  
                                  l1689 A702                                    l1865 9438  
                                  l1874 89E8                                    l2819 3912  
                                  l2852 477A                                    l2951 765C  
                                  l2928 710A                                    l7201 366E  
                                  l7211 36AA                                    l7131 33AC  
                                  l7205 368E                                    l7125 3366  
                                  l8021 78BA                                    l8005 7838  
                                  l2990 6894                                    l7207 36A0  
                                  l7215 36DA                                    l7143 3416  
                                  l7119 3326                                    l2959 9C9C  
                                  l8031 78FC                                    l8023 78D6  
                                  l2888 32C6                                    l7321 3A32  
                                  l7305 39DE                                    l7233 3776  
                                  l7161 34BE                                    l7153 346C  
                                  l7137 33E4                                    l7129 337C  
                                  l9001 A31E                                    l7315 3A0A  
                                  l7235 3788                                    l7243 37C4  
                                  l7155 349C                                    l7091 90DE  
                                  l7403 95B2                                    l7149 3456  
                                  l7093 9100                                    l8029 78E6  
                                  l8045 76B4                                    l7327 3A62  
                                  l7319 3A22                                    l7255 389C  
                                  l7239 3792                                    l7191 35FC  
                                  l7431 56A6                                    l7273 3934  
                                  l7265 38F6                                    l7257 38C2  
                                  l7361 9C8C                                    l7441 57AC  
                                  l7433 56F6                                    l7417 5588  
                                  l8057 7786                                    l7275 3946  
                                  l9203 7036                                    l9133 9B56  
                                  l7293 3980                                    l8093 9B1A  
                                  l7437 573E                                    l8077 7FC2  
                                  l8069 7F16                                    l9205 7054  
                                  l9125 A2E8                                    l7711 2AFC  
                                  l7279 3952                                    l7535 6A30  
                                  l7527 6984                                    l7519 68FC  
                                  l7607 4456                                    l7375 75FA  
                                  l9215 7088                                    l9207 706A  
                                  l7721 2B72                                    l7289 397A  
                                  l7481 6460                                    l7641 45B4  
                                  l7633 4582                                    l7625 451C  
                                  l7617 44E6                                    l7561 42A0  
                                  l7385 7654                                    l9225 70EA  
                                  l9161 91FA                                    l7475 640C  
                                  l7651 45F6                                    l7627 452E  
                                  l7635 4586                                    l7555 4260  
                                  l7379 75FE                                    l7459 952E  
                                  l7805 30D6                                    l7717 2B3C  
                                  l8701 6666                                    l7661 4640  
                                  l7581 437E                                    l7565 42B6  
                                  l9093 9FD8                                    l9173 926E  
                                  l9165 9202                                    l7823 314C  
                                  l7735 2C0A                                    l7719 2B42  
                                  l7487 64A6                                    l7647 45D0  
                                  l7575 433E                                    l7567 42E6  
                                  l9191 6FC6                                    l9183 6F5A  
                                  l9601 9BB4                                    l7833 31C0  
                                  l7809 30FC                                    l7737 2C10  
                                  l7729 2BCA                                    l8721 6780  
                                  l7681 46F6                                    l7665 4646  
                                  l7593 4402                                    l7585 4394  
                                  l9193 6FD4                                    l9169 926A  
                                  l7851 3274                                    l7843 3230  
                                  l7819 3146                                    l7747 2C62  
                                  l7739 2C40                                    l8715 6706  
                                  l7499 6578                                    l7907 7EC2  
                                  l7923 83C8                                    l7675 46BA  
                                  l7587 43C4                                    l9195 6FEA  
                                  l7853 328E                                    l7837 3206  
                                  l9701 9FB0                                    l8725 67E8  
                                  l8717 671E                                    l8709 66DA  
                                  l7693 474E                                    l9197 7008  
                                  l8735 6884                                    l8719 6742  
                                  l7927 83E0                                    l7919 83B6  
                                  l7695 475E                                    l7687 4726  
                                  l7599 443C                                    l8751 6B66  
                                  l7873 7DB2                                    l7945 8494  
                                  l7937 8460                                    l7961 8D3C  
                                  l7953 8CC6                                    l8753 6BD2  
                                  l9821 8172                                    l7885 7DE8  
                                  l7957 8D08                                    l9823 8178  
                                  l9831 81BA                                    l7799 30BA  
                                  l9663 7378                                    l9655 734C  
                                  l7879 7DC8                                    l7975 7B9A  
                                  l9743 47B6                                    l9825 8186  
                                  l9817 815C                                    l7969 7B0A  
                                  l9753 48D4                                    l9737 4786  
                                  l9819 816C                                    l9667 738C  
                                  l8699 6644                                    l7899 7E8E  
                                  l7987 7C1E                                    l7979 7BE8  
                                  l7995 9C32                                    l9597 9B82  
                                  l9845 8258                                    l9837 81EA  
                                  l9829 818E                                    l9765 49E0  
                                  l9757 49AE                                    l9783 4BF8  
                                  l9791 4C0A                                    STR_1 FF53  
                                  STR_2 FFA5                                    l9777 4B5C  
                                  l9769 4A7C                                    l9857 93F2  
                                  STR_3 FFE3                                    STR_4 FF42  
                                  STR_5 FF64                                    STR_6 FFA5  
                                  STR_7 FFE3                                    STR_8 FF31  
                                  STR_9 FF86                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u5040 912E                                    u6000 68F6  
                                  u5300 37BA                                    u6020 694C  
                                  u5230 36D2                                    u6030 697E  
                                  u5070 A142                                    u5047 9120  
                                  u5400 3972                                    u5240 36F2  
                                  u5208 3644                                    u7000 9AF6  
                                  u6040 69B0                                    u5080 A144  
                                  u5305 37AA                                    u7010 9B16  
                                  _T6PR 003F93                                    u5235 36C2  
                                  u5340 38E4                                    u5180 3622  
                                  u6060 6A68                                    u6300 4694  
                                  u6220 45AE                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u5190 3642  
                                  u6310 46CE                                    u5510 A112  
                                  _PMD2 0039C2                                    u5191 363C  
                                  _PMD3 0039C3                                    u5440 39CE  
                                  u6080 6ABA                                    u6320 470A  
                                  u5520 A114                                    _PMD4 0039C4  
                                  u6305 4684                                    _PMD5 0039C5  
                                  u6410 2C50                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u5380 3958  
                                  u6260 4638                                    u5700 5520  
                                  u5445 39BE                                    u5470 39EE  
                                  u5630 764C                                    u5710 556C  
                                  u6520 319A                                    u5640 764E  
                                  u5800 9DF2                                    u6425 2DE4  
                                  u5625 762E                                    u5705 5516  
                                  u6530 31D4                                    u5570 9C70  
                                  u6610 7EAE                                    u5810 9DF4  
                                  u6435 2EAC                                    u6540 321A  
                                  u5900 645C                                    u5580 757E  
                                  u8220 6C00                                    u5820 94EC  
                                  u9100 4AC0                                    u6525 318A  
                                  u6445 3074                                    u9110 A638  
                                  u8150 66D6                                    u5750 564C  
                                  u5670 9570                                    u5830 94EE  
                                  u9014 47D0                                    u5911 6466  
                                  u5735 55A6                                    u9015 47CA  
                                  u6480 313E                                    u5920 64A0  
                                  u6720 8D38                                    u6800 782C  
                                  u5736 55AC                                    u5680 9572  
                                  u5585 7574                                    u5737 55BA  
                                  u5850 A172                                    u8170 682E  
                                  u5930 64D2                                    u6810 7866  
                                  u5770 5724                                    u9034 47F2  
                                  u5755 5642                                    u8227 6BF2  
                                  u9035 47EC                                    u9116 A63A  
                                  u5860 A174                                    u8180 6830  
                                  u6660 840C                                    u8260 6C9A  
                                  u6900 76AE                                    u9220 93DE  
                                  u5950 65B0                                    u6590 7E14  
                                  u8270 6CC8                                    u6910 76E0  
                                  u9054 49C8                                    u6815 785C  
                                  u5775 571A                                    u9055 49C2  
                                  u5880 6406                                    u6680 8480  
                                  u8265 6C94                                    u5970 6602  
                                  u6930 77BE                                    u9074 4A96  
                                  u9250 9424                                    u8267 6C86  
                                  u9075 4A90                                    u6780 9C2E  
                                  u6860 7904                                    u8277 6CBA  
                                  u6790 7818                                    u6950 7F10  
                                  u9094 4AB8                                    u9238 93E0  
                                  u9095 4AB2                                    u6880 792E  
                                  u6960 7F42                                    u6795 780E  
                                  u6891 7674                                    u6980 7FFA  
                                  u9268 9426                                    u8830 9798  
                                  u8655 9E2E                                    u8930 732A  
                                  _PLLR 01CEE0                                    u8790 707E  
                                  u8855 97CC                                    u8856 97CE  
                                  u8848 979A                                    u8994 47A0  
                                  u8995 479A                                    u9990 8296  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR A208                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0394                                    _cp_h FDE1  
                                  _cp_l FDDD                                    _atoi 662A  
                                  _ctoa 943C                                    _main 21F0  
                                  _dtoa 4C30                                    _nanf 9854  
                                  _seed 02D5                                    _prec 0023  
                                  _nout 00C7                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 60EC                                    btemp 0001  
                                  _utoa 57D6                                    _xtoa 50B0  
                __end_of_check_adc_scan A8D2                           ___fpclassifyf 74D0  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 002B  
             __end_of_SPI1_Exchange8bit A6AC               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize 9D74             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr A4B8                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0038                        __end_of_INT0_ISR A86A  
                      __end_of_INT1_ISR 9F7E          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 9012           __end_of_OSCILLATOR_Initialize A7E8  
                                 l10015 9EE2                                   l10033 9F22  
                                 l11013 0396                                   l11005 032A  
                                 l10205 89C2                                   l11023 04D2  
                                 l11041 058E                                   l11017 0406  
                                 l11131 0C32                                   l11115 0B12  
                                 l11107 0A48                                   l11035 0554  
                                 l11019 0470                                   l10155 8E0A  
                                 l11205 1092                                   l11117 0B34  
                                 l11231 119A                                   l11215 10E2  
                                 l11143 0CBA                                   l11151 0D24  
                                 l11055 05F6                                   l11047 0594  
                                 l11039 057C                                   l11311 5866  
                                 l11303 580A                                   l10159 8E48  
                                 l10183 88F6                                   l10177 60E0  
                                 l11073 06B8                                   l11057 0602  
                                 l11321 5A5C                                   l10283 9600  
                                 l11083 077A                                   l11251 6158  
                                 l11403 5420                                   l10195 8952  
                                 l10277 9EB8                                   l11093 0926  
                                 l11077 06F0                                   l11501 17E0  
                                 l12213 24A6                                   l12205 2482  
                                 l12141 2268                                   l12133 2230  
                                 l11159 0D90                                   l11167 0EA2  
                                 l11271 6248                                   l11343 50E4  
                                 l12063 6D80                                   l12135 2238  
                                 l10289 9610                                   l11193 0FD6  
                                 l11281 6302                                   l11505 1834  
                                 l11441 1326                                   l12225 2766  
                                 l12241 296E                                   l11195 0FF0  
                                 l11179 0F3A                                   l11275 6278  
                                 l11267 620C                                   l11363 51BA  
                                 l11355 515A                                   l11443 1360  
                                 l12139 2256                                   l10901 4D66  
                                 l10805 8BF8                                   l11285 632E  
                                 l11349 511E                                   l11613 216E  
                                 l11525 1A46                                   l11517 198E  
                                 l11445 1376                                   l12077 6EA8  
                                 l12229 27C8                                   l10911 4F78  
                                 l11607 2114                                   l11463 14A8  
                                 l11623 2192                                   l10831 5BAE  
                                 l12271 2A1A                                   l12263 29E4  
                                 l12239 2944                                   l12247 298E  
                                 l12191 2420                                   l11289 636A  
                                 l11617 2172                                   l11529 1A7A  
                                 l11465 14E2                                   l12265 29FC  
                                 l12257 29D2                                   l12193 244E  
                                 l10763 82A2                                   l10931 502A  
                                 l11379 52B0                                   l11387 5336  
                                 l11483 165C                                   l11467 14F8  
                                 l10851 5D84                                   l10843 5CD6  
                                 l11803 85E6                                   l12275 2A40  
                                 l11549 1BDA                                   l11493 16F4  
                                 l10837 5C6C                                   l12285 2A94  
                                 PRLOCK 0039EF                                   l10775 916A  
                                 l10791 8514                                   l10863 945A  
                                 l10935 5066                                   l11559 1C88  
                                 l11663 906A                                   l10785 84DA  
                                 l10865 9486                                   l10961 00F0  
                                 l11593 1FDC                                   l11569 1DAA  
                                 l10779 91A8                                   l10795 8550  
                                 l11579 1E60                                   l10789 8502  
                                 l10981 0216                                   l10949 00AC  
                                 l11677 8EE8                                   l11855 3B56  
                                 l10799 859A                                   l10983 022C  
                                 l11679 8F2A                                   l11953 A68A  
                                 l11881 3F9E                                   l11873 3E26  
                                 l10897 4D48                                   l10889 4CFE  
                                 l10969 0146                                   l11891 4046  
                                 l11859 3B98                                   l10979 01EA  
                                 l10987 0258                                   l11965 A22A  
                                 l11885 4028                                   l11869 3DA8  
                                 l10997 02FC                                   l11887 4030  
                       __end_of___aodiv 662A                            _Volts_to_SOC 91F2  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 3A8C                                   _ADCLK 003EFF  
                       __end_of___aomod 6ADE                                   _ADPCH 003EF1  
                       __end_of___fldiv 4784                                   _ADREF 003EFD  
                       __end_of___awdiv 7EDC                         __end_of___flneg 9C5C  
                                 STR_11 FF75                                   STR_12 FEAC  
                                 STR_20 FE99                                   STR_21 FF86  
                                 STR_13 FED2                                   STR_30 FE73  
                                 STR_22 FF86                                   STR_14 FEBF  
                                 STR_23 FF75                                   STR_31 FFC0  
                                 STR_15 FF1E                                   STR_32 FFC0  
                                 STR_24 FFFC                                   STR_16 FEF8  
                                 STR_25 FFF9                                   STR_33 FF96  
                                 STR_17 FF0B                           __CFG_WDTE$OFF 000000  
                                 STR_34 FF96                                   STR_18 FEE5  
                                 STR_35 FF96                                   STR_51 FFD7  
                                 STR_27 FFB4                                   STR_19 FE4C  
                                 STR_52 FFDF                                   STR_28 FFCA  
                                 STR_36 FE34                         __end_of___awmod 84AE  
                                 STR_45 FE33                                   STR_61 FFF0  
                                 STR_29 FE73                                   STR_38 FE86  
                                 STR_46 FDE5                                   STR_71 FFF3  
                                 STR_55 FFEA                                   STR_47 FFD3  
                                 STR_39 FE60                                   STR_80 FFE7  
                                 STR_64 FFED                                   STR_48 FFDB  
                                 _ADRPT 003EEC                                   STR_57 FFEA  
                                 STR_66 FFED                                   STR_74 FFF6  
                                 STR_59 FFF0                                   STR_76 FFF6  
                                 STR_69 FFF3                                   STR_78 FFE7  
                       __end_of___flmul 32D0                         __end_of___flsub 9CE8  
                       __end_of___fltol 7958                                   u10010 8312  
                                 u10200 4CD2                                   u11000 5AB4  
                                 u11001 5AB2                                   u11010 5AC8  
                                 u10220 4CE4                                   u11020 5ACC  
                                 u10140 5DF8                                   u10310 5000  
                                 u10070 8C72                                   u11110 5266  
                                 u10240 4D34                                   u11120 5268  
                                 u11040 50CA                                   u10250 4F8C  
                                 u10170 4C60                                   u10180 4C62  
                                 u10500 0562                                   u10420 02A6  
                                 u11140 5332                                   u10261 4FBC  
                                 u10077 8C64                                   u10270 4FD2  
                                 u10430 02A8                                   u10350 00DA  
                                 u11150 5352                                   u11070 51B2  
                                 u11310 1540                                   u10271 4FD0  
                                 u10280 4FE6                                   u11080 5206  
                                 u11400 18BC                                   u11320 1542  
                                 u11161 5382                                   u11145 5314  
                                 u10290 4FEA                                   u10530 05C6  
                                 u11170 5398                                   u11090 5208  
                                 u11330 1568                         __end_of___lodiv 77E6  
                                 u11171 5396                                   u10380 0194  
                                 u11180 53AC                                   u11500 1EB4  
                                 u11260 13BE                                   u10470 050E  
                                 u10390 0196                                   u11190 53B0  
                                 u11430 1B34                                   u11270 13C0  
                                 u10800 10B8                                   u10640 0A18  
                                 u11520 2064                                   u11440 1B36  
                                 u11280 13E6                                   u10570 0648  
                                 _U1P1H 003DED                                   u10820 116E  
                                 u10740 0EE4                                   u10900 626E  
                                 u11380 1748                                   u11540 904A  
                                 _U1P2H 003DEF                                   u10830 1170  
                                 u10910 62B4                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u11810 6EF8                                   _U1P3L 003DF0  
                                 u10940 6390                                   u11820 6EFA  
                                 u10917 62A6                                   _U2P1L 003DD4  
                                 u10960 57F0                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 u10991 5A9E                                   _T5CLK 003F9D  
                       __end_of___lomod 801C                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00B2                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 003D                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR A8F4  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 7D8E                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 9A86  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR A776  
                          _DMA1CON1bits 003BFD                                   _flags 0025  
              __size_of_calc_model_data 02EA                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD                                   _fputc 8272  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 9DFE  
                                 _fputs 915A                         __end_of_isdigit A17E  
                       __end_of_ivln2_h FDDD                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand A022                                   _width 0021  
                                 _putch A740                         __end_of_islower A11E  
                       __end_of_isspace 9B2A                _INT1_SetInterruptHandler A416  
                       __end_of_isupper A14E                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler A39E  
           _UART1_SetRxInterruptHandler A376                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf 88EA                         __end_of_tolower 95CC  
                       __end_of_strncmp 6CFE                         __end_of_toupper 9548  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr A4E0  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 9D2E  
                 __end_of_ringBufS_init A2D6                         __initialization 86D2  
                     _UART2_rx_vect_isr A508                            __end_of_cp_h FDE5  
                          __end_of_cp_l FDE1                            __end_of_atoi 689E  
                          __end_of_ctoa 94C4                            __end_of_main 2AA6  
                          __end_of_dtoa 50B0                            __end_of_nanf 98B6  
                          __end_of_stoa 63AA                            __end_of_utoa 5B16  
                          __end_of_xtoa 546A                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0038                 __end_of_TMR2_Initialize A7A6  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button 9EC0  
              _TMR5_SetInterruptHandler A3C6                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A9  
                     _port_data_dma_ptr A884                     ??_UART2_rx_vect_isr 003D  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize A234  
                       _PWM8_Initialize A7BC                        _UART1_Initialize 9CE8  
                     _UART2_tx_vect_isr A4E0                      _UART2_Transmit_ISR A208  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 97F0  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 9DFE  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0038                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1017 9A78                                  _RB6PPS 003A0E  
                                i1l1205 7CF6                    _start_switch_handler A64E  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize 9DBA                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright A84C  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u912_28 8162                                  u915_20 8182  
                                u915_21 817C                                  u941_28 A588  
                                u870_25 A828                                  u870_26 A82A  
                                u950_28 A5AC                                  u919_24 824E  
                                u919_25 824A                    __size_of_hid_display 0102  
                                u947_48 A618                                  u939_48 A5F4  
                                u972_44 9630                                  u972_45 962A  
                                u869_25 A838                                  u869_26 A83A  
                                u889_20 A092                                  u889_26 A094  
                      __end_of___xxtofl 7114   __end_of_ADCC_DischargeSampleCapacitor A8BA  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor A8B2  
              __end_of_send_lcd_cmd_dma 9AD8                         _TMR3_WriteTimer 9F00  
                   ??_UART2_tx_vect_isr 003D               __end_of_UART2_rx_vect_isr A530  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize A87A  
                      _UART2_Initialize 9918                                  _WaitMs 9FB6  
                       _conv_raw_result 4784                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 7AC8  
                                ___fleq 8C84                       _ADCC_ThresholdISR 9720  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 9288  
                                _efgtoa 0000                                  _floorf 546A  
                    ?_ADCC_ThresholdISR 0038                                  _memset 5B16  
                  __size_of_help_button 0038                                  clear_0 8766  
                                clear_1 877A                                  clear_2 878C  
                                clear_3 8798                                  clear_4 87A4  
                                clear_5 87B0                                  clear_6 87BC  
                                clear_7 87C8               __end_of_port_data_dma_ptr A88E  
                                _printf 98B6                      _eaDogM_WriteString 9012  
                                _strcpy 8BB0                               ?_ADCC_ISR 0038  
                                _strlen 90B8                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 05FF                         _ADCC_Initialize 96B4  
                        _PMD_Initialize A7E8               __end_of_UART2_tx_vect_isr A508  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0038                  __end_of_start_adc_scan 9854  
                          __mediumconst FC70                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 99D0                        __end_of_vfprintf 8F68  
                            _StartTimer 9E40           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 9D74                       _SYSTEM_Initialize 9BCA  
                            __accesstop 0060                 __end_of__initialization 87DA  
                             ?_INT0_ISR 0038                               ?_INT1_ISR 0038  
                  __end_of_display_help A8CA                    __end_of_display_info A8C2  
             __end_of_CLKREF_Initialize A884                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer 9EC0  
                 _set_temp_display_help A80E                        _clear_hid_pflags A554  
                 __end_of_TMR3_CallBack A5E4               __end_of_ADCC_ThresholdISR 978A  
                    __size_of_calc_bsoc 077E                  __end_of_ringBufS_flush 931A  
                        __pcstackCOMRAM 0038                              ___inthi_sp 10C2  
                            ___intlo_sp 1861                            __pidataBANK0 A17E  
                          __pidataBANK1 8AD6                            __pidataBANK2 8D48  
           __size_of_send_port_data_dma 0052                               ?_TMR3_ISR 0038  
                             ?_TMR5_ISR 0038                               ?_TMR6_ISR 0038  
                        ivt0x8_undefint 00AC                           __end_of_fputc 8396  
                         __end_of_fputs 91F2                           __end_of_srand A056  
                 __end_of_TMR5_CallBack A5C0                           __end_of_putch A75A  
               __end_of_PWM8_Initialize A7D2                 __end_of_TMR6_Initialize A25E  
                     _adc_int_t_handler 95CC                  __end_of_PMD_Initialize A7FC  
                            __end_of_bp FDD9                              ??_ADCC_ISR 0038  
                 __end_of_TMR6_CallBack A62C             __size_of_EXT_INT_Initialize 0034  
                         _DMA1_DMAA_ISR A89C                   TMR3_ISR@CountCallBack 00C9  
                        _clear_adc_scan A8DA                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 00BE  
             __end_of_SYSTEM_Initialize 9C14                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer 9F40  
                            __pbssBANK0 0060                              __pbssBANK1 01DA  
                            __pbssBANK2 02D5                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 6CFE                 __end_of_conv_raw_result 4C30  
                 _INT0_InterruptHandler 00C4                              ??_INT0_ISR 0038  
                            ??_INT1_ISR 003E                       __end_of_TimerDone A326  
                      _DMA1_DMADCNT_ISR A890                      __size_of_init_bsoc 0170  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma A0BE  
                 __end_of_wait_lcd_done A740        __end_of_TMR3_SetInterruptHandler A416  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler A3C6  
                            ??_TMR3_ISR 02BC                 __end_of_ADCC_Initialize 971E  
                            ??_TMR5_ISR 0042               __end_of_adc_int_t_handler 964A  
                            ??_TMR6_ISR 003D                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler A48E  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler A466  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR A66E  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan A8E0                          ?_DMA1_DMAA_ISR 0038  
                      _DMA1_DMASCNT_ISR A86C                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 u1163_20 3F96  
                               _U1ERRIR 003DF9                                 u1165_20 403E  
                               _U2ERRIE 003DE2                                 u1166_20 405C  
                               u1167_20 405E                                 u1174_28 A5D0  
                               _U2ERRIR 003DE1                                 u1168_20 406E  
                               u1169_20 4070                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0038              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 420A                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch A2D6                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 9F00                 __size_of_switch_handler 0128  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one A83E  
            __end_of_set_load_relay_two A82E       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim A776                                 __Lparam 0000  
              __end_of_UART1_Initialize 9D2E                       __end_of_hid_input 943C  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 63AA  
                               ___fladd 32D0                                 ___aomod 689E  
                               ___fldiv 420A                                 ___awdiv 7D8E  
                               ___flneg 9C14                                 ___awmod 8396  
                               ___flmul 2AA6                                 ___flsub 9CA2  
                               ___fltol 77E6                                 ___lodiv 7666  
                               ___lomod 7EDC               __end_of_UART1_Receive_ISR A68E  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 8AD6                                 __pcinit 86D2  
              __end_of_mode_lamp_bright A85A                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand A83E  
                               __ramtop 2000                                 __ptext0 21F0  
                               __ptext1 A530                                 __ptext2 A64E  
                               __ptext3 97F0                                 __ptext4 A7FC  
                               __ptext5 A8B2                                 __ptext6 A022  
                               __ptext7 A0BE                                 __ptext8 89EC  
                               __ptext9 A25E                       _UART2_Receive_ISR A706  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize A7D2                            __size_of_abs 0046  
                               us609999 6ACC                            __size_of_pad 0114  
                     __end_of_init_bsoc 7AC8                                 _isalpha 9DBA  
                               _isdigit A14E                                 _ivln2_h FDD9  
                               us598999 6614                                 us694999 77D0  
                             _T3CONbits 003FA6                                 _mode_sw 002E  
                               us699999 800C                       __end_of_lp_filter 74D0  
                               _islower A0EE                                 _isspace 9AD8  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 9976                                 _isupper A11E  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 87E0  
                               _tolower 9548                   __size_of_display_help 0008  
                               _utctime 009D                   __size_of_display_info 0008  
                               _strncmp 6ADE                                 _toupper 94C4  
                  end_of_initialization 87DA               __size_of_convert_adc_data 00B8  
                    _check_enter_button 9E80                               i1u1199_20 7CEC  
   __end_of_UART2_SetRxInterruptHandler A376             _UART2_SetRxInterruptHandler A34E  
                             i2u1184_48 A4CC                               i2u1186_48 A4F4  
                     __end_of_set_vterm A6E8                       __end_of_vfpfcnvrt 21F0  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd A8EC  
             __end_of_UART2_Receive_ISR A724                          wdtdelay@dcount 00A1  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 003E  
                 _INT1_InterruptHandler 00C1                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc A8F2                _TMR3_SetInterruptHandler A3EE  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler A39E  
                          _display_help A8C2                   _TMR5_InterruptHandler 00AC  
                          _display_info A8BA    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags A578                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler A4B6             _ADCC_SetADIInterruptHandler A48E  
                            _update_lcd 85C2                         _calc_model_data 5E02  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc A530                         _DMA1_Initialize 964A  
                            _start_bsoc A62C                         _SPI1_Initialize A7A6  
                 __end_of_get_vterm_ptr A1DC                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 9FEC  
          __end_of_INTERRUPT_Initialize 97F0                              _vterm_dump 801C  
                        __end_of___flge 7C2A                          __end_of___fleq 8D48  
  __end_of_INT0_DefaultInterruptHandler A900   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler A8FE              __size_of_UART1_Receive_ISR 0020  
                       _DMA2_Initialize 99D0                           __pidataBIGRAM 7114  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 57D6  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0095  
                        __end_of_memset 5E02                          __end_of_printf 9918  
              __end_of_DMA1_DMADCNT_ISR A89A             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack A608                          __end_of_strcpy 8C84  
                        __end_of_strlen 915A                     start_initialization 86D2  
  __end_of_TMR5_DefaultInterruptHandler A0BE   __size_of_TMR5_DefaultInterruptHandler 0034  
          _TMR5_DefaultInterruptHandler A08A         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 9CA2                   __end_of_INT1_CallBack A59C  
             __size_of_set_display_info 001E                             __end_of_pad 85C2  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd A2AE  
                        _switch_handler 814A           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 01F2  
                 __end_of___fpclassifyf 7666                           _uart2RxBuffer 0500  
              __end_of_DMA1_DMASCNT_ISR A87A                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR A8A8                     __end_of_hid_display 89EC  
            __end_of_send_port_data_dma 9B7C                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone A2FE                           _ringBufS_init A2AE  
                           __pdataBANK0 00CB                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 0028              __end_of_EXT_INT_Initialize A08A  
               __end_of_calc_model_data 60EC                     __end_of_help_button 9FB6  
       __end_of_eaDogM_WriteStringAtPos A022                     __end_of_BVSOC_TABLE FD41  
                           __pbssBIGRAM 07FF                 __end_of_DMA1_Initialize 96B4  
                           __pbssCOMRAM 0021        __end_of_INT0_SetInterruptHandler A466  
                         __pcstackBANK2 02BC                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 8272  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize A7BC  
              _UART1_RxInterruptHandler 00B8                _UART2_TxInterruptHandler 00BB  
                             __end_of_T FDD1                        _convert_adc_data 8E04  
                             _calc_bsoc 3A8C               __size_of_ringBufS_put_dma 00AA  
                          _init_display 89EC                  __end_of_DMA1_DMAOR_ISR A8B2  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00AF  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 9A2A  
                _PIN_MANAGER_Initialize 931A                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set A8E6                           __pmediumconst FC70  
                             __ptext100 9BCA                               __ptext101 9918  
                             __ptext110 9D74                               __ptext102 A326  
                             __ptext111 A3EE                               __ptext103 A34E  
                             __ptext120 A056                               __ptext112 A78E  
                             __ptext104 9CE8                               __ptext121 A416  
                             __ptext113 A7A6                               __ptext105 A376  
                             __ptext130 A578                               __ptext122 A43E  
                             __ptext114 A7BC                               __ptext106 A234  
                             __ptext131 A8FA                               __ptext123 99D0  
                             __ptext115 A7E8                               __ptext107 A39E  
                             __ptext140 A8FC                               __ptext132 814A  
                             __ptext124 964A                               __ptext116 931A  
                             __ptext108 9D2E                               __ptext141 3A8C  
                             __ptext133 9A2C                               __ptext125 A87A  
                             __ptext117 A7D2                               __ptext109 A3C6  
                             __ptext150 A1DC                               __ptext142 A81E  
                             __ptext134 9EC0                               __ptext126 96B4  
                             __ptext118 978A                               __ptext151 95CC  
                             __ptext143 A82E                               __ptext135 A59C  
                             __ptext127 A466                               __ptext119 A8D2  
                             __ptext160 A706                               __ptext152 A900  
                             __ptext144 9B2A                               __ptext136 A08A  
                             __ptext128 A48E                               __ptext161 A75C  
                             __ptext153 A902                               __ptext145 A884  
                             __ptext137 7C2C                               __ptext129 9F40  
                             __ptext162 A608                               __ptext154 9720  
                             __ptext146 A85C                               __ptext138 9F00  
                             __ptext163 9B7C                               __ptext155 A4B8  
                             __ptext147 A5E4                               __ptext139 A5C0  
                             __ptext164 A86C                               __ptext156 A66E  
                             __ptext148 A8FE                               __ptext165 A890  
                             __ptext157 A4E0                               __ptext149 A8F4  
                             __ptext166 A89C                               __ptext158 A208  
                             __ptext167 A8A8                               __ptext159 A508  
                             __ptext168 0000                               _hid_input 93AC  
                    __end_of_StartTimer 9E80                      _set_load_relay_one A82E  
                    _set_load_relay_two A81E                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00AC                                _ADCC_ISR A1DC  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                             _init_bsoc 7958                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 7314  
                           _hid_display 88EA                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 978A  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0038                                _INT0_ISR A85C  
                              _INT1_ISR 9F40                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 01DA                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack A5C0                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0046  
                              i2u983_48 A51C                                i2u975_48 A1F4  
                              i2u977_48 9756                                i2u977_49 976A  
                             _set_vterm A6CA                     __size_of_update_lcd 0110  
                           _help_button 9F7E                                _TMR3_ISR 7C2C  
                           _BVSOC_TABLE FC71                                _TMR5_ISR 9A2C  
                              _TMR6_ISR A75C                               _port_data 05FF  
                   __size_of_static_soc 0024                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack A59C                              _ADCON0bits 003EF8  
                    __end_of_check_help 6F10                               _start_lcd A8E6  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack A608                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc A8EC  
                      _set_display_info A6E8                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 86E6                               copy_data1 870C  
                             copy_data2 872E                               copy_data3 8750  
              _INT0_SetInterruptHandler A43E                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler A34E             _UART2_SetTxInterruptHandler A326  
                          _uart1RxCount 0035                            _uart2RxCount 002F  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done A724                            _send_lcd_cmd A286  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler A902  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140                      __end_of_get_switch A2FE  
                 __end_of_DMA1_DMAA_ISR A8A6                      ___fpclassifyf@F463 0099  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 6F10                       ?_DMA1_DMADCNT_ISR 0038  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand A84C                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 003E                                __ptext10 A286  
                              __ptext11 A68E                                __ptext20 4784  
                              __ptext12 A2AE                                __ptext21 9854  
                              __ptext13 7958                                __ptext30 9FB6  
                              __ptext22 A6AC                                __ptext14 91F2  
                              __ptext31 85C2                                __ptext23 6F10  
                              __ptext15 88EA                                __ptext40 5B16  
                              __ptext32 9FEC                                __ptext24 A554  
                              __ptext16 93AC                                __ptext41 98B6  
                              __ptext33 9A86                                __ptext25 A8DA  
                              __ptext17 A2D6                                __ptext50 7666  
                              __ptext42 8EBC                                __ptext34 A724  
                              __ptext26 6CFE                                __ptext18 A83E  
                              __ptext51 6ADE                                __ptext43 1244  
                              __ptext35 9976                                __ptext27 801C  
                              __ptext19 8E04                                __ptext60 9C14  
                              __ptext52 60EC                                __ptext44 50B0  
                              __ptext36 9012                                __ptext28 87E0  
                              __ptext61 7AC8                                __ptext53 0000  
                              __ptext45 94C4                                __ptext37 A8E0  
                              __ptext29 A1AE                                __ptext70 943C  
                              __ptext62 8C84                                __ptext54 9548  
                              __ptext46 A0EE                                __ptext38 A8E6  
                              __ptext71 84AE                                __ptext63 420A  
                              __ptext55 A11E                                __ptext47 9DBA  
                              __ptext39 9288                                __ptext80 A6CA  
                              __ptext72 90B8                                __ptext64 8396  
                              __ptext56 8BB0                                __ptext48 57D6  
                              __ptext81 A80E                                __ptext73 915A  
                              __ptext65 7D8E                                __ptext57 546A  
                              __ptext49 7EDC                                __ptext90 A8C2  
                              __ptext82 A6E8                                __ptext74 8272  
                              __ptext66 4C30                                __ptext58 74D0  
                              __ptext91 9E80                                __ptext83 A776  
                              __ptext75 A740                                __ptext67 9C5C  
                              __ptext59 77E6                                __ptext92 A8CA  
                              __ptext84 A84C                                __ptext76 8F68  
                              __ptext68 689E                                __ptext93 5E02  
                              __ptext85 9DFE                                __ptext77 662A  
                              __ptext69 63AA                                __ptext94 A8EC  
                              __ptext86 9F7E                                __ptext78 9AD8  
                              __ptext95 A62C                                __ptext87 A2FE  
                              __ptext79 A14E                                __ptext96 7314  
                              __ptext88 9E40                                __ptext97 9CA2  
                              __ptext89 A8BA                                __ptext98 32D0  
                              __ptext99 2AA6                        __size_of_isupper 0030  
                              us1016999 4C4A                                us1106999 5130  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1085999 60FE                                us1097999 583C  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 8F68                    __end_of_Volts_to_SOC 9288  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 08B6                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0038                   __end_of_init_port_dma A0EE  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00B5                               stoa@F1166 01D3  
                    ??_DMA1_DMASCNT_ISR 003E            __end_of_ADCC_StartConversion A80E  
                              _spi_link 0089                                _wdtdelay 9976  
            __end_of_UART2_Transmit_ISR A234                                _vfprintf 8EBC  
              __end_of_convert_adc_data 8EBC              __end_of_PWM8_LoadDutyValue 9E40  
  __end_of_TMR3_DefaultInterruptHandler A8FE   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler A8FC    __end_of_INT1_DefaultInterruptHandler A8FC  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler A8FA  
                    _send_port_data_dma 9B2A                           ??_Default_ISR 0038  
                           _uart1RxHead 0037                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0031                             _uart1RxTail 0036  
                        _get_raw_result A6AC                             _uart2TxHead 0034  
                           _uart2RxTail 0030                             _uart2TxTail 0033  
                          _wait_lcd_set A8E0                        Volts_to_SOC@slot 002D  
                    _EXT_INT_Initialize A056    __end_of_TMR6_DefaultInterruptHandler 9BCA  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler 9B7C  
  __end_of_ADCC_DefaultInterruptHandler A902   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler A900                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long A25E  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help A81E  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 90B8  
                 __end_of_mode_lamp_dim A78E                 __end_of_adc_int_handler A904  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 86D2                  _uart2TxBufferRemaining 0032  
                    __end_of_static_soc A554                      __end_of_start_bsoc A64E  
                        _FVR_Initialize A8D2                  __end_of_get_raw_result A6CA  
                      _send_lcd_cmd_dma 9A86                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0029        __end_of_INT1_SetInterruptHandler A43E  
             __size_of_UART1_Initialize 0046                        ??_DMA1_DMAOR_ISR 003E  
             __end_of_send_lcd_cmd_long A286                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR A8FA          __end_of_PIN_MANAGER_Initialize 93AC  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 814A  
               _eaDogM_WriteStringAtPos 9FEC                           _get_vterm_ptr A1AE  
                        _check_adc_scan A8CA               __size_of_UART2_Initialize 005E  
