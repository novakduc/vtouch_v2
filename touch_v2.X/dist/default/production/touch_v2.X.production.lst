

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec  3 18:13:58 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=4,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=4,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=4,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=4,class=CODE,delta=1
   157                           	psect	text132,global,reloc=4,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=4,class=CODE,delta=1
   162                           	psect	text137,global,reloc=4,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=4,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=4,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=4,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=4,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=4,class=CODE,delta=1
   174                           	psect	text149,global,reloc=4,class=CODE,delta=1
   175                           	psect	text150,global,reloc=4,class=CODE,delta=1
   176                           	psect	text151,global,reloc=4,class=CODE,delta=1
   177                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   178                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   179                           	psect	text152,global,reloc=4,class=CODE,delta=1
   180                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   181                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   182  0000                     
   183                           ; Version 2.10
   184                           ; Generated 31/07/2019 GMT
   185                           ; 
   186                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   187                           ; All rights reserved.
   188                           ; 
   189                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   190                           ; 
   191                           ; Redistribution and use in source and binary forms, with or without modification, are
   192                           ; permitted provided that the following conditions are met:
   193                           ; 
   194                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   195                           ;        conditions and the following disclaimer.
   196                           ; 
   197                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   198                           ;        of conditions and the following disclaimer in the documentation and/or other
   199                           ;        materials provided with the distribution.
   200                           ; 
   201                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   202                           ;        software without specific prior written permission.
   203                           ; 
   204                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   205                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   206                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   207                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   208                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   209                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   210                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   211                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   212                           ; 
   213                           ; 
   214                           ; Code-generator required, PIC18F57K42 Definitions
   215                           ; 
   216                           ; SFR Addresses
   217  0000                     
   218 ;;_k	offset	0
   219 ;;_j	offset	1
   220 ;;_i	offset	2
   221 ;;_inp_index	offset	3
   222 ;;_mode	offset	4
   223 ;;_channel	offset=-1 (param)
   224 ;;_s	offset=-2 (param)
   225 ;;_cmd	offset=-1 (param)
   226 ;;_cmd	offset=-1 (param)
   227 ;;_data	offset=-1 (param)
   228 ;;__this	offset=-2 (param)
   229 ;;_h	offset=-1 (param)
   230 ;;_h	offset=-1 (param)
   231 ;;_i	offset=-1 (param)
   232 ;;_cmd	offset=-1 (param)
   233 ;;_i	offset	0
   234 ;;_chan	offset=-1 (param)
   235 ;;_to_what	offset=-2 (param)
   236 ;;_u	offset	0
   237 ;;_s	offset=-2 (param)
   238 ;;_index	offset=-1 (param)
   239 ;;_arg	offset	0
   240 ;;_exp	offset	4
   241 ;;_sign	offset=-1 (param)
   242 ;;_val	offset=-5 (param)
   243 ;;_h	offset=-1 (param)
   244 ;;_flipper	offset=-1 (param)
   245 ;;_f	offset	0
   246 ;;_ap	offset	6
   247 ;;_s	offset=-3 (param)
   248 ;;_fmt	offset=-5 (param)
   249 ;;_line	offset=-1 (param)
   250 ;;_vterm	offset=-2 (param)
   251 ;;_numMilliseconds	offset=-2 (param)
   252 ;;_vterm	offset=-1 (param)
   253 ;;_r	offset=-1 (param)
   254 ;;_c	offset=-2 (param)
   255 ;;_strPtr	offset=-4 (param)
   256 ;;_strPtr	offset=-1 (param)
   257 ;;_delay	offset=-4 (param)
   258 ;;_strPtr	offset=-2 (param)
   259 ;;__this	offset=-2 (param)
   260 ;;_clearBuffer	offset=-3 (param)
   261 ;;_s	offset	0
   262 ;;_k	offset	2
   263 ;;_dest	offset=-2 (param)
   264 ;;_c	offset=-4 (param)
   265 ;;_n	offset=-6 (param)
   266 ;;_ap	offset	0
   267 ;;_fmt	offset=-3 (param)
   268 ;;_cfmt	offset	0
   269 ;;_fp	offset=-2 (param)
   270 ;;_fmt	offset=-4 (param)
   271 ;;_ap	offset=-6 (param)
   272 ;;_vfpfcnvrt$4683	offset	0
   273 ;;_vfpfcnvrt$4689	offset	2
   274 ;;_vfpfcnvrt$4682	offset	4
   275 ;;_llu	offset	6
   276 ;;_ll	offset	14
   277 ;;_f	offset	22
   278 ;;_ct	offset	26
   279 ;;_cp	offset	29
   280 ;;_c	offset	31
   281 ;;_fp	offset=-2 (param)
   282 ;;_fmt	offset=-4 (param)
   283 ;;_ap	offset=-6 (param)
   284 ;;_xtoa$4668	offset	0
   285 ;;_xtoa$4667	offset	2
   286 ;;_n	offset	4
   287 ;;_c	offset	12
   288 ;;_i	offset	14
   289 ;;_w	offset	16
   290 ;;_p	offset	18
   291 ;;_fp	offset=-2 (param)
   292 ;;_d	offset=-10 (param)
   293 ;;_x	offset=-11 (param)
   294 ;;_toupper$5328	offset	0
   295 ;;_c	offset=-2 (param)
   296 ;;_c	offset=-2 (param)
   297 ;;_c	offset=-2 (param)
   298 ;;_r	offset	0
   299 ;;_l	offset	2
   300 ;;__l	offset=-2 (param)
   301 ;;__r	offset=-4 (param)
   302 ;;_n	offset=-6 (param)
   303 ;;_nuls	offset	0
   304 ;;_l	offset	7
   305 ;;_p	offset	9
   306 ;;_cp	offset	11
   307 ;;_w	offset	13
   308 ;;_i	offset	15
   309 ;;_fp	offset=-2 (param)
   310 ;;_s	offset=-4 (param)
   311 ;;_efgtoa$4647	offset	0
   312 ;;_efgtoa$4646	offset	2
   313 ;;_efgtoa$4645	offset	4
   314 ;;_efgtoa$4641	offset	6
   315 ;;_efgtoa$4637	offset	8
   316 ;;_efgtoa$4636	offset	10
   317 ;;_u	offset	12
   318 ;;_g	offset	16
   319 ;;_l	offset	20
   320 ;;_h	offset	24
   321 ;;_ou	offset	28
   322 ;;_n	offset	32
   323 ;;_e	offset	34
   324 ;;_i	offset	36
   325 ;;_w	offset	38
   326 ;;_p	offset	40
   327 ;;_sign	offset	42
   328 ;;_d	offset	44
   329 ;;_ne	offset	46
   330 ;;_m	offset	48
   331 ;;_pp	offset	50
   332 ;;_t	offset	52
   333 ;;_mode	offset	54
   334 ;;_nmode	offset	55
   335 ;;_fp	offset=-2 (param)
   336 ;;_f	offset=-6 (param)
   337 ;;_c	offset=-7 (param)
   338 ;;_tolower$5313	offset	0
   339 ;;_c	offset=-2 (param)
   340 ;;_c	offset=-2 (param)
   341 ;;_d	offset	0
   342 ;;_s	offset	2
   343 ;;_dest	offset=-2 (param)
   344 ;;_src	offset=-4 (param)
   345 ;;_u	offset	0
   346 ;;_m	offset	4
   347 ;;_e	offset	8
   348 ;;_x	offset=-4 (param)
   349 ;;_u	offset	0
   350 ;;_e	offset	4
   351 ;;_x	offset=-4 (param)
   352 ;;_exp1	offset	0
   353 ;;_sign1	offset	1
   354 ;;_f1	offset=-4 (param)
   355 ;;_f1	offset=-4 (param)
   356 ;;_ff1	offset=-4 (param)
   357 ;;_ff2	offset=-8 (param)
   358 ;;_ff1	offset=-4 (param)
   359 ;;_ff2	offset=-8 (param)
   360 ;;_grs	offset	0
   361 ;;_rem	offset	4
   362 ;;_new_exp	offset	8
   363 ;;_aexp	offset	10
   364 ;;_bexp	offset	11
   365 ;;_sign	offset	12
   366 ;;_b	offset=-4 (param)
   367 ;;_a	offset=-8 (param)
   368 ;;_sign	offset	0
   369 ;;_counter	offset	1
   370 ;;_dividend	offset=-2 (param)
   371 ;;_divisor	offset=-4 (param)
   372 ;;_quotient	offset	0
   373 ;;_sign	offset	2
   374 ;;_counter	offset	3
   375 ;;_dividend	offset=-2 (param)
   376 ;;_divisor	offset=-4 (param)
   377 ;;_dtoa$4613	offset	0
   378 ;;_n	offset	2
   379 ;;_i	offset	10
   380 ;;_s	offset	12
   381 ;;_w	offset	14
   382 ;;_p	offset	16
   383 ;;_fp	offset=-2 (param)
   384 ;;_d	offset=-10 (param)
   385 ;;_a	offset=-2 (param)
   386 ;;_sign	offset	0
   387 ;;_counter	offset	1
   388 ;;_dividend	offset=-8 (param)
   389 ;;_divisor	offset=-16 (param)
   390 ;;_quotient	offset	0
   391 ;;_sign	offset	8
   392 ;;_counter	offset	9
   393 ;;_dividend	offset=-8 (param)
   394 ;;_divisor	offset=-16 (param)
   395 ;;_w	offset	0
   396 ;;_fp	offset=-2 (param)
   397 ;;_c	offset=-3 (param)
   398 ;;_w	offset	0
   399 ;;_i	offset	2
   400 ;;_fp	offset=-2 (param)
   401 ;;_buf	offset=-4 (param)
   402 ;;_p	offset=-6 (param)
   403 ;;_a	offset	0
   404 ;;_s	offset=-2 (param)
   405 ;;_i	offset	0
   406 ;;_c	offset	2
   407 ;;_s	offset=-2 (param)
   408 ;;_fp	offset=-4 (param)
   409 ;;_c	offset=-2 (param)
   410 ;;_fp	offset=-4 (param)
   411 ;;_c	offset=-1 (param)
   412 ;;__this	offset=-2 (param)
   413 ;;_c	offset=-3 (param)
   414 ;;_atoi$5166	offset	0
   415 ;;_atoi$5164	offset	2
   416 ;;_atoi$5165	offset	4
   417 ;;_n	offset	5
   418 ;;_neg	offset	7
   419 ;;_s	offset=-2 (param)
   420 ;;_isspace$5204	offset	0
   421 ;;_c	offset=-2 (param)
   422 ;;_c	offset=-2 (param)
   423 ;;_vterm	offset=-1 (param)
   424 ;;_new_response_info	offset=-1 (param)
   425 ;;_new_response_info	offset=-1 (param)
   426 ;;_level	offset=-2 (param)
   427 ;;_dutyValue	offset=-2 (param)
   428 ;;_timer	offset=-1 (param)
   429 ;;_timer	offset=-1 (param)
   430 ;;_count	offset=-3 (param)
   431 ;;_h	offset=-1 (param)
   432 ;;_lp_speed	offset	0
   433 ;;_new	offset=-4 (param)
   434 ;;_bn	offset=-5 (param)
   435 ;;_slow	offset=-6 (param)
   436 ;;_b	offset=-4 (param)
   437 ;;_a	offset=-8 (param)
   438 ;;_grs	offset	0
   439 ;;_bexp	offset	1
   440 ;;_aexp	offset	2
   441 ;;_signs	offset	3
   442 ;;_b	offset=-4 (param)
   443 ;;_a	offset=-8 (param)
   444 ;;_prod	offset	0
   445 ;;_grs	offset	4
   446 ;;_temp	offset	8
   447 ;;_bexp	offset	10
   448 ;;_aexp	offset	11
   449 ;;_sign	offset	12
   450 ;;_b	offset=-4 (param)
   451 ;;_a	offset=-8 (param)
   452 ;;_InterruptHandler	offset=-3 (param)
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_InterruptHandler	offset=-3 (param)
   455 ;;_InterruptHandler	offset=-3 (param)
   456 ;;_InterruptHandler	offset=-3 (param)
   457 ;;_InterruptHandler	offset=-3 (param)
   458 ;;_state	offset	0
   459 ;;_InterruptHandler	offset=-3 (param)
   460 ;;_InterruptHandler	offset=-3 (param)
   461 ;;_InterruptHandler	offset=-3 (param)
   462 ;;_InterruptHandler	offset=-3 (param)
   463 ;;_i	offset	0
   464 ;;_sw_value	offset	1
   465 ;;_timerVal	offset=-2 (param)
   466 ;;_channel	offset=-1 (param)
   467 ;;_i	offset	0
   468                           
   469                           	psect	idataBANK0
   470  01883E                     __pidataBANK0:
   471                           	opt callstack 0
   472                           
   473                           ;initializer for _R
   474  01883E  0000               	dw	0
   475  018840  0000               	dw	0
   476  018842  0000               	dw	0
   477  018844  0000               	dw	0
   478  018846  0000               	dw	0
   479  018848  0000               	dw	0
   480  01884A  0000               	dw	0
   481  01884C  0000               	dw	0
   482  01884E  0000               	dw	0
   483  018850  0000               	dw	0
   484  018852  0000               	dw	0
   485  018854  0000               	dw	0
   486  018856  0000               	dw	0
   487  018858  0000               	dw	0
   488  01885A  0000               	dw	0
   489  01885C  0000               	dw	0
   490  01885E  0F67               	dw	3943
   491  018860  0F8F               	dw	3983
   492  018862  00                 	db	0
   493  018863  0000               	dw	0
   494  018865  00                 	db	0
   495                           
   496                           ;initializer for _H
   497  018866  00                 	db	0
   498  018867  00                 	db	0
   499  018868  01                 	db	1
   500  018869  00                 	db	0
   501  01886A  01                 	db	1
   502  01886B  00                 	db	0
   503  01886C  00                 	db	0
   504                           
   505                           	psect	idataBANK1
   506  01789A                     __pidataBANK1:
   507                           	opt callstack 0
   508                           
   509                           ;initializer for _C
   510  01789A  0000               	dw	0
   511  01789C  0000               	dw	0
   512  01789E  0000               	dw	0
   513  0178A0  0000               	dw	0
   514  0178A2  0000               	dw	0
   515  0178A4  0000               	dw	0
   516  0178A6  0000               	dw	0
   517  0178A8  0000               	dw	0
   518  0178AA  0000               	dw	0
   519  0178AC  0000               	dw	0
   520  0178AE  0000               	dw	0
   521  0178B0  0000               	dw	0
   522  0178B2  0000               	dw	0
   523  0178B4  0000               	dw	0
   524  0178B6  0000               	dw	0
   525  0178B8  0000               	dw	0
   526  0178BA  0000               	dw	0
   527  0178BC  0000               	dw	0
   528  0178BE  0000               	dw	0
   529  0178C0  0000               	dw	0
   530  0178C2  0000               	dw	0
   531  0178C4  0000               	dw	0
   532  0178C6  0000               	dw	0
   533  0178C8  0000               	dw	0
   534  0178CA  0000               	dw	0
   535  0178CC  0000               	dw	0
   536  0178CE  0000               	dw	0
   537  0178D0  0000               	dw	0
   538  0178D2  0000               	dw	0
   539  0178D4  0000               	dw	0
   540  0178D6  0000               	dw	0
   541  0178D8  0000               	dw	0
   542  0178DA  0000               	dw	0
   543  0178DC  0000               	dw	0
   544  0178DE  0000               	dw	0
   545  0178E0  0000               	dw	0
   546  0178E2  0000               	dw	0
   547  0178E4  0000               	dw	0
   548  0178E6  0000               	dw	0
   549  0178E8  0000               	dw	0
   550  0178EA  0000               	dw	0
   551  0178EC  0000               	dw	0
   552  0178EE  0000               	dw	0
   553  0178F0  0000               	dw	0
   554  0178F2  0000               	dw	0
   555  0178F4  0000               	dw	0
   556  0178F6  0000               	dw	0
   557  0178F8  0000               	dw	0
   558  0178FA  0000               	dw	0
   559  0178FC  0000               	dw	0
   560  0178FE  0000               	dw	0
   561  017900  0000               	dw	0
   562  017902  0000               	dw	0
   563  017904  0000               	dw	0
   564  017906  0000               	dw	0
   565  017908  0000               	dw	0
   566  01790A  0000               	dw	0
   567  01790C  0000               	dw	0
   568  01790E  0000               	dw	0
   569  017910  0000               	dw	0
   570  017912  0000               	dw	0
   571  017914  0000               	dw	0
   572  017916  0000               	dw	0
   573  017918  4361               	dw	17249
   574  01791A  00                 	db	0
   575  01791B  00                 	db	0
   576  01791C  00                 	db	0
   577  01791D  00                 	db	0
   578  01791E  00                 	db	0
   579  01791F  00                 	db	0
   580  017920  00                 	db	0
   581  017921  00                 	db	0
   582  017922  00                 	db	0
   583  017923  00                 	db	0
   584  017924  00                 	db	0
   585  017925  00                 	db	0
   586                           
   587                           ;initializer for stoa@F1166
   588  017926  28                 	db	40
   589  017927  6E                 	db	110
   590  017928  75                 	db	117
   591  017929  6C                 	db	108
   592  01792A  6C                 	db	108
   593  01792B  29                 	db	41
   594  01792C  00                 	db	0
   595                           
   596                           ;initializer for _port_data
   597  01792D  FF                 	db	255
   598  01792E  00                 	db	0
   599  01792F  FF                 	db	255
   600  017930  00                 	db	0
   601  017931  FF                 	db	255
   602  017932  00                 	db	0
   603  017933  FF                 	db	255
   604  017934  00                 	db	0
   605  017935  FF                 	db	255
   606  017936  00                 	db	0
   607  017937  FF                 	db	255
   608  017938  00                 	db	0
   609  017939  FF                 	db	255
   610  01793A  00                 	db	0
   611  01793B  FF                 	db	255
   612  01793C  00                 	db	0
   613                           
   614                           	psect	idataBANK2
   615  01752E                     __pidataBANK2:
   616                           	opt callstack 0
   617                           
   618                           ;initializer for _V
   619  01752E  00                 	db	0
   620  01752F  00                 	db	0
   621  017530  00                 	db	0
   622  017531  00                 	db	0
   623  017532  00                 	db	0
   624  017533  00                 	db	0
   625  017534  00                 	db	0
   626  017535  00                 	db	0
   627  017536  00                 	db	0
   628  017537  00                 	db	0
   629  017538  00                 	db	0
   630  017539  00                 	db	0
   631  01753A  00                 	db	0
   632  01753B  00                 	db	0
   633  01753C  00                 	db	0
   634  01753D  00                 	db	0
   635  01753E  00                 	db	0
   636  01753F  00                 	db	0
   637  017540  00                 	db	0
   638  017541  00                 	db	0
   639  017542  00                 	db	0
   640  017543  00                 	db	0
   641  017544  00                 	db	0
   642  017545  00                 	db	0
   643  017546  00                 	db	0
   644  017547  00                 	db	0
   645  017548  00                 	db	0
   646  017549  00                 	db	0
   647  01754A  00                 	db	0
   648  01754B  00                 	db	0
   649  01754C  00                 	db	0
   650  01754D  00                 	db	0
   651  01754E  00                 	db	0
   652  01754F  00                 	db	0
   653  017550  00                 	db	0
   654  017551  00                 	db	0
   655  017552  00                 	db	0
   656  017553  00                 	db	0
   657  017554  00                 	db	0
   658  017555  00                 	db	0
   659  017556  00                 	db	0
   660  017557  00                 	db	0
   661  017558  00                 	db	0
   662  017559  00                 	db	0
   663  01755A  00                 	db	0
   664  01755B  00                 	db	0
   665  01755C  00                 	db	0
   666  01755D  00                 	db	0
   667  01755E  00                 	db	0
   668  01755F  00                 	db	0
   669  017560  00                 	db	0
   670  017561  00                 	db	0
   671  017562  00                 	db	0
   672  017563  00                 	db	0
   673  017564  00                 	db	0
   674  017565  00                 	db	0
   675  017566  00                 	db	0
   676  017567  00                 	db	0
   677  017568  00                 	db	0
   678  017569  00                 	db	0
   679  01756A  00                 	db	0
   680  01756B  00                 	db	0
   681  01756C  00                 	db	0
   682  01756D  00                 	db	0
   683  01756E  00                 	db	0
   684  01756F  00                 	db	0
   685  017570  00                 	db	0
   686  017571  00                 	db	0
   687  017572  00                 	db	0
   688  017573  00                 	db	0
   689  017574  00                 	db	0
   690  017575  00                 	db	0
   691  017576  00                 	db	0
   692  017577  00                 	db	0
   693  017578  00                 	db	0
   694  017579  00                 	db	0
   695  01757A  00                 	db	0
   696  01757B  00                 	db	0
   697  01757C  00                 	db	0
   698  01757D  00                 	db	0
   699  01757E  00                 	db	0
   700  01757F  00                 	db	0
   701  017580  00                 	db	0
   702  017581  00                 	db	0
   703  017582  00                 	db	0
   704  017583  00                 	db	0
   705  017584  00                 	db	0
   706  017585  00                 	db	0
   707  017586  00                 	db	0
   708  017587  00                 	db	0
   709  017588  00                 	db	0
   710  017589  00                 	db	0
   711  01758A  00                 	db	0
   712  01758B  00                 	db	0
   713  01758C  00                 	db	0
   714  01758D  00                 	db	0
   715  01758E  00                 	db	0
   716  01758F  00                 	db	0
   717  017590  00                 	db	0
   718  017591  00                 	db	0
   719  017592  00                 	db	0
   720  017593  00                 	db	0
   721  017594  00                 	db	0
   722  017595  00                 	db	0
   723  017596  00                 	db	0
   724  017597  00                 	db	0
   725  017598  00                 	db	0
   726  017599  00                 	db	0
   727  01759A  00                 	db	0
   728  01759B  00                 	db	0
   729  01759C  00                 	db	0
   730  01759D  00                 	db	0
   731  01759E  00                 	db	0
   732  01759F  00                 	db	0
   733  0175A0  00                 	db	0
   734  0175A1  00                 	db	0
   735  0175A2  00                 	db	0
   736  0175A3  00                 	db	0
   737  0175A4  00                 	db	0
   738  0175A5  00                 	db	0
   739  0175A6  00                 	db	0
   740  0175A7  00                 	db	0
   741  0175A8  00                 	db	0
   742  0175A9  00                 	db	0
   743  0175AA  00                 	db	0
   744  0175AB  00                 	db	0
   745  0175AC  00                 	db	0
   746  0175AD  00                 	db	0
   747  0175AE  00                 	db	0
   748  0175AF  0000               	dw	0
   749  0175B1  0000               	dw	0
   750  0175B3  0000               	dw	0
   751  0175B5  0000               	dw	0
   752  0175B7  00                 	db	0
   753  0175B8  00                 	db	0
   754  0175B9  00                 	db	0
   755  0175BA  00                 	db	0
   756  0175BB  00                 	db	0
   757  0175BC  00                 	db	0
   758  0175BD  0000               	dw	0
   759  0175BF  0000               	dw	0
   760  0175C1  0000               	dw	0
   761  0175C3  0000               	dw	0
   762  0175C5  0000               	dw	0
   763  0175C7  0000               	dw	0
   764  0175C9  00                 	db	0
   765  0175CA  00                 	db	0
   766  0175CB  00                 	db	0
   767  0175CC  00                 	db	0
   768  0175CD  00                 	db	0
   769  0175CE  00                 	db	0
   770  0175CF  00                 	db	0
   771  0175D0  00                 	db	0
   772  0175D1  00                 	db	0
   773  0175D2  00                 	db	0
   774  0175D3  0000               	dw	0
   775  0175D5  0000               	dw	0
   776  0175D7  2D                 	db	45
   777  0175D8  00                 	db	0
   778  0175D9  00                 	db	0
   779  0175DA  0000               	dw	0
   780  0175DC  0000               	dw	0
   781  0175DE  0000               	dw	0
   782  0175E0  0000               	dw	0
   783  0175E2  0000               	dw	0
   784  0175E4  0000               	dw	0
   785  0175E6  0000               	dw	0
   786  0175E8  0000               	dw	0
   787                           
   788                           	psect	mediumconst
   789  00FDB0                     __pmediumconst:
   790                           	opt callstack 0
   791  00FDB0  00                 	db	0
   792  00FDB1                     _T:
   793                           	opt callstack 0
   794  00FDB1  63                 	db	99
   795  00FDB2  6F                 	db	111
   796  00FDB3  6D                 	db	109
   797  00FDB4  6D                 	db	109
   798  00FDB5  61                 	db	97
   799  00FDB6  6E                 	db	110
   800  00FDB7  64                 	db	100
   801  00FDB8  73                 	db	115
   802  00FDB9  20                 	db	32
   803  00FDBA  31                 	db	49
   804  00FDBB  00                 	db	0
   805  00FDBC  00                 	db	0
   806  00FDBD  00                 	db	0
   807  00FDBE  00                 	db	0
   808  00FDBF  00                 	db	0
   809  00FDC0  00                 	db	0
   810  00FDC1  00                 	db	0
   811  00FDC2  00                 	db	0
   812  00FDC3  64                 	db	100
   813  00FDC4  69                 	db	105
   814  00FDC5  73                 	db	115
   815  00FDC6  70                 	db	112
   816  00FDC7  6C                 	db	108
   817  00FDC8  61                 	db	97
   818  00FDC9  79                 	db	121
   819  00FDCA  73                 	db	115
   820  00FDCB  20                 	db	32
   821  00FDCC  31                 	db	49
   822  00FDCD  00                 	db	0
   823  00FDCE  00                 	db	0
   824  00FDCF  00                 	db	0
   825  00FDD0  00                 	db	0
   826  00FDD1  00                 	db	0
   827  00FDD2  00                 	db	0
   828  00FDD3  00                 	db	0
   829  00FDD4  00                 	db	0
   830  00FDD5  63                 	db	99
   831  00FDD6  6F                 	db	111
   832  00FDD7  6D                 	db	109
   833  00FDD8  6D                 	db	109
   834  00FDD9  61                 	db	97
   835  00FDDA  6E                 	db	110
   836  00FDDB  64                 	db	100
   837  00FDDC  73                 	db	115
   838  00FDDD  20                 	db	32
   839  00FDDE  32                 	db	50
   840  00FDDF  00                 	db	0
   841  00FDE0  00                 	db	0
   842  00FDE1  00                 	db	0
   843  00FDE2  00                 	db	0
   844  00FDE3  00                 	db	0
   845  00FDE4  00                 	db	0
   846  00FDE5  00                 	db	0
   847  00FDE6  00                 	db	0
   848  00FDE7  64                 	db	100
   849  00FDE8  69                 	db	105
   850  00FDE9  73                 	db	115
   851  00FDEA  70                 	db	112
   852  00FDEB  6C                 	db	108
   853  00FDEC  61                 	db	97
   854  00FDED  79                 	db	121
   855  00FDEE  73                 	db	115
   856  00FDEF  20                 	db	32
   857  00FDF0  32                 	db	50
   858  00FDF1  00                 	db	0
   859  00FDF2  00                 	db	0
   860  00FDF3  00                 	db	0
   861  00FDF4  00                 	db	0
   862  00FDF5  00                 	db	0
   863  00FDF6  00                 	db	0
   864  00FDF7  00                 	db	0
   865  00FDF8  00                 	db	0
   866  00FDF9  63                 	db	99
   867  00FDFA  6F                 	db	111
   868  00FDFB  6D                 	db	109
   869  00FDFC  6D                 	db	109
   870  00FDFD  61                 	db	97
   871  00FDFE  6E                 	db	110
   872  00FDFF  64                 	db	100
   873  00FE00  73                 	db	115
   874  00FE01  20                 	db	32
   875  00FE02  33                 	db	51
   876  00FE03  00                 	db	0
   877  00FE04  00                 	db	0
   878  00FE05  00                 	db	0
   879  00FE06  00                 	db	0
   880  00FE07  00                 	db	0
   881  00FE08  00                 	db	0
   882  00FE09  00                 	db	0
   883  00FE0A  00                 	db	0
   884  00FE0B  64                 	db	100
   885  00FE0C  69                 	db	105
   886  00FE0D  73                 	db	115
   887  00FE0E  70                 	db	112
   888  00FE0F  6C                 	db	108
   889  00FE10  61                 	db	97
   890  00FE11  79                 	db	121
   891  00FE12  73                 	db	115
   892  00FE13  20                 	db	32
   893  00FE14  33                 	db	51
   894  00FE15  00                 	db	0
   895  00FE16  00                 	db	0
   896  00FE17  00                 	db	0
   897  00FE18  00                 	db	0
   898  00FE19  00                 	db	0
   899  00FE1A  00                 	db	0
   900  00FE1B  00                 	db	0
   901  00FE1C  00                 	db	0
   902  00FE1D  63                 	db	99
   903  00FE1E  6F                 	db	111
   904  00FE1F  6D                 	db	109
   905  00FE20  6D                 	db	109
   906  00FE21  61                 	db	97
   907  00FE22  6E                 	db	110
   908  00FE23  64                 	db	100
   909  00FE24  73                 	db	115
   910  00FE25  20                 	db	32
   911  00FE26  34                 	db	52
   912  00FE27  00                 	db	0
   913  00FE28  00                 	db	0
   914  00FE29  00                 	db	0
   915  00FE2A  00                 	db	0
   916  00FE2B  00                 	db	0
   917  00FE2C  00                 	db	0
   918  00FE2D  00                 	db	0
   919  00FE2E  00                 	db	0
   920  00FE2F  64                 	db	100
   921  00FE30  69                 	db	105
   922  00FE31  73                 	db	115
   923  00FE32  70                 	db	112
   924  00FE33  6C                 	db	108
   925  00FE34  61                 	db	97
   926  00FE35  79                 	db	121
   927  00FE36  73                 	db	115
   928  00FE37  20                 	db	32
   929  00FE38  34                 	db	52
   930  00FE39  00                 	db	0
   931  00FE3A  00                 	db	0
   932  00FE3B  00                 	db	0
   933  00FE3C  00                 	db	0
   934  00FE3D  00                 	db	0
   935  00FE3E  00                 	db	0
   936  00FE3F  00                 	db	0
   937  00FE40  00                 	db	0
   938  00FE41                     __end_of_T:
   939                           	opt callstack 0
   940  0000                     _IVTADL	set	14493
   941  0000                     _IVTADH	set	14494
   942  0000                     _IVTADU	set	14495
   943  0000                     _PIR4bits	set	14756
   944  0000                     _PIE8bits	set	14744
   945  0000                     _PIR8bits	set	14760
   946  0000                     _SCANPR	set	14839
   947  0000                     _DMA2PR	set	14836
   948  0000                     _DMA1PR	set	14835
   949  0000                     _MAINPR	set	14834
   950  0000                     _ISRPR	set	14833
   951  0000                     _PIE2bits	set	14738
   952  0000                     _PIR2bits	set	14754
   953  0000                     _PIE9bits	set	14745
   954  0000                     _PIR9bits	set	14761
   955  0000                     _PIE6bits	set	14742
   956  0000                     _PIE3bits	set	14739
   957  0000                     _PMD7	set	14791
   958  0000                     _PMD6	set	14790
   959  0000                     _PMD5	set	14789
   960  0000                     _PMD4	set	14788
   961  0000                     _PMD3	set	14787
   962  0000                     _PMD2	set	14786
   963  0000                     _PMD1	set	14785
   964  0000                     _PMD0	set	14784
   965  0000                     _OSCTUNE	set	14814
   966  0000                     _OSCFRQ	set	14815
   967  0000                     _OSCEN	set	14813
   968  0000                     _OSCCON3	set	14811
   969  0000                     _OSCCON1	set	14809
   970  0000                     _IPR8bits	set	14728
   971  0000                     _IPR9bits	set	14729
   972  0000                     _IPR5bits	set	14725
   973  0000                     _IPR1bits	set	14721
   974  0000                     _IPR3bits	set	14723
   975  0000                     _IPR6bits	set	14726
   976  0000                     _IPR2bits	set	14722
   977  0000                     _PIE5bits	set	14741
   978  0000                     _PIE1bits	set	14737
   979  0000                     _PIR5bits	set	14757
   980  0000                     _PIR1bits	set	14753
   981  0000                     _PLLR	set	118496
   982  0000                     _SPI1SDIPPS	set	15071
   983  0000                     _U1RXPPS	set	15077
   984  0000                     _RC6PPS	set	14870
   985  0000                     _RC5PPS	set	14869
   986  0000                     _INT1PPS	set	15041
   987  0000                     _RD1PPS	set	14873
   988  0000                     _INT0PPS	set	15040
   989  0000                     _RC3PPS	set	14867
   990  0000                     _RB6PPS	set	14862
   991  0000                     _SPI1SCKPPS	set	15070
   992  0000                     _U2RXPPS	set	15080
   993  0000                     _SLRCONF	set	14995
   994  0000                     _SLRCONE	set	14979
   995  0000                     _SLRCOND	set	14963
   996  0000                     _SLRCONC	set	14947
   997  0000                     _SLRCONB	set	14931
   998  0000                     _SLRCONA	set	14915
   999  0000                     _ODCOND	set	14962
  1000  0000                     _ODCONC	set	14946
  1001  0000                     _ODCONB	set	14930
  1002  0000                     _ODCONA	set	14914
  1003  0000                     _ODCONF	set	14994
  1004  0000                     _ODCONE	set	14978
  1005  0000                     _WPUC	set	14945
  1006  0000                     _WPUA	set	14913
  1007  0000                     _WPUB	set	14929
  1008  0000                     _WPUE	set	14977
  1009  0000                     _WPUF	set	14993
  1010  0000                     _WPUD	set	14961
  1011  0000                     _ANSELA	set	14912
  1012  0000                     _ANSELF	set	14992
  1013  0000                     _ANSELE	set	14976
  1014  0000                     _ANSELB	set	14928
  1015  0000                     _ANSELC	set	14944
  1016  0000                     _ANSELD	set	14960
  1017  0000                     _DMA2SSA	set	15321
  1018  0000                     _DMA1SSA	set	15353
  1019  0000                     _DMA2DSZ	set	15310
  1020  0000                     _DMA2SSZ	set	15319
  1021  0000                     _DMA2DSA	set	15312
  1022  0000                     _DMA1DSZ	set	15342
  1023  0000                     _DMA1SSZ	set	15351
  1024  0000                     _DMA1DSA	set	15344
  1025  0000                     _DMA1CON0bits	set	15356
  1026  0000                     _DMA1CON1bits	set	15357
  1027  0000                     _DMA2CON0	set	15324
  1028  0000                     _DMA2AIRQ	set	15326
  1029  0000                     _DMA2SIRQ	set	15327
  1030  0000                     _DMA2CON1	set	15325
  1031  0000                     _DMA1CON0	set	15356
  1032  0000                     _DMA1AIRQ	set	15358
  1033  0000                     _DMA1SIRQ	set	15359
  1034  0000                     _DMA1CON1	set	15357
  1035  0000                     _CLKRCON	set	15589
  1036  0000                     _CLKRCLK	set	15590
  1037  0000                     _SPI1INTFbits	set	15642
  1038  0000                     _SPI1RXB	set	15632
  1039  0000                     _SPI1TXB	set	15633
  1040  0000                     _SPI1TCNTL	set	15634
  1041  0000                     _SPI1CON0	set	15636
  1042  0000                     _SPI1CLK	set	15644
  1043  0000                     _SPI1BAUD	set	15641
  1044  0000                     _SPI1CON2	set	15638
  1045  0000                     _SPI1CON1	set	15637
  1046  0000                     _U2RXB	set	15824
  1047  0000                     _U2TXB	set	15826
  1048  0000                     _U2ERRIE	set	15842
  1049  0000                     _U2ERRIR	set	15841
  1050  0000                     _U2UIR	set	15840
  1051  0000                     _U2FIFO	set	15839
  1052  0000                     _U2BRGH	set	15838
  1053  0000                     _U2BRGL	set	15837
  1054  0000                     _U2CON2	set	15836
  1055  0000                     _U2CON1	set	15835
  1056  0000                     _U2CON0	set	15834
  1057  0000                     _U2P3L	set	15832
  1058  0000                     _U2P2L	set	15830
  1059  0000                     _U2P1L	set	15828
  1060  0000                     _U1RXB	set	15848
  1061  0000                     _U1TXB	set	15850
  1062  0000                     _U1ERRIE	set	15866
  1063  0000                     _U1ERRIR	set	15865
  1064  0000                     _U1UIR	set	15864
  1065  0000                     _U1FIFO	set	15863
  1066  0000                     _U1BRGH	set	15862
  1067  0000                     _U1BRGL	set	15861
  1068  0000                     _U1CON2	set	15860
  1069  0000                     _U1CON1	set	15859
  1070  0000                     _U1CON0	set	15858
  1071  0000                     _U1P3H	set	15857
  1072  0000                     _U1P3L	set	15856
  1073  0000                     _U1P2H	set	15855
  1074  0000                     _U1P2L	set	15854
  1075  0000                     _U1P1H	set	15853
  1076  0000                     _U1P1L	set	15852
  1077  0000                     _FVRCON	set	16065
  1078  0000                     _ADFLTRL	set	16102
  1079  0000                     _ADFLTRH	set	16103
  1080  0000                     _ADCON0bits	set	16120
  1081  0000                     _ADCON0	set	16120
  1082  0000                     _ADCLK	set	16127
  1083  0000                     _ADACT	set	16126
  1084  0000                     _ADREF	set	16125
  1085  0000                     _ADSTAT	set	16124
  1086  0000                     _ADCON3	set	16123
  1087  0000                     _ADCON2	set	16122
  1088  0000                     _ADCON1	set	16121
  1089  0000                     _ADPREH	set	16119
  1090  0000                     _ADPREL	set	16118
  1091  0000                     _ADCAP	set	16117
  1092  0000                     _ADACQH	set	16116
  1093  0000                     _ADACQL	set	16115
  1094  0000                     _ADPCH	set	16113
  1095  0000                     _ADRPT	set	16108
  1096  0000                     _ADACCU	set	16106
  1097  0000                     _ADSTPTH	set	16101
  1098  0000                     _ADSTPTL	set	16100
  1099  0000                     _ADUTHH	set	16097
  1100  0000                     _ADUTHL	set	16096
  1101  0000                     _ADLTHH	set	16095
  1102  0000                     _ADLTHL	set	16094
  1103  0000                     _CCPTMRS1bits	set	16223
  1104  0000                     _PORTFbits	set	16335
  1105  0000                     _LATCbits	set	16316
  1106  0000                     _LATDbits	set	16317
  1107  0000                     _PORTBbits	set	16331
  1108  0000                     _T2CON	set	16300
  1109  0000                     _T2TMR	set	16298
  1110  0000                     _T2PR	set	16299
  1111  0000                     _T2RST	set	16303
  1112  0000                     _T2HLT	set	16301
  1113  0000                     _T2CLKCON	set	16302
  1114  0000                     _PWM8DCL	set	16224
  1115  0000                     _PWM8DCH	set	16225
  1116  0000                     _PWM8CON	set	16226
  1117  0000                     _LATEbits	set	16318
  1118  0000                     _T5CONbits	set	16282
  1119  0000                     _T5CON	set	16282
  1120  0000                     _TMR5L	set	16280
  1121  0000                     _TMR5H	set	16281
  1122  0000                     _T5CLK	set	16285
  1123  0000                     _T5GATE	set	16284
  1124  0000                     _T5GCON	set	16283
  1125  0000                     _T6CON	set	16276
  1126  0000                     _T6TMR	set	16274
  1127  0000                     _T6PR	set	16275
  1128  0000                     _T6RST	set	16279
  1129  0000                     _T6HLT	set	16277
  1130  0000                     _T6CLKCON	set	16278
  1131  0000                     _TRISD	set	16325
  1132  0000                     _TRISC	set	16324
  1133  0000                     _TRISB	set	16323
  1134  0000                     _TRISA	set	16322
  1135  0000                     _TRISF	set	16327
  1136  0000                     _TRISE	set	16326
  1137  0000                     _LATC	set	16316
  1138  0000                     _LATB	set	16315
  1139  0000                     _LATF	set	16319
  1140  0000                     _LATA	set	16314
  1141  0000                     _LATD	set	16317
  1142  0000                     _LATE	set	16318
  1143  0000                     _IVTLOCKbits	set	16340
  1144  0000                     _IVTLOCK	set	16340
  1145  0000                     _INTCON0bits	set	16338
  1146  0000                     _GIE	set	130711
  1147  00FE41                     
  1148                           ; BSR set to: 57
  1149  00FE41  20                 	db	32
  1150  00FE42  4D                 	db	77	;'M'
  1151  00FE43  65                 	db	101	;'e'
  1152  00FE44  73                 	db	115	;'s'
  1153  00FE45  67                 	db	103	;'g'
  1154  00FE46  20                 	db	32
  1155  00FE47  25                 	db	37
  1156  00FE48  64                 	db	100	;'d'
  1157  00FE49  20                 	db	32
  1158  00FE4A  53                 	db	83	;'S'
  1159  00FE4B  74                 	db	116	;'t'
  1160  00FE4C  61                 	db	97	;'a'
  1161  00FE4D  63                 	db	99	;'c'
  1162  00FE4E  6B                 	db	107	;'k'
  1163  00FE4F  20                 	db	32
  1164  00FE50  25                 	db	37
  1165  00FE51  64                 	db	100	;'d'
  1166  00FE52  20                 	db	32
  1167  00FE53  20                 	db	32
  1168  00FE54  20                 	db	32
  1169  00FE55  20                 	db	32
  1170  00FE56  20                 	db	32
  1171  00FE57  20                 	db	32
  1172  00FE58  00                 	db	0
  1173  00FE59                     STR_39:
  1174                           
  1175                           ; BSR set to: 57
  1176  00FE59  20                 	db	32
  1177  00FE5A  20                 	db	32
  1178  00FE5B  20                 	db	32
  1179  00FE5C  20                 	db	32
  1180  00FE5D  20                 	db	32
  1181  00FE5E  20                 	db	32
  1182  00FE5F  20                 	db	32
  1183  00FE60  20                 	db	32
  1184  00FE61  20                 	db	32
  1185  00FE62  20                 	db	32
  1186  00FE63  20                 	db	32
  1187  00FE64  20                 	db	32
  1188  00FE65  20                 	db	32
  1189  00FE66  20                 	db	32
  1190  00FE67  20                 	db	32
  1191  00FE68  20                 	db	32
  1192  00FE69  20                 	db	32
  1193  00FE6A  20                 	db	32
  1194  00FE6B  00                 	db	0
  1195  00FE6C                     STR_29:
  1196                           
  1197                           ; BSR set to: 57
  1198  00FE6C  48                 	db	72	;'H'
  1199  00FE6D  45                 	db	69	;'E'
  1200  00FE6E  4C                 	db	76	;'L'
  1201  00FE6F  50                 	db	80	;'P'
  1202  00FE70  20                 	db	32
  1203  00FE71  25                 	db	37
  1204  00FE72  73                 	db	115	;'s'
  1205  00FE73  20                 	db	32
  1206  00FE74  20                 	db	32
  1207  00FE75  20                 	db	32
  1208  00FE76  20                 	db	32
  1209  00FE77  20                 	db	32
  1210  00FE78  20                 	db	32
  1211  00FE79  20                 	db	32
  1212  00FE7A  20                 	db	32
  1213  00FE7B  20                 	db	32
  1214  00FE7C  20                 	db	32
  1215  00FE7D  20                 	db	32
  1216  00FE7E  00                 	db	0
  1217  00FE7F                     
  1218                           ; BSR set to: 57
  1219  00FE7F  44                 	db	68	;'D'
  1220  00FE80  49                 	db	73	;'I'
  1221  00FE81  53                 	db	83	;'S'
  1222  00FE82  50                 	db	80	;'P'
  1223  00FE83  4C                 	db	76	;'L'
  1224  00FE84  41                 	db	65	;'A'
  1225  00FE85  59                 	db	89	;'Y'
  1226  00FE86  20                 	db	32
  1227  00FE87  25                 	db	37
  1228  00FE88  73                 	db	115	;'s'
  1229  00FE89  20                 	db	32
  1230  00FE8A  20                 	db	32
  1231  00FE8B  20                 	db	32
  1232  00FE8C  20                 	db	32
  1233  00FE8D  20                 	db	32
  1234  00FE8E  20                 	db	32
  1235  00FE8F  20                 	db	32
  1236  00FE90  20                 	db	32
  1237  00FE91  00                 	db	0
  1238  00FE92                     STR_20:
  1239                           
  1240                           ; BSR set to: 57
  1241  00FE92  53                 	db	83	;'S'
  1242  00FE93  4F                 	db	79	;'O'
  1243  00FE94  43                 	db	67	;'C'
  1244  00FE95  20                 	db	32
  1245  00FE96  25                 	db	37
  1246  00FE97  64                 	db	100	;'d'
  1247  00FE98  20                 	db	32
  1248  00FE99  52                 	db	82	;'R'
  1249  00FE9A  55                 	db	85	;'U'
  1250  00FE9B  4E                 	db	78	;'N'
  1251  00FE9C  20                 	db	32
  1252  00FE9D  25                 	db	37
  1253  00FE9E  64                 	db	100	;'d'
  1254  00FE9F  20                 	db	32
  1255  00FEA0  20                 	db	32
  1256  00FEA1  20                 	db	32
  1257  00FEA2  20                 	db	32
  1258  00FEA3  20                 	db	32
  1259  00FEA4  00                 	db	0
  1260  00FEA5                     STR_19:
  1261                           
  1262                           ; BSR set to: 57
  1263  00FEA5  42                 	db	66	;'B'
  1264  00FEA6  41                 	db	65	;'A'
  1265  00FEA7  54                 	db	84	;'T'
  1266  00FEA8  20                 	db	32
  1267  00FEA9  41                 	db	65	;'A'
  1268  00FEAA  48                 	db	72	;'H'
  1269  00FEAB  20                 	db	32
  1270  00FEAC  20                 	db	32
  1271  00FEAD  20                 	db	32
  1272  00FEAE  25                 	db	37
  1273  00FEAF  33                 	db	51	;'3'
  1274  00FEB0  2E                 	db	46
  1275  00FEB1  32                 	db	50	;'2'
  1276  00FEB2  66                 	db	102	;'f'
  1277  00FEB3  20                 	db	32
  1278  00FEB4  20                 	db	32
  1279  00FEB5  20                 	db	32
  1280  00FEB6  20                 	db	32
  1281  00FEB7  00                 	db	0
  1282  00FEB8                     STR_12:
  1283                           
  1284                           ; BSR set to: 57
  1285  00FEB8  50                 	db	80	;'P'
  1286  00FEB9  56                 	db	86	;'V'
  1287  00FEBA  20                 	db	32
  1288  00FEBB  20                 	db	32
  1289  00FEBC  20                 	db	32
  1290  00FEBD  50                 	db	80	;'P'
  1291  00FEBE  57                 	db	87	;'W'
  1292  00FEBF  52                 	db	82	;'R'
  1293  00FEC0  20                 	db	32
  1294  00FEC1  25                 	db	37
  1295  00FEC2  33                 	db	51	;'3'
  1296  00FEC3  2E                 	db	46
  1297  00FEC4  32                 	db	50	;'2'
  1298  00FEC5  66                 	db	102	;'f'
  1299  00FEC6  20                 	db	32
  1300  00FEC7  20                 	db	32
  1301  00FEC8  20                 	db	32
  1302  00FEC9  20                 	db	32
  1303  00FECA  00                 	db	0
  1304  00FECB                     STR_18:
  1305                           
  1306                           ; BSR set to: 57
  1307  00FECB  42                 	db	66	;'B'
  1308  00FECC  41                 	db	65	;'A'
  1309  00FECD  54                 	db	84	;'T'
  1310  00FECE  20                 	db	32
  1311  00FECF  20                 	db	32
  1312  00FED0  50                 	db	80	;'P'
  1313  00FED1  57                 	db	87	;'W'
  1314  00FED2  52                 	db	82	;'R'
  1315  00FED3  20                 	db	32
  1316  00FED4  25                 	db	37
  1317  00FED5  33                 	db	51	;'3'
  1318  00FED6  2E                 	db	46
  1319  00FED7  32                 	db	50	;'2'
  1320  00FED8  66                 	db	102	;'f'
  1321  00FED9  20                 	db	32
  1322  00FEDA  20                 	db	32
  1323  00FEDB  20                 	db	32
  1324  00FEDC  20                 	db	32
  1325  00FEDD  00                 	db	0
  1326  00FEDE                     STR_14:
  1327                           
  1328                           ; BSR set to: 57
  1329  00FEDE  49                 	db	73	;'I'
  1330  00FEDF  4E                 	db	78	;'N'
  1331  00FEE0  56                 	db	86	;'V'
  1332  00FEE1  20                 	db	32
  1333  00FEE2  20                 	db	32
  1334  00FEE3  50                 	db	80	;'P'
  1335  00FEE4  57                 	db	87	;'W'
  1336  00FEE5  52                 	db	82	;'R'
  1337  00FEE6  20                 	db	32
  1338  00FEE7  25                 	db	37
  1339  00FEE8  33                 	db	51	;'3'
  1340  00FEE9  2E                 	db	46
  1341  00FEEA  32                 	db	50	;'2'
  1342  00FEEB  66                 	db	102	;'f'
  1343  00FEEC  20                 	db	32
  1344  00FEED  20                 	db	32
  1345  00FEEE  20                 	db	32
  1346  00FEEF  20                 	db	32
  1347  00FEF0  00                 	db	0
  1348  00FEF1                     STR_13:
  1349                           
  1350                           ; BSR set to: 57
  1351  00FEF1  4C                 	db	76	;'L'
  1352  00FEF2  4F                 	db	79	;'O'
  1353  00FEF3  41                 	db	65	;'A'
  1354  00FEF4  44                 	db	68	;'D'
  1355  00FEF5  20                 	db	32
  1356  00FEF6  50                 	db	80	;'P'
  1357  00FEF7  57                 	db	87	;'W'
  1358  00FEF8  52                 	db	82	;'R'
  1359  00FEF9  20                 	db	32
  1360  00FEFA  25                 	db	37
  1361  00FEFB  33                 	db	51	;'3'
  1362  00FEFC  2E                 	db	46
  1363  00FEFD  32                 	db	50	;'2'
  1364  00FEFE  66                 	db	102	;'f'
  1365  00FEFF  20                 	db	32
  1366  00FF00  20                 	db	32
  1367  00FF01  20                 	db	32
  1368  00FF02  20                 	db	32
  1369  00FF03  00                 	db	0
  1370  00FF04                     STR_16:
  1371                           
  1372                           ; BSR set to: 57
  1373  00FF04  42                 	db	66	;'B'
  1374  00FF05  56                 	db	86	;'V'
  1375  00FF06  20                 	db	32
  1376  00FF07  25                 	db	37
  1377  00FF08  32                 	db	50	;'2'
  1378  00FF09  2E                 	db	46
  1379  00FF0A  32                 	db	50	;'2'
  1380  00FF0B  66                 	db	102	;'f'
  1381  00FF0C  20                 	db	32
  1382  00FF0D  42                 	db	66	;'B'
  1383  00FF0E  41                 	db	65	;'A'
  1384  00FF0F  20                 	db	32
  1385  00FF10  25                 	db	37
  1386  00FF11  32                 	db	50	;'2'
  1387  00FF12  2E                 	db	46
  1388  00FF13  32                 	db	50	;'2'
  1389  00FF14  66                 	db	102	;'f'
  1390  00FF15  20                 	db	32
  1391  00FF16  00                 	db	0
  1392  00FF17                     STR_17:
  1393                           
  1394                           ; BSR set to: 57
  1395  00FF17  43                 	db	67	;'C'
  1396  00FF18  56                 	db	86	;'V'
  1397  00FF19  20                 	db	32
  1398  00FF1A  25                 	db	37
  1399  00FF1B  32                 	db	50	;'2'
  1400  00FF1C  2E                 	db	46
  1401  00FF1D  32                 	db	50	;'2'
  1402  00FF1E  66                 	db	102	;'f'
  1403  00FF1F  20                 	db	32
  1404  00FF20  4C                 	db	76	;'L'
  1405  00FF21  41                 	db	65	;'A'
  1406  00FF22  20                 	db	32
  1407  00FF23  25                 	db	37
  1408  00FF24  32                 	db	50	;'2'
  1409  00FF25  2E                 	db	46
  1410  00FF26  32                 	db	50	;'2'
  1411  00FF27  66                 	db	102	;'f'
  1412  00FF28  20                 	db	32
  1413  00FF29  00                 	db	0
  1414  00FF2A                     STR_15:
  1415                           
  1416                           ; BSR set to: 57
  1417  00FF2A  50                 	db	80	;'P'
  1418  00FF2B  56                 	db	86	;'V'
  1419  00FF2C  20                 	db	32
  1420  00FF2D  25                 	db	37
  1421  00FF2E  32                 	db	50	;'2'
  1422  00FF2F  2E                 	db	46
  1423  00FF30  32                 	db	50	;'2'
  1424  00FF31  66                 	db	102	;'f'
  1425  00FF32  20                 	db	32
  1426  00FF33  50                 	db	80	;'P'
  1427  00FF34  41                 	db	65	;'A'
  1428  00FF35  20                 	db	32
  1429  00FF36  25                 	db	37
  1430  00FF37  32                 	db	50	;'2'
  1431  00FF38  2E                 	db	46
  1432  00FF39  32                 	db	50	;'2'
  1433  00FF3A  66                 	db	102	;'f'
  1434  00FF3B  20                 	db	32
  1435  00FF3C  00                 	db	0
  1436  00FF3D                     STR_8:
  1437                           
  1438                           ; BSR set to: 57
  1439  00FF3D  20                 	db	32
  1440  00FF3E  56                 	db	86	;'V'
  1441  00FF3F  54                 	db	84	;'T'
  1442  00FF40  45                 	db	69	;'E'
  1443  00FF41  52                 	db	82	;'R'
  1444  00FF42  4D                 	db	77	;'M'
  1445  00FF43  20                 	db	32
  1446  00FF44  23                 	db	35
  1447  00FF45  32                 	db	50	;'2'
  1448  00FF46  20                 	db	32
  1449  00FF47  20                 	db	32
  1450  00FF48  20                 	db	32
  1451  00FF49  20                 	db	32
  1452  00FF4A  20                 	db	32
  1453  00FF4B  20                 	db	32
  1454  00FF4C  20                 	db	32
  1455  00FF4D  00                 	db	0
  1456  00FF4E                     STR_4:
  1457                           
  1458                           ; BSR set to: 57
  1459  00FF4E  20                 	db	32
  1460  00FF4F  4E                 	db	78	;'N'
  1461  00FF50  53                 	db	83	;'S'
  1462  00FF51  41                 	db	65	;'A'
  1463  00FF52  53                 	db	83	;'S'
  1464  00FF53  50                 	db	80	;'P'
  1465  00FF54  4F                 	db	79	;'O'
  1466  00FF55  4F                 	db	79	;'O'
  1467  00FF56  4B                 	db	75	;'K'
  1468  00FF57  20                 	db	32
  1469  00FF58  20                 	db	32
  1470  00FF59  20                 	db	32
  1471  00FF5A  20                 	db	32
  1472  00FF5B  20                 	db	32
  1473  00FF5C  20                 	db	32
  1474  00FF5D  20                 	db	32
  1475  00FF5E  00                 	db	0
  1476  00FF5F                     STR_1:
  1477                           
  1478                           ; BSR set to: 57
  1479  00FF5F  20                 	db	32
  1480  00FF60  4D                 	db	77	;'M'
  1481  00FF61  42                 	db	66	;'B'
  1482  00FF62  4D                 	db	77	;'M'
  1483  00FF63  43                 	db	67	;'C'
  1484  00FF64  20                 	db	32
  1485  00FF65  53                 	db	83	;'S'
  1486  00FF66  4F                 	db	79	;'O'
  1487  00FF67  4C                 	db	76	;'L'
  1488  00FF68  41                 	db	65	;'A'
  1489  00FF69  52                 	db	82	;'R'
  1490  00FF6A  4D                 	db	77	;'M'
  1491  00FF6B  4F                 	db	79	;'O'
  1492  00FF6C  4E                 	db	78	;'N'
  1493  00FF6D  20                 	db	32
  1494  00FF6E  20                 	db	32
  1495  00FF6F  00                 	db	0
  1496  00FF70                     STR_5:
  1497                           
  1498                           ; BSR set to: 57
  1499  00FF70  20                 	db	32
  1500  00FF71  53                 	db	83	;'S'
  1501  00FF72  45                 	db	69	;'E'
  1502  00FF73  51                 	db	81	;'Q'
  1503  00FF74  55                 	db	85	;'U'
  1504  00FF75  45                 	db	69	;'E'
  1505  00FF76  4E                 	db	78	;'N'
  1506  00FF77  43                 	db	67	;'C'
  1507  00FF78  45                 	db	69	;'E'
  1508  00FF79  20                 	db	32
  1509  00FF7A  54                 	db	84	;'T'
  1510  00FF7B  45                 	db	69	;'E'
  1511  00FF7C  53                 	db	83	;'S'
  1512  00FF7D  54                 	db	84	;'T'
  1513  00FF7E  20                 	db	32
  1514  00FF7F  20                 	db	32
  1515  00FF80  00                 	db	0
  1516  00FF81                     STR_11:
  1517                           
  1518                           ; BSR set to: 57
  1519  00FF81  25                 	db	37
  1520  00FF82  64                 	db	100	;'d'
  1521  00FF83  20                 	db	32
  1522  00FF84  25                 	db	37
  1523  00FF85  32                 	db	50	;'2'
  1524  00FF86  2E                 	db	46
  1525  00FF87  34                 	db	52	;'4'
  1526  00FF88  66                 	db	102	;'f'
  1527  00FF89  2C                 	db	44
  1528  00FF8A  20                 	db	32
  1529  00FF8B  25                 	db	37
  1530  00FF8C  64                 	db	100	;'d'
  1531  00FF8D  20                 	db	32
  1532  00FF8E  20                 	db	32
  1533  00FF8F  20                 	db	32
  1534  00FF90  23                 	db	35
  1535  00FF91  00                 	db	0
  1536  00FF92                     STR_9:
  1537                           
  1538                           ; BSR set to: 57
  1539  00FF92  25                 	db	37
  1540  00FF93  64                 	db	100	;'d'
  1541  00FF94  20                 	db	32
  1542  00FF95  25                 	db	37
  1543  00FF96  32                 	db	50	;'2'
  1544  00FF97  2E                 	db	46
  1545  00FF98  34                 	db	52	;'4'
  1546  00FF99  66                 	db	102	;'f'
  1547  00FF9A  20                 	db	32
  1548  00FF9B  20                 	db	32
  1549  00FF9C  20                 	db	32
  1550  00FF9D  25                 	db	37
  1551  00FF9E  64                 	db	100	;'d'
  1552  00FF9F  20                 	db	32
  1553  00FFA0  20                 	db	32
  1554  00FFA1  00                 	db	0
  1555  00FFA2                     STR_33:
  1556                           
  1557                           ; BSR set to: 57
  1558  00FFA2  76                 	db	118	;'v'
  1559  00FFA3  74                 	db	116	;'t'
  1560  00FFA4  65                 	db	101	;'e'
  1561  00FFA5  72                 	db	114	;'r'
  1562  00FFA6  6D                 	db	109	;'m'
  1563  00FFA7  20                 	db	32
  1564  00FFA8  25                 	db	37
  1565  00FFA9  78                 	db	120	;'x'
  1566  00FFAA  3A                 	db	58	;':'
  1567  00FFAB  25                 	db	37
  1568  00FFAC  78                 	db	120	;'x'
  1569  00FFAD  20                 	db	32
  1570  00FFAE  20                 	db	32
  1571  00FFAF  20                 	db	32
  1572  00FFB0  00                 	db	0
  1573  00FFB1                     STR_2:
  1574                           
  1575                           ; BSR set to: 57
  1576  00FFB1  20                 	db	32
  1577  00FFB2  56                 	db	86	;'V'
  1578  00FFB3  65                 	db	101	;'e'
  1579  00FFB4  72                 	db	114	;'r'
  1580  00FFB5  73                 	db	115	;'s'
  1581  00FFB6  69                 	db	105	;'i'
  1582  00FFB7  6F                 	db	111	;'o'
  1583  00FFB8  6E                 	db	110	;'n'
  1584  00FFB9  20                 	db	32
  1585  00FFBA  25                 	db	37
  1586  00FFBB  73                 	db	115	;'s'
  1587  00FFBC  20                 	db	32
  1588  00FFBD  20                 	db	32
  1589  00FFBE  20                 	db	32
  1590  00FFBF  00                 	db	0
  1591  00FFC0                     STR_27:
  1592                           
  1593                           ; BSR set to: 57
  1594  00FFC0  44                 	db	68	;'D'
  1595  00FFC1  65                 	db	101	;'e'
  1596  00FFC2  63                 	db	99	;'c'
  1597  00FFC3  20                 	db	32
  1598  00FFC4  20                 	db	32
  1599  00FFC5  33                 	db	51	;'3'
  1600  00FFC6  20                 	db	32
  1601  00FFC7  32                 	db	50	;'2'
  1602  00FFC8  30                 	db	48	;'0'
  1603  00FFC9  31                 	db	49	;'1'
  1604  00FFCA  39                 	db	57	;'9'
  1605  00FFCB  00                 	db	0
  1606  00FFCC                     STR_31:
  1607                           
  1608                           ; BSR set to: 57
  1609  00FFCC  25                 	db	37
  1610  00FFCD  73                 	db	115	;'s'
  1611  00FFCE  20                 	db	32
  1612  00FFCF  20                 	db	32
  1613  00FFD0  20                 	db	32
  1614  00FFD1  20                 	db	32
  1615  00FFD2  20                 	db	32
  1616  00FFD3  20                 	db	32
  1617  00FFD4  20                 	db	32
  1618  00FFD5  00                 	db	0
  1619  00FFD6                     STR_28:
  1620                           
  1621                           ; BSR set to: 57
  1622  00FFD6  31                 	db	49	;'1'
  1623  00FFD7  30                 	db	48	;'0'
  1624  00FFD8  3A                 	db	58	;':'
  1625  00FFD9  31                 	db	49	;'1'
  1626  00FFDA  33                 	db	51	;'3'
  1627  00FFDB  3A                 	db	58	;':'
  1628  00FFDC  35                 	db	53	;'5'
  1629  00FFDD  32                 	db	50	;'2'
  1630  00FFDE  00                 	db	0
  1631  00FFDF                     STR_3:
  1632                           
  1633                           ; BSR set to: 57
  1634  00FFDF  30                 	db	48	;'0'
  1635  00FFE0  2E                 	db	46
  1636  00FFE1  39                 	db	57	;'9'
  1637  00FFE2  39                 	db	57	;'9'
  1638  00FFE3  36                 	db	54	;'6'
  1639  00FFE4  00                 	db	0
  1640  00FFE5                     STR_46:
  1641                           
  1642                           ; BSR set to: 57
  1643  00FFE5  49                 	db	73	;'I'
  1644  00FFE6  4E                 	db	78	;'N'
  1645  00FFE7  46                 	db	70	;'F'
  1646  00FFE8  00                 	db	0
  1647  00FFE9                     STR_50:
  1648                           
  1649                           ; BSR set to: 57
  1650  00FFE9  4E                 	db	78	;'N'
  1651  00FFEA  41                 	db	65	;'A'
  1652  00FFEB  4E                 	db	78	;'N'
  1653  00FFEC  00                 	db	0
  1654  00FFED                     STR_47:
  1655                           
  1656                           ; BSR set to: 57
  1657  00FFED  69                 	db	105	;'i'
  1658  00FFEE  6E                 	db	110	;'n'
  1659  00FFEF  66                 	db	102	;'f'
  1660  00FFF0  00                 	db	0
  1661  00FFF1                     STR_51:
  1662                           
  1663                           ; BSR set to: 57
  1664  00FFF1  6E                 	db	110	;'n'
  1665  00FFF2  61                 	db	97	;'a'
  1666  00FFF3  6E                 	db	110	;'n'
  1667  00FFF4  00                 	db	0
  1668  00FFF5                     STR_54:
  1669                           
  1670                           ; BSR set to: 57
  1671  00FFF5  6C                 	db	108	;'l'
  1672  00FFF6  66                 	db	102	;'f'
  1673  00FFF7  00                 	db	0
  1674  00FFF8                     STR_25:
  1675                           
  1676                           ; BSR set to: 57
  1677  00FFF8  25                 	db	37
  1678  00FFF9  63                 	db	99	;'c'
  1679  00FFFA  00                 	db	0
  1680  00FFFB                     STR_24:
  1681                           
  1682                           ; BSR set to: 57
  1683  00FFFB  25                 	db	37
  1684  00FFFC  73                 	db	115	;'s'
  1685  00FFFD  00                 	db	0
  1686  0000                     
  1687                           ; #config settings
  1688  00FFFE  00                 	db	0	; dummy byte at the end
  1689  0000                     
  1690                           	psect	cinit
  1691  0171B0                     __pcinit:
  1692                           	opt callstack 0
  1693  0171B0                     start_initialization:
  1694                           	opt callstack 0
  1695  0171B0                     __initialization:
  1696                           	opt callstack 0
  1697                           
  1698                           ; Initialize objects allocated to BANK2 (188 bytes)
  1699                           ; load TBLPTR registers with __pidataBANK2
  1700  0171B0  0E2E               	movlw	low __pidataBANK2
  1701  0171B2  6EF6               	movwf	tblptrl,c
  1702  0171B4  0E75               	movlw	high __pidataBANK2
  1703  0171B6  6EF7               	movwf	tblptrh,c
  1704  0171B8  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1705  0171BA  6EF8               	movwf	tblptru,c
  1706  0171BC  EE00  F200         	lfsr	0,__pdataBANK2
  1707  0171C0  EE20 F0BC          	lfsr	2,188
  1708  0171C4                     copy_data0:
  1709  0171C4  0009               	tblrd		*+
  1710  0171C6  006F FFD7 FFEE     	movff	tablat,postinc0
  1711  0171CC  50DD               	movf	postdec2,w,c
  1712  0171CE  50D9               	movf	fsr2l,w,c
  1713  0171D0  E1F9               	bnz	copy_data0
  1714                           
  1715                           ; Initialize objects allocated to BANK1 (163 bytes)
  1716                           ; load TBLPTR registers with __pidataBANK1
  1717  0171D2  0E9A               	movlw	low __pidataBANK1
  1718  0171D4  6EF6               	movwf	tblptrl,c
  1719  0171D6  0E78               	movlw	high __pidataBANK1
  1720  0171D8  6EF7               	movwf	tblptrh,c
  1721  0171DA  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1722  0171DC  6EF8               	movwf	tblptru,c
  1723  0171DE  EE00  F100         	lfsr	0,__pdataBANK1
  1724  0171E2  EE20 F0A3          	lfsr	2,163
  1725  0171E6                     copy_data1:
  1726  0171E6  0009               	tblrd		*+
  1727  0171E8  006F FFD7 FFEE     	movff	tablat,postinc0
  1728  0171EE  50DD               	movf	postdec2,w,c
  1729  0171F0  50D9               	movf	fsr2l,w,c
  1730  0171F2  E1F9               	bnz	copy_data1
  1731                           
  1732                           ; Initialize objects allocated to BANK0 (47 bytes)
  1733                           ; load TBLPTR registers with __pidataBANK0
  1734  0171F4  0E3E               	movlw	low __pidataBANK0
  1735  0171F6  6EF6               	movwf	tblptrl,c
  1736  0171F8  0E88               	movlw	high __pidataBANK0
  1737  0171FA  6EF7               	movwf	tblptrh,c
  1738  0171FC  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1739  0171FE  6EF8               	movwf	tblptru,c
  1740  017200  EE00  F0C7         	lfsr	0,__pdataBANK0
  1741  017204  EE20 F02F          	lfsr	2,47
  1742  017208                     copy_data2:
  1743  017208  0009               	tblrd		*+
  1744  01720A  006F FFD7 FFEE     	movff	tablat,postinc0
  1745  017210  50DD               	movf	postdec2,w,c
  1746  017212  50D9               	movf	fsr2l,w,c
  1747  017214  E1F9               	bnz	copy_data2
  1748                           
  1749                           ; Clear objects allocated to BIGRAM (290 bytes)
  1750  017216  EE01  F2FF         	lfsr	0,__pbssBIGRAM
  1751  01721A  EE20 F122          	lfsr	2,290
  1752  01721E                     clear_0:
  1753  01721E  6AEE               	clrf	postinc0,c
  1754  017220  50DD               	movf	postdec2,w,c
  1755  017222  50D9               	movf	fsr2l,w,c
  1756  017224  E1FC               	bnz	clear_0
  1757  017226  50DA               	movf	fsr2h,w,c
  1758  017228  E1FA               	bnz	clear_0
  1759                           
  1760                           ; Clear objects allocated to BANK6 (255 bytes)
  1761  01722A  EE01  F200         	lfsr	0,__pbssBANK6
  1762  01722E  EE20 F0FF          	lfsr	2,255
  1763  017232                     clear_1:
  1764  017232  6AEE               	clrf	postinc0,c
  1765  017234  50DD               	movf	postdec2,w,c
  1766  017236  50D9               	movf	fsr2l,w,c
  1767  017238  E1FC               	bnz	clear_1
  1768  01723A  50DA               	movf	fsr2h,w,c
  1769  01723C  E1FA               	bnz	clear_1
  1770                           
  1771                           ; Clear objects allocated to BANK5 (255 bytes)
  1772  01723E  EE01  F100         	lfsr	0,__pbssBANK5
  1773  017242  EE20 F0FF          	lfsr	2,255
  1774  017246                     clear_2:
  1775  017246  6AEE               	clrf	postinc0,c
  1776  017248  50DD               	movf	postdec2,w,c
  1777  01724A  50D9               	movf	fsr2l,w,c
  1778  01724C  E1FC               	bnz	clear_2
  1779  01724E  50DA               	movf	fsr2h,w,c
  1780  017250  E1FA               	bnz	clear_2
  1781                           
  1782                           ; Clear objects allocated to BANK4 (67 bytes)
  1783  017252  EE01  F000         	lfsr	0,__pbssBANK4
  1784  017256  0E43               	movlw	67
  1785  017258                     clear_3:
  1786  017258  6AEE               	clrf	postinc0,c
  1787  01725A  06E8               	decf	wreg,f,c
  1788  01725C  E1FD               	bnz	clear_3
  1789                           
  1790                           ; Clear objects allocated to BANK3 (215 bytes)
  1791  01725E  EE00  F300         	lfsr	0,__pbssBANK3
  1792  017262  0ED7               	movlw	215
  1793  017264                     clear_4:
  1794  017264  6AEE               	clrf	postinc0,c
  1795  017266  06E8               	decf	wreg,f,c
  1796  017268  E1FD               	bnz	clear_4
  1797                           
  1798                           ; Clear objects allocated to BANK2 (64 bytes)
  1799  01726A  EE00  F2BC         	lfsr	0,__pbssBANK2
  1800  01726E  0E40               	movlw	64
  1801  017270                     clear_5:
  1802  017270  6AEE               	clrf	postinc0,c
  1803  017272  06E8               	decf	wreg,f,c
  1804  017274  E1FD               	bnz	clear_5
  1805                           
  1806                           ; Clear objects allocated to BANK1 (88 bytes)
  1807  017276  EE00  F1A3         	lfsr	0,__pbssBANK1
  1808  01727A  0E58               	movlw	88
  1809  01727C                     clear_6:
  1810  01727C  6AEE               	clrf	postinc0,c
  1811  01727E  06E8               	decf	wreg,f,c
  1812  017280  E1FD               	bnz	clear_6
  1813                           
  1814                           ; Clear objects allocated to BANK0 (103 bytes)
  1815  017282  EE00  F060         	lfsr	0,__pbssBANK0
  1816  017286  0E67               	movlw	103
  1817  017288                     clear_7:
  1818  017288  6AEE               	clrf	postinc0,c
  1819  01728A  06E8               	decf	wreg,f,c
  1820  01728C  E1FD               	bnz	clear_7
  1821                           
  1822                           ; Clear objects allocated to COMRAM (49 bytes)
  1823  01728E  EE00  F001         	lfsr	0,__pbssCOMRAM
  1824  017292  0E31               	movlw	49
  1825  017294                     clear_8:
  1826  017294  6AEE               	clrf	postinc0,c
  1827  017296  06E8               	decf	wreg,f,c
  1828  017298  E1FD               	bnz	clear_8
  1829                           
  1830                           ;
  1831                           ; Setup IVTBASE
  1832                           ;
  1833  01729A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1834  01729C  6ED5               	movwf	213,c
  1835  01729E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1836  0172A0  6ED6               	movwf	214,c
  1837  0172A2  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1838  0172A4  6ED7               	movwf	215,c
  1839  0172A6                     end_of_initialization:
  1840                           	opt callstack 0
  1841  0172A6                     __end_of__initialization:
  1842                           	opt callstack 0
  1843  0172A6  0100               	movlb	0
  1844  0172A8  EFC1  F08E         	goto	_main	;jump to C main() function
  1845                           
  1846                           	psect	bssCOMRAM
  1847  000001                     __pbssCOMRAM:
  1848                           	opt callstack 0
  1849  000001                     _ADCC_ADTI_InterruptHandler:
  1850                           	opt callstack 0
  1851  000001                     	ds	3
  1852  000004                     _ADCC_ADI_InterruptHandler:
  1853                           	opt callstack 0
  1854  000004                     	ds	3
  1855  000007                     _UART1_TxInterruptHandler:
  1856                           	opt callstack 0
  1857  000007                     	ds	3
  1858  00000A                     _UART1_RxInterruptHandler:
  1859                           	opt callstack 0
  1860  00000A                     	ds	3
  1861  00000D                     _UART2_TxInterruptHandler:
  1862                           	opt callstack 0
  1863  00000D                     	ds	3
  1864  000010                     _UART2_RxInterruptHandler:
  1865                           	opt callstack 0
  1866  000010                     	ds	3
  1867  000013                     _INT1_InterruptHandler:
  1868                           	opt callstack 0
  1869  000013                     	ds	3
  1870  000016                     _INT0_InterruptHandler:
  1871                           	opt callstack 0
  1872  000016                     	ds	3
  1873  000019                     _nout:
  1874                           	opt callstack 0
  1875  000019                     	ds	2
  1876  00001B                     _width:
  1877                           	opt callstack 0
  1878  00001B                     	ds	2
  1879  00001D                     _prec:
  1880                           	opt callstack 0
  1881  00001D                     	ds	2
  1882  00001F                     _flags:
  1883                           	opt callstack 0
  1884  00001F                     	ds	2
  1885  000021                     TMR5_ISR@CountCallBack:
  1886                           	opt callstack 0
  1887  000021                     	ds	2
  1888  000023                     _timer5ReloadVal:
  1889                           	opt callstack 0
  1890  000023                     	ds	2
  1891  000025                     _mode_sw:
  1892                           	opt callstack 0
  1893  000025                     	ds	1
  1894  000026                     _uart2RxCount:
  1895                           	opt callstack 0
  1896  000026                     	ds	1
  1897  000027                     _uart2RxTail:
  1898                           	opt callstack 0
  1899  000027                     	ds	1
  1900  000028                     _uart2RxHead:
  1901                           	opt callstack 0
  1902  000028                     	ds	1
  1903  000029                     _uart2TxBufferRemaining:
  1904                           	opt callstack 0
  1905  000029                     	ds	1
  1906  00002A                     _uart2TxTail:
  1907                           	opt callstack 0
  1908  00002A                     	ds	1
  1909  00002B                     _uart2TxHead:
  1910                           	opt callstack 0
  1911  00002B                     	ds	1
  1912  00002C                     _uart1RxCount:
  1913                           	opt callstack 0
  1914  00002C                     	ds	1
  1915  00002D                     _uart1RxTail:
  1916                           	opt callstack 0
  1917  00002D                     	ds	1
  1918  00002E                     _uart1RxHead:
  1919                           	opt callstack 0
  1920  00002E                     	ds	1
  1921  00002F                     _uart1TxBufferRemaining:
  1922                           	opt callstack 0
  1923  00002F                     	ds	1
  1924  000030                     _uart1TxTail:
  1925                           	opt callstack 0
  1926  000030                     	ds	1
  1927  000031                     _uart1TxHead:
  1928                           	opt callstack 0
  1929  000031                     	ds	1
  1930                           
  1931                           	psect	bssBANK0
  1932  000060                     __pbssBANK0:
  1933                           	opt callstack 0
  1934  000060                     _S:
  1935                           	opt callstack 0
  1936  000060                     	ds	41
  1937  000089                     _tickCount:
  1938                           	opt callstack 0
  1939  000089                     	ds	24
  1940  0000A1                     _spi_link:
  1941                           	opt callstack 0
  1942  0000A1                     	ds	12
  1943  0000AD                     floorf@F524:
  1944                           	opt callstack 0
  1945  0000AD                     	ds	4
  1946  0000B1                     ___fpclassifyf@F463:
  1947                           	opt callstack 0
  1948  0000B1                     	ds	4
  1949  0000B5                     _utctime:
  1950                           	opt callstack 0
  1951  0000B5                     	ds	4
  1952  0000B9                     wdtdelay@dcount:
  1953                           	opt callstack 0
  1954  0000B9                     	ds	4
  1955  0000BD                     _P:
  1956                           	opt callstack 0
  1957  0000BD                     	ds	4
  1958  0000C1                     _TMR5_InterruptHandler:
  1959                           	opt callstack 0
  1960  0000C1                     	ds	3
  1961  0000C4                     _TMR6_InterruptHandler:
  1962                           	opt callstack 0
  1963  0000C4                     	ds	3
  1964                           
  1965                           	psect	dataBANK0
  1966  0000C7                     __pdataBANK0:
  1967                           	opt callstack 0
  1968  0000C7                     _R:
  1969                           	opt callstack 0
  1970  0000C7                     	ds	40
  1971  0000EF                     _H:
  1972                           	opt callstack 0
  1973  0000EF                     	ds	7
  1974                           
  1975                           	psect	bssBANK1
  1976  0001A3                     __pbssBANK1:
  1977                           	opt callstack 0
  1978  0001A3                     _dbuf:
  1979                           	opt callstack 0
  1980  0001A3                     	ds	80
  1981  0001F3                     _seed:
  1982                           	opt callstack 0
  1983  0001F3                     	ds	8
  1984                           
  1985                           	psect	dataBANK1
  1986  000100                     __pdataBANK1:
  1987                           	opt callstack 0
  1988  000100                     _C:
  1989                           	opt callstack 0
  1990  000100                     	ds	140
  1991  00018C                     stoa@F1166:
  1992                           	opt callstack 0
  1993  00018C                     	ds	7
  1994  000193                     _port_data:
  1995                           	opt callstack 0
  1996  000193                     	ds	16
  1997                           
  1998                           	psect	bssBANK2
  1999  0002BC                     __pbssBANK2:
  2000                           	opt callstack 0
  2001  0002BC                     _uart1TxBuffer:
  2002                           	opt callstack 0
  2003  0002BC                     	ds	64
  2004                           
  2005                           	psect	dataBANK2
  2006  000200                     __pdataBANK2:
  2007                           	opt callstack 0
  2008  000200                     _V:
  2009                           	opt callstack 0
  2010  000200                     	ds	188
  2011                           
  2012                           	psect	bssBANK3
  2013  000300                     __pbssBANK3:
  2014                           	opt callstack 0
  2015  000300                     lp_filter@smooth:
  2016                           	opt callstack 0
  2017  000300                     	ds	84
  2018  000354                     _uart2TxBuffer:
  2019                           	opt callstack 0
  2020  000354                     	ds	64
  2021  000394                     _ring_buf1:
  2022                           	opt callstack 0
  2023  000394                     	ds	67
  2024                           
  2025                           	psect	bssBANK4
  2026  000400                     __pbssBANK4:
  2027                           	opt callstack 0
  2028  000400                     _ring_buf2:
  2029                           	opt callstack 0
  2030  000400                     	ds	67
  2031                           
  2032                           	psect	bssBANK5
  2033  000500                     __pbssBANK5:
  2034                           	opt callstack 0
  2035  000500                     _uart1RxBuffer:
  2036                           	opt callstack 0
  2037  000500                     	ds	255
  2038                           
  2039                           	psect	bssBANK6
  2040  000600                     __pbssBANK6:
  2041                           	opt callstack 0
  2042  000600                     _uart2RxBuffer:
  2043                           	opt callstack 0
  2044  000600                     	ds	255
  2045                           
  2046                           	psect	bssBIGRAM
  2047  0006FF                     __pbssBIGRAM:
  2048                           	opt callstack 0
  2049  0006FF                     _D:
  2050                           	opt callstack 0
  2051  0006FF                     	ds	290
  2052                           
  2053                           	psect	cstackBANK1
  2054  0001FB                     __pcstackBANK1:
  2055                           	opt callstack 0
  2056  0001FB                     ??_TMR5_ISR:
  2057                           
  2058                           ; 1 bytes @ 0x0
  2059  0001FB                     	ds	4
  2060                           
  2061                           	psect	cstackBANK0
  2062  0000F6                     __pcstackBANK0:
  2063                           	opt callstack 0
  2064  0000F6                     ??_INT1_ISR:
  2065                           
  2066                           ; 1 bytes @ 0x0
  2067  0000F6                     	ds	4
  2068                           
  2069                           	psect	cstackCOMRAM
  2070  000052                     __pcstackCOMRAM:
  2071                           	opt callstack 0
  2072  000052                     ??_ADCC_ThresholdISR:
  2073  000052                     
  2074                           ; 1 bytes @ 0x0
  2075  000052                     	ds	5
  2076  000057                     ??_TMR6_ISR:
  2077                           
  2078                           ; 1 bytes @ 0x5
  2079  000057                     	ds	1
  2080  000058                     
  2081                           ; 1 bytes @ 0x6
  2082 ;;
  2083 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  2084 ;;
  2085 ;; *************** function _main *****************
  2086 ;; Defined at:
  2087 ;;		line 169 in file "main.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;		None
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  k               1  [STACK] unsigned char 
  2092 ;;  j               1  [STACK] unsigned char 
  2093 ;;  i               1  [STACK] unsigned char 
  2094 ;;  inp_index       1  [STACK] unsigned char 
  2095 ;;  mode            1  [STACK] enum E17005
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1  [STACK] void 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2109 ;;Total ram usage:        0 bytes
  2110 ;; Hardware stack levels required when called:   19
  2111 ;; This function calls:
  2112 ;;		_SYSTEM_Initialize
  2113 ;;		_StartTimer
  2114 ;;		_TimerDone
  2115 ;;		_WaitMs
  2116 ;;		_calc_model_data
  2117 ;;		_check_adc_scan
  2118 ;;		_check_enter_button
  2119 ;;		_check_help
  2120 ;;		_clear_adc_scan
  2121 ;;		_clear_hid_pflags
  2122 ;;		_convert_adc_data
  2123 ;;		_eaDogM_WriteCommand
  2124 ;;		_get_raw_result
  2125 ;;		_get_switch
  2126 ;;		_get_vterm_ptr
  2127 ;;		_hid_display
  2128 ;;		_init_display
  2129 ;;		_lp_filter
  2130 ;;		_mode_lamp_dim
  2131 ;;		_set_display_info
  2132 ;;		_set_vterm
  2133 ;;		_sprintf
  2134 ;;		_srand
  2135 ;;		_start_adc_scan
  2136 ;;		_start_switch_handler
  2137 ;;		_static_soc
  2138 ;;		_update_lcd
  2139 ;; This function is called by:
  2140 ;;		Startup code after reset
  2141 ;; This function uses a reentrant model
  2142 ;;
  2143                           
  2144                           	psect	text0
  2145  011D82                     __ptext0:
  2146                           	opt callstack 0
  2147  011D82                     _main:
  2148                           	opt callstack 0
  2149                           
  2150                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2151  011D82  0E05               	movlw	5
  2152  011D84  26E1               	addwf	fsr1l,f,c
  2153  011D86  0E00               	movlw	0
  2154  011D88  22E2               	addwfc	fsr1h,f,c
  2155                           
  2156                           ;main.c: 171:  UI_STATES mode;;main.c: 172:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  2157                           ;stkvar	_inp_index @ sp[(-5)+3]
  2158                           
  2159                           ;incstack = 0
  2160  011D8A  0EFE               	movlw	-2
  2161  011D8C  6AE3               	clrf	plusw1,c
  2162                           
  2163                           ;stkvar	_i @ sp[(-5)+2]
  2164  011D8E  0EFD               	movlw	-3
  2165  011D90  6AE3               	clrf	plusw1,c
  2166                           
  2167                           ;stkvar	_j @ sp[(-5)+1]
  2168  011D92  0EFC               	movlw	-4
  2169  011D94  6AE3               	clrf	plusw1,c
  2170  011D96  2AE3               	incf	plusw1,f,c
  2171                           
  2172                           ;stkvar	_k @ sp[(-5)+0]
  2173  011D98  0EFB               	movlw	-5
  2174  011D9A  6AE3               	clrf	plusw1,c
  2175  011D9C  82E3               	bsf	plusw1,1,c
  2176                           
  2177                           ;main.c: 175:  SYSTEM_Initialize();
  2178  011D9E  EC28  F0C2         	call	_SYSTEM_Initialize	;wreg free
  2179                           
  2180                           ; BSR set to: 60
  2181                           ;main.c: 178:  (INTCON0bits.GIEH = 1);
  2182  011DA2  8ED2               	bsf	210,7,c	;volatile
  2183                           
  2184                           ; BSR set to: 60
  2185                           ;main.c: 181:  (INTCON0bits.GIEL = 1);
  2186  011DA4  8CD2               	bsf	210,6,c	;volatile
  2187                           
  2188                           ; BSR set to: 60
  2189                           ;main.c: 183:  V.ui_state = UI_STATE_INIT;
  2190  011DA6  0102               	movlb	2	; () banked
  2191  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  2192                           
  2193                           ; BSR set to: 2
  2194                           ;main.c: 188:  WaitMs(300);
  2195  011DAA  0E2C               	movlw	44
  2196  011DAC  6EE6               	movwf	postinc1,c
  2197  011DAE  0E01               	movlw	1
  2198  011DB0  6EE6               	movwf	postinc1,c
  2199  011DB2  EC6D  F0C3         	call	_WaitMs	;wreg free
  2200                           
  2201                           ;main.c: 189:  if (PORTBbits.RB0) {
  2202  011DB6  A0CB               	btfss	203,0,c	;volatile
  2203  011DB8  D004               	goto	l10814
  2204                           
  2205                           ;main.c: 190:   mode = UI_STATE_HOST;
  2206                           ;stkvar	_mode @ sp[(-5)+4]
  2207  011DBA  0EFF               	movlw	-1
  2208  011DBC  6AE3               	clrf	plusw1,c
  2209  011DBE  2AE3               	incf	plusw1,f,c
  2210                           
  2211                           ;main.c: 191:  } else {
  2212  011DC0  D004               	goto	l10816
  2213  011DC2                     l10814:
  2214                           
  2215                           ;main.c: 192:   mode = UI_STATE_LOG;
  2216                           ;stkvar	_mode @ sp[(-5)+4]
  2217  011DC2  0EFF               	movlw	-1
  2218  011DC4  6AE3               	clrf	plusw1,c
  2219  011DC6  80E3               	bsf	plusw1,0,c
  2220  011DC8  82E3               	bsf	plusw1,1,c	;indir
  2221  011DCA                     l10816:
  2222                           
  2223                           ;main.c: 195:  if (mode == UI_STATE_HOST) {
  2224                           ;stkvar	_mode @ sp[(-5)+4]
  2225  011DCA  0EFF               	movlw	-1
  2226  011DCC  04E3               	decf	plusw1,w,c
  2227  011DCE  A4D8               	btfss	status,2,c
  2228  011DD0  D007               	goto	l1260
  2229                           
  2230                           ;main.c: 196:   do { LATDbits.LATD0 = 1; } while(0);
  2231  011DD2  80BD               	bsf	189,0,c	;volatile
  2232                           
  2233                           ;main.c: 197:   V.mode_pwm = 70;
  2234  011DD4  0E00               	movlw	0
  2235  011DD6  0102               	movlb	2	; () banked
  2236  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2237  011DDA  0E46               	movlw	70
  2238  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2239                           
  2240                           ;main.c: 198:  } else {
  2241  011DDE  D004               	goto	l10820
  2242  011DE0                     l1260:
  2243  011DE0  90BD               	bcf	189,0,c	;volatile
  2244                           
  2245                           ;main.c: 200:   V.mode_pwm = 0;
  2246  011DE2  0102               	movlb	2	; () banked
  2247  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2248  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2249  011DE8                     l10820:
  2250                           
  2251                           ; BSR set to: 2
  2252                           ;main.c: 202:  mode_lamp_dim(V.mode_pwm);
  2253  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  2254  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2255  011DF4  EC2F  F0C7         	call	_mode_lamp_dim	;wreg free
  2256  011DF8  D0D2               	goto	l10866
  2257  011DFA                     l10822:
  2258                           
  2259                           ; BSR set to: 2
  2260                           ;main.c: 213:    init_display();
  2261  011DFA  EC56  F0B9         	call	_init_display	;wreg free
  2262                           
  2263                           ; BSR set to: 61
  2264                           ;main.c: 214:    eaDogM_WriteCommand(0b00001100);
  2265  011DFE  0E0C               	movlw	12
  2266  011E00  6EE6               	movwf	postinc1,c
  2267  011E02  EC83  F0C7         	call	_eaDogM_WriteCommand	;wreg free
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;main.c: 216:    V.ui_state = mode;
  2271                           ;stkvar	_mode @ sp[(-5)+4]
  2272  011E06  0EFF               	movlw	-1
  2273  011E08  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;main.c: 217:    srand(1957);
  2277  011E0E  0EA5               	movlw	165
  2278  011E10  6EE6               	movwf	postinc1,c
  2279  011E12  0E07               	movlw	7
  2280  011E14  6EE6               	movwf	postinc1,c
  2281  011E16  ECA3  F0C3         	call	_srand	;wreg free
  2282                           
  2283                           ; BSR set to: 1
  2284                           ;main.c: 218:    set_vterm(0);
  2285  011E1A  0E00               	movlw	0
  2286  011E1C  6EE6               	movwf	postinc1,c
  2287  011E1E  ECCB  F0C6         	call	_set_vterm	;wreg free
  2288                           
  2289                           ;main.c: 219:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2290  011E22  0E5F               	movlw	low STR_1
  2291  011E24  6EE6               	movwf	postinc1,c
  2292  011E26  0EFF               	movlw	high STR_1
  2293  011E28  6EE6               	movwf	postinc1,c
  2294  011E2A  0E00               	movlw	0
  2295  011E2C  6EE6               	movwf	postinc1,c
  2296  011E2E  0E00               	movlw	0
  2297  011E30  6EE6               	movwf	postinc1,c
  2298  011E32  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2299  011E36  0060  F0CB  FFE6   	movff	btemp,postinc1
  2300  011E3C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2301  011E42  0E04               	movlw	4
  2302  011E44  6EE6               	movwf	postinc1,c
  2303  011E46  ECD2  F0B7         	call	_sprintf	;wreg free
  2304                           
  2305                           ;main.c: 220:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.996");
  2306  011E4A  0EDF               	movlw	low STR_3
  2307  011E4C  6EE6               	movwf	postinc1,c
  2308  011E4E  0EFF               	movlw	high STR_3
  2309  011E50  6EE6               	movwf	postinc1,c
  2310  011E52  0EB1               	movlw	low STR_2
  2311  011E54  6EE6               	movwf	postinc1,c
  2312  011E56  0EFF               	movlw	high STR_2
  2313  011E58  6EE6               	movwf	postinc1,c
  2314  011E5A  0E00               	movlw	0
  2315  011E5C  6EE6               	movwf	postinc1,c
  2316  011E5E  0E01               	movlw	1
  2317  011E60  6EE6               	movwf	postinc1,c
  2318  011E62  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2319  011E66  0060  F0CB  FFE6   	movff	btemp,postinc1
  2320  011E6C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2321  011E72  0E06               	movlw	6
  2322  011E74  6EE6               	movwf	postinc1,c
  2323  011E76  ECD2  F0B7         	call	_sprintf	;wreg free
  2324                           
  2325                           ;main.c: 221:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2326  011E7A  0E4E               	movlw	low STR_4
  2327  011E7C  6EE6               	movwf	postinc1,c
  2328  011E7E  0EFF               	movlw	high STR_4
  2329  011E80  6EE6               	movwf	postinc1,c
  2330  011E82  0E00               	movlw	0
  2331  011E84  6EE6               	movwf	postinc1,c
  2332  011E86  0E02               	movlw	2
  2333  011E88  6EE6               	movwf	postinc1,c
  2334  011E8A  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2335  011E8E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2336  011E94  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2337  011E9A  0E04               	movlw	4
  2338  011E9C  6EE6               	movwf	postinc1,c
  2339  011E9E  ECD2  F0B7         	call	_sprintf	;wreg free
  2340                           
  2341                           ;main.c: 222:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2342  011EA2  0E70               	movlw	low STR_5
  2343  011EA4  6EE6               	movwf	postinc1,c
  2344  011EA6  0EFF               	movlw	high STR_5
  2345  011EA8  6EE6               	movwf	postinc1,c
  2346  011EAA  0E02               	movlw	2
  2347  011EAC  6EE6               	movwf	postinc1,c
  2348  011EAE  0E00               	movlw	0
  2349  011EB0  6EE6               	movwf	postinc1,c
  2350  011EB2  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2351  011EB6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2352  011EBC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2353  011EC2  0E04               	movlw	4
  2354  011EC4  6EE6               	movwf	postinc1,c
  2355  011EC6  ECD2  F0B7         	call	_sprintf	;wreg free
  2356                           
  2357                           ;main.c: 223:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.996");
  2358  011ECA  0EDF               	movlw	low STR_3
  2359  011ECC  6EE6               	movwf	postinc1,c
  2360  011ECE  0EFF               	movlw	high STR_3
  2361  011ED0  6EE6               	movwf	postinc1,c
  2362  011ED2  0EB1               	movlw	low STR_2
  2363  011ED4  6EE6               	movwf	postinc1,c
  2364  011ED6  0EFF               	movlw	high STR_2
  2365  011ED8  6EE6               	movwf	postinc1,c
  2366  011EDA  0E02               	movlw	2
  2367  011EDC  6EE6               	movwf	postinc1,c
  2368  011EDE  0E01               	movlw	1
  2369  011EE0  6EE6               	movwf	postinc1,c
  2370  011EE2  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2371  011EE6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2372  011EEC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2373  011EF2  0E06               	movlw	6
  2374  011EF4  6EE6               	movwf	postinc1,c
  2375  011EF6  ECD2  F0B7         	call	_sprintf	;wreg free
  2376                           
  2377                           ;main.c: 224:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2378  011EFA  0E3D               	movlw	low STR_8
  2379  011EFC  6EE6               	movwf	postinc1,c
  2380  011EFE  0EFF               	movlw	high STR_8
  2381  011F00  6EE6               	movwf	postinc1,c
  2382  011F02  0E02               	movlw	2
  2383  011F04  6EE6               	movwf	postinc1,c
  2384  011F06  0E02               	movlw	2
  2385  011F08  6EE6               	movwf	postinc1,c
  2386  011F0A  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2387  011F0E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2388  011F14  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2389  011F1A  0E04               	movlw	4
  2390  011F1C  6EE6               	movwf	postinc1,c
  2391  011F1E  ECD2  F0B7         	call	_sprintf	;wreg free
  2392                           
  2393                           ;main.c: 225:    update_lcd(0);
  2394  011F22  0E00               	movlw	0
  2395  011F24  6EE6               	movwf	postinc1,c
  2396  011F26  EC4A  F0B7         	call	_update_lcd	;wreg free
  2397                           
  2398                           ;main.c: 226:    WaitMs(3000);
  2399  011F2A  0EB8               	movlw	184
  2400  011F2C  6EE6               	movwf	postinc1,c
  2401  011F2E  0E0B               	movlw	11
  2402  011F30  6EE6               	movwf	postinc1,c
  2403  011F32  EC6D  F0C3         	call	_WaitMs	;wreg free
  2404                           
  2405                           ;main.c: 227:    StartTimer(TMR_DISPLAY, 250);
  2406  011F36  0EFA               	movlw	250
  2407  011F38  6EE6               	movwf	postinc1,c
  2408  011F3A  0E00               	movlw	0
  2409  011F3C  6EE6               	movwf	postinc1,c
  2410  011F3E  0E0A               	movlw	10
  2411  011F40  6EE6               	movwf	postinc1,c
  2412  011F42  EC33  F0C3         	call	_StartTimer	;wreg free
  2413                           
  2414                           ;main.c: 228:    StartTimer(TMR_ADC, 200);
  2415  011F46  0EC8               	movlw	200
  2416  011F48  6EE6               	movwf	postinc1,c
  2417  011F4A  0E00               	movlw	0
  2418  011F4C  6EE6               	movwf	postinc1,c
  2419  011F4E  0E01               	movlw	1
  2420  011F50  6EE6               	movwf	postinc1,c
  2421  011F52  EC33  F0C3         	call	_StartTimer	;wreg free
  2422                           
  2423                           ;main.c: 229:    StartTimer(TMR_INFO, 3000);
  2424  011F56  0EB8               	movlw	184
  2425  011F58  6EE6               	movwf	postinc1,c
  2426  011F5A  0E0B               	movlw	11
  2427  011F5C  6EE6               	movwf	postinc1,c
  2428  011F5E  0E07               	movlw	7
  2429  011F60  6EE6               	movwf	postinc1,c
  2430  011F62  EC33  F0C3         	call	_StartTimer	;wreg free
  2431                           
  2432                           ;main.c: 230:    StartTimer(TMR_FLIPPER, 1500);
  2433  011F66  0EDC               	movlw	220
  2434  011F68  6EE6               	movwf	postinc1,c
  2435  011F6A  0E05               	movlw	5
  2436  011F6C  6EE6               	movwf	postinc1,c
  2437  011F6E  0E0B               	movlw	11
  2438  011F70  6EE6               	movwf	postinc1,c
  2439  011F72  EC33  F0C3         	call	_StartTimer	;wreg free
  2440                           
  2441                           ;main.c: 231:    StartTimer(TMR_HELPDIS, 3000);
  2442  011F76  0EB8               	movlw	184
  2443  011F78  6EE6               	movwf	postinc1,c
  2444  011F7A  0E0B               	movlw	11
  2445  011F7C  6EE6               	movwf	postinc1,c
  2446  011F7E  0E09               	movlw	9
  2447  011F80  6EE6               	movwf	postinc1,c
  2448  011F82  EC33  F0C3         	call	_StartTimer	;wreg free
  2449                           
  2450                           ;main.c: 233:    start_adc_scan();
  2451  011F86  ECEF  F0BF         	call	_start_adc_scan	;wreg free
  2452                           
  2453                           ;main.c: 234:    start_switch_handler();
  2454  011F8A  EC9D  F0C6         	call	_start_switch_handler	;wreg free
  2455                           
  2456                           ; BSR set to: 57
  2457                           ;main.c: 235:    static_soc();
  2458  011F8E  EC21  F0C6         	call	_static_soc	;wreg free
  2459                           
  2460                           ;main.c: 237:    break;
  2461  011F92  D01C               	goto	l10868
  2462  011F94                     l1268:
  2463                           
  2464                           ; BSR set to: 2
  2465                           ;main.c: 243:    P.SYSTEM_STABLE = 1;
  2466  011F94  0100               	movlb	0	; () banked
  2467  011F96  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2468                           
  2469                           ;main.c: 244:    break;
  2470  011F98  D019               	goto	l10868
  2471  011F9A                     l1270:
  2472                           
  2473                           ; BSR set to: 2
  2474                           ;main.c: 247:    V.ui_state = UI_STATE_INIT;
  2475  011F9A  6B00               	clrf	_V& (0+255),b	;volatile
  2476                           
  2477                           ;main.c: 248:    break;
  2478  011F9C  D017               	goto	l10868
  2479  011F9E                     l10866:
  2480  011F9E  0102               	movlb	2	; () banked
  2481  011FA0  5100               	movf	_V& (0+255),w,b	;volatile
  2482  011FA2  6E3C               	movwf	(btemp+10)^0,c
  2483  011FA4  6A3D               	clrf	(btemp+11)^0,c
  2484                           
  2485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2486                           ; Switch size 1, requested type "simple"
  2487                           ; Number of cases is 1, Range of values is 0 to 0
  2488                           ; switch strategies available:
  2489                           ; Name         Instructions Cycles
  2490                           ; simple_byte            4     3 (average)
  2491                           ;	Chosen strategy is simple_byte
  2492  011FA6  503D               	movf	(btemp+11)^0,w,c
  2493  011FA8  0A00               	xorlw	0	; case 0
  2494  011FAA  A4D8               	btfss	status,2,c
  2495  011FAC  D7F6               	goto	l1270
  2496                           
  2497                           ; BSR set to: 2
  2498                           ; Switch size 1, requested type "simple"
  2499                           ; Number of cases is 5, Range of values is 0 to 5
  2500                           ; switch strategies available:
  2501                           ; Name         Instructions Cycles
  2502                           ; simple_byte           16     9 (average)
  2503                           ;	Chosen strategy is simple_byte
  2504  011FAE  503C               	movf	(btemp+10)^0,w,c
  2505  011FB0  0A00               	xorlw	0	; case 0
  2506  011FB2  B4D8               	btfsc	status,2,c
  2507  011FB4  D722               	goto	l10822
  2508  011FB6  0A01               	xorlw	1	; case 1
  2509  011FB8  B4D8               	btfsc	status,2,c
  2510  011FBA  D008               	goto	l10868
  2511  011FBC  0A02               	xorlw	2	; case 3
  2512  011FBE  B4D8               	btfsc	status,2,c
  2513  011FC0  D005               	goto	l10868
  2514  011FC2  0A07               	xorlw	7	; case 4
  2515  011FC4  B4D8               	btfsc	status,2,c
  2516  011FC6  D7E6               	goto	l1268
  2517  011FC8  0A01               	xorlw	1	; case 5
  2518  011FCA  D7E7               	goto	l1270
  2519  011FCC                     l10868:
  2520                           
  2521                           ;main.c: 251:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2522  011FCC  0E01               	movlw	1
  2523  011FCE  6EE6               	movwf	postinc1,c
  2524  011FD0  EC45  F0C6         	call	_TimerDone	;wreg free
  2525  011FD4  5032               	movf	btemp^0,w,c
  2526  011FD6  B4D8               	btfsc	status,2,c
  2527  011FD8  D013               	goto	l10880
  2528  011FDA  ECC3  F0C7         	call	_check_adc_scan	;wreg free
  2529  011FDE  5032               	movf	btemp^0,w,c
  2530  011FE0  B4D8               	btfsc	status,2,c
  2531  011FE2  D00E               	goto	l10880
  2532                           
  2533                           ;main.c: 255:    convert_adc_data();
  2534  011FE4  ECF5  F0BA         	call	_convert_adc_data	;wreg free
  2535                           
  2536                           ;main.c: 259:    clear_adc_scan();
  2537  011FE8  ECCB  F0C7         	call	_clear_adc_scan	;wreg free
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;main.c: 260:    start_adc_scan();
  2541  011FEC  ECEF  F0BF         	call	_start_adc_scan	;wreg free
  2542                           
  2543                           ;main.c: 261:    StartTimer(TMR_ADC, 200);
  2544  011FF0  0EC8               	movlw	200
  2545  011FF2  6EE6               	movwf	postinc1,c
  2546  011FF4  0E00               	movlw	0
  2547  011FF6  6EE6               	movwf	postinc1,c
  2548  011FF8  0E01               	movlw	1
  2549  011FFA  6EE6               	movwf	postinc1,c
  2550  011FFC  EC33  F0C3         	call	_StartTimer	;wreg free
  2551  012000                     l10880:
  2552                           
  2553                           ;main.c: 268:   if (TimerDone(TMR_DISPLAY)) {
  2554                           
  2555                           ;main.c: 264:   if (V.ticks) {
  2556  012000  0E0A               	movlw	10
  2557  012002  6EE6               	movwf	postinc1,c
  2558  012004  EC45  F0C6         	call	_TimerDone	;wreg free
  2559  012008  5032               	movf	btemp^0,w,c
  2560  01200A  B4D8               	btfsc	status,2,c
  2561  01200C  D273               	goto	l10922
  2562                           
  2563                           ;main.c: 269:    if (TimerDone(TMR_HELPDIS)) {
  2564  01200E  0E09               	movlw	9
  2565  012010  6EE6               	movwf	postinc1,c
  2566  012012  EC45  F0C6         	call	_TimerDone	;wreg free
  2567  012016  5032               	movf	btemp^0,w,c
  2568  012018  B4D8               	btfsc	status,2,c
  2569  01201A  D004               	goto	l10888
  2570                           
  2571                           ;main.c: 270:     set_display_info(DIS_STR);
  2572  01201C  0E00               	movlw	0
  2573  01201E  6EE6               	movwf	postinc1,c
  2574  012020  ECDA  F0C6         	call	_set_display_info	;wreg free
  2575  012024                     l10888:
  2576                           
  2577                           ;main.c: 272:    calc_model_data();
  2578  012024  EC55  F0A7         	call	_calc_model_data	;wreg free
  2579                           
  2580                           ;main.c: 279:     hid_display(&H);
  2581                           
  2582                           ;main.c: 274:    if (0) {
  2583  012028  0EEF               	movlw	_H& (0+255)
  2584  01202A  6EE6               	movwf	postinc1,c
  2585  01202C  EC57  F0B8         	call	_hid_display	;wreg free
  2586                           
  2587                           ;main.c: 280:     switch (H.hid_display) {
  2588  012030  D23C               	goto	l10914
  2589  012032                     l1278:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;main.c: 282:      V.calib = 0;
  2593  012032  0102               	movlb	2	; () banked
  2594  012034  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2595                           
  2596                           ; BSR set to: 2
  2597                           ;main.c: 283:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2598  012036  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2599  01203C  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2600  012042  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2601  012048  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2602  01204E  0EB8               	movlw	low STR_12
  2603  012050  6EE6               	movwf	postinc1,c
  2604  012052  0EFE               	movlw	high STR_12
  2605  012054  6EE6               	movwf	postinc1,c
  2606  012056  0E00               	movlw	0
  2607  012058  6EE6               	movwf	postinc1,c
  2608  01205A  0E00               	movlw	0
  2609  01205C  6EE6               	movwf	postinc1,c
  2610  01205E  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2611  012062  0060  F0CB  FFE6   	movff	btemp,postinc1
  2612  012068  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2613  01206E  0E08               	movlw	8
  2614  012070  6EE6               	movwf	postinc1,c
  2615  012072  ECD2  F0B7         	call	_sprintf	;wreg free
  2616                           
  2617                           ;main.c: 284:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2618  012076  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2619  01207C  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2620  012082  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2621  012088  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2622  01208E  0EF1               	movlw	low STR_13
  2623  012090  6EE6               	movwf	postinc1,c
  2624  012092  0EFE               	movlw	high STR_13
  2625  012094  6EE6               	movwf	postinc1,c
  2626  012096  0E00               	movlw	0
  2627  012098  6EE6               	movwf	postinc1,c
  2628  01209A  0E01               	movlw	1
  2629  01209C  6EE6               	movwf	postinc1,c
  2630  01209E  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2631  0120A2  0060  F0CB  FFE6   	movff	btemp,postinc1
  2632  0120A8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2633  0120AE  0E08               	movlw	8
  2634  0120B0  6EE6               	movwf	postinc1,c
  2635  0120B2  ECD2  F0B7         	call	_sprintf	;wreg free
  2636                           
  2637                           ;main.c: 285:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2638  0120B6  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2639  0120BC  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2640  0120C2  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2641  0120C8  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2642  0120CE  0EDE               	movlw	low STR_14
  2643  0120D0  6EE6               	movwf	postinc1,c
  2644  0120D2  0EFE               	movlw	high STR_14
  2645  0120D4  6EE6               	movwf	postinc1,c
  2646  0120D6  0E00               	movlw	0
  2647  0120D8  6EE6               	movwf	postinc1,c
  2648  0120DA  0E02               	movlw	2
  2649  0120DC  6EE6               	movwf	postinc1,c
  2650  0120DE  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2651  0120E2  0060  F0CB  FFE6   	movff	btemp,postinc1
  2652  0120E8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2653  0120EE  0E08               	movlw	8
  2654  0120F0  6EE6               	movwf	postinc1,c
  2655  0120F2  ECD2  F0B7         	call	_sprintf	;wreg free
  2656                           
  2657                           ;main.c: 286:      break;
  2658  0120F6  D1EE               	goto	l10916
  2659  0120F8                     l1280:
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;main.c: 288:      V.calib = 0;
  2663  0120F8  0102               	movlb	2	; () banked
  2664  0120FA  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2665                           
  2666                           ; BSR set to: 2
  2667                           ;main.c: 289:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  2668  0120FC  0060  F413  FFE6   	movff	_C+4,postinc1
  2669  012102  0060  F417  FFE6   	movff	_C+5,postinc1
  2670  012108  0060  F41B  FFE6   	movff	_C+6,postinc1
  2671  01210E  0060  F41F  FFE6   	movff	_C+7,postinc1
  2672  012114  0060  F453  FFE6   	movff	_C+20,postinc1
  2673  01211A  0060  F457  FFE6   	movff	_C+21,postinc1
  2674  012120  0060  F45B  FFE6   	movff	_C+22,postinc1
  2675  012126  0060  F45F  FFE6   	movff	_C+23,postinc1
  2676  01212C  0E2A               	movlw	low STR_15
  2677  01212E  6EE6               	movwf	postinc1,c
  2678  012130  0EFF               	movlw	high STR_15
  2679  012132  6EE6               	movwf	postinc1,c
  2680  012134  0E00               	movlw	0
  2681  012136  6EE6               	movwf	postinc1,c
  2682  012138  0E00               	movlw	0
  2683  01213A  6EE6               	movwf	postinc1,c
  2684  01213C  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2685  012140  0060  F0CB  FFE6   	movff	btemp,postinc1
  2686  012146  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2687  01214C  0E0C               	movlw	12
  2688  01214E  6EE6               	movwf	postinc1,c
  2689  012150  ECD2  F0B7         	call	_sprintf	;wreg free
  2690                           
  2691                           ;main.c: 290:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  2692  012154  0060  F403  FFE6   	movff	_C,postinc1
  2693  01215A  0060  F407  FFE6   	movff	_C+1,postinc1
  2694  012160  0060  F40B  FFE6   	movff	_C+2,postinc1
  2695  012166  0060  F40F  FFE6   	movff	_C+3,postinc1
  2696  01216C  0060  F443  FFE6   	movff	_C+16,postinc1
  2697  012172  0060  F447  FFE6   	movff	_C+17,postinc1
  2698  012178  0060  F44B  FFE6   	movff	_C+18,postinc1
  2699  01217E  0060  F44F  FFE6   	movff	_C+19,postinc1
  2700  012184  0E04               	movlw	low STR_16
  2701  012186  6EE6               	movwf	postinc1,c
  2702  012188  0EFF               	movlw	high STR_16
  2703  01218A  6EE6               	movwf	postinc1,c
  2704  01218C  0E00               	movlw	0
  2705  01218E  6EE6               	movwf	postinc1,c
  2706  012190  0E01               	movlw	1
  2707  012192  6EE6               	movwf	postinc1,c
  2708  012194  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2709  012198  0060  F0CB  FFE6   	movff	btemp,postinc1
  2710  01219E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2711  0121A4  0E0C               	movlw	12
  2712  0121A6  6EE6               	movwf	postinc1,c
  2713  0121A8  ECD2  F0B7         	call	_sprintf	;wreg free
  2714                           
  2715                           ;main.c: 291:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  2716  0121AC  0060  F503  FFE6   	movff	_C+64,postinc1
  2717  0121B2  0060  F507  FFE6   	movff	_C+65,postinc1
  2718  0121B8  0060  F50B  FFE6   	movff	_C+66,postinc1
  2719  0121BE  0060  F50F  FFE6   	movff	_C+67,postinc1
  2720  0121C4  0060  F423  FFE6   	movff	_C+8,postinc1
  2721  0121CA  0060  F427  FFE6   	movff	_C+9,postinc1
  2722  0121D0  0060  F42B  FFE6   	movff	_C+10,postinc1
  2723  0121D6  0060  F42F  FFE6   	movff	_C+11,postinc1
  2724  0121DC  0E17               	movlw	low STR_17
  2725  0121DE  6EE6               	movwf	postinc1,c
  2726  0121E0  0EFF               	movlw	high STR_17
  2727  0121E2  6EE6               	movwf	postinc1,c
  2728  0121E4  0E00               	movlw	0
  2729  0121E6  6EE6               	movwf	postinc1,c
  2730  0121E8  0E02               	movlw	2
  2731  0121EA  6EE6               	movwf	postinc1,c
  2732  0121EC  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2733  0121F0  0060  F0CB  FFE6   	movff	btemp,postinc1
  2734  0121F6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2735  0121FC  0E0C               	movlw	12
  2736  0121FE  6EE6               	movwf	postinc1,c
  2737  012200  ECD2  F0B7         	call	_sprintf	;wreg free
  2738                           
  2739                           ;main.c: 292:      break;
  2740  012204  D167               	goto	l10916
  2741  012206                     l1281:
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;main.c: 294:      V.calib = 0;
  2745  012206  0102               	movlb	2	; () banked
  2746  012208  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2747                           
  2748                           ; BSR set to: 2
  2749                           ;main.c: 295:      sprintf(get_vterm_ptr(0, 0), "BAT  PWR %3.2f    ", C.p_bat);
  2750  01220A  0060  F5D3  FFE6   	movff	_C+116,postinc1
  2751  012210  0060  F5D7  FFE6   	movff	_C+117,postinc1
  2752  012216  0060  F5DB  FFE6   	movff	_C+118,postinc1
  2753  01221C  0060  F5DF  FFE6   	movff	_C+119,postinc1
  2754  012222  0ECB               	movlw	low STR_18
  2755  012224  6EE6               	movwf	postinc1,c
  2756  012226  0EFE               	movlw	high STR_18
  2757  012228  6EE6               	movwf	postinc1,c
  2758  01222A  0E00               	movlw	0
  2759  01222C  6EE6               	movwf	postinc1,c
  2760  01222E  0E00               	movlw	0
  2761  012230  6EE6               	movwf	postinc1,c
  2762  012232  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2763  012236  0060  F0CB  FFE6   	movff	btemp,postinc1
  2764  01223C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2765  012242  0E08               	movlw	8
  2766  012244  6EE6               	movwf	postinc1,c
  2767  012246  ECD2  F0B7         	call	_sprintf	;wreg free
  2768                           
  2769                           ;main.c: 296:      sprintf(get_vterm_ptr(1, 0), "BAT AH   %3.2f    ", C.dynamic_ah);
  2770  01224A  0060  F613  FFE6   	movff	_C+132,postinc1
  2771  012250  0060  F617  FFE6   	movff	_C+133,postinc1
  2772  012256  0060  F61B  FFE6   	movff	_C+134,postinc1
  2773  01225C  0060  F61F  FFE6   	movff	_C+135,postinc1
  2774  012262  0EA5               	movlw	low STR_19
  2775  012264  6EE6               	movwf	postinc1,c
  2776  012266  0EFE               	movlw	high STR_19
  2777  012268  6EE6               	movwf	postinc1,c
  2778  01226A  0E00               	movlw	0
  2779  01226C  6EE6               	movwf	postinc1,c
  2780  01226E  0E01               	movlw	1
  2781  012270  6EE6               	movwf	postinc1,c
  2782  012272  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2783  012276  0060  F0CB  FFE6   	movff	btemp,postinc1
  2784  01227C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2785  012282  0E08               	movlw	8
  2786  012284  6EE6               	movwf	postinc1,c
  2787  012286  ECD2  F0B7         	call	_sprintf	;wreg free
  2788                           
  2789                           ;main.c: 297:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  2790  01228A  0060  F623  FFE6   	movff	_C+136,postinc1
  2791  012290  0060  F627  FFE6   	movff	_C+137,postinc1
  2792  012296  0060  F62B  FFE6   	movff	_C+138,postinc1
  2793  01229C  0060  F62F  FFE6   	movff	_C+139,postinc1
  2794  0122A2  0E92               	movlw	low STR_20
  2795  0122A4  6EE6               	movwf	postinc1,c
  2796  0122A6  0EFE               	movlw	high STR_20
  2797  0122A8  6EE6               	movwf	postinc1,c
  2798  0122AA  0E00               	movlw	0
  2799  0122AC  6EE6               	movwf	postinc1,c
  2800  0122AE  0E02               	movlw	2
  2801  0122B0  6EE6               	movwf	postinc1,c
  2802  0122B2  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2803  0122B6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2804  0122BC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2805  0122C2  0E08               	movlw	8
  2806  0122C4  6EE6               	movwf	postinc1,c
  2807  0122C6  ECD2  F0B7         	call	_sprintf	;wreg free
  2808                           
  2809                           ;main.c: 298:      break;
  2810  0122CA  D104               	goto	l10916
  2811  0122CC                     l10900:
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;main.c: 300:      if (!V.calib) {
  2815  0122CC  0102               	movlb	2	; () banked
  2816  0122CE  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  2817  0122D0  A4D8               	btfss	status,2,c
  2818  0122D2  D02D               	goto	l10904
  2819                           
  2820                           ; BSR set to: 2
  2821                           ;main.c: 301:       lp_filter(0.0, i, -1);
  2822  0122D4  0EFF               	movlw	255
  2823  0122D6  6EE6               	movwf	postinc1,c
  2824                           
  2825                           ;stkvar	_i @ sp[(-6)+2]
  2826  0122D8  0EFC               	movlw	-4
  2827  0122DA  50E3               	movf	plusw1,w,c
  2828  0122DC  6EE6               	movwf	postinc1,c
  2829  0122DE  0E00               	movlw	0
  2830  0122E0  6EE6               	movwf	postinc1,c
  2831  0122E2  0E00               	movlw	0
  2832  0122E4  6EE6               	movwf	postinc1,c
  2833  0122E6  0E00               	movlw	0
  2834  0122E8  6EE6               	movwf	postinc1,c
  2835  0122EA  0E00               	movlw	0
  2836  0122EC  6EE6               	movwf	postinc1,c
  2837  0122EE  ECAB  F0B0         	call	_lp_filter	;wreg free
  2838                           
  2839                           ;main.c: 302:       lp_filter(0.0, j, -1);
  2840  0122F2  0EFF               	movlw	255
  2841  0122F4  6EE6               	movwf	postinc1,c
  2842                           
  2843                           ;stkvar	_j @ sp[(-6)+1]
  2844  0122F6  0EFB               	movlw	-5
  2845  0122F8  50E3               	movf	plusw1,w,c
  2846  0122FA  6EE6               	movwf	postinc1,c
  2847  0122FC  0E00               	movlw	0
  2848  0122FE  6EE6               	movwf	postinc1,c
  2849  012300  0E00               	movlw	0
  2850  012302  6EE6               	movwf	postinc1,c
  2851  012304  0E00               	movlw	0
  2852  012306  6EE6               	movwf	postinc1,c
  2853  012308  0E00               	movlw	0
  2854  01230A  6EE6               	movwf	postinc1,c
  2855  01230C  ECAB  F0B0         	call	_lp_filter	;wreg free
  2856                           
  2857                           ;main.c: 303:       lp_filter(0.0, k, -1);
  2858  012310  0EFF               	movlw	255
  2859  012312  6EE6               	movwf	postinc1,c
  2860                           
  2861                           ;stkvar	_k @ sp[(-6)+0]
  2862  012314  0EFA               	movlw	-6
  2863  012316  50E3               	movf	plusw1,w,c
  2864  012318  6EE6               	movwf	postinc1,c
  2865  01231A  0E00               	movlw	0
  2866  01231C  6EE6               	movwf	postinc1,c
  2867  01231E  0E00               	movlw	0
  2868  012320  6EE6               	movwf	postinc1,c
  2869  012322  0E00               	movlw	0
  2870  012324  6EE6               	movwf	postinc1,c
  2871  012326  0E00               	movlw	0
  2872  012328  6EE6               	movwf	postinc1,c
  2873  01232A  ECAB  F0B0         	call	_lp_filter	;wreg free
  2874  01232E                     l10904:
  2875                           
  2876                           ;main.c: 305:      V.calib = 1;
  2877  01232E  0E01               	movlw	1
  2878  012330  0102               	movlb	2	; () banked
  2879  012332  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  2880                           
  2881                           ; BSR set to: 2
  2882                           ;main.c: 306:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  2883  012334  0E02               	movlw	2
  2884  012336  6EE6               	movwf	postinc1,c
  2885  012338  ECE1  F0C4         	call	_get_switch	;wreg free
  2886  01233C  5032               	movf	btemp^0,w,c
  2887  01233E  6EE6               	movwf	postinc1,c
  2888  012340  0E00               	movlw	0
  2889  012342  6EE6               	movwf	postinc1,c
  2890                           
  2891                           ;stkvar	_i @ sp[(-7)+2]
  2892  012344  0EFB               	movlw	-5
  2893  012346  50E3               	movf	plusw1,w,c
  2894  012348  0D04               	mullw	4
  2895  01234A  0E00               	movlw	low _C
  2896  01234C  24F3               	addwf	243,w,c
  2897  01234E  6ED9               	movwf	fsr2l,c
  2898  012350  0E01               	movlw	high _C
  2899  012352  20F4               	addwfc	prodh,w,c
  2900  012354  6EDA               	movwf	fsr2h,c
  2901  012356  006F FF7B FFE6     	movff	postinc2,postinc1
  2902  01235C  006F FF7B FFE6     	movff	postinc2,postinc1
  2903  012362  006F FF7B FFE6     	movff	postinc2,postinc1
  2904  012368  006F FF7B FFE6     	movff	postinc2,postinc1
  2905                           
  2906                           ;stkvar	_i @ sp[(-11)+2]
  2907  01236E  0EF7               	movlw	-9
  2908  012370  50E3               	movf	plusw1,w,c
  2909  012372  6EE6               	movwf	postinc1,c
  2910  012374  ECBC  F0C6         	call	_get_raw_result	;wreg free
  2911  012378  0060  F0CB  FFE6   	movff	btemp,postinc1
  2912  01237E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2913  012384  0E92               	movlw	low STR_9
  2914  012386  6EE6               	movwf	postinc1,c
  2915  012388  0EFF               	movlw	high STR_9
  2916  01238A  6EE6               	movwf	postinc1,c
  2917  01238C  0E00               	movlw	0
  2918  01238E  6EE6               	movwf	postinc1,c
  2919  012390  0E00               	movlw	0
  2920  012392  6EE6               	movwf	postinc1,c
  2921  012394  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2922  012398  0060  F0CB  FFE6   	movff	btemp,postinc1
  2923  01239E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2924  0123A4  0E0C               	movlw	12
  2925  0123A6  6EE6               	movwf	postinc1,c
  2926  0123A8  ECD2  F0B7         	call	_sprintf	;wreg free
  2927                           
  2928                           ;main.c: 307:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  2929  0123AC  0E03               	movlw	3
  2930  0123AE  6EE6               	movwf	postinc1,c
  2931  0123B0  ECE1  F0C4         	call	_get_switch	;wreg free
  2932  0123B4  5032               	movf	btemp^0,w,c
  2933  0123B6  6EE6               	movwf	postinc1,c
  2934  0123B8  0E00               	movlw	0
  2935  0123BA  6EE6               	movwf	postinc1,c
  2936                           
  2937                           ;stkvar	_j @ sp[(-7)+1]
  2938  0123BC  0EFA               	movlw	-6
  2939  0123BE  50E3               	movf	plusw1,w,c
  2940  0123C0  0D04               	mullw	4
  2941  0123C2  0E00               	movlw	low _C
  2942  0123C4  24F3               	addwf	243,w,c
  2943  0123C6  6ED9               	movwf	fsr2l,c
  2944  0123C8  0E01               	movlw	high _C
  2945  0123CA  20F4               	addwfc	prodh,w,c
  2946  0123CC  6EDA               	movwf	fsr2h,c
  2947  0123CE  006F FF7B FFE6     	movff	postinc2,postinc1
  2948  0123D4  006F FF7B FFE6     	movff	postinc2,postinc1
  2949  0123DA  006F FF7B FFE6     	movff	postinc2,postinc1
  2950  0123E0  006F FF7B FFE6     	movff	postinc2,postinc1
  2951                           
  2952                           ;stkvar	_j @ sp[(-11)+1]
  2953  0123E6  0EF6               	movlw	-10
  2954  0123E8  50E3               	movf	plusw1,w,c
  2955  0123EA  6EE6               	movwf	postinc1,c
  2956  0123EC  ECBC  F0C6         	call	_get_raw_result	;wreg free
  2957  0123F0  0060  F0CB  FFE6   	movff	btemp,postinc1
  2958  0123F6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2959  0123FC  0E92               	movlw	low STR_9
  2960  0123FE  6EE6               	movwf	postinc1,c
  2961  012400  0EFF               	movlw	high STR_9
  2962  012402  6EE6               	movwf	postinc1,c
  2963  012404  0E00               	movlw	0
  2964  012406  6EE6               	movwf	postinc1,c
  2965  012408  0E01               	movlw	1
  2966  01240A  6EE6               	movwf	postinc1,c
  2967  01240C  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  2968  012410  0060  F0CB  FFE6   	movff	btemp,postinc1
  2969  012416  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2970  01241C  0E0C               	movlw	12
  2971  01241E  6EE6               	movwf	postinc1,c
  2972  012420  ECD2  F0B7         	call	_sprintf	;wreg free
  2973                           
  2974                           ;main.c: 308:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  2975                           ;stkvar	_inp_index @ sp[(-5)+3]
  2976  012424  0EFE               	movlw	-2
  2977  012426  50E3               	movf	plusw1,w,c
  2978  012428  6E3C               	movwf	(btemp+10)^0,c
  2979  01242A  6A3D               	clrf	(btemp+11)^0,c
  2980  01242C  0E01               	movlw	1
  2981  01242E  263C               	addwf	(btemp+10)^0,f,c
  2982  012430  0E00               	movlw	0
  2983  012432  223D               	addwfc	(btemp+11)^0,f,c
  2984  012434  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  2985  01243A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  2986                           
  2987                           ;stkvar	_k @ sp[(-7)+0]
  2988  012440  0EF9               	movlw	-7
  2989  012442  50E3               	movf	plusw1,w,c
  2990  012444  0D04               	mullw	4
  2991  012446  0E00               	movlw	low _C
  2992  012448  24F3               	addwf	243,w,c
  2993  01244A  6ED9               	movwf	fsr2l,c
  2994  01244C  0E01               	movlw	high _C
  2995  01244E  20F4               	addwfc	prodh,w,c
  2996  012450  6EDA               	movwf	fsr2h,c
  2997  012452  006F FF7B FFE6     	movff	postinc2,postinc1
  2998  012458  006F FF7B FFE6     	movff	postinc2,postinc1
  2999  01245E  006F FF7B FFE6     	movff	postinc2,postinc1
  3000  012464  006F FF7B FFE6     	movff	postinc2,postinc1
  3001                           
  3002                           ;stkvar	_k @ sp[(-11)+0]
  3003  01246A  0EF5               	movlw	-11
  3004  01246C  50E3               	movf	plusw1,w,c
  3005  01246E  6EE6               	movwf	postinc1,c
  3006  012470  ECBC  F0C6         	call	_get_raw_result	;wreg free
  3007  012474  0060  F0CB  FFE6   	movff	btemp,postinc1
  3008  01247A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3009  012480  0E81               	movlw	low STR_11
  3010  012482  6EE6               	movwf	postinc1,c
  3011  012484  0EFF               	movlw	high STR_11
  3012  012486  6EE6               	movwf	postinc1,c
  3013  012488  0E00               	movlw	0
  3014  01248A  6EE6               	movwf	postinc1,c
  3015  01248C  0E02               	movlw	2
  3016  01248E  6EE6               	movwf	postinc1,c
  3017  012490  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  3018  012494  0060  F0CB  FFE6   	movff	btemp,postinc1
  3019  01249A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3020  0124A0  0E0C               	movlw	12
  3021  0124A2  6EE6               	movwf	postinc1,c
  3022  0124A4  ECD2  F0B7         	call	_sprintf	;wreg free
  3023                           
  3024                           ;main.c: 309:      break;
  3025  0124A8  D015               	goto	l10916
  3026  0124AA                     l10914:
  3027  0124AA  0100               	movlb	0	; () banked
  3028  0124AC  51EF               	movf	_H& (0+255),w,b
  3029  0124AE  6E3C               	movwf	(btemp+10)^0,c
  3030  0124B0  6A3D               	clrf	(btemp+11)^0,c
  3031                           
  3032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3033                           ; Switch size 1, requested type "simple"
  3034                           ; Number of cases is 1, Range of values is 0 to 0
  3035                           ; switch strategies available:
  3036                           ; Name         Instructions Cycles
  3037                           ; simple_byte            4     3 (average)
  3038                           ;	Chosen strategy is simple_byte
  3039  0124B2  503D               	movf	(btemp+11)^0,w,c
  3040  0124B4  0A00               	xorlw	0	; case 0
  3041  0124B6  A4D8               	btfss	status,2,c
  3042  0124B8  D00D               	goto	l10916
  3043                           
  3044                           ; BSR set to: 0
  3045                           ; Switch size 1, requested type "simple"
  3046                           ; Number of cases is 4, Range of values is 0 to 3
  3047                           ; switch strategies available:
  3048                           ; Name         Instructions Cycles
  3049                           ; simple_byte           13     7 (average)
  3050                           ;	Chosen strategy is simple_byte
  3051  0124BA  503C               	movf	(btemp+10)^0,w,c
  3052  0124BC  0A00               	xorlw	0	; case 0
  3053  0124BE  B4D8               	btfsc	status,2,c
  3054  0124C0  D61B               	goto	l1280
  3055  0124C2  0A01               	xorlw	1	; case 1
  3056  0124C4  B4D8               	btfsc	status,2,c
  3057  0124C6  D5B5               	goto	l1278
  3058  0124C8  0A03               	xorlw	3	; case 2
  3059  0124CA  B4D8               	btfsc	status,2,c
  3060  0124CC  D69C               	goto	l1281
  3061  0124CE  0A01               	xorlw	1	; case 3
  3062  0124D0  B4D8               	btfsc	status,2,c
  3063  0124D2  D6FC               	goto	l10900
  3064  0124D4                     l10916:
  3065                           
  3066                           ;main.c: 313:     clear_hid_pflags(&H);
  3067  0124D4  0EEF               	movlw	_H& (0+255)
  3068  0124D6  6EE6               	movwf	postinc1,c
  3069  0124D8  EC33  F0C6         	call	_clear_hid_pflags	;wreg free
  3070                           
  3071                           ;main.c: 315:    StartTimer(TMR_DISPLAY, 250);
  3072  0124DC  0EFA               	movlw	250
  3073  0124DE  6EE6               	movwf	postinc1,c
  3074  0124E0  0E00               	movlw	0
  3075  0124E2  6EE6               	movwf	postinc1,c
  3076  0124E4  0E0A               	movlw	10
  3077  0124E6  6EE6               	movwf	postinc1,c
  3078  0124E8  EC33  F0C3         	call	_StartTimer	;wreg free
  3079                           
  3080                           ;main.c: 316:    update_lcd(0);
  3081  0124EC  0E00               	movlw	0
  3082  0124EE  6EE6               	movwf	postinc1,c
  3083  0124F0  EC4A  F0B7         	call	_update_lcd	;wreg free
  3084  0124F4                     l10922:
  3085                           
  3086                           ;main.c: 322:   check_help(V.flipper);
  3087  0124F4  0102               	movlb	2	; () banked
  3088  0124F6  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  3089  0124F8  6EE6               	movwf	postinc1,c
  3090  0124FA  ECBC  F0AD         	call	_check_help	;wreg free
  3091                           
  3092                           ;main.c: 324:   if (check_enter_button(&H)) {
  3093  0124FE  0EEF               	movlw	_H& (0+255)
  3094  012500  6EE6               	movwf	postinc1,c
  3095  012502  ECD4  F0C2         	call	_check_enter_button	;wreg free
  3096  012506  5032               	movf	btemp^0,w,c
  3097  012508  B4D8               	btfsc	status,2,c
  3098  01250A  D062               	goto	l1285
  3099                           
  3100                           ;main.c: 325:    V.calib = 0;
  3101  01250C  0102               	movlb	2	; () banked
  3102  01250E  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3103                           
  3104                           ; BSR set to: 2
  3105                           ;main.c: 326:    inp_index += 3;
  3106                           ;stkvar	_inp_index @ sp[(-5)+3]
  3107  012510  0EFE               	movlw	-2
  3108  012512  006F FF8C  F032    	movff	plusw1,btemp
  3109  012518  0E03               	movlw	3
  3110  01251A  2632               	addwf	btemp^0,f,c
  3111  01251C  0EFE               	movlw	-2
  3112  01251E  0060  F0CB  FFE3   	movff	btemp,plusw1
  3113                           
  3114                           ;main.c: 327:    if (inp_index > 9)
  3115                           ;stkvar	_inp_index @ sp[(-5)+3]
  3116  012524  0EFE               	movlw	-2
  3117  012526  006F FF8C  F032    	movff	plusw1,btemp
  3118  01252C  0E09               	movlw	9
  3119  01252E  6432               	cpfsgt	btemp^0,c
  3120  012530  D03A               	goto	l10950
  3121                           
  3122                           ; BSR set to: 2
  3123                           ;main.c: 328:     inp_index = 0;
  3124                           ;stkvar	_inp_index @ sp[(-5)+3]
  3125  012532  0EFE               	movlw	-2
  3126  012534  6AE3               	clrf	plusw1,c
  3127  012536  D037               	goto	l10950
  3128  012538                     l10932:
  3129                           
  3130                           ; BSR set to: 2
  3131                           ;main.c: 331:     i = C_BATT;
  3132                           ;stkvar	_i @ sp[(-5)+2]
  3133  012538  0EFD               	movlw	-3
  3134  01253A  6AE3               	clrf	plusw1,c
  3135                           
  3136                           ; BSR set to: 2
  3137                           ;main.c: 332:     j = C_PV;
  3138                           ;stkvar	_j @ sp[(-5)+1]
  3139  01253C  0EFC               	movlw	-4
  3140  01253E  6AE3               	clrf	plusw1,c
  3141  012540  2AE3               	incf	plusw1,f,c
  3142                           
  3143                           ; BSR set to: 2
  3144                           ;main.c: 333:     k = V_CC;
  3145                           ;stkvar	_k @ sp[(-5)+0]
  3146  012542  0EFB               	movlw	-5
  3147  012544  6AE3               	clrf	plusw1,c
  3148  012546  82E3               	bsf	plusw1,1,c
  3149                           
  3150                           ;main.c: 334:     break;
  3151  012548  D043               	goto	l1285
  3152  01254A                     l10938:
  3153                           
  3154                           ; BSR set to: 2
  3155                           ;main.c: 336:     i = V_BAT;
  3156                           ;stkvar	_i @ sp[(-5)+2]
  3157  01254A  0EFD               	movlw	-3
  3158  01254C  6AE3               	clrf	plusw1,c
  3159  01254E  84E3               	bsf	plusw1,2,c
  3160                           
  3161                           ;main.c: 337:     j = V_PV;
  3162                           ;stkvar	_j @ sp[(-5)+1]
  3163  012550  0EFC               	movlw	-4
  3164  012552  6AE3               	clrf	plusw1,c
  3165  012554  80E3               	bsf	plusw1,0,c
  3166  012556  84E3               	bsf	plusw1,2,c	;indir
  3167                           
  3168                           ;main.c: 338:     k = V_CBUS;
  3169                           ;stkvar	_k @ sp[(-5)+0]
  3170  012558  0EFB               	movlw	-5
  3171  01255A  6AE3               	clrf	plusw1,c
  3172  01255C  82E3               	bsf	plusw1,1,c
  3173  01255E  84E3               	bsf	plusw1,2,c	;indir
  3174                           
  3175                           ;main.c: 339:     break;
  3176  012560  D037               	goto	l1285
  3177  012562                     l10940:
  3178                           
  3179                           ; BSR set to: 2
  3180                           ;main.c: 341:     i = V_BBAT;
  3181                           ;stkvar	_i @ sp[(-5)+2]
  3182  012562  0EFD               	movlw	-3
  3183  012564  6AE3               	clrf	plusw1,c
  3184  012566  82E3               	bsf	plusw1,1,c
  3185  012568  86E3               	bsf	plusw1,3,c	;indir
  3186                           
  3187                           ; BSR set to: 2
  3188                           ;main.c: 342:     j = V_TEMP;
  3189  01256A  0E0B               	movlw	11
  3190  01256C  6E3D               	movwf	(btemp+11)^0,c
  3191                           
  3192                           ;stkvar	_j @ sp[(-5)+1]
  3193  01256E  0EFC               	movlw	-4
  3194  012570  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3195                           
  3196                           ; BSR set to: 2
  3197                           ;main.c: 343:     k = V_INVERTER;
  3198                           ;stkvar	_k @ sp[(-5)+0]
  3199  012576  0EFB               	movlw	-5
  3200  012578  6AE3               	clrf	plusw1,c
  3201  01257A  84E3               	bsf	plusw1,2,c
  3202  01257C  86E3               	bsf	plusw1,3,c	;indir
  3203                           
  3204                           ;main.c: 344:     break;
  3205  01257E  D028               	goto	l1285
  3206  012580                     l10946:
  3207                           
  3208                           ; BSR set to: 2
  3209                           ;main.c: 346:     i = channel_ANB5;
  3210  012580  0E0D               	movlw	13
  3211  012582  6E3D               	movwf	(btemp+11)^0,c
  3212                           
  3213                           ;stkvar	_i @ sp[(-5)+2]
  3214  012584  0EFD               	movlw	-3
  3215  012586  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3216                           
  3217                           ;main.c: 347:     j = channel_ANB5;
  3218  01258C  0E0D               	movlw	13
  3219  01258E  6E3D               	movwf	(btemp+11)^0,c
  3220                           
  3221                           ;stkvar	_j @ sp[(-5)+1]
  3222  012590  0EFC               	movlw	-4
  3223  012592  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3224                           
  3225                           ;main.c: 348:     k = channel_ANB5;
  3226  012598  0E0D               	movlw	13
  3227  01259A  6E3D               	movwf	(btemp+11)^0,c
  3228                           
  3229                           ;stkvar	_k @ sp[(-5)+0]
  3230  01259C  0EFB               	movlw	-5
  3231  01259E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3232                           
  3233                           ;main.c: 349:     break;
  3234  0125A4  D015               	goto	l1285
  3235  0125A6                     l10950:
  3236                           
  3237                           ; BSR set to: 2
  3238                           ;stkvar	_inp_index @ sp[(-5)+3]
  3239  0125A6  0EFE               	movlw	-2
  3240  0125A8  50E3               	movf	plusw1,w,c
  3241  0125AA  6E3C               	movwf	(btemp+10)^0,c
  3242  0125AC  6A3D               	clrf	(btemp+11)^0,c
  3243                           
  3244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3245                           ; Switch size 1, requested type "simple"
  3246                           ; Number of cases is 1, Range of values is 0 to 0
  3247                           ; switch strategies available:
  3248                           ; Name         Instructions Cycles
  3249                           ; simple_byte            4     3 (average)
  3250                           ;	Chosen strategy is simple_byte
  3251  0125AE  503D               	movf	(btemp+11)^0,w,c
  3252  0125B0  0A00               	xorlw	0	; case 0
  3253  0125B2  A4D8               	btfss	status,2,c
  3254  0125B4  D00D               	goto	l1285
  3255                           
  3256                           ; BSR set to: 2
  3257                           ; Switch size 1, requested type "simple"
  3258                           ; Number of cases is 4, Range of values is 0 to 9
  3259                           ; switch strategies available:
  3260                           ; Name         Instructions Cycles
  3261                           ; simple_byte           13     7 (average)
  3262                           ;	Chosen strategy is simple_byte
  3263  0125B6  503C               	movf	(btemp+10)^0,w,c
  3264  0125B8  0A00               	xorlw	0	; case 0
  3265  0125BA  B4D8               	btfsc	status,2,c
  3266  0125BC  D7BD               	goto	l10932
  3267  0125BE  0A03               	xorlw	3	; case 3
  3268  0125C0  B4D8               	btfsc	status,2,c
  3269  0125C2  D7C3               	goto	l10938
  3270  0125C4  0A05               	xorlw	5	; case 6
  3271  0125C6  B4D8               	btfsc	status,2,c
  3272  0125C8  D7CC               	goto	l10940
  3273  0125CA  0A0F               	xorlw	15	; case 9
  3274  0125CC  B4D8               	btfsc	status,2,c
  3275  0125CE  D7D8               	goto	l10946
  3276  0125D0                     l1285:
  3277                           
  3278                           ;main.c: 358:   if (V.set_sequ) {
  3279  0125D0  0102               	movlb	2	; () banked
  3280  0125D2  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  3281  0125D4  D4E4               	goto	l10866
  3282                           
  3283                           ; BSR set to: 2
  3284                           ;main.c: 359:    if (TimerDone(TMR_INFO)) {
  3285  0125D6  0E07               	movlw	7
  3286  0125D8  6EE6               	movwf	postinc1,c
  3287  0125DA  EC45  F0C6         	call	_TimerDone	;wreg free
  3288  0125DE  5032               	movf	btemp^0,w,c
  3289  0125E0  B4D8               	btfsc	status,2,c
  3290  0125E2  D00B               	goto	l10960
  3291                           
  3292                           ;main.c: 360:     V.set_sequ = 0;
  3293  0125E4  0102               	movlb	2	; () banked
  3294  0125E6  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  3295                           
  3296                           ; BSR set to: 2
  3297                           ;main.c: 361:     set_vterm(0);
  3298  0125E8  0E00               	movlw	0
  3299  0125EA  6EE6               	movwf	postinc1,c
  3300  0125EC  ECCB  F0C6         	call	_set_vterm	;wreg free
  3301                           
  3302                           ;main.c: 362:     update_lcd(0);
  3303  0125F0  0E00               	movlw	0
  3304  0125F2  6EE6               	movwf	postinc1,c
  3305  0125F4  EC4A  F0B7         	call	_update_lcd	;wreg free
  3306                           
  3307                           ;main.c: 363:    } else {
  3308  0125F8  D4D2               	goto	l10866
  3309  0125FA                     l10960:
  3310                           
  3311                           ;main.c: 364:     set_vterm(2);
  3312  0125FA  0E02               	movlw	2
  3313  0125FC  6EE6               	movwf	postinc1,c
  3314  0125FE  ECCB  F0C6         	call	_set_vterm	;wreg free
  3315                           
  3316                           ;main.c: 365:     update_lcd(2);
  3317  012602  0E02               	movlw	2
  3318  012604  6EE6               	movwf	postinc1,c
  3319  012606  EC4A  F0B7         	call	_update_lcd	;wreg free
  3320  01260A  D4C9               	goto	l10866
  3321  01260C                     __end_of_main:
  3322                           	opt callstack 0
  3323                           
  3324 ;; *************** function _static_soc *****************
  3325 ;; Defined at:
  3326 ;;		line 83 in file "mbmc.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;		None
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1  [STACK] void 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2
  3335 ;; Tracked objects:
  3336 ;;		On entry : 3F/39
  3337 ;;		On exit  : 3F/1
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3344 ;;Total ram usage:        0 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    6
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_main
  3351 ;; This function uses a reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text1
  3355  018C42                     __ptext1:
  3356                           	opt callstack 0
  3357  018C42                     _static_soc:
  3358                           	opt callstack 24
  3359                           
  3360                           ;mbmc.c: 85:  C.static_ah = C.bank_ah;
  3361                           
  3362                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3363                           ;incstack = 0
  3364  018C42  C17C  F180         	movff	_C+124,_C+128
  3365  018C46  C17D  F181         	movff	_C+125,_C+129
  3366  018C4A  C17E  F182         	movff	_C+126,_C+130
  3367  018C4E  C17F  F183         	movff	_C+127,_C+131
  3368                           
  3369                           ;mbmc.c: 86:  C.runtime = 120;
  3370  018C52  0E00               	movlw	0
  3371  018C54  0101               	movlb	1	; () banked
  3372  018C56  6F89               	movwf	(_C+137)& (0+255),b
  3373  018C58  0E78               	movlw	120
  3374  018C5A  6F88               	movwf	(_C+136)& (0+255),b
  3375                           
  3376                           ;mbmc.c: 87:  C.soc = 100;
  3377  018C5C  0E00               	movlw	0
  3378  018C5E  6F8B               	movwf	(_C+139)& (0+255),b
  3379  018C60  0E64               	movlw	100
  3380  018C62  6F8A               	movwf	(_C+138)& (0+255),b
  3381                           
  3382                           ; BSR set to: 1
  3383                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3384  018C64  0012               	return		;funcret
  3385  018C66                     __end_of_static_soc:
  3386                           	opt callstack 0
  3387                           
  3388 ;; *************** function _start_switch_handler *****************
  3389 ;; Defined at:
  3390 ;;		line 119 in file "dio.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1  [STACK] void 
  3397 ;; Registers used:
  3398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  3399 ;; Tracked objects:
  3400 ;;		On entry : 1/0
  3401 ;;		On exit  : 3F/39
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3408 ;;Total ram usage:        0 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    7
  3411 ;; This function calls:
  3412 ;;		_INT1_SetInterruptHandler
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text2
  3419  018D3A                     __ptext2:
  3420                           	opt callstack 0
  3421  018D3A                     _start_switch_handler:
  3422                           	opt callstack 23
  3423                           
  3424                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  3425                           
  3426                           ; BSR set to: 1
  3427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3428                           ;incstack = 0
  3429  018D3A  0139               	movlb	57	; () banked
  3430  018D3C  9195               	bcf	149,0,b	;volatile
  3431                           
  3432                           ; BSR set to: 57
  3433                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  3434  018D3E  0ECE               	movlw	low _switch_handler
  3435  018D40  6EE6               	movwf	postinc1,c
  3436  018D42  0E68               	movlw	high _switch_handler
  3437  018D44  6EE6               	movwf	postinc1,c
  3438  018D46  0E01               	movlw	low (_switch_handler shr (0+16))
  3439  018D48  6EE6               	movwf	postinc1,c
  3440  018D4A  EC6D  F0C5         	call	_INT1_SetInterruptHandler	;wreg free
  3441                           
  3442                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  3443  018D4E  0E02               	movlw	2
  3444  018D50  0100               	movlb	0	; () banked
  3445  018D52  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  3449  018D54  0139               	movlb	57	; () banked
  3450  018D56  8195               	bsf	149,0,b	;volatile
  3451                           
  3452                           ; BSR set to: 57
  3453                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3454  018D58  0012               	return		;funcret
  3455  018D5A                     __end_of_start_switch_handler:
  3456                           	opt callstack 0
  3457                           
  3458 ;; *************** function _start_adc_scan *****************
  3459 ;; Defined at:
  3460 ;;		line 33 in file "daq.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1  [STACK] _Bool 
  3467 ;; Registers used:
  3468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/1
  3471 ;;		On exit  : 1/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    7
  3481 ;; This function calls:
  3482 ;;		_ADCC_DischargeSampleCapacitor
  3483 ;;		_ADCC_SetADIInterruptHandler
  3484 ;;		_ADCC_SetADTIInterruptHandler
  3485 ;;		_ADCC_StartConversion
  3486 ;; This function is called by:
  3487 ;;		_main
  3488 ;; This function uses a reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text3
  3492  017FDE                     __ptext3:
  3493                           	opt callstack 0
  3494  017FDE                     _start_adc_scan:
  3495                           	opt callstack 23
  3496                           
  3497                           ;daq.c: 35:  if (R.done)
  3498                           
  3499                           ; BSR set to: 57
  3500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3501                           ;incstack = 0
  3502  017FDE  0100               	movlb	0	; () banked
  3503  017FE0  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  3504  017FE2  A4D8               	btfss	status,2,c
  3505  017FE4  0012               	return	
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;daq.c: 38:  R.scan_index = 0;
  3509  017FE6  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  3513  017FE8  013A               	movlb	58	; () banked
  3514  017FEA  5140               	movf	64,w,b	;volatile
  3515  017FEC  006E F940  F032    	movff	14928,btemp	;volatile
  3516  017FF2  6A33               	clrf	(btemp+1)^0,c
  3517  017FF4  0060  F0C8  F033   	movff	btemp,btemp+1
  3518  017FFA  6A32               	clrf	btemp^0,c
  3519  017FFC  2632               	addwf	btemp^0,f,c
  3520  017FFE  0E00               	movlw	0
  3521  018000  2233               	addwfc	(btemp+1)^0,f,c
  3522  018002  0E77               	movlw	119
  3523  018004  1432               	andwf	btemp^0,w,c
  3524  018006  0100               	movlb	0	; () banked
  3525  018008  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  3526  01800A  0E3C               	movlw	60
  3527  01800C  1433               	andwf	(btemp+1)^0,w,c
  3528  01800E  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  3532  018010  0EB4               	movlw	low _adc_int_handler
  3533  018012  6EE6               	movwf	postinc1,c
  3534  018014  0E8F               	movlw	high _adc_int_handler
  3535  018016  6EE6               	movwf	postinc1,c
  3536  018018  0E01               	movlw	low (_adc_int_handler shr (0+16))
  3537  01801A  6EE6               	movwf	postinc1,c
  3538  01801C  ECA9  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3539                           
  3540                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  3541  018020  0EBC               	movlw	low _adc_int_t_handler
  3542  018022  6EE6               	movwf	postinc1,c
  3543  018024  0E7D               	movlw	high _adc_int_t_handler
  3544  018026  6EE6               	movwf	postinc1,c
  3545  018028  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  3546  01802A  6EE6               	movwf	postinc1,c
  3547  01802C  EC95  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  3548                           
  3549                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  3550  018030  ECB7  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  3551                           
  3552                           ; BSR set to: 62
  3553                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  3554  018034  0100               	movlb	0	; () banked
  3555  018036  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  3556  018038  0B0F               	andlw	15
  3557  01803A  6EE6               	movwf	postinc1,c
  3558  01803C  EC72  F0C7         	call	_ADCC_StartConversion	;wreg free
  3559                           
  3560                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3561  018040  0012               	return		;funcret
  3562  018042                     __end_of_start_adc_scan:
  3563                           	opt callstack 0
  3564                           
  3565 ;; *************** function _ADCC_StartConversion *****************
  3566 ;; Defined at:
  3567 ;;		line 128 in file "mcc_generated_files/adcc.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  channel         1  [STACK] enum E16136
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1  [STACK] void 
  3574 ;; Registers used:
  3575 ;;		fsr1l, fsr1h
  3576 ;; Tracked objects:
  3577 ;;		On entry : 3F/0
  3578 ;;		On exit  : 3F/3E
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3585 ;;Total ram usage:        0 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    6
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_start_adc_scan
  3592 ;;		_adc_int_t_handler
  3593 ;; This function uses a reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text4
  3597  018EE4                     __ptext4:
  3598                           	opt callstack 0
  3599  018EE4                     _ADCC_StartConversion:
  3600                           	opt callstack 6
  3601                           
  3602                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3603                           ;stkvar	_channel @ sp[(0)+-1]
  3604                           
  3605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3606                           ;incstack = 0
  3607  018EE4  0EFF               	movlw	-1
  3608  018EE6  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3609                           
  3610                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3611  018EEC  013E               	movlb	62	; () banked
  3612  018EEE  8FF8               	bsf	248,7,b	;volatile
  3613                           
  3614                           ; BSR set to: 62
  3615                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3616  018EF0  81F8               	bsf	248,0,b	;volatile
  3617                           
  3618                           ; BSR set to: 62
  3619                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3620  018EF2  52E5               	movf	postdec1,f,c
  3621  018EF4  0012               	return		;funcret
  3622  018EF6                     __end_of_ADCC_StartConversion:
  3623                           	opt callstack 0
  3624                           
  3625 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3626 ;; Defined at:
  3627 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1  [STACK] void 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 3F/3E
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3645 ;;Total ram usage:        0 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    6
  3648 ;; This function calls:
  3649 ;;		Nothing
  3650 ;; This function is called by:
  3651 ;;		_start_adc_scan
  3652 ;;		_adc_int_t_handler
  3653 ;; This function uses a reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text5
  3657  018F6E                     __ptext5:
  3658                           	opt callstack 0
  3659  018F6E                     _ADCC_DischargeSampleCapacitor:
  3660                           	opt callstack 6
  3661                           
  3662                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3663                           
  3664                           ; BSR set to: 62
  3665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3666                           ;incstack = 0
  3667  018F6E  0E3B               	movlw	59
  3668  018F70  013E               	movlb	62	; () banked
  3669  018F72  6FF1               	movwf	241,b	;volatile
  3670                           
  3671                           ; BSR set to: 62
  3672                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3673  018F74  0012               	return		;funcret
  3674  018F76                     __end_of_ADCC_DischargeSampleCapacitor:
  3675                           	opt callstack 0
  3676                           
  3677 ;; *************** function _srand *****************
  3678 ;; Defined at:
  3679 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  s               2  [STACK] unsigned int 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1  [STACK] void 
  3686 ;; Registers used:
  3687 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3688 ;; Tracked objects:
  3689 ;;		On entry : 3F/0
  3690 ;;		On exit  : 3F/1
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3697 ;;Total ram usage:        0 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    6
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text6
  3708  018746                     __ptext6:
  3709                           	opt callstack 0
  3710  018746                     _srand:
  3711                           	opt callstack 24
  3712                           
  3713                           ;stkvar	_s @ sp[(0)+-2]
  3714                           
  3715                           ; BSR set to: 62
  3716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3717                           ;incstack = 0
  3718  018746  0EFE               	movlw	-2
  3719  018748  50E3               	movf	plusw1,w,c
  3720  01874A  0FFF               	addlw	255
  3721  01874C  6E3C               	movwf	(btemp+10)^0,c
  3722  01874E  0EFF               	movlw	-1
  3723  018750  006F FF8C  F03D    	movff	plusw1,btemp+11
  3724  018756  0EFF               	movlw	255
  3725  018758  223D               	addwfc	(btemp+11)^0,f,c
  3726  01875A  0060  F0F0  F1F3   	movff	btemp+10,_seed
  3727  018760  0060  F0F4  F1F4   	movff	btemp+11,_seed+1
  3728  018766  0101               	movlb	1	; () banked
  3729  018768  6BF5               	clrf	(_seed+2)& (0+255),b
  3730  01876A  6BF6               	clrf	(_seed+3)& (0+255),b
  3731  01876C  6BF7               	clrf	(_seed+4)& (0+255),b
  3732  01876E  6BF8               	clrf	(_seed+5)& (0+255),b
  3733  018770  6BF9               	clrf	(_seed+6)& (0+255),b
  3734  018772  6BFA               	clrf	(_seed+7)& (0+255),b
  3735                           
  3736                           ; BSR set to: 1
  3737                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  3738  018774  52E5               	movf	postdec1,f,c
  3739  018776  52E5               	movf	postdec1,f,c
  3740  018778  0012               	return		;funcret
  3741  01877A                     __end_of_srand:
  3742                           	opt callstack 0
  3743                           
  3744 ;; *************** function _init_display *****************
  3745 ;; Defined at:
  3746 ;;		line 37 in file "eadog.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1  [STACK] void 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/2
  3757 ;;		On exit  : 3F/3D
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3764 ;;Total ram usage:        0 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    8
  3767 ;; This function calls:
  3768 ;;		_ringBufS_init
  3769 ;;		_send_lcd_cmd
  3770 ;;		_send_lcd_cmd_long
  3771 ;;		_wdtdelay
  3772 ;; This function is called by:
  3773 ;;		_main
  3774 ;; This function uses a reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text7
  3778  0172AC                     __ptext7:
  3779                           	opt callstack 0
  3780  0172AC                     _init_display:
  3781                           	opt callstack 22
  3782                           
  3783                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3784                           
  3785                           ; BSR set to: 1
  3786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3787                           ;incstack = 0
  3788  0172AC  0E94               	movlw	low _ring_buf1
  3789  0172AE  0100               	movlb	0	; () banked
  3790  0172B0  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3791  0172B2  0E03               	movlw	high _ring_buf1
  3792  0172B4  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3793                           
  3794                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3795  0172B6  0E00               	movlw	low _ring_buf2
  3796  0172B8  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3797  0172BA  0E04               	movlw	high _ring_buf2
  3798  0172BC  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3802  0172BE  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  3803  0172C4  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  3804  0172CA  ECCD  F0C4         	call	_ringBufS_init	;wreg free
  3805                           
  3806                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3807  0172CE  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  3808  0172D4  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  3809  0172DA  ECCD  F0C4         	call	_ringBufS_init	;wreg free
  3810                           
  3811                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3812  0172DE  84BE               	bsf	190,2,c	;volatile
  3813  0172E0  84BC               	bsf	188,2,c	;volatile
  3814                           
  3815                           ;eadog.c: 48:  wdtdelay(350000);
  3816  0172E2  0E30               	movlw	48
  3817  0172E4  6EE6               	movwf	postinc1,c
  3818  0172E6  0E57               	movlw	87
  3819  0172E8  6EE6               	movwf	postinc1,c
  3820  0172EA  0E05               	movlw	5
  3821  0172EC  6EE6               	movwf	postinc1,c
  3822  0172EE  0E00               	movlw	0
  3823  0172F0  6EE6               	movwf	postinc1,c
  3824  0172F2  EC12  F0C1         	call	_wdtdelay	;wreg free
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;eadog.c: 49:  send_lcd_cmd(0x39);
  3828  0172F6  0E39               	movlw	57
  3829  0172F8  6EE6               	movwf	postinc1,c
  3830  0172FA  ECB9  F0C4         	call	_send_lcd_cmd	;wreg free
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;eadog.c: 50:  send_lcd_cmd(0x1d);
  3834  0172FE  0E1D               	movlw	29
  3835  017300  6EE6               	movwf	postinc1,c
  3836  017302  ECB9  F0C4         	call	_send_lcd_cmd	;wreg free
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;eadog.c: 51:  send_lcd_cmd(0x50);
  3840  017306  0E50               	movlw	80
  3841  017308  6EE6               	movwf	postinc1,c
  3842  01730A  ECB9  F0C4         	call	_send_lcd_cmd	;wreg free
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;eadog.c: 52:  send_lcd_cmd(0x6c);
  3846  01730E  0E6C               	movlw	108
  3847  017310  6EE6               	movwf	postinc1,c
  3848  017312  ECB9  F0C4         	call	_send_lcd_cmd	;wreg free
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;eadog.c: 53:  send_lcd_cmd(0x76);
  3852  017316  0E76               	movlw	118
  3853  017318  6EE6               	movwf	postinc1,c
  3854  01731A  ECB9  F0C4         	call	_send_lcd_cmd	;wreg free
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;eadog.c: 54:  send_lcd_cmd_long(0x38);
  3858  01731E  0E38               	movlw	56
  3859  017320  6EE6               	movwf	postinc1,c
  3860  017322  ECA5  F0C4         	call	_send_lcd_cmd_long	;wreg free
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;eadog.c: 55:  send_lcd_cmd(0x0f);
  3864  017326  0E0F               	movlw	15
  3865  017328  6EE6               	movwf	postinc1,c
  3866  01732A  ECB9  F0C4         	call	_send_lcd_cmd	;wreg free
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;eadog.c: 56:  send_lcd_cmd_long(0x01);
  3870  01732E  0E01               	movlw	1
  3871  017330  6EE6               	movwf	postinc1,c
  3872  017332  ECA5  F0C4         	call	_send_lcd_cmd_long	;wreg free
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;eadog.c: 57:  send_lcd_cmd(0x02);
  3876  017336  0E02               	movlw	2
  3877  017338  6EE6               	movwf	postinc1,c
  3878  01733A  ECB9  F0C4         	call	_send_lcd_cmd	;wreg free
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;eadog.c: 58:  send_lcd_cmd(0x06);
  3882  01733E  0E06               	movlw	6
  3883  017340  6EE6               	movwf	postinc1,c
  3884  017342  ECB9  F0C4         	call	_send_lcd_cmd	;wreg free
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;eadog.c: 59:  wdtdelay(30);
  3888  017346  0E1E               	movlw	30
  3889  017348  6EE6               	movwf	postinc1,c
  3890  01734A  0E00               	movlw	0
  3891  01734C  6EE6               	movwf	postinc1,c
  3892  01734E  0E00               	movlw	0
  3893  017350  6EE6               	movwf	postinc1,c
  3894  017352  0E00               	movlw	0
  3895  017354  6EE6               	movwf	postinc1,c
  3896  017356  EC12  F0C1         	call	_wdtdelay	;wreg free
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;eadog.c: 60:  SPI1CON2 = 0x02;
  3900  01735A  0E02               	movlw	2
  3901  01735C  013D               	movlb	61	; () banked
  3902  01735E  6F16               	movwf	22,b	;volatile
  3903                           
  3904                           ; BSR set to: 61
  3905                           ;eadog.c: 61:  SPI1CON1 = 0x40;
  3906  017360  0E40               	movlw	64
  3907  017362  6F15               	movwf	21,b	;volatile
  3908                           
  3909                           ; BSR set to: 61
  3910                           ;eadog.c: 62:  SPI1CON0 = 0x83;
  3911  017364  0E83               	movlw	131
  3912  017366  6F14               	movwf	20,b	;volatile
  3913                           
  3914                           ; BSR set to: 61
  3915                           ;eadog.c: 64:  SPI1INTFbits.SPI1TXUIF = 0;
  3916  017368  931A               	bcf	26,1,b	;volatile
  3917                           
  3918                           ; BSR set to: 61
  3919                           ;eadog.c: 65:  DMA1CON1bits.DMODE = 0;
  3920  01736A  0E3F               	movlw	-193
  3921  01736C  013B               	movlb	59	; () banked
  3922  01736E  17FD               	andwf	253,f,b	;volatile
  3923                           
  3924                           ; BSR set to: 59
  3925                           ;eadog.c: 66:  DMA1CON1bits.DSTP = 0;
  3926  017370  9BFD               	bcf	253,5,b	;volatile
  3927                           
  3928                           ; BSR set to: 59
  3929                           ;eadog.c: 67:  DMA1CON1bits.SMODE = 1;
  3930  017372  51FD               	movf	253,w,b	;volatile
  3931  017374  0BF9               	andlw	-7
  3932  017376  0902               	iorlw	2
  3933  017378  6FFD               	movwf	253,b	;volatile
  3934                           
  3935                           ; BSR set to: 59
  3936                           ;eadog.c: 68:  DMA1CON1bits.SMR = 0;
  3937  01737A  0EE7               	movlw	-25
  3938  01737C  17FD               	andwf	253,f,b	;volatile
  3939                           
  3940                           ; BSR set to: 59
  3941                           ;eadog.c: 69:  DMA1CON1bits.SSTP = 1;
  3942  01737E  81FD               	bsf	253,0,b	;volatile
  3943                           
  3944                           ; BSR set to: 59
  3945                           ;eadog.c: 70:  DMA1SSA = (uint32_t) & ring_buf1;
  3946  017380  0E94               	movlw	low _ring_buf1
  3947  017382  6FF9               	movwf	249,b	;volatile
  3948  017384  0E03               	movlw	high _ring_buf1
  3949  017386  6FFA               	movwf	250,b	;volatile
  3950  017388  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3951  01738A  6FFB               	movwf	251,b	;volatile
  3952                           
  3953                           ; BSR set to: 59
  3954                           ;eadog.c: 71:  DMA1CON0bits.DGO = 0;
  3955  01738C  9BFC               	bcf	252,5,b	;volatile
  3956                           
  3957                           ; BSR set to: 59
  3958                           ;eadog.c: 72:  SPI1INTFbits.SPI1TXUIF = 1;
  3959  01738E  013D               	movlb	61	; () banked
  3960  017390  831A               	bsf	26,1,b	;volatile
  3961                           
  3962                           ; BSR set to: 61
  3963                           ;eadog.c: 73:  LATEbits.LATE2 = 0;
  3964  017392  94BE               	bcf	190,2,c	;volatile
  3965                           
  3966                           ; BSR set to: 61
  3967                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3968  017394  0012               	return		;funcret
  3969  017396                     __end_of_init_display:
  3970                           	opt callstack 0
  3971                           
  3972 ;; *************** function _send_lcd_cmd_long *****************
  3973 ;; Defined at:
  3974 ;;		line 117 in file "eadog.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  cmd             1  [STACK] const unsigned char 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1  [STACK] void 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3983 ;; Tracked objects:
  3984 ;;		On entry : 3F/0
  3985 ;;		On exit  : 3F/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3992 ;;Total ram usage:        0 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    7
  3995 ;; This function calls:
  3996 ;;		_SPI1_Exchange8bit
  3997 ;;		_wdtdelay
  3998 ;; This function is called by:
  3999 ;;		_init_display
  4000 ;; This function uses a reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text8
  4004  01894A                     __ptext8:
  4005                           	opt callstack 0
  4006  01894A                     _send_lcd_cmd_long:
  4007                           	opt callstack 22
  4008                           
  4009                           ; BSR set to: 61
  4010                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4011                           ;incstack = 0
  4012                           ;eadog.c: 117: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 118: {;eadog.c:
      +                           119:  do { LATCbits.LATC1 = 0; } while(0);
  4013  01894A  92BC               	bcf	188,1,c	;volatile
  4014                           
  4015                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  4016  01894C  94BC               	bcf	188,2,c	;volatile
  4017                           
  4018                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  4019                           ;stkvar	_cmd @ sp[(0)+-1]
  4020  01894E  0EFF               	movlw	-1
  4021  018950  50E3               	movf	plusw1,w,c
  4022  018952  6EE6               	movwf	postinc1,c
  4023  018954  ECAD  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  4024                           
  4025                           ; BSR set to: 57
  4026                           ;eadog.c: 122:  wdtdelay(800);
  4027  018958  0E20               	movlw	32
  4028  01895A  6EE6               	movwf	postinc1,c
  4029  01895C  0E03               	movlw	3
  4030  01895E  6EE6               	movwf	postinc1,c
  4031  018960  0E00               	movlw	0
  4032  018962  6EE6               	movwf	postinc1,c
  4033  018964  0E00               	movlw	0
  4034  018966  6EE6               	movwf	postinc1,c
  4035  018968  EC12  F0C1         	call	_wdtdelay	;wreg free
  4036                           
  4037                           ; BSR set to: 0
  4038  01896C  82BC               	bsf	188,1,c	;volatile
  4039                           
  4040                           ; BSR set to: 0
  4041                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4042  01896E  52E5               	movf	postdec1,f,c
  4043  018970  0012               	return		;funcret
  4044  018972                     __end_of_send_lcd_cmd_long:
  4045                           	opt callstack 0
  4046                           
  4047 ;; *************** function _send_lcd_cmd *****************
  4048 ;; Defined at:
  4049 ;;		line 105 in file "eadog.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  cmd             1  [STACK] const unsigned char 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1  [STACK] void 
  4056 ;; Registers used:
  4057 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4058 ;; Tracked objects:
  4059 ;;		On entry : 3F/0
  4060 ;;		On exit  : 3F/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4067 ;;Total ram usage:        0 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    7
  4070 ;; This function calls:
  4071 ;;		_SPI1_Exchange8bit
  4072 ;;		_wdtdelay
  4073 ;; This function is called by:
  4074 ;;		_init_display
  4075 ;; This function uses a reentrant model
  4076 ;;
  4077                           
  4078                           	psect	text9
  4079  018972                     __ptext9:
  4080                           	opt callstack 0
  4081  018972                     _send_lcd_cmd:
  4082                           	opt callstack 22
  4083                           
  4084                           ; BSR set to: 0
  4085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4086                           ;incstack = 0
  4087                           ;eadog.c: 105: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 106: {;eadog.c: 107:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  4088  018972  92BC               	bcf	188,1,c	;volatile
  4089                           
  4090                           ;eadog.c: 108:  do { LATCbits.LATC2 = 0; } while(0);
  4091  018974  94BC               	bcf	188,2,c	;volatile
  4092                           
  4093                           ;eadog.c: 109:  SPI1_Exchange8bit(cmd);
  4094                           ;stkvar	_cmd @ sp[(0)+-1]
  4095  018976  0EFF               	movlw	-1
  4096  018978  50E3               	movf	plusw1,w,c
  4097  01897A  6EE6               	movwf	postinc1,c
  4098  01897C  ECAD  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  4099                           
  4100                           ; BSR set to: 57
  4101                           ;eadog.c: 110:  wdtdelay(30);
  4102  018980  0E1E               	movlw	30
  4103  018982  6EE6               	movwf	postinc1,c
  4104  018984  0E00               	movlw	0
  4105  018986  6EE6               	movwf	postinc1,c
  4106  018988  0E00               	movlw	0
  4107  01898A  6EE6               	movwf	postinc1,c
  4108  01898C  0E00               	movlw	0
  4109  01898E  6EE6               	movwf	postinc1,c
  4110  018990  EC12  F0C1         	call	_wdtdelay	;wreg free
  4111                           
  4112                           ; BSR set to: 0
  4113  018994  82BC               	bsf	188,1,c	;volatile
  4114                           
  4115                           ; BSR set to: 0
  4116                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4117  018996  52E5               	movf	postdec1,f,c
  4118  018998  0012               	return		;funcret
  4119  01899A                     __end_of_send_lcd_cmd:
  4120                           	opt callstack 0
  4121                           
  4122 ;; *************** function _SPI1_Exchange8bit *****************
  4123 ;; Defined at:
  4124 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  data            1  [STACK] unsigned char 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1  [STACK] unsigned char 
  4131 ;; Registers used:
  4132 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 3F/39
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4142 ;;Total ram usage:        0 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    6
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_send_lcd_cmd
  4149 ;;		_send_lcd_cmd_long
  4150 ;; This function uses a reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text10
  4154  018D5A                     __ptext10:
  4155                           	opt callstack 0
  4156  018D5A                     _SPI1_Exchange8bit:
  4157                           	opt callstack 22
  4158                           
  4159                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4160                           
  4161                           ; BSR set to: 0
  4162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4163                           ;incstack = 0
  4164  018D5A  0E01               	movlw	1
  4165  018D5C  013D               	movlb	61	; () banked
  4166  018D5E  6F12               	movwf	18,b	;volatile
  4167                           
  4168                           ; BSR set to: 61
  4169                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4170                           ;stkvar	_data @ sp[(0)+-1]
  4171  018D60  0EFF               	movlw	-1
  4172  018D62  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4173  018D68                     l835:
  4174                           
  4175                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4176  018D68  0139               	movlb	57	; () banked
  4177  018D6A  A9A2               	btfss	162,4,b	;volatile
  4178  018D6C  D7FD               	goto	l835
  4179                           
  4180                           ; BSR set to: 57
  4181                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4182  018D6E  006F F440  F032    	movff	15632,btemp	;volatile
  4183                           
  4184                           ; BSR set to: 57
  4185                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4186  018D74  52E5               	movf	postdec1,f,c
  4187  018D76  0012               	return		;funcret
  4188  018D78                     __end_of_SPI1_Exchange8bit:
  4189                           	opt callstack 0
  4190                           
  4191 ;; *************** function _ringBufS_init *****************
  4192 ;; Defined at:
  4193 ;;		line 22 in file "ringbufs.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  _this           2  [STACK] PTR volatile struct ring
  4196 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;		None
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1  [STACK] void 
  4201 ;; Registers used:
  4202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4212 ;;Total ram usage:        0 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; Hardware stack levels required when called:    7
  4215 ;; This function calls:
  4216 ;;		_memset
  4217 ;; This function is called by:
  4218 ;;		_init_display
  4219 ;; This function uses a reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text11
  4223  01899A                     __ptext11:
  4224                           	opt callstack 0
  4225  01899A                     _ringBufS_init:
  4226                           	opt callstack 22
  4227                           
  4228                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4229                           
  4230                           ; BSR set to: 57
  4231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4232                           ;incstack = 0
  4233  01899A  0E43               	movlw	67
  4234  01899C  6EE6               	movwf	postinc1,c
  4235  01899E  0E00               	movlw	0
  4236  0189A0  6EE6               	movwf	postinc1,c
  4237  0189A2  0E00               	movlw	0
  4238  0189A4  6EE6               	movwf	postinc1,c
  4239  0189A6  0E00               	movlw	0
  4240  0189A8  6EE6               	movwf	postinc1,c
  4241                           
  4242                           ;stkvar	__this @ sp[(-4)+-2]
  4243  0189AA  0EFA               	movlw	-6
  4244  0189AC  006F FF8F FFE6     	movff	plusw1,postinc1
  4245  0189B2  006F FF8F FFE6     	movff	plusw1,postinc1
  4246  0189B8  ECDF  F0A5         	call	_memset	;wreg free
  4247                           
  4248                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4249  0189BC  52E5               	movf	postdec1,f,c
  4250  0189BE  52E5               	movf	postdec1,f,c
  4251  0189C0  0012               	return		;funcret
  4252  0189C2                     __end_of_ringBufS_init:
  4253                           	opt callstack 0
  4254                           
  4255 ;; *************** function _hid_display *****************
  4256 ;; Defined at:
  4257 ;;		line 17 in file "hid.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  h               1  [STACK] PTR struct H_data
  4260 ;;		 -> H(7), 
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;		None
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1  [STACK] PTR struct H_data
  4265 ;; Registers used:
  4266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  4267 ;; Tracked objects:
  4268 ;;		On entry : 3C/1
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4276 ;;Total ram usage:        0 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:    8
  4279 ;; This function calls:
  4280 ;;		_hid_input
  4281 ;; This function is called by:
  4282 ;;		_main
  4283 ;; This function uses a reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text12
  4287  0170AE                     __ptext12:
  4288                           	opt callstack 0
  4289  0170AE                     _hid_display:
  4290                           	opt callstack 22
  4291                           
  4292                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  4293                           ;stkvar	_h @ sp[(0)+-1]
  4294                           
  4295                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4296                           ;incstack = 0
  4297  0170AE  0EFF               	movlw	-1
  4298  0170B0  50E3               	movf	plusw1,w,c
  4299  0170B2  6EE6               	movwf	postinc1,c
  4300  0170B4  ECCE  F0BD         	call	_hid_input	;wreg free
  4301                           
  4302                           ;hid.c: 21:  switch (h->h_state) {
  4303  0170B8  D066               	goto	l9248
  4304  0170BA                     l9226:
  4305                           
  4306                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  4307                           ;stkvar	_h @ sp[(0)+-1]
  4308  0170BA  0EFF               	movlw	-1
  4309  0170BC  50E3               	movf	plusw1,w,c
  4310  0170BE  6ED9               	movwf	fsr2l,c
  4311  0170C0  6ADA               	clrf	fsr2h,c
  4312  0170C2  0E01               	movlw	1
  4313  0170C4  26D9               	addwf	fsr2l,f,c
  4314  0170C6  0E01               	movlw	1
  4315  0170C8  6EDF               	movwf	indf2,c
  4316                           
  4317                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  4318                           ;stkvar	_h @ sp[(0)+-1]
  4319  0170CA  0EFF               	movlw	-1
  4320  0170CC  50E3               	movf	plusw1,w,c
  4321  0170CE  6ED9               	movwf	fsr2l,c
  4322  0170D0  6ADA               	clrf	fsr2h,c
  4323  0170D2  0E00               	movlw	0
  4324  0170D4  6EDF               	movwf	indf2,c
  4325                           
  4326                           ;hid.c: 25:   h->wait_enter = 1;
  4327                           ;stkvar	_h @ sp[(0)+-1]
  4328  0170D6  0EFF               	movlw	-1
  4329  0170D8  50E3               	movf	plusw1,w,c
  4330  0170DA  6ED9               	movwf	fsr2l,c
  4331  0170DC  6ADA               	clrf	fsr2h,c
  4332  0170DE  0E04               	movlw	4
  4333  0170E0  26D9               	addwf	fsr2l,f,c
  4334  0170E2  0E01               	movlw	1
  4335  0170E4  6EDF               	movwf	indf2,c
  4336                           
  4337                           ;hid.c: 26:   h->wait_select = 1;
  4338                           ;stkvar	_h @ sp[(0)+-1]
  4339  0170E6  0EFF               	movlw	-1
  4340  0170E8  50E3               	movf	plusw1,w,c
  4341  0170EA  6ED9               	movwf	fsr2l,c
  4342  0170EC  6ADA               	clrf	fsr2h,c
  4343  0170EE  0E02               	movlw	2
  4344  0170F0  26D9               	addwf	fsr2l,f,c
  4345  0170F2  0E01               	movlw	1
  4346  0170F4  6EDF               	movwf	indf2,c
  4347                           
  4348                           ;hid.c: 27:   h->select_p = SW_OFF;
  4349                           ;stkvar	_h @ sp[(0)+-1]
  4350  0170F6  0EFF               	movlw	-1
  4351  0170F8  50E3               	movf	plusw1,w,c
  4352  0170FA  6ED9               	movwf	fsr2l,c
  4353  0170FC  6ADA               	clrf	fsr2h,c
  4354  0170FE  0E03               	movlw	3
  4355  017100  26D9               	addwf	fsr2l,f,c
  4356  017102  0E00               	movlw	0
  4357  017104  6EDF               	movwf	indf2,c
  4358                           
  4359                           ;hid.c: 28:   h->enter_p = SW_OFF;
  4360                           ;stkvar	_h @ sp[(0)+-1]
  4361  017106  0EFF               	movlw	-1
  4362  017108  50E3               	movf	plusw1,w,c
  4363  01710A  6ED9               	movwf	fsr2l,c
  4364  01710C  6ADA               	clrf	fsr2h,c
  4365  01710E  0E05               	movlw	5
  4366  017110  26D9               	addwf	fsr2l,f,c
  4367  017112  0E00               	movlw	0
  4368  017114  D036               	goto	L1
  4369  017116                     l9238:
  4370                           
  4371                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  4372                           ;stkvar	_h @ sp[(0)+-1]
  4373  017116  0EFF               	movlw	-1
  4374  017118  50E3               	movf	plusw1,w,c
  4375  01711A  6ED9               	movwf	fsr2l,c
  4376  01711C  6ADA               	clrf	fsr2h,c
  4377  01711E  0E02               	movlw	2
  4378  017120  26D9               	addwf	fsr2l,f,c
  4379  017122  50DF               	movf	indf2,w,c
  4380  017124  A4D8               	btfss	status,2,c
  4381  017126  D042               	goto	l1820
  4382                           
  4383                           ;stkvar	_h @ sp[(0)+-1]
  4384  017128  0EFF               	movlw	-1
  4385  01712A  50E3               	movf	plusw1,w,c
  4386  01712C  6ED9               	movwf	fsr2l,c
  4387  01712E  6ADA               	clrf	fsr2h,c
  4388  017130  0E03               	movlw	3
  4389  017132  26D9               	addwf	fsr2l,f,c
  4390  017134  50DF               	movf	indf2,w,c
  4391  017136  A4D8               	btfss	status,2,c
  4392  017138  D039               	goto	l1820
  4393                           
  4394                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  4395                           ;stkvar	_h @ sp[(0)+-1]
  4396  01713A  0EFF               	movlw	-1
  4397  01713C  50E3               	movf	plusw1,w,c
  4398  01713E  6ED9               	movwf	fsr2l,c
  4399  017140  6ADA               	clrf	fsr2h,c
  4400  017142  0E06               	movlw	6
  4401  017144  26D9               	addwf	fsr2l,f,c
  4402                           
  4403                           ;stkvar	_h @ sp[(0)+-1]
  4404  017146  0EFF               	movlw	-1
  4405  017148  50E3               	movf	plusw1,w,c
  4406  01714A  6EE9               	movwf	fsr0l,c
  4407  01714C  6AEA               	clrf	fsr0h,c
  4408  01714E  0E06               	movlw	6
  4409  017150  26E9               	addwf	fsr0l,f,c
  4410  017152  2AEF               	incf	indf0,f,c
  4411  017154  50EF               	movf	indf0,w,c
  4412  017156  0B03               	andlw	3
  4413  017158  6EDF               	movwf	indf2,c
  4414                           
  4415                           ;hid.c: 34:    h->hid_display = h->sequence;
  4416                           ;stkvar	_h @ sp[(0)+-1]
  4417  01715A  0EFF               	movlw	-1
  4418  01715C  50E3               	movf	plusw1,w,c
  4419  01715E  6ED9               	movwf	fsr2l,c
  4420  017160  6ADA               	clrf	fsr2h,c
  4421  017162  0E06               	movlw	6
  4422  017164  26D9               	addwf	fsr2l,f,c
  4423                           
  4424                           ;stkvar	_h @ sp[(0)+-1]
  4425  017166  0EFF               	movlw	-1
  4426  017168  50E3               	movf	plusw1,w,c
  4427  01716A  6EE9               	movwf	fsr0l,c
  4428  01716C  6AEA               	clrf	fsr0h,c
  4429  01716E  006F FF7F FFEF     	movff	indf2,indf0
  4430                           
  4431                           ;hid.c: 35:    h->wait_select = 1;
  4432                           ;stkvar	_h @ sp[(0)+-1]
  4433  017174  0EFF               	movlw	-1
  4434  017176  50E3               	movf	plusw1,w,c
  4435  017178  6ED9               	movwf	fsr2l,c
  4436  01717A  6ADA               	clrf	fsr2h,c
  4437  01717C  0E02               	movlw	2
  4438  01717E  26D9               	addwf	fsr2l,f,c
  4439  017180  0E01               	movlw	1
  4440  017182                     L1:
  4441  017182  6EDF               	movwf	indf2,c
  4442  017184  D013               	goto	l1820
  4443  017186                     l9248:
  4444                           
  4445                           ;stkvar	_h @ sp[(0)+-1]
  4446  017186  0EFF               	movlw	-1
  4447  017188  50E3               	movf	plusw1,w,c
  4448  01718A  6ED9               	movwf	fsr2l,c
  4449  01718C  6ADA               	clrf	fsr2h,c
  4450  01718E  0E01               	movlw	1
  4451  017190  26D9               	addwf	fsr2l,f,c
  4452  017192  50DF               	movf	indf2,w,c
  4453  017194  6E3C               	movwf	(btemp+10)^0,c
  4454  017196  6A3D               	clrf	(btemp+11)^0,c
  4455                           
  4456                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4457                           ; Switch size 1, requested type "simple"
  4458                           ; Number of cases is 1, Range of values is 0 to 0
  4459                           ; switch strategies available:
  4460                           ; Name         Instructions Cycles
  4461                           ; simple_byte            4     3 (average)
  4462                           ;	Chosen strategy is simple_byte
  4463  017198  503D               	movf	(btemp+11)^0,w,c
  4464  01719A  0A00               	xorlw	0	; case 0
  4465  01719C  A4D8               	btfss	status,2,c
  4466  01719E  D7BB               	goto	l9238
  4467                           
  4468                           ; Switch size 1, requested type "simple"
  4469                           ; Number of cases is 2, Range of values is 0 to 1
  4470                           ; switch strategies available:
  4471                           ; Name         Instructions Cycles
  4472                           ; simple_byte            7     4 (average)
  4473                           ;	Chosen strategy is simple_byte
  4474  0171A0  503C               	movf	(btemp+10)^0,w,c
  4475  0171A2  0A00               	xorlw	0	; case 0
  4476  0171A4  B4D8               	btfsc	status,2,c
  4477  0171A6  D789               	goto	l9226
  4478  0171A8  0A01               	xorlw	1	; case 1
  4479  0171AA  D7B5               	goto	l9238
  4480  0171AC                     l1820:
  4481                           
  4482                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4483  0171AC  52E5               	movf	postdec1,f,c
  4484  0171AE  0012               	return		;funcret
  4485  0171B0                     __end_of_hid_display:
  4486                           	opt callstack 0
  4487                           
  4488 ;; *************** function _hid_input *****************
  4489 ;; Defined at:
  4490 ;;		line 3 in file "hid.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  h               1  [STACK] PTR struct H_data
  4493 ;;		 -> H(7), 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;		None
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1  [STACK] PTR struct H_data
  4498 ;; Registers used:
  4499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/1
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4509 ;;Total ram usage:        0 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    7
  4512 ;; This function calls:
  4513 ;;		_get_switch
  4514 ;; This function is called by:
  4515 ;;		_hid_display
  4516 ;; This function uses a reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text13
  4520  017B9C                     __ptext13:
  4521                           	opt callstack 0
  4522  017B9C                     _hid_input:
  4523                           	opt callstack 22
  4524                           
  4525                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  4526                           
  4527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4528                           ;incstack = 0
  4529  017B9C  0E02               	movlw	2
  4530  017B9E  6EE6               	movwf	postinc1,c
  4531  017BA0  ECE1  F0C4         	call	_get_switch	;wreg free
  4532  017BA4  5032               	movf	btemp^0,w,c
  4533  017BA6  B4D8               	btfsc	status,2,c
  4534  017BA8  D01C               	goto	l8992
  4535                           
  4536                           ;hid.c: 6:   h->wait_select = 0;
  4537                           ;stkvar	_h @ sp[(0)+-1]
  4538  017BAA  0EFF               	movlw	-1
  4539  017BAC  50E3               	movf	plusw1,w,c
  4540  017BAE  6ED9               	movwf	fsr2l,c
  4541  017BB0  6ADA               	clrf	fsr2h,c
  4542  017BB2  0E02               	movlw	2
  4543  017BB4  26D9               	addwf	fsr2l,f,c
  4544  017BB6  0E00               	movlw	0
  4545  017BB8  6EDF               	movwf	indf2,c
  4546                           
  4547                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  4548  017BBA  0E02               	movlw	2
  4549  017BBC  6EE6               	movwf	postinc1,c
  4550  017BBE  ECE1  F0C4         	call	_get_switch	;wreg free
  4551  017BC2  5032               	movf	btemp^0,w,c
  4552  017BC4  B4D8               	btfsc	status,2,c
  4553  017BC6  D003               	goto	u8470
  4554  017BC8  6A3D               	clrf	(btemp+11)^0,c
  4555  017BCA  2A3D               	incf	(btemp+11)^0,f,c
  4556  017BCC  D001               	goto	u8488
  4557  017BCE                     u8470:
  4558  017BCE  6A3D               	clrf	(btemp+11)^0,c
  4559  017BD0                     u8488:
  4560                           
  4561                           ;stkvar	_h @ sp[(0)+-1]
  4562  017BD0  0EFF               	movlw	-1
  4563  017BD2  50E3               	movf	plusw1,w,c
  4564  017BD4  6ED9               	movwf	fsr2l,c
  4565  017BD6  6ADA               	clrf	fsr2h,c
  4566  017BD8  0E03               	movlw	3
  4567  017BDA  26D9               	addwf	fsr2l,f,c
  4568  017BDC  0060  F0F7  FFDF   	movff	btemp+11,indf2
  4569  017BE2                     l8992:
  4570                           
  4571                           ;hid.c: 10:  if (get_switch(SENTER)) {
  4572  017BE2  0E03               	movlw	3
  4573  017BE4  6EE6               	movwf	postinc1,c
  4574  017BE6  ECE1  F0C4         	call	_get_switch	;wreg free
  4575  017BEA  5032               	movf	btemp^0,w,c
  4576  017BEC  B4D8               	btfsc	status,2,c
  4577  017BEE  D01C               	goto	l1811
  4578                           
  4579                           ;hid.c: 11:   h->wait_enter = 0;
  4580                           ;stkvar	_h @ sp[(0)+-1]
  4581  017BF0  0EFF               	movlw	-1
  4582  017BF2  50E3               	movf	plusw1,w,c
  4583  017BF4  6ED9               	movwf	fsr2l,c
  4584  017BF6  6ADA               	clrf	fsr2h,c
  4585  017BF8  0E04               	movlw	4
  4586  017BFA  26D9               	addwf	fsr2l,f,c
  4587  017BFC  0E00               	movlw	0
  4588  017BFE  6EDF               	movwf	indf2,c
  4589                           
  4590                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  4591  017C00  0E03               	movlw	3
  4592  017C02  6EE6               	movwf	postinc1,c
  4593  017C04  ECE1  F0C4         	call	_get_switch	;wreg free
  4594  017C08  5032               	movf	btemp^0,w,c
  4595  017C0A  B4D8               	btfsc	status,2,c
  4596  017C0C  D003               	goto	u8500
  4597  017C0E  6A3D               	clrf	(btemp+11)^0,c
  4598  017C10  2A3D               	incf	(btemp+11)^0,f,c
  4599  017C12  D001               	goto	u8518
  4600  017C14                     u8500:
  4601  017C14  6A3D               	clrf	(btemp+11)^0,c
  4602  017C16                     u8518:
  4603                           
  4604                           ;stkvar	_h @ sp[(0)+-1]
  4605  017C16  0EFF               	movlw	-1
  4606  017C18  50E3               	movf	plusw1,w,c
  4607  017C1A  6ED9               	movwf	fsr2l,c
  4608  017C1C  6ADA               	clrf	fsr2h,c
  4609  017C1E  0E05               	movlw	5
  4610  017C20  26D9               	addwf	fsr2l,f,c
  4611  017C22  0060  F0F7  FFDF   	movff	btemp+11,indf2
  4612  017C28                     l1811:
  4613                           
  4614                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4615  017C28  52E5               	movf	postdec1,f,c
  4616  017C2A  0012               	return		;funcret
  4617  017C2C                     __end_of_hid_input:
  4618                           	opt callstack 0
  4619                           
  4620 ;; *************** function _get_switch *****************
  4621 ;; Defined at:
  4622 ;;		line 18 in file "dio.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  i               1  [STACK] unsigned char 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;		None
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1  [STACK] enum E17013
  4629 ;; Registers used:
  4630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/2
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4640 ;;Total ram usage:        0 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:    6
  4643 ;; This function calls:
  4644 ;;		Nothing
  4645 ;; This function is called by:
  4646 ;;		_main
  4647 ;;		_hid_input
  4648 ;; This function uses a reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text14
  4652  0189C2                     __ptext14:
  4653                           	opt callstack 0
  4654  0189C2                     _get_switch:
  4655                           	opt callstack 22
  4656                           
  4657                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  4658                           ;stkvar	_i @ sp[(0)+-1]
  4659                           
  4660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4661                           ;incstack = 0
  4662  0189C2  0EFF               	movlw	-1
  4663  0189C4  006F FF8C  F032    	movff	plusw1,btemp
  4664  0189CA  0E03               	movlw	3
  4665  0189CC  6432               	cpfsgt	btemp^0,c
  4666  0189CE  D002               	goto	l8308
  4667                           
  4668                           ;dio.c: 21:   return SW_OFF;
  4669  0189D0  0E00               	movlw	0
  4670  0189D2  D008               	goto	L2
  4671  0189D4                     l8308:
  4672                           
  4673                           ;dio.c: 23:  return S.button[i].sw;
  4674                           ;stkvar	_i @ sp[(0)+-1]
  4675  0189D4  0EFF               	movlw	-1
  4676  0189D6  50E3               	movf	plusw1,w,c
  4677  0189D8  0D05               	mullw	5
  4678  0189DA  50F3               	movf	243,w,c
  4679  0189DC  0F60               	addlw	low _S
  4680  0189DE  6ED9               	movwf	fsr2l,c
  4681  0189E0  6ADA               	clrf	fsr2h,c
  4682  0189E2  50DF               	movf	indf2,w,c
  4683  0189E4                     L2:
  4684  0189E4  6E32               	movwf	btemp^0,c
  4685                           
  4686                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4687  0189E6  52E5               	movf	postdec1,f,c
  4688  0189E8  0012               	return		;funcret
  4689  0189EA                     __end_of_get_switch:
  4690                           	opt callstack 0
  4691                           
  4692 ;; *************** function _eaDogM_WriteCommand *****************
  4693 ;; Defined at:
  4694 ;;		line 163 in file "eadog.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  cmd             1  [STACK] const unsigned char 
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;		None
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1  [STACK] void 
  4701 ;; Registers used:
  4702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4703 ;; Tracked objects:
  4704 ;;		On entry : 3F/3D
  4705 ;;		On exit  : 3F/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4712 ;;Total ram usage:        0 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:   16
  4715 ;; This function calls:
  4716 ;;		_send_lcd_cmd_dma
  4717 ;; This function is called by:
  4718 ;;		_main
  4719 ;; This function uses a reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text15
  4723  018F06                     __ptext15:
  4724                           	opt callstack 0
  4725  018F06                     _eaDogM_WriteCommand:
  4726                           	opt callstack 14
  4727                           
  4728                           ;eadog.c: 163: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 164: {;eadog.c: 165:
      +                            send_lcd_cmd_dma(cmd);
  4729                           ;stkvar	_cmd @ sp[(0)+-1]
  4730                           
  4731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4732                           ;incstack = 0
  4733  018F06  0EFF               	movlw	-1
  4734  018F08  50E3               	movf	plusw1,w,c
  4735  018F0A  6EE6               	movwf	postinc1,c
  4736  018F0C  EC6C  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  4737                           
  4738                           ; BSR set to: 0
  4739                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  4740  018F10  52E5               	movf	postdec1,f,c
  4741  018F12  0012               	return		;funcret
  4742  018F14                     __end_of_eaDogM_WriteCommand:
  4743                           	opt callstack 0
  4744                           
  4745 ;; *************** function _convert_adc_data *****************
  4746 ;; Defined at:
  4747 ;;		line 39 in file "mbmc.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  i               1  [STACK] unsigned char 
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1  [STACK] void 
  4754 ;; Registers used:
  4755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/1
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4765 ;;Total ram usage:        0 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    9
  4768 ;; This function calls:
  4769 ;;		_conv_raw_result
  4770 ;;		_lp_filter
  4771 ;; This function is called by:
  4772 ;;		_main
  4773 ;; This function uses a reentrant model
  4774 ;;
  4775                           
  4776                           	psect	text16
  4777  0175EA                     __ptext16:
  4778                           	opt callstack 0
  4779  0175EA                     _convert_adc_data:
  4780                           	opt callstack 0
  4781                           
  4782                           ; BSR set to: 0
  4783                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4784  0175EA  52E6               	movf	postinc1,f,c
  4785                           
  4786                           ;mbmc.c: 41:  uint8_t i = 0;
  4787                           ;stkvar	_i @ sp[(-1)+0]
  4788                           
  4789                           ;incstack = 0
  4790  0175EC  0EFF               	movlw	-1
  4791  0175EE  6AE3               	clrf	plusw1,c
  4792  0175F0                     l9202:
  4793                           
  4794                           ;mbmc.c: 44:   if (V.calib) {
  4795  0175F0  0102               	movlb	2	; () banked
  4796  0175F2  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4797  0175F4  B4D8               	btfsc	status,2,c
  4798  0175F6  D01B               	goto	l9206
  4799                           
  4800                           ; BSR set to: 2
  4801                           ;mbmc.c: 45:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  4802  0175F8  0E01               	movlw	1
  4803  0175FA  6EE6               	movwf	postinc1,c
  4804                           
  4805                           ;stkvar	_i @ sp[(-2)+0]
  4806  0175FC  0EFE               	movlw	-2
  4807  0175FE  50E3               	movf	plusw1,w,c
  4808  017600  6EE6               	movwf	postinc1,c
  4809  017602  0E01               	movlw	1
  4810  017604  6EE6               	movwf	postinc1,c
  4811                           
  4812                           ;stkvar	_i @ sp[(-4)+0]
  4813  017606  0EFC               	movlw	-4
  4814  017608  50E3               	movf	plusw1,w,c
  4815  01760A  6EE6               	movwf	postinc1,c
  4816  01760C  ECB6  F09D         	call	_conv_raw_result	;wreg free
  4817  017610  0060  F0CB  FFE6   	movff	btemp,postinc1
  4818  017616  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4819  01761C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4820  017622  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4821  017628  ECAB  F0B0         	call	_lp_filter	;wreg free
  4822  01762C  D01A               	goto	L3
  4823  01762E                     l9206:
  4824                           
  4825                           ; BSR set to: 2
  4826                           ;mbmc.c: 47:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  4827  01762E  0E00               	movlw	0
  4828  017630  6EE6               	movwf	postinc1,c
  4829                           
  4830                           ;stkvar	_i @ sp[(-2)+0]
  4831  017632  0EFE               	movlw	-2
  4832  017634  50E3               	movf	plusw1,w,c
  4833  017636  6EE6               	movwf	postinc1,c
  4834  017638  0E00               	movlw	0
  4835  01763A  6EE6               	movwf	postinc1,c
  4836                           
  4837                           ;stkvar	_i @ sp[(-4)+0]
  4838  01763C  0EFC               	movlw	-4
  4839  01763E  50E3               	movf	plusw1,w,c
  4840  017640  6EE6               	movwf	postinc1,c
  4841  017642  ECB6  F09D         	call	_conv_raw_result	;wreg free
  4842  017646  0060  F0CB  FFE6   	movff	btemp,postinc1
  4843  01764C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4844  017652  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4845  017658  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4846  01765E  ECAB  F0B0         	call	_lp_filter	;wreg free
  4847  017662                     L3:
  4848                           
  4849                           ;stkvar	_i @ sp[(-1)+0]
  4850  017662  0EFF               	movlw	-1
  4851  017664  50E3               	movf	plusw1,w,c
  4852  017666  0D04               	mullw	4
  4853  017668  0E00               	movlw	low _C
  4854  01766A  24F3               	addwf	243,w,c
  4855  01766C  6ED9               	movwf	fsr2l,c
  4856  01766E  0E01               	movlw	high _C
  4857  017670  20F4               	addwfc	prodh,w,c
  4858  017672  6EDA               	movwf	fsr2h,c
  4859  017674  0060  F0CB  FFDE   	movff	btemp,postinc2
  4860  01767A  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  4861  017680  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  4862  017686  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  4863                           
  4864                           ;mbmc.c: 49:  } while (++i < 16);
  4865                           ;stkvar	_i @ sp[(-1)+0]
  4866  01768C  0EFF               	movlw	-1
  4867  01768E  2AE3               	incf	plusw1,f,c
  4868  017690  0EFF               	movlw	-1
  4869  017692  006F FF8C  F032    	movff	plusw1,btemp
  4870  017698  0E0F               	movlw	15
  4871  01769A  6432               	cpfsgt	btemp^0,c
  4872  01769C  D7A9               	goto	l9202
  4873                           
  4874                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  4875  01769E  52E5               	movf	postdec1,f,c
  4876  0176A0  0012               	return		;funcret
  4877  0176A2                     __end_of_convert_adc_data:
  4878                           	opt callstack 0
  4879                           
  4880 ;; *************** function _conv_raw_result *****************
  4881 ;; Defined at:
  4882 ;;		line 80 in file "daq.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;  chan            1  [STACK] const enum E16136
  4885 ;;  to_what         1  [STACK] const enum E16198
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;		None
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  4  [STACK] float 
  4890 ;; Registers used:
  4891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4892 ;; Tracked objects:
  4893 ;;		On entry : 3F/2
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4901 ;;Total ram usage:        0 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:    8
  4904 ;; This function calls:
  4905 ;;		___fldiv
  4906 ;;		___flmul
  4907 ;;		___flsub
  4908 ;;		___xxtofl
  4909 ;;		_get_raw_result
  4910 ;;		_nanf
  4911 ;; This function is called by:
  4912 ;;		_convert_adc_data
  4913 ;; This function uses a reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text17
  4917  013B6C                     __ptext17:
  4918                           	opt callstack 0
  4919  013B6C                     _conv_raw_result:
  4920                           	opt callstack 21
  4921                           
  4922                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  4923                           
  4924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4925                           ;incstack = 0
  4926  013B6C  D242               	goto	l8926
  4927  013B6E                     l8872:
  4928                           
  4929                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  4930                           ;stkvar	_chan @ sp[(0)+-1]
  4931  013B6E  0EFF               	movlw	-1
  4932  013B70  006F FF8C  F03D    	movff	plusw1,btemp+11
  4933  013B76  0E77               	movlw	119
  4934  013B78  6E3A               	movwf	(btemp+8)^0,c
  4935  013B7A  0E3C               	movlw	60
  4936  013B7C  6E3B               	movwf	(btemp+9)^0,c
  4937  013B7E  2A3D               	incf	(btemp+11)^0,f,c
  4938  013B80  D003               	goto	u8244
  4939  013B82                     u8245:
  4940  013B82  343B               	rlcf	(btemp+9)^0,w,c
  4941  013B84  323B               	rrcf	(btemp+9)^0,f,c
  4942  013B86  323A               	rrcf	(btemp+8)^0,f,c
  4943  013B88                     u8244:
  4944  013B88  2E3D               	decfsz	(btemp+11)^0,f,c
  4945  013B8A  D7FB               	goto	u8245
  4946  013B8C  B03A               	btfsc	(btemp+8)^0,0,c
  4947  013B8E  D007               	goto	l8878
  4948                           
  4949                           ;daq.c: 86:    return nanf("");
  4950  013B90  0E6B               	movlw	low (STR_39+18)
  4951  013B92  6EE6               	movwf	postinc1,c
  4952  013B94  0EFE               	movlw	high (STR_39+18)
  4953  013B96  6EE6               	movwf	postinc1,c
  4954  013B98  EC53  F0C0         	call	_nanf	;wreg free
  4955  013B9C  D23A               	goto	l1687
  4956  013B9E                     l8878:
  4957                           
  4958                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  4959                           ;stkvar	_chan @ sp[(0)+-1]
  4960  013B9E  0EFF               	movlw	-1
  4961  013BA0  006F FF8C  F03D    	movff	plusw1,btemp+11
  4962  013BA6  0E03               	movlw	3
  4963  013BA8  6E3A               	movwf	(btemp+8)^0,c
  4964  013BAA  0E00               	movlw	0
  4965  013BAC  6E3B               	movwf	(btemp+9)^0,c
  4966  013BAE  2A3D               	incf	(btemp+11)^0,f,c
  4967  013BB0  D003               	goto	u8264
  4968  013BB2                     u8265:
  4969  013BB2  343B               	rlcf	(btemp+9)^0,w,c
  4970  013BB4  323B               	rrcf	(btemp+9)^0,f,c
  4971  013BB6  323A               	rrcf	(btemp+8)^0,f,c
  4972  013BB8                     u8264:
  4973  013BB8  2E3D               	decfsz	(btemp+11)^0,f,c
  4974  013BBA  D7FB               	goto	u8265
  4975  013BBC  A03A               	btfss	(btemp+8)^0,0,c
  4976  013BBE  D0EB               	goto	l8892
  4977                           
  4978                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  4979                           ;stkvar	_chan @ sp[(0)+-1]
  4980  013BC0  0EFF               	movlw	-1
  4981  013BC2  006F FF8C  F03D    	movff	plusw1,btemp+11
  4982  013BC8  0E01               	movlw	1
  4983  013BCA  6E3A               	movwf	(btemp+8)^0,c
  4984  013BCC  0E00               	movlw	0
  4985  013BCE  6E3B               	movwf	(btemp+9)^0,c
  4986  013BD0  2A3D               	incf	(btemp+11)^0,f,c
  4987  013BD2  D003               	goto	u8284
  4988  013BD4                     u8285:
  4989  013BD4  343B               	rlcf	(btemp+9)^0,w,c
  4990  013BD6  323B               	rrcf	(btemp+9)^0,f,c
  4991  013BD8  323A               	rrcf	(btemp+8)^0,f,c
  4992  013BDA                     u8284:
  4993  013BDA  2E3D               	decfsz	(btemp+11)^0,f,c
  4994  013BDC  D7FB               	goto	u8285
  4995  013BDE  A03A               	btfss	(btemp+8)^0,0,c
  4996  013BE0  D06D               	goto	l8888
  4997                           
  4998                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  4999  013BE2  0E7B               	movlw	123
  5000  013BE4  6EE6               	movwf	postinc1,c
  5001  013BE6  0E14               	movlw	20
  5002  013BE8  6EE6               	movwf	postinc1,c
  5003  013BEA  0EAE               	movlw	174
  5004  013BEC  6EE6               	movwf	postinc1,c
  5005  013BEE  0E3D               	movlw	61
  5006  013BF0  6EE6               	movwf	postinc1,c
  5007  013BF2  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  5008  013BF8  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  5009  013BFE  0E00               	movlw	0
  5010  013C00  BE3B               	btfsc	(btemp+9)^0,7,c
  5011  013C02  0EFF               	movlw	255
  5012  013C04  6E3C               	movwf	(btemp+10)^0,c
  5013  013C06  6E3D               	movwf	(btemp+11)^0,c
  5014  013C08  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  5015  013C0E  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  5016  013C14  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5017  013C1A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5018  013C20  0E01               	movlw	1
  5019  013C22  6EE6               	movwf	postinc1,c
  5020  013C24  ECC5  F0AE         	call	___xxtofl	;wreg free
  5021  013C28  0060  F0CB  FFE6   	movff	btemp,postinc1
  5022  013C2E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5023  013C34  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5024  013C3A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5025                           
  5026                           ;stkvar	_chan @ sp[(-8)+-1]
  5027  013C40  0EF7               	movlw	-9
  5028  013C42  50E3               	movf	plusw1,w,c
  5029  013C44  6EE6               	movwf	postinc1,c
  5030  013C46  ECBC  F0C6         	call	_get_raw_result	;wreg free
  5031  013C4A  0060  F0C8  F03C   	movff	btemp,btemp+10
  5032  013C50  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5033  013C56  503C               	movf	(btemp+10)^0,w,c
  5034  013C58  6E36               	movwf	(btemp+4)^0,c
  5035  013C5A  503D               	movf	(btemp+11)^0,w,c
  5036  013C5C  6E37               	movwf	(btemp+5)^0,c
  5037  013C5E  6A38               	clrf	(btemp+6)^0,c
  5038  013C60  6A39               	clrf	(btemp+7)^0,c
  5039  013C62  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5040  013C68  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5041  013C6E  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5042  013C74  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5043  013C7A  0E00               	movlw	0
  5044  013C7C  6EE6               	movwf	postinc1,c
  5045  013C7E  ECC5  F0AE         	call	___xxtofl	;wreg free
  5046  013C82  0060  F0CB  FFE6   	movff	btemp,postinc1
  5047  013C88  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5048  013C8E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5049  013C94  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5050  013C9A  EC05  F0C2         	call	___flsub	;wreg free
  5051  013C9E  0060  F0CB  FFE6   	movff	btemp,postinc1
  5052  013CA4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5053  013CAA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5054  013CB0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5055  013CB6  EC06  F093         	call	___flmul	;wreg free
  5056  013CBA  D1AB               	goto	l1687
  5057  013CBC                     l8888:
  5058                           
  5059                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  5060  013CBC  0E29               	movlw	41
  5061  013CBE  6EE6               	movwf	postinc1,c
  5062  013CC0  0E5C               	movlw	92
  5063  013CC2  6EE6               	movwf	postinc1,c
  5064  013CC4  0E0F               	movlw	15
  5065  013CC6  6EE6               	movwf	postinc1,c
  5066  013CC8  0E3D               	movlw	61
  5067  013CCA  6EE6               	movwf	postinc1,c
  5068  013CCC  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  5069  013CD2  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  5070  013CD8  0E00               	movlw	0
  5071  013CDA  BE3B               	btfsc	(btemp+9)^0,7,c
  5072  013CDC  0EFF               	movlw	255
  5073  013CDE  6E3C               	movwf	(btemp+10)^0,c
  5074  013CE0  6E3D               	movwf	(btemp+11)^0,c
  5075  013CE2  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  5076  013CE8  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  5077  013CEE  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5078  013CF4  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5079  013CFA  0E01               	movlw	1
  5080  013CFC  6EE6               	movwf	postinc1,c
  5081  013CFE  ECC5  F0AE         	call	___xxtofl	;wreg free
  5082  013D02  0060  F0CB  FFE6   	movff	btemp,postinc1
  5083  013D08  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5084  013D0E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5085  013D14  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5086                           
  5087                           ;stkvar	_chan @ sp[(-8)+-1]
  5088  013D1A  0EF7               	movlw	-9
  5089  013D1C  50E3               	movf	plusw1,w,c
  5090  013D1E  6EE6               	movwf	postinc1,c
  5091  013D20  ECBC  F0C6         	call	_get_raw_result	;wreg free
  5092  013D24  0060  F0C8  F03C   	movff	btemp,btemp+10
  5093  013D2A  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5094  013D30  503C               	movf	(btemp+10)^0,w,c
  5095  013D32  6E36               	movwf	(btemp+4)^0,c
  5096  013D34  503D               	movf	(btemp+11)^0,w,c
  5097  013D36  6E37               	movwf	(btemp+5)^0,c
  5098  013D38  6A38               	clrf	(btemp+6)^0,c
  5099  013D3A  6A39               	clrf	(btemp+7)^0,c
  5100  013D3C  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5101  013D42  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5102  013D48  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5103  013D4E  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5104  013D54  0E00               	movlw	0
  5105  013D56  6EE6               	movwf	postinc1,c
  5106  013D58  ECC5  F0AE         	call	___xxtofl	;wreg free
  5107  013D5C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5108  013D62  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5109  013D68  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5110  013D6E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5111  013D74  EC05  F0C2         	call	___flsub	;wreg free
  5112  013D78  0060  F0CB  FFE6   	movff	btemp,postinc1
  5113  013D7E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5114  013D84  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5115  013D8A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5116  013D90  EC06  F093         	call	___flmul	;wreg free
  5117  013D94  D13E               	goto	l1687
  5118  013D96                     l8892:
  5119                           
  5120                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  5121                           ;stkvar	_chan @ sp[(0)+-1]
  5122  013D96  0EFF               	movlw	-1
  5123  013D98  006F FF8C  F03D    	movff	plusw1,btemp+11
  5124  013D9E  0E00               	movlw	0
  5125  013DA0  6E3A               	movwf	(btemp+8)^0,c
  5126  013DA2  0E08               	movlw	8
  5127  013DA4  6E3B               	movwf	(btemp+9)^0,c
  5128  013DA6  2A3D               	incf	(btemp+11)^0,f,c
  5129  013DA8  D003               	goto	u8304
  5130  013DAA                     u8305:
  5131  013DAA  343B               	rlcf	(btemp+9)^0,w,c
  5132  013DAC  323B               	rrcf	(btemp+9)^0,f,c
  5133  013DAE  323A               	rrcf	(btemp+8)^0,f,c
  5134  013DB0                     u8304:
  5135  013DB0  2E3D               	decfsz	(btemp+11)^0,f,c
  5136  013DB2  D7FB               	goto	u8305
  5137  013DB4  A03A               	btfss	(btemp+8)^0,0,c
  5138  013DB6  D008               	goto	l8900
  5139                           
  5140                           ;daq.c: 96:     return 25.0;
  5141  013DB8  0E00               	movlw	0
  5142  013DBA  6E32               	movwf	btemp^0,c
  5143  013DBC  0E00               	movlw	0
  5144  013DBE  6E33               	movwf	(btemp+1)^0,c
  5145  013DC0  0EC8               	movlw	200
  5146  013DC2  6E34               	movwf	(btemp+2)^0,c
  5147  013DC4  0E41               	movlw	65
  5148  013DC6  D113               	goto	L4
  5149  013DC8                     l8900:
  5150                           
  5151                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5152  013DC8  0E00               	movlw	0
  5153  013DCA  6EE6               	movwf	postinc1,c
  5154  013DCC  0E00               	movlw	0
  5155  013DCE  6EE6               	movwf	postinc1,c
  5156  013DD0  0E7A               	movlw	122
  5157  013DD2  6EE6               	movwf	postinc1,c
  5158  013DD4  0E44               	movlw	68
  5159  013DD6  6EE6               	movwf	postinc1,c
  5160  013DD8  0E61               	movlw	97
  5161  013DDA  6EE6               	movwf	postinc1,c
  5162  013DDC  0E03               	movlw	3
  5163  013DDE  6EE6               	movwf	postinc1,c
  5164  013DE0  0E84               	movlw	132
  5165  013DE2  6EE6               	movwf	postinc1,c
  5166  013DE4  0E40               	movlw	64
  5167  013DE6  6EE6               	movwf	postinc1,c
  5168                           
  5169                           ;stkvar	_chan @ sp[(-8)+-1]
  5170  013DE8  0EF7               	movlw	-9
  5171  013DEA  50E3               	movf	plusw1,w,c
  5172  013DEC  6EE6               	movwf	postinc1,c
  5173  013DEE  ECBC  F0C6         	call	_get_raw_result	;wreg free
  5174  013DF2  0060  F0C8  F03C   	movff	btemp,btemp+10
  5175  013DF8  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5176  013DFE  503C               	movf	(btemp+10)^0,w,c
  5177  013E00  6E36               	movwf	(btemp+4)^0,c
  5178  013E02  503D               	movf	(btemp+11)^0,w,c
  5179  013E04  6E37               	movwf	(btemp+5)^0,c
  5180  013E06  6A38               	clrf	(btemp+6)^0,c
  5181  013E08  6A39               	clrf	(btemp+7)^0,c
  5182  013E0A  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5183  013E10  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5184  013E16  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5185  013E1C  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5186  013E22  0E00               	movlw	0
  5187  013E24  6EE6               	movwf	postinc1,c
  5188  013E26  ECC5  F0AE         	call	___xxtofl	;wreg free
  5189  013E2A  0060  F0CB  FFE6   	movff	btemp,postinc1
  5190  013E30  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5191  013E36  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5192  013E3C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5193  013E42  EC06  F093         	call	___flmul	;wreg free
  5194  013E46  0060  F0CB  FFE6   	movff	btemp,postinc1
  5195  013E4C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5196  013E52  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5197  013E58  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5198  013E5E  ECF9  F09A         	call	___fldiv	;wreg free
  5199  013E62  D0D7               	goto	l1687
  5200  013E64                     l8904:
  5201                           
  5202                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  5203                           ;stkvar	_chan @ sp[(0)+-1]
  5204  013E64  0EFF               	movlw	-1
  5205  013E66  006F FF8C  F03D    	movff	plusw1,btemp+11
  5206  013E6C  0E03               	movlw	3
  5207  013E6E  6E3A               	movwf	(btemp+8)^0,c
  5208  013E70  0E00               	movlw	0
  5209  013E72  6E3B               	movwf	(btemp+9)^0,c
  5210  013E74  2A3D               	incf	(btemp+11)^0,f,c
  5211  013E76  D003               	goto	u8324
  5212  013E78                     u8325:
  5213  013E78  343B               	rlcf	(btemp+9)^0,w,c
  5214  013E7A  323B               	rrcf	(btemp+9)^0,f,c
  5215  013E7C  323A               	rrcf	(btemp+8)^0,f,c
  5216  013E7E                     u8324:
  5217  013E7E  2E3D               	decfsz	(btemp+11)^0,f,c
  5218  013E80  D7FB               	goto	u8325
  5219  013E82  B03A               	btfsc	(btemp+8)^0,0,c
  5220  013E84  D011               	goto	u8350
  5221                           
  5222                           ;stkvar	_chan @ sp[(0)+-1]
  5223  013E86  0EFF               	movlw	-1
  5224  013E88  006F FF8C  F03D    	movff	plusw1,btemp+11
  5225  013E8E  0E00               	movlw	0
  5226  013E90  6E3A               	movwf	(btemp+8)^0,c
  5227  013E92  0E08               	movlw	8
  5228  013E94  6E3B               	movwf	(btemp+9)^0,c
  5229  013E96  2A3D               	incf	(btemp+11)^0,f,c
  5230  013E98  D003               	goto	u8344
  5231  013E9A                     u8345:
  5232  013E9A  343B               	rlcf	(btemp+9)^0,w,c
  5233  013E9C  323B               	rrcf	(btemp+9)^0,f,c
  5234  013E9E  323A               	rrcf	(btemp+8)^0,f,c
  5235  013EA0                     u8344:
  5236  013EA0  2E3D               	decfsz	(btemp+11)^0,f,c
  5237  013EA2  D7FB               	goto	u8345
  5238  013EA4  A03A               	btfss	(btemp+8)^0,0,c
  5239  013EA6  D04E               	goto	l8912
  5240  013EA8                     u8350:
  5241                           
  5242                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  5243  013EA8  0E00               	movlw	0
  5244  013EAA  6EE6               	movwf	postinc1,c
  5245  013EAC  0E00               	movlw	0
  5246  013EAE  6EE6               	movwf	postinc1,c
  5247  013EB0  0E7A               	movlw	122
  5248  013EB2  6EE6               	movwf	postinc1,c
  5249  013EB4  0E44               	movlw	68
  5250  013EB6  6EE6               	movwf	postinc1,c
  5251  013EB8  0E00               	movlw	0
  5252  013EBA  6EE6               	movwf	postinc1,c
  5253  013EBC  0E00               	movlw	0
  5254  013EBE  6EE6               	movwf	postinc1,c
  5255  013EC0  0E20               	movlw	32
  5256  013EC2  6EE6               	movwf	postinc1,c
  5257  013EC4  0E3F               	movlw	63
  5258  013EC6  6EE6               	movwf	postinc1,c
  5259                           
  5260                           ;stkvar	_chan @ sp[(-8)+-1]
  5261  013EC8  0EF7               	movlw	-9
  5262  013ECA  50E3               	movf	plusw1,w,c
  5263  013ECC  6EE6               	movwf	postinc1,c
  5264  013ECE  ECBC  F0C6         	call	_get_raw_result	;wreg free
  5265  013ED2  0060  F0C8  F03C   	movff	btemp,btemp+10
  5266  013ED8  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5267  013EDE  503C               	movf	(btemp+10)^0,w,c
  5268  013EE0  6E36               	movwf	(btemp+4)^0,c
  5269  013EE2  503D               	movf	(btemp+11)^0,w,c
  5270  013EE4  6E37               	movwf	(btemp+5)^0,c
  5271  013EE6  6A38               	clrf	(btemp+6)^0,c
  5272  013EE8  6A39               	clrf	(btemp+7)^0,c
  5273  013EEA  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5274  013EF0  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5275  013EF6  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5276  013EFC  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5277  013F02  0E00               	movlw	0
  5278  013F04  6EE6               	movwf	postinc1,c
  5279  013F06  ECC5  F0AE         	call	___xxtofl	;wreg free
  5280  013F0A  0060  F0CB  FFE6   	movff	btemp,postinc1
  5281  013F10  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5282  013F16  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5283  013F1C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5284  013F22  EC06  F093         	call	___flmul	;wreg free
  5285  013F26  0060  F0CB  FFE6   	movff	btemp,postinc1
  5286  013F2C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5287  013F32  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5288  013F38  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5289  013F3E  ECF9  F09A         	call	___fldiv	;wreg free
  5290  013F42  D067               	goto	l1687
  5291  013F44                     l8912:
  5292                           
  5293                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5294  013F44  0E00               	movlw	0
  5295  013F46  6EE6               	movwf	postinc1,c
  5296  013F48  0E00               	movlw	0
  5297  013F4A  6EE6               	movwf	postinc1,c
  5298  013F4C  0E7A               	movlw	122
  5299  013F4E  6EE6               	movwf	postinc1,c
  5300  013F50  0E44               	movlw	68
  5301  013F52  6EE6               	movwf	postinc1,c
  5302  013F54  0E61               	movlw	97
  5303  013F56  6EE6               	movwf	postinc1,c
  5304  013F58  0E03               	movlw	3
  5305  013F5A  6EE6               	movwf	postinc1,c
  5306  013F5C  0E84               	movlw	132
  5307  013F5E  6EE6               	movwf	postinc1,c
  5308  013F60  0E40               	movlw	64
  5309  013F62  6EE6               	movwf	postinc1,c
  5310                           
  5311                           ;stkvar	_chan @ sp[(-8)+-1]
  5312  013F64  0EF7               	movlw	-9
  5313  013F66  50E3               	movf	plusw1,w,c
  5314  013F68  6EE6               	movwf	postinc1,c
  5315  013F6A  ECBC  F0C6         	call	_get_raw_result	;wreg free
  5316  013F6E  0060  F0C8  F03C   	movff	btemp,btemp+10
  5317  013F74  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5318  013F7A  503C               	movf	(btemp+10)^0,w,c
  5319  013F7C  6E36               	movwf	(btemp+4)^0,c
  5320  013F7E  503D               	movf	(btemp+11)^0,w,c
  5321  013F80  6E37               	movwf	(btemp+5)^0,c
  5322  013F82  6A38               	clrf	(btemp+6)^0,c
  5323  013F84  6A39               	clrf	(btemp+7)^0,c
  5324  013F86  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5325  013F8C  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5326  013F92  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5327  013F98  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5328  013F9E  0E00               	movlw	0
  5329  013FA0  6EE6               	movwf	postinc1,c
  5330  013FA2  ECC5  F0AE         	call	___xxtofl	;wreg free
  5331  013FA6  0060  F0CB  FFE6   	movff	btemp,postinc1
  5332  013FAC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5333  013FB2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5334  013FB8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5335  013FBE  EC06  F093         	call	___flmul	;wreg free
  5336  013FC2  0060  F0CB  FFE6   	movff	btemp,postinc1
  5337  013FC8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5338  013FCE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5339  013FD4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5340  013FDA  ECF9  F09A         	call	___fldiv	;wreg free
  5341  013FDE  D019               	goto	l1687
  5342  013FE0                     l8918:
  5343                           
  5344                           ;daq.c: 109:   return 0.0;
  5345  013FE0  0E00               	movlw	0
  5346  013FE2  6E32               	movwf	btemp^0,c
  5347  013FE4  0E00               	movlw	0
  5348  013FE6  6E33               	movwf	(btemp+1)^0,c
  5349  013FE8  0E00               	movlw	0
  5350  013FEA  6E34               	movwf	(btemp+2)^0,c
  5351  013FEC  0E00               	movlw	0
  5352  013FEE                     L4:
  5353  013FEE  6E35               	movwf	(btemp+3)^0,c
  5354  013FF0  D010               	goto	l1687
  5355  013FF2                     l8926:
  5356                           
  5357                           ;stkvar	_to_what @ sp[(0)+-2]
  5358  013FF2  0EFE               	movlw	-2
  5359  013FF4  50E3               	movf	plusw1,w,c
  5360  013FF6  6E3C               	movwf	(btemp+10)^0,c
  5361  013FF8  6A3D               	clrf	(btemp+11)^0,c
  5362                           
  5363                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5364                           ; Switch size 1, requested type "simple"
  5365                           ; Number of cases is 1, Range of values is 0 to 0
  5366                           ; switch strategies available:
  5367                           ; Name         Instructions Cycles
  5368                           ; simple_byte            4     3 (average)
  5369                           ;	Chosen strategy is simple_byte
  5370  013FFA  503D               	movf	(btemp+11)^0,w,c
  5371  013FFC  0A00               	xorlw	0	; case 0
  5372  013FFE  A4D8               	btfss	status,2,c
  5373  014000  D7EF               	goto	l8918
  5374                           
  5375                           ; Switch size 1, requested type "simple"
  5376                           ; Number of cases is 2, Range of values is 0 to 1
  5377                           ; switch strategies available:
  5378                           ; Name         Instructions Cycles
  5379                           ; simple_byte            7     4 (average)
  5380                           ;	Chosen strategy is simple_byte
  5381  014002  503C               	movf	(btemp+10)^0,w,c
  5382  014004  0A00               	xorlw	0	; case 0
  5383  014006  B4D8               	btfsc	status,2,c
  5384  014008  D5B2               	goto	l8872
  5385  01400A  0A01               	xorlw	1	; case 1
  5386  01400C  B4D8               	btfsc	status,2,c
  5387  01400E  D72A               	goto	l8904
  5388  014010  D7E7               	goto	l8918
  5389  014012                     l1687:
  5390                           
  5391                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  5392  014012  52E5               	movf	postdec1,f,c
  5393  014014  52E5               	movf	postdec1,f,c
  5394  014016  0012               	return		;funcret
  5395  014018                     __end_of_conv_raw_result:
  5396                           	opt callstack 0
  5397                           
  5398 ;; *************** function _nanf *****************
  5399 ;; Defined at:
  5400 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  s               2  [STACK] PTR const unsigned char 
  5403 ;;		 -> STR_45(1), 
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;  u               4  [STACK] struct .
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  4  [STACK] float 
  5408 ;; Registers used:
  5409 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/2
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5419 ;;Total ram usage:        0 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:    6
  5422 ;; This function calls:
  5423 ;;		Nothing
  5424 ;; This function is called by:
  5425 ;;		_conv_raw_result
  5426 ;; This function uses a reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text18
  5430  0180A6                     __ptext18:
  5431                           	opt callstack 0
  5432  0180A6                     _nanf:
  5433                           	opt callstack 0
  5434                           
  5435                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5436  0180A6  52E6               	movf	postinc1,f,c
  5437  0180A8  52E6               	movf	postinc1,f,c
  5438  0180AA  52E6               	movf	postinc1,f,c
  5439  0180AC  52E6               	movf	postinc1,f,c
  5440                           
  5441                           ;incstack = 0
  5442  0180AE  0EFF               	movlw	255
  5443  0180B0  6E3A               	movwf	(btemp+8)^0,c
  5444  0180B2  0EFF               	movlw	255
  5445  0180B4  6E3B               	movwf	(btemp+9)^0,c
  5446  0180B6  0EFF               	movlw	255
  5447  0180B8  6E3C               	movwf	(btemp+10)^0,c
  5448  0180BA  0E7F               	movlw	127
  5449  0180BC  6E3D               	movwf	(btemp+11)^0,c
  5450                           
  5451                           ;stkvar	_u @ sp[(-4)+0]
  5452  0180BE  0EFC               	movlw	-4
  5453  0180C0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5454  0180C6  0EFD               	movlw	-3
  5455  0180C8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5456  0180CE  0EFE               	movlw	-2
  5457  0180D0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5458  0180D6  0EFF               	movlw	-1
  5459  0180D8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5460                           
  5461                           ;stkvar	_u @ sp[(-4)+0]
  5462  0180DE  0EFC               	movlw	-4
  5463  0180E0  006F FF8C  F032    	movff	plusw1,btemp
  5464  0180E6  0EFD               	movlw	-3
  5465  0180E8  006F FF8C  F033    	movff	plusw1,btemp+1
  5466  0180EE  0EFE               	movlw	-2
  5467  0180F0  006F FF8C  F034    	movff	plusw1,btemp+2
  5468  0180F6  0EFF               	movlw	-1
  5469  0180F8  006F FF8C  F035    	movff	plusw1,btemp+3
  5470                           
  5471                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  5472  0180FE  0EFA               	movlw	250
  5473  018100  26E1               	addwf	fsr1l,f,c
  5474  018102  0EFF               	movlw	255
  5475  018104  22E2               	addwfc	fsr1h,f,c
  5476  018106  0012               	return		;funcret
  5477  018108                     __end_of_nanf:
  5478                           	opt callstack 0
  5479                           
  5480 ;; *************** function _get_raw_result *****************
  5481 ;; Defined at:
  5482 ;;		line 72 in file "daq.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  index           1  [STACK] const enum E16136
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  2  [STACK] unsigned short 
  5489 ;; Registers used:
  5490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/2
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5500 ;;Total ram usage:        0 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    6
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_main
  5507 ;;		_conv_raw_result
  5508 ;; This function uses a reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text19
  5512  018D78                     __ptext19:
  5513                           	opt callstack 0
  5514  018D78                     _get_raw_result:
  5515                           	opt callstack 24
  5516                           
  5517                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  5518                           ;stkvar	_index @ sp[(0)+-1]
  5519                           
  5520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5521                           ;incstack = 0
  5522  018D78  0EFF               	movlw	-1
  5523  018D7A  50E3               	movf	plusw1,w,c
  5524  018D7C  0D02               	mullw	2
  5525  018D7E  50F3               	movf	243,w,c
  5526  018D80  0FC7               	addlw	low _R
  5527  018D82  6ED9               	movwf	fsr2l,c
  5528  018D84  6ADA               	clrf	fsr2h,c
  5529  018D86  006F FF78  F032    	movff	postinc2,btemp
  5530  018D8C  006F FF74  F033    	movff	postdec2,btemp+1
  5531                           
  5532                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  5533  018D92  52E5               	movf	postdec1,f,c
  5534  018D94  0012               	return		;funcret
  5535  018D96                     __end_of_get_raw_result:
  5536                           	opt callstack 0
  5537                           
  5538 ;; *************** function ___xxtofl *****************
  5539 ;; Defined at:
  5540 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  sign            1  [STACK] unsigned char 
  5543 ;;  val             4  [STACK] long 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  arg             4  [STACK] unsigned long 
  5546 ;;  exp             1  [STACK] unsigned char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  4  [STACK] unsigned char 
  5549 ;; Registers used:
  5550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/2
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5560 ;;Total ram usage:        0 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    6
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		_conv_raw_result
  5567 ;; This function uses a reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text20
  5571  015D8A                     __ptext20:
  5572                           	opt callstack 0
  5573  015D8A                     ___xxtofl:
  5574                           	opt callstack 0
  5575                           
  5576                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5577  015D8A  0E05               	movlw	5
  5578  015D8C  26E1               	addwf	fsr1l,f,c
  5579  015D8E  0E00               	movlw	0
  5580  015D90  22E2               	addwfc	fsr1h,f,c
  5581                           
  5582                           ;stkvar	_sign @ sp[(-5)+-1]
  5583                           
  5584                           ;incstack = 0
  5585  015D92  0EFA               	movlw	-6
  5586  015D94  50E3               	movf	plusw1,w,c
  5587  015D96  B4D8               	btfsc	status,2,c
  5588  015D98  D01D               	goto	l8326
  5589                           
  5590                           ;stkvar	_val @ sp[(-5)+-5]
  5591  015D9A  0EF9               	movlw	-7
  5592  015D9C  AEE3               	btfss	plusw1,7,c
  5593  015D9E  D01A               	goto	l8326
  5594                           
  5595                           ;stkvar	_val @ sp[(-5)+-5]
  5596  015DA0  0EF6               	movlw	-10
  5597  015DA2  006F FF8C  F03A    	movff	plusw1,btemp+8
  5598  015DA8  0EF7               	movlw	-9
  5599  015DAA  006F FF8C  F03B    	movff	plusw1,btemp+9
  5600  015DB0  0EF8               	movlw	-8
  5601  015DB2  006F FF8C  F03C    	movff	plusw1,btemp+10
  5602  015DB8  0EF9               	movlw	-7
  5603  015DBA  006F FF8C  F03D    	movff	plusw1,btemp+11
  5604  015DC0  1E3A               	comf	(btemp+8)^0,f,c
  5605  015DC2  1E3B               	comf	(btemp+9)^0,f,c
  5606  015DC4  1E3C               	comf	(btemp+10)^0,f,c
  5607  015DC6  1E3D               	comf	(btemp+11)^0,f,c
  5608  015DC8  2A3A               	incf	(btemp+8)^0,f,c
  5609  015DCA  0E00               	movlw	0
  5610  015DCC  223B               	addwfc	(btemp+9)^0,f,c
  5611  015DCE  223C               	addwfc	(btemp+10)^0,f,c
  5612  015DD0  223D               	addwfc	(btemp+11)^0,f,c
  5613  015DD2  D010               	goto	L5
  5614  015DD4                     l8326:
  5615                           
  5616                           ;stkvar	_val @ sp[(-5)+-5]
  5617  015DD4  0EF6               	movlw	-10
  5618  015DD6  006F FF8C  F03A    	movff	plusw1,btemp+8
  5619  015DDC  0EF7               	movlw	-9
  5620  015DDE  006F FF8C  F03B    	movff	plusw1,btemp+9
  5621  015DE4  0EF8               	movlw	-8
  5622  015DE6  006F FF8C  F03C    	movff	plusw1,btemp+10
  5623  015DEC  0EF9               	movlw	-7
  5624  015DEE  006F FF8C  F03D    	movff	plusw1,btemp+11
  5625  015DF4                     L5:
  5626                           
  5627                           ;stkvar	_arg @ sp[(-5)+0]
  5628  015DF4  0EFB               	movlw	-5
  5629  015DF6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5630  015DFC  0EFC               	movlw	-4
  5631  015DFE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5632  015E04  0EFD               	movlw	-3
  5633  015E06  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5634  015E0C  0EFE               	movlw	-2
  5635  015E0E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5636                           
  5637                           ;stkvar	_val @ sp[(-5)+-5]
  5638  015E14  0EF6               	movlw	-10
  5639  015E16  50E3               	movf	plusw1,w,c
  5640  015E18  E113               	bnz	l8334
  5641  015E1A  0EF7               	movlw	-9
  5642  015E1C  50E3               	movf	plusw1,w,c
  5643  015E1E  E110               	bnz	l8334
  5644  015E20  0EF8               	movlw	-8
  5645  015E22  50E3               	movf	plusw1,w,c
  5646  015E24  E10D               	bnz	l8334
  5647  015E26  0EF9               	movlw	-7
  5648  015E28  50E3               	movf	plusw1,w,c
  5649  015E2A  A4D8               	btfss	status,2,c
  5650  015E2C  D009               	goto	l8334
  5651  015E2E  0E00               	movlw	0
  5652  015E30  6E32               	movwf	btemp^0,c
  5653  015E32  0E00               	movlw	0
  5654  015E34  6E33               	movwf	(btemp+1)^0,c
  5655  015E36  0E00               	movlw	0
  5656  015E38  6E34               	movwf	(btemp+2)^0,c
  5657  015E3A  0E00               	movlw	0
  5658  015E3C  6E35               	movwf	(btemp+3)^0,c
  5659  015E3E  D0A2               	goto	l2769
  5660  015E40                     l8334:
  5661  015E40  0E96               	movlw	150
  5662  015E42  6E3D               	movwf	(btemp+11)^0,c
  5663                           
  5664                           ;stkvar	_exp @ sp[(-5)+4]
  5665  015E44  0EFF               	movlw	-1
  5666  015E46  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5667  015E4C  D00B               	goto	l8338
  5668  015E4E                     l8336:
  5669                           
  5670                           ;stkvar	_exp @ sp[(-5)+4]
  5671  015E4E  0EFF               	movlw	-1
  5672  015E50  2AE3               	incf	plusw1,f,c
  5673                           
  5674                           ;stkvar	_arg @ sp[(-5)+0]
  5675  015E52  90D8               	bcf	status,0,c
  5676  015E54  0EFE               	movlw	-2
  5677  015E56  32E3               	rrcf	plusw1,f,c
  5678  015E58  0EFD               	movlw	-3
  5679  015E5A  32E3               	rrcf	plusw1,f,c
  5680  015E5C  0EFC               	movlw	-4
  5681  015E5E  32E3               	rrcf	plusw1,f,c
  5682  015E60  0EFB               	movlw	-5
  5683  015E62  32E3               	rrcf	plusw1,f,c
  5684  015E64                     l8338:
  5685                           
  5686                           ;stkvar	_arg @ sp[(-5)+0]
  5687  015E64  50E1               	movf	fsr1l,w,c
  5688  015E66  0FFB               	addlw	-5
  5689  015E68  6ED9               	movwf	fsr2l,c
  5690  015E6A  50E2               	movf	fsr1h,w,c
  5691  015E6C  6EDA               	movwf	fsr2h,c
  5692  015E6E  0EFF               	movlw	255
  5693  015E70  22DA               	addwfc	fsr2h,f,c
  5694  015E72  52DE               	movf	postinc2,f,c
  5695  015E74  52DE               	movf	postinc2,f,c
  5696  015E76  52DE               	movf	postinc2,f,c
  5697  015E78  0EFE               	movlw	254
  5698  015E7A  14DD               	andwf	postdec2,w,c
  5699  015E7C  B4D8               	btfsc	status,2,c
  5700  015E7E  D018               	goto	l8346
  5701  015E80  D7E6               	goto	l8336
  5702  015E82                     l8340:
  5703                           
  5704                           ;stkvar	_exp @ sp[(-5)+4]
  5705  015E82  0EFF               	movlw	-1
  5706  015E84  2AE3               	incf	plusw1,f,c
  5707                           
  5708                           ;stkvar	_arg @ sp[(-5)+0]
  5709  015E86  50E1               	movf	fsr1l,w,c
  5710  015E88  0FFB               	addlw	-5
  5711  015E8A  6ED9               	movwf	fsr2l,c
  5712  015E8C  50E2               	movf	fsr1h,w,c
  5713  015E8E  6EDA               	movwf	fsr2h,c
  5714  015E90  0EFF               	movlw	255
  5715  015E92  22DA               	addwfc	fsr2h,f,c
  5716  015E94  2ADE               	incf	postinc2,f,c
  5717  015E96  0E00               	movlw	0
  5718  015E98  22DE               	addwfc	postinc2,f,c
  5719  015E9A  22DE               	addwfc	postinc2,f,c
  5720  015E9C  22DE               	addwfc	postinc2,f,c
  5721                           
  5722                           ;stkvar	_arg @ sp[(-5)+0]
  5723  015E9E  90D8               	bcf	status,0,c
  5724  015EA0  0EFE               	movlw	-2
  5725  015EA2  32E3               	rrcf	plusw1,f,c
  5726  015EA4  0EFD               	movlw	-3
  5727  015EA6  32E3               	rrcf	plusw1,f,c
  5728  015EA8  0EFC               	movlw	-4
  5729  015EAA  32E3               	rrcf	plusw1,f,c
  5730  015EAC  0EFB               	movlw	-5
  5731  015EAE  32E3               	rrcf	plusw1,f,c
  5732  015EB0                     l8346:
  5733                           
  5734                           ;stkvar	_arg @ sp[(-5)+0]
  5735  015EB0  50E1               	movf	fsr1l,w,c
  5736  015EB2  0FFB               	addlw	-5
  5737  015EB4  6ED9               	movwf	fsr2l,c
  5738  015EB6  50E2               	movf	fsr1h,w,c
  5739  015EB8  6EDA               	movwf	fsr2h,c
  5740  015EBA  0EFF               	movlw	255
  5741  015EBC  22DA               	addwfc	fsr2h,f,c
  5742  015EBE  52DE               	movf	postinc2,f,c
  5743  015EC0  52DE               	movf	postinc2,f,c
  5744  015EC2  52DE               	movf	postinc2,f,c
  5745  015EC4  0EFF               	movlw	255
  5746  015EC6  14DD               	andwf	postdec2,w,c
  5747  015EC8  B4D8               	btfsc	status,2,c
  5748  015ECA  D00C               	goto	l8350
  5749  015ECC  D7DA               	goto	l8340
  5750  015ECE                     l8348:
  5751                           
  5752                           ;stkvar	_exp @ sp[(-5)+4]
  5753  015ECE  0EFF               	movlw	-1
  5754  015ED0  06E3               	decf	plusw1,f,c
  5755                           
  5756                           ;stkvar	_arg @ sp[(-5)+0]
  5757  015ED2  90D8               	bcf	status,0,c
  5758  015ED4  0EFB               	movlw	-5
  5759  015ED6  36E3               	rlcf	plusw1,f,c
  5760  015ED8  0EFC               	movlw	-4
  5761  015EDA  36E3               	rlcf	plusw1,f,c
  5762  015EDC  0EFD               	movlw	-3
  5763  015EDE  36E3               	rlcf	plusw1,f,c
  5764  015EE0  0EFE               	movlw	-2
  5765  015EE2  36E3               	rlcf	plusw1,f,c
  5766  015EE4                     l8350:
  5767                           
  5768                           ;stkvar	_arg @ sp[(-5)+0]
  5769  015EE4  0EFD               	movlw	-3
  5770  015EE6  BEE3               	btfsc	plusw1,7,c
  5771  015EE8  D007               	goto	u8040
  5772                           
  5773                           ;stkvar	_exp @ sp[(-5)+4]
  5774  015EEA  0EFF               	movlw	-1
  5775  015EEC  006F FF8C  F032    	movff	plusw1,btemp
  5776  015EF2  0E02               	movlw	2
  5777  015EF4  6032               	cpfslt	btemp^0,c
  5778  015EF6  D7EB               	goto	l8348
  5779  015EF8                     u8040:
  5780                           
  5781                           ;stkvar	_exp @ sp[(-5)+4]
  5782  015EF8  0EFF               	movlw	-1
  5783  015EFA  B0E3               	btfsc	plusw1,0,c
  5784  015EFC  D002               	goto	l8358
  5785                           
  5786                           ;stkvar	_arg @ sp[(-5)+0]
  5787  015EFE  0EFD               	movlw	-3
  5788  015F00  9EE3               	bcf	plusw1,7,c
  5789  015F02                     l8358:
  5790                           
  5791                           ;stkvar	_exp @ sp[(-5)+4]
  5792  015F02  50E1               	movf	fsr1l,w,c
  5793  015F04  0FFF               	addlw	-1
  5794  015F06  6ED9               	movwf	fsr2l,c
  5795  015F08  50E2               	movf	fsr1h,w,c
  5796  015F0A  6EDA               	movwf	fsr2h,c
  5797  015F0C  0EFF               	movlw	255
  5798  015F0E  22DA               	addwfc	fsr2h,f,c
  5799  015F10  90D8               	bcf	status,0,c
  5800  015F12  32DF               	rrcf	indf2,f,c
  5801                           
  5802                           ;stkvar	_exp @ sp[(-5)+4]
  5803  015F14  0EFF               	movlw	-1
  5804  015F16  006F FF8C  F03D    	movff	plusw1,btemp+11
  5805  015F1C  0060  F0F4  F036   	movff	btemp+11,btemp+4
  5806  015F22  6A37               	clrf	(btemp+5)^0,c
  5807  015F24  6A38               	clrf	(btemp+6)^0,c
  5808  015F26  6A39               	clrf	(btemp+7)^0,c
  5809  015F28  0060  F0D8  F039   	movff	btemp+4,btemp+7
  5810  015F2E  6A38               	clrf	(btemp+6)^0,c
  5811  015F30  6A37               	clrf	(btemp+5)^0,c
  5812  015F32  6A36               	clrf	(btemp+4)^0,c
  5813                           
  5814                           ;stkvar	_arg @ sp[(-5)+0]
  5815  015F34  50E1               	movf	fsr1l,w,c
  5816  015F36  0FFB               	addlw	-5
  5817  015F38  6ED9               	movwf	fsr2l,c
  5818  015F3A  50E2               	movf	fsr1h,w,c
  5819  015F3C  6EDA               	movwf	fsr2h,c
  5820  015F3E  0EFF               	movlw	255
  5821  015F40  22DA               	addwfc	fsr2h,f,c
  5822  015F42  5036               	movf	(btemp+4)^0,w,c
  5823  015F44  12DE               	iorwf	postinc2,f,c
  5824  015F46  5037               	movf	(btemp+5)^0,w,c
  5825  015F48  12DE               	iorwf	postinc2,f,c
  5826  015F4A  5038               	movf	(btemp+6)^0,w,c
  5827  015F4C  12DE               	iorwf	postinc2,f,c
  5828  015F4E  5039               	movf	(btemp+7)^0,w,c
  5829  015F50  12DE               	iorwf	postinc2,f,c
  5830                           
  5831                           ;stkvar	_sign @ sp[(-5)+-1]
  5832  015F52  0EFA               	movlw	-6
  5833  015F54  50E3               	movf	plusw1,w,c
  5834  015F56  B4D8               	btfsc	status,2,c
  5835  015F58  D005               	goto	l8368
  5836                           
  5837                           ;stkvar	_val @ sp[(-5)+-5]
  5838  015F5A  0EF9               	movlw	-7
  5839  015F5C  AEE3               	btfss	plusw1,7,c
  5840  015F5E  D002               	goto	l8368
  5841                           
  5842                           ;stkvar	_arg @ sp[(-5)+0]
  5843  015F60  0EFE               	movlw	-2
  5844  015F62  8EE3               	bsf	plusw1,7,c
  5845  015F64                     l8368:
  5846                           
  5847                           ;stkvar	_arg @ sp[(-5)+0]
  5848  015F64  0EFB               	movlw	-5
  5849  015F66  006F FF8C  F032    	movff	plusw1,btemp
  5850  015F6C  0EFC               	movlw	-4
  5851  015F6E  006F FF8C  F033    	movff	plusw1,btemp+1
  5852  015F74  0EFD               	movlw	-3
  5853  015F76  006F FF8C  F034    	movff	plusw1,btemp+2
  5854  015F7C  0EFE               	movlw	-2
  5855  015F7E  006F FF8C  F035    	movff	plusw1,btemp+3
  5856  015F84                     l2769:
  5857                           
  5858                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  5859  015F84  0EF6               	movlw	246
  5860  015F86  26E1               	addwf	fsr1l,f,c
  5861  015F88  0EFF               	movlw	255
  5862  015F8A  22E2               	addwfc	fsr1h,f,c
  5863  015F8C  0012               	return		;funcret
  5864  015F8E                     __end_of___xxtofl:
  5865                           	opt callstack 0
  5866                           
  5867 ;; *************** function _clear_hid_pflags *****************
  5868 ;; Defined at:
  5869 ;;		line 51 in file "hid.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;  h               1  [STACK] PTR struct H_data
  5872 ;;		 -> H(7), 
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  1  [STACK] void 
  5877 ;; Registers used:
  5878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/2
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5888 ;;Total ram usage:        0 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    6
  5891 ;; This function calls:
  5892 ;;		Nothing
  5893 ;; This function is called by:
  5894 ;;		_main
  5895 ;; This function uses a reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text21
  5899  018C66                     __ptext21:
  5900                           	opt callstack 0
  5901  018C66                     _clear_hid_pflags:
  5902                           	opt callstack 24
  5903                           
  5904                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  5905                           ;stkvar	_h @ sp[(0)+-1]
  5906                           
  5907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5908                           ;incstack = 0
  5909  018C66  0EFF               	movlw	-1
  5910  018C68  50E3               	movf	plusw1,w,c
  5911  018C6A  6ED9               	movwf	fsr2l,c
  5912  018C6C  6ADA               	clrf	fsr2h,c
  5913  018C6E  0E03               	movlw	3
  5914  018C70  26D9               	addwf	fsr2l,f,c
  5915  018C72  0E00               	movlw	0
  5916  018C74  6EDF               	movwf	indf2,c
  5917                           
  5918                           ;hid.c: 54:  h->enter_p = SW_OFF;
  5919                           ;stkvar	_h @ sp[(0)+-1]
  5920  018C76  0EFF               	movlw	-1
  5921  018C78  50E3               	movf	plusw1,w,c
  5922  018C7A  6ED9               	movwf	fsr2l,c
  5923  018C7C  6ADA               	clrf	fsr2h,c
  5924  018C7E  0E05               	movlw	5
  5925  018C80  26D9               	addwf	fsr2l,f,c
  5926  018C82  0E00               	movlw	0
  5927  018C84  6EDF               	movwf	indf2,c
  5928                           
  5929                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5930  018C86  52E5               	movf	postdec1,f,c
  5931  018C88  0012               	return		;funcret
  5932  018C8A                     __end_of_clear_hid_pflags:
  5933                           	opt callstack 0
  5934                           
  5935 ;; *************** function _clear_adc_scan *****************
  5936 ;; Defined at:
  5937 ;;		line 64 in file "daq.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;		None
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;		None
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  1  [STACK] void 
  5944 ;; Registers used:
  5945 ;;		None
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/1
  5948 ;;		On exit  : 3F/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5955 ;;Total ram usage:        0 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:    6
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_main
  5962 ;; This function uses a reentrant model
  5963 ;;
  5964                           
  5965                           	psect	text22
  5966  018F96                     __ptext22:
  5967                           	opt callstack 0
  5968  018F96                     _clear_adc_scan:
  5969                           	opt callstack 24
  5970                           
  5971                           ;daq.c: 66:  R.done = 0;
  5972                           
  5973                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5974                           ;incstack = 0
  5975  018F96  0100               	movlb	0	; () banked
  5976  018F98  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  5977                           
  5978                           ; BSR set to: 0
  5979                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  5980  018F9A  0012               	return		;funcret
  5981  018F9C                     __end_of_clear_adc_scan:
  5982                           	opt callstack 0
  5983                           
  5984 ;; *************** function _check_help *****************
  5985 ;; Defined at:
  5986 ;;		line 40 in file "mconfig.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  flipper         1  [STACK] const _Bool 
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;  estatus         1    0        _Bool 
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1  [STACK] _Bool 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5995 ;; Tracked objects:
  5996 ;;		On entry : 3F/2
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6004 ;;Total ram usage:        0 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:   18
  6007 ;; This function calls:
  6008 ;;		_StartTimer
  6009 ;;		_TimerDone
  6010 ;;		_display_help
  6011 ;;		_display_info
  6012 ;;		_get_vterm_ptr
  6013 ;;		_help_button
  6014 ;;		_mode_lamp_bright
  6015 ;;		_mode_lamp_dim
  6016 ;;		_set_display_info
  6017 ;;		_set_temp_display_help
  6018 ;;		_set_vterm
  6019 ;;		_sprintf
  6020 ;;		_update_lcd
  6021 ;;		_vterm_dump
  6022 ;; This function is called by:
  6023 ;;		_main
  6024 ;; This function uses a reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text23
  6028  015B78                     __ptext23:
  6029                           	opt callstack 0
  6030  015B78                     _check_help:
  6031                           	opt callstack 12
  6032                           
  6033                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  6034                           
  6035                           ; BSR set to: 0
  6036                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6037                           ;incstack = 0
  6038  015B78  EC51  F0C3         	call	_help_button	;wreg free
  6039  015B7C  5032               	movf	btemp^0,w,c
  6040  015B7E  B4D8               	btfsc	status,2,c
  6041  015B80  D0D0               	goto	l10762
  6042  015B82  ECBB  F0C7         	call	_display_info	;wreg free
  6043  015B86  0432               	decf	btemp^0,w,c
  6044  015B88  B4D8               	btfsc	status,2,c
  6045  015B8A  D0CB               	goto	l10762
  6046                           
  6047                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  6048  015B8C  0EDC               	movlw	220
  6049  015B8E  6EE6               	movwf	postinc1,c
  6050  015B90  0E05               	movlw	5
  6051  015B92  6EE6               	movwf	postinc1,c
  6052  015B94  0E0B               	movlw	11
  6053  015B96  6EE6               	movwf	postinc1,c
  6054  015B98  EC33  F0C3         	call	_StartTimer	;wreg free
  6055                           
  6056                           ;mconfig.c: 48:   if (V.debug)
  6057  015B9C  0102               	movlb	2	; () banked
  6058  015B9E  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  6059                           
  6060                           ; BSR set to: 2
  6061                           ;mconfig.c: 49:    vterm_dump();
  6062  015BA0  EC0B  F0B5         	call	_vterm_dump	;wreg free
  6063                           
  6064                           ;mconfig.c: 51:   set_vterm(1);
  6065  015BA4  0E01               	movlw	1
  6066  015BA6  6EE6               	movwf	postinc1,c
  6067  015BA8  ECCB  F0C6         	call	_set_vterm	;wreg free
  6068                           
  6069                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  6070  015BAC  ECBB  F0C7         	call	_display_info	;wreg free
  6071  015BB0  5032               	movf	btemp^0,w,c
  6072  015BB2  6EE6               	movwf	postinc1,c
  6073  015BB4  EC7B  F0C7         	call	_set_temp_display_help	;wreg free
  6074                           
  6075                           ; BSR set to: 2
  6076                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  6077  015BB8  0E01               	movlw	1
  6078  015BBA  6EE6               	movwf	postinc1,c
  6079  015BBC  ECDA  F0C6         	call	_set_display_info	;wreg free
  6080                           
  6081                           ;mconfig.c: 54:   if (flipper) {
  6082                           ;stkvar	_flipper @ sp[(0)+-1]
  6083  015BC0  0EFF               	movlw	-1
  6084  015BC2  50E3               	movf	plusw1,w,c
  6085  015BC4  B4D8               	btfsc	status,2,c
  6086  015BC6  D019               	goto	l10748
  6087                           
  6088                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  6089  015BC8  0EC0               	movlw	low STR_27
  6090  015BCA  6EE6               	movwf	postinc1,c
  6091  015BCC  0EFF               	movlw	high STR_27
  6092  015BCE  6EE6               	movwf	postinc1,c
  6093  015BD0  0E6C               	movlw	low STR_29
  6094  015BD2  6EE6               	movwf	postinc1,c
  6095  015BD4  0EFE               	movlw	high STR_29
  6096  015BD6  6EE6               	movwf	postinc1,c
  6097  015BD8  0E01               	movlw	1
  6098  015BDA  6EE6               	movwf	postinc1,c
  6099  015BDC  0E00               	movlw	0
  6100  015BDE  6EE6               	movwf	postinc1,c
  6101  015BE0  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  6102  015BE4  0060  F0CB  FFE6   	movff	btemp,postinc1
  6103  015BEA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6104  015BF0  0E06               	movlw	6
  6105  015BF2  6EE6               	movwf	postinc1,c
  6106  015BF4  ECD2  F0B7         	call	_sprintf	;wreg free
  6107                           
  6108                           ;mconfig.c: 56:   } else {
  6109  015BF8  D018               	goto	l1591
  6110  015BFA                     l10748:
  6111                           
  6112                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  6113  015BFA  0ED6               	movlw	low STR_28
  6114  015BFC  6EE6               	movwf	postinc1,c
  6115  015BFE  0EFF               	movlw	high STR_28
  6116  015C00  6EE6               	movwf	postinc1,c
  6117  015C02  0E6C               	movlw	low STR_29
  6118  015C04  6EE6               	movwf	postinc1,c
  6119  015C06  0EFE               	movlw	high STR_29
  6120  015C08  6EE6               	movwf	postinc1,c
  6121  015C0A  0E01               	movlw	1
  6122  015C0C  6EE6               	movwf	postinc1,c
  6123  015C0E  0E00               	movlw	0
  6124  015C10  6EE6               	movwf	postinc1,c
  6125  015C12  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  6126  015C16  0060  F0CB  FFE6   	movff	btemp,postinc1
  6127  015C1C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6128  015C22  0E06               	movlw	6
  6129  015C24  6EE6               	movwf	postinc1,c
  6130  015C26  ECD2  F0B7         	call	_sprintf	;wreg free
  6131  015C2A                     l1591:
  6132                           
  6133                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  6134  015C2A  0102               	movlb	2	; () banked
  6135  015C2C  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6136  015C2E  32E8               	rrcf	wreg,f,c
  6137  015C30  32E8               	rrcf	wreg,f,c
  6138  015C32  0B03               	andlw	3
  6139  015C34  0D24               	mullw	36
  6140  015C36  0E12               	movlw	18
  6141  015C38  26F3               	addwf	243,f,c
  6142  015C3A  0E00               	movlw	0
  6143  015C3C  22F4               	addwfc	244,f,c
  6144  015C3E  0EB1               	movlw	low _T
  6145  015C40  6E3C               	movwf	(btemp+10)^0,c
  6146  015C42  0EFD               	movlw	high _T
  6147  015C44  6E3D               	movwf	(btemp+11)^0,c
  6148  015C46  50F3               	movf	243,w,c
  6149  015C48  263C               	addwf	(btemp+10)^0,f,c
  6150  015C4A  50F4               	movf	244,w,c
  6151  015C4C  223D               	addwfc	(btemp+11)^0,f,c
  6152  015C4E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6153  015C54  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6154  015C5A  0ECC               	movlw	low STR_31
  6155  015C5C  6EE6               	movwf	postinc1,c
  6156  015C5E  0EFF               	movlw	high STR_31
  6157  015C60  6EE6               	movwf	postinc1,c
  6158  015C62  0E01               	movlw	1
  6159  015C64  6EE6               	movwf	postinc1,c
  6160  015C66  0E01               	movlw	1
  6161  015C68  6EE6               	movwf	postinc1,c
  6162  015C6A  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  6163  015C6E  0060  F0CB  FFE6   	movff	btemp,postinc1
  6164  015C74  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6165  015C7A  0E06               	movlw	6
  6166  015C7C  6EE6               	movwf	postinc1,c
  6167  015C7E  ECD2  F0B7         	call	_sprintf	;wreg free
  6168                           
  6169                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  6170  015C82  0102               	movlb	2	; () banked
  6171  015C84  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6172  015C86  32E8               	rrcf	wreg,f,c
  6173  015C88  32E8               	rrcf	wreg,f,c
  6174  015C8A  0B03               	andlw	3
  6175  015C8C  0D24               	mullw	36
  6176  015C8E  0EB1               	movlw	low _T
  6177  015C90  6E3C               	movwf	(btemp+10)^0,c
  6178  015C92  0EFD               	movlw	high _T
  6179  015C94  6E3D               	movwf	(btemp+11)^0,c
  6180  015C96  50F3               	movf	243,w,c
  6181  015C98  263C               	addwf	(btemp+10)^0,f,c
  6182  015C9A  50F4               	movf	244,w,c
  6183  015C9C  223D               	addwfc	(btemp+11)^0,f,c
  6184  015C9E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6185  015CA4  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6186  015CAA  0ECC               	movlw	low STR_31
  6187  015CAC  6EE6               	movwf	postinc1,c
  6188  015CAE  0EFF               	movlw	high STR_31
  6189  015CB0  6EE6               	movwf	postinc1,c
  6190  015CB2  0E01               	movlw	1
  6191  015CB4  6EE6               	movwf	postinc1,c
  6192  015CB6  0E02               	movlw	2
  6193  015CB8  6EE6               	movwf	postinc1,c
  6194  015CBA  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  6195  015CBE  0060  F0CB  FFE6   	movff	btemp,postinc1
  6196  015CC4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6197  015CCA  0E06               	movlw	6
  6198  015CCC  6EE6               	movwf	postinc1,c
  6199  015CCE  ECD2  F0B7         	call	_sprintf	;wreg free
  6200                           
  6201                           ;mconfig.c: 61:   V.help_id++;
  6202  015CD2  EE20  F29B         	lfsr	2,_V+155	;volatile
  6203  015CD6  38DF               	swapf	223,w,c
  6204  015CD8  6E3D               	movwf	(btemp+11)^0,c
  6205  015CDA  323D               	rrcf	(btemp+11)^0,f,c
  6206  015CDC  303D               	rrcf	(btemp+11)^0,w,c
  6207  015CDE  0B03               	andlw	3
  6208  015CE0  6E3D               	movwf	(btemp+11)^0,c
  6209  015CE2  2A3D               	incf	(btemp+11)^0,f,c
  6210  015CE4  3A3D               	swapf	(btemp+11)^0,f,c
  6211  015CE6  363D               	rlcf	(btemp+11)^0,f,c
  6212  015CE8  363D               	rlcf	(btemp+11)^0,f,c
  6213  015CEA  50DF               	movf	223,w,c
  6214  015CEC  183D               	xorwf	(btemp+11)^0,w,c
  6215  015CEE  0B3F               	andlw	-193
  6216  015CF0  183D               	xorwf	(btemp+11)^0,w,c
  6217  015CF2  6EDF               	movwf	223,c
  6218                           
  6219                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  6220  015CF4  0EB8               	movlw	184
  6221  015CF6  6EE6               	movwf	postinc1,c
  6222  015CF8  0E0B               	movlw	11
  6223  015CFA  6EE6               	movwf	postinc1,c
  6224  015CFC  0E09               	movlw	9
  6225  015CFE  6EE6               	movwf	postinc1,c
  6226  015D00  EC33  F0C3         	call	_StartTimer	;wreg free
  6227                           
  6228                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  6229  015D04  0EB8               	movlw	184
  6230  015D06  6EE6               	movwf	postinc1,c
  6231  015D08  0E0B               	movlw	11
  6232  015D0A  6EE6               	movwf	postinc1,c
  6233  015D0C  0E07               	movlw	7
  6234  015D0E  6EE6               	movwf	postinc1,c
  6235  015D10  EC33  F0C3         	call	_StartTimer	;wreg free
  6236                           
  6237                           ;mconfig.c: 64:   mode_lamp_bright();
  6238  015D14  EC8A  F0C7         	call	_mode_lamp_bright	;wreg free
  6239                           
  6240                           ;mconfig.c: 65:   update_lcd(1);
  6241  015D18  0E01               	movlw	1
  6242  015D1A  6EE6               	movwf	postinc1,c
  6243  015D1C  EC4A  F0B7         	call	_update_lcd	;wreg free
  6244                           
  6245                           ;mconfig.c: 67:  } else {
  6246  015D20  D032               	goto	l1592
  6247  015D22                     l10762:
  6248                           
  6249                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  6250  015D22  0E09               	movlw	9
  6251  015D24  6EE6               	movwf	postinc1,c
  6252  015D26  EC45  F0C6         	call	_TimerDone	;wreg free
  6253  015D2A  5032               	movf	btemp^0,w,c
  6254  015D2C  B4D8               	btfsc	status,2,c
  6255  015D2E  D02B               	goto	l1592
  6256                           
  6257                           ;mconfig.c: 69:    set_vterm(0);
  6258  015D30  0E00               	movlw	0
  6259  015D32  6EE6               	movwf	postinc1,c
  6260  015D34  ECCB  F0C6         	call	_set_vterm	;wreg free
  6261                           
  6262                           ;mconfig.c: 70:    V.help = 0;
  6263  015D38  0102               	movlb	2	; () banked
  6264  015D3A  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  6265                           
  6266                           ; BSR set to: 2
  6267                           ;mconfig.c: 71:    set_display_info(display_help());
  6268  015D3C  ECBF  F0C7         	call	_display_help	;wreg free
  6269  015D40  5032               	movf	btemp^0,w,c
  6270  015D42  6EE6               	movwf	postinc1,c
  6271  015D44  ECDA  F0C6         	call	_set_display_info	;wreg free
  6272                           
  6273                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  6274  015D48  0060  FA57  FFE6   	movff	_V+149,postinc1
  6275  015D4E  0060  FA5B  FFE6   	movff	_V+150,postinc1
  6276  015D54  EC2F  F0C7         	call	_mode_lamp_dim	;wreg free
  6277                           
  6278                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  6279  015D58  0E0B               	movlw	11
  6280  015D5A  6EE6               	movwf	postinc1,c
  6281  015D5C  EC45  F0C6         	call	_TimerDone	;wreg free
  6282  015D60  5032               	movf	btemp^0,w,c
  6283  015D62  B4D8               	btfsc	status,2,c
  6284  015D64  D010               	goto	l1592
  6285                           
  6286                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  6287  015D66  0102               	movlb	2	; () banked
  6288  015D68  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  6289  015D6A  A4D8               	btfss	status,2,c
  6290  015D6C  D002               	goto	u10600
  6291  015D6E  0E01               	movlw	1
  6292  015D70  D001               	goto	u10610
  6293  015D72                     u10600:
  6294  015D72  0E00               	movlw	0
  6295  015D74                     u10610:
  6296  015D74  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  6297                           
  6298                           ; BSR set to: 2
  6299                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  6300  015D76  0EDC               	movlw	220
  6301  015D78  6EE6               	movwf	postinc1,c
  6302  015D7A  0E05               	movlw	5
  6303  015D7C  6EE6               	movwf	postinc1,c
  6304  015D7E  0E0B               	movlw	11
  6305  015D80  6EE6               	movwf	postinc1,c
  6306  015D82  EC33  F0C3         	call	_StartTimer	;wreg free
  6307  015D86                     l1592:
  6308                           
  6309                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6310  015D86  52E5               	movf	postdec1,f,c
  6311  015D88  0012               	return		;funcret
  6312  015D8A                     __end_of_check_help:
  6313                           	opt callstack 0
  6314                           
  6315 ;; *************** function _vterm_dump *****************
  6316 ;; Defined at:
  6317 ;;		line 121 in file "mconfig.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;		None
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;		None
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  1  [STACK] void 
  6324 ;; Registers used:
  6325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6326 ;; Tracked objects:
  6327 ;;		On entry : 3F/2
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6335 ;;Total ram usage:        0 bytes
  6336 ;; Hardware stack levels used:    1
  6337 ;; Hardware stack levels required when called:   17
  6338 ;; This function calls:
  6339 ;;		_WaitMs
  6340 ;;		_eaDogM_WriteStringAtPos
  6341 ;;		_get_vterm_ptr
  6342 ;;		_sprintf
  6343 ;;		_wait_lcd_done
  6344 ;; This function is called by:
  6345 ;;		_check_help
  6346 ;; This function uses a reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text24
  6350  016A16                     __ptext24:
  6351                           	opt callstack 0
  6352  016A16                     _vterm_dump:
  6353                           	opt callstack 12
  6354                           
  6355                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  6356                           
  6357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6358                           ;incstack = 0
  6359  016A16  0E01               	movlw	1
  6360  016A18  6EE6               	movwf	postinc1,c
  6361  016A1A  0E00               	movlw	0
  6362  016A1C  6EE6               	movwf	postinc1,c
  6363  016A1E  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  6364  016A22  0060  F0CB  FFE6   	movff	btemp,postinc1
  6365  016A28  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6366  016A2E  0E00               	movlw	0
  6367  016A30  6EE6               	movwf	postinc1,c
  6368  016A32  0E00               	movlw	0
  6369  016A34  6EE6               	movwf	postinc1,c
  6370  016A36  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  6371  016A3A  0060  F0CB  FFE6   	movff	btemp,postinc1
  6372  016A40  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6373  016A46  0EA2               	movlw	low STR_33
  6374  016A48  6EE6               	movwf	postinc1,c
  6375  016A4A  0EFF               	movlw	high STR_33
  6376  016A4C  6EE6               	movwf	postinc1,c
  6377  016A4E  0E01               	movlw	low (_V+1)
  6378  016A50  6EE6               	movwf	postinc1,c
  6379  016A52  0E02               	movlw	high (_V+1)
  6380  016A54  6EE6               	movwf	postinc1,c
  6381  016A56  0E08               	movlw	8
  6382  016A58  6EE6               	movwf	postinc1,c
  6383  016A5A  ECD2  F0B7         	call	_sprintf	;wreg free
  6384                           
  6385                           ;mconfig.c: 124:  wait_lcd_done();
  6386  016A5E  EC07  F0C7         	call	_wait_lcd_done	;wreg free
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  6390  016A62  0E01               	movlw	low (_V+1)
  6391  016A64  6EE6               	movwf	postinc1,c
  6392  016A66  0E02               	movlw	high (_V+1)
  6393  016A68  6EE6               	movwf	postinc1,c
  6394  016A6A  0E00               	movlw	0
  6395  016A6C  6EE6               	movwf	postinc1,c
  6396  016A6E  0E00               	movlw	0
  6397  016A70  6EE6               	movwf	postinc1,c
  6398  016A72  EC88  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  6399                           
  6400                           ; BSR set to: 59
  6401                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  6402  016A76  0E01               	movlw	1
  6403  016A78  6EE6               	movwf	postinc1,c
  6404  016A7A  0E01               	movlw	1
  6405  016A7C  6EE6               	movwf	postinc1,c
  6406  016A7E  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  6407  016A82  0060  F0CB  FFE6   	movff	btemp,postinc1
  6408  016A88  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6409  016A8E  0E00               	movlw	0
  6410  016A90  6EE6               	movwf	postinc1,c
  6411  016A92  0E01               	movlw	1
  6412  016A94  6EE6               	movwf	postinc1,c
  6413  016A96  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  6414  016A9A  0060  F0CB  FFE6   	movff	btemp,postinc1
  6415  016AA0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6416  016AA6  0EA2               	movlw	low STR_33
  6417  016AA8  6EE6               	movwf	postinc1,c
  6418  016AAA  0EFF               	movlw	high STR_33
  6419  016AAC  6EE6               	movwf	postinc1,c
  6420  016AAE  0E01               	movlw	low (_V+1)
  6421  016AB0  6EE6               	movwf	postinc1,c
  6422  016AB2  0E02               	movlw	high (_V+1)
  6423  016AB4  6EE6               	movwf	postinc1,c
  6424  016AB6  0E08               	movlw	8
  6425  016AB8  6EE6               	movwf	postinc1,c
  6426  016ABA  ECD2  F0B7         	call	_sprintf	;wreg free
  6427                           
  6428                           ;mconfig.c: 127:  wait_lcd_done();
  6429  016ABE  EC07  F0C7         	call	_wait_lcd_done	;wreg free
  6430                           
  6431                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  6432  016AC2  0E01               	movlw	low (_V+1)
  6433  016AC4  6EE6               	movwf	postinc1,c
  6434  016AC6  0E02               	movlw	high (_V+1)
  6435  016AC8  6EE6               	movwf	postinc1,c
  6436  016ACA  0E00               	movlw	0
  6437  016ACC  6EE6               	movwf	postinc1,c
  6438  016ACE  0E01               	movlw	1
  6439  016AD0  6EE6               	movwf	postinc1,c
  6440  016AD2  EC88  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  6441                           
  6442                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  6443  016AD6  0E01               	movlw	1
  6444  016AD8  6EE6               	movwf	postinc1,c
  6445  016ADA  0E02               	movlw	2
  6446  016ADC  6EE6               	movwf	postinc1,c
  6447  016ADE  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  6448  016AE2  0060  F0CB  FFE6   	movff	btemp,postinc1
  6449  016AE8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6450  016AEE  0E00               	movlw	0
  6451  016AF0  6EE6               	movwf	postinc1,c
  6452  016AF2  0E02               	movlw	2
  6453  016AF4  6EE6               	movwf	postinc1,c
  6454  016AF6  EC37  F0C4         	call	_get_vterm_ptr	;wreg free
  6455  016AFA  0060  F0CB  FFE6   	movff	btemp,postinc1
  6456  016B00  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6457  016B06  0EA2               	movlw	low STR_33
  6458  016B08  6EE6               	movwf	postinc1,c
  6459  016B0A  0EFF               	movlw	high STR_33
  6460  016B0C  6EE6               	movwf	postinc1,c
  6461  016B0E  0E01               	movlw	low (_V+1)
  6462  016B10  6EE6               	movwf	postinc1,c
  6463  016B12  0E02               	movlw	high (_V+1)
  6464  016B14  6EE6               	movwf	postinc1,c
  6465  016B16  0E08               	movlw	8
  6466  016B18  6EE6               	movwf	postinc1,c
  6467  016B1A  ECD2  F0B7         	call	_sprintf	;wreg free
  6468                           
  6469                           ;mconfig.c: 130:  wait_lcd_done();
  6470  016B1E  EC07  F0C7         	call	_wait_lcd_done	;wreg free
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  6474  016B22  0E01               	movlw	low (_V+1)
  6475  016B24  6EE6               	movwf	postinc1,c
  6476  016B26  0E02               	movlw	high (_V+1)
  6477  016B28  6EE6               	movwf	postinc1,c
  6478  016B2A  0E00               	movlw	0
  6479  016B2C  6EE6               	movwf	postinc1,c
  6480  016B2E  0E02               	movlw	2
  6481  016B30  6EE6               	movwf	postinc1,c
  6482  016B32  EC88  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  6483                           
  6484                           ; BSR set to: 59
  6485                           ;mconfig.c: 132:  WaitMs(3000);
  6486  016B36  0EB8               	movlw	184
  6487  016B38  6EE6               	movwf	postinc1,c
  6488  016B3A  0E0B               	movlw	11
  6489  016B3C  6EE6               	movwf	postinc1,c
  6490  016B3E  EC6D  F0C3         	call	_WaitMs	;wreg free
  6491                           
  6492                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6493  016B42  0012               	return		;funcret
  6494  016B44                     __end_of_vterm_dump:
  6495                           	opt callstack 0
  6496                           
  6497 ;; *************** function _sprintf *****************
  6498 ;; Defined at:
  6499 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  s               2  [STACK] PTR unsigned char 
  6502 ;;		 -> D.lcd(288), D(290), V(188), 
  6503 ;;  fmt             2  [STACK] PTR const unsigned char 
  6504 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  6505 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  6506 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  6507 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  6508 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  6509 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  6510 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  6511 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  6512 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  6513 ;;		 -> STR_1(17), 
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;  f               6  [STACK] struct _IO_FILE
  6516 ;;  ap              2  [STACK] PTR void [1]
  6517 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6518 ;;  ret             2    0        int 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  2  [STACK] int 
  6521 ;; Registers used:
  6522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/1
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6532 ;;Total ram usage:        0 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:   14
  6535 ;; This function calls:
  6536 ;;		_vfprintf
  6537 ;; This function is called by:
  6538 ;;		_main
  6539 ;;		_check_help
  6540 ;;		_vterm_dump
  6541 ;; This function uses a reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text25
  6545  016FA4                     __ptext25:
  6546                           	opt callstack 0
  6547  016FA4                     _sprintf:
  6548                           	opt callstack 0
  6549                           
  6550                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6551  016FA4  0E08               	movlw	8
  6552  016FA6  26E1               	addwf	fsr1l,f,c
  6553  016FA8  0E00               	movlw	0
  6554  016FAA  22E2               	addwfc	fsr1h,f,c
  6555                           
  6556                           ;incstack = 0
  6557  016FAC  0EFE               	movlw	254
  6558  016FAE  6E3C               	movwf	(btemp+10)^0,c
  6559  016FB0  0EFF               	movlw	255
  6560  016FB2  6E3D               	movwf	(btemp+11)^0,c
  6561                           
  6562                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  6563  016FB4  0EF5               	movlw	245
  6564  016FB6  24E1               	addwf	fsr1l,w,c
  6565  016FB8  6E3A               	movwf	(btemp+8)^0,c
  6566  016FBA  0EFF               	movlw	255
  6567  016FBC  20E2               	addwfc	fsr1h,w,c
  6568  016FBE  6E3B               	movwf	(btemp+9)^0,c
  6569  016FC0  503C               	movf	(btemp+10)^0,w,c
  6570  016FC2  263A               	addwf	(btemp+8)^0,f,c
  6571  016FC4  503D               	movf	(btemp+11)^0,w,c
  6572  016FC6  223B               	addwfc	(btemp+9)^0,f,c
  6573                           
  6574                           ;stkvar	_ap @ sp[(-8)+6]
  6575  016FC8  0EFF               	movlw	-1
  6576  016FCA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  6577  016FD0  0EFE               	movlw	-2
  6578  016FD2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  6579                           
  6580                           ;stkvar	_s @ sp[(-8)+-3]
  6581  016FD8  0EF5               	movlw	-11
  6582  016FDA  006F FF8C  F03C    	movff	plusw1,btemp+10
  6583  016FE0  0EF6               	movlw	-10
  6584  016FE2  006F FF8C  F03D    	movff	plusw1,btemp+11
  6585                           
  6586                           ;stkvar	_f @ sp[(-8)+0]
  6587  016FE8  0EF9               	movlw	-7
  6588  016FEA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6589  016FF0  0EF8               	movlw	-8
  6590  016FF2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6591                           
  6592                           ;stkvar	_f @ sp[(-8)+0]
  6593  016FF8  0EFA               	movlw	250
  6594  016FFA  24E1               	addwf	fsr1l,w,c
  6595  016FFC  6ED9               	movwf	fsr2l,c
  6596  016FFE  0EFF               	movlw	255
  6597  017000  20E2               	addwfc	fsr1h,w,c
  6598  017002  6EDA               	movwf	fsr2h,c
  6599  017004  0E00               	movlw	0
  6600  017006  6EDE               	movwf	postinc2,c
  6601  017008  0E00               	movlw	0
  6602  01700A  6EDD               	movwf	postdec2,c
  6603                           
  6604                           ;stkvar	_f @ sp[(-8)+0]
  6605  01700C  0EFC               	movlw	252
  6606  01700E  24E1               	addwf	fsr1l,w,c
  6607  017010  6ED9               	movwf	fsr2l,c
  6608  017012  0EFF               	movlw	255
  6609  017014  20E2               	addwfc	fsr1h,w,c
  6610  017016  6EDA               	movwf	fsr2h,c
  6611  017018  0E00               	movlw	0
  6612  01701A  6EDE               	movwf	postinc2,c
  6613  01701C  0E00               	movlw	0
  6614  01701E  6EDD               	movwf	postdec2,c
  6615                           
  6616                           ;stkvar	_ap @ sp[(-8)+6]
  6617  017020  0EFE               	movlw	254
  6618  017022  24E1               	addwf	fsr1l,w,c
  6619  017024  6E32               	movwf	btemp^0,c
  6620  017026  0EFF               	movlw	255
  6621  017028  20E2               	addwfc	fsr1h,w,c
  6622  01702A  6E33               	movwf	(btemp+1)^0,c
  6623  01702C  0060  F0CB  FFE6   	movff	btemp,postinc1
  6624  017032  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6625                           
  6626                           ;stkvar	_fmt @ sp[(-10)+-5]
  6627  017038  0EF1               	movlw	-15
  6628  01703A  006F FF8F FFE6     	movff	plusw1,postinc1
  6629  017040  006F FF8F FFE6     	movff	plusw1,postinc1
  6630                           
  6631                           ;stkvar	_f @ sp[(-12)+0]
  6632  017046  0EF4               	movlw	244
  6633  017048  24E1               	addwf	fsr1l,w,c
  6634  01704A  6E32               	movwf	btemp^0,c
  6635  01704C  0EFF               	movlw	255
  6636  01704E  20E2               	addwfc	fsr1h,w,c
  6637  017050  6E33               	movwf	(btemp+1)^0,c
  6638  017052  0060  F0CB  FFE6   	movff	btemp,postinc1
  6639  017058  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6640  01705E  ECA6  F0BB         	call	_vfprintf	;wreg free
  6641                           
  6642                           ;stkvar	_f @ sp[(-8)+0]
  6643  017062  0EFA               	movlw	250
  6644  017064  24E1               	addwf	fsr1l,w,c
  6645  017066  6ED9               	movwf	fsr2l,c
  6646  017068  0EFF               	movlw	255
  6647  01706A  20E2               	addwfc	fsr1h,w,c
  6648  01706C  6EDA               	movwf	fsr2h,c
  6649  01706E  006F FF78  F03C    	movff	postinc2,btemp+10
  6650  017074  006F FF74  F03D    	movff	postdec2,btemp+11
  6651                           
  6652                           ;stkvar	_s @ sp[(-8)+-3]
  6653  01707A  0EF5               	movlw	-11
  6654  01707C  006F FF8C  F03A    	movff	plusw1,btemp+8
  6655  017082  0EF6               	movlw	-10
  6656  017084  006F FF8C  F03B    	movff	plusw1,btemp+9
  6657  01708A  503C               	movf	(btemp+10)^0,w,c
  6658  01708C  243A               	addwf	(btemp+8)^0,w,c
  6659  01708E  6ED9               	movwf	fsr2l,c
  6660  017090  503D               	movf	(btemp+11)^0,w,c
  6661  017092  203B               	addwfc	(btemp+9)^0,w,c
  6662  017094  6EDA               	movwf	fsr2h,c
  6663  017096  0E00               	movlw	0
  6664  017098  6EDF               	movwf	indf2,c
  6665                           
  6666                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  6667  01709A  0EF8               	movlw	248
  6668  01709C  26E1               	addwf	fsr1l,f,c
  6669  01709E  0EFF               	movlw	255
  6670  0170A0  22E2               	addwfc	fsr1h,f,c
  6671  0170A2  52E5               	movf	postdec1,f,c
  6672  0170A4  50E7               	movf	indf1,w,c
  6673  0170A6  5EE1               	subwf	fsr1l,f,c
  6674  0170A8  0E00               	movlw	0
  6675  0170AA  5AE2               	subwfb	fsr1h,f,c
  6676  0170AC  0012               	return		;funcret
  6677  0170AE                     __end_of_sprintf:
  6678                           	opt callstack 0
  6679                           
  6680 ;; *************** function _get_vterm_ptr *****************
  6681 ;; Defined at:
  6682 ;;		line 116 in file "mconfig.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;  line            1  [STACK] const unsigned char 
  6685 ;;  vterm           1  [STACK] const unsigned char 
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;		None
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  2  [STACK] PTR unsigned char 
  6690 ;; Registers used:
  6691 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/1
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6701 ;;Total ram usage:        0 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; Hardware stack levels required when called:    6
  6704 ;; This function calls:
  6705 ;;		Nothing
  6706 ;; This function is called by:
  6707 ;;		_main
  6708 ;;		_check_help
  6709 ;;		_vterm_dump
  6710 ;; This function uses a reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text26
  6714  01886E                     __ptext26:
  6715                           	opt callstack 0
  6716  01886E                     _get_vterm_ptr:
  6717                           	opt callstack 24
  6718                           
  6719                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  6720                           ;stkvar	_vterm @ sp[(0)+-2]
  6721                           
  6722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6723                           ;incstack = 0
  6724  01886E  0EFE               	movlw	-2
  6725  018870  50E3               	movf	plusw1,w,c
  6726  018872  0B03               	andlw	3
  6727  018874  0D48               	mullw	72
  6728  018876  0EFF               	movlw	low _D
  6729  018878  6E32               	movwf	btemp^0,c
  6730  01887A  0E06               	movlw	high _D
  6731  01887C  6E33               	movwf	(btemp+1)^0,c
  6732  01887E  50F3               	movf	243,w,c
  6733  018880  2632               	addwf	btemp^0,f,c
  6734  018882  50F4               	movf	244,w,c
  6735  018884  2233               	addwfc	(btemp+1)^0,f,c
  6736                           
  6737                           ;stkvar	_line @ sp[(0)+-1]
  6738  018886  0EFF               	movlw	-1
  6739  018888  50E3               	movf	plusw1,w,c
  6740  01888A  0B03               	andlw	3
  6741  01888C  0D18               	mullw	24
  6742  01888E  50F3               	movf	243,w,c
  6743  018890  2632               	addwf	btemp^0,f,c
  6744  018892  50F4               	movf	244,w,c
  6745  018894  2233               	addwfc	(btemp+1)^0,f,c
  6746                           
  6747                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6748  018896  52E5               	movf	postdec1,f,c
  6749  018898  52E5               	movf	postdec1,f,c
  6750  01889A  0012               	return		;funcret
  6751  01889C                     __end_of_get_vterm_ptr:
  6752                           	opt callstack 0
  6753                           
  6754 ;; *************** function _WaitMs *****************
  6755 ;; Defined at:
  6756 ;;		line 32 in file "timers.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  numMilliseco    2  [STACK] const unsigned short 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;		None
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  1  [STACK] void 
  6763 ;; Registers used:
  6764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/2
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6774 ;;Total ram usage:        0 bytes
  6775 ;; Hardware stack levels used:    1
  6776 ;; Hardware stack levels required when called:    7
  6777 ;; This function calls:
  6778 ;;		_StartTimer
  6779 ;;		_TimerDone
  6780 ;; This function is called by:
  6781 ;;		_main
  6782 ;;		_vterm_dump
  6783 ;; This function uses a reentrant model
  6784 ;;
  6785                           
  6786                           	psect	text27
  6787  0186DA                     __ptext27:
  6788                           	opt callstack 0
  6789  0186DA                     _WaitMs:
  6790                           	opt callstack 21
  6791                           
  6792                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6793                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6794                           
  6795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6796                           ;incstack = 0
  6797  0186DA  0EFE               	movlw	-2
  6798  0186DC  006F FF8F FFE6     	movff	plusw1,postinc1
  6799  0186E2  006F FF8F FFE6     	movff	plusw1,postinc1
  6800  0186E8  0E00               	movlw	0
  6801  0186EA  6EE6               	movwf	postinc1,c
  6802  0186EC  EC33  F0C3         	call	_StartTimer	;wreg free
  6803                           
  6804                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6805  0186F0  D005               	goto	l8278
  6806  0186F2                     l1521:
  6807                           
  6808                           ;timers.c: 36:   __nop();
  6809  0186F2  F000               	nop	
  6810                           
  6811                           ;timers.c: 37:   __nop();
  6812  0186F4  F000               	nop	
  6813                           
  6814                           ;timers.c: 38:   __nop();
  6815  0186F6  F000               	nop	
  6816                           
  6817                           ;timers.c: 39:   __nop();
  6818  0186F8  F000               	nop	
  6819  0186FA  0004               	clrwdt		;# 
  6820  0186FC                     l8278:
  6821                           
  6822                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6823  0186FC  0E00               	movlw	0
  6824  0186FE  6EE6               	movwf	postinc1,c
  6825  018700  EC45  F0C6         	call	_TimerDone	;wreg free
  6826  018704  5032               	movf	btemp^0,w,c
  6827  018706  B4D8               	btfsc	status,2,c
  6828  018708  D7F4               	goto	l1521
  6829                           
  6830                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6831  01870A  52E5               	movf	postdec1,f,c
  6832  01870C  52E5               	movf	postdec1,f,c
  6833  01870E  0012               	return		;funcret
  6834  018710                     __end_of_WaitMs:
  6835                           	opt callstack 0
  6836                           
  6837 ;; *************** function _update_lcd *****************
  6838 ;; Defined at:
  6839 ;;		line 85 in file "mconfig.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;  vterm           1  [STACK] unsigned char 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;		None
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  1  [STACK] unsigned char 
  6846 ;; Registers used:
  6847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/1
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6857 ;;Total ram usage:        0 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:   17
  6860 ;; This function calls:
  6861 ;;		_eaDogM_WriteStringAtPos
  6862 ;;		_wait_lcd_done
  6863 ;; This function is called by:
  6864 ;;		_main
  6865 ;;		_check_help
  6866 ;; This function uses a reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text28
  6870  016E94                     __ptext28:
  6871                           	opt callstack 0
  6872  016E94                     _update_lcd:
  6873                           	opt callstack 13
  6874                           
  6875                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  6876                           ;stkvar	_vterm @ sp[(0)+-1]
  6877                           
  6878                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6879                           ;incstack = 0
  6880  016E94  0EFF               	movlw	-1
  6881  016E96  006F FF8C  F032    	movff	plusw1,btemp
  6882  016E9C  0E03               	movlw	3
  6883  016E9E  1632               	andwf	btemp^0,f,c
  6884  016EA0  0EFF               	movlw	-1
  6885  016EA2  0060  F0CB  FFE3   	movff	btemp,plusw1
  6886                           
  6887                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  6888  016EA8  EE22  F01F         	lfsr	2,_D+288
  6889  016EAC  A0DF               	btfss	indf2,0,c
  6890  016EAE  D004               	goto	l10630
  6891                           
  6892                           ;stkvar	_vterm @ sp[(0)+-1]
  6893  016EB0  0EFF               	movlw	-1
  6894  016EB2  50E3               	movf	plusw1,w,c
  6895  016EB4  B4D8               	btfsc	status,2,c
  6896  016EB6  D074               	goto	l1599
  6897  016EB8                     l10630:
  6898                           
  6899                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  6900                           ;stkvar	_vterm @ sp[(0)+-1]
  6901  016EB8  0EFF               	movlw	-1
  6902  016EBA  50E3               	movf	plusw1,w,c
  6903  016EBC  0D48               	mullw	72
  6904  016EBE  0E0F               	movlw	low (_D+16)
  6905  016EC0  24F3               	addwf	243,w,c
  6906  016EC2  6ED9               	movwf	fsr2l,c
  6907  016EC4  0E07               	movlw	high (_D+16)
  6908  016EC6  20F4               	addwfc	prodh,w,c
  6909  016EC8  6EDA               	movwf	fsr2h,c
  6910  016ECA  0E00               	movlw	0
  6911  016ECC  6EDF               	movwf	indf2,c
  6912                           
  6913                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  6914                           ;stkvar	_vterm @ sp[(0)+-1]
  6915  016ECE  0EFF               	movlw	-1
  6916  016ED0  50E3               	movf	plusw1,w,c
  6917  016ED2  0D48               	mullw	72
  6918  016ED4  0E27               	movlw	low (_D+40)
  6919  016ED6  24F3               	addwf	243,w,c
  6920  016ED8  6ED9               	movwf	fsr2l,c
  6921  016EDA  0E07               	movlw	high (_D+40)
  6922  016EDC  20F4               	addwfc	prodh,w,c
  6923  016EDE  6EDA               	movwf	fsr2h,c
  6924  016EE0  0E00               	movlw	0
  6925  016EE2  6EDF               	movwf	indf2,c
  6926                           
  6927                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  6928                           ;stkvar	_vterm @ sp[(0)+-1]
  6929  016EE4  0EFF               	movlw	-1
  6930  016EE6  50E3               	movf	plusw1,w,c
  6931  016EE8  0D48               	mullw	72
  6932  016EEA  0E3F               	movlw	low (_D+64)
  6933  016EEC  24F3               	addwf	243,w,c
  6934  016EEE  6ED9               	movwf	fsr2l,c
  6935  016EF0  0E07               	movlw	high (_D+64)
  6936  016EF2  20F4               	addwfc	prodh,w,c
  6937  016EF4  6EDA               	movwf	fsr2h,c
  6938  016EF6  0E00               	movlw	0
  6939  016EF8  6EDF               	movwf	indf2,c
  6940                           
  6941                           ;mconfig.c: 95:  wait_lcd_done();
  6942  016EFA  EC07  F0C7         	call	_wait_lcd_done	;wreg free
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  6946                           ;stkvar	_vterm @ sp[(0)+-1]
  6947  016EFE  0EFF               	movlw	-1
  6948  016F00  50E3               	movf	plusw1,w,c
  6949  016F02  0D48               	mullw	72
  6950  016F04  0EFF               	movlw	low _D
  6951  016F06  6E3C               	movwf	(btemp+10)^0,c
  6952  016F08  0E06               	movlw	high _D
  6953  016F0A  6E3D               	movwf	(btemp+11)^0,c
  6954  016F0C  50F3               	movf	243,w,c
  6955  016F0E  263C               	addwf	(btemp+10)^0,f,c
  6956  016F10  50F4               	movf	244,w,c
  6957  016F12  223D               	addwfc	(btemp+11)^0,f,c
  6958  016F14  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6959  016F1A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6960  016F20  0E00               	movlw	0
  6961  016F22  6EE6               	movwf	postinc1,c
  6962  016F24  0E00               	movlw	0
  6963  016F26  6EE6               	movwf	postinc1,c
  6964  016F28  EC88  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  6965                           
  6966                           ; BSR set to: 59
  6967                           ;mconfig.c: 97:  wait_lcd_done();
  6968  016F2C  EC07  F0C7         	call	_wait_lcd_done	;wreg free
  6969                           
  6970                           ; BSR set to: 0
  6971                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  6972                           ;stkvar	_vterm @ sp[(0)+-1]
  6973  016F30  0EFF               	movlw	-1
  6974  016F32  50E3               	movf	plusw1,w,c
  6975  016F34  0D48               	mullw	72
  6976  016F36  0EFF               	movlw	low _D
  6977  016F38  6E3C               	movwf	(btemp+10)^0,c
  6978  016F3A  0E06               	movlw	high _D
  6979  016F3C  6E3D               	movwf	(btemp+11)^0,c
  6980  016F3E  0E18               	movlw	24
  6981  016F40  263C               	addwf	(btemp+10)^0,f,c
  6982  016F42  0E00               	movlw	0
  6983  016F44  223D               	addwfc	(btemp+11)^0,f,c
  6984  016F46  50F3               	movf	243,w,c
  6985  016F48  263C               	addwf	(btemp+10)^0,f,c
  6986  016F4A  50F4               	movf	244,w,c
  6987  016F4C  223D               	addwfc	(btemp+11)^0,f,c
  6988  016F4E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6989  016F54  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6990  016F5A  0E00               	movlw	0
  6991  016F5C  6EE6               	movwf	postinc1,c
  6992  016F5E  0E01               	movlw	1
  6993  016F60  6EE6               	movwf	postinc1,c
  6994  016F62  EC88  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  6995                           
  6996                           ; BSR set to: 59
  6997                           ;mconfig.c: 99:  wait_lcd_done();
  6998  016F66  EC07  F0C7         	call	_wait_lcd_done	;wreg free
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  7002                           ;stkvar	_vterm @ sp[(0)+-1]
  7003  016F6A  0EFF               	movlw	-1
  7004  016F6C  50E3               	movf	plusw1,w,c
  7005  016F6E  0D48               	mullw	72
  7006  016F70  0EFF               	movlw	low _D
  7007  016F72  6E3C               	movwf	(btemp+10)^0,c
  7008  016F74  0E06               	movlw	high _D
  7009  016F76  6E3D               	movwf	(btemp+11)^0,c
  7010  016F78  0E30               	movlw	48
  7011  016F7A  263C               	addwf	(btemp+10)^0,f,c
  7012  016F7C  0E00               	movlw	0
  7013  016F7E  223D               	addwfc	(btemp+11)^0,f,c
  7014  016F80  50F3               	movf	243,w,c
  7015  016F82  263C               	addwf	(btemp+10)^0,f,c
  7016  016F84  50F4               	movf	244,w,c
  7017  016F86  223D               	addwfc	(btemp+11)^0,f,c
  7018  016F88  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7019  016F8E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7020  016F94  0E00               	movlw	0
  7021  016F96  6EE6               	movwf	postinc1,c
  7022  016F98  0E02               	movlw	2
  7023  016F9A  6EE6               	movwf	postinc1,c
  7024  016F9C  EC88  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  7025  016FA0                     l1599:
  7026                           
  7027                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7028  016FA0  52E5               	movf	postdec1,f,c
  7029  016FA2  0012               	return		;funcret
  7030  016FA4                     __end_of_update_lcd:
  7031                           	opt callstack 0
  7032                           
  7033 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7034 ;; Defined at:
  7035 ;;		line 255 in file "eadog.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;  r               1  [STACK] const unsigned char 
  7038 ;;  c               1  [STACK] const unsigned char 
  7039 ;;  strPtr          2  [STACK] PTR unsigned char 
  7040 ;;		 -> D.lcd(288), D(290), V(188), 
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;		None
  7043 ;; Return value:  Size  Location     Type
  7044 ;;                  1  [STACK] void 
  7045 ;; Registers used:
  7046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7047 ;; Tracked objects:
  7048 ;;		On entry : 3F/0
  7049 ;;		On exit  : 3F/3B
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7056 ;;Total ram usage:        0 bytes
  7057 ;; Hardware stack levels used:    1
  7058 ;; Hardware stack levels required when called:   16
  7059 ;; This function calls:
  7060 ;;		_eaDogM_WriteString
  7061 ;;		_send_lcd_cmd_dma
  7062 ;; This function is called by:
  7063 ;;		_update_lcd
  7064 ;;		_vterm_dump
  7065 ;; This function uses a reentrant model
  7066 ;;
  7067                           
  7068                           	psect	text29
  7069  018710                     __ptext29:
  7070                           	opt callstack 0
  7071  018710                     _eaDogM_WriteStringAtPos:
  7072                           	opt callstack 13
  7073                           
  7074                           ;eadog.c: 255: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 256: {;eadog.c: 257:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7075                           ;stkvar	_c @ sp[(0)+-2]
  7076                           
  7077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7078                           ;incstack = 0
  7079  018710  0EFE               	movlw	-2
  7080  018712  006F FF8C  F03D    	movff	plusw1,btemp+11
  7081                           
  7082                           ;stkvar	_r @ sp[(0)+-1]
  7083  018718  0EFF               	movlw	-1
  7084  01871A  50E3               	movf	plusw1,w,c
  7085  01871C  0D10               	mullw	16
  7086  01871E  50F3               	movf	243,w,c
  7087  018720  243D               	addwf	(btemp+11)^0,w,c
  7088  018722  0F80               	addlw	128
  7089  018724  6EE6               	movwf	postinc1,c
  7090  018726  EC6C  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  7091                           
  7092                           ;eadog.c: 258:  eaDogM_WriteString(strPtr);
  7093                           ;stkvar	_strPtr @ sp[(0)+-4]
  7094  01872A  0EFC               	movlw	-4
  7095  01872C  006F FF8F FFE6     	movff	plusw1,postinc1
  7096  018732  006F FF8F FFE6     	movff	plusw1,postinc1
  7097  018738  ECFA  F0BB         	call	_eaDogM_WriteString	;wreg free
  7098                           
  7099                           ; BSR set to: 59
  7100                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  7101  01873C  52E5               	movf	postdec1,f,c
  7102  01873E  52E5               	movf	postdec1,f,c
  7103  018740  52E5               	movf	postdec1,f,c
  7104  018742  52E5               	movf	postdec1,f,c
  7105  018744  0012               	return		;funcret
  7106  018746                     __end_of_eaDogM_WriteStringAtPos:
  7107                           	opt callstack 0
  7108                           
  7109 ;; *************** function _send_lcd_cmd_dma *****************
  7110 ;; Defined at:
  7111 ;;		line 208 in file "eadog.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  strPtr          1  [STACK] unsigned char 
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;		None
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  1  [STACK] void 
  7118 ;; Registers used:
  7119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/3D
  7122 ;;		On exit  : 3F/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7129 ;;Total ram usage:        0 bytes
  7130 ;; Hardware stack levels used:    1
  7131 ;; Hardware stack levels required when called:   15
  7132 ;; This function calls:
  7133 ;;		_printf
  7134 ;;		_ringBufS_flush
  7135 ;;		_start_lcd
  7136 ;;		_wait_lcd_done
  7137 ;;		_wait_lcd_set
  7138 ;; This function is called by:
  7139 ;;		_eaDogM_WriteCommand
  7140 ;;		_eaDogM_WriteStringAtPos
  7141 ;; This function uses a reentrant model
  7142 ;;
  7143                           
  7144                           	psect	text30
  7145  0182D8                     __ptext30:
  7146                           	opt callstack 0
  7147  0182D8                     _send_lcd_cmd_dma:
  7148                           	opt callstack 13
  7149                           
  7150                           ;eadog.c: 208: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 209: {;eadog.c: 211:  wait
      +                          _lcd_set();
  7151                           
  7152                           ; BSR set to: 59
  7153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7154                           ;incstack = 0
  7155  0182D8  ECCE  F0C7         	call	_wait_lcd_set	;wreg free
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;eadog.c: 213:  ringBufS_flush(spi_link.tx1a, 0);
  7159  0182DC  0E00               	movlw	0
  7160  0182DE  6EE6               	movwf	postinc1,c
  7161  0182E0  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  7162  0182E6  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  7163  0182EC  EC3C  F0BD         	call	_ringBufS_flush	;wreg free
  7164  0182F0  92BC               	bcf	188,1,c	;volatile
  7165  0182F2  94BC               	bcf	188,2,c	;volatile
  7166                           
  7167                           ;eadog.c: 216:  DMA1CON0bits.EN = 0;
  7168  0182F4  013B               	movlb	59	; () banked
  7169  0182F6  9FFC               	bcf	252,7,b	;volatile
  7170                           
  7171                           ; BSR set to: 59
  7172                           ;eadog.c: 217:  DMA1SSZ = 1;
  7173  0182F8  0E00               	movlw	0
  7174  0182FA  6FF8               	movwf	248,b	;volatile
  7175  0182FC  0E01               	movlw	1
  7176  0182FE  6FF7               	movwf	247,b	;volatile
  7177                           
  7178                           ; BSR set to: 59
  7179                           ;eadog.c: 218:  DMA1CON0bits.EN = 1;
  7180  018300  8FFC               	bsf	252,7,b	;volatile
  7181                           
  7182                           ; BSR set to: 59
  7183                           ;eadog.c: 219:  printf("%c", strPtr);
  7184                           ;stkvar	_strPtr @ sp[(0)+-1]
  7185  018302  0EFF               	movlw	-1
  7186  018304  50E3               	movf	plusw1,w,c
  7187  018306  6EE6               	movwf	postinc1,c
  7188  018308  0E00               	movlw	0
  7189  01830A  6EE6               	movwf	postinc1,c
  7190  01830C  0EF8               	movlw	low STR_25
  7191  01830E  6EE6               	movwf	postinc1,c
  7192  018310  0EFF               	movlw	high STR_25
  7193  018312  6EE6               	movwf	postinc1,c
  7194  018314  0E04               	movlw	4
  7195  018316  6EE6               	movwf	postinc1,c
  7196  018318  EC84  F0C0         	call	_printf	;wreg free
  7197                           
  7198                           ;eadog.c: 220:  start_lcd();
  7199  01831C  ECD1  F0C7         	call	_start_lcd	;wreg free
  7200                           
  7201                           ; BSR set to: 59
  7202                           ;eadog.c: 221:  wait_lcd_done();
  7203  018320  EC07  F0C7         	call	_wait_lcd_done	;wreg free
  7204                           
  7205                           ; BSR set to: 0
  7206  018324  82BC               	bsf	188,1,c	;volatile
  7207                           
  7208                           ; BSR set to: 0
  7209                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7210  018326  52E5               	movf	postdec1,f,c
  7211  018328  0012               	return		;funcret
  7212  01832A                     __end_of_send_lcd_cmd_dma:
  7213                           	opt callstack 0
  7214                           
  7215 ;; *************** function _wait_lcd_done *****************
  7216 ;; Defined at:
  7217 ;;		line 144 in file "eadog.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;		None
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;		None
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  1  [STACK] void 
  7224 ;; Registers used:
  7225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/2
  7228 ;;		On exit  : 3F/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7235 ;;Total ram usage:        0 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:    7
  7238 ;; This function calls:
  7239 ;;		_wdtdelay
  7240 ;; This function is called by:
  7241 ;;		_send_lcd_cmd_dma
  7242 ;;		_update_lcd
  7243 ;;		_vterm_dump
  7244 ;; This function uses a reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text31
  7248  018E0E                     __ptext31:
  7249                           	opt callstack 0
  7250  018E0E                     _wait_lcd_done:
  7251                           	opt callstack 22
  7252                           
  7253                           ;eadog.c: 146:  while (spi_link.LCD_DATA);
  7254                           
  7255                           ; BSR set to: 0
  7256                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7257                           ;incstack = 0
  7258  018E0E  0100               	movlb	0	; () banked
  7259  018E10  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  7260  018E12  D7FD               	goto	_wait_lcd_done
  7261                           
  7262                           ; BSR set to: 0
  7263                           ;eadog.c: 147:  wdtdelay(50);
  7264  018E14  0E32               	movlw	50
  7265  018E16  6EE6               	movwf	postinc1,c
  7266  018E18  0E00               	movlw	0
  7267  018E1A  6EE6               	movwf	postinc1,c
  7268  018E1C  0E00               	movlw	0
  7269  018E1E  6EE6               	movwf	postinc1,c
  7270  018E20  0E00               	movlw	0
  7271  018E22  6EE6               	movwf	postinc1,c
  7272  018E24  EC12  F0C1         	call	_wdtdelay	;wreg free
  7273                           
  7274                           ; BSR set to: 0
  7275                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7276  018E28  0012               	return		;funcret
  7277  018E2A                     __end_of_wait_lcd_done:
  7278                           	opt callstack 0
  7279                           
  7280 ;; *************** function _wdtdelay *****************
  7281 ;; Defined at:
  7282 ;;		line 22 in file "eadog.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;  delay           4  [STACK] const unsigned long 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;		None
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  1  [STACK] void 
  7289 ;; Registers used:
  7290 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 3F/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7300 ;;Total ram usage:        0 bytes
  7301 ;; Hardware stack levels used:    1
  7302 ;; Hardware stack levels required when called:    6
  7303 ;; This function calls:
  7304 ;;		Nothing
  7305 ;; This function is called by:
  7306 ;;		_init_display
  7307 ;;		_send_lcd_cmd
  7308 ;;		_send_lcd_cmd_long
  7309 ;;		_wait_lcd_done
  7310 ;; This function uses a reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text32
  7314  018224                     __ptext32:
  7315                           	opt callstack 0
  7316  018224                     _wdtdelay:
  7317                           	opt callstack 22
  7318                           
  7319                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  7320                           
  7321                           ; BSR set to: 0
  7322                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7323                           ;incstack = 0
  7324  018224  0100               	movlb	0	; () banked
  7325  018226  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  7326  018228  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7327  01822A  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7328  01822C  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7329  01822E                     l1366:
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;eadog.c: 27:   __nop();
  7333  01822E  F000               	nop	
  7334  018230  0004               	clrwdt		;# 
  7335                           
  7336                           ;eadog.c: 29:  };
  7337  018232  0E01               	movlw	1
  7338  018234  0100               	movlb	0	; () banked
  7339  018236  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  7340  018238  0E00               	movlw	0
  7341  01823A  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7342  01823C  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7343  01823E  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;stkvar	_delay @ sp[(0)+-4]
  7347  018240  0EFC               	movlw	-4
  7348  018242  006F FF8C  F032    	movff	plusw1,btemp
  7349  018248  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  7350  01824A  5C32               	subwf	btemp^0,w,c
  7351  01824C  0EFD               	movlw	-3
  7352  01824E  006F FF8C  F032    	movff	plusw1,btemp
  7353  018254  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7354  018256  5832               	subwfb	btemp^0,w,c
  7355  018258  0EFE               	movlw	-2
  7356  01825A  006F FF8C  F032    	movff	plusw1,btemp
  7357  018260  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7358  018262  5832               	subwfb	btemp^0,w,c
  7359  018264  0EFF               	movlw	-1
  7360  018266  006F FF8C  F032    	movff	plusw1,btemp
  7361  01826C  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7362  01826E  5832               	subwfb	btemp^0,w,c
  7363  018270  B0D8               	btfsc	status,0,c
  7364  018272  D7DD               	goto	l1366
  7365                           
  7366                           ; BSR set to: 0
  7367                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7368  018274  52E5               	movf	postdec1,f,c
  7369  018276  52E5               	movf	postdec1,f,c
  7370  018278  52E5               	movf	postdec1,f,c
  7371  01827A  52E5               	movf	postdec1,f,c
  7372  01827C  0012               	return		;funcret
  7373  01827E                     __end_of_wdtdelay:
  7374                           	opt callstack 0
  7375                           
  7376 ;; *************** function _eaDogM_WriteString *****************
  7377 ;; Defined at:
  7378 ;;		line 187 in file "eadog.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  strPtr          2  [STACK] PTR unsigned char 
  7381 ;;		 -> D.lcd(288), D(290), V(188), 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;		None
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  1  [STACK] void 
  7386 ;; Registers used:
  7387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7388 ;; Tracked objects:
  7389 ;;		On entry : 3F/0
  7390 ;;		On exit  : 3F/3B
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7397 ;;Total ram usage:        0 bytes
  7398 ;; Hardware stack levels used:    1
  7399 ;; Hardware stack levels required when called:   15
  7400 ;; This function calls:
  7401 ;;		_printf
  7402 ;;		_ringBufS_flush
  7403 ;;		_start_lcd
  7404 ;;		_strlen
  7405 ;;		_wait_lcd_set
  7406 ;; This function is called by:
  7407 ;;		_eaDogM_WriteStringAtPos
  7408 ;; This function uses a reentrant model
  7409 ;;
  7410                           
  7411                           	psect	text33
  7412  0177F4                     __ptext33:
  7413                           	opt callstack 0
  7414  0177F4                     _eaDogM_WriteString:
  7415                           	opt callstack 13
  7416                           
  7417                           ;eadog.c: 187: void eaDogM_WriteString(char *strPtr);eadog.c: 188: {;eadog.c: 190:  wait
      +                          _lcd_set();
  7418                           
  7419                           ; BSR set to: 0
  7420                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7421                           ;incstack = 0
  7422  0177F4  ECCE  F0C7         	call	_wait_lcd_set	;wreg free
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;eadog.c: 192:  ringBufS_flush(spi_link.tx1a, 0);
  7426  0177F8  0E00               	movlw	0
  7427  0177FA  6EE6               	movwf	postinc1,c
  7428  0177FC  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  7429  017802  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  7430  017808  EC3C  F0BD         	call	_ringBufS_flush	;wreg free
  7431  01780C  94BC               	bcf	188,2,c	;volatile
  7432                           
  7433                           ;eadog.c: 194:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7434                           ;stkvar	_strPtr @ sp[(0)+-2]
  7435  01780E  0EFE               	movlw	-2
  7436  017810  006F FF8F FFE6     	movff	plusw1,postinc1
  7437  017816  006F FF8F FFE6     	movff	plusw1,postinc1
  7438  01781C  EC9F  F0BC         	call	_strlen	;wreg free
  7439  017820  5033               	movf	(btemp+1)^0,w,c
  7440  017822  E104               	bnz	u10510
  7441  017824  0E41               	movlw	65
  7442  017826  5C32               	subwf	btemp^0,w,c
  7443  017828  A0D8               	btfss	status,0,c
  7444  01782A  D010               	goto	l10596
  7445  01782C                     u10510:
  7446                           
  7447                           ;stkvar	_strPtr @ sp[(0)+-2]
  7448  01782C  0EFE               	movlw	-2
  7449  01782E  006F FF8C  F03C    	movff	plusw1,btemp+10
  7450  017834  0EFF               	movlw	-1
  7451  017836  006F FF8C  F03D    	movff	plusw1,btemp+11
  7452  01783C  0E40               	movlw	64
  7453  01783E  243C               	addwf	(btemp+10)^0,w,c
  7454  017840  6ED9               	movwf	fsr2l,c
  7455  017842  0E00               	movlw	0
  7456  017844  203D               	addwfc	(btemp+11)^0,w,c
  7457  017846  6EDA               	movwf	fsr2h,c
  7458  017848  0E00               	movlw	0
  7459  01784A  6EDF               	movwf	indf2,c
  7460  01784C                     l10596:
  7461                           
  7462                           ;eadog.c: 195:  DMA1CON0bits.EN = 0;
  7463  01784C  013B               	movlb	59	; () banked
  7464  01784E  9FFC               	bcf	252,7,b	;volatile
  7465                           
  7466                           ; BSR set to: 59
  7467                           ;eadog.c: 196:  DMA1SSZ = strlen(strPtr);
  7468                           ;stkvar	_strPtr @ sp[(0)+-2]
  7469  017850  0EFE               	movlw	-2
  7470  017852  006F FF8F FFE6     	movff	plusw1,postinc1
  7471  017858  006F FF8F FFE6     	movff	plusw1,postinc1
  7472  01785E  EC9F  F0BC         	call	_strlen	;wreg free
  7473  017862  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  7474  017868  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  7475                           
  7476                           ;eadog.c: 197:  DMA1CON0bits.EN = 1;
  7477  01786E  013B               	movlb	59	; () banked
  7478  017870  8FFC               	bsf	252,7,b	;volatile
  7479                           
  7480                           ; BSR set to: 59
  7481                           ;eadog.c: 198:  printf("%s", strPtr);
  7482                           ;stkvar	_strPtr @ sp[(0)+-2]
  7483  017872  0EFE               	movlw	-2
  7484  017874  006F FF8F FFE6     	movff	plusw1,postinc1
  7485  01787A  006F FF8F FFE6     	movff	plusw1,postinc1
  7486  017880  0EFB               	movlw	low STR_24
  7487  017882  6EE6               	movwf	postinc1,c
  7488  017884  0EFF               	movlw	high STR_24
  7489  017886  6EE6               	movwf	postinc1,c
  7490  017888  0E04               	movlw	4
  7491  01788A  6EE6               	movwf	postinc1,c
  7492  01788C  EC84  F0C0         	call	_printf	;wreg free
  7493                           
  7494                           ;eadog.c: 199:  start_lcd();
  7495  017890  ECD1  F0C7         	call	_start_lcd	;wreg free
  7496                           
  7497                           ; BSR set to: 59
  7498                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  7499  017894  52E5               	movf	postdec1,f,c
  7500  017896  52E5               	movf	postdec1,f,c
  7501  017898  0012               	return		;funcret
  7502  01789A                     __end_of_eaDogM_WriteString:
  7503                           	opt callstack 0
  7504                           
  7505 ;; *************** function _wait_lcd_set *****************
  7506 ;; Defined at:
  7507 ;;		line 134 in file "eadog.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;		None
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;		None
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  1  [STACK] void 
  7514 ;; Registers used:
  7515 ;;		None
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/3D
  7518 ;;		On exit  : 3F/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7525 ;;Total ram usage:        0 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:    6
  7528 ;; This function calls:
  7529 ;;		Nothing
  7530 ;; This function is called by:
  7531 ;;		_eaDogM_WriteString
  7532 ;;		_send_lcd_cmd_dma
  7533 ;; This function uses a reentrant model
  7534 ;;
  7535                           
  7536                           	psect	text34
  7537  018F9C                     __ptext34:
  7538                           	opt callstack 0
  7539  018F9C                     _wait_lcd_set:
  7540                           	opt callstack 21
  7541                           
  7542                           ;eadog.c: 136:  spi_link.LCD_DATA = 1;
  7543                           
  7544                           ; BSR set to: 59
  7545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7546                           ;incstack = 0
  7547  018F9C  0100               	movlb	0	; () banked
  7548  018F9E  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  7549                           
  7550                           ; BSR set to: 0
  7551                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7552  018FA0  0012               	return		;funcret
  7553  018FA2                     __end_of_wait_lcd_set:
  7554                           	opt callstack 0
  7555                           
  7556 ;; *************** function _start_lcd *****************
  7557 ;; Defined at:
  7558 ;;		line 129 in file "eadog.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;		None
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  1  [STACK] void 
  7565 ;; Registers used:
  7566 ;;		None
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/3B
  7569 ;;		On exit  : 3F/3B
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7576 ;;Total ram usage:        0 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; Hardware stack levels required when called:    6
  7579 ;; This function calls:
  7580 ;;		Nothing
  7581 ;; This function is called by:
  7582 ;;		_eaDogM_WriteString
  7583 ;;		_send_lcd_cmd_dma
  7584 ;; This function uses a reentrant model
  7585 ;;
  7586                           
  7587                           	psect	text35
  7588  018FA2                     __ptext35:
  7589                           	opt callstack 0
  7590  018FA2                     _start_lcd:
  7591                           	opt callstack 21
  7592                           
  7593                           ;eadog.c: 131:  DMA1CON0bits.DMA1SIRQEN = 1;
  7594                           
  7595                           ; BSR set to: 0
  7596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7597                           ;incstack = 0
  7598  018FA2  013B               	movlb	59	; () banked
  7599  018FA4  8DFC               	bsf	252,6,b	;volatile
  7600                           
  7601                           ; BSR set to: 59
  7602                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7603  018FA6  0012               	return		;funcret
  7604  018FA8                     __end_of_start_lcd:
  7605                           	opt callstack 0
  7606                           
  7607 ;; *************** function _ringBufS_flush *****************
  7608 ;; Defined at:
  7609 ;;		line 76 in file "ringbufs.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7612 ;;		 -> ring_buf1(67), 
  7613 ;;  clearBuffer     1  [STACK] const char 
  7614 ;; Auto vars:     Size  Location     Type
  7615 ;;		None
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  1  [STACK] void 
  7618 ;; Registers used:
  7619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7620 ;; Tracked objects:
  7621 ;;		On entry : 3F/0
  7622 ;;		On exit  : 0/0
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7629 ;;Total ram usage:        0 bytes
  7630 ;; Hardware stack levels used:    1
  7631 ;; Hardware stack levels required when called:    7
  7632 ;; This function calls:
  7633 ;;		_memset
  7634 ;; This function is called by:
  7635 ;;		_eaDogM_WriteString
  7636 ;;		_send_lcd_cmd_dma
  7637 ;; This function uses a reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text36
  7641  017A78                     __ptext36:
  7642                           	opt callstack 0
  7643  017A78                     _ringBufS_flush:
  7644                           	opt callstack 20
  7645                           
  7646                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7647                           ;stkvar	__this @ sp[(0)+-2]
  7648                           
  7649                           ; BSR set to: 59
  7650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7651                           ;incstack = 0
  7652  017A78  0EFE               	movlw	-2
  7653  017A7A  006F FF8C  F03C    	movff	plusw1,btemp+10
  7654  017A80  0EFF               	movlw	-1
  7655  017A82  006F FF8C  F03D    	movff	plusw1,btemp+11
  7656  017A88  0E42               	movlw	66
  7657  017A8A  243C               	addwf	(btemp+10)^0,w,c
  7658  017A8C  6ED9               	movwf	fsr2l,c
  7659  017A8E  0E00               	movlw	0
  7660  017A90  203D               	addwfc	(btemp+11)^0,w,c
  7661  017A92  6EDA               	movwf	fsr2h,c
  7662  017A94  0E00               	movlw	0
  7663  017A96  6EDF               	movwf	indf2,c
  7664                           
  7665                           ;ringbufs.c: 79:  _this->head = 0;
  7666                           ;stkvar	__this @ sp[(0)+-2]
  7667  017A98  0EFE               	movlw	-2
  7668  017A9A  006F FF8C  F03C    	movff	plusw1,btemp+10
  7669  017AA0  0EFF               	movlw	-1
  7670  017AA2  006F FF8C  F03D    	movff	plusw1,btemp+11
  7671  017AA8  0E40               	movlw	64
  7672  017AAA  243C               	addwf	(btemp+10)^0,w,c
  7673  017AAC  6ED9               	movwf	fsr2l,c
  7674  017AAE  0E00               	movlw	0
  7675  017AB0  203D               	addwfc	(btemp+11)^0,w,c
  7676  017AB2  6EDA               	movwf	fsr2h,c
  7677  017AB4  0E00               	movlw	0
  7678  017AB6  6EDF               	movwf	indf2,c
  7679                           
  7680                           ;ringbufs.c: 80:  _this->tail = 0;
  7681                           ;stkvar	__this @ sp[(0)+-2]
  7682  017AB8  0EFE               	movlw	-2
  7683  017ABA  006F FF8C  F03C    	movff	plusw1,btemp+10
  7684  017AC0  0EFF               	movlw	-1
  7685  017AC2  006F FF8C  F03D    	movff	plusw1,btemp+11
  7686  017AC8  0E41               	movlw	65
  7687  017ACA  243C               	addwf	(btemp+10)^0,w,c
  7688  017ACC  6ED9               	movwf	fsr2l,c
  7689  017ACE  0E00               	movlw	0
  7690  017AD0  203D               	addwfc	(btemp+11)^0,w,c
  7691  017AD2  6EDA               	movwf	fsr2h,c
  7692  017AD4  0E00               	movlw	0
  7693  017AD6  6EDF               	movwf	indf2,c
  7694                           
  7695                           ;ringbufs.c: 81:  if (clearBuffer) {
  7696                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7697  017AD8  0EFD               	movlw	-3
  7698  017ADA  50E3               	movf	plusw1,w,c
  7699  017ADC  B4D8               	btfsc	status,2,c
  7700  017ADE  D011               	goto	l1506
  7701                           
  7702                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7703  017AE0  0E40               	movlw	64
  7704  017AE2  6EE6               	movwf	postinc1,c
  7705  017AE4  0E00               	movlw	0
  7706  017AE6  6EE6               	movwf	postinc1,c
  7707  017AE8  0E00               	movlw	0
  7708  017AEA  6EE6               	movwf	postinc1,c
  7709  017AEC  0E00               	movlw	0
  7710  017AEE  6EE6               	movwf	postinc1,c
  7711                           
  7712                           ;stkvar	__this @ sp[(-4)+-2]
  7713  017AF0  0EFA               	movlw	-6
  7714  017AF2  006F FF8F FFE6     	movff	plusw1,postinc1
  7715  017AF8  006F FF8F FFE6     	movff	plusw1,postinc1
  7716  017AFE  ECDF  F0A5         	call	_memset	;wreg free
  7717  017B02                     l1506:
  7718                           
  7719                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7720  017B02  52E5               	movf	postdec1,f,c
  7721  017B04  52E5               	movf	postdec1,f,c
  7722  017B06  52E5               	movf	postdec1,f,c
  7723  017B08  0012               	return		;funcret
  7724  017B0A                     __end_of_ringBufS_flush:
  7725                           	opt callstack 0
  7726                           
  7727 ;; *************** function _memset *****************
  7728 ;; Defined at:
  7729 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  dest            2  [STACK] PTR void 
  7732 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7733 ;;  c               2  [STACK] int 
  7734 ;;  n               2  [STACK] unsigned int 
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;  s               2  [STACK] PTR unsigned char 
  7737 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7738 ;;  k               2  [STACK] unsigned int 
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  2  [STACK] PTR void 
  7741 ;; Registers used:
  7742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7752 ;;Total ram usage:        0 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; Hardware stack levels required when called:    6
  7755 ;; This function calls:
  7756 ;;		Nothing
  7757 ;; This function is called by:
  7758 ;;		_ringBufS_init
  7759 ;;		_ringBufS_flush
  7760 ;; This function uses a reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text37
  7764  014BBE                     __ptext37:
  7765                           	opt callstack 0
  7766  014BBE                     _memset:
  7767                           	opt callstack 0
  7768                           
  7769                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7770  014BBE  52E6               	movf	postinc1,f,c
  7771  014BC0  52E6               	movf	postinc1,f,c
  7772  014BC2  52E6               	movf	postinc1,f,c
  7773  014BC4  52E6               	movf	postinc1,f,c
  7774                           
  7775                           ;stkvar	_dest @ sp[(-4)+-2]
  7776                           
  7777                           ;incstack = 0
  7778  014BC6  0EFA               	movlw	-6
  7779  014BC8  006F FF8C  F03C    	movff	plusw1,btemp+10
  7780  014BCE  0EFB               	movlw	-5
  7781  014BD0  006F FF8C  F03D    	movff	plusw1,btemp+11
  7782                           
  7783                           ;stkvar	_s @ sp[(-4)+0]
  7784  014BD6  0EFD               	movlw	-3
  7785  014BD8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7786  014BDE  0EFC               	movlw	-4
  7787  014BE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7788                           
  7789                           ;stkvar	_n @ sp[(-4)+-6]
  7790  014BE6  0EF6               	movlw	-10
  7791  014BE8  006F FF8C  F032    	movff	plusw1,btemp
  7792  014BEE  0EF7               	movlw	-9
  7793  014BF0  50E3               	movf	plusw1,w,c
  7794  014BF2  1032               	iorwf	btemp^0,w,c
  7795  014BF4  B4D8               	btfsc	status,2,c
  7796  014BF6  D154               	goto	u10480
  7797                           
  7798                           ;stkvar	_c @ sp[(-4)+-4]
  7799                           ;stkvar	_s @ sp[(-4)+0]
  7800  014BF8  0EFC               	movlw	-4
  7801  014BFA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7802  014C00  0EFD               	movlw	-3
  7803  014C02  006F FF8F FFDA     	movff	plusw1,fsr2h
  7804  014C08  0EF8               	movlw	-8
  7805  014C0A  006F FF8F FFDF     	movff	plusw1,indf2
  7806                           
  7807                           ;stkvar	_c @ sp[(-4)+-4]
  7808                           ;stkvar	_n @ sp[(-4)+-6]
  7809                           ;stkvar	_s @ sp[(-4)+0]
  7810  014C10  0EFC               	movlw	-4
  7811  014C12  006F FF8C  F03C    	movff	plusw1,btemp+10
  7812  014C18  0EFD               	movlw	-3
  7813  014C1A  006F FF8C  F03D    	movff	plusw1,btemp+11
  7814  014C20  0EF6               	movlw	-10
  7815  014C22  50E3               	movf	plusw1,w,c
  7816  014C24  263C               	addwf	(btemp+10)^0,f,c
  7817  014C26  0EF7               	movlw	-9
  7818  014C28  50E3               	movf	plusw1,w,c
  7819  014C2A  223D               	addwfc	(btemp+11)^0,f,c
  7820  014C2C  0EFF               	movlw	255
  7821  014C2E  243C               	addwf	(btemp+10)^0,w,c
  7822  014C30  6ED9               	movwf	fsr2l,c
  7823  014C32  0EFF               	movlw	255
  7824  014C34  203D               	addwfc	(btemp+11)^0,w,c
  7825  014C36  6EDA               	movwf	fsr2h,c
  7826  014C38  0EF8               	movlw	-8
  7827  014C3A  006F FF8F FFDF     	movff	plusw1,indf2
  7828                           
  7829                           ;stkvar	_n @ sp[(-4)+-6]
  7830  014C40  0EF7               	movlw	-9
  7831  014C42  50E3               	movf	plusw1,w,c
  7832  014C44  E108               	bnz	l10512
  7833  014C46  0EF6               	movlw	-10
  7834  014C48  006F FF8C  F032    	movff	plusw1,btemp
  7835  014C4E  0E03               	movlw	3
  7836  014C50  5E32               	subwf	btemp^0,f,c
  7837  014C52  A0D8               	btfss	status,0,c
  7838  014C54  D125               	goto	u10480
  7839  014C56                     l10512:
  7840                           
  7841                           ;stkvar	_c @ sp[(-4)+-4]
  7842                           ;stkvar	_s @ sp[(-4)+0]
  7843  014C56  0EFC               	movlw	-4
  7844  014C58  006F FF8C  F03C    	movff	plusw1,btemp+10
  7845  014C5E  0EFD               	movlw	-3
  7846  014C60  006F FF8C  F03D    	movff	plusw1,btemp+11
  7847  014C66  0E01               	movlw	1
  7848  014C68  243C               	addwf	(btemp+10)^0,w,c
  7849  014C6A  6ED9               	movwf	fsr2l,c
  7850  014C6C  0E00               	movlw	0
  7851  014C6E  203D               	addwfc	(btemp+11)^0,w,c
  7852  014C70  6EDA               	movwf	fsr2h,c
  7853  014C72  0EF8               	movlw	-8
  7854  014C74  006F FF8F FFDF     	movff	plusw1,indf2
  7855                           
  7856                           ;stkvar	_c @ sp[(-4)+-4]
  7857                           ;stkvar	_s @ sp[(-4)+0]
  7858  014C7A  0EFC               	movlw	-4
  7859  014C7C  006F FF8C  F03C    	movff	plusw1,btemp+10
  7860  014C82  0EFD               	movlw	-3
  7861  014C84  006F FF8C  F03D    	movff	plusw1,btemp+11
  7862  014C8A  0E02               	movlw	2
  7863  014C8C  243C               	addwf	(btemp+10)^0,w,c
  7864  014C8E  6ED9               	movwf	fsr2l,c
  7865  014C90  0E00               	movlw	0
  7866  014C92  203D               	addwfc	(btemp+11)^0,w,c
  7867  014C94  6EDA               	movwf	fsr2h,c
  7868  014C96  0EF8               	movlw	-8
  7869  014C98  006F FF8F FFDF     	movff	plusw1,indf2
  7870                           
  7871                           ;stkvar	_c @ sp[(-4)+-4]
  7872                           ;stkvar	_n @ sp[(-4)+-6]
  7873                           ;stkvar	_s @ sp[(-4)+0]
  7874  014C9E  0EFC               	movlw	-4
  7875  014CA0  006F FF8C  F03C    	movff	plusw1,btemp+10
  7876  014CA6  0EFD               	movlw	-3
  7877  014CA8  006F FF8C  F03D    	movff	plusw1,btemp+11
  7878  014CAE  0EF6               	movlw	-10
  7879  014CB0  50E3               	movf	plusw1,w,c
  7880  014CB2  263C               	addwf	(btemp+10)^0,f,c
  7881  014CB4  0EF7               	movlw	-9
  7882  014CB6  50E3               	movf	plusw1,w,c
  7883  014CB8  223D               	addwfc	(btemp+11)^0,f,c
  7884  014CBA  0EFE               	movlw	254
  7885  014CBC  243C               	addwf	(btemp+10)^0,w,c
  7886  014CBE  6ED9               	movwf	fsr2l,c
  7887  014CC0  0EFF               	movlw	255
  7888  014CC2  203D               	addwfc	(btemp+11)^0,w,c
  7889  014CC4  6EDA               	movwf	fsr2h,c
  7890  014CC6  0EF8               	movlw	-8
  7891  014CC8  006F FF8F FFDF     	movff	plusw1,indf2
  7892                           
  7893                           ;stkvar	_c @ sp[(-4)+-4]
  7894                           ;stkvar	_n @ sp[(-4)+-6]
  7895                           ;stkvar	_s @ sp[(-4)+0]
  7896  014CCE  0EFC               	movlw	-4
  7897  014CD0  006F FF8C  F03C    	movff	plusw1,btemp+10
  7898  014CD6  0EFD               	movlw	-3
  7899  014CD8  006F FF8C  F03D    	movff	plusw1,btemp+11
  7900  014CDE  0EF6               	movlw	-10
  7901  014CE0  50E3               	movf	plusw1,w,c
  7902  014CE2  263C               	addwf	(btemp+10)^0,f,c
  7903  014CE4  0EF7               	movlw	-9
  7904  014CE6  50E3               	movf	plusw1,w,c
  7905  014CE8  223D               	addwfc	(btemp+11)^0,f,c
  7906  014CEA  0EFD               	movlw	253
  7907  014CEC  243C               	addwf	(btemp+10)^0,w,c
  7908  014CEE  6ED9               	movwf	fsr2l,c
  7909  014CF0  0EFF               	movlw	255
  7910  014CF2  203D               	addwfc	(btemp+11)^0,w,c
  7911  014CF4  6EDA               	movwf	fsr2h,c
  7912  014CF6  0EF8               	movlw	-8
  7913  014CF8  006F FF8F FFDF     	movff	plusw1,indf2
  7914                           
  7915                           ;stkvar	_n @ sp[(-4)+-6]
  7916  014CFE  0EF7               	movlw	-9
  7917  014D00  50E3               	movf	plusw1,w,c
  7918  014D02  E108               	bnz	l10518
  7919  014D04  0EF6               	movlw	-10
  7920  014D06  006F FF8C  F032    	movff	plusw1,btemp
  7921  014D0C  0E07               	movlw	7
  7922  014D0E  5E32               	subwf	btemp^0,f,c
  7923  014D10  A0D8               	btfss	status,0,c
  7924  014D12  D0C6               	goto	u10480
  7925  014D14                     l10518:
  7926                           
  7927                           ;stkvar	_c @ sp[(-4)+-4]
  7928                           ;stkvar	_s @ sp[(-4)+0]
  7929  014D14  0EFC               	movlw	-4
  7930  014D16  006F FF8C  F03C    	movff	plusw1,btemp+10
  7931  014D1C  0EFD               	movlw	-3
  7932  014D1E  006F FF8C  F03D    	movff	plusw1,btemp+11
  7933  014D24  0E03               	movlw	3
  7934  014D26  243C               	addwf	(btemp+10)^0,w,c
  7935  014D28  6ED9               	movwf	fsr2l,c
  7936  014D2A  0E00               	movlw	0
  7937  014D2C  203D               	addwfc	(btemp+11)^0,w,c
  7938  014D2E  6EDA               	movwf	fsr2h,c
  7939  014D30  0EF8               	movlw	-8
  7940  014D32  006F FF8F FFDF     	movff	plusw1,indf2
  7941                           
  7942                           ;stkvar	_c @ sp[(-4)+-4]
  7943                           ;stkvar	_n @ sp[(-4)+-6]
  7944                           ;stkvar	_s @ sp[(-4)+0]
  7945  014D38  0EFC               	movlw	-4
  7946  014D3A  006F FF8C  F03C    	movff	plusw1,btemp+10
  7947  014D40  0EFD               	movlw	-3
  7948  014D42  006F FF8C  F03D    	movff	plusw1,btemp+11
  7949  014D48  0EF6               	movlw	-10
  7950  014D4A  50E3               	movf	plusw1,w,c
  7951  014D4C  263C               	addwf	(btemp+10)^0,f,c
  7952  014D4E  0EF7               	movlw	-9
  7953  014D50  50E3               	movf	plusw1,w,c
  7954  014D52  223D               	addwfc	(btemp+11)^0,f,c
  7955  014D54  0EFC               	movlw	252
  7956  014D56  243C               	addwf	(btemp+10)^0,w,c
  7957  014D58  6ED9               	movwf	fsr2l,c
  7958  014D5A  0EFF               	movlw	255
  7959  014D5C  203D               	addwfc	(btemp+11)^0,w,c
  7960  014D5E  6EDA               	movwf	fsr2h,c
  7961  014D60  0EF8               	movlw	-8
  7962  014D62  006F FF8F FFDF     	movff	plusw1,indf2
  7963                           
  7964                           ;stkvar	_n @ sp[(-4)+-6]
  7965  014D68  0EF7               	movlw	-9
  7966  014D6A  50E3               	movf	plusw1,w,c
  7967  014D6C  E108               	bnz	l10524
  7968  014D6E  0EF6               	movlw	-10
  7969  014D70  006F FF8C  F032    	movff	plusw1,btemp
  7970  014D76  0E09               	movlw	9
  7971  014D78  5E32               	subwf	btemp^0,f,c
  7972  014D7A  A0D8               	btfss	status,0,c
  7973  014D7C  D091               	goto	u10480
  7974  014D7E                     l10524:
  7975                           
  7976                           ;stkvar	_s @ sp[(-4)+0]
  7977  014D7E  0EFC               	movlw	-4
  7978  014D80  006F FF8C  F03C    	movff	plusw1,btemp+10
  7979  014D86  1E3C               	comf	(btemp+10)^0,f,c
  7980  014D88  0EFD               	movlw	-3
  7981  014D8A  006F FF8C  F03D    	movff	plusw1,btemp+11
  7982  014D90  1E3D               	comf	(btemp+11)^0,f,c
  7983  014D92  2A3C               	incf	(btemp+10)^0,f,c
  7984  014D94  B4D8               	btfsc	status,2,c
  7985  014D96  2A3D               	incf	(btemp+11)^0,f,c
  7986  014D98  0E03               	movlw	3
  7987  014D9A  163C               	andwf	(btemp+10)^0,f,c
  7988  014D9C  0E00               	movlw	0
  7989  014D9E  163D               	andwf	(btemp+11)^0,f,c
  7990                           
  7991                           ;stkvar	_k @ sp[(-4)+2]
  7992  014DA0  0EFE               	movlw	-2
  7993  014DA2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7994  014DA8  0EFF               	movlw	-1
  7995  014DAA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7996                           
  7997                           ;stkvar	_k @ sp[(-4)+2]
  7998                           ;stkvar	_s @ sp[(-4)+0]
  7999  014DB0  0EFC               	movlw	-4
  8000  014DB2  50E3               	movf	plusw1,w,c
  8001  014DB4  6E32               	movwf	btemp^0,c
  8002  014DB6  0EFE               	movlw	-2
  8003  014DB8  50E3               	movf	plusw1,w,c
  8004  014DBA  2632               	addwf	btemp^0,f,c
  8005  014DBC  0EFC               	movlw	-4
  8006  014DBE  0060  F0CB  FFE3   	movff	btemp,plusw1
  8007  014DC4  0EFD               	movlw	-3
  8008  014DC6  50E3               	movf	plusw1,w,c
  8009  014DC8  6E32               	movwf	btemp^0,c
  8010  014DCA  0EFF               	movlw	-1
  8011  014DCC  50E3               	movf	plusw1,w,c
  8012  014DCE  2232               	addwfc	btemp^0,f,c
  8013  014DD0  0EFD               	movlw	-3
  8014  014DD2  0060  F0CB  FFE3   	movff	btemp,plusw1
  8015                           
  8016                           ;stkvar	_k @ sp[(-4)+2]
  8017                           ;stkvar	_n @ sp[(-4)+-6]
  8018  014DD8  0EF6               	movlw	-10
  8019  014DDA  50E3               	movf	plusw1,w,c
  8020  014DDC  6E32               	movwf	btemp^0,c
  8021  014DDE  0EFE               	movlw	-2
  8022  014DE0  50E3               	movf	plusw1,w,c
  8023  014DE2  5E32               	subwf	btemp^0,f,c
  8024  014DE4  0EF6               	movlw	-10
  8025  014DE6  0060  F0CB  FFE3   	movff	btemp,plusw1
  8026  014DEC  0EF7               	movlw	-9
  8027  014DEE  50E3               	movf	plusw1,w,c
  8028  014DF0  6E32               	movwf	btemp^0,c
  8029  014DF2  0EFF               	movlw	-1
  8030  014DF4  50E3               	movf	plusw1,w,c
  8031  014DF6  5A32               	subwfb	btemp^0,f,c
  8032  014DF8  0EF7               	movlw	-9
  8033  014DFA  0060  F0CB  FFE3   	movff	btemp,plusw1
  8034  014E00  0EFC               	movlw	252
  8035  014E02  6E3C               	movwf	(btemp+10)^0,c
  8036  014E04  0EFF               	movlw	255
  8037  014E06  6E3D               	movwf	(btemp+11)^0,c
  8038                           
  8039                           ;stkvar	_n @ sp[(-4)+-6]
  8040  014E08  0EF6               	movlw	-10
  8041  014E0A  006F FF8C  F032    	movff	plusw1,btemp
  8042  014E10  503C               	movf	(btemp+10)^0,w,c
  8043  014E12  1632               	andwf	btemp^0,f,c
  8044  014E14  0EF6               	movlw	-10
  8045  014E16  0060  F0CB  FFE3   	movff	btemp,plusw1
  8046  014E1C  0EF7               	movlw	-9
  8047  014E1E  006F FF8C  F032    	movff	plusw1,btemp
  8048  014E24  503D               	movf	(btemp+11)^0,w,c
  8049  014E26  1632               	andwf	btemp^0,f,c
  8050  014E28  0EF7               	movlw	-9
  8051  014E2A  D02E               	goto	L6
  8052  014E2C                     l10532:
  8053                           
  8054                           ;stkvar	_c @ sp[(-4)+-4]
  8055                           ;stkvar	_s @ sp[(-4)+0]
  8056  014E2C  0EFC               	movlw	-4
  8057  014E2E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8058  014E34  0EFD               	movlw	-3
  8059  014E36  006F FF8F FFDA     	movff	plusw1,fsr2h
  8060  014E3C  0EF8               	movlw	-8
  8061  014E3E  006F FF8F FFDF     	movff	plusw1,indf2
  8062                           
  8063                           ;stkvar	_n @ sp[(-4)+-6]
  8064  014E44  0EF6               	movlw	-10
  8065  014E46  006F FF8C  F032    	movff	plusw1,btemp
  8066  014E4C  0E01               	movlw	1
  8067  014E4E  5E32               	subwf	btemp^0,f,c
  8068  014E50  0EF6               	movlw	-10
  8069  014E52  0060  F0CB  FFE3   	movff	btemp,plusw1
  8070  014E58  0EF7               	movlw	-9
  8071  014E5A  006F FF8C  F032    	movff	plusw1,btemp
  8072  014E60  0E00               	movlw	0
  8073  014E62  5A32               	subwfb	btemp^0,f,c
  8074  014E64  0EF7               	movlw	-9
  8075  014E66  0060  F0CB  FFE3   	movff	btemp,plusw1
  8076                           
  8077                           ;stkvar	_s @ sp[(-4)+0]
  8078  014E6C  0EFC               	movlw	-4
  8079  014E6E  50E3               	movf	plusw1,w,c
  8080  014E70  0F01               	addlw	1
  8081  014E72  6E32               	movwf	btemp^0,c
  8082  014E74  0EFC               	movlw	-4
  8083  014E76  0060  F0CB  FFE3   	movff	btemp,plusw1
  8084  014E7C  6A32               	clrf	btemp^0,c
  8085  014E7E  0EFD               	movlw	-3
  8086  014E80  50E3               	movf	plusw1,w,c
  8087  014E82  2032               	addwfc	btemp^0,w,c
  8088  014E84  6E32               	movwf	btemp^0,c
  8089  014E86  0EFD               	movlw	-3
  8090  014E88                     L6:
  8091  014E88  0060  F0CB  FFE3   	movff	btemp,plusw1
  8092                           
  8093                           ;stkvar	_n @ sp[(-4)+-6]
  8094  014E8E  0EF6               	movlw	-10
  8095  014E90  006F FF8C  F032    	movff	plusw1,btemp
  8096  014E96  0EF7               	movlw	-9
  8097  014E98  50E3               	movf	plusw1,w,c
  8098  014E9A  1032               	iorwf	btemp^0,w,c
  8099  014E9C  A4D8               	btfss	status,2,c
  8100  014E9E  D7C6               	goto	l10532
  8101  014EA0                     u10480:
  8102                           
  8103                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8104  014EA0  0EF6               	movlw	246
  8105  014EA2  26E1               	addwf	fsr1l,f,c
  8106  014EA4  0EFF               	movlw	255
  8107  014EA6  22E2               	addwfc	fsr1h,f,c
  8108  014EA8  0012               	return		;funcret
  8109  014EAA                     __end_of_memset:
  8110                           	opt callstack 0
  8111                           
  8112 ;; *************** function _printf *****************
  8113 ;; Defined at:
  8114 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;  fmt             2  [STACK] PTR const unsigned char 
  8117 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  8118 ;; Auto vars:     Size  Location     Type
  8119 ;;  ap              2  [STACK] PTR void [1]
  8120 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8121 ;;  ret             2    0        int 
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  2  [STACK] int 
  8124 ;; Registers used:
  8125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8126 ;; Tracked objects:
  8127 ;;		On entry : 3F/3B
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8135 ;;Total ram usage:        0 bytes
  8136 ;; Hardware stack levels used:    1
  8137 ;; Hardware stack levels required when called:   14
  8138 ;; This function calls:
  8139 ;;		_vfprintf
  8140 ;; This function is called by:
  8141 ;;		_eaDogM_WriteString
  8142 ;;		_send_lcd_cmd_dma
  8143 ;; This function uses a reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text38
  8147  018108                     __ptext38:
  8148                           	opt callstack 0
  8149  018108                     _printf:
  8150                           	opt callstack 0
  8151                           
  8152                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8153  018108  52E6               	movf	postinc1,f,c
  8154  01810A  52E6               	movf	postinc1,f,c
  8155                           
  8156                           ;stkvar	?_printf @ sp[(-2)+-3]
  8157                           
  8158                           ;incstack = 0
  8159  01810C  0EFB               	movlw	251
  8160  01810E  24E1               	addwf	fsr1l,w,c
  8161  018110  6E3C               	movwf	(btemp+10)^0,c
  8162  018112  0EFF               	movlw	255
  8163  018114  20E2               	addwfc	fsr1h,w,c
  8164  018116  6E3D               	movwf	(btemp+11)^0,c
  8165                           
  8166                           ;stkvar	_ap @ sp[(-2)+0]
  8167  018118  0EFF               	movlw	-1
  8168  01811A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8169  018120  0EFE               	movlw	-2
  8170  018122  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8171                           
  8172                           ;stkvar	_ap @ sp[(-2)+0]
  8173  018128  0EFE               	movlw	254
  8174  01812A  24E1               	addwf	fsr1l,w,c
  8175  01812C  6E32               	movwf	btemp^0,c
  8176  01812E  0EFF               	movlw	255
  8177  018130  20E2               	addwfc	fsr1h,w,c
  8178  018132  6E33               	movwf	(btemp+1)^0,c
  8179  018134  0060  F0CB  FFE6   	movff	btemp,postinc1
  8180  01813A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8181                           
  8182                           ;stkvar	_fmt @ sp[(-4)+-3]
  8183  018140  0EF9               	movlw	-7
  8184  018142  006F FF8F FFE6     	movff	plusw1,postinc1
  8185  018148  006F FF8F FFE6     	movff	plusw1,postinc1
  8186  01814E  0E00               	movlw	0
  8187  018150  6EE6               	movwf	postinc1,c
  8188  018152  0E00               	movlw	0
  8189  018154  6EE6               	movwf	postinc1,c
  8190  018156  ECA6  F0BB         	call	_vfprintf	;wreg free
  8191                           
  8192                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  8193  01815A  52E5               	movf	postdec1,f,c
  8194  01815C  52E5               	movf	postdec1,f,c
  8195  01815E  52E5               	movf	postdec1,f,c
  8196  018160  50E7               	movf	indf1,w,c
  8197  018162  5EE1               	subwf	fsr1l,f,c
  8198  018164  0E00               	movlw	0
  8199  018166  5AE2               	subwfb	fsr1h,f,c
  8200  018168  0012               	return		;funcret
  8201  01816A                     __end_of_printf:
  8202                           	opt callstack 0
  8203                           
  8204 ;; *************** function _vfprintf *****************
  8205 ;; Defined at:
  8206 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8209 ;;		 -> f(6), NULL(0), 
  8210 ;;  fmt             2  [STACK] PTR const unsigned char 
  8211 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8212 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8213 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8214 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8215 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8216 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8217 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8218 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8219 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8220 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8221 ;;  ap              2  [STACK] PTR PTR void 
  8222 ;;		 -> ap(2), ap(2), 
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;  cfmt            2  [STACK] PTR unsigned char 
  8225 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8226 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8227 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8228 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8229 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8230 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8231 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8232 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8233 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8234 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  2  [STACK] int 
  8237 ;; Registers used:
  8238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8239 ;; Tracked objects:
  8240 ;;		On entry : 0/1
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8248 ;;Total ram usage:        0 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; Hardware stack levels required when called:   13
  8251 ;; This function calls:
  8252 ;;		_vfpfcnvrt
  8253 ;; This function is called by:
  8254 ;;		_sprintf
  8255 ;;		_printf
  8256 ;; This function uses a reentrant model
  8257 ;;
  8258                           
  8259                           	psect	text39
  8260  01774C                     __ptext39:
  8261                           	opt callstack 0
  8262  01774C                     _vfprintf:
  8263                           	opt callstack 0
  8264                           
  8265                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8266  01774C  52E6               	movf	postinc1,f,c
  8267  01774E  52E6               	movf	postinc1,f,c
  8268                           
  8269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8270                           ;stkvar	_fmt @ sp[(-2)+-4]
  8271                           
  8272                           ;incstack = 0
  8273  017750  0EFA               	movlw	-6
  8274  017752  006F FF8C  F03C    	movff	plusw1,btemp+10
  8275  017758  0EFB               	movlw	-5
  8276  01775A  006F FF8C  F03D    	movff	plusw1,btemp+11
  8277                           
  8278                           ;stkvar	_cfmt @ sp[(-2)+0]
  8279  017760  0EFF               	movlw	-1
  8280  017762  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8281  017768  0EFE               	movlw	-2
  8282  01776A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8283                           
  8284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8285  017770  6A19               	clrf	_nout^0,c
  8286  017772  6A1A               	clrf	(_nout+1)^0,c
  8287                           
  8288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8289  017774  D020               	goto	l10546
  8290  017776                     l10544:
  8291                           
  8292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8293                           ;stkvar	_ap @ sp[(-2)+-6]
  8294  017776  0EF8               	movlw	-8
  8295  017778  006F FF8F FFE6     	movff	plusw1,postinc1
  8296  01777E  006F FF8F FFE6     	movff	plusw1,postinc1
  8297                           
  8298                           ;stkvar	_cfmt @ sp[(-4)+0]
  8299  017784  0EFC               	movlw	252
  8300  017786  24E1               	addwf	fsr1l,w,c
  8301  017788  6E32               	movwf	btemp^0,c
  8302  01778A  0EFF               	movlw	255
  8303  01778C  20E2               	addwfc	fsr1h,w,c
  8304  01778E  6E33               	movwf	(btemp+1)^0,c
  8305  017790  0060  F0CB  FFE6   	movff	btemp,postinc1
  8306  017796  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8307                           
  8308                           ;stkvar	_fp @ sp[(-6)+-2]
  8309  01779C  0EF8               	movlw	-8
  8310  01779E  006F FF8F FFE6     	movff	plusw1,postinc1
  8311  0177A4  006F FF8F FFE6     	movff	plusw1,postinc1
  8312  0177AA  EC22  F089         	call	_vfpfcnvrt	;wreg free
  8313  0177AE  5032               	movf	btemp^0,w,c
  8314  0177B0  2619               	addwf	_nout^0,f,c
  8315  0177B2  5033               	movf	(btemp+1)^0,w,c
  8316  0177B4  221A               	addwfc	(_nout+1)^0,f,c
  8317  0177B6                     l10546:
  8318                           
  8319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8320                           ;stkvar	_cfmt @ sp[(-2)+0]
  8321  0177B6  50E1               	movf	fsr1l,w,c
  8322  0177B8  0FFE               	addlw	-2
  8323  0177BA  6ED9               	movwf	fsr2l,c
  8324  0177BC  50E2               	movf	fsr1h,w,c
  8325  0177BE  6EDA               	movwf	fsr2h,c
  8326  0177C0  0EFF               	movlw	255
  8327  0177C2  22DA               	addwfc	fsr2h,f,c
  8328  0177C4  006F FF7B FFF6     	movff	postinc2,tblptrl
  8329  0177CA  006F FF77 FFF7     	movff	postdec2,tblptrh
  8330  0177D0                     	if	0	;tblptru may be non-zero
  8331  0177D0                     	endif
  8332  0177D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8333  0177D0  0E00               	movlw	low (__mediumconst shr (0+16))
  8334  0177D2  6EF8               	movwf	tblptru,c
  8335  0177D4                     	endif
  8336  0177D4  0008               	tblrd		*
  8337  0177D6  50F5               	movf	tablat,w,c
  8338  0177D8  0900               	iorlw	0
  8339  0177DA  A4D8               	btfss	status,2,c
  8340  0177DC  D7CC               	goto	l10544
  8341                           
  8342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8343  0177DE  0060  F064  F032   	movff	_nout,btemp
  8344  0177E4  0060  F068  F033   	movff	_nout+1,btemp+1
  8345                           
  8346                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  8347  0177EA  0EF8               	movlw	248
  8348  0177EC  26E1               	addwf	fsr1l,f,c
  8349  0177EE  0EFF               	movlw	255
  8350  0177F0  22E2               	addwfc	fsr1h,f,c
  8351  0177F2  0012               	return		;funcret
  8352  0177F4                     __end_of_vfprintf:
  8353                           	opt callstack 0
  8354                           
  8355 ;; *************** function _vfpfcnvrt *****************
  8356 ;; Defined at:
  8357 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8358 ;; Parameters:    Size  Location     Type
  8359 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8360 ;;		 -> f(6), NULL(0), 
  8361 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8362 ;;		 -> cfmt(2), 
  8363 ;;  ap              2  [STACK] PTR PTR void 
  8364 ;;		 -> ap(2), ap(2), 
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;  llu             8  [STACK] unsigned long long 
  8367 ;;  ll              8  [STACK] long long 
  8368 ;;  f               4  [STACK] long long 
  8369 ;;  ct              3  [STACK] unsigned char [3]
  8370 ;;  vp              3    0        PTR void 
  8371 ;;  cp              2  [STACK] PTR unsigned char 
  8372 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  8373 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
  8374 ;;		 -> STR_3(6), V(188), 
  8375 ;;  i               2    0        int 
  8376 ;;  done            2    0        int 
  8377 ;;  c               1  [STACK] unsigned char 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  2  [STACK] int 
  8380 ;; Registers used:
  8381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/1
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8391 ;;Total ram usage:        0 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; Hardware stack levels required when called:   12
  8394 ;; This function calls:
  8395 ;;		_atoi
  8396 ;;		_ctoa
  8397 ;;		_dtoa
  8398 ;;		_efgtoa
  8399 ;;		_fputc
  8400 ;;		_isdigit
  8401 ;;		_isupper
  8402 ;;		_stoa
  8403 ;;		_strncmp
  8404 ;;		_tolower
  8405 ;;		_xtoa
  8406 ;; This function is called by:
  8407 ;;		_vfprintf
  8408 ;; This function uses a reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text40
  8412  011244                     __ptext40:
  8413                           	opt callstack 0
  8414  011244                     _vfpfcnvrt:
  8415                           	opt callstack 0
  8416                           
  8417                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8418  011244  0E20               	movlw	32
  8419  011246  26E1               	addwf	fsr1l,f,c
  8420  011248  0E00               	movlw	0
  8421  01124A  22E2               	addwfc	fsr1h,f,c
  8422                           
  8423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8424                           ;stkvar	_fmt @ sp[(-32)+-4]
  8425                           
  8426                           ;incstack = 0
  8427  01124C  0EDC               	movlw	-36
  8428  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8429  011254  0EDD               	movlw	-35
  8430  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  8431  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8432  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  8433  011268                     	if	0	;tblptru may be non-zero
  8434  011268                     	endif
  8435  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8436  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  8437  01126A  6EF8               	movwf	tblptru,c
  8438  01126C                     	endif
  8439  01126C  0008               	tblrd		*
  8440  01126E  50F5               	movf	tablat,w,c
  8441  011270  0A25               	xorlw	37
  8442  011272  A4D8               	btfss	status,2,c
  8443  011274  EF92  F08E         	goto	l10490
  8444                           
  8445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8446                           ;stkvar	_fmt @ sp[(-32)+-4]
  8447  011278  0EDC               	movlw	-36
  8448  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8449  011280  0EDD               	movlw	-35
  8450  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  8451  011288  2ADE               	incf	postinc2,f,c
  8452  01128A  0E00               	movlw	0
  8453  01128C  22DD               	addwfc	postdec2,f,c
  8454                           
  8455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8456  01128E  6A1B               	clrf	_width^0,c
  8457  011290  6A1C               	clrf	(_width+1)^0,c
  8458  011292  6A1F               	clrf	_flags^0,c
  8459  011294  6A20               	clrf	(_flags+1)^0,c
  8460                           
  8461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8462  011296  681D               	setf	_prec^0,c
  8463  011298  681E               	setf	(_prec+1)^0,c
  8464                           
  8465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  8466                           ;stkvar	_fmt @ sp[(-32)+-4]
  8467  01129A  0EDC               	movlw	-36
  8468  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8469  0112A2  0EDD               	movlw	-35
  8470  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8471  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8472  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8473  0112B6                     	if	0	;tblptru may be non-zero
  8474  0112B6                     	endif
  8475  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8476  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8477  0112B8  6EF8               	movwf	tblptru,c
  8478  0112BA                     	endif
  8479  0112BA  0008               	tblrd		*
  8480  0112BC  50F5               	movf	tablat,w,c
  8481  0112BE  0A2A               	xorlw	42
  8482  0112C0  A4D8               	btfss	status,2,c
  8483  0112C2  D031               	goto	l10354
  8484                           
  8485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  8486                           ;stkvar	_fmt @ sp[(-32)+-4]
  8487  0112C4  0EDC               	movlw	-36
  8488  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8489  0112CC  0EDD               	movlw	-35
  8490  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8491  0112D4  2ADE               	incf	postinc2,f,c
  8492  0112D6  0E00               	movlw	0
  8493  0112D8  22DD               	addwfc	postdec2,f,c
  8494                           
  8495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  8496                           ;stkvar	_ap @ sp[(-32)+-6]
  8497  0112DA  0EDA               	movlw	-38
  8498  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8499  0112E2  0EDB               	movlw	-37
  8500  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8501  0112EA  0E02               	movlw	2
  8502  0112EC  5EDE               	subwf	postinc2,f,c
  8503  0112EE  0E00               	movlw	0
  8504  0112F0  5ADD               	subwfb	postdec2,f,c
  8505  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  8506  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  8507  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8508  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8509  01130A  006F FF78  F01B    	movff	postinc2,_width
  8510  011310  006F FF74  F01C    	movff	postdec2,_width+1
  8511                           
  8512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  8513  011316  AE1C               	btfss	(_width+1)^0,7,c
  8514  011318  D066               	goto	u10240
  8515                           
  8516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  8517  01131A  801F               	bsf	_flags^0,0,c
  8518                           
  8519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  8520  01131C  6C1B               	negf	_width^0,c
  8521  01131E  1E1C               	comf	(_width+1)^0,f,c
  8522  011320  B0D8               	btfsc	status,0,c
  8523  011322  2A1C               	incf	(_width+1)^0,f,c
  8524  011324  D060               	goto	u10240
  8525  011326                     l10354:
  8526                           
  8527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  8528                           ;stkvar	_fmt @ sp[(-32)+-4]
  8529  011326  0EDC               	movlw	-36
  8530  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  8531  01132E  0EDD               	movlw	-35
  8532  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  8533  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  8534  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  8535  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8536  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8537  01134E  EC62  F0AB         	call	_atoi	;wreg free
  8538  011352  0060  F0C8  F01B   	movff	btemp,_width
  8539  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  8540                           
  8541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8542  01135E  D00B               	goto	l10358
  8543  011360                     l10356:
  8544                           
  8545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  8546                           ;stkvar	_fmt @ sp[(-32)+-4]
  8547  011360  0EDC               	movlw	-36
  8548  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  8549  011368  0EDD               	movlw	-35
  8550  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8551  011370  2ADE               	incf	postinc2,f,c
  8552  011372  0E00               	movlw	0
  8553  011374  22DD               	addwfc	postdec2,f,c
  8554  011376                     l10358:
  8555  011376  0ED0               	movlw	208
  8556  011378  6E3C               	movwf	(btemp+10)^0,c
  8557  01137A  0EFF               	movlw	255
  8558  01137C  6E3D               	movwf	(btemp+11)^0,c
  8559                           
  8560                           ;stkvar	_fmt @ sp[(-32)+-4]
  8561  01137E  0EDC               	movlw	-36
  8562  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  8563  011386  0EDD               	movlw	-35
  8564  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  8565  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8566  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  8567  01139A                     	if	0	;tblptru may be non-zero
  8568  01139A                     	endif
  8569  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8570  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  8571  01139C  6EF8               	movwf	tblptru,c
  8572  01139E                     	endif
  8573  01139E  0008               	tblrd		*
  8574  0113A0  50F5               	movf	tablat,w,c
  8575  0113A2  6E3A               	movwf	(btemp+8)^0,c
  8576  0113A4  6A3B               	clrf	(btemp+9)^0,c
  8577  0113A6  503C               	movf	(btemp+10)^0,w,c
  8578  0113A8  263A               	addwf	(btemp+8)^0,f,c
  8579  0113AA  503D               	movf	(btemp+11)^0,w,c
  8580  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  8581  0113AE  503B               	movf	(btemp+9)^0,w,c
  8582  0113B0  E106               	bnz	u10220
  8583  0113B2  0E0A               	movlw	10
  8584  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  8585  0113B6  B0D8               	btfsc	status,0,c
  8586  0113B8  D002               	goto	u10220
  8587  0113BA  0E01               	movlw	1
  8588  0113BC  D001               	goto	u10230
  8589  0113BE                     u10220:
  8590  0113BE  0E00               	movlw	0
  8591  0113C0                     u10230:
  8592  0113C0  6E3C               	movwf	(btemp+10)^0,c
  8593  0113C2  6A3D               	clrf	(btemp+11)^0,c
  8594                           
  8595                           ;stkvar	_vfpfcnvrt$4682 @ sp[(-32)+4]
  8596  0113C4  0EE4               	movlw	-28
  8597  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8598  0113CC  0EE5               	movlw	-27
  8599  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8600                           
  8601                           ;stkvar	_vfpfcnvrt$4682 @ sp[(-32)+4]
  8602  0113D4  0EE4               	movlw	-28
  8603  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  8604  0113DC  0EE5               	movlw	-27
  8605  0113DE  50E3               	movf	plusw1,w,c
  8606  0113E0  1032               	iorwf	btemp^0,w,c
  8607  0113E2  A4D8               	btfss	status,2,c
  8608  0113E4  D7BD               	goto	l10356
  8609  0113E6                     u10240:
  8610                           
  8611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  8612                           ;stkvar	_fmt @ sp[(-32)+-4]
  8613  0113E6  0EDC               	movlw	-36
  8614  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8615  0113EE  0EDD               	movlw	-35
  8616  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8617  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8618  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8619  011402                     	if	0	;tblptru may be non-zero
  8620  011402                     	endif
  8621  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8622  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  8623  011404  6EF8               	movwf	tblptru,c
  8624  011406                     	endif
  8625  011406  0008               	tblrd		*
  8626  011408  50F5               	movf	tablat,w,c
  8627  01140A  0A2E               	xorlw	46
  8628  01140C  A4D8               	btfss	status,2,c
  8629  01140E  D0AC               	goto	u10290
  8630                           
  8631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  8632  011410  6A1D               	clrf	_prec^0,c
  8633  011412  6A1E               	clrf	(_prec+1)^0,c
  8634                           
  8635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  8636                           ;stkvar	_fmt @ sp[(-32)+-4]
  8637  011414  0EDC               	movlw	-36
  8638  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  8639  01141C  0EDD               	movlw	-35
  8640  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8641  011424  2ADE               	incf	postinc2,f,c
  8642  011426  0E00               	movlw	0
  8643  011428  22DD               	addwfc	postdec2,f,c
  8644                           
  8645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  8646                           ;stkvar	_fmt @ sp[(-32)+-4]
  8647  01142A  0EDC               	movlw	-36
  8648  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8649  011432  0EDD               	movlw	-35
  8650  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  8651  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8652  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  8653  011446                     	if	0	;tblptru may be non-zero
  8654  011446                     	endif
  8655  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8656  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  8657  011448  6EF8               	movwf	tblptru,c
  8658  01144A                     	endif
  8659  01144A  0008               	tblrd		*
  8660  01144C  50F5               	movf	tablat,w,c
  8661  01144E  0A2A               	xorlw	42
  8662  011450  A4D8               	btfss	status,2,c
  8663  011452  D02A               	goto	l10376
  8664                           
  8665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  8666                           ;stkvar	_fmt @ sp[(-32)+-4]
  8667  011454  0EDC               	movlw	-36
  8668  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  8669  01145C  0EDD               	movlw	-35
  8670  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8671  011464  2ADE               	incf	postinc2,f,c
  8672  011466  0E00               	movlw	0
  8673  011468  22DD               	addwfc	postdec2,f,c
  8674                           
  8675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  8676                           ;stkvar	_ap @ sp[(-32)+-6]
  8677  01146A  0EDA               	movlw	-38
  8678  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8679  011472  0EDB               	movlw	-37
  8680  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  8681  01147A  0E02               	movlw	2
  8682  01147C  5EDE               	subwf	postinc2,f,c
  8683  01147E  0E00               	movlw	0
  8684  011480  5ADD               	subwfb	postdec2,f,c
  8685  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  8686  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  8687  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8688  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8689  01149A  006F FF78  F01D    	movff	postinc2,_prec
  8690  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  8691                           
  8692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  8693  0114A6  D060               	goto	u10290
  8694  0114A8                     l10376:
  8695                           
  8696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  8697                           ;stkvar	_fmt @ sp[(-32)+-4]
  8698  0114A8  0EDC               	movlw	-36
  8699  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8700  0114B0  0EDD               	movlw	-35
  8701  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8702  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  8703  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  8704  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8705  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8706  0114D0  EC62  F0AB         	call	_atoi	;wreg free
  8707  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  8708  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  8709                           
  8710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8711  0114E0  D00B               	goto	l10380
  8712  0114E2                     l10378:
  8713                           
  8714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  8715                           ;stkvar	_fmt @ sp[(-32)+-4]
  8716  0114E2  0EDC               	movlw	-36
  8717  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8718  0114EA  0EDD               	movlw	-35
  8719  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8720  0114F2  2ADE               	incf	postinc2,f,c
  8721  0114F4  0E00               	movlw	0
  8722  0114F6  22DD               	addwfc	postdec2,f,c
  8723  0114F8                     l10380:
  8724  0114F8  0ED0               	movlw	208
  8725  0114FA  6E3C               	movwf	(btemp+10)^0,c
  8726  0114FC  0EFF               	movlw	255
  8727  0114FE  6E3D               	movwf	(btemp+11)^0,c
  8728                           
  8729                           ;stkvar	_fmt @ sp[(-32)+-4]
  8730  011500  0EDC               	movlw	-36
  8731  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  8732  011508  0EDD               	movlw	-35
  8733  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8734  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  8735  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  8736  01151C                     	if	0	;tblptru may be non-zero
  8737  01151C                     	endif
  8738  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8739  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  8740  01151E  6EF8               	movwf	tblptru,c
  8741  011520                     	endif
  8742  011520  0008               	tblrd		*
  8743  011522  50F5               	movf	tablat,w,c
  8744  011524  6E3A               	movwf	(btemp+8)^0,c
  8745  011526  6A3B               	clrf	(btemp+9)^0,c
  8746  011528  503C               	movf	(btemp+10)^0,w,c
  8747  01152A  263A               	addwf	(btemp+8)^0,f,c
  8748  01152C  503D               	movf	(btemp+11)^0,w,c
  8749  01152E  223B               	addwfc	(btemp+9)^0,f,c
  8750  011530  503B               	movf	(btemp+9)^0,w,c
  8751  011532  E106               	bnz	u10270
  8752  011534  0E0A               	movlw	10
  8753  011536  5C3A               	subwf	(btemp+8)^0,w,c
  8754  011538  B0D8               	btfsc	status,0,c
  8755  01153A  D002               	goto	u10270
  8756  01153C  0E01               	movlw	1
  8757  01153E  D001               	goto	u10280
  8758  011540                     u10270:
  8759  011540  0E00               	movlw	0
  8760  011542                     u10280:
  8761  011542  6E3C               	movwf	(btemp+10)^0,c
  8762  011544  6A3D               	clrf	(btemp+11)^0,c
  8763                           
  8764                           ;stkvar	_vfpfcnvrt$4683 @ sp[(-32)+0]
  8765  011546  0EE0               	movlw	-32
  8766  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8767  01154E  0EE1               	movlw	-31
  8768  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8769                           
  8770                           ;stkvar	_vfpfcnvrt$4683 @ sp[(-32)+0]
  8771  011556  0EE0               	movlw	-32
  8772  011558  006F FF8C  F032    	movff	plusw1,btemp
  8773  01155E  0EE1               	movlw	-31
  8774  011560  50E3               	movf	plusw1,w,c
  8775  011562  1032               	iorwf	btemp^0,w,c
  8776  011564  A4D8               	btfss	status,2,c
  8777  011566  D7BD               	goto	l10378
  8778  011568                     u10290:
  8779                           
  8780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  8781                           ;stkvar	_fmt @ sp[(-32)+-4]
  8782  011568  0EDC               	movlw	-36
  8783  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8784  011570  0EDD               	movlw	-35
  8785  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  8786  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  8787  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8788  011584                     	if	0	;tblptru may be non-zero
  8789  011584                     	endif
  8790  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8791  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  8792  011586  6EF8               	movwf	tblptru,c
  8793  011588                     	endif
  8794  011588  0008               	tblrd		*
  8795  01158A  50F5               	movf	tablat,w,c
  8796  01158C  6EE6               	movwf	postinc1,c
  8797  01158E  0E00               	movlw	0
  8798  011590  6EE6               	movwf	postinc1,c
  8799  011592  EC9C  F0BE         	call	_tolower	;wreg free
  8800                           
  8801                           ;stkvar	_ct @ sp[(-32)+26]
  8802  011596  0EFA               	movlw	-6
  8803  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  8804                           
  8805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  8806                           ;stkvar	_ct @ sp[(-32)+26]
  8807  01159E  0EFA               	movlw	-6
  8808  0115A0  50E3               	movf	plusw1,w,c
  8809  0115A2  B4D8               	btfsc	status,2,c
  8810  0115A4  D05B               	goto	l10396
  8811                           
  8812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  8813                           ;stkvar	_ct @ sp[(-32)+26]
  8814  0115A6  0EFB               	movlw	251
  8815  0115A8  24E1               	addwf	fsr1l,w,c
  8816  0115AA  6ED9               	movwf	fsr2l,c
  8817  0115AC  0EFF               	movlw	255
  8818  0115AE  20E2               	addwfc	fsr1h,w,c
  8819  0115B0  6EDA               	movwf	fsr2h,c
  8820                           
  8821                           ;stkvar	_fmt @ sp[(-32)+-4]
  8822  0115B2  0EDC               	movlw	-36
  8823  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  8824  0115BA  0EDD               	movlw	-35
  8825  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  8826  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  8827  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  8828  0115CE  0E01               	movlw	1
  8829  0115D0  263C               	addwf	(btemp+10)^0,f,c
  8830  0115D2  0E00               	movlw	0
  8831  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  8832  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8833  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8834  0115E2                     	if	0	;tblptru may be non-zero
  8835  0115E2                     	endif
  8836  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8837  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  8838  0115E4  6EF8               	movwf	tblptru,c
  8839  0115E6                     	endif
  8840  0115E6  0008               	tblrd		*
  8841  0115E8  50F5               	movf	tablat,w,c
  8842  0115EA  6EE6               	movwf	postinc1,c
  8843  0115EC  0E00               	movlw	0
  8844  0115EE  6EE6               	movwf	postinc1,c
  8845  0115F0  EC9C  F0BE         	call	_tolower	;wreg free
  8846  0115F4  5032               	movf	btemp^0,w,c
  8847  0115F6  6EDF               	movwf	indf2,c
  8848                           
  8849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  8850                           ;stkvar	_ct @ sp[(-32)+26]
  8851  0115F8  0EFB               	movlw	251
  8852  0115FA  24E1               	addwf	fsr1l,w,c
  8853  0115FC  6ED9               	movwf	fsr2l,c
  8854  0115FE  0EFF               	movlw	255
  8855  011600  20E2               	addwfc	fsr1h,w,c
  8856  011602  6EDA               	movwf	fsr2h,c
  8857  011604  50DF               	movf	indf2,w,c
  8858  011606  B4D8               	btfsc	status,2,c
  8859  011608  D029               	goto	l10396
  8860                           
  8861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  8862                           ;stkvar	_ct @ sp[(-32)+26]
  8863  01160A  0EFC               	movlw	252
  8864  01160C  24E1               	addwf	fsr1l,w,c
  8865  01160E  6ED9               	movwf	fsr2l,c
  8866  011610  0EFF               	movlw	255
  8867  011612  20E2               	addwfc	fsr1h,w,c
  8868  011614  6EDA               	movwf	fsr2h,c
  8869                           
  8870                           ;stkvar	_fmt @ sp[(-32)+-4]
  8871  011616  0EDC               	movlw	-36
  8872  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  8873  01161E  0EDD               	movlw	-35
  8874  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  8875  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  8876  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  8877  011632  0E02               	movlw	2
  8878  011634  263C               	addwf	(btemp+10)^0,f,c
  8879  011636  0E00               	movlw	0
  8880  011638  223D               	addwfc	(btemp+11)^0,f,c
  8881  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8882  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8883  011646                     	if	0	;tblptru may be non-zero
  8884  011646                     	endif
  8885  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8886  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  8887  011648  6EF8               	movwf	tblptru,c
  8888  01164A                     	endif
  8889  01164A  0008               	tblrd		*
  8890  01164C  50F5               	movf	tablat,w,c
  8891  01164E  6EE6               	movwf	postinc1,c
  8892  011650  0E00               	movlw	0
  8893  011652  6EE6               	movwf	postinc1,c
  8894  011654  EC9C  F0BE         	call	_tolower	;wreg free
  8895  011658  5032               	movf	btemp^0,w,c
  8896  01165A  6EDF               	movwf	indf2,c
  8897  01165C                     l10396:
  8898                           
  8899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  8900                           ;stkvar	_fmt @ sp[(-32)+-4]
  8901  01165C  0EDC               	movlw	-36
  8902  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8903  011664  0EDD               	movlw	-35
  8904  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  8905  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8906  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  8907  011678                     	if	0	;tblptru may be non-zero
  8908  011678                     	endif
  8909  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8910  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  8911  01167A  6EF8               	movwf	tblptru,c
  8912  01167C                     	endif
  8913  01167C  0008               	tblrd		*
  8914  01167E  50F5               	movf	tablat,w,c
  8915  011680  0A63               	xorlw	99
  8916  011682  A4D8               	btfss	status,2,c
  8917  011684  D036               	goto	l10406
  8918                           
  8919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  8920                           ;stkvar	_fmt @ sp[(-32)+-4]
  8921  011686  0EDC               	movlw	-36
  8922  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  8923  01168E  0EDD               	movlw	-35
  8924  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  8925  011696  2ADE               	incf	postinc2,f,c
  8926  011698  0E00               	movlw	0
  8927  01169A  22DD               	addwfc	postdec2,f,c
  8928                           
  8929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8930                           ;stkvar	_ap @ sp[(-32)+-6]
  8931  01169C  0EDA               	movlw	-38
  8932  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8933  0116A4  0EDB               	movlw	-37
  8934  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8935  0116AC  0E02               	movlw	2
  8936  0116AE  5EDE               	subwf	postinc2,f,c
  8937  0116B0  0E00               	movlw	0
  8938  0116B2  5ADD               	subwfb	postdec2,f,c
  8939  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  8940  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  8941  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8942  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8943  0116CC  50DF               	movf	indf2,w,c
  8944  0116CE  6E3D               	movwf	(btemp+11)^0,c
  8945                           
  8946                           ;stkvar	_c @ sp[(-32)+31]
  8947  0116D0  0EFF               	movlw	-1
  8948  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8949                           
  8950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8951                           ;stkvar	_c @ sp[(-32)+31]
  8952  0116D8  0EFF               	movlw	-1
  8953  0116DA  50E3               	movf	plusw1,w,c
  8954  0116DC  6EE6               	movwf	postinc1,c
  8955                           
  8956                           ;stkvar	_fp @ sp[(-33)+-2]
  8957  0116DE  0EDD               	movlw	-35
  8958  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8959  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  8960  0116EC  EC16  F0BE         	call	_ctoa	;wreg free
  8961  0116F0  D343               	goto	l2086
  8962  0116F2                     l10406:
  8963                           
  8964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8965                           ;stkvar	_fmt @ sp[(-32)+-4]
  8966  0116F2  0EDC               	movlw	-36
  8967  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8968  0116FA  0EDD               	movlw	-35
  8969  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8970  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  8971  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  8972  01170E                     	if	0	;tblptru may be non-zero
  8973  01170E                     	endif
  8974  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8975  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  8976  011710  6EF8               	movwf	tblptru,c
  8977  011712                     	endif
  8978  011712  0008               	tblrd		*
  8979  011714  50F5               	movf	tablat,w,c
  8980  011716  0A64               	xorlw	100
  8981  011718  B4D8               	btfsc	status,2,c
  8982  01171A  D015               	goto	u10340
  8983                           
  8984                           ;stkvar	_fmt @ sp[(-32)+-4]
  8985  01171C  0EDC               	movlw	-36
  8986  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8987  011724  0EDD               	movlw	-35
  8988  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  8989  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8990  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  8991  011738                     	if	0	;tblptru may be non-zero
  8992  011738                     	endif
  8993  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8994  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  8995  01173A  6EF8               	movwf	tblptru,c
  8996  01173C                     	endif
  8997  01173C  0008               	tblrd		*
  8998  01173E  50F5               	movf	tablat,w,c
  8999  011740  0A69               	xorlw	105
  9000  011742  A4D8               	btfss	status,2,c
  9001  011744  D075               	goto	l10418
  9002  011746                     u10340:
  9003                           
  9004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9005                           ;stkvar	_fmt @ sp[(-32)+-4]
  9006  011746  0EDC               	movlw	-36
  9007  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  9008  01174E  0EDD               	movlw	-35
  9009  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  9010  011756  2ADE               	incf	postinc2,f,c
  9011  011758  0E00               	movlw	0
  9012  01175A  22DD               	addwfc	postdec2,f,c
  9013                           
  9014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9015                           ;stkvar	_ap @ sp[(-32)+-6]
  9016  01175C  0EDA               	movlw	-38
  9017  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9018  011764  0EDB               	movlw	-37
  9019  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  9020  01176C  0E02               	movlw	2
  9021  01176E  5EDE               	subwf	postinc2,f,c
  9022  011770  0E00               	movlw	0
  9023  011772  5ADD               	subwfb	postdec2,f,c
  9024  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  9025  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  9026  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9027  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9028  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  9029  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  9030                           
  9031                           ;stkvar	_ll @ sp[(-32)+14]
  9032  011798  0EEE               	movlw	-18
  9033  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9034  0117A0  0EEF               	movlw	-17
  9035  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9036  0117A8  6A32               	clrf	btemp^0,c
  9037  0117AA  BEE3               	btfsc	plusw1,7,c
  9038  0117AC  6832               	setf	btemp^0,c
  9039  0117AE  0EF0               	movlw	-16
  9040  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9041  0117B6  0EF1               	movlw	-15
  9042  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9043  0117BE  0EF2               	movlw	-14
  9044  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9045  0117C6  0EF3               	movlw	-13
  9046  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9047  0117CE  0EF4               	movlw	-12
  9048  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9049  0117D6  0EF5               	movlw	-11
  9050  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9051                           
  9052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9053                           ;stkvar	_ll @ sp[(-32)+14]
  9054  0117DE  50E1               	movf	fsr1l,w,c
  9055  0117E0  0FEE               	addlw	-18
  9056  0117E2  6ED9               	movwf	fsr2l,c
  9057  0117E4  50E2               	movf	fsr1h,w,c
  9058  0117E6  6EDA               	movwf	fsr2h,c
  9059  0117E8  0EFF               	movlw	255
  9060  0117EA  22DA               	addwfc	fsr2h,f,c
  9061  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  9062  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  9063  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  9064  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  9065  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  9066  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  9067  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  9068  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  9069                           
  9070                           ;stkvar	_fp @ sp[(-40)+-2]
  9071  01181C  0ED6               	movlw	-42
  9072  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  9073  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  9074  01182A  EC0C  F0A0         	call	_dtoa	;wreg free
  9075  01182E  D2A4               	goto	l2086
  9076  011830                     l10418:
  9077                           
  9078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  9079                           ;stkvar	_ct @ sp[(-32)+26]
  9080  011830  0EFA               	movlw	-6
  9081  011832  006F FF8C  F032    	movff	plusw1,btemp
  9082  011838  0E66               	movlw	102
  9083  01183A  1832               	xorwf	btemp^0,w,c
  9084  01183C  A4D8               	btfss	status,2,c
  9085  01183E  D06E               	goto	l10430
  9086                           
  9087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  9088                           ;stkvar	_fmt @ sp[(-32)+-4]
  9089  011840  0EDC               	movlw	-36
  9090  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  9091  011848  0EDD               	movlw	-35
  9092  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9093  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  9094  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  9095  01185C                     	if	0	;tblptru may be non-zero
  9096  01185C                     	endif
  9097  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9098  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  9099  01185E  6EF8               	movwf	tblptru,c
  9100  011860                     	endif
  9101                           
  9102                           ;stkvar	_c @ sp[(-32)+31]
  9103  011860  0008               	tblrd		*
  9104  011862  0EFF               	movlw	-1
  9105  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  9106                           
  9107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  9108                           ;stkvar	_fmt @ sp[(-32)+-4]
  9109  01186A  0EDC               	movlw	-36
  9110  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9111  011872  0EDD               	movlw	-35
  9112  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  9113  01187A  2ADE               	incf	postinc2,f,c
  9114  01187C  0E00               	movlw	0
  9115  01187E  22DD               	addwfc	postdec2,f,c
  9116                           
  9117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  9118                           ;stkvar	_ap @ sp[(-32)+-6]
  9119  011880  0EDA               	movlw	-38
  9120  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  9121  011888  0EDB               	movlw	-37
  9122  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9123  011890  0E04               	movlw	4
  9124  011892  5EDE               	subwf	postinc2,f,c
  9125  011894  0E00               	movlw	0
  9126  011896  5ADD               	subwfb	postdec2,f,c
  9127  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  9128  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  9129  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9130  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9131  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  9132  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  9133  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  9134  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  9135                           
  9136                           ;stkvar	_f @ sp[(-32)+22]
  9137  0118C8  0EF6               	movlw	-10
  9138  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  9139  0118D0  0EF7               	movlw	-9
  9140  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  9141  0118D8  0EF8               	movlw	-8
  9142  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9143  0118E0  0EF9               	movlw	-7
  9144  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9145  0118E8                     l10426:
  9146                           
  9147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  9148                           ;stkvar	_c @ sp[(-32)+31]
  9149  0118E8  0EFF               	movlw	-1
  9150  0118EA  50E3               	movf	plusw1,w,c
  9151  0118EC  6EE6               	movwf	postinc1,c
  9152                           
  9153                           ;stkvar	_f @ sp[(-33)+22]
  9154  0118EE  0EF5               	movlw	-11
  9155  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9156  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9157  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  9158  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  9159                           
  9160                           ;stkvar	_fp @ sp[(-37)+-2]
  9161  011908  0ED9               	movlw	-39
  9162  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  9163  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  9164  011916  EC00  F080         	call	_efgtoa	;wreg free
  9165  01191A  D22E               	goto	l2086
  9166  01191C                     l10430:
  9167                           
  9168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9169  01191C  0E02               	movlw	2
  9170  01191E  6EE6               	movwf	postinc1,c
  9171  011920  0E00               	movlw	0
  9172  011922  6EE6               	movwf	postinc1,c
  9173  011924  0EF5               	movlw	low STR_54
  9174  011926  6EE6               	movwf	postinc1,c
  9175  011928  0EFF               	movlw	high STR_54
  9176  01192A  6EE6               	movwf	postinc1,c
  9177                           
  9178                           ;stkvar	_ct @ sp[(-36)+26]
  9179  01192C  0EF6               	movlw	246
  9180  01192E  24E1               	addwf	fsr1l,w,c
  9181  011930  6E32               	movwf	btemp^0,c
  9182  011932  0EFF               	movlw	255
  9183  011934  20E2               	addwfc	fsr1h,w,c
  9184  011936  6E33               	movwf	(btemp+1)^0,c
  9185  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  9186  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  9187  011944  ECC7  F0AF         	call	_strncmp	;wreg free
  9188  011948  5032               	movf	btemp^0,w,c
  9189  01194A  1033               	iorwf	(btemp+1)^0,w,c
  9190  01194C  A4D8               	btfss	status,2,c
  9191  01194E  D096               	goto	l10450
  9192                           
  9193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9194                           ;stkvar	_fmt @ sp[(-32)+-4]
  9195  011950  0EDC               	movlw	-36
  9196  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  9197  011958  0EDD               	movlw	-35
  9198  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9199  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  9200  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  9201  01196C  0E01               	movlw	1
  9202  01196E  263C               	addwf	(btemp+10)^0,f,c
  9203  011970  0E00               	movlw	0
  9204  011972  223D               	addwfc	(btemp+11)^0,f,c
  9205  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  9206  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  9207  011980                     	if	0	;tblptru may be non-zero
  9208  011980                     	endif
  9209  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9210  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  9211  011982  6EF8               	movwf	tblptru,c
  9212  011984                     	endif
  9213                           
  9214                           ;stkvar	_c @ sp[(-32)+31]
  9215  011984  0008               	tblrd		*
  9216  011986  0EFF               	movlw	-1
  9217  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  9218  01198E  0EBF               	movlw	191
  9219  011990  6E3C               	movwf	(btemp+10)^0,c
  9220  011992  0EFF               	movlw	255
  9221  011994  6E3D               	movwf	(btemp+11)^0,c
  9222                           
  9223                           ;stkvar	_fmt @ sp[(-32)+-4]
  9224  011996  0EDC               	movlw	-36
  9225  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  9226  01199E  0EDD               	movlw	-35
  9227  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9228  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9229  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9230  0119B2                     	if	0	;tblptru may be non-zero
  9231  0119B2                     	endif
  9232  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9233  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9234  0119B4  6EF8               	movwf	tblptru,c
  9235  0119B6                     	endif
  9236  0119B6  0008               	tblrd		*
  9237  0119B8  50F5               	movf	tablat,w,c
  9238  0119BA  6E3A               	movwf	(btemp+8)^0,c
  9239  0119BC  6A3B               	clrf	(btemp+9)^0,c
  9240  0119BE  503C               	movf	(btemp+10)^0,w,c
  9241  0119C0  263A               	addwf	(btemp+8)^0,f,c
  9242  0119C2  503D               	movf	(btemp+11)^0,w,c
  9243  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  9244  0119C6  503B               	movf	(btemp+9)^0,w,c
  9245  0119C8  E106               	bnz	u10370
  9246  0119CA  0E1A               	movlw	26
  9247  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  9248  0119CE  B0D8               	btfsc	status,0,c
  9249  0119D0  D002               	goto	u10370
  9250  0119D2  0E01               	movlw	1
  9251  0119D4  D001               	goto	u10380
  9252  0119D6                     u10370:
  9253  0119D6  0E00               	movlw	0
  9254  0119D8                     u10380:
  9255  0119D8  6E3C               	movwf	(btemp+10)^0,c
  9256  0119DA  6A3D               	clrf	(btemp+11)^0,c
  9257                           
  9258                           ;stkvar	_vfpfcnvrt$4689 @ sp[(-32)+2]
  9259  0119DC  0EE2               	movlw	-30
  9260  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9261  0119E4  0EE3               	movlw	-29
  9262  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9263                           
  9264                           ;stkvar	_vfpfcnvrt$4689 @ sp[(-32)+2]
  9265  0119EC  0EE2               	movlw	-30
  9266  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  9267  0119F4  0EE3               	movlw	-29
  9268  0119F6  50E3               	movf	plusw1,w,c
  9269  0119F8  1032               	iorwf	btemp^0,w,c
  9270                           
  9271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9272                           ;stkvar	_ap @ sp[(-32)+-6]
  9273                           
  9274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  9275                           
  9276                           ;stkvar	_f @ sp[(-32)+22]
  9277                           
  9278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  9279                           ;stkvar	_ap @ sp[(-32)+-6]
  9280  0119FA  0EDA               	movlw	-38
  9281  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9282  011A02  0EDB               	movlw	-37
  9283  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  9284  011A0A  0E04               	movlw	4
  9285  011A0C  5EDE               	subwf	postinc2,f,c
  9286  011A0E  0E00               	movlw	0
  9287  011A10  5ADD               	subwfb	postdec2,f,c
  9288  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  9289  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  9290  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9291  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9292  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  9293  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  9294  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  9295  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  9296                           
  9297                           ;stkvar	_f @ sp[(-32)+22]
  9298  011A42  0EF6               	movlw	-10
  9299  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  9300  011A4A  0EF7               	movlw	-9
  9301  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  9302  011A52  0EF8               	movlw	-8
  9303  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9304  011A5A  0EF9               	movlw	-7
  9305  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9306                           
  9307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  9308                           ;stkvar	_fmt @ sp[(-32)+-4]
  9309  011A62  0EDC               	movlw	-36
  9310  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  9311  011A6A  0EDD               	movlw	-35
  9312  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9313  011A72  0E02               	movlw	2
  9314  011A74  26DE               	addwf	postinc2,f,c
  9315  011A76  0E00               	movlw	0
  9316  011A78  22DD               	addwfc	postdec2,f,c
  9317  011A7A  D736               	goto	l10426
  9318  011A7C                     l10450:
  9319                           
  9320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9321                           ;stkvar	_fmt @ sp[(-32)+-4]
  9322  011A7C  0EDC               	movlw	-36
  9323  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9324  011A84  0EDD               	movlw	-35
  9325  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  9326  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9327  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  9328  011A98                     	if	0	;tblptru may be non-zero
  9329  011A98                     	endif
  9330  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9331  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  9332  011A9A  6EF8               	movwf	tblptru,c
  9333  011A9C                     	endif
  9334  011A9C  0008               	tblrd		*
  9335  011A9E  50F5               	movf	tablat,w,c
  9336  011AA0  0A73               	xorlw	115
  9337  011AA2  A4D8               	btfss	status,2,c
  9338  011AA4  D042               	goto	l10460
  9339                           
  9340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9341                           ;stkvar	_fmt @ sp[(-32)+-4]
  9342  011AA6  0EDC               	movlw	-36
  9343  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9344  011AAE  0EDD               	movlw	-35
  9345  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9346  011AB6  2ADE               	incf	postinc2,f,c
  9347  011AB8  0E00               	movlw	0
  9348  011ABA  22DD               	addwfc	postdec2,f,c
  9349                           
  9350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9351                           ;stkvar	_ap @ sp[(-32)+-6]
  9352  011ABC  0EDA               	movlw	-38
  9353  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9354  011AC4  0EDB               	movlw	-37
  9355  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9356  011ACC  0E02               	movlw	2
  9357  011ACE  5EDE               	subwf	postinc2,f,c
  9358  011AD0  0E00               	movlw	0
  9359  011AD2  5ADD               	subwfb	postdec2,f,c
  9360  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  9361  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  9362  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9363  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9364  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  9365  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  9366                           
  9367                           ;stkvar	_cp @ sp[(-32)+29]
  9368  011AF8  0EFE               	movlw	-2
  9369  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9370  011B00  0EFD               	movlw	-3
  9371  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9372                           
  9373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9374                           ;stkvar	_cp @ sp[(-32)+29]
  9375  011B08  0EFD               	movlw	-3
  9376  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9377  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  9378                           
  9379                           ;stkvar	_fp @ sp[(-34)+-2]
  9380  011B16  0EDC               	movlw	-36
  9381  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  9382  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9383  011B24  ECC3  F0A8         	call	_stoa	;wreg free
  9384  011B28  D127               	goto	l2086
  9385  011B2A                     l10460:
  9386                           
  9387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  9388                           ;stkvar	_fmt @ sp[(-32)+-4]
  9389  011B2A  0EDC               	movlw	-36
  9390  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9391  011B32  0EDD               	movlw	-35
  9392  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  9393  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9394  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  9395  011B46                     	if	0	;tblptru may be non-zero
  9396  011B46                     	endif
  9397  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9398  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  9399  011B48  6EF8               	movwf	tblptru,c
  9400  011B4A                     	endif
  9401  011B4A  0008               	tblrd		*
  9402  011B4C  50F5               	movf	tablat,w,c
  9403  011B4E  0A78               	xorlw	120
  9404  011B50  B4D8               	btfsc	status,2,c
  9405  011B52  D015               	goto	u10420
  9406                           
  9407                           ;stkvar	_fmt @ sp[(-32)+-4]
  9408  011B54  0EDC               	movlw	-36
  9409  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9410  011B5C  0EDD               	movlw	-35
  9411  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9412  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  9413  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9414  011B70                     	if	0	;tblptru may be non-zero
  9415  011B70                     	endif
  9416  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9417  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  9418  011B72  6EF8               	movwf	tblptru,c
  9419  011B74                     	endif
  9420  011B74  0008               	tblrd		*
  9421  011B76  50F5               	movf	tablat,w,c
  9422  011B78  0A58               	xorlw	88
  9423  011B7A  A4D8               	btfss	status,2,c
  9424  011B7C  D094               	goto	l10474
  9425  011B7E                     u10420:
  9426                           
  9427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  9428                           ;stkvar	_fmt @ sp[(-32)+-4]
  9429  011B7E  0EDC               	movlw	-36
  9430  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  9431  011B86  0EDD               	movlw	-35
  9432  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  9433  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9434  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  9435  011B9A                     	if	0	;tblptru may be non-zero
  9436  011B9A                     	endif
  9437  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9438  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9439  011B9C  6EF8               	movwf	tblptru,c
  9440  011B9E                     	endif
  9441                           
  9442                           ;stkvar	_c @ sp[(-32)+31]
  9443  011B9E  0008               	tblrd		*
  9444  011BA0  0EFF               	movlw	-1
  9445  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  9446                           
  9447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  9448                           ;stkvar	_fmt @ sp[(-32)+-4]
  9449  011BA8  0EDC               	movlw	-36
  9450  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9451  011BB0  0EDD               	movlw	-35
  9452  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9453  011BB8  2ADE               	incf	postinc2,f,c
  9454  011BBA  0E00               	movlw	0
  9455  011BBC  22DD               	addwfc	postdec2,f,c
  9456                           
  9457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  9458                           ;stkvar	_ap @ sp[(-32)+-6]
  9459  011BBE  0EDA               	movlw	-38
  9460  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9461  011BC6  0EDB               	movlw	-37
  9462  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9463  011BCE  0E02               	movlw	2
  9464  011BD0  5EDE               	subwf	postinc2,f,c
  9465  011BD2  0E00               	movlw	0
  9466  011BD4  5ADD               	subwfb	postdec2,f,c
  9467  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  9468  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  9469  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9470  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9471  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  9472  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  9473  011BFA  503C               	movf	(btemp+10)^0,w,c
  9474  011BFC  6E42               	movwf	(btemp+16)^0,c
  9475  011BFE  503D               	movf	(btemp+11)^0,w,c
  9476  011C00  6E43               	movwf	(btemp+17)^0,c
  9477  011C02  6A44               	clrf	(btemp+18)^0,c
  9478  011C04  6A45               	clrf	(btemp+19)^0,c
  9479  011C06  6A46               	clrf	(btemp+20)^0,c
  9480  011C08  6A47               	clrf	(btemp+21)^0,c
  9481  011C0A  6A48               	clrf	(btemp+22)^0,c
  9482  011C0C  6A49               	clrf	(btemp+23)^0,c
  9483                           
  9484                           ;stkvar	_llu @ sp[(-32)+6]
  9485  011C0E  0EE6               	movlw	-26
  9486  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  9487  011C16  0EE7               	movlw	-25
  9488  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  9489  011C1E  0EE8               	movlw	-24
  9490  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  9491  011C26  0EE9               	movlw	-23
  9492  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  9493  011C2E  0EEA               	movlw	-22
  9494  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  9495  011C36  0EEB               	movlw	-21
  9496  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  9497  011C3E  0EEC               	movlw	-20
  9498  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  9499  011C46  0EED               	movlw	-19
  9500  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  9501                           
  9502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  9503                           ;stkvar	_c @ sp[(-32)+31]
  9504  011C4E  0EFF               	movlw	-1
  9505  011C50  50E3               	movf	plusw1,w,c
  9506  011C52  6EE6               	movwf	postinc1,c
  9507                           
  9508                           ;stkvar	_llu @ sp[(-33)+6]
  9509  011C54  50E1               	movf	fsr1l,w,c
  9510  011C56  0FE5               	addlw	-27
  9511  011C58  6ED9               	movwf	fsr2l,c
  9512  011C5A  50E2               	movf	fsr1h,w,c
  9513  011C5C  6EDA               	movwf	fsr2h,c
  9514  011C5E  0EFF               	movlw	255
  9515  011C60  22DA               	addwfc	fsr2h,f,c
  9516  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  9517  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  9518  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  9519  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  9520  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  9521  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  9522  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  9523  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  9524                           
  9525                           ;stkvar	_fp @ sp[(-41)+-2]
  9526  011C92  0ED5               	movlw	-43
  9527  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  9528  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  9529  011CA0  EC4C  F0A2         	call	_xtoa	;wreg free
  9530  011CA4  D069               	goto	l2086
  9531  011CA6                     l10474:
  9532                           
  9533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9534                           ;stkvar	_fmt @ sp[(-32)+-4]
  9535  011CA6  0EDC               	movlw	-36
  9536  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9537  011CAE  0EDD               	movlw	-35
  9538  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9539  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9540  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9541  011CC2                     	if	0	;tblptru may be non-zero
  9542  011CC2                     	endif
  9543  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9544  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  9545  011CC4  6EF8               	movwf	tblptru,c
  9546  011CC6                     	endif
  9547  011CC6  0008               	tblrd		*
  9548  011CC8  50F5               	movf	tablat,w,c
  9549  011CCA  0A25               	xorlw	37
  9550  011CCC  A4D8               	btfss	status,2,c
  9551  011CCE  D01A               	goto	l10484
  9552                           
  9553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9554                           ;stkvar	_fmt @ sp[(-32)+-4]
  9555  011CD0  0EDC               	movlw	-36
  9556  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9557  011CD8  0EDD               	movlw	-35
  9558  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9559  011CE0  2ADE               	incf	postinc2,f,c
  9560  011CE2  0E00               	movlw	0
  9561  011CE4  22DD               	addwfc	postdec2,f,c
  9562                           
  9563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9564                           ;stkvar	_fp @ sp[(-32)+-2]
  9565  011CE6  0EDE               	movlw	-34
  9566  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  9567  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  9568  011CF4  0E25               	movlw	37
  9569  011CF6  6EE6               	movwf	postinc1,c
  9570  011CF8  0E00               	movlw	0
  9571  011CFA  6EE6               	movwf	postinc1,c
  9572  011CFC  ECA2  F0B5         	call	_fputc	;wreg free
  9573  011D00                     l10480:
  9574                           
  9575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9576  011D00  0E01               	movlw	1
  9577  011D02  D00C               	goto	L7
  9578  011D04                     l10484:
  9579                           
  9580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9581                           ;stkvar	_fmt @ sp[(-32)+-4]
  9582  011D04  0EDC               	movlw	-36
  9583  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  9584  011D0C  0EDD               	movlw	-35
  9585  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9586  011D14  2ADE               	incf	postinc2,f,c
  9587  011D16  0E00               	movlw	0
  9588  011D18  22DD               	addwfc	postdec2,f,c
  9589                           
  9590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9591  011D1A  0E00               	movlw	0
  9592  011D1C                     L7:
  9593  011D1C  6E32               	movwf	btemp^0,c
  9594  011D1E  0E00               	movlw	0
  9595  011D20  6E33               	movwf	(btemp+1)^0,c
  9596  011D22  D02A               	goto	l2086
  9597  011D24                     l10490:
  9598                           
  9599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9600                           ;stkvar	_fp @ sp[(-32)+-2]
  9601  011D24  0EDE               	movlw	-34
  9602  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  9603  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9604                           
  9605                           ;stkvar	_fmt @ sp[(-34)+-4]
  9606  011D32  0EDA               	movlw	-38
  9607  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  9608  011D3A  0EDB               	movlw	-37
  9609  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9610  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  9611  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  9612  011D4E                     	if	0	;tblptru may be non-zero
  9613  011D4E                     	endif
  9614  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9615  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9616  011D50  6EF8               	movwf	tblptru,c
  9617  011D52                     	endif
  9618  011D52  0008               	tblrd		*
  9619  011D54  50F5               	movf	tablat,w,c
  9620  011D56  6EE6               	movwf	postinc1,c
  9621  011D58  0E00               	movlw	0
  9622  011D5A  6EE6               	movwf	postinc1,c
  9623  011D5C  ECA2  F0B5         	call	_fputc	;wreg free
  9624                           
  9625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9626                           ;stkvar	_fmt @ sp[(-32)+-4]
  9627  011D60  0EDC               	movlw	-36
  9628  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9629  011D68  0EDD               	movlw	-35
  9630  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9631  011D70  2ADE               	incf	postinc2,f,c
  9632  011D72  0E00               	movlw	0
  9633  011D74  22DD               	addwfc	postdec2,f,c
  9634  011D76  D7C4               	goto	l10480
  9635  011D78                     l2086:
  9636                           
  9637                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9638  011D78  0EDA               	movlw	218
  9639  011D7A  26E1               	addwf	fsr1l,f,c
  9640  011D7C  0EFF               	movlw	255
  9641  011D7E  22E2               	addwfc	fsr1h,f,c
  9642  011D80  0012               	return		;funcret
  9643  011D82                     __end_of_vfpfcnvrt:
  9644                           	opt callstack 0
  9645                           
  9646 ;; *************** function _xtoa *****************
  9647 ;; Defined at:
  9648 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9651 ;;		 -> f(6), NULL(0), 
  9652 ;;  d               8  [STACK] unsigned long long 
  9653 ;;  x               1  [STACK] unsigned char 
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;  n               8  [STACK] unsigned long long 
  9656 ;;  c               2  [STACK] int 
  9657 ;;  i               2  [STACK] int 
  9658 ;;  w               2  [STACK] int 
  9659 ;;  p               2  [STACK] int 
  9660 ;; Return value:  Size  Location     Type
  9661 ;;                  2  [STACK] int 
  9662 ;; Registers used:
  9663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9664 ;; Tracked objects:
  9665 ;;		On entry : 0/1
  9666 ;;		On exit  : 0/0
  9667 ;;		Unchanged: 0/0
  9668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9673 ;;Total ram usage:        0 bytes
  9674 ;; Hardware stack levels used:    1
  9675 ;; Hardware stack levels required when called:   11
  9676 ;; This function calls:
  9677 ;;		_isalpha
  9678 ;;		_isupper
  9679 ;;		_pad
  9680 ;;		_toupper
  9681 ;; This function is called by:
  9682 ;;		_vfpfcnvrt
  9683 ;; This function uses a reentrant model
  9684 ;;
  9685                           
  9686                           	psect	text41
  9687  014498                     __ptext41:
  9688                           	opt callstack 0
  9689  014498                     _xtoa:
  9690                           	opt callstack 0
  9691                           
  9692                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9693  014498  0E14               	movlw	20
  9694  01449A  26E1               	addwf	fsr1l,f,c
  9695  01449C  0E00               	movlw	0
  9696  01449E  22E2               	addwfc	fsr1h,f,c
  9697                           
  9698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  9699                           
  9700                           ;incstack = 0
  9701  0144A0  AE1E               	btfss	(_prec+1)^0,7,c
  9702                           
  9703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  9704  0144A2  921F               	bcf	_flags^0,1,c
  9705                           
  9706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  9707  0144A4  BE1E               	btfsc	(_prec+1)^0,7,c
  9708  0144A6  D005               	goto	u10020
  9709  0144A8  501E               	movf	(_prec+1)^0,w,c
  9710  0144AA  E110               	bnz	l10272
  9711  0144AC  041D               	decf	_prec^0,w,c
  9712  0144AE  B0D8               	btfsc	status,0,c
  9713  0144B0  D00D               	goto	l10272
  9714  0144B2                     u10020:
  9715  0144B2  0E01               	movlw	1
  9716  0144B4  6E3C               	movwf	(btemp+10)^0,c
  9717  0144B6  0E00               	movlw	0
  9718  0144B8  6E3D               	movwf	(btemp+11)^0,c
  9719                           
  9720                           ;stkvar	_p @ sp[(-20)+18]
  9721  0144BA  0EFE               	movlw	-2
  9722  0144BC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9723  0144C2  0EFF               	movlw	-1
  9724  0144C4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9725  0144CA  D008               	goto	l2036
  9726  0144CC                     l10272:
  9727                           
  9728                           ;stkvar	_p @ sp[(-20)+18]
  9729  0144CC  0EFE               	movlw	-2
  9730  0144CE  0060  F077  FFE3   	movff	_prec,plusw1
  9731  0144D4  0EFF               	movlw	-1
  9732  0144D6  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9733  0144DC                     l2036:
  9734                           
  9735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  9736                           ;stkvar	_w @ sp[(-20)+16]
  9737  0144DC  0EFC               	movlw	-4
  9738  0144DE  0060  F06F  FFE3   	movff	_width,plusw1
  9739  0144E4  0EFD               	movlw	-3
  9740  0144E6  0060  F073  FFE3   	movff	_width+1,plusw1
  9741                           
  9742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  9743  0144EC  A81F               	btfss	_flags^0,4,c
  9744  0144EE  D00B               	goto	l10278
  9745                           
  9746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  9747                           ;stkvar	_w @ sp[(-20)+16]
  9748  0144F0  50E1               	movf	fsr1l,w,c
  9749  0144F2  0FFC               	addlw	-4
  9750  0144F4  6ED9               	movwf	fsr2l,c
  9751  0144F6  50E2               	movf	fsr1h,w,c
  9752  0144F8  6EDA               	movwf	fsr2h,c
  9753  0144FA  0EFF               	movlw	255
  9754  0144FC  22DA               	addwfc	fsr2h,f,c
  9755  0144FE  0EFE               	movlw	254
  9756  014500  26DE               	addwf	postinc2,f,c
  9757  014502  0EFF               	movlw	255
  9758  014504  22DD               	addwfc	postdec2,f,c
  9759  014506                     l10278:
  9760                           
  9761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  9762                           ;stkvar	_d @ sp[(-20)+-10]
  9763  014506  0EE2               	movlw	226
  9764  014508  24E1               	addwf	fsr1l,w,c
  9765  01450A  6ED9               	movwf	fsr2l,c
  9766  01450C  0EFF               	movlw	255
  9767  01450E  20E2               	addwfc	fsr1h,w,c
  9768  014510  6EDA               	movwf	fsr2h,c
  9769                           
  9770                           ;stkvar	_n @ sp[(-20)+4]
  9771  014512  0E08               	movlw	8
  9772  014514  6E32               	movwf	btemp^0,c
  9773  014516  0EF0               	movlw	-16
  9774  014518                     us1004999:
  9775  014518  006F FF7B FFE3     	movff	postinc2,plusw1
  9776  01451E  28E8               	incf	wreg,w,c
  9777  014520  2E32               	decfsz	btemp^0,f,c
  9778  014522  D7FA               	bra	us1004999
  9779                           
  9780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  9781  014524  0E4F               	movlw	79
  9782  014526  6E3C               	movwf	(btemp+10)^0,c
  9783  014528  0E00               	movlw	0
  9784  01452A  6E3D               	movwf	(btemp+11)^0,c
  9785                           
  9786                           ;stkvar	_i @ sp[(-20)+14]
  9787  01452C  0EFA               	movlw	-6
  9788  01452E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9789  014534  0EFB               	movlw	-5
  9790  014536  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9791                           
  9792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  9793  01453C  0101               	movlb	1	; () banked
  9794  01453E  6BF2               	clrf	(_dbuf+79)& (0+255),b
  9795                           
  9796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9797  014540  D0EE               	goto	l10316
  9798  014542                     l10284:
  9799                           
  9800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  9801                           ;stkvar	_i @ sp[(-20)+14]
  9802  014542  50E1               	movf	fsr1l,w,c
  9803  014544  0FFA               	addlw	-6
  9804  014546  6ED9               	movwf	fsr2l,c
  9805  014548  50E2               	movf	fsr1h,w,c
  9806  01454A  6EDA               	movwf	fsr2h,c
  9807  01454C  0EFF               	movlw	255
  9808  01454E  22DA               	addwfc	fsr2h,f,c
  9809  014550  06DE               	decf	postinc2,f,c
  9810  014552  0E00               	movlw	0
  9811  014554  5ADD               	subwfb	postdec2,f,c
  9812                           
  9813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  9814                           ;stkvar	_n @ sp[(-20)+4]
  9815  014556  0EF0               	movlw	-16
  9816  014558  006F FF8C  F03C    	movff	plusw1,btemp+10
  9817  01455E  0EF1               	movlw	-15
  9818  014560  006F FF8C  F03D    	movff	plusw1,btemp+11
  9819  014566  0E0F               	movlw	15
  9820  014568  163C               	andwf	(btemp+10)^0,f,c
  9821  01456A  0E00               	movlw	0
  9822  01456C  163D               	andwf	(btemp+11)^0,f,c
  9823                           
  9824                           ;stkvar	_c @ sp[(-20)+12]
  9825  01456E  0EF8               	movlw	-8
  9826  014570  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9827  014576  0EF9               	movlw	-7
  9828  014578  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9829                           
  9830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  9831                           ;stkvar	_c @ sp[(-20)+12]
  9832  01457E  0EF9               	movlw	-7
  9833  014580  BEE3               	btfsc	plusw1,7,c
  9834  014582  D00F               	goto	l10292
  9835  014584  0EF9               	movlw	-7
  9836  014586  50E3               	movf	plusw1,w,c
  9837  014588  E108               	bnz	u10050
  9838  01458A  0EF8               	movlw	-8
  9839  01458C  006F FF8C  F032    	movff	plusw1,btemp
  9840  014592  0E0A               	movlw	10
  9841  014594  5E32               	subwf	btemp^0,f,c
  9842  014596  A0D8               	btfss	status,0,c
  9843  014598  D004               	goto	l10292
  9844  01459A                     u10050:
  9845                           
  9846                           ;stkvar	_c @ sp[(-20)+12]
  9847  01459A  0EF8               	movlw	-8
  9848  01459C  50E3               	movf	plusw1,w,c
  9849  01459E  0F57               	addlw	87
  9850  0145A0  D003               	goto	L8
  9851  0145A2                     l10292:
  9852                           
  9853                           ;stkvar	_c @ sp[(-20)+12]
  9854  0145A2  0EF8               	movlw	-8
  9855  0145A4  50E3               	movf	plusw1,w,c
  9856  0145A6  0F30               	addlw	48
  9857  0145A8                     L8:
  9858  0145A8  6E3C               	movwf	(btemp+10)^0,c
  9859  0145AA  0EF9               	movlw	-7
  9860  0145AC  006F FF8C  F03D    	movff	plusw1,btemp+11
  9861  0145B2  0E00               	movlw	0
  9862  0145B4  223D               	addwfc	(btemp+11)^0,f,c
  9863                           
  9864                           ;stkvar	_c @ sp[(-20)+12]
  9865  0145B6  0EF8               	movlw	-8
  9866  0145B8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9867  0145BE  0EF9               	movlw	-7
  9868  0145C0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9869  0145C6  0EBF               	movlw	191
  9870  0145C8  6E3C               	movwf	(btemp+10)^0,c
  9871  0145CA  0EFF               	movlw	255
  9872  0145CC  6E3D               	movwf	(btemp+11)^0,c
  9873                           
  9874                           ;stkvar	_x @ sp[(-20)+-11]
  9875  0145CE  0EE1               	movlw	-31
  9876  0145D0  50E3               	movf	plusw1,w,c
  9877  0145D2  6E3A               	movwf	(btemp+8)^0,c
  9878  0145D4  6A3B               	clrf	(btemp+9)^0,c
  9879  0145D6  503C               	movf	(btemp+10)^0,w,c
  9880  0145D8  263A               	addwf	(btemp+8)^0,f,c
  9881  0145DA  503D               	movf	(btemp+11)^0,w,c
  9882  0145DC  223B               	addwfc	(btemp+9)^0,f,c
  9883  0145DE  503B               	movf	(btemp+9)^0,w,c
  9884  0145E0  E106               	bnz	u10060
  9885  0145E2  0E1A               	movlw	26
  9886  0145E4  5C3A               	subwf	(btemp+8)^0,w,c
  9887  0145E6  B0D8               	btfsc	status,0,c
  9888  0145E8  D002               	goto	u10060
  9889  0145EA  0E01               	movlw	1
  9890  0145EC  D001               	goto	u10070
  9891  0145EE                     u10060:
  9892  0145EE  0E00               	movlw	0
  9893  0145F0                     u10070:
  9894  0145F0  6E3C               	movwf	(btemp+10)^0,c
  9895  0145F2  6A3D               	clrf	(btemp+11)^0,c
  9896                           
  9897                           ;stkvar	_xtoa$4667 @ sp[(-20)+2]
  9898  0145F4  0EEE               	movlw	-18
  9899  0145F6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9900  0145FC  0EEF               	movlw	-17
  9901  0145FE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9902                           
  9903                           ;stkvar	_xtoa$4667 @ sp[(-20)+2]
  9904  014604  0EEE               	movlw	-18
  9905  014606  006F FF8C  F032    	movff	plusw1,btemp
  9906  01460C  0EEF               	movlw	-17
  9907  01460E  50E3               	movf	plusw1,w,c
  9908  014610  1032               	iorwf	btemp^0,w,c
  9909  014612  B4D8               	btfsc	status,2,c
  9910  014614  D041               	goto	l10308
  9911  014616  0E9F               	movlw	159
  9912  014618  6E3C               	movwf	(btemp+10)^0,c
  9913  01461A  0EFF               	movlw	255
  9914  01461C  6E3D               	movwf	(btemp+11)^0,c
  9915                           
  9916                           ;stkvar	_c @ sp[(-20)+12]
  9917  01461E  0EF8               	movlw	-8
  9918  014620  006F FF8C  F03A    	movff	plusw1,btemp+8
  9919  014626  0EF9               	movlw	-7
  9920  014628  006F FF8C  F03B    	movff	plusw1,btemp+9
  9921  01462E  0E20               	movlw	32
  9922  014630  123A               	iorwf	(btemp+8)^0,f,c
  9923  014632  0E00               	movlw	0
  9924  014634  123B               	iorwf	(btemp+9)^0,f,c
  9925  014636  503C               	movf	(btemp+10)^0,w,c
  9926  014638  263A               	addwf	(btemp+8)^0,f,c
  9927  01463A  503D               	movf	(btemp+11)^0,w,c
  9928  01463C  223B               	addwfc	(btemp+9)^0,f,c
  9929  01463E  503B               	movf	(btemp+9)^0,w,c
  9930  014640  E106               	bnz	u10090
  9931  014642  0E1A               	movlw	26
  9932  014644  5C3A               	subwf	(btemp+8)^0,w,c
  9933  014646  B0D8               	btfsc	status,0,c
  9934  014648  D002               	goto	u10090
  9935  01464A  0E01               	movlw	1
  9936  01464C  D001               	goto	u10100
  9937  01464E                     u10090:
  9938  01464E  0E00               	movlw	0
  9939  014650                     u10100:
  9940  014650  6E3C               	movwf	(btemp+10)^0,c
  9941  014652  6A3D               	clrf	(btemp+11)^0,c
  9942                           
  9943                           ;stkvar	_xtoa$4668 @ sp[(-20)+0]
  9944  014654  0EEC               	movlw	-20
  9945  014656  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9946  01465C  0EED               	movlw	-19
  9947  01465E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9948                           
  9949                           ;stkvar	_xtoa$4668 @ sp[(-20)+0]
  9950  014664  0EEC               	movlw	-20
  9951  014666  006F FF8C  F032    	movff	plusw1,btemp
  9952  01466C  0EED               	movlw	-19
  9953  01466E  50E3               	movf	plusw1,w,c
  9954  014670  1032               	iorwf	btemp^0,w,c
  9955  014672  B4D8               	btfsc	status,2,c
  9956  014674  D011               	goto	l10308
  9957                           
  9958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  9959                           ;stkvar	_c @ sp[(-20)+12]
  9960  014676  0EF8               	movlw	-8
  9961  014678  006F FF8F FFE6     	movff	plusw1,postinc1
  9962  01467E  006F FF8F FFE6     	movff	plusw1,postinc1
  9963  014684  EC5A  F0BE         	call	_toupper	;wreg free
  9964                           
  9965                           ;stkvar	_c @ sp[(-20)+12]
  9966  014688  0EF8               	movlw	-8
  9967  01468A  0060  F0CB  FFE3   	movff	btemp,plusw1
  9968  014690  0EF9               	movlw	-7
  9969  014692  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9970  014698                     l10308:
  9971                           
  9972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  9973                           ;stkvar	_c @ sp[(-20)+12]
  9974                           ;stkvar	_i @ sp[(-20)+14]
  9975  014698  0EFA               	movlw	-6
  9976  01469A  006F FF8C  F03C    	movff	plusw1,btemp+10
  9977  0146A0  0EFB               	movlw	-5
  9978  0146A2  006F FF8C  F03D    	movff	plusw1,btemp+11
  9979  0146A8  0EA3               	movlw	low _dbuf
  9980  0146AA  243C               	addwf	(btemp+10)^0,w,c
  9981  0146AC  6ED9               	movwf	fsr2l,c
  9982  0146AE  0E01               	movlw	high _dbuf
  9983  0146B0  203D               	addwfc	(btemp+11)^0,w,c
  9984  0146B2  6EDA               	movwf	fsr2h,c
  9985  0146B4  0EF8               	movlw	-8
  9986  0146B6  006F FF8F FFDF     	movff	plusw1,indf2
  9987                           
  9988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9989                           ;stkvar	_p @ sp[(-20)+18]
  9990  0146BC  50E1               	movf	fsr1l,w,c
  9991  0146BE  0FFE               	addlw	-2
  9992  0146C0  6ED9               	movwf	fsr2l,c
  9993  0146C2  50E2               	movf	fsr1h,w,c
  9994  0146C4  6EDA               	movwf	fsr2h,c
  9995  0146C6  0EFF               	movlw	255
  9996  0146C8  22DA               	addwfc	fsr2h,f,c
  9997  0146CA  06DE               	decf	postinc2,f,c
  9998  0146CC  0E00               	movlw	0
  9999  0146CE  5ADD               	subwfb	postdec2,f,c
 10000                           
 10001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 10002                           ;stkvar	_w @ sp[(-20)+16]
 10003  0146D0  50E1               	movf	fsr1l,w,c
 10004  0146D2  0FFC               	addlw	-4
 10005  0146D4  6ED9               	movwf	fsr2l,c
 10006  0146D6  50E2               	movf	fsr1h,w,c
 10007  0146D8  6EDA               	movwf	fsr2h,c
 10008  0146DA  0EFF               	movlw	255
 10009  0146DC  22DA               	addwfc	fsr2h,f,c
 10010  0146DE  06DE               	decf	postinc2,f,c
 10011  0146E0  0E00               	movlw	0
 10012  0146E2  5ADD               	subwfb	postdec2,f,c
 10013                           
 10014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 10015  0146E4  0E04               	movlw	4
 10016  0146E6  6E3D               	movwf	(btemp+11)^0,c
 10017                           
 10018                           ;stkvar	_n @ sp[(-20)+4]
 10019  0146E8  50E1               	movf	fsr1l,w,c
 10020  0146EA  0FF0               	addlw	-16
 10021  0146EC  6ED9               	movwf	fsr2l,c
 10022  0146EE  50E2               	movf	fsr1h,w,c
 10023  0146F0  6EDA               	movwf	fsr2h,c
 10024  0146F2  0EFF               	movlw	255
 10025  0146F4  22DA               	addwfc	fsr2h,f,c
 10026  0146F6  283D               	incf	(btemp+11)^0,w,c
 10027  0146F8  52DE               	movf	postinc2,f,c
 10028  0146FA  D00F               	goto	u10120
 10029  0146FC                     u10125:
 10030  0146FC  52DE               	movf	postinc2,f,c
 10031  0146FE  52DE               	movf	postinc2,f,c
 10032  014700  52DE               	movf	postinc2,f,c
 10033  014702  52DE               	movf	postinc2,f,c
 10034  014704  52DE               	movf	postinc2,f,c
 10035  014706  52DE               	movf	postinc2,f,c
 10036  014708  90D8               	bcf	status,0,c
 10037  01470A  32DD               	rrcf	postdec2,f,c
 10038  01470C  32DD               	rrcf	postdec2,f,c
 10039  01470E  32DD               	rrcf	postdec2,f,c
 10040  014710  32DD               	rrcf	postdec2,f,c
 10041  014712  32DD               	rrcf	postdec2,f,c
 10042  014714  32DD               	rrcf	postdec2,f,c
 10043  014716  32DD               	rrcf	postdec2,f,c
 10044  014718  32DE               	rrcf	postinc2,f,c
 10045  01471A                     u10120:
 10046  01471A  2EE8               	decfsz	wreg,f,c
 10047  01471C  D7EF               	goto	u10125
 10048  01471E                     l10316:
 10049                           
 10050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10051                           ;stkvar	_i @ sp[(-20)+14]
 10052  01471E  0EFB               	movlw	-5
 10053  014720  BEE3               	btfsc	plusw1,7,c
 10054  014722  D03A               	goto	u10170
 10055  014724  0EFB               	movlw	-5
 10056  014726  50E3               	movf	plusw1,w,c
 10057  014728  E108               	bnz	u10130
 10058  01472A  0EFA               	movlw	-6
 10059  01472C  006F FF8C  F032    	movff	plusw1,btemp
 10060  014732  0E02               	movlw	2
 10061  014734  5E32               	subwf	btemp^0,f,c
 10062  014736  A0D8               	btfss	status,0,c
 10063  014738  D02F               	goto	u10170
 10064  01473A                     u10130:
 10065                           
 10066                           ;stkvar	_n @ sp[(-20)+4]
 10067  01473A  0EF0               	movlw	-16
 10068  01473C  50E3               	movf	plusw1,w,c
 10069  01473E  E115               	bnz	u10141
 10070  014740  0EF1               	movlw	-15
 10071  014742  50E3               	movf	plusw1,w,c
 10072  014744  E112               	bnz	u10141
 10073  014746  0EF2               	movlw	-14
 10074  014748  50E3               	movf	plusw1,w,c
 10075  01474A  E10F               	bnz	u10141
 10076  01474C  0EF3               	movlw	-13
 10077  01474E  50E3               	movf	plusw1,w,c
 10078  014750  E10C               	bnz	u10141
 10079  014752  0EF4               	movlw	-12
 10080  014754  50E3               	movf	plusw1,w,c
 10081  014756  E109               	bnz	u10141
 10082  014758  0EF5               	movlw	-11
 10083  01475A  50E3               	movf	plusw1,w,c
 10084  01475C  E106               	bnz	u10141
 10085  01475E  0EF6               	movlw	-10
 10086  014760  50E3               	movf	plusw1,w,c
 10087  014762  E103               	bnz	u10141
 10088  014764  0EF7               	movlw	-9
 10089  014766  50E3               	movf	plusw1,w,c
 10090  014768  A4D8               	btfss	status,2,c
 10091  01476A                     u10141:
 10092  01476A  D6EB               	goto	l10284
 10093                           
 10094                           ;stkvar	_p @ sp[(-20)+18]
 10095  01476C  0EFF               	movlw	-1
 10096  01476E  BEE3               	btfsc	plusw1,7,c
 10097  014770  D007               	goto	u10150
 10098  014772  0EFF               	movlw	-1
 10099  014774  50E3               	movf	plusw1,w,c
 10100  014776  E103               	bnz	u10151
 10101  014778  0EFE               	movlw	-2
 10102  01477A  04E3               	decf	plusw1,w,c
 10103  01477C  B0D8               	btfsc	status,0,c
 10104  01477E                     u10151:
 10105  01477E  D6E1               	goto	l10284
 10106  014780                     u10150:
 10107                           
 10108                           ;stkvar	_w @ sp[(-20)+16]
 10109  014780  0EFD               	movlw	-3
 10110  014782  BEE3               	btfsc	plusw1,7,c
 10111  014784  D009               	goto	u10170
 10112  014786  0EFD               	movlw	-3
 10113  014788  50E3               	movf	plusw1,w,c
 10114  01478A  E104               	bnz	u10160
 10115  01478C  0EFC               	movlw	-4
 10116  01478E  04E3               	decf	plusw1,w,c
 10117  014790  A0D8               	btfss	status,0,c
 10118  014792  D002               	goto	u10170
 10119  014794                     u10160:
 10120  014794  B21F               	btfsc	_flags^0,1,c
 10121  014796  D6D5               	goto	l10284
 10122  014798                     u10170:
 10123                           
 10124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 10125  014798  A81F               	btfss	_flags^0,4,c
 10126  01479A  D036               	goto	l10332
 10127                           
 10128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 10129                           ;stkvar	_i @ sp[(-20)+14]
 10130  01479C  50E1               	movf	fsr1l,w,c
 10131  01479E  0FFA               	addlw	-6
 10132  0147A0  6ED9               	movwf	fsr2l,c
 10133  0147A2  50E2               	movf	fsr1h,w,c
 10134  0147A4  6EDA               	movwf	fsr2h,c
 10135  0147A6  0EFF               	movlw	255
 10136  0147A8  22DA               	addwfc	fsr2h,f,c
 10137  0147AA  06DE               	decf	postinc2,f,c
 10138  0147AC  0E00               	movlw	0
 10139  0147AE  5ADD               	subwfb	postdec2,f,c
 10140                           
 10141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 10142                           ;stkvar	_x @ sp[(-20)+-11]
 10143                           ;stkvar	_i @ sp[(-20)+14]
 10144  0147B0  0EFA               	movlw	-6
 10145  0147B2  006F FF8C  F03C    	movff	plusw1,btemp+10
 10146  0147B8  0EFB               	movlw	-5
 10147  0147BA  006F FF8C  F03D    	movff	plusw1,btemp+11
 10148  0147C0  0EA3               	movlw	low _dbuf
 10149  0147C2  243C               	addwf	(btemp+10)^0,w,c
 10150  0147C4  6ED9               	movwf	fsr2l,c
 10151  0147C6  0E01               	movlw	high _dbuf
 10152  0147C8  203D               	addwfc	(btemp+11)^0,w,c
 10153  0147CA  6EDA               	movwf	fsr2h,c
 10154  0147CC  0EE1               	movlw	-31
 10155  0147CE  006F FF8F FFDF     	movff	plusw1,indf2
 10156                           
 10157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 10158                           ;stkvar	_i @ sp[(-20)+14]
 10159  0147D4  50E1               	movf	fsr1l,w,c
 10160  0147D6  0FFA               	addlw	-6
 10161  0147D8  6ED9               	movwf	fsr2l,c
 10162  0147DA  50E2               	movf	fsr1h,w,c
 10163  0147DC  6EDA               	movwf	fsr2h,c
 10164  0147DE  0EFF               	movlw	255
 10165  0147E0  22DA               	addwfc	fsr2h,f,c
 10166  0147E2  06DE               	decf	postinc2,f,c
 10167  0147E4  0E00               	movlw	0
 10168  0147E6  5ADD               	subwfb	postdec2,f,c
 10169                           
 10170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 10171                           ;stkvar	_i @ sp[(-20)+14]
 10172  0147E8  0EFA               	movlw	-6
 10173  0147EA  006F FF8C  F03C    	movff	plusw1,btemp+10
 10174  0147F0  0EFB               	movlw	-5
 10175  0147F2  006F FF8C  F03D    	movff	plusw1,btemp+11
 10176  0147F8  0EA3               	movlw	low _dbuf
 10177  0147FA  243C               	addwf	(btemp+10)^0,w,c
 10178  0147FC  6ED9               	movwf	fsr2l,c
 10179  0147FE  0E01               	movlw	high _dbuf
 10180  014800  203D               	addwfc	(btemp+11)^0,w,c
 10181  014802  6EDA               	movwf	fsr2h,c
 10182  014804  0E30               	movlw	48
 10183  014806  6EDF               	movwf	indf2,c
 10184  014808                     l10332:
 10185                           
 10186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 10187                           ;stkvar	_w @ sp[(-20)+16]
 10188  014808  0EFC               	movlw	-4
 10189  01480A  006F FF8F FFE6     	movff	plusw1,postinc1
 10190  014810  006F FF8F FFE6     	movff	plusw1,postinc1
 10191                           
 10192                           ;stkvar	_i @ sp[(-22)+14]
 10193  014816  0EA3               	movlw	low _dbuf
 10194  014818  6E3C               	movwf	(btemp+10)^0,c
 10195  01481A  0E01               	movlw	high _dbuf
 10196  01481C  6E3D               	movwf	(btemp+11)^0,c
 10197  01481E  0EF8               	movlw	-8
 10198  014820  50E3               	movf	plusw1,w,c
 10199  014822  263C               	addwf	(btemp+10)^0,f,c
 10200  014824  0EF9               	movlw	-7
 10201  014826  50E3               	movf	plusw1,w,c
 10202  014828  223D               	addwfc	(btemp+11)^0,f,c
 10203  01482A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10204  014830  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10205                           
 10206                           ;stkvar	_fp @ sp[(-24)+-2]
 10207  014836  0EE6               	movlw	-26
 10208  014838  006F FF8F FFE6     	movff	plusw1,postinc1
 10209  01483E  006F FF8F FFE6     	movff	plusw1,postinc1
 10210  014844  ECC0  F0B6         	call	_pad	;wreg free
 10211                           
 10212                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 10213  014848  0EE1               	movlw	225
 10214  01484A  26E1               	addwf	fsr1l,f,c
 10215  01484C  0EFF               	movlw	255
 10216  01484E  22E2               	addwfc	fsr1h,f,c
 10217  014850  0012               	return		;funcret
 10218  014852                     __end_of_xtoa:
 10219                           	opt callstack 0
 10220                           
 10221 ;; *************** function _toupper *****************
 10222 ;; Defined at:
 10223 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 10224 ;; Parameters:    Size  Location     Type
 10225 ;;  c               2  [STACK] int 
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;		None
 10228 ;; Return value:  Size  Location     Type
 10229 ;;                  2  [STACK] int 
 10230 ;; Registers used:
 10231 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/1
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10241 ;;Total ram usage:        0 bytes
 10242 ;; Hardware stack levels used:    1
 10243 ;; Hardware stack levels required when called:    7
 10244 ;; This function calls:
 10245 ;;		_islower
 10246 ;; This function is called by:
 10247 ;;		_xtoa
 10248 ;; This function uses a reentrant model
 10249 ;;
 10250                           
 10251                           	psect	text42
 10252  017CB4                     __ptext42:
 10253                           	opt callstack 0
 10254  017CB4                     _toupper:
 10255                           	opt callstack 0
 10256                           
 10257                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10258  017CB4  52E6               	movf	postinc1,f,c
 10259  017CB6  52E6               	movf	postinc1,f,c
 10260                           
 10261                           ;stkvar	_c @ sp[(-2)+-2]
 10262                           
 10263                           ;incstack = 0
 10264  017CB8  0EFC               	movlw	-4
 10265  017CBA  50E3               	movf	plusw1,w,c
 10266  017CBC  0F9F               	addlw	159
 10267  017CBE  6E3C               	movwf	(btemp+10)^0,c
 10268  017CC0  0EFD               	movlw	-3
 10269  017CC2  006F FF8C  F03D    	movff	plusw1,btemp+11
 10270  017CC8  0EFF               	movlw	255
 10271  017CCA  223D               	addwfc	(btemp+11)^0,f,c
 10272  017CCC  503D               	movf	(btemp+11)^0,w,c
 10273  017CCE  E106               	bnz	u5390
 10274  017CD0  0E1A               	movlw	26
 10275  017CD2  5C3C               	subwf	(btemp+10)^0,w,c
 10276  017CD4  B0D8               	btfsc	status,0,c
 10277  017CD6  D002               	goto	u5390
 10278  017CD8  0E01               	movlw	1
 10279  017CDA  D001               	goto	u5400
 10280  017CDC                     u5390:
 10281  017CDC  0E00               	movlw	0
 10282  017CDE                     u5400:
 10283  017CDE  6E3C               	movwf	(btemp+10)^0,c
 10284  017CE0  6A3D               	clrf	(btemp+11)^0,c
 10285                           
 10286                           ;stkvar	_toupper$5328 @ sp[(-2)+0]
 10287  017CE2  0EFE               	movlw	-2
 10288  017CE4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10289  017CEA  0EFF               	movlw	-1
 10290  017CEC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10291                           
 10292                           ;stkvar	_toupper$5328 @ sp[(-2)+0]
 10293  017CF2  0EFE               	movlw	-2
 10294  017CF4  006F FF8C  F032    	movff	plusw1,btemp
 10295  017CFA  0EFF               	movlw	-1
 10296  017CFC  50E3               	movf	plusw1,w,c
 10297  017CFE  1032               	iorwf	btemp^0,w,c
 10298  017D00  B4D8               	btfsc	status,2,c
 10299  017D02  D00D               	goto	l6772
 10300                           
 10301                           ;stkvar	_c @ sp[(-2)+-2]
 10302  017D04  0EFC               	movlw	-4
 10303  017D06  006F FF8C  F032    	movff	plusw1,btemp
 10304  017D0C  0EFD               	movlw	-3
 10305  017D0E  006F FF8C  F033    	movff	plusw1,btemp+1
 10306  017D14  0E5F               	movlw	95
 10307  017D16  1632               	andwf	btemp^0,f,c
 10308  017D18  0E00               	movlw	0
 10309  017D1A  1633               	andwf	(btemp+1)^0,f,c
 10310  017D1C  D008               	goto	l2969
 10311  017D1E                     l6772:
 10312                           
 10313                           ;stkvar	_c @ sp[(-2)+-2]
 10314  017D1E  0EFC               	movlw	-4
 10315  017D20  006F FF8C  F032    	movff	plusw1,btemp
 10316  017D26  0EFD               	movlw	-3
 10317  017D28  006F FF8C  F033    	movff	plusw1,btemp+1
 10318  017D2E                     l2969:
 10319                           
 10320                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10321  017D2E  52E5               	movf	postdec1,f,c
 10322  017D30  52E5               	movf	postdec1,f,c
 10323  017D32  52E5               	movf	postdec1,f,c
 10324  017D34  52E5               	movf	postdec1,f,c
 10325  017D36  0012               	return		;funcret
 10326  017D38                     __end_of_toupper:
 10327                           	opt callstack 0
 10328                           
 10329 ;; *************** function _islower *****************
 10330 ;; Defined at:
 10331 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;  c               2  [STACK] int 
 10334 ;; Auto vars:     Size  Location     Type
 10335 ;;		None
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  2  [STACK] int 
 10338 ;; Registers used:
 10339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 0/0
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10349 ;;Total ram usage:        0 bytes
 10350 ;; Hardware stack levels used:    1
 10351 ;; Hardware stack levels required when called:    6
 10352 ;; This function calls:
 10353 ;;		Nothing
 10354 ;; This function is called by:
 10355 ;;		_toupper
 10356 ;; This function uses a reentrant model
 10357 ;;
 10358                           
 10359                           	psect	text43
 10360  0187AE                     __ptext43:
 10361                           	opt callstack 0
 10362  0187AE                     _islower:
 10363                           	opt callstack 16
 10364                           
 10365                           ;stkvar	_c @ sp[(0)+-2]
 10366                           
 10367                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10368                           ;incstack = 0
 10369  0187AE  0EFE               	movlw	-2
 10370  0187B0  50E3               	movf	plusw1,w,c
 10371  0187B2  0F9F               	addlw	159
 10372  0187B4  6E3C               	movwf	(btemp+10)^0,c
 10373  0187B6  0EFF               	movlw	-1
 10374  0187B8  006F FF8C  F03D    	movff	plusw1,btemp+11
 10375  0187BE  0EFF               	movlw	255
 10376  0187C0  223D               	addwfc	(btemp+11)^0,f,c
 10377  0187C2  503D               	movf	(btemp+11)^0,w,c
 10378  0187C4  E106               	bnz	u5080
 10379  0187C6  0E1A               	movlw	26
 10380  0187C8  5C3C               	subwf	(btemp+10)^0,w,c
 10381  0187CA  B0D8               	btfsc	status,0,c
 10382  0187CC  D002               	goto	u5080
 10383  0187CE  0E01               	movlw	1
 10384  0187D0  D001               	goto	u5090
 10385  0187D2                     u5080:
 10386  0187D2  0E00               	movlw	0
 10387  0187D4                     u5090:
 10388  0187D4  6E32               	movwf	btemp^0,c
 10389  0187D6  6A33               	clrf	(btemp+1)^0,c
 10390                           
 10391                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10392  0187D8  52E5               	movf	postdec1,f,c
 10393  0187DA  52E5               	movf	postdec1,f,c
 10394  0187DC  0012               	return		;funcret
 10395  0187DE                     __end_of_islower:
 10396                           	opt callstack 0
 10397                           
 10398 ;; *************** function _isalpha *****************
 10399 ;; Defined at:
 10400 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 10401 ;; Parameters:    Size  Location     Type
 10402 ;;  c               2  [STACK] int 
 10403 ;; Auto vars:     Size  Location     Type
 10404 ;;		None
 10405 ;; Return value:  Size  Location     Type
 10406 ;;                  2  [STACK] int 
 10407 ;; Registers used:
 10408 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 10409 ;; Tracked objects:
 10410 ;;		On entry : 0/0
 10411 ;;		On exit  : 0/0
 10412 ;;		Unchanged: 0/0
 10413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10418 ;;Total ram usage:        0 bytes
 10419 ;; Hardware stack levels used:    1
 10420 ;; Hardware stack levels required when called:    6
 10421 ;; This function calls:
 10422 ;;		Nothing
 10423 ;; This function is called by:
 10424 ;;		_xtoa
 10425 ;; This function uses a reentrant model
 10426 ;;
 10427                           
 10428                           	psect	text44
 10429  018522                     __ptext44:
 10430                           	opt callstack 0
 10431  018522                     _isalpha:
 10432                           	opt callstack 17
 10433                           
 10434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10435                           ;incstack = 0
 10436  018522  0E9F               	movlw	159
 10437  018524  6E3C               	movwf	(btemp+10)^0,c
 10438  018526  0EFF               	movlw	255
 10439  018528  6E3D               	movwf	(btemp+11)^0,c
 10440                           
 10441                           ;stkvar	_c @ sp[(0)+-2]
 10442  01852A  0EFE               	movlw	-2
 10443  01852C  006F FF8C  F03A    	movff	plusw1,btemp+8
 10444  018532  0EFF               	movlw	-1
 10445  018534  006F FF8C  F03B    	movff	plusw1,btemp+9
 10446  01853A  0E20               	movlw	32
 10447  01853C  123A               	iorwf	(btemp+8)^0,f,c
 10448  01853E  0E00               	movlw	0
 10449  018540  123B               	iorwf	(btemp+9)^0,f,c
 10450  018542  503C               	movf	(btemp+10)^0,w,c
 10451  018544  263A               	addwf	(btemp+8)^0,f,c
 10452  018546  503D               	movf	(btemp+11)^0,w,c
 10453  018548  223B               	addwfc	(btemp+9)^0,f,c
 10454  01854A  503B               	movf	(btemp+9)^0,w,c
 10455  01854C  E106               	bnz	u5370
 10456  01854E  0E1A               	movlw	26
 10457  018550  5C3A               	subwf	(btemp+8)^0,w,c
 10458  018552  B0D8               	btfsc	status,0,c
 10459  018554  D002               	goto	u5370
 10460  018556  0E01               	movlw	1
 10461  018558  D001               	goto	u5380
 10462  01855A                     u5370:
 10463  01855A  0E00               	movlw	0
 10464  01855C                     u5380:
 10465  01855C  6E32               	movwf	btemp^0,c
 10466  01855E  6A33               	clrf	(btemp+1)^0,c
 10467                           
 10468                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10469  018560  52E5               	movf	postdec1,f,c
 10470  018562  52E5               	movf	postdec1,f,c
 10471  018564  0012               	return		;funcret
 10472  018566                     __end_of_isalpha:
 10473                           	opt callstack 0
 10474                           
 10475 ;; *************** function _strncmp *****************
 10476 ;; Defined at:
 10477 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;  _l              2  [STACK] PTR const unsigned char 
 10480 ;;		 -> ct(3), 
 10481 ;;  _r              2  [STACK] PTR const unsigned char 
 10482 ;;		 -> STR_56(3), 
 10483 ;;  n               2  [STACK] unsigned int 
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;  r               2  [STACK] PTR const unsigned char 
 10486 ;;		 -> STR_56(3), 
 10487 ;;  l               2  [STACK] PTR const unsigned char 
 10488 ;;		 -> ct(3), 
 10489 ;; Return value:  Size  Location     Type
 10490 ;;                  2  [STACK] int 
 10491 ;; Registers used:
 10492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 10493 ;; Tracked objects:
 10494 ;;		On entry : 0/1
 10495 ;;		On exit  : 0/0
 10496 ;;		Unchanged: 0/0
 10497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10502 ;;Total ram usage:        0 bytes
 10503 ;; Hardware stack levels used:    1
 10504 ;; Hardware stack levels required when called:    6
 10505 ;; This function calls:
 10506 ;;		Nothing
 10507 ;; This function is called by:
 10508 ;;		_vfpfcnvrt
 10509 ;; This function uses a reentrant model
 10510 ;;
 10511                           
 10512                           	psect	text45
 10513  015F8E                     __ptext45:
 10514                           	opt callstack 0
 10515  015F8E                     _strncmp:
 10516                           	opt callstack 0
 10517                           
 10518                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10519  015F8E  52E6               	movf	postinc1,f,c
 10520  015F90  52E6               	movf	postinc1,f,c
 10521  015F92  52E6               	movf	postinc1,f,c
 10522  015F94  52E6               	movf	postinc1,f,c
 10523                           
 10524                           ;stkvar	__l @ sp[(-4)+-2]
 10525                           
 10526                           ;incstack = 0
 10527  015F96  0EFA               	movlw	-6
 10528  015F98  006F FF8C  F03C    	movff	plusw1,btemp+10
 10529  015F9E  0EFB               	movlw	-5
 10530  015FA0  006F FF8C  F03D    	movff	plusw1,btemp+11
 10531                           
 10532                           ;stkvar	_l @ sp[(-4)+2]
 10533  015FA6  0EFF               	movlw	-1
 10534  015FA8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10535  015FAE  0EFE               	movlw	-2
 10536  015FB0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10537                           
 10538                           ;stkvar	__r @ sp[(-4)+-4]
 10539  015FB6  0EF8               	movlw	-8
 10540  015FB8  006F FF8C  F03C    	movff	plusw1,btemp+10
 10541  015FBE  0EF9               	movlw	-7
 10542  015FC0  006F FF8C  F03D    	movff	plusw1,btemp+11
 10543                           
 10544                           ;stkvar	_r @ sp[(-4)+0]
 10545  015FC6  0EFD               	movlw	-3
 10546  015FC8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10547  015FCE  0EFC               	movlw	-4
 10548  015FD0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10549                           
 10550                           ;stkvar	_n @ sp[(-4)+-6]
 10551  015FD6  0EF6               	movlw	-10
 10552  015FD8  006F FF8C  F032    	movff	plusw1,btemp
 10553  015FDE  0E01               	movlw	1
 10554  015FE0  5E32               	subwf	btemp^0,f,c
 10555  015FE2  0EF6               	movlw	-10
 10556  015FE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 10557  015FEA  0EF7               	movlw	-9
 10558  015FEC  006F FF8C  F032    	movff	plusw1,btemp
 10559  015FF2  0E00               	movlw	0
 10560  015FF4  5A32               	subwfb	btemp^0,f,c
 10561  015FF6  0EF7               	movlw	-9
 10562  015FF8  0060  F0CB  FFE3   	movff	btemp,plusw1
 10563  015FFE  0EF6               	movlw	-10
 10564  016000  28E3               	incf	plusw1,w,c
 10565  016002  E13F               	bnz	l7930
 10566  016004  0EF7               	movlw	-9
 10567  016006  28E3               	incf	plusw1,w,c
 10568  016008  A4D8               	btfss	status,2,c
 10569  01600A  D03B               	goto	l7930
 10570  01600C  0E00               	movlw	0
 10571  01600E  6E32               	movwf	btemp^0,c
 10572  016010  0E00               	movlw	0
 10573  016012  6E33               	movwf	(btemp+1)^0,c
 10574  016014  D09B               	goto	l2941
 10575  016016                     l7928:
 10576                           
 10577                           ;stkvar	_l @ sp[(-4)+2]
 10578  016016  0EFE               	movlw	-2
 10579  016018  50E3               	movf	plusw1,w,c
 10580  01601A  0F01               	addlw	1
 10581  01601C  6E32               	movwf	btemp^0,c
 10582  01601E  0EFE               	movlw	-2
 10583  016020  0060  F0CB  FFE3   	movff	btemp,plusw1
 10584  016026  6A32               	clrf	btemp^0,c
 10585  016028  0EFF               	movlw	-1
 10586  01602A  50E3               	movf	plusw1,w,c
 10587  01602C  2032               	addwfc	btemp^0,w,c
 10588  01602E  6E32               	movwf	btemp^0,c
 10589  016030  0EFF               	movlw	-1
 10590  016032  0060  F0CB  FFE3   	movff	btemp,plusw1
 10591                           
 10592                           ;stkvar	_r @ sp[(-4)+0]
 10593  016038  0EFC               	movlw	-4
 10594  01603A  50E3               	movf	plusw1,w,c
 10595  01603C  0F01               	addlw	1
 10596  01603E  6E32               	movwf	btemp^0,c
 10597  016040  0EFC               	movlw	-4
 10598  016042  0060  F0CB  FFE3   	movff	btemp,plusw1
 10599  016048  6A32               	clrf	btemp^0,c
 10600  01604A  0EFD               	movlw	-3
 10601  01604C  50E3               	movf	plusw1,w,c
 10602  01604E  2032               	addwfc	btemp^0,w,c
 10603  016050  6E32               	movwf	btemp^0,c
 10604  016052  0EFD               	movlw	-3
 10605  016054  0060  F0CB  FFE3   	movff	btemp,plusw1
 10606                           
 10607                           ;stkvar	_n @ sp[(-4)+-6]
 10608  01605A  0EF6               	movlw	-10
 10609  01605C  006F FF8C  F032    	movff	plusw1,btemp
 10610  016062  0E01               	movlw	1
 10611  016064  5E32               	subwf	btemp^0,f,c
 10612  016066  0EF6               	movlw	-10
 10613  016068  0060  F0CB  FFE3   	movff	btemp,plusw1
 10614  01606E  0EF7               	movlw	-9
 10615  016070  006F FF8C  F032    	movff	plusw1,btemp
 10616  016076  0E00               	movlw	0
 10617  016078  5A32               	subwfb	btemp^0,f,c
 10618  01607A  0EF7               	movlw	-9
 10619  01607C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10620  016082                     l7930:
 10621                           
 10622                           ;stkvar	_l @ sp[(-4)+2]
 10623  016082  0EFE               	movlw	-2
 10624  016084  006F FF8F FFD9     	movff	plusw1,fsr2l
 10625  01608A  0EFF               	movlw	-1
 10626  01608C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10627  016092  50DF               	movf	indf2,w,c
 10628  016094  B4D8               	btfsc	status,2,c
 10629  016096  D03B               	goto	u7570
 10630                           
 10631                           ;stkvar	_r @ sp[(-4)+0]
 10632  016098  50E1               	movf	fsr1l,w,c
 10633  01609A  0FFC               	addlw	-4
 10634  01609C  6ED9               	movwf	fsr2l,c
 10635  01609E  50E2               	movf	fsr1h,w,c
 10636  0160A0  6EDA               	movwf	fsr2h,c
 10637  0160A2  0EFF               	movlw	255
 10638  0160A4  22DA               	addwfc	fsr2h,f,c
 10639  0160A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10640  0160AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10641  0160B2                     	if	0	;tblptru may be non-zero
 10642  0160B2                     	endif
 10643  0160B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10644  0160B2  0E00               	movlw	low (__mediumconst shr (0+16))
 10645  0160B4  6EF8               	movwf	tblptru,c
 10646  0160B6                     	endif
 10647  0160B6  0008               	tblrd		*
 10648  0160B8  50F5               	movf	tablat,w,c
 10649  0160BA  0900               	iorlw	0
 10650  0160BC  B4D8               	btfsc	status,2,c
 10651  0160BE  D027               	goto	u7570
 10652                           
 10653                           ;stkvar	_n @ sp[(-4)+-6]
 10654  0160C0  0EF6               	movlw	-10
 10655  0160C2  006F FF8C  F032    	movff	plusw1,btemp
 10656  0160C8  0EF7               	movlw	-9
 10657  0160CA  50E3               	movf	plusw1,w,c
 10658  0160CC  1032               	iorwf	btemp^0,w,c
 10659  0160CE  B4D8               	btfsc	status,2,c
 10660  0160D0  D01E               	goto	u7570
 10661                           
 10662                           ;stkvar	_l @ sp[(-4)+2]
 10663  0160D2  0EFE               	movlw	-2
 10664  0160D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10665  0160DA  0EFF               	movlw	-1
 10666  0160DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10667  0160E2  50DF               	movf	indf2,w,c
 10668  0160E4  6E3D               	movwf	(btemp+11)^0,c
 10669                           
 10670                           ;stkvar	_r @ sp[(-4)+0]
 10671  0160E6  50E1               	movf	fsr1l,w,c
 10672  0160E8  0FFC               	addlw	-4
 10673  0160EA  6ED9               	movwf	fsr2l,c
 10674  0160EC  50E2               	movf	fsr1h,w,c
 10675  0160EE  6EDA               	movwf	fsr2h,c
 10676  0160F0  0EFF               	movlw	255
 10677  0160F2  22DA               	addwfc	fsr2h,f,c
 10678  0160F4  006F FF7B FFF6     	movff	postinc2,tblptrl
 10679  0160FA  006F FF77 FFF7     	movff	postdec2,tblptrh
 10680  016100                     	if	0	;tblptru may be non-zero
 10681  016100                     	endif
 10682  016100                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10683  016100  0E00               	movlw	low (__mediumconst shr (0+16))
 10684  016102  6EF8               	movwf	tblptru,c
 10685  016104                     	endif
 10686  016104  0008               	tblrd		*
 10687  016106  50F5               	movf	tablat,w,c
 10688  016108  183D               	xorwf	(btemp+11)^0,w,c
 10689  01610A  B4D8               	btfsc	status,2,c
 10690  01610C  D784               	goto	l7928
 10691  01610E                     u7570:
 10692                           
 10693                           ;stkvar	_l @ sp[(-4)+2]
 10694  01610E  0EFE               	movlw	-2
 10695  016110  006F FF8F FFD9     	movff	plusw1,fsr2l
 10696  016116  0EFF               	movlw	-1
 10697  016118  006F FF8F FFDA     	movff	plusw1,fsr2h
 10698  01611E  50DF               	movf	indf2,w,c
 10699  016120  6E32               	movwf	btemp^0,c
 10700  016122  6A33               	clrf	(btemp+1)^0,c
 10701                           
 10702                           ;stkvar	_r @ sp[(-4)+0]
 10703  016124  50E1               	movf	fsr1l,w,c
 10704  016126  0FFC               	addlw	-4
 10705  016128  6ED9               	movwf	fsr2l,c
 10706  01612A  50E2               	movf	fsr1h,w,c
 10707  01612C  6EDA               	movwf	fsr2h,c
 10708  01612E  0EFF               	movlw	255
 10709  016130  22DA               	addwfc	fsr2h,f,c
 10710  016132  006F FF7B FFF6     	movff	postinc2,tblptrl
 10711  016138  006F FF77 FFF7     	movff	postdec2,tblptrh
 10712  01613E                     	if	0	;tblptru may be non-zero
 10713  01613E                     	endif
 10714  01613E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10715  01613E  0E00               	movlw	low (__mediumconst shr (0+16))
 10716  016140  6EF8               	movwf	tblptru,c
 10717  016142                     	endif
 10718  016142  0008               	tblrd		*
 10719  016144  50F5               	movf	tablat,w,c
 10720  016146  5E32               	subwf	btemp^0,f,c
 10721  016148  0E00               	movlw	0
 10722  01614A  5A33               	subwfb	(btemp+1)^0,f,c
 10723  01614C                     l2941:
 10724                           
 10725                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10726  01614C  0EF6               	movlw	246
 10727  01614E  26E1               	addwf	fsr1l,f,c
 10728  016150  0EFF               	movlw	255
 10729  016152  22E2               	addwfc	fsr1h,f,c
 10730  016154  0012               	return		;funcret
 10731  016156                     __end_of_strncmp:
 10732                           	opt callstack 0
 10733                           
 10734 ;; *************** function _stoa *****************
 10735 ;; Defined at:
 10736 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10737 ;; Parameters:    Size  Location     Type
 10738 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10739 ;;		 -> f(6), NULL(0), 
 10740 ;;  s               2  [STACK] PTR unsigned char 
 10741 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 10742 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
 10743 ;;		 -> STR_3(6), V(188), 
 10744 ;; Auto vars:     Size  Location     Type
 10745 ;;  nuls            7  [STACK] unsigned char [7]
 10746 ;;  l               2  [STACK] int 
 10747 ;;  p               2  [STACK] int 
 10748 ;;  cp              2  [STACK] PTR unsigned char 
 10749 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 10750 ;;		 -> STR_27(12), D.lcd(288), D(290), T(144), 
 10751 ;;		 -> STR_7(6), STR_3(6), V(188), 
 10752 ;;  w               2  [STACK] int 
 10753 ;;  i               2  [STACK] int 
 10754 ;; Return value:  Size  Location     Type
 10755 ;;                  2  [STACK] int 
 10756 ;; Registers used:
 10757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10758 ;; Tracked objects:
 10759 ;;		On entry : 0/1
 10760 ;;		On exit  : 0/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10767 ;;Total ram usage:        0 bytes
 10768 ;; Hardware stack levels used:    1
 10769 ;; Hardware stack levels required when called:    9
 10770 ;; This function calls:
 10771 ;;		_fputc
 10772 ;;		_strlen
 10773 ;; This function is called by:
 10774 ;;		_vfpfcnvrt
 10775 ;; This function uses a reentrant model
 10776 ;;
 10777                           
 10778                           	psect	text46
 10779  015186                     __ptext46:
 10780                           	opt callstack 0
 10781  015186                     _stoa:
 10782                           	opt callstack 0
 10783                           
 10784                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10785  015186  0E11               	movlw	17
 10786  015188  26E1               	addwf	fsr1l,f,c
 10787  01518A  0E00               	movlw	0
 10788  01518C  22E2               	addwfc	fsr1h,f,c
 10789                           
 10790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10791                           
 10792                           ;incstack = 0
 10793  01518E  EE20  F18C         	lfsr	2,stoa@F1166
 10794                           
 10795                           ;stkvar	_nuls @ sp[(-17)+0]
 10796  015192  0E07               	movlw	7
 10797  015194  6E32               	movwf	btemp^0,c
 10798  015196  0EEF               	movlw	-17
 10799  015198                     us991999:
 10800  015198  006F FF7B FFE3     	movff	postinc2,plusw1
 10801  01519E  28E8               	incf	wreg,w,c
 10802  0151A0  2E32               	decfsz	btemp^0,f,c
 10803  0151A2  D7FA               	bra	us991999
 10804                           
 10805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10806                           ;stkvar	_s @ sp[(-17)+-4]
 10807  0151A4  0EEB               	movlw	-21
 10808  0151A6  006F FF8C  F03C    	movff	plusw1,btemp+10
 10809  0151AC  0EEC               	movlw	-20
 10810  0151AE  006F FF8C  F03D    	movff	plusw1,btemp+11
 10811                           
 10812                           ;stkvar	_cp @ sp[(-17)+11]
 10813  0151B4  0EFB               	movlw	-5
 10814  0151B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10815  0151BC  0EFA               	movlw	-6
 10816  0151BE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10817                           
 10818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10819                           ;stkvar	_cp @ sp[(-17)+11]
 10820  0151C4  0EFA               	movlw	-6
 10821  0151C6  006F FF8C  F032    	movff	plusw1,btemp
 10822  0151CC  0EFB               	movlw	-5
 10823  0151CE  50E3               	movf	plusw1,w,c
 10824  0151D0  1032               	iorwf	btemp^0,w,c
 10825  0151D2  A4D8               	btfss	status,2,c
 10826  0151D4  D00E               	goto	l10220
 10827                           
 10828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10829                           ;stkvar	_nuls @ sp[(-17)+0]
 10830  0151D6  0EEF               	movlw	239
 10831  0151D8  24E1               	addwf	fsr1l,w,c
 10832  0151DA  6E3C               	movwf	(btemp+10)^0,c
 10833  0151DC  0EFF               	movlw	255
 10834  0151DE  20E2               	addwfc	fsr1h,w,c
 10835  0151E0  6E3D               	movwf	(btemp+11)^0,c
 10836                           
 10837                           ;stkvar	_cp @ sp[(-17)+11]
 10838  0151E2  0EFB               	movlw	-5
 10839  0151E4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10840  0151EA  0EFA               	movlw	-6
 10841  0151EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10842  0151F2                     l10220:
 10843                           
 10844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10845                           ;stkvar	_cp @ sp[(-17)+11]
 10846  0151F2  0EFA               	movlw	-6
 10847  0151F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10848  0151FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10849  015200  EC9F  F0BC         	call	_strlen	;wreg free
 10850                           
 10851                           ;stkvar	_l @ sp[(-17)+7]
 10852  015204  0EF6               	movlw	-10
 10853  015206  0060  F0CB  FFE3   	movff	btemp,plusw1
 10854  01520C  0EF7               	movlw	-9
 10855  01520E  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10856                           
 10857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10858                           ;stkvar	_p @ sp[(-17)+9]
 10859  015214  0EF8               	movlw	-8
 10860  015216  0060  F077  FFE3   	movff	_prec,plusw1
 10861  01521C  0EF9               	movlw	-7
 10862  01521E  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10863                           
 10864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10865                           ;stkvar	_p @ sp[(-17)+9]
 10866  015224  0EF9               	movlw	-7
 10867  015226  BEE3               	btfsc	plusw1,7,c
 10868  015228  D023               	goto	l2015
 10869                           
 10870                           ;stkvar	_l @ sp[(-17)+7]
 10871                           ;stkvar	_p @ sp[(-17)+9]
 10872  01522A  50E1               	movf	fsr1l,w,c
 10873  01522C  0FF8               	addlw	-8
 10874  01522E  6ED9               	movwf	fsr2l,c
 10875  015230  50E2               	movf	fsr1h,w,c
 10876  015232  6EDA               	movwf	fsr2h,c
 10877  015234  0EFF               	movlw	255
 10878  015236  22DA               	addwfc	fsr2h,f,c
 10879  015238  0EF6               	movlw	-10
 10880  01523A  50E3               	movf	plusw1,w,c
 10881  01523C  5CDE               	subwf	postinc2,w,c
 10882  01523E  50DE               	movf	postinc2,w,c
 10883  015240  0A80               	xorlw	128
 10884  015242  6E32               	movwf	btemp^0,c
 10885  015244  0EF7               	movlw	-9
 10886  015246  50E3               	movf	plusw1,w,c
 10887  015248  0A80               	xorlw	128
 10888  01524A  5832               	subwfb	btemp^0,w,c
 10889  01524C  B0D8               	btfsc	status,0,c
 10890  01524E  D010               	goto	l2015
 10891                           
 10892                           ;stkvar	_p @ sp[(-17)+9]
 10893                           ;stkvar	_l @ sp[(-17)+7]
 10894  015250  0EF8               	movlw	-8
 10895  015252  006F FF8C  F032    	movff	plusw1,btemp
 10896  015258  0EF6               	movlw	-10
 10897  01525A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10898  015260  0EF9               	movlw	-7
 10899  015262  006F FF8C  F032    	movff	plusw1,btemp
 10900  015268  0EF7               	movlw	-9
 10901  01526A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10902  015270                     l2015:
 10903                           
 10904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10905                           ;stkvar	_l @ sp[(-17)+7]
 10906                           ;stkvar	_p @ sp[(-17)+9]
 10907  015270  0EF6               	movlw	-10
 10908  015272  006F FF8C  F032    	movff	plusw1,btemp
 10909  015278  0EF8               	movlw	-8
 10910  01527A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10911  015280  0EF7               	movlw	-9
 10912  015282  006F FF8C  F032    	movff	plusw1,btemp
 10913  015288  0EF9               	movlw	-7
 10914  01528A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10915                           
 10916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10917                           ;stkvar	_w @ sp[(-17)+13]
 10918  015290  0EFC               	movlw	-4
 10919  015292  0060  F06F  FFE3   	movff	_width,plusw1
 10920  015298  0EFD               	movlw	-3
 10921  01529A  0060  F073  FFE3   	movff	_width+1,plusw1
 10922                           
 10923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10924  0152A0  A01F               	btfss	_flags^0,0,c
 10925  0152A2  D01F               	goto	l10240
 10926  0152A4  D031               	goto	u9960
 10927  0152A6                     l10236:
 10928                           
 10929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10930                           ;stkvar	_fp @ sp[(-17)+-2]
 10931  0152A6  0EED               	movlw	-19
 10932  0152A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10933  0152AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10934  0152B4  0E20               	movlw	32
 10935  0152B6  6EE6               	movwf	postinc1,c
 10936  0152B8  0E00               	movlw	0
 10937  0152BA  6EE6               	movwf	postinc1,c
 10938  0152BC  ECA2  F0B5         	call	_fputc	;wreg free
 10939                           
 10940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10941                           ;stkvar	_l @ sp[(-17)+7]
 10942  0152C0  0EF6               	movlw	-10
 10943  0152C2  50E3               	movf	plusw1,w,c
 10944  0152C4  0F01               	addlw	1
 10945  0152C6  6E32               	movwf	btemp^0,c
 10946  0152C8  0EF6               	movlw	-10
 10947  0152CA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10948  0152D0  6A32               	clrf	btemp^0,c
 10949  0152D2  0EF7               	movlw	-9
 10950  0152D4  50E3               	movf	plusw1,w,c
 10951  0152D6  2032               	addwfc	btemp^0,w,c
 10952  0152D8  6E32               	movwf	btemp^0,c
 10953  0152DA  0EF7               	movlw	-9
 10954  0152DC  0060  F0CB  FFE3   	movff	btemp,plusw1
 10955  0152E2                     l10240:
 10956                           
 10957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10958                           ;stkvar	_w @ sp[(-17)+13]
 10959                           ;stkvar	_l @ sp[(-17)+7]
 10960  0152E2  50E1               	movf	fsr1l,w,c
 10961  0152E4  0FF6               	addlw	-10
 10962  0152E6  6ED9               	movwf	fsr2l,c
 10963  0152E8  50E2               	movf	fsr1h,w,c
 10964  0152EA  6EDA               	movwf	fsr2h,c
 10965  0152EC  0EFF               	movlw	255
 10966  0152EE  22DA               	addwfc	fsr2h,f,c
 10967  0152F0  0EFC               	movlw	-4
 10968  0152F2  50E3               	movf	plusw1,w,c
 10969  0152F4  5CDE               	subwf	postinc2,w,c
 10970  0152F6  50DE               	movf	postinc2,w,c
 10971  0152F8  0A80               	xorlw	128
 10972  0152FA  6E32               	movwf	btemp^0,c
 10973  0152FC  0EFD               	movlw	-3
 10974  0152FE  50E3               	movf	plusw1,w,c
 10975  015300  0A80               	xorlw	128
 10976  015302  5832               	subwfb	btemp^0,w,c
 10977  015304  A0D8               	btfss	status,0,c
 10978  015306  D7CF               	goto	l10236
 10979  015308                     u9960:
 10980                           
 10981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10982                           ;stkvar	_i @ sp[(-17)+15]
 10983  015308  0EFE               	movlw	-2
 10984  01530A  6AE3               	clrf	plusw1,c
 10985  01530C  0EFF               	movlw	-1
 10986  01530E  6AE3               	clrf	plusw1,c
 10987                           
 10988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10989  015310  D045               	goto	l10250
 10990  015312                     l10244:
 10991                           
 10992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10993                           ;stkvar	_fp @ sp[(-17)+-2]
 10994  015312  0EED               	movlw	-19
 10995  015314  006F FF8F FFE6     	movff	plusw1,postinc1
 10996  01531A  006F FF8F FFE6     	movff	plusw1,postinc1
 10997                           
 10998                           ;stkvar	_cp @ sp[(-19)+11]
 10999  015320  0EF8               	movlw	-8
 11000  015322  006F FF8F FFF6     	movff	plusw1,tblptrl
 11001  015328  0EF9               	movlw	-7
 11002  01532A  006F FF8F FFF7     	movff	plusw1,tblptrh
 11003  015330  0E00               	movlw	low (__mediumconst shr (0+16))
 11004  015332  6EF8               	movwf	tblptru,c
 11005  015334  0E1F               	movlw	(high __ramtop+-1)
 11006  015336  64F7               	cpfsgt	tblptrh,c
 11007  015338  D003               	bra	u9977
 11008  01533A  0008               	tblrd		*
 11009  01533C  50F5               	movf	tablat,w,c
 11010  01533E  D007               	bra	u9970
 11011  015340                     u9977:
 11012  015340  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11013  015346  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11014  01534C  50EF               	movf	indf0,w,c
 11015  01534E                     u9970:
 11016  01534E  6EE6               	movwf	postinc1,c
 11017  015350  0E00               	movlw	0
 11018  015352  6EE6               	movwf	postinc1,c
 11019  015354  ECA2  F0B5         	call	_fputc	;wreg free
 11020                           
 11021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11022                           ;stkvar	_cp @ sp[(-17)+11]
 11023  015358  0EFA               	movlw	-6
 11024  01535A  50E3               	movf	plusw1,w,c
 11025  01535C  0F01               	addlw	1
 11026  01535E  6E32               	movwf	btemp^0,c
 11027  015360  0EFA               	movlw	-6
 11028  015362  0060  F0CB  FFE3   	movff	btemp,plusw1
 11029  015368  6A32               	clrf	btemp^0,c
 11030  01536A  0EFB               	movlw	-5
 11031  01536C  50E3               	movf	plusw1,w,c
 11032  01536E  2032               	addwfc	btemp^0,w,c
 11033  015370  6E32               	movwf	btemp^0,c
 11034  015372  0EFB               	movlw	-5
 11035  015374  0060  F0CB  FFE3   	movff	btemp,plusw1
 11036                           
 11037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11038                           ;stkvar	_i @ sp[(-17)+15]
 11039  01537A  0EFE               	movlw	-2
 11040  01537C  50E3               	movf	plusw1,w,c
 11041  01537E  0F01               	addlw	1
 11042  015380  6E32               	movwf	btemp^0,c
 11043  015382  0EFE               	movlw	-2
 11044  015384  0060  F0CB  FFE3   	movff	btemp,plusw1
 11045  01538A  6A32               	clrf	btemp^0,c
 11046  01538C  0EFF               	movlw	-1
 11047  01538E  50E3               	movf	plusw1,w,c
 11048  015390  2032               	addwfc	btemp^0,w,c
 11049  015392  6E32               	movwf	btemp^0,c
 11050  015394  0EFF               	movlw	-1
 11051  015396  0060  F0CB  FFE3   	movff	btemp,plusw1
 11052  01539C                     l10250:
 11053                           
 11054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11055                           ;stkvar	_p @ sp[(-17)+9]
 11056                           ;stkvar	_i @ sp[(-17)+15]
 11057  01539C  50E1               	movf	fsr1l,w,c
 11058  01539E  0FFE               	addlw	-2
 11059  0153A0  6ED9               	movwf	fsr2l,c
 11060  0153A2  50E2               	movf	fsr1h,w,c
 11061  0153A4  6EDA               	movwf	fsr2h,c
 11062  0153A6  0EFF               	movlw	255
 11063  0153A8  22DA               	addwfc	fsr2h,f,c
 11064  0153AA  0EF8               	movlw	-8
 11065  0153AC  50E3               	movf	plusw1,w,c
 11066  0153AE  5CDE               	subwf	postinc2,w,c
 11067  0153B0  50DE               	movf	postinc2,w,c
 11068  0153B2  0A80               	xorlw	128
 11069  0153B4  6E32               	movwf	btemp^0,c
 11070  0153B6  0EF9               	movlw	-7
 11071  0153B8  50E3               	movf	plusw1,w,c
 11072  0153BA  0A80               	xorlw	128
 11073  0153BC  5832               	subwfb	btemp^0,w,c
 11074  0153BE  A0D8               	btfss	status,0,c
 11075  0153C0  D7A8               	goto	l10244
 11076                           
 11077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11078  0153C2  B01F               	btfsc	_flags^0,0,c
 11079  0153C4  D01F               	goto	l10258
 11080  0153C6  D031               	goto	u10000
 11081  0153C8                     l10254:
 11082                           
 11083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11084                           ;stkvar	_fp @ sp[(-17)+-2]
 11085  0153C8  0EED               	movlw	-19
 11086  0153CA  006F FF8F FFE6     	movff	plusw1,postinc1
 11087  0153D0  006F FF8F FFE6     	movff	plusw1,postinc1
 11088  0153D6  0E20               	movlw	32
 11089  0153D8  6EE6               	movwf	postinc1,c
 11090  0153DA  0E00               	movlw	0
 11091  0153DC  6EE6               	movwf	postinc1,c
 11092  0153DE  ECA2  F0B5         	call	_fputc	;wreg free
 11093                           
 11094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11095                           ;stkvar	_l @ sp[(-17)+7]
 11096  0153E2  0EF6               	movlw	-10
 11097  0153E4  50E3               	movf	plusw1,w,c
 11098  0153E6  0F01               	addlw	1
 11099  0153E8  6E32               	movwf	btemp^0,c
 11100  0153EA  0EF6               	movlw	-10
 11101  0153EC  0060  F0CB  FFE3   	movff	btemp,plusw1
 11102  0153F2  6A32               	clrf	btemp^0,c
 11103  0153F4  0EF7               	movlw	-9
 11104  0153F6  50E3               	movf	plusw1,w,c
 11105  0153F8  2032               	addwfc	btemp^0,w,c
 11106  0153FA  6E32               	movwf	btemp^0,c
 11107  0153FC  0EF7               	movlw	-9
 11108  0153FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 11109  015404                     l10258:
 11110                           
 11111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11112                           ;stkvar	_w @ sp[(-17)+13]
 11113                           ;stkvar	_l @ sp[(-17)+7]
 11114  015404  50E1               	movf	fsr1l,w,c
 11115  015406  0FF6               	addlw	-10
 11116  015408  6ED9               	movwf	fsr2l,c
 11117  01540A  50E2               	movf	fsr1h,w,c
 11118  01540C  6EDA               	movwf	fsr2h,c
 11119  01540E  0EFF               	movlw	255
 11120  015410  22DA               	addwfc	fsr2h,f,c
 11121  015412  0EFC               	movlw	-4
 11122  015414  50E3               	movf	plusw1,w,c
 11123  015416  5CDE               	subwf	postinc2,w,c
 11124  015418  50DE               	movf	postinc2,w,c
 11125  01541A  0A80               	xorlw	128
 11126  01541C  6E32               	movwf	btemp^0,c
 11127  01541E  0EFD               	movlw	-3
 11128  015420  50E3               	movf	plusw1,w,c
 11129  015422  0A80               	xorlw	128
 11130  015424  5832               	subwfb	btemp^0,w,c
 11131  015426  A0D8               	btfss	status,0,c
 11132  015428  D7CF               	goto	l10254
 11133  01542A                     u10000:
 11134                           
 11135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11136                           ;stkvar	_l @ sp[(-17)+7]
 11137  01542A  0EF6               	movlw	-10
 11138  01542C  006F FF8C  F032    	movff	plusw1,btemp
 11139  015432  0EF7               	movlw	-9
 11140  015434  006F FF8C  F033    	movff	plusw1,btemp+1
 11141                           
 11142                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11143  01543A  0EEB               	movlw	235
 11144  01543C  26E1               	addwf	fsr1l,f,c
 11145  01543E  0EFF               	movlw	255
 11146  015440  22E2               	addwfc	fsr1h,f,c
 11147  015442  0012               	return		;funcret
 11148  015444                     __end_of_stoa:
 11149                           	opt callstack 0
 11150                           
 11151 ;; *************** function _efgtoa *****************
 11152 ;; Defined at:
 11153 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11154 ;; Parameters:    Size  Location     Type
 11155 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11156 ;;		 -> f(6), NULL(0), 
 11157 ;;  f               4  [STACK] PTR struct _IO_FILE
 11158 ;;  c               1  [STACK] unsigned char 
 11159 ;; Auto vars:     Size  Location     Type
 11160 ;;  u               4  [STACK] unsigned char 
 11161 ;;  g               4  [STACK] unsigned char 
 11162 ;;  l               4  [STACK] unsigned char 
 11163 ;;  h               4  [STACK] unsigned char 
 11164 ;;  ou              4  [STACK] unsigned char 
 11165 ;;  n               2  [STACK] int 
 11166 ;;  e               2  [STACK] int 
 11167 ;;  i               2  [STACK] int 
 11168 ;;  w               2  [STACK] int 
 11169 ;;  p               2  [STACK] int 
 11170 ;;  sign            2  [STACK] int 
 11171 ;;  d               2  [STACK] int 
 11172 ;;  ne              2  [STACK] int 
 11173 ;;  m               2  [STACK] int 
 11174 ;;  pp              2  [STACK] int 
 11175 ;;  t               2  [STACK] int 
 11176 ;;  mode            1  [STACK] unsigned char 
 11177 ;;  nmode           1  [STACK] unsigned char 
 11178 ;; Return value:  Size  Location     Type
 11179 ;;                  2  [STACK] int 
 11180 ;; Registers used:
 11181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11182 ;; Tracked objects:
 11183 ;;		On entry : 0/1
 11184 ;;		On exit  : 0/0
 11185 ;;		Unchanged: 0/0
 11186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11191 ;;Total ram usage:        0 bytes
 11192 ;; Hardware stack levels used:    1
 11193 ;; Hardware stack levels required when called:   11
 11194 ;; This function calls:
 11195 ;;		___awdiv
 11196 ;;		___awmod
 11197 ;;		___fladd
 11198 ;;		___fldiv
 11199 ;;		___fleq
 11200 ;;		___flge
 11201 ;;		___flmul
 11202 ;;		___flneg
 11203 ;;		___flsub
 11204 ;;		___fltol
 11205 ;;		___fpclassifyf
 11206 ;;		_floorf
 11207 ;;		_isupper
 11208 ;;		_pad
 11209 ;;		_strcpy
 11210 ;;		_tolower
 11211 ;; This function is called by:
 11212 ;;		_vfpfcnvrt
 11213 ;; This function uses a reentrant model
 11214 ;;
 11215                           
 11216                           	psect	text47
 11217  010000                     __ptext47:
 11218                           	opt callstack 0
 11219  010000                     _efgtoa:
 11220                           	opt callstack 0
 11221                           
 11222                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11223  010000  0E38               	movlw	56
 11224  010002  26E1               	addwf	fsr1l,f,c
 11225  010004  0E00               	movlw	0
 11226  010006  22E2               	addwfc	fsr1h,f,c
 11227                           
 11228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11229                           ;stkvar	_sign @ sp[(-56)+42]
 11230                           
 11231                           ;incstack = 0
 11232  010008  0EF2               	movlw	-14
 11233  01000A  6AE3               	clrf	plusw1,c
 11234  01000C  0EF3               	movlw	-13
 11235  01000E  6AE3               	clrf	plusw1,c
 11236                           
 11237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11238                           ;stkvar	_f @ sp[(-56)+-6]
 11239  010010  0EC2               	movlw	-62
 11240  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 11241  010018  0EC3               	movlw	-61
 11242  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 11243  010020  0EC4               	movlw	-60
 11244  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 11245  010028  0EC5               	movlw	-59
 11246  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 11247                           
 11248                           ;stkvar	_g @ sp[(-56)+16]
 11249  010030  0ED8               	movlw	-40
 11250  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11251  010038  0ED9               	movlw	-39
 11252  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11253  010040  0EDA               	movlw	-38
 11254  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11255  010048  0EDB               	movlw	-37
 11256  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11257                           
 11258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11259                           ;stkvar	_g @ sp[(-56)+16]
 11260  010050  0EDB               	movlw	-37
 11261  010052  AEE3               	btfss	plusw1,7,c
 11262  010054  D02B               	goto	l9918
 11263                           
 11264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11265  010056  0E01               	movlw	1
 11266  010058  6E3C               	movwf	(btemp+10)^0,c
 11267  01005A  0E00               	movlw	0
 11268  01005C  6E3D               	movwf	(btemp+11)^0,c
 11269                           
 11270                           ;stkvar	_sign @ sp[(-56)+42]
 11271  01005E  0EF2               	movlw	-14
 11272  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11273  010066  0EF3               	movlw	-13
 11274  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11275                           
 11276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11277                           ;stkvar	_g @ sp[(-56)+16]
 11278  01006E  0ED8               	movlw	-40
 11279  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11280  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11281  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11282  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11283  010088  ECBE  F0C1         	call	___flneg	;wreg free
 11284                           
 11285                           ;stkvar	_g @ sp[(-56)+16]
 11286  01008C  0ED8               	movlw	-40
 11287  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11288  010094  0ED9               	movlw	-39
 11289  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11290  01009C  0EDA               	movlw	-38
 11291  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11292  0100A4  0EDB               	movlw	-37
 11293  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11294  0100AC                     l9918:
 11295                           
 11296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11297                           ;stkvar	_n @ sp[(-56)+32]
 11298  0100AC  0EE8               	movlw	-24
 11299  0100AE  6AE3               	clrf	plusw1,c
 11300  0100B0  0EE9               	movlw	-23
 11301  0100B2  6AE3               	clrf	plusw1,c
 11302                           
 11303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11304                           ;stkvar	_w @ sp[(-56)+38]
 11305  0100B4  0EEE               	movlw	-18
 11306  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 11307  0100BC  0EEF               	movlw	-17
 11308  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 11309                           
 11310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11311                           ;stkvar	_sign @ sp[(-56)+42]
 11312  0100C4  0EF2               	movlw	-14
 11313  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 11314  0100CC  0EF3               	movlw	-13
 11315  0100CE  50E3               	movf	plusw1,w,c
 11316  0100D0  1032               	iorwf	btemp^0,w,c
 11317  0100D2  A4D8               	btfss	status,2,c
 11318  0100D4  D002               	goto	u9410
 11319  0100D6  A41F               	btfss	_flags^0,2,c
 11320  0100D8  D036               	goto	l9938
 11321  0100DA                     u9410:
 11322                           
 11323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11324                           ;stkvar	_sign @ sp[(-56)+42]
 11325  0100DA  0EF2               	movlw	-14
 11326  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 11327  0100E2  0EF3               	movlw	-13
 11328  0100E4  50E3               	movf	plusw1,w,c
 11329  0100E6  1032               	iorwf	btemp^0,w,c
 11330  0100E8  A4D8               	btfss	status,2,c
 11331  0100EA  D002               	goto	l9930
 11332  0100EC  0E2B               	movlw	43
 11333  0100EE  D001               	goto	L9
 11334  0100F0                     l9930:
 11335  0100F0  0E2D               	movlw	45
 11336  0100F2                     L9:
 11337  0100F2  6E3C               	movwf	(btemp+10)^0,c
 11338  0100F4  0E00               	movlw	0
 11339  0100F6  6E3D               	movwf	(btemp+11)^0,c
 11340                           
 11341                           ;stkvar	_efgtoa$4636 @ sp[(-56)+10]
 11342  0100F8  0ED2               	movlw	-46
 11343  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11344  010100  0ED3               	movlw	-45
 11345  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11346                           
 11347                           ;stkvar	_efgtoa$4636 @ sp[(-56)+10]
 11348  010108  0ED2               	movlw	-46
 11349  01010A  006F FF8C  F1A3    	movff	plusw1,_dbuf
 11350                           
 11351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11352                           ;stkvar	_n @ sp[(-56)+32]
 11353  010110  0EE8               	movlw	-24
 11354  010112  50E3               	movf	plusw1,w,c
 11355  010114  0F01               	addlw	1
 11356  010116  6E32               	movwf	btemp^0,c
 11357  010118  0EE8               	movlw	-24
 11358  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11359  010120  6A32               	clrf	btemp^0,c
 11360  010122  0EE9               	movlw	-23
 11361  010124  50E3               	movf	plusw1,w,c
 11362  010126  2032               	addwfc	btemp^0,w,c
 11363  010128  6E32               	movwf	btemp^0,c
 11364  01012A  0EE9               	movlw	-23
 11365  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11366                           
 11367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11368                           ;stkvar	_w @ sp[(-56)+38]
 11369  010132  50E1               	movf	fsr1l,w,c
 11370  010134  0FEE               	addlw	-18
 11371  010136  6ED9               	movwf	fsr2l,c
 11372  010138  50E2               	movf	fsr1h,w,c
 11373  01013A  6EDA               	movwf	fsr2h,c
 11374  01013C  0EFF               	movlw	255
 11375  01013E  22DA               	addwfc	fsr2h,f,c
 11376  010140  06DE               	decf	postinc2,f,c
 11377  010142  0E00               	movlw	0
 11378  010144  5ADD               	subwfb	postdec2,f,c
 11379  010146                     l9938:
 11380                           
 11381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11382                           ;stkvar	_g @ sp[(-56)+16]
 11383  010146  0ED8               	movlw	-40
 11384  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11385  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11386  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11387  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11388  010160  EC8B  F0B1         	call	___fpclassifyf	;wreg free
 11389  010164  0432               	decf	btemp^0,w,c
 11390  010166  1033               	iorwf	(btemp+1)^0,w,c
 11391  010168  A4D8               	btfss	status,2,c
 11392  01016A  D076               	goto	l9956
 11393  01016C  0EBF               	movlw	191
 11394  01016E  6E3C               	movwf	(btemp+10)^0,c
 11395  010170  0EFF               	movlw	255
 11396  010172  6E3D               	movwf	(btemp+11)^0,c
 11397                           
 11398                           ;stkvar	_c @ sp[(-56)+-7]
 11399  010174  0EC1               	movlw	-63
 11400  010176  50E3               	movf	plusw1,w,c
 11401  010178  6E3A               	movwf	(btemp+8)^0,c
 11402  01017A  6A3B               	clrf	(btemp+9)^0,c
 11403  01017C  503C               	movf	(btemp+10)^0,w,c
 11404  01017E  263A               	addwf	(btemp+8)^0,f,c
 11405  010180  503D               	movf	(btemp+11)^0,w,c
 11406  010182  223B               	addwfc	(btemp+9)^0,f,c
 11407  010184  503B               	movf	(btemp+9)^0,w,c
 11408  010186  E106               	bnz	u9440
 11409  010188  0E1A               	movlw	26
 11410  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 11411  01018C  B0D8               	btfsc	status,0,c
 11412  01018E  D002               	goto	u9440
 11413  010190  0E01               	movlw	1
 11414  010192  D001               	goto	u9450
 11415  010194                     u9440:
 11416  010194  0E00               	movlw	0
 11417  010196                     u9450:
 11418  010196  6E3C               	movwf	(btemp+10)^0,c
 11419  010198  6A3D               	clrf	(btemp+11)^0,c
 11420                           
 11421                           ;stkvar	_efgtoa$4637 @ sp[(-56)+8]
 11422  01019A  0ED0               	movlw	-48
 11423  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11424  0101A2  0ED1               	movlw	-47
 11425  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11426                           
 11427                           ;stkvar	_efgtoa$4637 @ sp[(-56)+8]
 11428  0101AA  0ED0               	movlw	-48
 11429  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 11430  0101B2  0ED1               	movlw	-47
 11431  0101B4  50E3               	movf	plusw1,w,c
 11432  0101B6  1032               	iorwf	btemp^0,w,c
 11433  0101B8  B4D8               	btfsc	status,2,c
 11434  0101BA  D017               	goto	l9948
 11435                           
 11436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11437  0101BC  0EE5               	movlw	low STR_46
 11438  0101BE  6EE6               	movwf	postinc1,c
 11439  0101C0  0EFF               	movlw	high STR_46
 11440  0101C2  6EE6               	movwf	postinc1,c
 11441                           
 11442                           ;stkvar	_n @ sp[(-58)+32]
 11443  0101C4  0EA3               	movlw	low _dbuf
 11444  0101C6  6E3C               	movwf	(btemp+10)^0,c
 11445  0101C8  0E01               	movlw	high _dbuf
 11446  0101CA  6E3D               	movwf	(btemp+11)^0,c
 11447  0101CC  0EE6               	movlw	-26
 11448  0101CE  50E3               	movf	plusw1,w,c
 11449  0101D0  263C               	addwf	(btemp+10)^0,f,c
 11450  0101D2  0EE7               	movlw	-25
 11451  0101D4  50E3               	movf	plusw1,w,c
 11452  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 11453  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11454  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11455  0101E4  ECCB  F0B9         	call	_strcpy	;wreg free
 11456                           
 11457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11458  0101E8  D016               	goto	l9950
 11459  0101EA                     l9948:
 11460                           
 11461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11462  0101EA  0EED               	movlw	low STR_47
 11463  0101EC  6EE6               	movwf	postinc1,c
 11464  0101EE  0EFF               	movlw	high STR_47
 11465  0101F0  6EE6               	movwf	postinc1,c
 11466                           
 11467                           ;stkvar	_n @ sp[(-58)+32]
 11468  0101F2  0EA3               	movlw	low _dbuf
 11469  0101F4  6E3C               	movwf	(btemp+10)^0,c
 11470  0101F6  0E01               	movlw	high _dbuf
 11471  0101F8  6E3D               	movwf	(btemp+11)^0,c
 11472  0101FA  0EE6               	movlw	-26
 11473  0101FC  50E3               	movf	plusw1,w,c
 11474  0101FE  263C               	addwf	(btemp+10)^0,f,c
 11475  010200  0EE7               	movlw	-25
 11476  010202  50E3               	movf	plusw1,w,c
 11477  010204  223D               	addwfc	(btemp+11)^0,f,c
 11478  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11479  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11480  010212  ECCB  F0B9         	call	_strcpy	;wreg free
 11481  010216                     l9950:
 11482                           
 11483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11484                           ;stkvar	_w @ sp[(-56)+38]
 11485  010216  50E1               	movf	fsr1l,w,c
 11486  010218  0FEE               	addlw	-18
 11487  01021A  6ED9               	movwf	fsr2l,c
 11488  01021C  50E2               	movf	fsr1h,w,c
 11489  01021E  6EDA               	movwf	fsr2h,c
 11490  010220  0EFF               	movlw	255
 11491  010222  22DA               	addwfc	fsr2h,f,c
 11492  010224  0EFD               	movlw	253
 11493  010226  26DE               	addwf	postinc2,f,c
 11494  010228  0EFF               	movlw	255
 11495  01022A  22DD               	addwfc	postdec2,f,c
 11496  01022C                     l9952:
 11497                           
 11498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11499                           ;stkvar	_w @ sp[(-56)+38]
 11500  01022C  0EEE               	movlw	-18
 11501  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11502  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11503  01023A  0EA3               	movlw	low _dbuf
 11504  01023C  6EE6               	movwf	postinc1,c
 11505  01023E  0E01               	movlw	high _dbuf
 11506  010240  6EE6               	movwf	postinc1,c
 11507                           
 11508                           ;stkvar	_fp @ sp[(-60)+-2]
 11509  010242  0EC2               	movlw	-62
 11510  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11511  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11512  010250  ECC0  F0B6         	call	_pad	;wreg free
 11513  010254  EF1D  F089         	goto	l1933
 11514  010258                     l9956:
 11515                           
 11516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11517                           ;stkvar	_g @ sp[(-56)+16]
 11518  010258  0ED8               	movlw	-40
 11519  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11520  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11521  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11522  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11523  010272  EC8B  F0B1         	call	___fpclassifyf	;wreg free
 11524  010276  5032               	movf	btemp^0,w,c
 11525  010278  1033               	iorwf	(btemp+1)^0,w,c
 11526  01027A  A4D8               	btfss	status,2,c
 11527  01027C  D056               	goto	l9974
 11528  01027E  0EBF               	movlw	191
 11529  010280  6E3C               	movwf	(btemp+10)^0,c
 11530  010282  0EFF               	movlw	255
 11531  010284  6E3D               	movwf	(btemp+11)^0,c
 11532                           
 11533                           ;stkvar	_c @ sp[(-56)+-7]
 11534  010286  0EC1               	movlw	-63
 11535  010288  50E3               	movf	plusw1,w,c
 11536  01028A  6E3A               	movwf	(btemp+8)^0,c
 11537  01028C  6A3B               	clrf	(btemp+9)^0,c
 11538  01028E  503C               	movf	(btemp+10)^0,w,c
 11539  010290  263A               	addwf	(btemp+8)^0,f,c
 11540  010292  503D               	movf	(btemp+11)^0,w,c
 11541  010294  223B               	addwfc	(btemp+9)^0,f,c
 11542  010296  503B               	movf	(btemp+9)^0,w,c
 11543  010298  E106               	bnz	u9480
 11544  01029A  0E1A               	movlw	26
 11545  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 11546  01029E  B0D8               	btfsc	status,0,c
 11547  0102A0  D002               	goto	u9480
 11548  0102A2  0E01               	movlw	1
 11549  0102A4  D001               	goto	u9490
 11550  0102A6                     u9480:
 11551  0102A6  0E00               	movlw	0
 11552  0102A8                     u9490:
 11553  0102A8  6E3C               	movwf	(btemp+10)^0,c
 11554  0102AA  6A3D               	clrf	(btemp+11)^0,c
 11555                           
 11556                           ;stkvar	_efgtoa$4641 @ sp[(-56)+6]
 11557  0102AC  0ECE               	movlw	-50
 11558  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11559  0102B4  0ECF               	movlw	-49
 11560  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11561                           
 11562                           ;stkvar	_efgtoa$4641 @ sp[(-56)+6]
 11563  0102BC  0ECE               	movlw	-50
 11564  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 11565  0102C4  0ECF               	movlw	-49
 11566  0102C6  50E3               	movf	plusw1,w,c
 11567  0102C8  1032               	iorwf	btemp^0,w,c
 11568  0102CA  B4D8               	btfsc	status,2,c
 11569  0102CC  D017               	goto	l9966
 11570                           
 11571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11572  0102CE  0EE9               	movlw	low STR_50
 11573  0102D0  6EE6               	movwf	postinc1,c
 11574  0102D2  0EFF               	movlw	high STR_50
 11575  0102D4  6EE6               	movwf	postinc1,c
 11576                           
 11577                           ;stkvar	_n @ sp[(-58)+32]
 11578  0102D6  0EA3               	movlw	low _dbuf
 11579  0102D8  6E3C               	movwf	(btemp+10)^0,c
 11580  0102DA  0E01               	movlw	high _dbuf
 11581  0102DC  6E3D               	movwf	(btemp+11)^0,c
 11582  0102DE  0EE6               	movlw	-26
 11583  0102E0  50E3               	movf	plusw1,w,c
 11584  0102E2  263C               	addwf	(btemp+10)^0,f,c
 11585  0102E4  0EE7               	movlw	-25
 11586  0102E6  50E3               	movf	plusw1,w,c
 11587  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 11588  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11589  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11590  0102F6  ECCB  F0B9         	call	_strcpy	;wreg free
 11591                           
 11592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11593  0102FA  D78D               	goto	l9950
 11594  0102FC                     l9966:
 11595                           
 11596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11597  0102FC  0EF1               	movlw	low STR_51
 11598  0102FE  6EE6               	movwf	postinc1,c
 11599  010300  0EFF               	movlw	high STR_51
 11600  010302  6EE6               	movwf	postinc1,c
 11601                           
 11602                           ;stkvar	_n @ sp[(-58)+32]
 11603  010304  0EA3               	movlw	low _dbuf
 11604  010306  6E3C               	movwf	(btemp+10)^0,c
 11605  010308  0E01               	movlw	high _dbuf
 11606  01030A  6E3D               	movwf	(btemp+11)^0,c
 11607  01030C  0EE6               	movlw	-26
 11608  01030E  50E3               	movf	plusw1,w,c
 11609  010310  263C               	addwf	(btemp+10)^0,f,c
 11610  010312  0EE7               	movlw	-25
 11611  010314  50E3               	movf	plusw1,w,c
 11612  010316  223D               	addwfc	(btemp+11)^0,f,c
 11613  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11614  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11615  010324  ECCB  F0B9         	call	_strcpy	;wreg free
 11616  010328  D776               	goto	l9950
 11617  01032A                     l9974:
 11618                           
 11619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11620  01032A  0E00               	movlw	0
 11621  01032C  6E3A               	movwf	(btemp+8)^0,c
 11622  01032E  0E00               	movlw	0
 11623  010330  6E3B               	movwf	(btemp+9)^0,c
 11624  010332  0E80               	movlw	128
 11625  010334  6E3C               	movwf	(btemp+10)^0,c
 11626  010336  0E3F               	movlw	63
 11627  010338  6E3D               	movwf	(btemp+11)^0,c
 11628                           
 11629                           ;stkvar	_u @ sp[(-56)+12]
 11630  01033A  0ED4               	movlw	-44
 11631  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11632  010342  0ED5               	movlw	-43
 11633  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11634  01034A  0ED6               	movlw	-42
 11635  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11636  010352  0ED7               	movlw	-41
 11637  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11638                           
 11639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11640                           ;stkvar	_e @ sp[(-56)+34]
 11641  01035A  0EEA               	movlw	-22
 11642  01035C  6AE3               	clrf	plusw1,c
 11643  01035E  0EEB               	movlw	-21
 11644  010360  6AE3               	clrf	plusw1,c
 11645                           
 11646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11647  010362  0E00               	movlw	0
 11648  010364  6EE6               	movwf	postinc1,c
 11649  010366  0E00               	movlw	0
 11650  010368  6EE6               	movwf	postinc1,c
 11651  01036A  0E00               	movlw	0
 11652  01036C  6EE6               	movwf	postinc1,c
 11653  01036E  0E00               	movlw	0
 11654  010370  6EE6               	movwf	postinc1,c
 11655                           
 11656                           ;stkvar	_g @ sp[(-60)+16]
 11657  010372  0ED4               	movlw	-44
 11658  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11659  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11660  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11661  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11662  01038C  EC35  F0BA         	call	___fleq	;wreg free
 11663  010390  A032               	btfss	btemp& (0+255),0,c
 11664  010392  D039               	goto	l9986
 11665  010394  D0BC               	goto	u9530
 11666  010396                     l9982:
 11667                           
 11668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11669  010396  0E00               	movlw	0
 11670  010398  6EE6               	movwf	postinc1,c
 11671  01039A  0E00               	movlw	0
 11672  01039C  6EE6               	movwf	postinc1,c
 11673  01039E  0E20               	movlw	32
 11674  0103A0  6EE6               	movwf	postinc1,c
 11675  0103A2  0E41               	movlw	65
 11676  0103A4  6EE6               	movwf	postinc1,c
 11677                           
 11678                           ;stkvar	_u @ sp[(-60)+12]
 11679  0103A6  0ED0               	movlw	-48
 11680  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11681  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11682  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11683  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11684  0103C0  EC06  F093         	call	___flmul	;wreg free
 11685                           
 11686                           ;stkvar	_u @ sp[(-56)+12]
 11687  0103C4  0ED4               	movlw	-44
 11688  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11689  0103CC  0ED5               	movlw	-43
 11690  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11691  0103D4  0ED6               	movlw	-42
 11692  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11693  0103DC  0ED7               	movlw	-41
 11694  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11695                           
 11696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11697                           ;stkvar	_e @ sp[(-56)+34]
 11698  0103E4  0EEA               	movlw	-22
 11699  0103E6  50E3               	movf	plusw1,w,c
 11700  0103E8  0F01               	addlw	1
 11701  0103EA  6E32               	movwf	btemp^0,c
 11702  0103EC  0EEA               	movlw	-22
 11703  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 11704  0103F4  6A32               	clrf	btemp^0,c
 11705  0103F6  0EEB               	movlw	-21
 11706  0103F8  50E3               	movf	plusw1,w,c
 11707  0103FA  2032               	addwfc	btemp^0,w,c
 11708  0103FC  6E32               	movwf	btemp^0,c
 11709  0103FE  0EEB               	movlw	-21
 11710  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 11711  010406                     l9986:
 11712                           
 11713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11714  010406  0E00               	movlw	0
 11715  010408  6EE6               	movwf	postinc1,c
 11716  01040A  0E00               	movlw	0
 11717  01040C  6EE6               	movwf	postinc1,c
 11718  01040E  0E20               	movlw	32
 11719  010410  6EE6               	movwf	postinc1,c
 11720  010412  0E41               	movlw	65
 11721  010414  6EE6               	movwf	postinc1,c
 11722                           
 11723                           ;stkvar	_u @ sp[(-60)+12]
 11724  010416  0ED0               	movlw	-48
 11725  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11726  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11727  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11728  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11729  010430  EC06  F093         	call	___flmul	;wreg free
 11730  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 11731  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11732  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11733  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11734                           
 11735                           ;stkvar	_g @ sp[(-60)+16]
 11736  01044C  0ED4               	movlw	-44
 11737  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11738  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11739  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11740  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11741  010466  EC0F  F0B3         	call	___flge	;wreg free
 11742  01046A  A032               	btfss	btemp& (0+255),0,c
 11743  01046C  D032               	goto	l9992
 11744  01046E  D793               	goto	l9982
 11745  010470                     l9988:
 11746                           
 11747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11748  010470  0E00               	movlw	0
 11749  010472  6EE6               	movwf	postinc1,c
 11750  010474  0E00               	movlw	0
 11751  010476  6EE6               	movwf	postinc1,c
 11752  010478  0E20               	movlw	32
 11753  01047A  6EE6               	movwf	postinc1,c
 11754  01047C  0E41               	movlw	65
 11755  01047E  6EE6               	movwf	postinc1,c
 11756                           
 11757                           ;stkvar	_u @ sp[(-60)+12]
 11758  010480  0ED0               	movlw	-48
 11759  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11760  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11761  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11762  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11763  01049A  ECF9  F09A         	call	___fldiv	;wreg free
 11764                           
 11765                           ;stkvar	_u @ sp[(-56)+12]
 11766  01049E  0ED4               	movlw	-44
 11767  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11768  0104A6  0ED5               	movlw	-43
 11769  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11770  0104AE  0ED6               	movlw	-42
 11771  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11772  0104B6  0ED7               	movlw	-41
 11773  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11774                           
 11775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11776                           ;stkvar	_e @ sp[(-56)+34]
 11777  0104BE  50E1               	movf	fsr1l,w,c
 11778  0104C0  0FEA               	addlw	-22
 11779  0104C2  6ED9               	movwf	fsr2l,c
 11780  0104C4  50E2               	movf	fsr1h,w,c
 11781  0104C6  6EDA               	movwf	fsr2h,c
 11782  0104C8  0EFF               	movlw	255
 11783  0104CA  22DA               	addwfc	fsr2h,f,c
 11784  0104CC  06DE               	decf	postinc2,f,c
 11785  0104CE  0E00               	movlw	0
 11786  0104D0  5ADD               	subwfb	postdec2,f,c
 11787  0104D2                     l9992:
 11788                           
 11789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11790                           ;stkvar	_u @ sp[(-56)+12]
 11791  0104D2  0ED4               	movlw	-44
 11792  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11793  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11794  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11795  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11796                           
 11797                           ;stkvar	_g @ sp[(-60)+16]
 11798  0104EC  0ED4               	movlw	-44
 11799  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11800  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11801  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11802  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11803  010506  EC0F  F0B3         	call	___flge	;wreg free
 11804  01050A  A032               	btfss	btemp& (0+255),0,c
 11805  01050C  D7B1               	goto	l9988
 11806  01050E                     u9530:
 11807                           
 11808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11809                           ;stkvar	_c @ sp[(-56)+-7]
 11810  01050E  0EC1               	movlw	-63
 11811  010510  50E3               	movf	plusw1,w,c
 11812  010512  6EE6               	movwf	postinc1,c
 11813  010514  0E00               	movlw	0
 11814  010516  6EE6               	movwf	postinc1,c
 11815  010518  EC9C  F0BE         	call	_tolower	;wreg free
 11816                           
 11817                           ;stkvar	_mode @ sp[(-56)+54]
 11818  01051C  0EFE               	movlw	-2
 11819  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11820                           
 11821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11822                           ;stkvar	_mode @ sp[(-56)+54]
 11823                           ;stkvar	_nmode @ sp[(-56)+55]
 11824  010524  0EFE               	movlw	-2
 11825  010526  006F FF8C  F032    	movff	plusw1,btemp
 11826  01052C  0EFF               	movlw	-1
 11827  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11828                           
 11829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11830                           ;stkvar	_mode @ sp[(-56)+54]
 11831  010534  0EFE               	movlw	-2
 11832  010536  006F FF8C  F032    	movff	plusw1,btemp
 11833  01053C  0E67               	movlw	103
 11834  01053E  1832               	xorwf	btemp^0,w,c
 11835  010540  A4D8               	btfss	status,2,c
 11836  010542  D025               	goto	l10010
 11837                           
 11838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11839  010544  501D               	movf	_prec^0,w,c
 11840  010546  101E               	iorwf	(_prec+1)^0,w,c
 11841  010548  A4D8               	btfss	status,2,c
 11842  01054A  D004               	goto	l10004
 11843                           
 11844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 11845  01054C  0E00               	movlw	0
 11846  01054E  6E1E               	movwf	(_prec+1)^0,c
 11847  010550  0E01               	movlw	1
 11848  010552  6E1D               	movwf	_prec^0,c
 11849  010554                     l10004:
 11850                           
 11851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 11852  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 11853  010556  D005               	goto	u9560
 11854  010558  501E               	movf	(_prec+1)^0,w,c
 11855  01055A  E110               	bnz	l10008
 11856  01055C  041D               	decf	_prec^0,w,c
 11857  01055E  B0D8               	btfsc	status,0,c
 11858  010560  D00D               	goto	l10008
 11859  010562                     u9560:
 11860  010562  0E06               	movlw	6
 11861  010564  6E3C               	movwf	(btemp+10)^0,c
 11862  010566  0E00               	movlw	0
 11863  010568  6E3D               	movwf	(btemp+11)^0,c
 11864                           
 11865                           ;stkvar	_p @ sp[(-56)+40]
 11866  01056A  0EF0               	movlw	-16
 11867  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11868  010572  0EF1               	movlw	-15
 11869  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11870  01057A  D00C               	goto	l10016
 11871  01057C                     l10008:
 11872                           
 11873                           ;stkvar	_p @ sp[(-56)+40]
 11874  01057C  0EF0               	movlw	-16
 11875  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 11876  010584  0EF1               	movlw	-15
 11877  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 11878  01058C  D003               	goto	l10016
 11879  01058E                     l10010:
 11880                           
 11881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 11882  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 11883  010590  D7F5               	goto	l10008
 11884  010592  D7E7               	goto	u9560
 11885  010594                     l10016:
 11886                           
 11887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 11888                           ;stkvar	_mode @ sp[(-56)+54]
 11889  010594  0EFE               	movlw	-2
 11890  010596  006F FF8C  F032    	movff	plusw1,btemp
 11891  01059C  0E67               	movlw	103
 11892  01059E  1832               	xorwf	btemp^0,w,c
 11893  0105A0  A4D8               	btfss	status,2,c
 11894  0105A2  D02F               	goto	l10026
 11895                           
 11896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 11897                           ;stkvar	_e @ sp[(-56)+34]
 11898  0105A4  0EEB               	movlw	-21
 11899  0105A6  AEE3               	btfss	plusw1,7,c
 11900  0105A8  D00E               	goto	u9590
 11901  0105AA  0EEA               	movlw	-22
 11902  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 11903  0105B2  0EFC               	movlw	252
 11904  0105B4  5E32               	subwf	btemp^0,f,c
 11905  0105B6  0EEB               	movlw	-21
 11906  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 11907  0105BE  0EFF               	movlw	255
 11908  0105C0  5A32               	subwfb	btemp^0,f,c
 11909  0105C2  A0D8               	btfss	status,0,c
 11910  0105C4  D018               	goto	l10024
 11911  0105C6                     u9590:
 11912                           
 11913                           ;stkvar	_e @ sp[(-56)+34]
 11914                           ;stkvar	_p @ sp[(-56)+40]
 11915  0105C6  0EF0               	movlw	-16
 11916  0105C8  50E3               	movf	plusw1,w,c
 11917  0105CA  0FFF               	addlw	255
 11918  0105CC  6E3C               	movwf	(btemp+10)^0,c
 11919  0105CE  0EF1               	movlw	-15
 11920  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 11921  0105D6  0EFF               	movlw	255
 11922  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 11923  0105DA  0EEA               	movlw	-22
 11924  0105DC  50E3               	movf	plusw1,w,c
 11925  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 11926  0105E0  503D               	movf	(btemp+11)^0,w,c
 11927  0105E2  0A80               	xorlw	128
 11928  0105E4  6E32               	movwf	btemp^0,c
 11929  0105E6  0EEB               	movlw	-21
 11930  0105E8  50E3               	movf	plusw1,w,c
 11931  0105EA  0A80               	xorlw	128
 11932  0105EC  5832               	subwfb	btemp^0,w,c
 11933  0105EE  A0D8               	btfss	status,0,c
 11934  0105F0  D002               	goto	l10024
 11935                           
 11936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 11937  0105F2  0E66               	movlw	102
 11938  0105F4  D001               	goto	L10
 11939  0105F6                     l10024:
 11940                           
 11941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 11942  0105F6  0E65               	movlw	101
 11943  0105F8                     L10:
 11944  0105F8  6E3D               	movwf	(btemp+11)^0,c
 11945                           
 11946                           ;stkvar	_nmode @ sp[(-56)+55]
 11947  0105FA  0EFF               	movlw	-1
 11948  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11949  010602                     l10026:
 11950                           
 11951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 11952                           ;stkvar	_p @ sp[(-56)+40]
 11953                           ;stkvar	_m @ sp[(-56)+48]
 11954  010602  0EF0               	movlw	-16
 11955  010604  006F FF8C  F032    	movff	plusw1,btemp
 11956  01060A  0EF8               	movlw	-8
 11957  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11958  010612  0EF1               	movlw	-15
 11959  010614  006F FF8C  F032    	movff	plusw1,btemp
 11960  01061A  0EF9               	movlw	-7
 11961  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11962                           
 11963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 11964                           ;stkvar	_mode @ sp[(-56)+54]
 11965  010622  0EFE               	movlw	-2
 11966  010624  006F FF8C  F032    	movff	plusw1,btemp
 11967  01062A  0E67               	movlw	103
 11968  01062C  1832               	xorwf	btemp^0,w,c
 11969  01062E  A4D8               	btfss	status,2,c
 11970  010630  D00B               	goto	u9630
 11971                           
 11972                           ;stkvar	_nmode @ sp[(-56)+55]
 11973  010632  0EFF               	movlw	-1
 11974  010634  006F FF8C  F032    	movff	plusw1,btemp
 11975  01063A  0E66               	movlw	102
 11976  01063C  1832               	xorwf	btemp^0,w,c
 11977  01063E  A4D8               	btfss	status,2,c
 11978  010640  D014               	goto	l1962
 11979                           
 11980                           ;stkvar	_e @ sp[(-56)+34]
 11981  010642  0EEB               	movlw	-21
 11982  010644  AEE3               	btfss	plusw1,7,c
 11983  010646  D011               	goto	l1962
 11984  010648                     u9630:
 11985                           
 11986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 11987                           ;stkvar	_m @ sp[(-56)+48]
 11988  010648  0EF8               	movlw	-8
 11989  01064A  50E3               	movf	plusw1,w,c
 11990  01064C  0F01               	addlw	1
 11991  01064E  6E32               	movwf	btemp^0,c
 11992  010650  0EF8               	movlw	-8
 11993  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 11994  010658  6A32               	clrf	btemp^0,c
 11995  01065A  0EF9               	movlw	-7
 11996  01065C  50E3               	movf	plusw1,w,c
 11997  01065E  2032               	addwfc	btemp^0,w,c
 11998  010660  6E32               	movwf	btemp^0,c
 11999  010662  0EF9               	movlw	-7
 12000  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 12001  01066A                     l1962:
 12002                           
 12003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12004                           ;stkvar	_nmode @ sp[(-56)+55]
 12005  01066A  0EFF               	movlw	-1
 12006  01066C  006F FF8C  F032    	movff	plusw1,btemp
 12007  010672  0E66               	movlw	102
 12008  010674  1832               	xorwf	btemp^0,w,c
 12009  010676  A4D8               	btfss	status,2,c
 12010  010678  D03B               	goto	l10046
 12011                           
 12012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12013                           ;stkvar	_e @ sp[(-56)+34]
 12014  01067A  0EEB               	movlw	-21
 12015  01067C  AEE3               	btfss	plusw1,7,c
 12016  01067E  D01C               	goto	l10042
 12017                           
 12018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12019  010680  0E00               	movlw	0
 12020  010682  6E3A               	movwf	(btemp+8)^0,c
 12021  010684  0E00               	movlw	0
 12022  010686  6E3B               	movwf	(btemp+9)^0,c
 12023  010688  0E80               	movlw	128
 12024  01068A  6E3C               	movwf	(btemp+10)^0,c
 12025  01068C  0E3F               	movlw	63
 12026  01068E  6E3D               	movwf	(btemp+11)^0,c
 12027                           
 12028                           ;stkvar	_u @ sp[(-56)+12]
 12029  010690  0ED4               	movlw	-44
 12030  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12031  010698  0ED5               	movlw	-43
 12032  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12033  0106A0  0ED6               	movlw	-42
 12034  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12035  0106A8  0ED7               	movlw	-41
 12036  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12037                           
 12038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12039                           ;stkvar	_e @ sp[(-56)+34]
 12040  0106B0  0EEA               	movlw	-22
 12041  0106B2  6AE3               	clrf	plusw1,c
 12042  0106B4  0EEB               	movlw	-21
 12043  0106B6  6AE3               	clrf	plusw1,c
 12044  0106B8                     l10042:
 12045                           
 12046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12047                           ;stkvar	_mode @ sp[(-56)+54]
 12048  0106B8  0EFE               	movlw	-2
 12049  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 12050  0106C0  0E67               	movlw	103
 12051  0106C2  1832               	xorwf	btemp^0,w,c
 12052  0106C4  B4D8               	btfsc	status,2,c
 12053  0106C6  D014               	goto	l10046
 12054                           
 12055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12056                           ;stkvar	_e @ sp[(-56)+34]
 12057                           ;stkvar	_m @ sp[(-56)+48]
 12058  0106C8  0EF8               	movlw	-8
 12059  0106CA  50E3               	movf	plusw1,w,c
 12060  0106CC  6E32               	movwf	btemp^0,c
 12061  0106CE  0EEA               	movlw	-22
 12062  0106D0  50E3               	movf	plusw1,w,c
 12063  0106D2  2632               	addwf	btemp^0,f,c
 12064  0106D4  0EF8               	movlw	-8
 12065  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12066  0106DC  0EF9               	movlw	-7
 12067  0106DE  50E3               	movf	plusw1,w,c
 12068  0106E0  6E32               	movwf	btemp^0,c
 12069  0106E2  0EEB               	movlw	-21
 12070  0106E4  50E3               	movf	plusw1,w,c
 12071  0106E6  2232               	addwfc	btemp^0,f,c
 12072  0106E8  0EF9               	movlw	-7
 12073  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 12074  0106F0                     l10046:
 12075                           
 12076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12077                           ;stkvar	_i @ sp[(-56)+36]
 12078  0106F0  0EEC               	movlw	-20
 12079  0106F2  6AE3               	clrf	plusw1,c
 12080  0106F4  0EED               	movlw	-19
 12081  0106F6  6AE3               	clrf	plusw1,c
 12082                           
 12083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12084                           ;stkvar	_g @ sp[(-56)+16]
 12085  0106F8  0ED8               	movlw	-40
 12086  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 12087  010700  0ED9               	movlw	-39
 12088  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 12089  010708  0EDA               	movlw	-38
 12090  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 12091  010710  0EDB               	movlw	-37
 12092  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 12093                           
 12094                           ;stkvar	_h @ sp[(-56)+24]
 12095  010718  0EE0               	movlw	-32
 12096  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12097  010720  0EE1               	movlw	-31
 12098  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12099  010728  0EE2               	movlw	-30
 12100  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12101  010730  0EE3               	movlw	-29
 12102  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12103                           
 12104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12105                           ;stkvar	_u @ sp[(-56)+12]
 12106  010738  0ED4               	movlw	-44
 12107  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 12108  010740  0ED5               	movlw	-43
 12109  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 12110  010748  0ED6               	movlw	-42
 12111  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 12112  010750  0ED7               	movlw	-41
 12113  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 12114                           
 12115                           ;stkvar	_ou @ sp[(-56)+28]
 12116  010758  0EE4               	movlw	-28
 12117  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12118  010760  0EE5               	movlw	-27
 12119  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12120  010768  0EE6               	movlw	-26
 12121  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12122  010770  0EE7               	movlw	-25
 12123  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12124                           
 12125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12126  010778  D0D6               	goto	l10062
 12127  01077A                     l10052:
 12128                           
 12129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12130                           ;stkvar	_u @ sp[(-56)+12]
 12131  01077A  0ED4               	movlw	-44
 12132  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12133  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12134  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12135  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12136                           
 12137                           ;stkvar	_h @ sp[(-60)+24]
 12138  010794  0EDC               	movlw	-36
 12139  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12140  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12141  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12142  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12143  0107AE  ECF9  F09A         	call	___fldiv	;wreg free
 12144  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 12145  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12146  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12147  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12148  0107CA  EC29  F0A4         	call	_floorf	;wreg free
 12149                           
 12150                           ;stkvar	_l @ sp[(-56)+20]
 12151  0107CE  0EDC               	movlw	-36
 12152  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 12153  0107D6  0EDD               	movlw	-35
 12154  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12155  0107DE  0EDE               	movlw	-34
 12156  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12157  0107E6  0EDF               	movlw	-33
 12158  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12159                           
 12160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12161                           ;stkvar	_l @ sp[(-56)+20]
 12162  0107EE  0EDC               	movlw	-36
 12163  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12164  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12165  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12166  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12167  010808  EC56  F0B2         	call	___fltol	;wreg free
 12168  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 12169  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 12170                           
 12171                           ;stkvar	_d @ sp[(-56)+44]
 12172  010818  0EF4               	movlw	-12
 12173  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12174  010820  0EF5               	movlw	-11
 12175  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12176                           
 12177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12178                           ;stkvar	_u @ sp[(-56)+12]
 12179  010828  0ED4               	movlw	-44
 12180  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12181  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12182  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12183  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12184                           
 12185                           ;stkvar	_l @ sp[(-60)+20]
 12186  010842  0ED8               	movlw	-40
 12187  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12188  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12189  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12190  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12191  01085C  EC06  F093         	call	___flmul	;wreg free
 12192  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 12193  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12194  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12195  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12196                           
 12197                           ;stkvar	_h @ sp[(-60)+24]
 12198  010878  0EDC               	movlw	-36
 12199  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12200  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12201  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12202  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12203  010892  EC05  F0C2         	call	___flsub	;wreg free
 12204                           
 12205                           ;stkvar	_h @ sp[(-56)+24]
 12206  010896  0EE0               	movlw	-32
 12207  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 12208  01089E  0EE1               	movlw	-31
 12209  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12210  0108A6  0EE2               	movlw	-30
 12211  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12212  0108AE  0EE3               	movlw	-29
 12213  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12214                           
 12215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12216  0108B6  0E00               	movlw	0
 12217  0108B8  6EE6               	movwf	postinc1,c
 12218  0108BA  0E00               	movlw	0
 12219  0108BC  6EE6               	movwf	postinc1,c
 12220  0108BE  0E20               	movlw	32
 12221  0108C0  6EE6               	movwf	postinc1,c
 12222  0108C2  0E41               	movlw	65
 12223  0108C4  6EE6               	movwf	postinc1,c
 12224                           
 12225                           ;stkvar	_u @ sp[(-60)+12]
 12226  0108C6  0ED0               	movlw	-48
 12227  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12228  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12229  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12230  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12231  0108E0  ECF9  F09A         	call	___fldiv	;wreg free
 12232                           
 12233                           ;stkvar	_u @ sp[(-56)+12]
 12234  0108E4  0ED4               	movlw	-44
 12235  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12236  0108EC  0ED5               	movlw	-43
 12237  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12238  0108F4  0ED6               	movlw	-42
 12239  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12240  0108FC  0ED7               	movlw	-41
 12241  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12242                           
 12243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12244                           ;stkvar	_i @ sp[(-56)+36]
 12245  010904  0EEC               	movlw	-20
 12246  010906  50E3               	movf	plusw1,w,c
 12247  010908  0F01               	addlw	1
 12248  01090A  6E32               	movwf	btemp^0,c
 12249  01090C  0EEC               	movlw	-20
 12250  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12251  010914  6A32               	clrf	btemp^0,c
 12252  010916  0EED               	movlw	-19
 12253  010918  50E3               	movf	plusw1,w,c
 12254  01091A  2032               	addwfc	btemp^0,w,c
 12255  01091C  6E32               	movwf	btemp^0,c
 12256  01091E  0EED               	movlw	-19
 12257  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 12258  010926                     l10062:
 12259                           
 12260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12261                           ;stkvar	_m @ sp[(-56)+48]
 12262                           ;stkvar	_i @ sp[(-56)+36]
 12263  010926  50E1               	movf	fsr1l,w,c
 12264  010928  0FEC               	addlw	-20
 12265  01092A  6ED9               	movwf	fsr2l,c
 12266  01092C  50E2               	movf	fsr1h,w,c
 12267  01092E  6EDA               	movwf	fsr2h,c
 12268  010930  0EFF               	movlw	255
 12269  010932  22DA               	addwfc	fsr2h,f,c
 12270  010934  0EF8               	movlw	-8
 12271  010936  50E3               	movf	plusw1,w,c
 12272  010938  5CDE               	subwf	postinc2,w,c
 12273  01093A  50DE               	movf	postinc2,w,c
 12274  01093C  0A80               	xorlw	128
 12275  01093E  6E32               	movwf	btemp^0,c
 12276  010940  0EF9               	movlw	-7
 12277  010942  50E3               	movf	plusw1,w,c
 12278  010944  0A80               	xorlw	128
 12279  010946  5832               	subwfb	btemp^0,w,c
 12280  010948  A0D8               	btfss	status,0,c
 12281  01094A  D717               	goto	l10052
 12282                           
 12283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12284  01094C  0E00               	movlw	0
 12285  01094E  6EE6               	movwf	postinc1,c
 12286  010950  0E00               	movlw	0
 12287  010952  6EE6               	movwf	postinc1,c
 12288  010954  0EA0               	movlw	160
 12289  010956  6EE6               	movwf	postinc1,c
 12290  010958  0E40               	movlw	64
 12291  01095A  6EE6               	movwf	postinc1,c
 12292                           
 12293                           ;stkvar	_u @ sp[(-60)+12]
 12294  01095C  0ED0               	movlw	-48
 12295  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12296  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12297  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12298  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12299  010976  EC06  F093         	call	___flmul	;wreg free
 12300                           
 12301                           ;stkvar	_l @ sp[(-56)+20]
 12302  01097A  0EDC               	movlw	-36
 12303  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12304  010982  0EDD               	movlw	-35
 12305  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12306  01098A  0EDE               	movlw	-34
 12307  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12308  010992  0EDF               	movlw	-33
 12309  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12310                           
 12311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12312                           ;stkvar	_l @ sp[(-56)+20]
 12313  01099A  0EDC               	movlw	-36
 12314  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12315  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12316  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12317  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12318                           
 12319                           ;stkvar	_h @ sp[(-60)+24]
 12320  0109B4  0EDC               	movlw	-36
 12321  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12322  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12323  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12324  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12325  0109CE  EC0F  F0B3         	call	___flge	;wreg free
 12326  0109D2  A032               	btfss	btemp& (0+255),0,c
 12327  0109D4  D021               	goto	u9700
 12328                           
 12329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12330                           ;stkvar	_l @ sp[(-56)+20]
 12331                           
 12332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12333                           
 12334                           ;stkvar	_l @ sp[(-56)+20]
 12335                           
 12336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12337  0109D6  0EDC               	movlw	-36
 12338  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12339  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12340  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12341  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12342                           
 12343                           ;stkvar	_h @ sp[(-60)+24]
 12344  0109F0  0EDC               	movlw	-36
 12345  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12346  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12347  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12348  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12349  010A0A  EC35  F0BA         	call	___fleq	;wreg free
 12350  010A0E  A032               	btfss	btemp& (0+255),0,c
 12351  010A10  D01B               	goto	l10076
 12352                           
 12353                           ;stkvar	_d @ sp[(-56)+44]
 12354  010A12  0EF4               	movlw	-12
 12355  010A14  B0E3               	btfsc	plusw1,0,c
 12356  010A16  D018               	goto	l10076
 12357  010A18                     u9700:
 12358                           
 12359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12360  010A18  0E00               	movlw	0
 12361  010A1A  6E3A               	movwf	(btemp+8)^0,c
 12362  010A1C  0E00               	movlw	0
 12363  010A1E  6E3B               	movwf	(btemp+9)^0,c
 12364  010A20  0E00               	movlw	0
 12365  010A22  6E3C               	movwf	(btemp+10)^0,c
 12366  010A24  0E00               	movlw	0
 12367  010A26  6E3D               	movwf	(btemp+11)^0,c
 12368                           
 12369                           ;stkvar	_l @ sp[(-56)+20]
 12370  010A28  0EDC               	movlw	-36
 12371  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12372  010A30  0EDD               	movlw	-35
 12373  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12374  010A38  0EDE               	movlw	-34
 12375  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12376  010A40  0EDF               	movlw	-33
 12377  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12378  010A48                     l10076:
 12379                           
 12380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12381                           ;stkvar	_l @ sp[(-56)+20]
 12382  010A48  0EDC               	movlw	-36
 12383  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12384  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12385  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12386  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12387                           
 12388                           ;stkvar	_g @ sp[(-60)+16]
 12389  010A62  0ED4               	movlw	-44
 12390  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12391  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12392  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12393  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12394  010A7C  EC1B  F097         	call	___fladd	;wreg free
 12395                           
 12396                           ;stkvar	_h @ sp[(-56)+24]
 12397  010A80  0EE0               	movlw	-32
 12398  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 12399  010A88  0EE1               	movlw	-31
 12400  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12401  010A90  0EE2               	movlw	-30
 12402  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12403  010A98  0EE3               	movlw	-29
 12404  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12405                           
 12406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12407                           ;stkvar	_ou @ sp[(-56)+28]
 12408  010AA0  0EE4               	movlw	-28
 12409  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 12410  010AA8  0EE5               	movlw	-27
 12411  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 12412  010AB0  0EE6               	movlw	-26
 12413  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 12414  010AB8  0EE7               	movlw	-25
 12415  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 12416                           
 12417                           ;stkvar	_u @ sp[(-56)+12]
 12418  010AC0  0ED4               	movlw	-44
 12419  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12420  010AC8  0ED5               	movlw	-43
 12421  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12422  010AD0  0ED6               	movlw	-42
 12423  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12424  010AD8  0ED7               	movlw	-41
 12425  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12426                           
 12427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12428                           ;stkvar	_nmode @ sp[(-56)+55]
 12429  010AE0  0EFF               	movlw	-1
 12430  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 12431  010AE8  0E65               	movlw	101
 12432  010AEA  1832               	xorwf	btemp^0,w,c
 12433  010AEC  B4D8               	btfsc	status,2,c
 12434  010AEE  D011               	goto	l10084
 12435                           
 12436                           ;stkvar	_e @ sp[(-56)+34]
 12437                           ;stkvar	_ne @ sp[(-56)+46]
 12438  010AF0  0EEA               	movlw	-22
 12439  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 12440  010AF8  0EF6               	movlw	-10
 12441  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 12442  010B00  0EEB               	movlw	-21
 12443  010B02  006F FF8C  F032    	movff	plusw1,btemp
 12444  010B08  0EF7               	movlw	-9
 12445  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12446  010B10  D004               	goto	l1977
 12447  010B12                     l10084:
 12448                           
 12449                           ;stkvar	_ne @ sp[(-56)+46]
 12450  010B12  0EF6               	movlw	-10
 12451  010B14  6AE3               	clrf	plusw1,c
 12452  010B16  0EF7               	movlw	-9
 12453  010B18  6AE3               	clrf	plusw1,c
 12454  010B1A                     l1977:
 12455                           
 12456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12457                           ;stkvar	_pp @ sp[(-56)+50]
 12458  010B1A  0EFA               	movlw	-6
 12459  010B1C  6AE3               	clrf	plusw1,c
 12460  010B1E  0EFB               	movlw	-5
 12461  010B20  6AE3               	clrf	plusw1,c
 12462                           
 12463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12464                           ;stkvar	_t @ sp[(-56)+52]
 12465  010B22  0EFC               	movlw	-4
 12466  010B24  6AE3               	clrf	plusw1,c
 12467  010B26  0EFD               	movlw	-3
 12468  010B28  6AE3               	clrf	plusw1,c
 12469                           
 12470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12471                           ;stkvar	_i @ sp[(-56)+36]
 12472  010B2A  0EEC               	movlw	-20
 12473  010B2C  6AE3               	clrf	plusw1,c
 12474  010B2E  0EED               	movlw	-19
 12475  010B30  6AE3               	clrf	plusw1,c
 12476                           
 12477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12478  010B32  D1B7               	goto	l10136
 12479  010B34                     l10086:
 12480                           
 12481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12482                           ;stkvar	_u @ sp[(-56)+12]
 12483  010B34  0ED4               	movlw	-44
 12484  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12485  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12486  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12487  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12488                           
 12489                           ;stkvar	_h @ sp[(-60)+24]
 12490  010B4E  0EDC               	movlw	-36
 12491  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12492  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12493  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12494  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12495  010B68  ECF9  F09A         	call	___fldiv	;wreg free
 12496  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 12497  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12498  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12499  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12500  010B84  EC29  F0A4         	call	_floorf	;wreg free
 12501                           
 12502                           ;stkvar	_l @ sp[(-56)+20]
 12503  010B88  0EDC               	movlw	-36
 12504  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12505  010B90  0EDD               	movlw	-35
 12506  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12507  010B98  0EDE               	movlw	-34
 12508  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12509  010BA0  0EDF               	movlw	-33
 12510  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12511                           
 12512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12513                           ;stkvar	_l @ sp[(-56)+20]
 12514  010BA8  0EDC               	movlw	-36
 12515  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12516  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12517  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12518  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12519  010BC2  EC56  F0B2         	call	___fltol	;wreg free
 12520  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 12521  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 12522                           
 12523                           ;stkvar	_d @ sp[(-56)+44]
 12524  010BD2  0EF4               	movlw	-12
 12525  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12526  010BDA  0EF5               	movlw	-11
 12527  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12528                           
 12529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12530  010BE2  B81F               	btfsc	_flags^0,4,c
 12531  010BE4  D026               	goto	l10100
 12532                           
 12533                           ;stkvar	_d @ sp[(-56)+44]
 12534  010BE6  0EF4               	movlw	-12
 12535  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 12536  010BEE  0EF5               	movlw	-11
 12537  010BF0  50E3               	movf	plusw1,w,c
 12538  010BF2  1032               	iorwf	btemp^0,w,c
 12539  010BF4  A4D8               	btfss	status,2,c
 12540  010BF6  D01D               	goto	l10100
 12541                           
 12542                           ;stkvar	_mode @ sp[(-56)+54]
 12543  010BF8  0EFE               	movlw	-2
 12544  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 12545  010C00  0E67               	movlw	103
 12546  010C02  1832               	xorwf	btemp^0,w,c
 12547  010C04  A4D8               	btfss	status,2,c
 12548  010C06  D015               	goto	l10100
 12549                           
 12550                           ;stkvar	_ne @ sp[(-56)+46]
 12551  010C08  0EF7               	movlw	-9
 12552  010C0A  AEE3               	btfss	plusw1,7,c
 12553  010C0C  D012               	goto	l10100
 12554                           
 12555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12556                           ;stkvar	_t @ sp[(-56)+52]
 12557  010C0E  0EFC               	movlw	-4
 12558  010C10  50E3               	movf	plusw1,w,c
 12559  010C12  0F01               	addlw	1
 12560  010C14  6E32               	movwf	btemp^0,c
 12561  010C16  0EFC               	movlw	-4
 12562  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 12563  010C1E  6A32               	clrf	btemp^0,c
 12564  010C20  0EFD               	movlw	-3
 12565  010C22  50E3               	movf	plusw1,w,c
 12566  010C24  2032               	addwfc	btemp^0,w,c
 12567  010C26  6E32               	movwf	btemp^0,c
 12568  010C28  0EFD               	movlw	-3
 12569  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12570                           
 12571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12572  010C30  D0AF               	goto	l10128
 12573  010C32                     l10100:
 12574                           
 12575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12576                           ;stkvar	_pp @ sp[(-56)+50]
 12577  010C32  0EFA               	movlw	-6
 12578  010C34  006F FF8C  F032    	movff	plusw1,btemp
 12579  010C3A  0EFB               	movlw	-5
 12580  010C3C  50E3               	movf	plusw1,w,c
 12581  010C3E  1032               	iorwf	btemp^0,w,c
 12582  010C40  A4D8               	btfss	status,2,c
 12583  010C42  D070               	goto	l10120
 12584                           
 12585                           ;stkvar	_ne @ sp[(-56)+46]
 12586  010C44  0EF7               	movlw	-9
 12587  010C46  AEE3               	btfss	plusw1,7,c
 12588  010C48  D06D               	goto	l10120
 12589                           
 12590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12591                           ;stkvar	_n @ sp[(-56)+32]
 12592  010C4A  0EE8               	movlw	-24
 12593  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12594  010C52  0EE9               	movlw	-23
 12595  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 12596  010C5A  0EA3               	movlw	low _dbuf
 12597  010C5C  243C               	addwf	(btemp+10)^0,w,c
 12598  010C5E  6ED9               	movwf	fsr2l,c
 12599  010C60  0E01               	movlw	high _dbuf
 12600  010C62  203D               	addwfc	(btemp+11)^0,w,c
 12601  010C64  6EDA               	movwf	fsr2h,c
 12602  010C66  0E2E               	movlw	46
 12603  010C68  6EDF               	movwf	indf2,c
 12604                           
 12605                           ;stkvar	_n @ sp[(-56)+32]
 12606  010C6A  0EE8               	movlw	-24
 12607  010C6C  50E3               	movf	plusw1,w,c
 12608  010C6E  0F01               	addlw	1
 12609  010C70  6E32               	movwf	btemp^0,c
 12610  010C72  0EE8               	movlw	-24
 12611  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 12612  010C7A  6A32               	clrf	btemp^0,c
 12613  010C7C  0EE9               	movlw	-23
 12614  010C7E  50E3               	movf	plusw1,w,c
 12615  010C80  2032               	addwfc	btemp^0,w,c
 12616  010C82  6E32               	movwf	btemp^0,c
 12617  010C84  0EE9               	movlw	-23
 12618  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 12619                           
 12620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12621                           ;stkvar	_w @ sp[(-56)+38]
 12622  010C8C  50E1               	movf	fsr1l,w,c
 12623  010C8E  0FEE               	addlw	-18
 12624  010C90  6ED9               	movwf	fsr2l,c
 12625  010C92  50E2               	movf	fsr1h,w,c
 12626  010C94  6EDA               	movwf	fsr2h,c
 12627  010C96  0EFF               	movlw	255
 12628  010C98  22DA               	addwfc	fsr2h,f,c
 12629  010C9A  06DE               	decf	postinc2,f,c
 12630  010C9C  0E00               	movlw	0
 12631  010C9E  5ADD               	subwfb	postdec2,f,c
 12632                           
 12633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12634  010CA0  0E01               	movlw	1
 12635  010CA2  6E3C               	movwf	(btemp+10)^0,c
 12636  010CA4  0E00               	movlw	0
 12637  010CA6  6E3D               	movwf	(btemp+11)^0,c
 12638                           
 12639                           ;stkvar	_pp @ sp[(-56)+50]
 12640  010CA8  0EFA               	movlw	-6
 12641  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12642  010CB0  0EFB               	movlw	-5
 12643  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12644  010CB8  D035               	goto	l10120
 12645  010CBA                     l10112:
 12646                           
 12647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12648                           ;stkvar	_n @ sp[(-56)+32]
 12649  010CBA  0EE8               	movlw	-24
 12650  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12651  010CC2  0EE9               	movlw	-23
 12652  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12653  010CCA  0EA3               	movlw	low _dbuf
 12654  010CCC  243C               	addwf	(btemp+10)^0,w,c
 12655  010CCE  6ED9               	movwf	fsr2l,c
 12656  010CD0  0E01               	movlw	high _dbuf
 12657  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 12658  010CD4  6EDA               	movwf	fsr2h,c
 12659  010CD6  0E30               	movlw	48
 12660  010CD8  6EDF               	movwf	indf2,c
 12661                           
 12662                           ;stkvar	_n @ sp[(-56)+32]
 12663  010CDA  0EE8               	movlw	-24
 12664  010CDC  50E3               	movf	plusw1,w,c
 12665  010CDE  0F01               	addlw	1
 12666  010CE0  6E32               	movwf	btemp^0,c
 12667  010CE2  0EE8               	movlw	-24
 12668  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 12669  010CEA  6A32               	clrf	btemp^0,c
 12670  010CEC  0EE9               	movlw	-23
 12671  010CEE  50E3               	movf	plusw1,w,c
 12672  010CF0  2032               	addwfc	btemp^0,w,c
 12673  010CF2  6E32               	movwf	btemp^0,c
 12674  010CF4  0EE9               	movlw	-23
 12675  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12676                           
 12677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12678                           ;stkvar	_w @ sp[(-56)+38]
 12679  010CFC  50E1               	movf	fsr1l,w,c
 12680  010CFE  0FEE               	addlw	-18
 12681  010D00  6ED9               	movwf	fsr2l,c
 12682  010D02  50E2               	movf	fsr1h,w,c
 12683  010D04  6EDA               	movwf	fsr2h,c
 12684  010D06  0EFF               	movlw	255
 12685  010D08  22DA               	addwfc	fsr2h,f,c
 12686  010D0A  06DE               	decf	postinc2,f,c
 12687  010D0C  0E00               	movlw	0
 12688  010D0E  5ADD               	subwfb	postdec2,f,c
 12689                           
 12690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12691                           ;stkvar	_t @ sp[(-56)+52]
 12692  010D10  50E1               	movf	fsr1l,w,c
 12693  010D12  0FFC               	addlw	-4
 12694  010D14  6ED9               	movwf	fsr2l,c
 12695  010D16  50E2               	movf	fsr1h,w,c
 12696  010D18  6EDA               	movwf	fsr2h,c
 12697  010D1A  0EFF               	movlw	255
 12698  010D1C  22DA               	addwfc	fsr2h,f,c
 12699  010D1E  06DE               	decf	postinc2,f,c
 12700  010D20  0E00               	movlw	0
 12701  010D22  5ADD               	subwfb	postdec2,f,c
 12702  010D24                     l10120:
 12703                           
 12704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12705                           ;stkvar	_t @ sp[(-56)+52]
 12706  010D24  0EFC               	movlw	-4
 12707  010D26  006F FF8C  F032    	movff	plusw1,btemp
 12708  010D2C  0EFD               	movlw	-3
 12709  010D2E  50E3               	movf	plusw1,w,c
 12710  010D30  1032               	iorwf	btemp^0,w,c
 12711  010D32  A4D8               	btfss	status,2,c
 12712  010D34  D7C2               	goto	l10112
 12713                           
 12714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12715                           ;stkvar	_n @ sp[(-56)+32]
 12716  010D36  0EE8               	movlw	-24
 12717  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 12718  010D3E  0EE9               	movlw	-23
 12719  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 12720  010D46  0EA3               	movlw	low _dbuf
 12721  010D48  243C               	addwf	(btemp+10)^0,w,c
 12722  010D4A  6ED9               	movwf	fsr2l,c
 12723  010D4C  0E01               	movlw	high _dbuf
 12724  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 12725  010D50  6EDA               	movwf	fsr2h,c
 12726                           
 12727                           ;stkvar	_d @ sp[(-56)+44]
 12728  010D52  0EF4               	movlw	-12
 12729  010D54  50E3               	movf	plusw1,w,c
 12730  010D56  0F30               	addlw	48
 12731  010D58  6EDF               	movwf	indf2,c
 12732                           
 12733                           ;stkvar	_n @ sp[(-56)+32]
 12734  010D5A  0EE8               	movlw	-24
 12735  010D5C  50E3               	movf	plusw1,w,c
 12736  010D5E  0F01               	addlw	1
 12737  010D60  6E32               	movwf	btemp^0,c
 12738  010D62  0EE8               	movlw	-24
 12739  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 12740  010D6A  6A32               	clrf	btemp^0,c
 12741  010D6C  0EE9               	movlw	-23
 12742  010D6E  50E3               	movf	plusw1,w,c
 12743  010D70  2032               	addwfc	btemp^0,w,c
 12744  010D72  6E32               	movwf	btemp^0,c
 12745  010D74  0EE9               	movlw	-23
 12746  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 12747                           
 12748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12749                           ;stkvar	_w @ sp[(-56)+38]
 12750  010D7C  50E1               	movf	fsr1l,w,c
 12751  010D7E  0FEE               	addlw	-18
 12752  010D80  6ED9               	movwf	fsr2l,c
 12753  010D82  50E2               	movf	fsr1h,w,c
 12754  010D84  6EDA               	movwf	fsr2h,c
 12755  010D86  0EFF               	movlw	255
 12756  010D88  22DA               	addwfc	fsr2h,f,c
 12757  010D8A  06DE               	decf	postinc2,f,c
 12758  010D8C  0E00               	movlw	0
 12759  010D8E  5ADD               	subwfb	postdec2,f,c
 12760  010D90                     l10128:
 12761                           
 12762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12763                           ;stkvar	_u @ sp[(-56)+12]
 12764  010D90  0ED4               	movlw	-44
 12765  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12766  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12767  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12768  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12769                           
 12770                           ;stkvar	_l @ sp[(-60)+20]
 12771  010DAA  0ED8               	movlw	-40
 12772  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12773  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12774  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12775  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12776  010DC4  EC06  F093         	call	___flmul	;wreg free
 12777  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 12778  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12779  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12780  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12781                           
 12782                           ;stkvar	_h @ sp[(-60)+24]
 12783  010DE0  0EDC               	movlw	-36
 12784  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12785  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12786  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12787  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12788  010DFA  EC05  F0C2         	call	___flsub	;wreg free
 12789                           
 12790                           ;stkvar	_h @ sp[(-56)+24]
 12791  010DFE  0EE0               	movlw	-32
 12792  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 12793  010E06  0EE1               	movlw	-31
 12794  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12795  010E0E  0EE2               	movlw	-30
 12796  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12797  010E16  0EE3               	movlw	-29
 12798  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12799                           
 12800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12801  010E1E  0E00               	movlw	0
 12802  010E20  6EE6               	movwf	postinc1,c
 12803  010E22  0E00               	movlw	0
 12804  010E24  6EE6               	movwf	postinc1,c
 12805  010E26  0E20               	movlw	32
 12806  010E28  6EE6               	movwf	postinc1,c
 12807  010E2A  0E41               	movlw	65
 12808  010E2C  6EE6               	movwf	postinc1,c
 12809                           
 12810                           ;stkvar	_u @ sp[(-60)+12]
 12811  010E2E  0ED0               	movlw	-48
 12812  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12813  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12814  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12815  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12816  010E48  ECF9  F09A         	call	___fldiv	;wreg free
 12817                           
 12818                           ;stkvar	_u @ sp[(-56)+12]
 12819  010E4C  0ED4               	movlw	-44
 12820  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12821  010E54  0ED5               	movlw	-43
 12822  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12823  010E5C  0ED6               	movlw	-42
 12824  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12825  010E64  0ED7               	movlw	-41
 12826  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12827                           
 12828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12829                           ;stkvar	_ne @ sp[(-56)+46]
 12830  010E6C  50E1               	movf	fsr1l,w,c
 12831  010E6E  0FF6               	addlw	-10
 12832  010E70  6ED9               	movwf	fsr2l,c
 12833  010E72  50E2               	movf	fsr1h,w,c
 12834  010E74  6EDA               	movwf	fsr2h,c
 12835  010E76  0EFF               	movlw	255
 12836  010E78  22DA               	addwfc	fsr2h,f,c
 12837  010E7A  06DE               	decf	postinc2,f,c
 12838  010E7C  0E00               	movlw	0
 12839  010E7E  5ADD               	subwfb	postdec2,f,c
 12840                           
 12841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12842                           ;stkvar	_i @ sp[(-56)+36]
 12843  010E80  0EEC               	movlw	-20
 12844  010E82  50E3               	movf	plusw1,w,c
 12845  010E84  0F01               	addlw	1
 12846  010E86  6E32               	movwf	btemp^0,c
 12847  010E88  0EEC               	movlw	-20
 12848  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12849  010E90  6A32               	clrf	btemp^0,c
 12850  010E92  0EED               	movlw	-19
 12851  010E94  50E3               	movf	plusw1,w,c
 12852  010E96  2032               	addwfc	btemp^0,w,c
 12853  010E98  6E32               	movwf	btemp^0,c
 12854  010E9A  0EED               	movlw	-19
 12855  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12856  010EA2                     l10136:
 12857                           
 12858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12859                           ;stkvar	_m @ sp[(-56)+48]
 12860                           ;stkvar	_i @ sp[(-56)+36]
 12861  010EA2  50E1               	movf	fsr1l,w,c
 12862  010EA4  0FEC               	addlw	-20
 12863  010EA6  6ED9               	movwf	fsr2l,c
 12864  010EA8  50E2               	movf	fsr1h,w,c
 12865  010EAA  6EDA               	movwf	fsr2h,c
 12866  010EAC  0EFF               	movlw	255
 12867  010EAE  22DA               	addwfc	fsr2h,f,c
 12868  010EB0  0EF8               	movlw	-8
 12869  010EB2  50E3               	movf	plusw1,w,c
 12870  010EB4  5CDE               	subwf	postinc2,w,c
 12871  010EB6  50DE               	movf	postinc2,w,c
 12872  010EB8  0A80               	xorlw	128
 12873  010EBA  6E32               	movwf	btemp^0,c
 12874  010EBC  0EF9               	movlw	-7
 12875  010EBE  50E3               	movf	plusw1,w,c
 12876  010EC0  0A80               	xorlw	128
 12877  010EC2  5832               	subwfb	btemp^0,w,c
 12878  010EC4  B0D8               	btfsc	status,0,c
 12879  010EC6  D00E               	goto	u9800
 12880                           
 12881                           ;stkvar	_n @ sp[(-56)+32]
 12882  010EC8  0EE9               	movlw	-23
 12883  010ECA  BEE3               	btfsc	plusw1,7,c
 12884  010ECC  D633               	goto	l10086
 12885  010ECE  0EE9               	movlw	-23
 12886  010ED0  50E3               	movf	plusw1,w,c
 12887  010ED2  E108               	bnz	u9800
 12888  010ED4  0EE8               	movlw	-24
 12889  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 12890  010EDC  0E4B               	movlw	75
 12891  010EDE  5E32               	subwf	btemp^0,f,c
 12892  010EE0  A0D8               	btfss	status,0,c
 12893  010EE2  D628               	goto	l10086
 12894  010EE4                     u9800:
 12895                           
 12896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 12897                           ;stkvar	_pp @ sp[(-56)+50]
 12898  010EE4  0EFA               	movlw	-6
 12899  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 12900  010EEC  0EFB               	movlw	-5
 12901  010EEE  50E3               	movf	plusw1,w,c
 12902  010EF0  1032               	iorwf	btemp^0,w,c
 12903  010EF2  B4D8               	btfsc	status,2,c
 12904  010EF4  A81F               	btfss	_flags^0,4,c
 12905  010EF6  D021               	goto	l10148
 12906                           
 12907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 12908                           ;stkvar	_n @ sp[(-56)+32]
 12909  010EF8  0EE8               	movlw	-24
 12910  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 12911  010F00  0EE9               	movlw	-23
 12912  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 12913  010F08  0EA3               	movlw	low _dbuf
 12914  010F0A  243C               	addwf	(btemp+10)^0,w,c
 12915  010F0C  6ED9               	movwf	fsr2l,c
 12916  010F0E  0E01               	movlw	high _dbuf
 12917  010F10  203D               	addwfc	(btemp+11)^0,w,c
 12918  010F12  6EDA               	movwf	fsr2h,c
 12919  010F14  0E2E               	movlw	46
 12920  010F16  6EDF               	movwf	indf2,c
 12921                           
 12922                           ;stkvar	_n @ sp[(-56)+32]
 12923  010F18  0EE8               	movlw	-24
 12924  010F1A  50E3               	movf	plusw1,w,c
 12925  010F1C  0F01               	addlw	1
 12926  010F1E  6E32               	movwf	btemp^0,c
 12927  010F20  0EE8               	movlw	-24
 12928  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 12929  010F28  6A32               	clrf	btemp^0,c
 12930  010F2A  0EE9               	movlw	-23
 12931  010F2C  50E3               	movf	plusw1,w,c
 12932  010F2E  2032               	addwfc	btemp^0,w,c
 12933  010F30  6E32               	movwf	btemp^0,c
 12934  010F32  0EE9               	movlw	-23
 12935  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 12936  010F3A                     l10148:
 12937                           
 12938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 12939                           ;stkvar	_n @ sp[(-56)+32]
 12940  010F3A  0EE8               	movlw	-24
 12941  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12942  010F42  0EE9               	movlw	-23
 12943  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 12944  010F4A  0EA3               	movlw	low _dbuf
 12945  010F4C  243C               	addwf	(btemp+10)^0,w,c
 12946  010F4E  6ED9               	movwf	fsr2l,c
 12947  010F50  0E01               	movlw	high _dbuf
 12948  010F52  203D               	addwfc	(btemp+11)^0,w,c
 12949  010F54  6EDA               	movwf	fsr2h,c
 12950  010F56  0E00               	movlw	0
 12951  010F58  6EDF               	movwf	indf2,c
 12952                           
 12953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 12954                           ;stkvar	_nmode @ sp[(-56)+55]
 12955  010F5A  0EFF               	movlw	-1
 12956  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 12957  010F62  0E65               	movlw	101
 12958  010F64  1832               	xorwf	btemp^0,w,c
 12959  010F66  A4D8               	btfss	status,2,c
 12960  010F68  EF16  F081         	goto	l9952
 12961                           
 12962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 12963  010F6C  0E4F               	movlw	79
 12964  010F6E  6E3C               	movwf	(btemp+10)^0,c
 12965  010F70  0E00               	movlw	0
 12966  010F72  6E3D               	movwf	(btemp+11)^0,c
 12967                           
 12968                           ;stkvar	_i @ sp[(-56)+36]
 12969  010F74  0EEC               	movlw	-20
 12970  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12971  010F7C  0EED               	movlw	-19
 12972  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12973                           
 12974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 12975                           ;stkvar	_i @ sp[(-56)+36]
 12976  010F84  0EEC               	movlw	-20
 12977  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 12978  010F8C  0EED               	movlw	-19
 12979  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12980  010F94  0EA3               	movlw	low _dbuf
 12981  010F96  243C               	addwf	(btemp+10)^0,w,c
 12982  010F98  6ED9               	movwf	fsr2l,c
 12983  010F9A  0E01               	movlw	high _dbuf
 12984  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 12985  010F9E  6EDA               	movwf	fsr2h,c
 12986  010FA0  0E00               	movlw	0
 12987  010FA2  6EDF               	movwf	indf2,c
 12988                           
 12989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 12990                           ;stkvar	_sign @ sp[(-56)+42]
 12991  010FA4  0EF2               	movlw	-14
 12992  010FA6  6AE3               	clrf	plusw1,c
 12993  010FA8  0EF3               	movlw	-13
 12994  010FAA  6AE3               	clrf	plusw1,c
 12995                           
 12996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 12997                           ;stkvar	_e @ sp[(-56)+34]
 12998  010FAC  0EEB               	movlw	-21
 12999  010FAE  AEE3               	btfss	plusw1,7,c
 13000  010FB0  D012               	goto	l10162
 13001                           
 13002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13003  010FB2  0E01               	movlw	1
 13004  010FB4  6E3C               	movwf	(btemp+10)^0,c
 13005  010FB6  0E00               	movlw	0
 13006  010FB8  6E3D               	movwf	(btemp+11)^0,c
 13007                           
 13008                           ;stkvar	_sign @ sp[(-56)+42]
 13009  010FBA  0EF2               	movlw	-14
 13010  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13011  010FC2  0EF3               	movlw	-13
 13012  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13013                           
 13014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13015                           ;stkvar	_e @ sp[(-56)+34]
 13016                           ;stkvar	_e @ sp[(-56)+34]
 13017  010FCA  0EEA               	movlw	-22
 13018  010FCC  6CE3               	negf	plusw1,c
 13019  010FCE  0EEB               	movlw	-21
 13020  010FD0  1EE3               	comf	plusw1,f,c
 13021  010FD2  B0D8               	btfsc	status,0,c
 13022  010FD4  2AE3               	incf	plusw1,f,c
 13023  010FD6                     l10162:
 13024                           
 13025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13026  010FD6  0E02               	movlw	2
 13027  010FD8  6E3C               	movwf	(btemp+10)^0,c
 13028  010FDA  0E00               	movlw	0
 13029  010FDC  6E3D               	movwf	(btemp+11)^0,c
 13030                           
 13031                           ;stkvar	_p @ sp[(-56)+40]
 13032  010FDE  0EF0               	movlw	-16
 13033  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13034  010FE6  0EF1               	movlw	-15
 13035  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13036                           
 13037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13038  010FEE  D051               	goto	l10174
 13039  010FF0                     l10164:
 13040                           
 13041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13042                           ;stkvar	_i @ sp[(-56)+36]
 13043  010FF0  50E1               	movf	fsr1l,w,c
 13044  010FF2  0FEC               	addlw	-20
 13045  010FF4  6ED9               	movwf	fsr2l,c
 13046  010FF6  50E2               	movf	fsr1h,w,c
 13047  010FF8  6EDA               	movwf	fsr2h,c
 13048  010FFA  0EFF               	movlw	255
 13049  010FFC  22DA               	addwfc	fsr2h,f,c
 13050  010FFE  06DE               	decf	postinc2,f,c
 13051  011000  0E00               	movlw	0
 13052  011002  5ADD               	subwfb	postdec2,f,c
 13053                           
 13054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13055                           ;stkvar	_i @ sp[(-56)+36]
 13056  011004  0EEC               	movlw	-20
 13057  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 13058  01100C  0EED               	movlw	-19
 13059  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13060  011014  0EA3               	movlw	low _dbuf
 13061  011016  243C               	addwf	(btemp+10)^0,w,c
 13062  011018  6ED9               	movwf	fsr2l,c
 13063  01101A  0E01               	movlw	high _dbuf
 13064  01101C  203D               	addwfc	(btemp+11)^0,w,c
 13065  01101E  6EDA               	movwf	fsr2h,c
 13066  011020  0E0A               	movlw	10
 13067  011022  6EE6               	movwf	postinc1,c
 13068  011024  0E00               	movlw	0
 13069  011026  6EE6               	movwf	postinc1,c
 13070                           
 13071                           ;stkvar	_e @ sp[(-58)+34]
 13072  011028  0EE8               	movlw	-24
 13073  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13074  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13075  011036  EC34  F0B6         	call	___awmod	;wreg free
 13076  01103A  5032               	movf	btemp^0,w,c
 13077  01103C  0F30               	addlw	48
 13078  01103E  6EDF               	movwf	indf2,c
 13079                           
 13080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13081  011040  0E0A               	movlw	10
 13082  011042  6EE6               	movwf	postinc1,c
 13083  011044  0E00               	movlw	0
 13084  011046  6EE6               	movwf	postinc1,c
 13085                           
 13086                           ;stkvar	_e @ sp[(-58)+34]
 13087  011048  0EE8               	movlw	-24
 13088  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13089  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13090  011056  ECC0  F0B3         	call	___awdiv	;wreg free
 13091                           
 13092                           ;stkvar	_e @ sp[(-56)+34]
 13093  01105A  0EEA               	movlw	-22
 13094  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 13095  011062  0EEB               	movlw	-21
 13096  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 13097                           
 13098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13099                           ;stkvar	_p @ sp[(-56)+40]
 13100  01106A  50E1               	movf	fsr1l,w,c
 13101  01106C  0FF0               	addlw	-16
 13102  01106E  6ED9               	movwf	fsr2l,c
 13103  011070  50E2               	movf	fsr1h,w,c
 13104  011072  6EDA               	movwf	fsr2h,c
 13105  011074  0EFF               	movlw	255
 13106  011076  22DA               	addwfc	fsr2h,f,c
 13107  011078  06DE               	decf	postinc2,f,c
 13108  01107A  0E00               	movlw	0
 13109  01107C  5ADD               	subwfb	postdec2,f,c
 13110                           
 13111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13112                           ;stkvar	_w @ sp[(-56)+38]
 13113  01107E  50E1               	movf	fsr1l,w,c
 13114  011080  0FEE               	addlw	-18
 13115  011082  6ED9               	movwf	fsr2l,c
 13116  011084  50E2               	movf	fsr1h,w,c
 13117  011086  6EDA               	movwf	fsr2h,c
 13118  011088  0EFF               	movlw	255
 13119  01108A  22DA               	addwfc	fsr2h,f,c
 13120  01108C  06DE               	decf	postinc2,f,c
 13121  01108E  0E00               	movlw	0
 13122  011090  5ADD               	subwfb	postdec2,f,c
 13123  011092                     l10174:
 13124                           
 13125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13126                           ;stkvar	_e @ sp[(-56)+34]
 13127  011092  0EEA               	movlw	-22
 13128  011094  006F FF8C  F032    	movff	plusw1,btemp
 13129  01109A  0EEB               	movlw	-21
 13130  01109C  50E3               	movf	plusw1,w,c
 13131  01109E  1032               	iorwf	btemp^0,w,c
 13132  0110A0  A4D8               	btfss	status,2,c
 13133  0110A2  D7A6               	goto	l10164
 13134                           
 13135                           ;stkvar	_p @ sp[(-56)+40]
 13136  0110A4  0EF1               	movlw	-15
 13137  0110A6  BEE3               	btfsc	plusw1,7,c
 13138  0110A8  D007               	goto	u9860
 13139  0110AA  0EF1               	movlw	-15
 13140  0110AC  50E3               	movf	plusw1,w,c
 13141  0110AE  E1A0               	bnz	l10164
 13142  0110B0  0EF0               	movlw	-16
 13143  0110B2  04E3               	decf	plusw1,w,c
 13144  0110B4  B0D8               	btfsc	status,0,c
 13145  0110B6  D79C               	goto	l10164
 13146  0110B8                     u9860:
 13147                           
 13148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13149                           ;stkvar	_i @ sp[(-56)+36]
 13150  0110B8  50E1               	movf	fsr1l,w,c
 13151  0110BA  0FEC               	addlw	-20
 13152  0110BC  6ED9               	movwf	fsr2l,c
 13153  0110BE  50E2               	movf	fsr1h,w,c
 13154  0110C0  6EDA               	movwf	fsr2h,c
 13155  0110C2  0EFF               	movlw	255
 13156  0110C4  22DA               	addwfc	fsr2h,f,c
 13157  0110C6  06DE               	decf	postinc2,f,c
 13158  0110C8  0E00               	movlw	0
 13159  0110CA  5ADD               	subwfb	postdec2,f,c
 13160                           
 13161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13162                           ;stkvar	_sign @ sp[(-56)+42]
 13163  0110CC  0EF2               	movlw	-14
 13164  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 13165  0110D4  0EF3               	movlw	-13
 13166  0110D6  50E3               	movf	plusw1,w,c
 13167  0110D8  1032               	iorwf	btemp^0,w,c
 13168  0110DA  A4D8               	btfss	status,2,c
 13169  0110DC  D002               	goto	l10184
 13170  0110DE  0E2B               	movlw	43
 13171  0110E0  D001               	goto	L11
 13172  0110E2                     l10184:
 13173  0110E2  0E2D               	movlw	45
 13174  0110E4                     L11:
 13175  0110E4  6E3C               	movwf	(btemp+10)^0,c
 13176  0110E6  0E00               	movlw	0
 13177  0110E8  6E3D               	movwf	(btemp+11)^0,c
 13178                           
 13179                           ;stkvar	_efgtoa$4645 @ sp[(-56)+4]
 13180  0110EA  0ECC               	movlw	-52
 13181  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13182  0110F2  0ECD               	movlw	-51
 13183  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13184                           
 13185                           ;stkvar	_efgtoa$4645 @ sp[(-56)+4]
 13186                           ;stkvar	_i @ sp[(-56)+36]
 13187  0110FA  0EEC               	movlw	-20
 13188  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 13189  011102  0EED               	movlw	-19
 13190  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 13191  01110A  0EA3               	movlw	low _dbuf
 13192  01110C  243C               	addwf	(btemp+10)^0,w,c
 13193  01110E  6ED9               	movwf	fsr2l,c
 13194  011110  0E01               	movlw	high _dbuf
 13195  011112  203D               	addwfc	(btemp+11)^0,w,c
 13196  011114  6EDA               	movwf	fsr2h,c
 13197  011116  0ECC               	movlw	-52
 13198  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13199                           
 13200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13201                           ;stkvar	_w @ sp[(-56)+38]
 13202  01111E  50E1               	movf	fsr1l,w,c
 13203  011120  0FEE               	addlw	-18
 13204  011122  6ED9               	movwf	fsr2l,c
 13205  011124  50E2               	movf	fsr1h,w,c
 13206  011126  6EDA               	movwf	fsr2h,c
 13207  011128  0EFF               	movlw	255
 13208  01112A  22DA               	addwfc	fsr2h,f,c
 13209  01112C  06DE               	decf	postinc2,f,c
 13210  01112E  0E00               	movlw	0
 13211  011130  5ADD               	subwfb	postdec2,f,c
 13212                           
 13213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13214                           ;stkvar	_i @ sp[(-56)+36]
 13215  011132  50E1               	movf	fsr1l,w,c
 13216  011134  0FEC               	addlw	-20
 13217  011136  6ED9               	movwf	fsr2l,c
 13218  011138  50E2               	movf	fsr1h,w,c
 13219  01113A  6EDA               	movwf	fsr2h,c
 13220  01113C  0EFF               	movlw	255
 13221  01113E  22DA               	addwfc	fsr2h,f,c
 13222  011140  06DE               	decf	postinc2,f,c
 13223  011142  0E00               	movlw	0
 13224  011144  5ADD               	subwfb	postdec2,f,c
 13225  011146  0EBF               	movlw	191
 13226  011148  6E3C               	movwf	(btemp+10)^0,c
 13227  01114A  0EFF               	movlw	255
 13228  01114C  6E3D               	movwf	(btemp+11)^0,c
 13229                           
 13230                           ;stkvar	_c @ sp[(-56)+-7]
 13231  01114E  0EC1               	movlw	-63
 13232  011150  50E3               	movf	plusw1,w,c
 13233  011152  6E3A               	movwf	(btemp+8)^0,c
 13234  011154  6A3B               	clrf	(btemp+9)^0,c
 13235  011156  503C               	movf	(btemp+10)^0,w,c
 13236  011158  263A               	addwf	(btemp+8)^0,f,c
 13237  01115A  503D               	movf	(btemp+11)^0,w,c
 13238  01115C  223B               	addwfc	(btemp+9)^0,f,c
 13239  01115E  503B               	movf	(btemp+9)^0,w,c
 13240  011160  E106               	bnz	u9880
 13241  011162  0E1A               	movlw	26
 13242  011164  5C3A               	subwf	(btemp+8)^0,w,c
 13243  011166  B0D8               	btfsc	status,0,c
 13244  011168  D002               	goto	u9880
 13245  01116A  0E01               	movlw	1
 13246  01116C  D001               	goto	u9890
 13247  01116E                     u9880:
 13248  01116E  0E00               	movlw	0
 13249  011170                     u9890:
 13250  011170  6E3C               	movwf	(btemp+10)^0,c
 13251  011172  6A3D               	clrf	(btemp+11)^0,c
 13252                           
 13253                           ;stkvar	_efgtoa$4647 @ sp[(-56)+0]
 13254  011174  0EC8               	movlw	-56
 13255  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13256  01117C  0EC9               	movlw	-55
 13257  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13258                           
 13259                           ;stkvar	_efgtoa$4647 @ sp[(-56)+0]
 13260  011184  0EC8               	movlw	-56
 13261  011186  006F FF8C  F032    	movff	plusw1,btemp
 13262  01118C  0EC9               	movlw	-55
 13263  01118E  50E3               	movf	plusw1,w,c
 13264  011190  1032               	iorwf	btemp^0,w,c
 13265  011192  A4D8               	btfss	status,2,c
 13266  011194  D002               	goto	l10200
 13267  011196  0E65               	movlw	101
 13268  011198  D001               	goto	L12
 13269  01119A                     l10200:
 13270  01119A  0E45               	movlw	69
 13271  01119C                     L12:
 13272  01119C  6E3C               	movwf	(btemp+10)^0,c
 13273  01119E  0E00               	movlw	0
 13274  0111A0  6E3D               	movwf	(btemp+11)^0,c
 13275                           
 13276                           ;stkvar	_efgtoa$4646 @ sp[(-56)+2]
 13277  0111A2  0ECA               	movlw	-54
 13278  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13279  0111AA  0ECB               	movlw	-53
 13280  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13281                           
 13282                           ;stkvar	_efgtoa$4646 @ sp[(-56)+2]
 13283                           ;stkvar	_i @ sp[(-56)+36]
 13284  0111B2  0EEC               	movlw	-20
 13285  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13286  0111BA  0EED               	movlw	-19
 13287  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13288  0111C2  0EA3               	movlw	low _dbuf
 13289  0111C4  243C               	addwf	(btemp+10)^0,w,c
 13290  0111C6  6ED9               	movwf	fsr2l,c
 13291  0111C8  0E01               	movlw	high _dbuf
 13292  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 13293  0111CC  6EDA               	movwf	fsr2h,c
 13294  0111CE  0ECA               	movlw	-54
 13295  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13296                           
 13297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13298                           ;stkvar	_w @ sp[(-56)+38]
 13299  0111D6  50E1               	movf	fsr1l,w,c
 13300  0111D8  0FEE               	addlw	-18
 13301  0111DA  6ED9               	movwf	fsr2l,c
 13302  0111DC  50E2               	movf	fsr1h,w,c
 13303  0111DE  6EDA               	movwf	fsr2h,c
 13304  0111E0  0EFF               	movlw	255
 13305  0111E2  22DA               	addwfc	fsr2h,f,c
 13306  0111E4  06DE               	decf	postinc2,f,c
 13307  0111E6  0E00               	movlw	0
 13308  0111E8  5ADD               	subwfb	postdec2,f,c
 13309                           
 13310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13311                           ;stkvar	_i @ sp[(-56)+36]
 13312  0111EA  0EEC               	movlw	-20
 13313  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 13314  0111F2  0EED               	movlw	-19
 13315  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 13316  0111FA  0EA3               	movlw	low _dbuf
 13317  0111FC  243C               	addwf	(btemp+10)^0,w,c
 13318  0111FE  6E3A               	movwf	(btemp+8)^0,c
 13319  011200  0E01               	movlw	high _dbuf
 13320  011202  203D               	addwfc	(btemp+11)^0,w,c
 13321  011204  6E3B               	movwf	(btemp+9)^0,c
 13322  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 13323  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 13324                           
 13325                           ;stkvar	_n @ sp[(-58)+32]
 13326  011212  0EA3               	movlw	low _dbuf
 13327  011214  6E3C               	movwf	(btemp+10)^0,c
 13328  011216  0E01               	movlw	high _dbuf
 13329  011218  6E3D               	movwf	(btemp+11)^0,c
 13330  01121A  0EE6               	movlw	-26
 13331  01121C  50E3               	movf	plusw1,w,c
 13332  01121E  263C               	addwf	(btemp+10)^0,f,c
 13333  011220  0EE7               	movlw	-25
 13334  011222  50E3               	movf	plusw1,w,c
 13335  011224  223D               	addwfc	(btemp+11)^0,f,c
 13336  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 13337  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 13338  011232  ECCB  F0B9         	call	_strcpy	;wreg free
 13339  011236  EF16  F081         	goto	l9952
 13340  01123A                     l1933:
 13341                           
 13342                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13343  01123A  0EC1               	movlw	193
 13344  01123C  26E1               	addwf	fsr1l,f,c
 13345  01123E  0EFF               	movlw	255
 13346  011240  22E2               	addwfc	fsr1h,f,c
 13347  011242  0012               	return		;funcret
 13348  011244                     __end_of_efgtoa:
 13349                           	opt callstack 0
 13350                           
 13351 ;; *************** function _tolower *****************
 13352 ;; Defined at:
 13353 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13354 ;; Parameters:    Size  Location     Type
 13355 ;;  c               2  [STACK] int 
 13356 ;; Auto vars:     Size  Location     Type
 13357 ;;		None
 13358 ;; Return value:  Size  Location     Type
 13359 ;;                  2  [STACK] int 
 13360 ;; Registers used:
 13361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13362 ;; Tracked objects:
 13363 ;;		On entry : 0/1
 13364 ;;		On exit  : 0/0
 13365 ;;		Unchanged: 0/0
 13366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13371 ;;Total ram usage:        0 bytes
 13372 ;; Hardware stack levels used:    1
 13373 ;; Hardware stack levels required when called:    7
 13374 ;; This function calls:
 13375 ;;		_isupper
 13376 ;; This function is called by:
 13377 ;;		_efgtoa
 13378 ;;		_vfpfcnvrt
 13379 ;; This function uses a reentrant model
 13380 ;;
 13381                           
 13382                           	psect	text48
 13383  017D38                     __ptext48:
 13384                           	opt callstack 0
 13385  017D38                     _tolower:
 13386                           	opt callstack 0
 13387                           
 13388                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13389  017D38  52E6               	movf	postinc1,f,c
 13390  017D3A  52E6               	movf	postinc1,f,c
 13391                           
 13392                           ;stkvar	_c @ sp[(-2)+-2]
 13393                           
 13394                           ;incstack = 0
 13395  017D3C  0EFC               	movlw	-4
 13396  017D3E  50E3               	movf	plusw1,w,c
 13397  017D40  0FBF               	addlw	191
 13398  017D42  6E3C               	movwf	(btemp+10)^0,c
 13399  017D44  0EFD               	movlw	-3
 13400  017D46  006F FF8C  F03D    	movff	plusw1,btemp+11
 13401  017D4C  0EFF               	movlw	255
 13402  017D4E  223D               	addwfc	(btemp+11)^0,f,c
 13403  017D50  503D               	movf	(btemp+11)^0,w,c
 13404  017D52  E106               	bnz	u5240
 13405  017D54  0E1A               	movlw	26
 13406  017D56  5C3C               	subwf	(btemp+10)^0,w,c
 13407  017D58  B0D8               	btfsc	status,0,c
 13408  017D5A  D002               	goto	u5240
 13409  017D5C  0E01               	movlw	1
 13410  017D5E  D001               	goto	u5250
 13411  017D60                     u5240:
 13412  017D60  0E00               	movlw	0
 13413  017D62                     u5250:
 13414  017D62  6E3C               	movwf	(btemp+10)^0,c
 13415  017D64  6A3D               	clrf	(btemp+11)^0,c
 13416                           
 13417                           ;stkvar	_tolower$5313 @ sp[(-2)+0]
 13418  017D66  0EFE               	movlw	-2
 13419  017D68  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13420  017D6E  0EFF               	movlw	-1
 13421  017D70  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13422                           
 13423                           ;stkvar	_tolower$5313 @ sp[(-2)+0]
 13424  017D76  0EFE               	movlw	-2
 13425  017D78  006F FF8C  F032    	movff	plusw1,btemp
 13426  017D7E  0EFF               	movlw	-1
 13427  017D80  50E3               	movf	plusw1,w,c
 13428  017D82  1032               	iorwf	btemp^0,w,c
 13429  017D84  B4D8               	btfsc	status,2,c
 13430  017D86  D00D               	goto	l6716
 13431                           
 13432                           ;stkvar	_c @ sp[(-2)+-2]
 13433  017D88  0EFC               	movlw	-4
 13434  017D8A  006F FF8C  F032    	movff	plusw1,btemp
 13435  017D90  0EFD               	movlw	-3
 13436  017D92  006F FF8C  F033    	movff	plusw1,btemp+1
 13437  017D98  0E20               	movlw	32
 13438  017D9A  1232               	iorwf	btemp^0,f,c
 13439  017D9C  0E00               	movlw	0
 13440  017D9E  1233               	iorwf	(btemp+1)^0,f,c
 13441  017DA0  D008               	goto	l2956
 13442  017DA2                     l6716:
 13443                           
 13444                           ;stkvar	_c @ sp[(-2)+-2]
 13445  017DA2  0EFC               	movlw	-4
 13446  017DA4  006F FF8C  F032    	movff	plusw1,btemp
 13447  017DAA  0EFD               	movlw	-3
 13448  017DAC  006F FF8C  F033    	movff	plusw1,btemp+1
 13449  017DB2                     l2956:
 13450                           
 13451                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13452  017DB2  52E5               	movf	postdec1,f,c
 13453  017DB4  52E5               	movf	postdec1,f,c
 13454  017DB6  52E5               	movf	postdec1,f,c
 13455  017DB8  52E5               	movf	postdec1,f,c
 13456  017DBA  0012               	return		;funcret
 13457  017DBC                     __end_of_tolower:
 13458                           	opt callstack 0
 13459                           
 13460 ;; *************** function _isupper *****************
 13461 ;; Defined at:
 13462 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13463 ;; Parameters:    Size  Location     Type
 13464 ;;  c               2  [STACK] int 
 13465 ;; Auto vars:     Size  Location     Type
 13466 ;;		None
 13467 ;; Return value:  Size  Location     Type
 13468 ;;                  2  [STACK] int 
 13469 ;; Registers used:
 13470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13471 ;; Tracked objects:
 13472 ;;		On entry : 0/0
 13473 ;;		On exit  : 0/0
 13474 ;;		Unchanged: 0/0
 13475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13480 ;;Total ram usage:        0 bytes
 13481 ;; Hardware stack levels used:    1
 13482 ;; Hardware stack levels required when called:    6
 13483 ;; This function calls:
 13484 ;;		Nothing
 13485 ;; This function is called by:
 13486 ;;		_efgtoa
 13487 ;;		_xtoa
 13488 ;;		_vfpfcnvrt
 13489 ;;		_tolower
 13490 ;; This function uses a reentrant model
 13491 ;;
 13492                           
 13493                           	psect	text49
 13494  0187DE                     __ptext49:
 13495                           	opt callstack 0
 13496  0187DE                     _isupper:
 13497                           	opt callstack 17
 13498                           
 13499                           ;stkvar	_c @ sp[(0)+-2]
 13500                           
 13501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13502                           ;incstack = 0
 13503  0187DE  0EFE               	movlw	-2
 13504  0187E0  50E3               	movf	plusw1,w,c
 13505  0187E2  0FBF               	addlw	191
 13506  0187E4  6E3C               	movwf	(btemp+10)^0,c
 13507  0187E6  0EFF               	movlw	-1
 13508  0187E8  006F FF8C  F03D    	movff	plusw1,btemp+11
 13509  0187EE  0EFF               	movlw	255
 13510  0187F0  223D               	addwfc	(btemp+11)^0,f,c
 13511  0187F2  503D               	movf	(btemp+11)^0,w,c
 13512  0187F4  E106               	bnz	u4640
 13513  0187F6  0E1A               	movlw	26
 13514  0187F8  5C3C               	subwf	(btemp+10)^0,w,c
 13515  0187FA  B0D8               	btfsc	status,0,c
 13516  0187FC  D002               	goto	u4640
 13517  0187FE  0E01               	movlw	1
 13518  018800  D001               	goto	u4650
 13519  018802                     u4640:
 13520  018802  0E00               	movlw	0
 13521  018804                     u4650:
 13522  018804  6E32               	movwf	btemp^0,c
 13523  018806  6A33               	clrf	(btemp+1)^0,c
 13524                           
 13525                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13526  018808  52E5               	movf	postdec1,f,c
 13527  01880A  52E5               	movf	postdec1,f,c
 13528  01880C  0012               	return		;funcret
 13529  01880E                     __end_of_isupper:
 13530                           	opt callstack 0
 13531                           
 13532 ;; *************** function _strcpy *****************
 13533 ;; Defined at:
 13534 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13535 ;; Parameters:    Size  Location     Type
 13536 ;;  dest            2  [STACK] PTR unsigned char 
 13537 ;;		 -> dbuf(80), 
 13538 ;;  src             2  [STACK] PTR const unsigned char 
 13539 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13540 ;;		 -> dbuf(80), 
 13541 ;; Auto vars:     Size  Location     Type
 13542 ;;  d               2  [STACK] PTR unsigned char 
 13543 ;;		 -> dbuf(80), 
 13544 ;;  s               2  [STACK] PTR const unsigned char 
 13545 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13546 ;;		 -> dbuf(80), 
 13547 ;; Return value:  Size  Location     Type
 13548 ;;                  2  [STACK] PTR unsigned char 
 13549 ;; Registers used:
 13550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13551 ;; Tracked objects:
 13552 ;;		On entry : 0/1
 13553 ;;		On exit  : 0/0
 13554 ;;		Unchanged: 0/0
 13555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13560 ;;Total ram usage:        0 bytes
 13561 ;; Hardware stack levels used:    1
 13562 ;; Hardware stack levels required when called:    6
 13563 ;; This function calls:
 13564 ;;		Nothing
 13565 ;; This function is called by:
 13566 ;;		_efgtoa
 13567 ;; This function uses a reentrant model
 13568 ;;
 13569                           
 13570                           	psect	text50
 13571  017396                     __ptext50:
 13572                           	opt callstack 0
 13573  017396                     _strcpy:
 13574                           	opt callstack 0
 13575                           
 13576                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13577  017396  52E6               	movf	postinc1,f,c
 13578  017398  52E6               	movf	postinc1,f,c
 13579  01739A  52E6               	movf	postinc1,f,c
 13580  01739C  52E6               	movf	postinc1,f,c
 13581                           
 13582                           ;stkvar	_src @ sp[(-4)+-4]
 13583                           
 13584                           ;incstack = 0
 13585  01739E  0EF8               	movlw	-8
 13586  0173A0  006F FF8C  F03C    	movff	plusw1,btemp+10
 13587  0173A6  0EF9               	movlw	-7
 13588  0173A8  006F FF8C  F03D    	movff	plusw1,btemp+11
 13589                           
 13590                           ;stkvar	_s @ sp[(-4)+2]
 13591  0173AE  0EFF               	movlw	-1
 13592  0173B0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13593  0173B6  0EFE               	movlw	-2
 13594  0173B8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13595                           
 13596                           ;stkvar	_dest @ sp[(-4)+-2]
 13597  0173BE  0EFA               	movlw	-6
 13598  0173C0  006F FF8C  F03C    	movff	plusw1,btemp+10
 13599  0173C6  0EFB               	movlw	-5
 13600  0173C8  006F FF8C  F03D    	movff	plusw1,btemp+11
 13601                           
 13602                           ;stkvar	_d @ sp[(-4)+0]
 13603  0173CE  0EFD               	movlw	-3
 13604  0173D0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13605  0173D6  0EFC               	movlw	-4
 13606  0173D8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13607  0173DE                     l9826:
 13608                           
 13609                           ;stkvar	_s @ sp[(-4)+2]
 13610  0173DE  50E1               	movf	fsr1l,w,c
 13611  0173E0  0FFE               	addlw	-2
 13612  0173E2  6ED9               	movwf	fsr2l,c
 13613  0173E4  50E2               	movf	fsr1h,w,c
 13614  0173E6  6EDA               	movwf	fsr2h,c
 13615  0173E8  0EFF               	movlw	255
 13616  0173EA  22DA               	addwfc	fsr2h,f,c
 13617  0173EC  006F FF7C  F03C    	movff	indf2,btemp+10
 13618  0173F2  0E01               	movlw	1
 13619  0173F4  26DE               	addwf	postinc2,f,c
 13620  0173F6  006F FF7C  F03D    	movff	indf2,btemp+11
 13621  0173FC  0E00               	movlw	0
 13622  0173FE  22DD               	addwfc	postdec2,f,c
 13623  017400  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 13624  017406  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 13625  01740C  0E00               	movlw	low (__mediumconst shr (0+16))
 13626  01740E  6EF8               	movwf	tblptru,c
 13627                           
 13628                           ;stkvar	_d @ sp[(-4)+0]
 13629  017410  50E1               	movf	fsr1l,w,c
 13630  017412  0FFC               	addlw	-4
 13631  017414  6ED9               	movwf	fsr2l,c
 13632  017416  50E2               	movf	fsr1h,w,c
 13633  017418  6EDA               	movwf	fsr2h,c
 13634  01741A  0EFF               	movlw	255
 13635  01741C  22DA               	addwfc	fsr2h,f,c
 13636  01741E  006F FF7C  F03C    	movff	indf2,btemp+10
 13637  017424  0E01               	movlw	1
 13638  017426  26DE               	addwf	postinc2,f,c
 13639  017428  006F FF7C  F03D    	movff	indf2,btemp+11
 13640  01742E  0E00               	movlw	0
 13641  017430  22DD               	addwfc	postdec2,f,c
 13642  017432  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 13643  017438  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 13644  01743E  0E1F               	movlw	(high __ramtop+-1)
 13645  017440  64F7               	cpfsgt	tblptrh,c
 13646  017442  D003               	bra	u9197
 13647  017444  0008               	tblrd		*
 13648  017446  50F5               	movf	tablat,w,c
 13649  017448  D007               	bra	u9190
 13650  01744A                     u9197:
 13651  01744A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13652  017450  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13653  017456  50EF               	movf	indf0,w,c
 13654  017458                     u9190:
 13655  017458  6EDF               	movwf	indf2,c
 13656  01745A  50DF               	movf	indf2,w,c
 13657  01745C  A4D8               	btfss	status,2,c
 13658  01745E  D7BF               	goto	l9826
 13659                           
 13660                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13661  017460  0EF8               	movlw	248
 13662  017462  26E1               	addwf	fsr1l,f,c
 13663  017464  0EFF               	movlw	255
 13664  017466  22E2               	addwfc	fsr1h,f,c
 13665  017468  0012               	return		;funcret
 13666  01746A                     __end_of_strcpy:
 13667                           	opt callstack 0
 13668                           
 13669 ;; *************** function _floorf *****************
 13670 ;; Defined at:
 13671 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13672 ;; Parameters:    Size  Location     Type
 13673 ;;  x               4  [STACK] float 
 13674 ;; Auto vars:     Size  Location     Type
 13675 ;;  u               4  [STACK] struct .
 13676 ;;  m               4  [STACK] unsigned long 
 13677 ;;  e               2  [STACK] int 
 13678 ;; Return value:  Size  Location     Type
 13679 ;;                  4  [STACK] float 
 13680 ;; Registers used:
 13681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13682 ;; Tracked objects:
 13683 ;;		On entry : 0/1
 13684 ;;		On exit  : 0/0
 13685 ;;		Unchanged: 0/0
 13686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13691 ;;Total ram usage:        0 bytes
 13692 ;; Hardware stack levels used:    1
 13693 ;; Hardware stack levels required when called:    6
 13694 ;; This function calls:
 13695 ;;		Nothing
 13696 ;; This function is called by:
 13697 ;;		_efgtoa
 13698 ;; This function uses a reentrant model
 13699 ;;
 13700                           
 13701                           	psect	text51
 13702  014852                     __ptext51:
 13703                           	opt callstack 0
 13704  014852                     _floorf:
 13705                           	opt callstack 0
 13706                           
 13707                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13708  014852  0E0A               	movlw	10
 13709  014854  26E1               	addwf	fsr1l,f,c
 13710  014856  0E00               	movlw	0
 13711  014858  22E2               	addwfc	fsr1h,f,c
 13712                           
 13713                           ;incstack = 0
 13714  01485A  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 13715  014860  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 13716  014866  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 13717  01486C  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 13718                           
 13719                           ;stkvar	_u @ sp[(-10)+0]
 13720  014872  0EF6               	movlw	-10
 13721  014874  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13722  01487A  0EF7               	movlw	-9
 13723  01487C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13724  014882  0EF8               	movlw	-8
 13725  014884  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13726  01488A  0EF9               	movlw	-7
 13727  01488C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13728                           
 13729                           ;stkvar	_x @ sp[(-10)+-4]
 13730  014892  0EF2               	movlw	-14
 13731  014894  006F FF8C  F03A    	movff	plusw1,btemp+8
 13732  01489A  0EF3               	movlw	-13
 13733  01489C  006F FF8C  F03B    	movff	plusw1,btemp+9
 13734  0148A2  0EF4               	movlw	-12
 13735  0148A4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13736  0148AA  0EF5               	movlw	-11
 13737  0148AC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13738                           
 13739                           ;stkvar	_u @ sp[(-10)+0]
 13740  0148B2  0EF6               	movlw	-10
 13741  0148B4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13742  0148BA  0EF7               	movlw	-9
 13743  0148BC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13744  0148C2  0EF8               	movlw	-8
 13745  0148C4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13746  0148CA  0EF9               	movlw	-7
 13747  0148CC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13748  0148D2  0E81               	movlw	129
 13749  0148D4  6E3C               	movwf	(btemp+10)^0,c
 13750  0148D6  0EFF               	movlw	255
 13751  0148D8  6E3D               	movwf	(btemp+11)^0,c
 13752                           
 13753                           ;stkvar	_u @ sp[(-10)+0]
 13754  0148DA  0EF6               	movlw	-10
 13755  0148DC  006F FF8C  F036    	movff	plusw1,btemp+4
 13756  0148E2  0EF7               	movlw	-9
 13757  0148E4  006F FF8C  F037    	movff	plusw1,btemp+5
 13758  0148EA  0EF8               	movlw	-8
 13759  0148EC  006F FF8C  F038    	movff	plusw1,btemp+6
 13760  0148F2  0EF9               	movlw	-7
 13761  0148F4  006F FF8C  F039    	movff	plusw1,btemp+7
 13762  0148FA  0E18               	movlw	24
 13763  0148FC  D005               	goto	u5270
 13764  0148FE                     u5275:
 13765  0148FE  90D8               	bcf	status,0,c
 13766  014900  3239               	rrcf	(btemp+7)^0,f,c
 13767  014902  3238               	rrcf	(btemp+6)^0,f,c
 13768  014904  3237               	rrcf	(btemp+5)^0,f,c
 13769  014906  3236               	rrcf	(btemp+4)^0,f,c
 13770  014908                     u5270:
 13771  014908  2EE8               	decfsz	wreg,f,c
 13772  01490A  D7F9               	goto	u5275
 13773  01490C  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 13774  014912  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 13775  014918  0EFF               	movlw	255
 13776  01491A  163A               	andwf	(btemp+8)^0,f,c
 13777  01491C  0E00               	movlw	0
 13778  01491E  163B               	andwf	(btemp+9)^0,f,c
 13779  014920  503C               	movf	(btemp+10)^0,w,c
 13780  014922  263A               	addwf	(btemp+8)^0,f,c
 13781  014924  503D               	movf	(btemp+11)^0,w,c
 13782  014926  223B               	addwfc	(btemp+9)^0,f,c
 13783                           
 13784                           ;stkvar	_e @ sp[(-10)+8]
 13785  014928  0EFE               	movlw	-2
 13786  01492A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13787  014930  0EFF               	movlw	-1
 13788  014932  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13789                           
 13790                           ;stkvar	_e @ sp[(-10)+8]
 13791  014938  0EFF               	movlw	-1
 13792  01493A  BEE3               	btfsc	plusw1,7,c
 13793  01493C  D019               	goto	l6730
 13794  01493E  0EFF               	movlw	-1
 13795  014940  50E3               	movf	plusw1,w,c
 13796  014942  E108               	bnz	u5280
 13797  014944  0EFE               	movlw	-2
 13798  014946  006F FF8C  F032    	movff	plusw1,btemp
 13799  01494C  0E17               	movlw	23
 13800  01494E  5E32               	subwf	btemp^0,f,c
 13801  014950  A0D8               	btfss	status,0,c
 13802  014952  D00E               	goto	l6730
 13803  014954                     u5280:
 13804                           
 13805                           ;stkvar	_x @ sp[(-10)+-4]
 13806  014954  0EF2               	movlw	-14
 13807  014956  006F FF8C  F032    	movff	plusw1,btemp
 13808  01495C  0EF3               	movlw	-13
 13809  01495E  006F FF8C  F033    	movff	plusw1,btemp+1
 13810  014964  0EF4               	movlw	-12
 13811  014966  006F FF8C  F034    	movff	plusw1,btemp+2
 13812  01496C  0EF5               	movlw	-11
 13813  01496E  D11F               	goto	L13
 13814  014970                     l6730:
 13815                           
 13816                           ;stkvar	_e @ sp[(-10)+8]
 13817  014970  0EFF               	movlw	-1
 13818  014972  BEE3               	btfsc	plusw1,7,c
 13819  014974  D0B4               	goto	l6746
 13820                           
 13821                           ;stkvar	_e @ sp[(-10)+8]
 13822  014976  0EFE               	movlw	-2
 13823  014978  006F FF8C  F03D    	movff	plusw1,btemp+11
 13824  01497E  0EFF               	movlw	255
 13825  014980  6E36               	movwf	(btemp+4)^0,c
 13826  014982  0EFF               	movlw	255
 13827  014984  6E37               	movwf	(btemp+5)^0,c
 13828  014986  0E7F               	movlw	127
 13829  014988  6E38               	movwf	(btemp+6)^0,c
 13830  01498A  0E00               	movlw	0
 13831  01498C  6E39               	movwf	(btemp+7)^0,c
 13832  01498E                     u5305:
 13833  01498E  663D               	tstfsz	(btemp+11)^0,c
 13834  014990  D001               	goto	u5306
 13835  014992  D007               	goto	u5307
 13836  014994                     u5306:
 13837  014994  3439               	rlcf	(btemp+7)^0,w,c
 13838  014996  3239               	rrcf	(btemp+7)^0,f,c
 13839  014998  3238               	rrcf	(btemp+6)^0,f,c
 13840  01499A  3237               	rrcf	(btemp+5)^0,f,c
 13841  01499C  3236               	rrcf	(btemp+4)^0,f,c
 13842  01499E  2E3D               	decfsz	(btemp+11)^0,f,c
 13843  0149A0  D7F6               	goto	u5305
 13844  0149A2                     u5307:
 13845                           
 13846                           ;stkvar	_m @ sp[(-10)+4]
 13847  0149A2  0EFA               	movlw	-6
 13848  0149A4  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 13849  0149AA  0EFB               	movlw	-5
 13850  0149AC  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 13851  0149B2  0EFC               	movlw	-4
 13852  0149B4  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13853  0149BA  0EFD               	movlw	-3
 13854  0149BC  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13855                           
 13856                           ;stkvar	_m @ sp[(-10)+4]
 13857                           ;stkvar	_u @ sp[(-10)+0]
 13858  0149C2  0EF6               	movlw	-10
 13859  0149C4  006F FF8C  F03A    	movff	plusw1,btemp+8
 13860  0149CA  0EF7               	movlw	-9
 13861  0149CC  006F FF8C  F03B    	movff	plusw1,btemp+9
 13862  0149D2  0EF8               	movlw	-8
 13863  0149D4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13864  0149DA  0EF9               	movlw	-7
 13865  0149DC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13866  0149E2  0EFA               	movlw	-6
 13867  0149E4  50E3               	movf	plusw1,w,c
 13868  0149E6  163A               	andwf	(btemp+8)^0,f,c
 13869  0149E8  0EFB               	movlw	-5
 13870  0149EA  50E3               	movf	plusw1,w,c
 13871  0149EC  163B               	andwf	(btemp+9)^0,f,c
 13872  0149EE  0EFC               	movlw	-4
 13873  0149F0  50E3               	movf	plusw1,w,c
 13874  0149F2  163C               	andwf	(btemp+10)^0,f,c
 13875  0149F4  0EFD               	movlw	-3
 13876  0149F6  50E3               	movf	plusw1,w,c
 13877  0149F8  163D               	andwf	(btemp+11)^0,f,c
 13878  0149FA  503A               	movf	(btemp+8)^0,w,c
 13879  0149FC  103B               	iorwf	(btemp+9)^0,w,c
 13880  0149FE  103C               	iorwf	(btemp+10)^0,w,c
 13881  014A00  103D               	iorwf	(btemp+11)^0,w,c
 13882  014A02  B4D8               	btfsc	status,2,c
 13883  014A04  D7A7               	goto	u5280
 13884                           
 13885                           ;stkvar	_u @ sp[(-10)+0]
 13886  014A06  0EF6               	movlw	-10
 13887  014A08  006F FF8C  F03A    	movff	plusw1,btemp+8
 13888  014A0E  0EF7               	movlw	-9
 13889  014A10  006F FF8C  F03B    	movff	plusw1,btemp+9
 13890  014A16  0EF8               	movlw	-8
 13891  014A18  006F FF8C  F03C    	movff	plusw1,btemp+10
 13892  014A1E  0EF9               	movlw	-7
 13893  014A20  006F FF8C  F03D    	movff	plusw1,btemp+11
 13894  014A26  0E20               	movlw	32
 13895  014A28  D005               	goto	u5320
 13896  014A2A                     u5325:
 13897  014A2A  90D8               	bcf	status,0,c
 13898  014A2C  323D               	rrcf	(btemp+11)^0,f,c
 13899  014A2E  323C               	rrcf	(btemp+10)^0,f,c
 13900  014A30  323B               	rrcf	(btemp+9)^0,f,c
 13901  014A32  323A               	rrcf	(btemp+8)^0,f,c
 13902  014A34                     u5320:
 13903  014A34  2EE8               	decfsz	wreg,f,c
 13904  014A36  D7F9               	goto	u5325
 13905  014A38  503A               	movf	(btemp+8)^0,w,c
 13906  014A3A  B4D8               	btfsc	status,2,c
 13907  014A3C  D028               	goto	l6744
 13908                           
 13909                           ;stkvar	_m @ sp[(-10)+4]
 13910                           ;stkvar	_u @ sp[(-10)+0]
 13911  014A3E  0EF6               	movlw	-10
 13912  014A40  50E3               	movf	plusw1,w,c
 13913  014A42  6E32               	movwf	btemp^0,c
 13914  014A44  0EFA               	movlw	-6
 13915  014A46  50E3               	movf	plusw1,w,c
 13916  014A48  2632               	addwf	btemp^0,f,c
 13917  014A4A  0EF6               	movlw	-10
 13918  014A4C  0060  F0CB  FFE3   	movff	btemp,plusw1
 13919  014A52  0EF7               	movlw	-9
 13920  014A54  50E3               	movf	plusw1,w,c
 13921  014A56  6E32               	movwf	btemp^0,c
 13922  014A58  0EFB               	movlw	-5
 13923  014A5A  50E3               	movf	plusw1,w,c
 13924  014A5C  2232               	addwfc	btemp^0,f,c
 13925  014A5E  0EF7               	movlw	-9
 13926  014A60  0060  F0CB  FFE3   	movff	btemp,plusw1
 13927  014A66  0EF8               	movlw	-8
 13928  014A68  50E3               	movf	plusw1,w,c
 13929  014A6A  6E32               	movwf	btemp^0,c
 13930  014A6C  0EFC               	movlw	-4
 13931  014A6E  50E3               	movf	plusw1,w,c
 13932  014A70  2232               	addwfc	btemp^0,f,c
 13933  014A72  0EF8               	movlw	-8
 13934  014A74  0060  F0CB  FFE3   	movff	btemp,plusw1
 13935  014A7A  0EF9               	movlw	-7
 13936  014A7C  50E3               	movf	plusw1,w,c
 13937  014A7E  6E32               	movwf	btemp^0,c
 13938  014A80  0EFD               	movlw	-3
 13939  014A82  50E3               	movf	plusw1,w,c
 13940  014A84  2232               	addwfc	btemp^0,f,c
 13941  014A86  0EF9               	movlw	-7
 13942  014A88  0060  F0CB  FFE3   	movff	btemp,plusw1
 13943  014A8E                     l6744:
 13944                           
 13945                           ;stkvar	_m @ sp[(-10)+4]
 13946  014A8E  0EFA               	movlw	-6
 13947  014A90  006F FF8C  F03A    	movff	plusw1,btemp+8
 13948  014A96  0EFB               	movlw	-5
 13949  014A98  006F FF8C  F03B    	movff	plusw1,btemp+9
 13950  014A9E  0EFC               	movlw	-4
 13951  014AA0  006F FF8C  F03C    	movff	plusw1,btemp+10
 13952  014AA6  0EFD               	movlw	-3
 13953  014AA8  006F FF8C  F03D    	movff	plusw1,btemp+11
 13954  014AAE  1C3A               	comf	(btemp+8)^0,w,c
 13955  014AB0  6E36               	movwf	(btemp+4)^0,c
 13956  014AB2  1C3B               	comf	(btemp+9)^0,w,c
 13957  014AB4  6E37               	movwf	(btemp+5)^0,c
 13958  014AB6  1C3C               	comf	(btemp+10)^0,w,c
 13959  014AB8  6E38               	movwf	(btemp+6)^0,c
 13960  014ABA  1C3D               	comf	(btemp+11)^0,w,c
 13961  014ABC  6E39               	movwf	(btemp+7)^0,c
 13962                           
 13963                           ;stkvar	_u @ sp[(-10)+0]
 13964  014ABE  50E1               	movf	fsr1l,w,c
 13965  014AC0  0FF6               	addlw	-10
 13966  014AC2  6ED9               	movwf	fsr2l,c
 13967  014AC4  50E2               	movf	fsr1h,w,c
 13968  014AC6  6EDA               	movwf	fsr2h,c
 13969  014AC8  0EFF               	movlw	255
 13970  014ACA  22DA               	addwfc	fsr2h,f,c
 13971  014ACC  5036               	movf	(btemp+4)^0,w,c
 13972  014ACE  16DE               	andwf	postinc2,f,c
 13973  014AD0  5037               	movf	(btemp+5)^0,w,c
 13974  014AD2  16DE               	andwf	postinc2,f,c
 13975  014AD4  5038               	movf	(btemp+6)^0,w,c
 13976  014AD6  16DE               	andwf	postinc2,f,c
 13977  014AD8  5039               	movf	(btemp+7)^0,w,c
 13978  014ADA  16DE               	andwf	postinc2,f,c
 13979  014ADC  D05B               	goto	l6754
 13980  014ADE                     l6746:
 13981                           
 13982                           ;stkvar	_u @ sp[(-10)+0]
 13983  014ADE  0EF6               	movlw	-10
 13984  014AE0  006F FF8C  F03A    	movff	plusw1,btemp+8
 13985  014AE6  0EF7               	movlw	-9
 13986  014AE8  006F FF8C  F03B    	movff	plusw1,btemp+9
 13987  014AEE  0EF8               	movlw	-8
 13988  014AF0  006F FF8C  F03C    	movff	plusw1,btemp+10
 13989  014AF6  0EF9               	movlw	-7
 13990  014AF8  006F FF8C  F03D    	movff	plusw1,btemp+11
 13991  014AFE  0E20               	movlw	32
 13992  014B00  D005               	goto	u5340
 13993  014B02                     u5345:
 13994  014B02  90D8               	bcf	status,0,c
 13995  014B04  323D               	rrcf	(btemp+11)^0,f,c
 13996  014B06  323C               	rrcf	(btemp+10)^0,f,c
 13997  014B08  323B               	rrcf	(btemp+9)^0,f,c
 13998  014B0A  323A               	rrcf	(btemp+8)^0,f,c
 13999  014B0C                     u5340:
 14000  014B0C  2EE8               	decfsz	wreg,f,c
 14001  014B0E  D7F9               	goto	u5345
 14002  014B10  663A               	tstfsz	(btemp+8)^0,c
 14003  014B12  D009               	goto	l6750
 14004                           
 14005                           ;stkvar	_u @ sp[(-10)+0]
 14006  014B14  0EF6               	movlw	-10
 14007  014B16  6AE3               	clrf	plusw1,c
 14008  014B18  0EF7               	movlw	-9
 14009  014B1A  6AE3               	clrf	plusw1,c
 14010  014B1C  0EF8               	movlw	-8
 14011  014B1E  6AE3               	clrf	plusw1,c
 14012  014B20  0EF9               	movlw	-7
 14013  014B22  6AE3               	clrf	plusw1,c
 14014  014B24  D037               	goto	l6754
 14015  014B26                     l6750:
 14016                           
 14017                           ;stkvar	_u @ sp[(-10)+0]
 14018  014B26  0EF6               	movlw	-10
 14019  014B28  006F FF8C  F03A    	movff	plusw1,btemp+8
 14020  014B2E  0EF7               	movlw	-9
 14021  014B30  006F FF8C  F03B    	movff	plusw1,btemp+9
 14022  014B36  0EF8               	movlw	-8
 14023  014B38  006F FF8C  F03C    	movff	plusw1,btemp+10
 14024  014B3E  0EF9               	movlw	-7
 14025  014B40  006F FF8C  F03D    	movff	plusw1,btemp+11
 14026  014B46  90D8               	bcf	status,0,c
 14027  014B48  343A               	rlcf	(btemp+8)^0,w,c
 14028  014B4A  6E36               	movwf	(btemp+4)^0,c
 14029  014B4C  343B               	rlcf	(btemp+9)^0,w,c
 14030  014B4E  6E37               	movwf	(btemp+5)^0,c
 14031  014B50  343C               	rlcf	(btemp+10)^0,w,c
 14032  014B52  6E38               	movwf	(btemp+6)^0,c
 14033  014B54  343D               	rlcf	(btemp+11)^0,w,c
 14034  014B56  6E39               	movwf	(btemp+7)^0,c
 14035  014B58  5036               	movf	(btemp+4)^0,w,c
 14036  014B5A  1037               	iorwf	(btemp+5)^0,w,c
 14037  014B5C  1038               	iorwf	(btemp+6)^0,w,c
 14038  014B5E  1039               	iorwf	(btemp+7)^0,w,c
 14039  014B60  B4D8               	btfsc	status,2,c
 14040  014B62  D018               	goto	l6754
 14041  014B64  0E00               	movlw	0
 14042  014B66  6E3A               	movwf	(btemp+8)^0,c
 14043  014B68  0E00               	movlw	0
 14044  014B6A  6E3B               	movwf	(btemp+9)^0,c
 14045  014B6C  0E80               	movlw	128
 14046  014B6E  6E3C               	movwf	(btemp+10)^0,c
 14047  014B70  0EBF               	movlw	191
 14048  014B72  6E3D               	movwf	(btemp+11)^0,c
 14049                           
 14050                           ;stkvar	_u @ sp[(-10)+0]
 14051  014B74  0EF6               	movlw	-10
 14052  014B76  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14053  014B7C  0EF7               	movlw	-9
 14054  014B7E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14055  014B84  0EF8               	movlw	-8
 14056  014B86  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14057  014B8C  0EF9               	movlw	-7
 14058  014B8E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14059  014B94                     l6754:
 14060                           
 14061                           ;stkvar	_u @ sp[(-10)+0]
 14062  014B94  0EF6               	movlw	-10
 14063  014B96  006F FF8C  F032    	movff	plusw1,btemp
 14064  014B9C  0EF7               	movlw	-9
 14065  014B9E  006F FF8C  F033    	movff	plusw1,btemp+1
 14066  014BA4  0EF8               	movlw	-8
 14067  014BA6  006F FF8C  F034    	movff	plusw1,btemp+2
 14068  014BAC  0EF9               	movlw	-7
 14069  014BAE                     L13:
 14070  014BAE  006F FF8C  F035    	movff	plusw1,btemp+3
 14071                           
 14072                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14073  014BB4  0EF2               	movlw	242
 14074  014BB6  26E1               	addwf	fsr1l,f,c
 14075  014BB8  0EFF               	movlw	255
 14076  014BBA  22E2               	addwfc	fsr1h,f,c
 14077  014BBC  0012               	return		;funcret
 14078  014BBE                     __end_of_floorf:
 14079                           	opt callstack 0
 14080                           
 14081 ;; *************** function ___fpclassifyf *****************
 14082 ;; Defined at:
 14083 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14084 ;; Parameters:    Size  Location     Type
 14085 ;;  x               4  [STACK] float 
 14086 ;; Auto vars:     Size  Location     Type
 14087 ;;  u               4  [STACK] struct .
 14088 ;;  e               2  [STACK] int 
 14089 ;; Return value:  Size  Location     Type
 14090 ;;                  2  [STACK] int 
 14091 ;; Registers used:
 14092 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14093 ;; Tracked objects:
 14094 ;;		On entry : 0/1
 14095 ;;		On exit  : 0/0
 14096 ;;		Unchanged: 0/0
 14097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14102 ;;Total ram usage:        0 bytes
 14103 ;; Hardware stack levels used:    1
 14104 ;; Hardware stack levels required when called:    6
 14105 ;; This function calls:
 14106 ;;		Nothing
 14107 ;; This function is called by:
 14108 ;;		_efgtoa
 14109 ;; This function uses a reentrant model
 14110 ;;
 14111                           
 14112                           	psect	text52
 14113  016316                     __ptext52:
 14114                           	opt callstack 0
 14115  016316                     ___fpclassifyf:
 14116                           	opt callstack 0
 14117                           
 14118                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14119  016316  0E06               	movlw	6
 14120  016318  26E1               	addwf	fsr1l,f,c
 14121  01631A  0E00               	movlw	0
 14122  01631C  22E2               	addwfc	fsr1h,f,c
 14123                           
 14124                           ;incstack = 0
 14125  01631E  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 14126  016324  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 14127  01632A  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 14128  016330  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 14129                           
 14130                           ;stkvar	_u @ sp[(-6)+0]
 14131  016336  0EFA               	movlw	-6
 14132  016338  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14133  01633E  0EFB               	movlw	-5
 14134  016340  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14135  016346  0EFC               	movlw	-4
 14136  016348  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14137  01634E  0EFD               	movlw	-3
 14138  016350  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14139                           
 14140                           ;stkvar	_x @ sp[(-6)+-4]
 14141  016356  0EF6               	movlw	-10
 14142  016358  006F FF8C  F03A    	movff	plusw1,btemp+8
 14143  01635E  0EF7               	movlw	-9
 14144  016360  006F FF8C  F03B    	movff	plusw1,btemp+9
 14145  016366  0EF8               	movlw	-8
 14146  016368  006F FF8C  F03C    	movff	plusw1,btemp+10
 14147  01636E  0EF9               	movlw	-7
 14148  016370  006F FF8C  F03D    	movff	plusw1,btemp+11
 14149                           
 14150                           ;stkvar	_u @ sp[(-6)+0]
 14151  016376  0EFA               	movlw	-6
 14152  016378  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14153  01637E  0EFB               	movlw	-5
 14154  016380  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14155  016386  0EFC               	movlw	-4
 14156  016388  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14157  01638E  0EFD               	movlw	-3
 14158  016390  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14159                           
 14160                           ;stkvar	_u @ sp[(-6)+0]
 14161  016396  0EFA               	movlw	-6
 14162  016398  006F FF8C  F03A    	movff	plusw1,btemp+8
 14163  01639E  0EFB               	movlw	-5
 14164  0163A0  006F FF8C  F03B    	movff	plusw1,btemp+9
 14165  0163A6  0EFC               	movlw	-4
 14166  0163A8  006F FF8C  F03C    	movff	plusw1,btemp+10
 14167  0163AE  0EFD               	movlw	-3
 14168  0163B0  006F FF8C  F03D    	movff	plusw1,btemp+11
 14169  0163B6  0E18               	movlw	24
 14170  0163B8  D005               	goto	u5150
 14171  0163BA                     u5155:
 14172  0163BA  90D8               	bcf	status,0,c
 14173  0163BC  323D               	rrcf	(btemp+11)^0,f,c
 14174  0163BE  323C               	rrcf	(btemp+10)^0,f,c
 14175  0163C0  323B               	rrcf	(btemp+9)^0,f,c
 14176  0163C2  323A               	rrcf	(btemp+8)^0,f,c
 14177  0163C4                     u5150:
 14178  0163C4  2EE8               	decfsz	wreg,f,c
 14179  0163C6  D7F9               	goto	u5155
 14180  0163C8  0060  F0E8  F038   	movff	btemp+8,btemp+6
 14181  0163CE  0060  F0EC  F039   	movff	btemp+9,btemp+7
 14182  0163D4  0EFF               	movlw	255
 14183  0163D6  1638               	andwf	(btemp+6)^0,f,c
 14184  0163D8  0E00               	movlw	0
 14185  0163DA  1639               	andwf	(btemp+7)^0,f,c
 14186                           
 14187                           ;stkvar	_e @ sp[(-6)+4]
 14188  0163DC  0EFE               	movlw	-2
 14189  0163DE  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 14190  0163E4  0EFF               	movlw	-1
 14191  0163E6  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 14192                           
 14193                           ;stkvar	_e @ sp[(-6)+4]
 14194  0163EC  0EFE               	movlw	-2
 14195  0163EE  006F FF8C  F032    	movff	plusw1,btemp
 14196  0163F4  0EFF               	movlw	-1
 14197  0163F6  50E3               	movf	plusw1,w,c
 14198  0163F8  1032               	iorwf	btemp^0,w,c
 14199  0163FA  A4D8               	btfss	status,2,c
 14200  0163FC  D023               	goto	l6692
 14201                           
 14202                           ;stkvar	_u @ sp[(-6)+0]
 14203  0163FE  0EFA               	movlw	-6
 14204  016400  006F FF8C  F03A    	movff	plusw1,btemp+8
 14205  016406  0EFB               	movlw	-5
 14206  016408  006F FF8C  F03B    	movff	plusw1,btemp+9
 14207  01640E  0EFC               	movlw	-4
 14208  016410  006F FF8C  F03C    	movff	plusw1,btemp+10
 14209  016416  0EFD               	movlw	-3
 14210  016418  006F FF8C  F03D    	movff	plusw1,btemp+11
 14211  01641E  90D8               	bcf	status,0,c
 14212  016420  343A               	rlcf	(btemp+8)^0,w,c
 14213  016422  6E36               	movwf	(btemp+4)^0,c
 14214  016424  343B               	rlcf	(btemp+9)^0,w,c
 14215  016426  6E37               	movwf	(btemp+5)^0,c
 14216  016428  343C               	rlcf	(btemp+10)^0,w,c
 14217  01642A  6E38               	movwf	(btemp+6)^0,c
 14218  01642C  343D               	rlcf	(btemp+11)^0,w,c
 14219  01642E  6E39               	movwf	(btemp+7)^0,c
 14220  016430  5036               	movf	(btemp+4)^0,w,c
 14221  016432  1037               	iorwf	(btemp+5)^0,w,c
 14222  016434  1038               	iorwf	(btemp+6)^0,w,c
 14223  016436  1039               	iorwf	(btemp+7)^0,w,c
 14224  016438  A4D8               	btfss	status,2,c
 14225  01643A  D002               	goto	l6688
 14226  01643C  0E02               	movlw	2
 14227  01643E  D02E               	goto	L14
 14228  016440                     l6688:
 14229  016440  0E03               	movlw	3
 14230  016442  D02C               	goto	L14
 14231  016444                     l6692:
 14232                           
 14233                           ;stkvar	_e @ sp[(-6)+4]
 14234  016444  0EFE               	movlw	-2
 14235  016446  28E3               	incf	plusw1,w,c
 14236  016448  E128               	bnz	l6698
 14237  01644A  0EFF               	movlw	-1
 14238  01644C  50E3               	movf	plusw1,w,c
 14239  01644E  A4D8               	btfss	status,2,c
 14240  016450  D024               	goto	l6698
 14241                           
 14242                           ;stkvar	_u @ sp[(-6)+0]
 14243  016452  0EFA               	movlw	-6
 14244  016454  006F FF8C  F03A    	movff	plusw1,btemp+8
 14245  01645A  0EFB               	movlw	-5
 14246  01645C  006F FF8C  F03B    	movff	plusw1,btemp+9
 14247  016462  0EFC               	movlw	-4
 14248  016464  006F FF8C  F03C    	movff	plusw1,btemp+10
 14249  01646A  0EFD               	movlw	-3
 14250  01646C  006F FF8C  F03D    	movff	plusw1,btemp+11
 14251  016472  0E09               	movlw	9
 14252  016474                     u5195:
 14253  016474  90D8               	bcf	status,0,c
 14254  016476  363A               	rlcf	(btemp+8)^0,f,c
 14255  016478  363B               	rlcf	(btemp+9)^0,f,c
 14256  01647A  363C               	rlcf	(btemp+10)^0,f,c
 14257  01647C  363D               	rlcf	(btemp+11)^0,f,c
 14258  01647E  2EE8               	decfsz	wreg,f,c
 14259  016480  D7F9               	goto	u5195
 14260  016482  503A               	movf	(btemp+8)^0,w,c
 14261  016484  103B               	iorwf	(btemp+9)^0,w,c
 14262  016486  103C               	iorwf	(btemp+10)^0,w,c
 14263  016488  103D               	iorwf	(btemp+11)^0,w,c
 14264  01648A  A4D8               	btfss	status,2,c
 14265  01648C  D002               	goto	u5200
 14266  01648E  0E01               	movlw	1
 14267  016490  D001               	goto	u5210
 14268  016492                     u5200:
 14269  016492  0E00               	movlw	0
 14270  016494                     u5210:
 14271  016494  6E32               	movwf	btemp^0,c
 14272  016496  6A33               	clrf	(btemp+1)^0,c
 14273  016498  D004               	goto	l2792
 14274  01649A                     l6698:
 14275  01649A  0E04               	movlw	4
 14276  01649C                     L14:
 14277  01649C  6E32               	movwf	btemp^0,c
 14278  01649E  0E00               	movlw	0
 14279  0164A0  6E33               	movwf	(btemp+1)^0,c
 14280  0164A2                     l2792:
 14281                           
 14282                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14283  0164A2  0EF6               	movlw	246
 14284  0164A4  26E1               	addwf	fsr1l,f,c
 14285  0164A6  0EFF               	movlw	255
 14286  0164A8  22E2               	addwfc	fsr1h,f,c
 14287  0164AA  0012               	return		;funcret
 14288  0164AC                     __end_of___fpclassifyf:
 14289                           	opt callstack 0
 14290                           
 14291 ;; *************** function ___fltol *****************
 14292 ;; Defined at:
 14293 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14294 ;; Parameters:    Size  Location     Type
 14295 ;;  f1              4  [STACK] int 
 14296 ;; Auto vars:     Size  Location     Type
 14297 ;;  exp1            1  [STACK] unsigned char 
 14298 ;;  sign1           1  [STACK] unsigned char 
 14299 ;; Return value:  Size  Location     Type
 14300 ;;                  4  [STACK] long 
 14301 ;; Registers used:
 14302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14303 ;; Tracked objects:
 14304 ;;		On entry : 0/1
 14305 ;;		On exit  : 0/0
 14306 ;;		Unchanged: 0/0
 14307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14312 ;;Total ram usage:        0 bytes
 14313 ;; Hardware stack levels used:    1
 14314 ;; Hardware stack levels required when called:    6
 14315 ;; This function calls:
 14316 ;;		Nothing
 14317 ;; This function is called by:
 14318 ;;		_efgtoa
 14319 ;; This function uses a reentrant model
 14320 ;;
 14321                           
 14322                           	psect	text53
 14323  0164AC                     __ptext53:
 14324                           	opt callstack 0
 14325  0164AC                     ___fltol:
 14326                           	opt callstack 0
 14327                           
 14328                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14329  0164AC  52E6               	movf	postinc1,f,c
 14330  0164AE  52E6               	movf	postinc1,f,c
 14331                           
 14332                           ;stkvar	_f1 @ sp[(-2)+-4]
 14333                           
 14334                           ;incstack = 0
 14335  0164B0  0EFA               	movlw	-6
 14336  0164B2  006F FF8C  F03A    	movff	plusw1,btemp+8
 14337  0164B8  0EFB               	movlw	-5
 14338  0164BA  006F FF8C  F03B    	movff	plusw1,btemp+9
 14339  0164C0  0EFC               	movlw	-4
 14340  0164C2  006F FF8C  F03C    	movff	plusw1,btemp+10
 14341  0164C8  0EFD               	movlw	-3
 14342  0164CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 14343  0164D0  0E18               	movlw	24
 14344  0164D2  D005               	goto	u6360
 14345  0164D4                     u6365:
 14346  0164D4  90D8               	bcf	status,0,c
 14347  0164D6  323D               	rrcf	(btemp+11)^0,f,c
 14348  0164D8  323C               	rrcf	(btemp+10)^0,f,c
 14349  0164DA  323B               	rrcf	(btemp+9)^0,f,c
 14350  0164DC  323A               	rrcf	(btemp+8)^0,f,c
 14351  0164DE                     u6360:
 14352  0164DE  2EE8               	decfsz	wreg,f,c
 14353  0164E0  D7F9               	goto	u6365
 14354                           
 14355                           ;stkvar	_exp1 @ sp[(-2)+0]
 14356  0164E2  0EFE               	movlw	-2
 14357  0164E4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14358  0164EA  0EFE               	movlw	-2
 14359  0164EC  50E3               	movf	plusw1,w,c
 14360  0164EE  A4D8               	btfss	status,2,c
 14361  0164F0  D006               	goto	l7318
 14362  0164F2                     u6370:
 14363  0164F2  0E00               	movlw	0
 14364  0164F4  6E32               	movwf	btemp^0,c
 14365  0164F6  6A33               	clrf	(btemp+1)^0,c
 14366  0164F8  6A34               	clrf	(btemp+2)^0,c
 14367  0164FA  6A35               	clrf	(btemp+3)^0,c
 14368  0164FC  D08B               	goto	l2408
 14369  0164FE                     l7318:
 14370                           
 14371                           ;stkvar	_f1 @ sp[(-2)+-4]
 14372  0164FE  0EFA               	movlw	-6
 14373  016500  006F FF8C  F03A    	movff	plusw1,btemp+8
 14374  016506  0EFB               	movlw	-5
 14375  016508  006F FF8C  F03B    	movff	plusw1,btemp+9
 14376  01650E  0EFC               	movlw	-4
 14377  016510  006F FF8C  F03C    	movff	plusw1,btemp+10
 14378  016516  0EFD               	movlw	-3
 14379  016518  006F FF8C  F03D    	movff	plusw1,btemp+11
 14380  01651E  0E20               	movlw	32
 14381  016520  D005               	goto	u6380
 14382  016522                     u6385:
 14383  016522  90D8               	bcf	status,0,c
 14384  016524  323D               	rrcf	(btemp+11)^0,f,c
 14385  016526  323C               	rrcf	(btemp+10)^0,f,c
 14386  016528  323B               	rrcf	(btemp+9)^0,f,c
 14387  01652A  323A               	rrcf	(btemp+8)^0,f,c
 14388  01652C                     u6380:
 14389  01652C  2EE8               	decfsz	wreg,f,c
 14390  01652E  D7F9               	goto	u6385
 14391                           
 14392                           ;stkvar	_sign1 @ sp[(-2)+1]
 14393  016530  0EFF               	movlw	-1
 14394  016532  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14395                           
 14396                           ;stkvar	_f1 @ sp[(-2)+-4]
 14397  016538  0EFC               	movlw	-4
 14398  01653A  8EE3               	bsf	plusw1,7,c
 14399                           
 14400                           ;stkvar	_f1 @ sp[(-2)+-4]
 14401  01653C  50E1               	movf	fsr1l,w,c
 14402  01653E  0FFA               	addlw	-6
 14403  016540  6ED9               	movwf	fsr2l,c
 14404  016542  50E2               	movf	fsr1h,w,c
 14405  016544  6EDA               	movwf	fsr2h,c
 14406  016546  0EFF               	movlw	255
 14407  016548  22DA               	addwfc	fsr2h,f,c
 14408  01654A  0EFF               	movlw	255
 14409  01654C  16DE               	andwf	postinc2,f,c
 14410  01654E  0EFF               	movlw	255
 14411  016550  16DE               	andwf	postinc2,f,c
 14412  016552  0EFF               	movlw	255
 14413  016554  16DE               	andwf	postinc2,f,c
 14414  016556  0E00               	movlw	0
 14415  016558  16DE               	andwf	postinc2,f,c
 14416                           
 14417                           ;stkvar	_exp1 @ sp[(-2)+0]
 14418  01655A  0EFE               	movlw	-2
 14419  01655C  006F FF8C  F032    	movff	plusw1,btemp
 14420  016562  0E96               	movlw	150
 14421  016564  5E32               	subwf	btemp^0,f,c
 14422  016566  0EFE               	movlw	-2
 14423  016568  0060  F0CB  FFE3   	movff	btemp,plusw1
 14424                           
 14425                           ;stkvar	_exp1 @ sp[(-2)+0]
 14426  01656E  0EFE               	movlw	-2
 14427  016570  AEE3               	btfss	plusw1,7,c
 14428  016572  D014               	goto	l7336
 14429                           
 14430                           ;stkvar	_exp1 @ sp[(-2)+0]
 14431  016574  0EFE               	movlw	-2
 14432  016576  50E3               	movf	plusw1,w,c
 14433  016578  0A80               	xorlw	128
 14434  01657A  0F97               	addlw	151
 14435  01657C  A0D8               	btfss	status,0,c
 14436  01657E  D7B9               	goto	u6370
 14437  016580                     l7334:
 14438                           
 14439                           ;stkvar	_f1 @ sp[(-2)+-4]
 14440  016580  90D8               	bcf	status,0,c
 14441  016582  0EFD               	movlw	-3
 14442  016584  32E3               	rrcf	plusw1,f,c
 14443  016586  0EFC               	movlw	-4
 14444  016588  32E3               	rrcf	plusw1,f,c
 14445  01658A  0EFB               	movlw	-5
 14446  01658C  32E3               	rrcf	plusw1,f,c
 14447  01658E  0EFA               	movlw	-6
 14448  016590  32E3               	rrcf	plusw1,f,c
 14449                           
 14450                           ;stkvar	_exp1 @ sp[(-2)+0]
 14451  016592  0EFE               	movlw	-2
 14452  016594  2AE3               	incf	plusw1,f,c
 14453  016596  B4D8               	btfsc	status,2,c
 14454  016598  D018               	goto	u6430
 14455  01659A  D7F2               	goto	l7334
 14456  01659C                     l7336:
 14457                           
 14458                           ;stkvar	_exp1 @ sp[(-2)+0]
 14459  01659C  0EFE               	movlw	-2
 14460  01659E  006F FF8C  F032    	movff	plusw1,btemp
 14461  0165A4  0E1F               	movlw	31
 14462  0165A6  6432               	cpfsgt	btemp^0,c
 14463  0165A8  D00C               	goto	l7344
 14464  0165AA  D7A3               	goto	u6370
 14465  0165AC                     l7342:
 14466                           
 14467                           ;stkvar	_f1 @ sp[(-2)+-4]
 14468  0165AC  90D8               	bcf	status,0,c
 14469  0165AE  0EFA               	movlw	-6
 14470  0165B0  36E3               	rlcf	plusw1,f,c
 14471  0165B2  0EFB               	movlw	-5
 14472  0165B4  36E3               	rlcf	plusw1,f,c
 14473  0165B6  0EFC               	movlw	-4
 14474  0165B8  36E3               	rlcf	plusw1,f,c
 14475  0165BA  0EFD               	movlw	-3
 14476  0165BC  36E3               	rlcf	plusw1,f,c
 14477                           
 14478                           ;stkvar	_exp1 @ sp[(-2)+0]
 14479  0165BE  0EFE               	movlw	-2
 14480  0165C0  06E3               	decf	plusw1,f,c
 14481  0165C2                     l7344:
 14482                           
 14483                           ;stkvar	_exp1 @ sp[(-2)+0]
 14484  0165C2  0EFE               	movlw	-2
 14485  0165C4  50E3               	movf	plusw1,w,c
 14486  0165C6  A4D8               	btfss	status,2,c
 14487  0165C8  D7F1               	goto	l7342
 14488  0165CA                     u6430:
 14489                           
 14490                           ;stkvar	_sign1 @ sp[(-2)+1]
 14491  0165CA  0EFF               	movlw	-1
 14492  0165CC  50E3               	movf	plusw1,w,c
 14493  0165CE  B4D8               	btfsc	status,2,c
 14494  0165D0  D011               	goto	u6450
 14495                           
 14496                           ;stkvar	_f1 @ sp[(-2)+-4]
 14497                           ;stkvar	_f1 @ sp[(-2)+-4]
 14498  0165D2  0EFA               	movlw	-6
 14499  0165D4  6CE3               	negf	plusw1,c
 14500  0165D6  0EFB               	movlw	-5
 14501  0165D8  1EE3               	comf	plusw1,f,c
 14502  0165DA  0EFC               	movlw	-4
 14503  0165DC  1EE3               	comf	plusw1,f,c
 14504  0165DE  0EFD               	movlw	-3
 14505  0165E0  1EE3               	comf	plusw1,f,c
 14506  0165E2  E308               	bnc	u6450
 14507  0165E4  0EFB               	movlw	-5
 14508  0165E6  2AE3               	incf	plusw1,f,c
 14509  0165E8  E305               	bnc	u6450
 14510  0165EA  0EFC               	movlw	-4
 14511  0165EC  2AE3               	incf	plusw1,f,c
 14512  0165EE  E302               	bnc	u6450
 14513  0165F0  0EFD               	movlw	-3
 14514  0165F2  2AE3               	incf	plusw1,f,c
 14515  0165F4                     u6450:
 14516                           
 14517                           ;stkvar	_f1 @ sp[(-2)+-4]
 14518  0165F4  0EFA               	movlw	-6
 14519  0165F6  006F FF8C  F032    	movff	plusw1,btemp
 14520  0165FC  0EFB               	movlw	-5
 14521  0165FE  006F FF8C  F033    	movff	plusw1,btemp+1
 14522  016604  0EFC               	movlw	-4
 14523  016606  006F FF8C  F034    	movff	plusw1,btemp+2
 14524  01660C  0EFD               	movlw	-3
 14525  01660E  006F FF8C  F035    	movff	plusw1,btemp+3
 14526  016614                     l2408:
 14527                           
 14528                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14529  016614  0EFA               	movlw	250
 14530  016616  26E1               	addwf	fsr1l,f,c
 14531  016618  0EFF               	movlw	255
 14532  01661A  22E2               	addwfc	fsr1h,f,c
 14533  01661C  0012               	return		;funcret
 14534  01661E                     __end_of___fltol:
 14535                           	opt callstack 0
 14536                           
 14537 ;; *************** function ___flneg *****************
 14538 ;; Defined at:
 14539 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14540 ;; Parameters:    Size  Location     Type
 14541 ;;  f1              4  [STACK] long 
 14542 ;; Auto vars:     Size  Location     Type
 14543 ;;		None
 14544 ;; Return value:  Size  Location     Type
 14545 ;;                  4  [STACK] long 
 14546 ;; Registers used:
 14547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14548 ;; Tracked objects:
 14549 ;;		On entry : 0/1
 14550 ;;		On exit  : 0/0
 14551 ;;		Unchanged: 0/0
 14552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14557 ;;Total ram usage:        0 bytes
 14558 ;; Hardware stack levels used:    1
 14559 ;; Hardware stack levels required when called:    6
 14560 ;; This function calls:
 14561 ;;		Nothing
 14562 ;; This function is called by:
 14563 ;;		_efgtoa
 14564 ;; This function uses a reentrant model
 14565 ;;
 14566                           
 14567                           	psect	text54
 14568  01837C                     __ptext54:
 14569                           	opt callstack 0
 14570  01837C                     ___flneg:
 14571                           	opt callstack 17
 14572                           
 14573                           ;stkvar	_f1 @ sp[(0)+-4]
 14574                           
 14575                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14576                           ;incstack = 0
 14577  01837C  0EFC               	movlw	-4
 14578  01837E  50E3               	movf	plusw1,w,c
 14579  018380  E10A               	bnz	u6350
 14580  018382  0EFD               	movlw	-3
 14581  018384  50E3               	movf	plusw1,w,c
 14582  018386  E107               	bnz	u6350
 14583  018388  0EFE               	movlw	-2
 14584  01838A  50E3               	movf	plusw1,w,c
 14585  01838C  E104               	bnz	u6350
 14586  01838E  0EFF               	movlw	-1
 14587  018390  50E3               	movf	plusw1,w,c
 14588  018392  B4D8               	btfsc	status,2,c
 14589  018394  D002               	goto	l7308
 14590  018396                     u6350:
 14591                           
 14592                           ;stkvar	_f1 @ sp[(0)+-4]
 14593  018396  0EFF               	movlw	-1
 14594  018398  7EE3               	btg	plusw1,7,c
 14595  01839A                     l7308:
 14596                           
 14597                           ;stkvar	_f1 @ sp[(0)+-4]
 14598  01839A  0EFC               	movlw	-4
 14599  01839C  006F FF8C  F032    	movff	plusw1,btemp
 14600  0183A2  0EFD               	movlw	-3
 14601  0183A4  006F FF8C  F033    	movff	plusw1,btemp+1
 14602  0183AA  0EFE               	movlw	-2
 14603  0183AC  006F FF8C  F034    	movff	plusw1,btemp+2
 14604  0183B2  0EFF               	movlw	-1
 14605  0183B4  006F FF8C  F035    	movff	plusw1,btemp+3
 14606                           
 14607                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14608  0183BA  52E5               	movf	postdec1,f,c
 14609  0183BC  52E5               	movf	postdec1,f,c
 14610  0183BE  52E5               	movf	postdec1,f,c
 14611  0183C0  52E5               	movf	postdec1,f,c
 14612  0183C2  0012               	return		;funcret
 14613  0183C4                     __end_of___flneg:
 14614                           	opt callstack 0
 14615                           
 14616 ;; *************** function ___flge *****************
 14617 ;; Defined at:
 14618 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 14619 ;; Parameters:    Size  Location     Type
 14620 ;;  ff1             4  [STACK] long 
 14621 ;;  ff2             4  [STACK] long 
 14622 ;; Auto vars:     Size  Location     Type
 14623 ;;		None
 14624 ;; Return value:  Size  Location     Type
 14625 ;;		None               void
 14626 ;; Registers used:
 14627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14628 ;; Tracked objects:
 14629 ;;		On entry : 0/1
 14630 ;;		On exit  : 0/0
 14631 ;;		Unchanged: 0/0
 14632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14637 ;;Total ram usage:        0 bytes
 14638 ;; Hardware stack levels used:    1
 14639 ;; Hardware stack levels required when called:    6
 14640 ;; This function calls:
 14641 ;;		Nothing
 14642 ;; This function is called by:
 14643 ;;		_efgtoa
 14644 ;; This function uses a reentrant model
 14645 ;;
 14646                           
 14647                           	psect	text55
 14648  01661E                     __ptext55:
 14649                           	opt callstack 0
 14650  01661E                     ___flge:
 14651                           	opt callstack 17
 14652                           
 14653                           ;stkvar	_ff1 @ sp[(0)+-4]
 14654                           
 14655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14656                           ;incstack = 0
 14657  01661E  50E1               	movf	fsr1l,w,c
 14658  016620  0FFC               	addlw	-4
 14659  016622  6ED9               	movwf	fsr2l,c
 14660  016624  50E2               	movf	fsr1h,w,c
 14661  016626  6EDA               	movwf	fsr2h,c
 14662  016628  0EFF               	movlw	255
 14663  01662A  22DA               	addwfc	fsr2h,f,c
 14664  01662C  0E00               	movlw	0
 14665  01662E  14DE               	andwf	postinc2,w,c
 14666  016630  6E3A               	movwf	(btemp+8)^0,c
 14667  016632  0E00               	movlw	0
 14668  016634  14DE               	andwf	postinc2,w,c
 14669  016636  6E3B               	movwf	(btemp+9)^0,c
 14670  016638  0E80               	movlw	128
 14671  01663A  14DE               	andwf	postinc2,w,c
 14672  01663C  6E3C               	movwf	(btemp+10)^0,c
 14673  01663E  0E7F               	movlw	127
 14674  016640  14DE               	andwf	postinc2,w,c
 14675  016642  6E3D               	movwf	(btemp+11)^0,c
 14676  016644  503A               	movf	(btemp+8)^0,w,c
 14677  016646  103B               	iorwf	(btemp+9)^0,w,c
 14678  016648  103C               	iorwf	(btemp+10)^0,w,c
 14679  01664A  103D               	iorwf	(btemp+11)^0,w,c
 14680  01664C  A4D8               	btfss	status,2,c
 14681  01664E  D008               	goto	l7282
 14682                           
 14683                           ;stkvar	_ff1 @ sp[(0)+-4]
 14684  016650  0EFC               	movlw	-4
 14685  016652  6AE3               	clrf	plusw1,c
 14686  016654  0EFD               	movlw	-3
 14687  016656  6AE3               	clrf	plusw1,c
 14688  016658  0EFE               	movlw	-2
 14689  01665A  6AE3               	clrf	plusw1,c
 14690  01665C  0EFF               	movlw	-1
 14691  01665E  6AE3               	clrf	plusw1,c
 14692  016660                     l7282:
 14693                           
 14694                           ;stkvar	_ff2 @ sp[(0)+-8]
 14695  016660  50E1               	movf	fsr1l,w,c
 14696  016662  0FF8               	addlw	-8
 14697  016664  6ED9               	movwf	fsr2l,c
 14698  016666  50E2               	movf	fsr1h,w,c
 14699  016668  6EDA               	movwf	fsr2h,c
 14700  01666A  0EFF               	movlw	255
 14701  01666C  22DA               	addwfc	fsr2h,f,c
 14702  01666E  0E00               	movlw	0
 14703  016670  14DE               	andwf	postinc2,w,c
 14704  016672  6E3A               	movwf	(btemp+8)^0,c
 14705  016674  0E00               	movlw	0
 14706  016676  14DE               	andwf	postinc2,w,c
 14707  016678  6E3B               	movwf	(btemp+9)^0,c
 14708  01667A  0E80               	movlw	128
 14709  01667C  14DE               	andwf	postinc2,w,c
 14710  01667E  6E3C               	movwf	(btemp+10)^0,c
 14711  016680  0E7F               	movlw	127
 14712  016682  14DE               	andwf	postinc2,w,c
 14713  016684  6E3D               	movwf	(btemp+11)^0,c
 14714  016686  503A               	movf	(btemp+8)^0,w,c
 14715  016688  103B               	iorwf	(btemp+9)^0,w,c
 14716  01668A  103C               	iorwf	(btemp+10)^0,w,c
 14717  01668C  103D               	iorwf	(btemp+11)^0,w,c
 14718  01668E  A4D8               	btfss	status,2,c
 14719  016690  D008               	goto	l2374
 14720                           
 14721                           ;stkvar	_ff2 @ sp[(0)+-8]
 14722  016692  0EF8               	movlw	-8
 14723  016694  6AE3               	clrf	plusw1,c
 14724  016696  0EF9               	movlw	-7
 14725  016698  6AE3               	clrf	plusw1,c
 14726  01669A  0EFA               	movlw	-6
 14727  01669C  6AE3               	clrf	plusw1,c
 14728  01669E  0EFB               	movlw	-5
 14729  0166A0  6AE3               	clrf	plusw1,c
 14730  0166A2                     l2374:
 14731                           
 14732                           ;stkvar	_ff1 @ sp[(0)+-4]
 14733  0166A2  0EFF               	movlw	-1
 14734  0166A4  AEE3               	btfss	plusw1,7,c
 14735  0166A6  D024               	goto	l7288
 14736                           
 14737                           ;stkvar	_ff1 @ sp[(0)+-4]
 14738  0166A8  0E00               	movlw	0
 14739  0166AA  6E3A               	movwf	(btemp+8)^0,c
 14740  0166AC  0E00               	movlw	0
 14741  0166AE  6E3B               	movwf	(btemp+9)^0,c
 14742  0166B0  0E00               	movlw	0
 14743  0166B2  6E3C               	movwf	(btemp+10)^0,c
 14744  0166B4  0E80               	movlw	128
 14745  0166B6  6E3D               	movwf	(btemp+11)^0,c
 14746  0166B8  0EFC               	movlw	-4
 14747  0166BA  50E3               	movf	plusw1,w,c
 14748  0166BC  5E3A               	subwf	(btemp+8)^0,f,c
 14749  0166BE  0EFD               	movlw	-3
 14750  0166C0  50E3               	movf	plusw1,w,c
 14751  0166C2  5A3B               	subwfb	(btemp+9)^0,f,c
 14752  0166C4  0EFE               	movlw	-2
 14753  0166C6  50E3               	movf	plusw1,w,c
 14754  0166C8  5A3C               	subwfb	(btemp+10)^0,f,c
 14755  0166CA  0EFF               	movlw	-1
 14756  0166CC  50E3               	movf	plusw1,w,c
 14757  0166CE  5A3D               	subwfb	(btemp+11)^0,f,c
 14758                           
 14759                           ;stkvar	_ff1 @ sp[(0)+-4]
 14760  0166D0  0EFC               	movlw	-4
 14761  0166D2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14762  0166D8  0EFD               	movlw	-3
 14763  0166DA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14764  0166E0  0EFE               	movlw	-2
 14765  0166E2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14766  0166E8  0EFF               	movlw	-1
 14767  0166EA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14768  0166F0                     l7288:
 14769                           
 14770                           ;stkvar	_ff2 @ sp[(0)+-8]
 14771  0166F0  0EFB               	movlw	-5
 14772  0166F2  AEE3               	btfss	plusw1,7,c
 14773  0166F4  D024               	goto	l7292
 14774                           
 14775                           ;stkvar	_ff2 @ sp[(0)+-8]
 14776  0166F6  0E00               	movlw	0
 14777  0166F8  6E3A               	movwf	(btemp+8)^0,c
 14778  0166FA  0E00               	movlw	0
 14779  0166FC  6E3B               	movwf	(btemp+9)^0,c
 14780  0166FE  0E00               	movlw	0
 14781  016700  6E3C               	movwf	(btemp+10)^0,c
 14782  016702  0E80               	movlw	128
 14783  016704  6E3D               	movwf	(btemp+11)^0,c
 14784  016706  0EF8               	movlw	-8
 14785  016708  50E3               	movf	plusw1,w,c
 14786  01670A  5E3A               	subwf	(btemp+8)^0,f,c
 14787  01670C  0EF9               	movlw	-7
 14788  01670E  50E3               	movf	plusw1,w,c
 14789  016710  5A3B               	subwfb	(btemp+9)^0,f,c
 14790  016712  0EFA               	movlw	-6
 14791  016714  50E3               	movf	plusw1,w,c
 14792  016716  5A3C               	subwfb	(btemp+10)^0,f,c
 14793  016718  0EFB               	movlw	-5
 14794  01671A  50E3               	movf	plusw1,w,c
 14795  01671C  5A3D               	subwfb	(btemp+11)^0,f,c
 14796                           
 14797                           ;stkvar	_ff2 @ sp[(0)+-8]
 14798  01671E  0EF8               	movlw	-8
 14799  016720  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14800  016726  0EF9               	movlw	-7
 14801  016728  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14802  01672E  0EFA               	movlw	-6
 14803  016730  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14804  016736  0EFB               	movlw	-5
 14805  016738  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14806  01673E                     l7292:
 14807                           
 14808                           ;stkvar	_ff1 @ sp[(0)+-4]
 14809  01673E  0EFF               	movlw	-1
 14810  016740  7EE3               	btg	plusw1,7,c
 14811                           
 14812                           ;stkvar	_ff2 @ sp[(0)+-8]
 14813  016742  0EFB               	movlw	-5
 14814  016744  7EE3               	btg	plusw1,7,c
 14815                           
 14816                           ;stkvar	_ff2 @ sp[(0)+-8]
 14817                           ;stkvar	_ff1 @ sp[(0)+-4]
 14818  016746  50E1               	movf	fsr1l,w,c
 14819  016748  0FFC               	addlw	-4
 14820  01674A  6ED9               	movwf	fsr2l,c
 14821  01674C  50E2               	movf	fsr1h,w,c
 14822  01674E  6EDA               	movwf	fsr2h,c
 14823  016750  0EFF               	movlw	255
 14824  016752  22DA               	addwfc	fsr2h,f,c
 14825  016754  0EF8               	movlw	-8
 14826  016756  50E3               	movf	plusw1,w,c
 14827  016758  5CDE               	subwf	postinc2,w,c
 14828  01675A  0EF9               	movlw	-7
 14829  01675C  50E3               	movf	plusw1,w,c
 14830  01675E  58DE               	subwfb	postinc2,w,c
 14831  016760  0EFA               	movlw	-6
 14832  016762  50E3               	movf	plusw1,w,c
 14833  016764  58DE               	subwfb	postinc2,w,c
 14834  016766  0EFB               	movlw	-5
 14835  016768  50E3               	movf	plusw1,w,c
 14836  01676A  58DE               	subwfb	postinc2,w,c
 14837  01676C  B0D8               	btfsc	status,0,c
 14838  01676E  D002               	goto	l7300
 14839  016770  9032               	bcf	btemp& (0+255),0,c
 14840  016772  D001               	goto	l2381
 14841  016774                     l7300:
 14842  016774  8032               	bsf	btemp& (0+255),0,c
 14843  016776                     l2381:
 14844                           
 14845                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14846  016776  0EF8               	movlw	248
 14847  016778  26E1               	addwf	fsr1l,f,c
 14848  01677A  0EFF               	movlw	255
 14849  01677C  22E2               	addwfc	fsr1h,f,c
 14850  01677E  0012               	return		;funcret
 14851  016780                     __end_of___flge:
 14852                           	opt callstack 0
 14853                           
 14854 ;; *************** function ___fleq *****************
 14855 ;; Defined at:
 14856 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 14857 ;; Parameters:    Size  Location     Type
 14858 ;;  ff1             4  [STACK] long 
 14859 ;;  ff2             4  [STACK] long 
 14860 ;; Auto vars:     Size  Location     Type
 14861 ;;		None
 14862 ;; Return value:  Size  Location     Type
 14863 ;;		None               void
 14864 ;; Registers used:
 14865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14866 ;; Tracked objects:
 14867 ;;		On entry : 0/1
 14868 ;;		On exit  : 0/0
 14869 ;;		Unchanged: 0/0
 14870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14875 ;;Total ram usage:        0 bytes
 14876 ;; Hardware stack levels used:    1
 14877 ;; Hardware stack levels required when called:    6
 14878 ;; This function calls:
 14879 ;;		Nothing
 14880 ;; This function is called by:
 14881 ;;		_efgtoa
 14882 ;; This function uses a reentrant model
 14883 ;;
 14884                           
 14885                           	psect	text56
 14886  01746A                     __ptext56:
 14887                           	opt callstack 0
 14888  01746A                     ___fleq:
 14889                           	opt callstack 17
 14890                           
 14891                           ;stkvar	_ff1 @ sp[(0)+-4]
 14892                           
 14893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14894                           ;incstack = 0
 14895  01746A  50E1               	movf	fsr1l,w,c
 14896  01746C  0FFC               	addlw	-4
 14897  01746E  6ED9               	movwf	fsr2l,c
 14898  017470  50E2               	movf	fsr1h,w,c
 14899  017472  6EDA               	movwf	fsr2h,c
 14900  017474  0EFF               	movlw	255
 14901  017476  22DA               	addwfc	fsr2h,f,c
 14902  017478  0E00               	movlw	0
 14903  01747A  14DE               	andwf	postinc2,w,c
 14904  01747C  6E3A               	movwf	(btemp+8)^0,c
 14905  01747E  0E00               	movlw	0
 14906  017480  14DE               	andwf	postinc2,w,c
 14907  017482  6E3B               	movwf	(btemp+9)^0,c
 14908  017484  0E80               	movlw	128
 14909  017486  14DE               	andwf	postinc2,w,c
 14910  017488  6E3C               	movwf	(btemp+10)^0,c
 14911  01748A  0E7F               	movlw	127
 14912  01748C  14DE               	andwf	postinc2,w,c
 14913  01748E  6E3D               	movwf	(btemp+11)^0,c
 14914  017490  503A               	movf	(btemp+8)^0,w,c
 14915  017492  103B               	iorwf	(btemp+9)^0,w,c
 14916  017494  103C               	iorwf	(btemp+10)^0,w,c
 14917  017496  103D               	iorwf	(btemp+11)^0,w,c
 14918  017498  A4D8               	btfss	status,2,c
 14919  01749A  D008               	goto	l7266
 14920                           
 14921                           ;stkvar	_ff1 @ sp[(0)+-4]
 14922  01749C  0EFC               	movlw	-4
 14923  01749E  6AE3               	clrf	plusw1,c
 14924  0174A0  0EFD               	movlw	-3
 14925  0174A2  6AE3               	clrf	plusw1,c
 14926  0174A4  0EFE               	movlw	-2
 14927  0174A6  6AE3               	clrf	plusw1,c
 14928  0174A8  0EFF               	movlw	-1
 14929  0174AA  6AE3               	clrf	plusw1,c
 14930  0174AC                     l7266:
 14931                           
 14932                           ;stkvar	_ff2 @ sp[(0)+-8]
 14933  0174AC  50E1               	movf	fsr1l,w,c
 14934  0174AE  0FF8               	addlw	-8
 14935  0174B0  6ED9               	movwf	fsr2l,c
 14936  0174B2  50E2               	movf	fsr1h,w,c
 14937  0174B4  6EDA               	movwf	fsr2h,c
 14938  0174B6  0EFF               	movlw	255
 14939  0174B8  22DA               	addwfc	fsr2h,f,c
 14940  0174BA  0E00               	movlw	0
 14941  0174BC  14DE               	andwf	postinc2,w,c
 14942  0174BE  6E3A               	movwf	(btemp+8)^0,c
 14943  0174C0  0E00               	movlw	0
 14944  0174C2  14DE               	andwf	postinc2,w,c
 14945  0174C4  6E3B               	movwf	(btemp+9)^0,c
 14946  0174C6  0E80               	movlw	128
 14947  0174C8  14DE               	andwf	postinc2,w,c
 14948  0174CA  6E3C               	movwf	(btemp+10)^0,c
 14949  0174CC  0E7F               	movlw	127
 14950  0174CE  14DE               	andwf	postinc2,w,c
 14951  0174D0  6E3D               	movwf	(btemp+11)^0,c
 14952  0174D2  503A               	movf	(btemp+8)^0,w,c
 14953  0174D4  103B               	iorwf	(btemp+9)^0,w,c
 14954  0174D6  103C               	iorwf	(btemp+10)^0,w,c
 14955  0174D8  103D               	iorwf	(btemp+11)^0,w,c
 14956  0174DA  A4D8               	btfss	status,2,c
 14957  0174DC  D008               	goto	l7270
 14958                           
 14959                           ;stkvar	_ff2 @ sp[(0)+-8]
 14960  0174DE  0EF8               	movlw	-8
 14961  0174E0  6AE3               	clrf	plusw1,c
 14962  0174E2  0EF9               	movlw	-7
 14963  0174E4  6AE3               	clrf	plusw1,c
 14964  0174E6  0EFA               	movlw	-6
 14965  0174E8  6AE3               	clrf	plusw1,c
 14966  0174EA  0EFB               	movlw	-5
 14967  0174EC  6AE3               	clrf	plusw1,c
 14968  0174EE                     l7270:
 14969                           
 14970                           ;stkvar	_ff2 @ sp[(0)+-8]
 14971                           ;stkvar	_ff1 @ sp[(0)+-4]
 14972  0174EE  50E1               	movf	fsr1l,w,c
 14973  0174F0  0FFC               	addlw	-4
 14974  0174F2  6ED9               	movwf	fsr2l,c
 14975  0174F4  50E2               	movf	fsr1h,w,c
 14976  0174F6  6EDA               	movwf	fsr2h,c
 14977  0174F8  0EFF               	movlw	255
 14978  0174FA  22DA               	addwfc	fsr2h,f,c
 14979  0174FC  0EF8               	movlw	-8
 14980  0174FE  50E3               	movf	plusw1,w,c
 14981  017500  18DE               	xorwf	postinc2,w,c
 14982  017502  E10D               	bnz	u6290
 14983  017504  0EF9               	movlw	-7
 14984  017506  50E3               	movf	plusw1,w,c
 14985  017508  18DE               	xorwf	postinc2,w,c
 14986  01750A  E109               	bnz	u6290
 14987  01750C  0EFA               	movlw	-6
 14988  01750E  50E3               	movf	plusw1,w,c
 14989  017510  18DE               	xorwf	postinc2,w,c
 14990  017512  E105               	bnz	u6290
 14991  017514  0EFB               	movlw	-5
 14992  017516  50E3               	movf	plusw1,w,c
 14993  017518  18DE               	xorwf	postinc2,w,c
 14994  01751A  B4D8               	btfsc	status,2,c
 14995  01751C  D002               	goto	l7274
 14996  01751E                     u6290:
 14997  01751E  9032               	bcf	btemp& (0+255),0,c
 14998  017520  D001               	goto	l2370
 14999  017522                     l7274:
 15000  017522  8032               	bsf	btemp& (0+255),0,c
 15001  017524                     l2370:
 15002                           
 15003                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15004  017524  0EF8               	movlw	248
 15005  017526  26E1               	addwf	fsr1l,f,c
 15006  017528  0EFF               	movlw	255
 15007  01752A  22E2               	addwfc	fsr1h,f,c
 15008  01752C  0012               	return		;funcret
 15009  01752E                     __end_of___fleq:
 15010                           	opt callstack 0
 15011                           
 15012 ;; *************** function ___fldiv *****************
 15013 ;; Defined at:
 15014 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15015 ;; Parameters:    Size  Location     Type
 15016 ;;  b               4  [STACK] long 
 15017 ;;  a               4  [STACK] long 
 15018 ;; Auto vars:     Size  Location     Type
 15019 ;;  grs             4  [STACK] unsigned long 
 15020 ;;  rem             4  [STACK] unsigned long 
 15021 ;;  new_exp         2  [STACK] short 
 15022 ;;  aexp            1  [STACK] unsigned char 
 15023 ;;  bexp            1  [STACK] unsigned char 
 15024 ;;  sign            1  [STACK] unsigned char 
 15025 ;; Return value:  Size  Location     Type
 15026 ;;                  4  [STACK] unsigned char 
 15027 ;; Registers used:
 15028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15029 ;; Tracked objects:
 15030 ;;		On entry : 0/2
 15031 ;;		On exit  : 0/0
 15032 ;;		Unchanged: 0/0
 15033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15038 ;;Total ram usage:        0 bytes
 15039 ;; Hardware stack levels used:    1
 15040 ;; Hardware stack levels required when called:    6
 15041 ;; This function calls:
 15042 ;;		Nothing
 15043 ;; This function is called by:
 15044 ;;		_conv_raw_result
 15045 ;;		_efgtoa
 15046 ;; This function uses a reentrant model
 15047 ;;
 15048                           
 15049                           	psect	text57
 15050  0135F2                     __ptext57:
 15051                           	opt callstack 0
 15052  0135F2                     ___fldiv:
 15053                           	opt callstack 0
 15054                           
 15055                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15056  0135F2  0E0D               	movlw	13
 15057  0135F4  26E1               	addwf	fsr1l,f,c
 15058  0135F6  0E00               	movlw	0
 15059  0135F8  22E2               	addwfc	fsr1h,f,c
 15060                           
 15061                           ;stkvar	_b @ sp[(-13)+-4]
 15062                           
 15063                           ;incstack = 0
 15064  0135FA  0EF2               	movlw	242
 15065  0135FC  24E1               	addwf	fsr1l,w,c
 15066  0135FE  6ED9               	movwf	fsr2l,c
 15067  013600  0EFF               	movlw	255
 15068  013602  20E2               	addwfc	fsr1h,w,c
 15069  013604  6EDA               	movwf	fsr2h,c
 15070  013606  50DF               	movf	indf2,w,c
 15071  013608  6E3D               	movwf	(btemp+11)^0,c
 15072  01360A  0E80               	movlw	128
 15073  01360C  163D               	andwf	(btemp+11)^0,f,c
 15074                           
 15075                           ;stkvar	_sign @ sp[(-13)+12]
 15076  01360E  0EFF               	movlw	-1
 15077  013610  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15078                           
 15079                           ;stkvar	_b @ sp[(-13)+-4]
 15080  013616  0EF2               	movlw	242
 15081  013618  24E1               	addwf	fsr1l,w,c
 15082  01361A  6ED9               	movwf	fsr2l,c
 15083  01361C  0EFF               	movlw	255
 15084  01361E  20E2               	addwfc	fsr1h,w,c
 15085  013620  6EDA               	movwf	fsr2h,c
 15086  013622  50DF               	movf	indf2,w,c
 15087  013624  6E3D               	movwf	(btemp+11)^0,c
 15088  013626  90D8               	bcf	status,0,c
 15089  013628  343D               	rlcf	(btemp+11)^0,w,c
 15090  01362A  6E3C               	movwf	(btemp+10)^0,c
 15091                           
 15092                           ;stkvar	_bexp @ sp[(-13)+11]
 15093  01362C  0EFE               	movlw	-2
 15094  01362E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15095                           
 15096                           ;stkvar	_b @ sp[(-13)+-4]
 15097  013634  0EF1               	movlw	241
 15098  013636  24E1               	addwf	fsr1l,w,c
 15099  013638  6ED9               	movwf	fsr2l,c
 15100  01363A  0EFF               	movlw	255
 15101  01363C  20E2               	addwfc	fsr1h,w,c
 15102  01363E  6EDA               	movwf	fsr2h,c
 15103  013640  AEDF               	btfss	indf2,7,c
 15104  013642  D002               	goto	l6868
 15105                           
 15106                           ;stkvar	_bexp @ sp[(-13)+11]
 15107  013644  0EFE               	movlw	-2
 15108  013646  80E3               	bsf	plusw1,0,c
 15109  013648                     l6868:
 15110                           
 15111                           ;stkvar	_bexp @ sp[(-13)+11]
 15112  013648  0EFE               	movlw	-2
 15113  01364A  50E3               	movf	plusw1,w,c
 15114  01364C  B4D8               	btfsc	status,2,c
 15115  01364E  D027               	goto	l6878
 15116                           
 15117                           ;stkvar	_bexp @ sp[(-13)+11]
 15118  013650  0EFE               	movlw	-2
 15119  013652  28E3               	incf	plusw1,w,c
 15120  013654  A4D8               	btfss	status,2,c
 15121  013656  D018               	goto	l6874
 15122  013658  0E00               	movlw	0
 15123  01365A  6E3A               	movwf	(btemp+8)^0,c
 15124  01365C  0E00               	movlw	0
 15125  01365E  6E3B               	movwf	(btemp+9)^0,c
 15126  013660  0E00               	movlw	0
 15127  013662  6E3C               	movwf	(btemp+10)^0,c
 15128  013664  0E00               	movlw	0
 15129  013666  6E3D               	movwf	(btemp+11)^0,c
 15130                           
 15131                           ;stkvar	_b @ sp[(-13)+-4]
 15132  013668  0EEF               	movlw	-17
 15133  01366A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15134  013670  0EF0               	movlw	-16
 15135  013672  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15136  013678  0EF1               	movlw	-15
 15137  01367A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15138  013680  0EF2               	movlw	-14
 15139  013682  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15140  013688                     l6874:
 15141                           
 15142                           ;stkvar	_b @ sp[(-13)+-4]
 15143  013688  0EF1               	movlw	-15
 15144  01368A  8EE3               	bsf	plusw1,7,c
 15145                           
 15146                           ;stkvar	_b @ sp[(-13)+-4]
 15147  01368C  0EF2               	movlw	242
 15148  01368E  24E1               	addwf	fsr1l,w,c
 15149  013690  6ED9               	movwf	fsr2l,c
 15150  013692  0EFF               	movlw	255
 15151  013694  20E2               	addwfc	fsr1h,w,c
 15152  013696  6EDA               	movwf	fsr2h,c
 15153  013698  0E00               	movlw	0
 15154  01369A  6EDF               	movwf	indf2,c
 15155  01369C  D018               	goto	l6880
 15156  01369E                     l6878:
 15157  01369E  0E00               	movlw	0
 15158  0136A0  6E3A               	movwf	(btemp+8)^0,c
 15159  0136A2  0E00               	movlw	0
 15160  0136A4  6E3B               	movwf	(btemp+9)^0,c
 15161  0136A6  0E00               	movlw	0
 15162  0136A8  6E3C               	movwf	(btemp+10)^0,c
 15163  0136AA  0E00               	movlw	0
 15164  0136AC  6E3D               	movwf	(btemp+11)^0,c
 15165                           
 15166                           ;stkvar	_b @ sp[(-13)+-4]
 15167  0136AE  0EEF               	movlw	-17
 15168  0136B0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15169  0136B6  0EF0               	movlw	-16
 15170  0136B8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15171  0136BE  0EF1               	movlw	-15
 15172  0136C0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15173  0136C6  0EF2               	movlw	-14
 15174  0136C8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15175  0136CE                     l6880:
 15176                           
 15177                           ;stkvar	_a @ sp[(-13)+-8]
 15178  0136CE  0EEE               	movlw	238
 15179  0136D0  24E1               	addwf	fsr1l,w,c
 15180  0136D2  6ED9               	movwf	fsr2l,c
 15181  0136D4  0EFF               	movlw	255
 15182  0136D6  20E2               	addwfc	fsr1h,w,c
 15183  0136D8  6EDA               	movwf	fsr2h,c
 15184  0136DA  50DF               	movf	indf2,w,c
 15185  0136DC  6E3D               	movwf	(btemp+11)^0,c
 15186  0136DE  0E80               	movlw	128
 15187  0136E0  163D               	andwf	(btemp+11)^0,f,c
 15188                           
 15189                           ;stkvar	_sign @ sp[(-13)+12]
 15190  0136E2  50E1               	movf	fsr1l,w,c
 15191  0136E4  0FFF               	addlw	-1
 15192  0136E6  6ED9               	movwf	fsr2l,c
 15193  0136E8  50E2               	movf	fsr1h,w,c
 15194  0136EA  6EDA               	movwf	fsr2h,c
 15195  0136EC  0EFF               	movlw	255
 15196  0136EE  22DA               	addwfc	fsr2h,f,c
 15197  0136F0  503D               	movf	(btemp+11)^0,w,c
 15198  0136F2  1ADF               	xorwf	indf2,f,c
 15199                           
 15200                           ;stkvar	_a @ sp[(-13)+-8]
 15201  0136F4  0EEE               	movlw	238
 15202  0136F6  24E1               	addwf	fsr1l,w,c
 15203  0136F8  6ED9               	movwf	fsr2l,c
 15204  0136FA  0EFF               	movlw	255
 15205  0136FC  20E2               	addwfc	fsr1h,w,c
 15206  0136FE  6EDA               	movwf	fsr2h,c
 15207  013700  50DF               	movf	indf2,w,c
 15208  013702  6E3D               	movwf	(btemp+11)^0,c
 15209  013704  90D8               	bcf	status,0,c
 15210  013706  343D               	rlcf	(btemp+11)^0,w,c
 15211  013708  6E3C               	movwf	(btemp+10)^0,c
 15212                           
 15213                           ;stkvar	_aexp @ sp[(-13)+10]
 15214  01370A  0EFD               	movlw	-3
 15215  01370C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15216                           
 15217                           ;stkvar	_a @ sp[(-13)+-8]
 15218  013712  0EED               	movlw	237
 15219  013714  24E1               	addwf	fsr1l,w,c
 15220  013716  6ED9               	movwf	fsr2l,c
 15221  013718  0EFF               	movlw	255
 15222  01371A  20E2               	addwfc	fsr1h,w,c
 15223  01371C  6EDA               	movwf	fsr2h,c
 15224  01371E  AEDF               	btfss	indf2,7,c
 15225  013720  D002               	goto	l6888
 15226                           
 15227                           ;stkvar	_aexp @ sp[(-13)+10]
 15228  013722  0EFD               	movlw	-3
 15229  013724  80E3               	bsf	plusw1,0,c
 15230  013726                     l6888:
 15231                           
 15232                           ;stkvar	_aexp @ sp[(-13)+10]
 15233  013726  0EFD               	movlw	-3
 15234  013728  50E3               	movf	plusw1,w,c
 15235  01372A  B4D8               	btfsc	status,2,c
 15236  01372C  D027               	goto	l6898
 15237                           
 15238                           ;stkvar	_aexp @ sp[(-13)+10]
 15239  01372E  0EFD               	movlw	-3
 15240  013730  28E3               	incf	plusw1,w,c
 15241  013732  A4D8               	btfss	status,2,c
 15242  013734  D018               	goto	l6894
 15243  013736  0E00               	movlw	0
 15244  013738  6E3A               	movwf	(btemp+8)^0,c
 15245  01373A  0E00               	movlw	0
 15246  01373C  6E3B               	movwf	(btemp+9)^0,c
 15247  01373E  0E00               	movlw	0
 15248  013740  6E3C               	movwf	(btemp+10)^0,c
 15249  013742  0E00               	movlw	0
 15250  013744  6E3D               	movwf	(btemp+11)^0,c
 15251                           
 15252                           ;stkvar	_a @ sp[(-13)+-8]
 15253  013746  0EEB               	movlw	-21
 15254  013748  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15255  01374E  0EEC               	movlw	-20
 15256  013750  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15257  013756  0EED               	movlw	-19
 15258  013758  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15259  01375E  0EEE               	movlw	-18
 15260  013760  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15261  013766                     l6894:
 15262                           
 15263                           ;stkvar	_a @ sp[(-13)+-8]
 15264  013766  0EED               	movlw	-19
 15265  013768  8EE3               	bsf	plusw1,7,c
 15266                           
 15267                           ;stkvar	_a @ sp[(-13)+-8]
 15268  01376A  0EEE               	movlw	238
 15269  01376C  24E1               	addwf	fsr1l,w,c
 15270  01376E  6ED9               	movwf	fsr2l,c
 15271  013770  0EFF               	movlw	255
 15272  013772  20E2               	addwfc	fsr1h,w,c
 15273  013774  6EDA               	movwf	fsr2h,c
 15274  013776  0E00               	movlw	0
 15275  013778  6EDF               	movwf	indf2,c
 15276  01377A  D018               	goto	l6900
 15277  01377C                     l6898:
 15278  01377C  0E00               	movlw	0
 15279  01377E  6E3A               	movwf	(btemp+8)^0,c
 15280  013780  0E00               	movlw	0
 15281  013782  6E3B               	movwf	(btemp+9)^0,c
 15282  013784  0E00               	movlw	0
 15283  013786  6E3C               	movwf	(btemp+10)^0,c
 15284  013788  0E00               	movlw	0
 15285  01378A  6E3D               	movwf	(btemp+11)^0,c
 15286                           
 15287                           ;stkvar	_a @ sp[(-13)+-8]
 15288  01378C  0EEB               	movlw	-21
 15289  01378E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15290  013794  0EEC               	movlw	-20
 15291  013796  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15292  01379C  0EED               	movlw	-19
 15293  01379E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15294  0137A4  0EEE               	movlw	-18
 15295  0137A6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15296  0137AC                     l6900:
 15297                           
 15298                           ;stkvar	_a @ sp[(-13)+-8]
 15299  0137AC  0EEB               	movlw	-21
 15300  0137AE  50E3               	movf	plusw1,w,c
 15301  0137B0  E139               	bnz	l6912
 15302  0137B2  0EEC               	movlw	-20
 15303  0137B4  50E3               	movf	plusw1,w,c
 15304  0137B6  E136               	bnz	l6912
 15305  0137B8  0EED               	movlw	-19
 15306  0137BA  50E3               	movf	plusw1,w,c
 15307  0137BC  E133               	bnz	l6912
 15308  0137BE  0EEE               	movlw	-18
 15309  0137C0  50E3               	movf	plusw1,w,c
 15310  0137C2  A4D8               	btfss	status,2,c
 15311  0137C4  D02F               	goto	l6912
 15312                           
 15313                           ;stkvar	_b @ sp[(-13)+-4]
 15314  0137C6  0EEF               	movlw	-17
 15315  0137C8  6AE3               	clrf	plusw1,c
 15316  0137CA  0EF0               	movlw	-16
 15317  0137CC  6AE3               	clrf	plusw1,c
 15318  0137CE  0EF1               	movlw	-15
 15319  0137D0  6AE3               	clrf	plusw1,c
 15320  0137D2  0EF2               	movlw	-14
 15321  0137D4  6AE3               	clrf	plusw1,c
 15322                           
 15323                           ;stkvar	_b @ sp[(-13)+-4]
 15324  0137D6  0EF1               	movlw	241
 15325  0137D8  24E1               	addwf	fsr1l,w,c
 15326  0137DA  6ED9               	movwf	fsr2l,c
 15327  0137DC  0EFF               	movlw	255
 15328  0137DE  20E2               	addwfc	fsr1h,w,c
 15329  0137E0  6EDA               	movwf	fsr2h,c
 15330  0137E2  0E80               	movlw	128
 15331  0137E4  12DE               	iorwf	postinc2,f,c
 15332  0137E6  0E7F               	movlw	127
 15333  0137E8  12DD               	iorwf	postdec2,f,c
 15334  0137EA                     l6906:
 15335                           
 15336                           ;stkvar	_sign @ sp[(-13)+12]
 15337  0137EA  0EFF               	movlw	-1
 15338  0137EC  006F FF8C  F03D    	movff	plusw1,btemp+11
 15339                           
 15340                           ;stkvar	_b @ sp[(-13)+-4]
 15341  0137F2  0EF2               	movlw	242
 15342  0137F4  24E1               	addwf	fsr1l,w,c
 15343  0137F6  6ED9               	movwf	fsr2l,c
 15344  0137F8  0EFF               	movlw	255
 15345  0137FA  20E2               	addwfc	fsr1h,w,c
 15346  0137FC  6EDA               	movwf	fsr2h,c
 15347  0137FE  503D               	movf	(btemp+11)^0,w,c
 15348  013800  12DF               	iorwf	indf2,f,c
 15349                           
 15350                           ;stkvar	_b @ sp[(-13)+-4]
 15351  013802  0EEF               	movlw	-17
 15352  013804  006F FF8C  F032    	movff	plusw1,btemp
 15353  01380A  0EF0               	movlw	-16
 15354  01380C  006F FF8C  F033    	movff	plusw1,btemp+1
 15355  013812  0EF1               	movlw	-15
 15356  013814  006F FF8C  F034    	movff	plusw1,btemp+2
 15357  01381A  0EF2               	movlw	-14
 15358  01381C  006F FF8C  F035    	movff	plusw1,btemp+3
 15359  013822  D19F               	goto	l2693
 15360  013824                     l6912:
 15361                           
 15362                           ;stkvar	_bexp @ sp[(-13)+11]
 15363  013824  0EFE               	movlw	-2
 15364  013826  50E3               	movf	plusw1,w,c
 15365  013828  A4D8               	btfss	status,2,c
 15366  01382A  D009               	goto	l6920
 15367  01382C  0E00               	movlw	0
 15368  01382E  6E32               	movwf	btemp^0,c
 15369  013830  0E00               	movlw	0
 15370  013832  6E33               	movwf	(btemp+1)^0,c
 15371  013834  0E00               	movlw	0
 15372  013836  6E34               	movwf	(btemp+2)^0,c
 15373  013838  0E00               	movlw	0
 15374  01383A  6E35               	movwf	(btemp+3)^0,c
 15375  01383C  D192               	goto	l2693
 15376  01383E                     l6920:
 15377                           
 15378                           ;stkvar	_bexp @ sp[(-13)+11]
 15379  01383E  0EFE               	movlw	-2
 15380  013840  50E3               	movf	plusw1,w,c
 15381  013842  6E3C               	movwf	(btemp+10)^0,c
 15382  013844  6A3D               	clrf	(btemp+11)^0,c
 15383                           
 15384                           ;stkvar	_aexp @ sp[(-13)+10]
 15385  013846  0EFD               	movlw	-3
 15386  013848  50E3               	movf	plusw1,w,c
 15387  01384A  5E3C               	subwf	(btemp+10)^0,f,c
 15388  01384C  0E00               	movlw	0
 15389  01384E  5A3D               	subwfb	(btemp+11)^0,f,c
 15390  013850  0E7F               	movlw	127
 15391  013852  263C               	addwf	(btemp+10)^0,f,c
 15392  013854  0E00               	movlw	0
 15393  013856  223D               	addwfc	(btemp+11)^0,f,c
 15394                           
 15395                           ;stkvar	_new_exp @ sp[(-13)+8]
 15396  013858  0EFB               	movlw	-5
 15397  01385A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15398  013860  0EFC               	movlw	-4
 15399  013862  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15400                           
 15401                           ;stkvar	_b @ sp[(-13)+-4]
 15402  013868  0EEF               	movlw	-17
 15403  01386A  006F FF8C  F03A    	movff	plusw1,btemp+8
 15404  013870  0EF0               	movlw	-16
 15405  013872  006F FF8C  F03B    	movff	plusw1,btemp+9
 15406  013878  0EF1               	movlw	-15
 15407  01387A  006F FF8C  F03C    	movff	plusw1,btemp+10
 15408  013880  0EF2               	movlw	-14
 15409  013882  006F FF8C  F03D    	movff	plusw1,btemp+11
 15410                           
 15411                           ;stkvar	_rem @ sp[(-13)+4]
 15412  013888  0EF7               	movlw	-9
 15413  01388A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15414  013890  0EF8               	movlw	-8
 15415  013892  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15416  013898  0EF9               	movlw	-7
 15417  01389A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15418  0138A0  0EFA               	movlw	-6
 15419  0138A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15420                           
 15421                           ;stkvar	_b @ sp[(-13)+-4]
 15422  0138A8  0EEF               	movlw	-17
 15423  0138AA  6AE3               	clrf	plusw1,c
 15424  0138AC  0EF0               	movlw	-16
 15425  0138AE  6AE3               	clrf	plusw1,c
 15426  0138B0  0EF1               	movlw	-15
 15427  0138B2  6AE3               	clrf	plusw1,c
 15428  0138B4  0EF2               	movlw	-14
 15429  0138B6  6AE3               	clrf	plusw1,c
 15430                           
 15431                           ;stkvar	_grs @ sp[(-13)+0]
 15432  0138B8  0EF3               	movlw	-13
 15433  0138BA  6AE3               	clrf	plusw1,c
 15434  0138BC  0EF4               	movlw	-12
 15435  0138BE  6AE3               	clrf	plusw1,c
 15436  0138C0  0EF5               	movlw	-11
 15437  0138C2  6AE3               	clrf	plusw1,c
 15438  0138C4  0EF6               	movlw	-10
 15439  0138C6  6AE3               	clrf	plusw1,c
 15440                           
 15441                           ;stkvar	_aexp @ sp[(-13)+10]
 15442  0138C8  0EFD               	movlw	-3
 15443  0138CA  6AE3               	clrf	plusw1,c
 15444  0138CC  D050               	goto	l6948
 15445  0138CE                     l6930:
 15446                           
 15447                           ;stkvar	_aexp @ sp[(-13)+10]
 15448  0138CE  0EFD               	movlw	-3
 15449  0138D0  50E3               	movf	plusw1,w,c
 15450  0138D2  B4D8               	btfsc	status,2,c
 15451  0138D4  D020               	goto	l6940
 15452                           
 15453                           ;stkvar	_rem @ sp[(-13)+4]
 15454  0138D6  90D8               	bcf	status,0,c
 15455  0138D8  0EF7               	movlw	-9
 15456  0138DA  36E3               	rlcf	plusw1,f,c
 15457  0138DC  0EF8               	movlw	-8
 15458  0138DE  36E3               	rlcf	plusw1,f,c
 15459  0138E0  0EF9               	movlw	-7
 15460  0138E2  36E3               	rlcf	plusw1,f,c
 15461  0138E4  0EFA               	movlw	-6
 15462  0138E6  36E3               	rlcf	plusw1,f,c
 15463                           
 15464                           ;stkvar	_b @ sp[(-13)+-4]
 15465  0138E8  90D8               	bcf	status,0,c
 15466  0138EA  0EEF               	movlw	-17
 15467  0138EC  36E3               	rlcf	plusw1,f,c
 15468  0138EE  0EF0               	movlw	-16
 15469  0138F0  36E3               	rlcf	plusw1,f,c
 15470  0138F2  0EF1               	movlw	-15
 15471  0138F4  36E3               	rlcf	plusw1,f,c
 15472  0138F6  0EF2               	movlw	-14
 15473  0138F8  36E3               	rlcf	plusw1,f,c
 15474                           
 15475                           ;stkvar	_grs @ sp[(-13)+0]
 15476  0138FA  0EF6               	movlw	-10
 15477  0138FC  AEE3               	btfss	plusw1,7,c
 15478  0138FE  D002               	goto	l6938
 15479                           
 15480                           ;stkvar	_b @ sp[(-13)+-4]
 15481  013900  0EEF               	movlw	-17
 15482  013902  80E3               	bsf	plusw1,0,c
 15483  013904                     l6938:
 15484                           
 15485                           ;stkvar	_grs @ sp[(-13)+0]
 15486  013904  90D8               	bcf	status,0,c
 15487  013906  0EF3               	movlw	-13
 15488  013908  36E3               	rlcf	plusw1,f,c
 15489  01390A  0EF4               	movlw	-12
 15490  01390C  36E3               	rlcf	plusw1,f,c
 15491  01390E  0EF5               	movlw	-11
 15492  013910  36E3               	rlcf	plusw1,f,c
 15493  013912  0EF6               	movlw	-10
 15494  013914  36E3               	rlcf	plusw1,f,c
 15495  013916                     l6940:
 15496                           
 15497                           ;stkvar	_a @ sp[(-13)+-8]
 15498                           ;stkvar	_rem @ sp[(-13)+4]
 15499  013916  50E1               	movf	fsr1l,w,c
 15500  013918  0FF7               	addlw	-9
 15501  01391A  6ED9               	movwf	fsr2l,c
 15502  01391C  50E2               	movf	fsr1h,w,c
 15503  01391E  6EDA               	movwf	fsr2h,c
 15504  013920  0EFF               	movlw	255
 15505  013922  22DA               	addwfc	fsr2h,f,c
 15506  013924  0EEB               	movlw	-21
 15507  013926  50E3               	movf	plusw1,w,c
 15508  013928  5CDE               	subwf	postinc2,w,c
 15509  01392A  0EEC               	movlw	-20
 15510  01392C  50E3               	movf	plusw1,w,c
 15511  01392E  58DE               	subwfb	postinc2,w,c
 15512  013930  0EED               	movlw	-19
 15513  013932  50E3               	movf	plusw1,w,c
 15514  013934  58DE               	subwfb	postinc2,w,c
 15515  013936  0EEE               	movlw	-18
 15516  013938  50E3               	movf	plusw1,w,c
 15517  01393A  58DE               	subwfb	postinc2,w,c
 15518  01393C  A0D8               	btfss	status,0,c
 15519  01393E  D015               	goto	l6946
 15520                           
 15521                           ;stkvar	_grs @ sp[(-13)+0]
 15522  013940  0EF6               	movlw	-10
 15523  013942  8CE3               	bsf	plusw1,6,c
 15524                           
 15525                           ;stkvar	_a @ sp[(-13)+-8]
 15526                           ;stkvar	_rem @ sp[(-13)+4]
 15527  013944  50E1               	movf	fsr1l,w,c
 15528  013946  0FF7               	addlw	-9
 15529  013948  6ED9               	movwf	fsr2l,c
 15530  01394A  50E2               	movf	fsr1h,w,c
 15531  01394C  6EDA               	movwf	fsr2h,c
 15532  01394E  0EFF               	movlw	255
 15533  013950  22DA               	addwfc	fsr2h,f,c
 15534  013952  0EEB               	movlw	-21
 15535  013954  50E3               	movf	plusw1,w,c
 15536  013956  5EDE               	subwf	postinc2,f,c
 15537  013958  0EEC               	movlw	-20
 15538  01395A  50E3               	movf	plusw1,w,c
 15539  01395C  5ADE               	subwfb	postinc2,f,c
 15540  01395E  0EED               	movlw	-19
 15541  013960  50E3               	movf	plusw1,w,c
 15542  013962  5ADE               	subwfb	postinc2,f,c
 15543  013964  0EEE               	movlw	-18
 15544  013966  50E3               	movf	plusw1,w,c
 15545  013968  5ADE               	subwfb	postinc2,f,c
 15546  01396A                     l6946:
 15547                           
 15548                           ;stkvar	_aexp @ sp[(-13)+10]
 15549  01396A  0EFD               	movlw	-3
 15550  01396C  2AE3               	incf	plusw1,f,c
 15551  01396E                     l6948:
 15552                           
 15553                           ;stkvar	_aexp @ sp[(-13)+10]
 15554  01396E  0EFD               	movlw	-3
 15555  013970  006F FF8C  F032    	movff	plusw1,btemp
 15556  013976  0E19               	movlw	25
 15557  013978  6432               	cpfsgt	btemp^0,c
 15558  01397A  D7A9               	goto	l6930
 15559                           
 15560                           ;stkvar	_rem @ sp[(-13)+4]
 15561  01397C  0EF7               	movlw	-9
 15562  01397E  50E3               	movf	plusw1,w,c
 15563  013980  E10A               	bnz	u5790
 15564  013982  0EF8               	movlw	-8
 15565  013984  50E3               	movf	plusw1,w,c
 15566  013986  E107               	bnz	u5790
 15567  013988  0EF9               	movlw	-7
 15568  01398A  50E3               	movf	plusw1,w,c
 15569  01398C  E104               	bnz	u5790
 15570  01398E  0EFA               	movlw	-6
 15571  013990  50E3               	movf	plusw1,w,c
 15572  013992  B4D8               	btfsc	status,2,c
 15573  013994  D024               	goto	l6964
 15574  013996                     u5790:
 15575                           
 15576                           ;stkvar	_grs @ sp[(-13)+0]
 15577  013996  0EF3               	movlw	-13
 15578  013998  80E3               	bsf	plusw1,0,c
 15579  01399A  D021               	goto	l6964
 15580  01399C                     l6954:
 15581                           
 15582                           ;stkvar	_b @ sp[(-13)+-4]
 15583  01399C  90D8               	bcf	status,0,c
 15584  01399E  0EEF               	movlw	-17
 15585  0139A0  36E3               	rlcf	plusw1,f,c
 15586  0139A2  0EF0               	movlw	-16
 15587  0139A4  36E3               	rlcf	plusw1,f,c
 15588  0139A6  0EF1               	movlw	-15
 15589  0139A8  36E3               	rlcf	plusw1,f,c
 15590  0139AA  0EF2               	movlw	-14
 15591  0139AC  36E3               	rlcf	plusw1,f,c
 15592                           
 15593                           ;stkvar	_grs @ sp[(-13)+0]
 15594  0139AE  0EF6               	movlw	-10
 15595  0139B0  AEE3               	btfss	plusw1,7,c
 15596  0139B2  D002               	goto	l6960
 15597                           
 15598                           ;stkvar	_b @ sp[(-13)+-4]
 15599  0139B4  0EEF               	movlw	-17
 15600  0139B6  80E3               	bsf	plusw1,0,c
 15601  0139B8                     l6960:
 15602                           
 15603                           ;stkvar	_grs @ sp[(-13)+0]
 15604  0139B8  90D8               	bcf	status,0,c
 15605  0139BA  0EF3               	movlw	-13
 15606  0139BC  36E3               	rlcf	plusw1,f,c
 15607  0139BE  0EF4               	movlw	-12
 15608  0139C0  36E3               	rlcf	plusw1,f,c
 15609  0139C2  0EF5               	movlw	-11
 15610  0139C4  36E3               	rlcf	plusw1,f,c
 15611  0139C6  0EF6               	movlw	-10
 15612  0139C8  36E3               	rlcf	plusw1,f,c
 15613                           
 15614                           ;stkvar	_new_exp @ sp[(-13)+8]
 15615  0139CA  50E1               	movf	fsr1l,w,c
 15616  0139CC  0FFB               	addlw	-5
 15617  0139CE  6ED9               	movwf	fsr2l,c
 15618  0139D0  50E2               	movf	fsr1h,w,c
 15619  0139D2  6EDA               	movwf	fsr2h,c
 15620  0139D4  0EFF               	movlw	255
 15621  0139D6  22DA               	addwfc	fsr2h,f,c
 15622  0139D8  06DE               	decf	postinc2,f,c
 15623  0139DA  0E00               	movlw	0
 15624  0139DC  5ADD               	subwfb	postdec2,f,c
 15625  0139DE                     l6964:
 15626                           
 15627                           ;stkvar	_b @ sp[(-13)+-4]
 15628  0139DE  0EF1               	movlw	-15
 15629  0139E0  AEE3               	btfss	plusw1,7,c
 15630  0139E2  D7DC               	goto	l6954
 15631                           
 15632                           ;stkvar	_aexp @ sp[(-13)+10]
 15633  0139E4  0EFD               	movlw	-3
 15634  0139E6  6AE3               	clrf	plusw1,c
 15635                           
 15636                           ;stkvar	_grs @ sp[(-13)+0]
 15637  0139E8  0EF6               	movlw	-10
 15638  0139EA  AEE3               	btfss	plusw1,7,c
 15639  0139EC  D020               	goto	l6978
 15640                           
 15641                           ;stkvar	_grs @ sp[(-13)+0]
 15642  0139EE  50E1               	movf	fsr1l,w,c
 15643  0139F0  0FF3               	addlw	-13
 15644  0139F2  6ED9               	movwf	fsr2l,c
 15645  0139F4  50E2               	movf	fsr1h,w,c
 15646  0139F6  6EDA               	movwf	fsr2h,c
 15647  0139F8  0EFF               	movlw	255
 15648  0139FA  22DA               	addwfc	fsr2h,f,c
 15649  0139FC  0EFF               	movlw	255
 15650  0139FE  14DE               	andwf	postinc2,w,c
 15651  013A00  6E3A               	movwf	(btemp+8)^0,c
 15652  013A02  0EFF               	movlw	255
 15653  013A04  14DE               	andwf	postinc2,w,c
 15654  013A06  6E3B               	movwf	(btemp+9)^0,c
 15655  013A08  0EFF               	movlw	255
 15656  013A0A  14DE               	andwf	postinc2,w,c
 15657  013A0C  6E3C               	movwf	(btemp+10)^0,c
 15658  013A0E  0E7F               	movlw	127
 15659  013A10  14DE               	andwf	postinc2,w,c
 15660  013A12  6E3D               	movwf	(btemp+11)^0,c
 15661  013A14  503A               	movf	(btemp+8)^0,w,c
 15662  013A16  103B               	iorwf	(btemp+9)^0,w,c
 15663  013A18  103C               	iorwf	(btemp+10)^0,w,c
 15664  013A1A  103D               	iorwf	(btemp+11)^0,w,c
 15665  013A1C  B4D8               	btfsc	status,2,c
 15666  013A1E  D004               	goto	l6974
 15667  013A20                     u5830:
 15668                           
 15669                           ;stkvar	_aexp @ sp[(-13)+10]
 15670  013A20  0EFD               	movlw	-3
 15671  013A22  6AE3               	clrf	plusw1,c
 15672  013A24  2AE3               	incf	plusw1,f,c
 15673  013A26  D003               	goto	l6978
 15674  013A28                     l6974:
 15675                           
 15676                           ;stkvar	_b @ sp[(-13)+-4]
 15677  013A28  0EEF               	movlw	-17
 15678  013A2A  B0E3               	btfsc	plusw1,0,c
 15679  013A2C  D7F9               	goto	u5830
 15680  013A2E                     l6978:
 15681                           
 15682                           ;stkvar	_aexp @ sp[(-13)+10]
 15683  013A2E  0EFD               	movlw	-3
 15684  013A30  50E3               	movf	plusw1,w,c
 15685  013A32  B4D8               	btfsc	status,2,c
 15686  013A34  D036               	goto	l6988
 15687                           
 15688                           ;stkvar	_b @ sp[(-13)+-4]
 15689  013A36  50E1               	movf	fsr1l,w,c
 15690  013A38  0FEF               	addlw	-17
 15691  013A3A  6ED9               	movwf	fsr2l,c
 15692  013A3C  50E2               	movf	fsr1h,w,c
 15693  013A3E  6EDA               	movwf	fsr2h,c
 15694  013A40  0EFF               	movlw	255
 15695  013A42  22DA               	addwfc	fsr2h,f,c
 15696  013A44  2ADE               	incf	postinc2,f,c
 15697  013A46  0E00               	movlw	0
 15698  013A48  22DE               	addwfc	postinc2,f,c
 15699  013A4A  22DE               	addwfc	postinc2,f,c
 15700  013A4C  22DE               	addwfc	postinc2,f,c
 15701                           
 15702                           ;stkvar	_b @ sp[(-13)+-4]
 15703  013A4E  0EF2               	movlw	-14
 15704  013A50  A0E3               	btfss	plusw1,0,c
 15705  013A52  D027               	goto	l6988
 15706  013A54  0E01               	movlw	1
 15707  013A56  6E3D               	movwf	(btemp+11)^0,c
 15708                           
 15709                           ;stkvar	_b @ sp[(-13)+-4]
 15710  013A58  50E1               	movf	fsr1l,w,c
 15711  013A5A  0FEF               	addlw	-17
 15712  013A5C  6ED9               	movwf	fsr2l,c
 15713  013A5E  50E2               	movf	fsr1h,w,c
 15714  013A60  6EDA               	movwf	fsr2h,c
 15715  013A62  0EFF               	movlw	255
 15716  013A64  22DA               	addwfc	fsr2h,f,c
 15717  013A66  283D               	incf	(btemp+11)^0,w,c
 15718  013A68  52DE               	movf	postinc2,f,c
 15719  013A6A  D008               	goto	u5870
 15720  013A6C                     u5875:
 15721  013A6C  52DE               	movf	postinc2,f,c
 15722  013A6E  90D8               	bcf	status,0,c
 15723  013A70  BEDC               	btfsc	preinc2,7,c
 15724  013A72  80D8               	bsf	status,0,c
 15725  013A74  32DD               	rrcf	postdec2,f,c
 15726  013A76  32DD               	rrcf	postdec2,f,c
 15727  013A78  32DD               	rrcf	postdec2,f,c
 15728  013A7A  32DE               	rrcf	postinc2,f,c
 15729  013A7C                     u5870:
 15730  013A7C  2EE8               	decfsz	wreg,f,c
 15731  013A7E  D7F6               	goto	u5875
 15732                           
 15733                           ;stkvar	_new_exp @ sp[(-13)+8]
 15734  013A80  0EFB               	movlw	-5
 15735  013A82  50E3               	movf	plusw1,w,c
 15736  013A84  0F01               	addlw	1
 15737  013A86  6E32               	movwf	btemp^0,c
 15738  013A88  0EFB               	movlw	-5
 15739  013A8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 15740  013A90  6A32               	clrf	btemp^0,c
 15741  013A92  0EFC               	movlw	-4
 15742  013A94  50E3               	movf	plusw1,w,c
 15743  013A96  2032               	addwfc	btemp^0,w,c
 15744  013A98  6E32               	movwf	btemp^0,c
 15745  013A9A  0EFC               	movlw	-4
 15746  013A9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 15747  013AA2                     l6988:
 15748                           
 15749                           ;stkvar	_new_exp @ sp[(-13)+8]
 15750  013AA2  0EFC               	movlw	-4
 15751  013AA4  BEE3               	btfsc	plusw1,7,c
 15752  013AA6  D01B               	goto	l6994
 15753  013AA8  0EFC               	movlw	-4
 15754  013AAA  50E3               	movf	plusw1,w,c
 15755  013AAC  E104               	bnz	u5880
 15756  013AAE  0EFB               	movlw	-5
 15757  013AB0  28E3               	incf	plusw1,w,c
 15758  013AB2  A0D8               	btfss	status,0,c
 15759  013AB4  D014               	goto	l6994
 15760  013AB6                     u5880:
 15761  013AB6  0EFF               	movlw	255
 15762  013AB8  6E3C               	movwf	(btemp+10)^0,c
 15763  013ABA  0E00               	movlw	0
 15764  013ABC  6E3D               	movwf	(btemp+11)^0,c
 15765                           
 15766                           ;stkvar	_new_exp @ sp[(-13)+8]
 15767  013ABE  0EFB               	movlw	-5
 15768  013AC0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15769  013AC6  0EFC               	movlw	-4
 15770  013AC8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15771                           
 15772                           ;stkvar	_b @ sp[(-13)+-4]
 15773  013ACE  0EEF               	movlw	-17
 15774  013AD0  6AE3               	clrf	plusw1,c
 15775  013AD2  0EF0               	movlw	-16
 15776  013AD4  6AE3               	clrf	plusw1,c
 15777  013AD6  0EF1               	movlw	-15
 15778  013AD8  6AE3               	clrf	plusw1,c
 15779  013ADA  0EF2               	movlw	-14
 15780  013ADC  6AE3               	clrf	plusw1,c
 15781  013ADE                     l6994:
 15782                           
 15783                           ;stkvar	_new_exp @ sp[(-13)+8]
 15784  013ADE  0EFC               	movlw	-4
 15785  013AE0  BEE3               	btfsc	plusw1,7,c
 15786  013AE2  D007               	goto	u5890
 15787  013AE4  0EFC               	movlw	-4
 15788  013AE6  50E3               	movf	plusw1,w,c
 15789  013AE8  E112               	bnz	l7000
 15790  013AEA  0EFB               	movlw	-5
 15791  013AEC  04E3               	decf	plusw1,w,c
 15792  013AEE  B0D8               	btfsc	status,0,c
 15793  013AF0  D00E               	goto	l7000
 15794  013AF2                     u5890:
 15795                           
 15796                           ;stkvar	_new_exp @ sp[(-13)+8]
 15797  013AF2  0EFB               	movlw	-5
 15798  013AF4  6AE3               	clrf	plusw1,c
 15799  013AF6  0EFC               	movlw	-4
 15800  013AF8  6AE3               	clrf	plusw1,c
 15801                           
 15802                           ;stkvar	_b @ sp[(-13)+-4]
 15803  013AFA  0EEF               	movlw	-17
 15804  013AFC  6AE3               	clrf	plusw1,c
 15805  013AFE  0EF0               	movlw	-16
 15806  013B00  6AE3               	clrf	plusw1,c
 15807  013B02  0EF1               	movlw	-15
 15808  013B04  6AE3               	clrf	plusw1,c
 15809  013B06  0EF2               	movlw	-14
 15810  013B08  6AE3               	clrf	plusw1,c
 15811                           
 15812                           ;stkvar	_sign @ sp[(-13)+12]
 15813  013B0A  0EFF               	movlw	-1
 15814  013B0C  6AE3               	clrf	plusw1,c
 15815  013B0E                     l7000:
 15816                           
 15817                           ;stkvar	_new_exp @ sp[(-13)+8]
 15818                           ;stkvar	_bexp @ sp[(-13)+11]
 15819  013B0E  0EFB               	movlw	-5
 15820  013B10  006F FF8C  F032    	movff	plusw1,btemp
 15821  013B16  0EFE               	movlw	-2
 15822  013B18  0060  F0CB  FFE3   	movff	btemp,plusw1
 15823                           
 15824                           ;stkvar	_bexp @ sp[(-13)+11]
 15825  013B1E  0EFE               	movlw	-2
 15826  013B20  A0E3               	btfss	plusw1,0,c
 15827  013B22  D009               	goto	l7006
 15828                           
 15829                           ;stkvar	_b @ sp[(-13)+-4]
 15830  013B24  0EF1               	movlw	241
 15831  013B26  24E1               	addwf	fsr1l,w,c
 15832  013B28  6ED9               	movwf	fsr2l,c
 15833  013B2A  0EFF               	movlw	255
 15834  013B2C  20E2               	addwfc	fsr1h,w,c
 15835  013B2E  6EDA               	movwf	fsr2h,c
 15836  013B30  0E00               	movlw	0
 15837  013B32  8EDB               	bsf	plusw2,7,c
 15838  013B34  D008               	goto	l7008
 15839  013B36                     l7006:
 15840                           
 15841                           ;stkvar	_b @ sp[(-13)+-4]
 15842  013B36  0EF1               	movlw	241
 15843  013B38  24E1               	addwf	fsr1l,w,c
 15844  013B3A  6ED9               	movwf	fsr2l,c
 15845  013B3C  0EFF               	movlw	255
 15846  013B3E  20E2               	addwfc	fsr1h,w,c
 15847  013B40  6EDA               	movwf	fsr2h,c
 15848  013B42  0E7F               	movlw	127
 15849  013B44  16DF               	andwf	indf2,f,c
 15850  013B46                     l7008:
 15851                           
 15852                           ;stkvar	_b @ sp[(-13)+-4]
 15853  013B46  0EF2               	movlw	242
 15854  013B48  24E1               	addwf	fsr1l,w,c
 15855  013B4A  6ED9               	movwf	fsr2l,c
 15856  013B4C  0EFF               	movlw	255
 15857  013B4E  20E2               	addwfc	fsr1h,w,c
 15858  013B50  6EDA               	movwf	fsr2h,c
 15859                           
 15860                           ;stkvar	_bexp @ sp[(-13)+11]
 15861  013B52  0EFE               	movlw	-2
 15862  013B54  006F FF8C  F03D    	movff	plusw1,btemp+11
 15863  013B5A  90D8               	bcf	status,0,c
 15864  013B5C  303D               	rrcf	(btemp+11)^0,w,c
 15865  013B5E  6EDF               	movwf	indf2,c
 15866  013B60  D644               	goto	l6906
 15867  013B62                     l2693:
 15868                           
 15869                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15870  013B62  0EEB               	movlw	235
 15871  013B64  26E1               	addwf	fsr1l,f,c
 15872  013B66  0EFF               	movlw	255
 15873  013B68  22E2               	addwfc	fsr1h,f,c
 15874  013B6A  0012               	return		;funcret
 15875  013B6C                     __end_of___fldiv:
 15876                           	opt callstack 0
 15877                           
 15878 ;; *************** function ___awmod *****************
 15879 ;; Defined at:
 15880 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 15881 ;; Parameters:    Size  Location     Type
 15882 ;;  dividend        2  [STACK] int 
 15883 ;;  divisor         2  [STACK] int 
 15884 ;; Auto vars:     Size  Location     Type
 15885 ;;  sign            1  [STACK] unsigned char 
 15886 ;;  counter         1  [STACK] unsigned char 
 15887 ;; Return value:  Size  Location     Type
 15888 ;;                  2  [STACK] int 
 15889 ;; Registers used:
 15890 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15891 ;; Tracked objects:
 15892 ;;		On entry : 0/1
 15893 ;;		On exit  : 0/0
 15894 ;;		Unchanged: 0/0
 15895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15900 ;;Total ram usage:        0 bytes
 15901 ;; Hardware stack levels used:    1
 15902 ;; Hardware stack levels required when called:    6
 15903 ;; This function calls:
 15904 ;;		Nothing
 15905 ;; This function is called by:
 15906 ;;		_efgtoa
 15907 ;; This function uses a reentrant model
 15908 ;;
 15909                           
 15910                           	psect	text58
 15911  016C68                     __ptext58:
 15912                           	opt callstack 0
 15913  016C68                     ___awmod:
 15914                           	opt callstack 0
 15915                           
 15916                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15917  016C68  52E6               	movf	postinc1,f,c
 15918  016C6A  52E6               	movf	postinc1,f,c
 15919                           
 15920                           ;stkvar	_sign @ sp[(-2)+0]
 15921                           
 15922                           ;incstack = 0
 15923  016C6C  0EFE               	movlw	-2
 15924  016C6E  6AE3               	clrf	plusw1,c
 15925                           
 15926                           ;stkvar	_dividend @ sp[(-2)+-2]
 15927  016C70  0EFD               	movlw	-3
 15928  016C72  AEE3               	btfss	plusw1,7,c
 15929  016C74  D009               	goto	l7232
 15930                           
 15931                           ;stkvar	_dividend @ sp[(-2)+-2]
 15932                           ;stkvar	_dividend @ sp[(-2)+-2]
 15933  016C76  0EFC               	movlw	-4
 15934  016C78  6CE3               	negf	plusw1,c
 15935  016C7A  0EFD               	movlw	-3
 15936  016C7C  1EE3               	comf	plusw1,f,c
 15937  016C7E  B0D8               	btfsc	status,0,c
 15938  016C80  2AE3               	incf	plusw1,f,c
 15939                           
 15940                           ;stkvar	_sign @ sp[(-2)+0]
 15941  016C82  0EFE               	movlw	-2
 15942  016C84  6AE3               	clrf	plusw1,c
 15943  016C86  2AE3               	incf	plusw1,f,c
 15944  016C88                     l7232:
 15945                           
 15946                           ;stkvar	_divisor @ sp[(-2)+-4]
 15947  016C88  0EFB               	movlw	-5
 15948  016C8A  AEE3               	btfss	plusw1,7,c
 15949  016C8C  D006               	goto	l7236
 15950                           
 15951                           ;stkvar	_divisor @ sp[(-2)+-4]
 15952                           ;stkvar	_divisor @ sp[(-2)+-4]
 15953  016C8E  0EFA               	movlw	-6
 15954  016C90  6CE3               	negf	plusw1,c
 15955  016C92  0EFB               	movlw	-5
 15956  016C94  1EE3               	comf	plusw1,f,c
 15957  016C96  B0D8               	btfsc	status,0,c
 15958  016C98  2AE3               	incf	plusw1,f,c
 15959  016C9A                     l7236:
 15960                           
 15961                           ;stkvar	_divisor @ sp[(-2)+-4]
 15962  016C9A  0EFA               	movlw	-6
 15963  016C9C  006F FF8C  F032    	movff	plusw1,btemp
 15964  016CA2  0EFB               	movlw	-5
 15965  016CA4  50E3               	movf	plusw1,w,c
 15966  016CA6  1032               	iorwf	btemp^0,w,c
 15967  016CA8  B4D8               	btfsc	status,2,c
 15968  016CAA  D053               	goto	u6250
 15969                           
 15970                           ;stkvar	_counter @ sp[(-2)+1]
 15971  016CAC  0EFF               	movlw	-1
 15972  016CAE  6AE3               	clrf	plusw1,c
 15973  016CB0  D012               	goto	L15
 15974  016CB2                     l7240:
 15975                           
 15976                           ;stkvar	_divisor @ sp[(-2)+-4]
 15977  016CB2  0EFA               	movlw	-6
 15978  016CB4  50E3               	movf	plusw1,w,c
 15979  016CB6  90D8               	bcf	status,0,c
 15980  016CB8  34E8               	rlcf	wreg,w,c
 15981  016CBA  6E32               	movwf	btemp^0,c
 15982  016CBC  0EFA               	movlw	-6
 15983  016CBE  0060  F0CB  FFE3   	movff	btemp,plusw1
 15984  016CC4  0EFB               	movlw	-5
 15985  016CC6  50E3               	movf	plusw1,w,c
 15986  016CC8  34E8               	rlcf	wreg,w,c
 15987  016CCA  6E32               	movwf	btemp^0,c
 15988  016CCC  0EFB               	movlw	-5
 15989  016CCE  0060  F0CB  FFE3   	movff	btemp,plusw1
 15990                           
 15991                           ;stkvar	_counter @ sp[(-2)+1]
 15992  016CD4  0EFF               	movlw	-1
 15993  016CD6                     L15:
 15994  016CD6  2AE3               	incf	plusw1,f,c
 15995                           
 15996                           ;stkvar	_divisor @ sp[(-2)+-4]
 15997  016CD8  0EFB               	movlw	-5
 15998  016CDA  AEE3               	btfss	plusw1,7,c
 15999  016CDC  D7EA               	goto	l7240
 16000  016CDE                     u6230:
 16001                           
 16002                           ;stkvar	_divisor @ sp[(-2)+-4]
 16003  016CDE  0EFA               	movlw	-6
 16004  016CE0  006F FF8C  F03C    	movff	plusw1,btemp+10
 16005  016CE6  0EFB               	movlw	-5
 16006  016CE8  006F FF8C  F03D    	movff	plusw1,btemp+11
 16007                           
 16008                           ;stkvar	_dividend @ sp[(-2)+-2]
 16009  016CEE  0EFC               	movlw	-4
 16010  016CF0  006F FF8C  F03A    	movff	plusw1,btemp+8
 16011  016CF6  0EFD               	movlw	-3
 16012  016CF8  006F FF8C  F03B    	movff	plusw1,btemp+9
 16013  016CFE  503C               	movf	(btemp+10)^0,w,c
 16014  016D00  5C3A               	subwf	(btemp+8)^0,w,c
 16015  016D02  503D               	movf	(btemp+11)^0,w,c
 16016  016D04  583B               	subwfb	(btemp+9)^0,w,c
 16017  016D06  A0D8               	btfss	status,0,c
 16018  016D08  D014               	goto	l7250
 16019                           
 16020                           ;stkvar	_divisor @ sp[(-2)+-4]
 16021                           ;stkvar	_dividend @ sp[(-2)+-2]
 16022  016D0A  0EFC               	movlw	-4
 16023  016D0C  50E3               	movf	plusw1,w,c
 16024  016D0E  6E32               	movwf	btemp^0,c
 16025  016D10  0EFA               	movlw	-6
 16026  016D12  50E3               	movf	plusw1,w,c
 16027  016D14  5E32               	subwf	btemp^0,f,c
 16028  016D16  0EFC               	movlw	-4
 16029  016D18  0060  F0CB  FFE3   	movff	btemp,plusw1
 16030  016D1E  0EFD               	movlw	-3
 16031  016D20  50E3               	movf	plusw1,w,c
 16032  016D22  6E32               	movwf	btemp^0,c
 16033  016D24  0EFB               	movlw	-5
 16034  016D26  50E3               	movf	plusw1,w,c
 16035  016D28  5A32               	subwfb	btemp^0,f,c
 16036  016D2A  0EFD               	movlw	-3
 16037  016D2C  0060  F0CB  FFE3   	movff	btemp,plusw1
 16038  016D32                     l7250:
 16039                           
 16040                           ;stkvar	_divisor @ sp[(-2)+-4]
 16041  016D32  90D8               	bcf	status,0,c
 16042  016D34  0EFB               	movlw	-5
 16043  016D36  32E3               	rrcf	plusw1,f,c
 16044  016D38  0EFA               	movlw	-6
 16045  016D3A  32E3               	rrcf	plusw1,f,c
 16046                           
 16047                           ;stkvar	_counter @ sp[(-2)+1]
 16048  016D3C  0EFF               	movlw	-1
 16049  016D3E  50E3               	movf	plusw1,w,c
 16050  016D40  6E32               	movwf	btemp^0,c
 16051  016D42  0E01               	movlw	1
 16052  016D44  5E32               	subwf	btemp^0,f,c
 16053  016D46  0EFF               	movlw	-1
 16054  016D48  0060  F0CB  FFE3   	movff	btemp,plusw1
 16055  016D4E  A4D8               	btfss	status,2,c
 16056  016D50  D7C6               	goto	u6230
 16057  016D52                     u6250:
 16058                           
 16059                           ;stkvar	_sign @ sp[(-2)+0]
 16060  016D52  0EFE               	movlw	-2
 16061  016D54  50E3               	movf	plusw1,w,c
 16062  016D56  B4D8               	btfsc	status,2,c
 16063  016D58  D006               	goto	l7258
 16064                           
 16065                           ;stkvar	_dividend @ sp[(-2)+-2]
 16066                           ;stkvar	_dividend @ sp[(-2)+-2]
 16067  016D5A  0EFC               	movlw	-4
 16068  016D5C  6CE3               	negf	plusw1,c
 16069  016D5E  0EFD               	movlw	-3
 16070  016D60  1EE3               	comf	plusw1,f,c
 16071  016D62  B0D8               	btfsc	status,0,c
 16072  016D64  2AE3               	incf	plusw1,f,c
 16073  016D66                     l7258:
 16074                           
 16075                           ;stkvar	_dividend @ sp[(-2)+-2]
 16076  016D66  0EFC               	movlw	-4
 16077  016D68  006F FF8C  F032    	movff	plusw1,btemp
 16078  016D6E  0EFD               	movlw	-3
 16079  016D70  006F FF8C  F033    	movff	plusw1,btemp+1
 16080                           
 16081                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16082  016D76  0EFA               	movlw	250
 16083  016D78  26E1               	addwf	fsr1l,f,c
 16084  016D7A  0EFF               	movlw	255
 16085  016D7C  22E2               	addwfc	fsr1h,f,c
 16086  016D7E  0012               	return		;funcret
 16087  016D80                     __end_of___awmod:
 16088                           	opt callstack 0
 16089                           
 16090 ;; *************** function ___awdiv *****************
 16091 ;; Defined at:
 16092 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16093 ;; Parameters:    Size  Location     Type
 16094 ;;  dividend        2  [STACK] int 
 16095 ;;  divisor         2  [STACK] int 
 16096 ;; Auto vars:     Size  Location     Type
 16097 ;;  quotient        2  [STACK] int 
 16098 ;;  sign            1  [STACK] unsigned char 
 16099 ;;  counter         1  [STACK] unsigned char 
 16100 ;; Return value:  Size  Location     Type
 16101 ;;                  2  [STACK] int 
 16102 ;; Registers used:
 16103 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16104 ;; Tracked objects:
 16105 ;;		On entry : 0/1
 16106 ;;		On exit  : 0/0
 16107 ;;		Unchanged: 0/0
 16108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16113 ;;Total ram usage:        0 bytes
 16114 ;; Hardware stack levels used:    1
 16115 ;; Hardware stack levels required when called:    6
 16116 ;; This function calls:
 16117 ;;		Nothing
 16118 ;; This function is called by:
 16119 ;;		_efgtoa
 16120 ;; This function uses a reentrant model
 16121 ;;
 16122                           
 16123                           	psect	text59
 16124  016780                     __ptext59:
 16125                           	opt callstack 0
 16126  016780                     ___awdiv:
 16127                           	opt callstack 0
 16128                           
 16129                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16130  016780  52E6               	movf	postinc1,f,c
 16131  016782  52E6               	movf	postinc1,f,c
 16132  016784  52E6               	movf	postinc1,f,c
 16133  016786  52E6               	movf	postinc1,f,c
 16134                           
 16135                           ;stkvar	_sign @ sp[(-4)+2]
 16136                           
 16137                           ;incstack = 0
 16138  016788  0EFE               	movlw	-2
 16139  01678A  6AE3               	clrf	plusw1,c
 16140                           
 16141                           ;stkvar	_divisor @ sp[(-4)+-4]
 16142  01678C  0EF9               	movlw	-7
 16143  01678E  AEE3               	btfss	plusw1,7,c
 16144  016790  D009               	goto	l7186
 16145                           
 16146                           ;stkvar	_divisor @ sp[(-4)+-4]
 16147                           ;stkvar	_divisor @ sp[(-4)+-4]
 16148  016792  0EF8               	movlw	-8
 16149  016794  6CE3               	negf	plusw1,c
 16150  016796  0EF9               	movlw	-7
 16151  016798  1EE3               	comf	plusw1,f,c
 16152  01679A  B0D8               	btfsc	status,0,c
 16153  01679C  2AE3               	incf	plusw1,f,c
 16154                           
 16155                           ;stkvar	_sign @ sp[(-4)+2]
 16156  01679E  0EFE               	movlw	-2
 16157  0167A0  6AE3               	clrf	plusw1,c
 16158  0167A2  2AE3               	incf	plusw1,f,c
 16159  0167A4                     l7186:
 16160                           
 16161                           ;stkvar	_dividend @ sp[(-4)+-2]
 16162  0167A4  0EFB               	movlw	-5
 16163  0167A6  AEE3               	btfss	plusw1,7,c
 16164  0167A8  D008               	goto	l7192
 16165                           
 16166                           ;stkvar	_dividend @ sp[(-4)+-2]
 16167                           ;stkvar	_dividend @ sp[(-4)+-2]
 16168  0167AA  0EFA               	movlw	-6
 16169  0167AC  6CE3               	negf	plusw1,c
 16170  0167AE  0EFB               	movlw	-5
 16171  0167B0  1EE3               	comf	plusw1,f,c
 16172  0167B2  B0D8               	btfsc	status,0,c
 16173  0167B4  2AE3               	incf	plusw1,f,c
 16174                           
 16175                           ;stkvar	_sign @ sp[(-4)+2]
 16176  0167B6  0EFE               	movlw	-2
 16177  0167B8  70E3               	btg	plusw1,0,c
 16178  0167BA                     l7192:
 16179                           
 16180                           ;stkvar	_quotient @ sp[(-4)+0]
 16181  0167BA  0EFC               	movlw	-4
 16182  0167BC  6AE3               	clrf	plusw1,c
 16183  0167BE  0EFD               	movlw	-3
 16184  0167C0  6AE3               	clrf	plusw1,c
 16185                           
 16186                           ;stkvar	_divisor @ sp[(-4)+-4]
 16187  0167C2  0EF8               	movlw	-8
 16188  0167C4  006F FF8C  F032    	movff	plusw1,btemp
 16189  0167CA  0EF9               	movlw	-7
 16190  0167CC  50E3               	movf	plusw1,w,c
 16191  0167CE  1032               	iorwf	btemp^0,w,c
 16192  0167D0  B4D8               	btfsc	status,2,c
 16193  0167D2  D066               	goto	u6180
 16194                           
 16195                           ;stkvar	_counter @ sp[(-4)+3]
 16196  0167D4  0EFF               	movlw	-1
 16197  0167D6  6AE3               	clrf	plusw1,c
 16198  0167D8  D012               	goto	L16
 16199  0167DA                     l7198:
 16200                           
 16201                           ;stkvar	_divisor @ sp[(-4)+-4]
 16202  0167DA  0EF8               	movlw	-8
 16203  0167DC  50E3               	movf	plusw1,w,c
 16204  0167DE  90D8               	bcf	status,0,c
 16205  0167E0  34E8               	rlcf	wreg,w,c
 16206  0167E2  6E32               	movwf	btemp^0,c
 16207  0167E4  0EF8               	movlw	-8
 16208  0167E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 16209  0167EC  0EF9               	movlw	-7
 16210  0167EE  50E3               	movf	plusw1,w,c
 16211  0167F0  34E8               	rlcf	wreg,w,c
 16212  0167F2  6E32               	movwf	btemp^0,c
 16213  0167F4  0EF9               	movlw	-7
 16214  0167F6  0060  F0CB  FFE3   	movff	btemp,plusw1
 16215                           
 16216                           ;stkvar	_counter @ sp[(-4)+3]
 16217  0167FC  0EFF               	movlw	-1
 16218  0167FE                     L16:
 16219  0167FE  2AE3               	incf	plusw1,f,c
 16220                           
 16221                           ;stkvar	_divisor @ sp[(-4)+-4]
 16222  016800  0EF9               	movlw	-7
 16223  016802  AEE3               	btfss	plusw1,7,c
 16224  016804  D7EA               	goto	l7198
 16225  016806                     u6160:
 16226                           
 16227                           ;stkvar	_quotient @ sp[(-4)+0]
 16228  016806  0EFC               	movlw	-4
 16229  016808  50E3               	movf	plusw1,w,c
 16230  01680A  90D8               	bcf	status,0,c
 16231  01680C  34E8               	rlcf	wreg,w,c
 16232  01680E  6E32               	movwf	btemp^0,c
 16233  016810  0EFC               	movlw	-4
 16234  016812  0060  F0CB  FFE3   	movff	btemp,plusw1
 16235  016818  0EFD               	movlw	-3
 16236  01681A  50E3               	movf	plusw1,w,c
 16237  01681C  34E8               	rlcf	wreg,w,c
 16238  01681E  6E32               	movwf	btemp^0,c
 16239  016820  0EFD               	movlw	-3
 16240  016822  0060  F0CB  FFE3   	movff	btemp,plusw1
 16241                           
 16242                           ;stkvar	_divisor @ sp[(-4)+-4]
 16243  016828  0EF8               	movlw	-8
 16244  01682A  006F FF8C  F03C    	movff	plusw1,btemp+10
 16245  016830  0EF9               	movlw	-7
 16246  016832  006F FF8C  F03D    	movff	plusw1,btemp+11
 16247                           
 16248                           ;stkvar	_dividend @ sp[(-4)+-2]
 16249  016838  0EFA               	movlw	-6
 16250  01683A  006F FF8C  F03A    	movff	plusw1,btemp+8
 16251  016840  0EFB               	movlw	-5
 16252  016842  006F FF8C  F03B    	movff	plusw1,btemp+9
 16253  016848  503C               	movf	(btemp+10)^0,w,c
 16254  01684A  5C3A               	subwf	(btemp+8)^0,w,c
 16255  01684C  503D               	movf	(btemp+11)^0,w,c
 16256  01684E  583B               	subwfb	(btemp+9)^0,w,c
 16257  016850  A0D8               	btfss	status,0,c
 16258  016852  D016               	goto	l7212
 16259                           
 16260                           ;stkvar	_divisor @ sp[(-4)+-4]
 16261                           ;stkvar	_dividend @ sp[(-4)+-2]
 16262  016854  0EFA               	movlw	-6
 16263  016856  50E3               	movf	plusw1,w,c
 16264  016858  6E32               	movwf	btemp^0,c
 16265  01685A  0EF8               	movlw	-8
 16266  01685C  50E3               	movf	plusw1,w,c
 16267  01685E  5E32               	subwf	btemp^0,f,c
 16268  016860  0EFA               	movlw	-6
 16269  016862  0060  F0CB  FFE3   	movff	btemp,plusw1
 16270  016868  0EFB               	movlw	-5
 16271  01686A  50E3               	movf	plusw1,w,c
 16272  01686C  6E32               	movwf	btemp^0,c
 16273  01686E  0EF9               	movlw	-7
 16274  016870  50E3               	movf	plusw1,w,c
 16275  016872  5A32               	subwfb	btemp^0,f,c
 16276  016874  0EFB               	movlw	-5
 16277  016876  0060  F0CB  FFE3   	movff	btemp,plusw1
 16278                           
 16279                           ;stkvar	_quotient @ sp[(-4)+0]
 16280  01687C  0EFC               	movlw	-4
 16281  01687E  80E3               	bsf	plusw1,0,c
 16282  016880                     l7212:
 16283                           
 16284                           ;stkvar	_divisor @ sp[(-4)+-4]
 16285  016880  90D8               	bcf	status,0,c
 16286  016882  0EF9               	movlw	-7
 16287  016884  32E3               	rrcf	plusw1,f,c
 16288  016886  0EF8               	movlw	-8
 16289  016888  32E3               	rrcf	plusw1,f,c
 16290                           
 16291                           ;stkvar	_counter @ sp[(-4)+3]
 16292  01688A  0EFF               	movlw	-1
 16293  01688C  50E3               	movf	plusw1,w,c
 16294  01688E  6E32               	movwf	btemp^0,c
 16295  016890  0E01               	movlw	1
 16296  016892  5E32               	subwf	btemp^0,f,c
 16297  016894  0EFF               	movlw	-1
 16298  016896  0060  F0CB  FFE3   	movff	btemp,plusw1
 16299  01689C  A4D8               	btfss	status,2,c
 16300  01689E  D7B3               	goto	u6160
 16301  0168A0                     u6180:
 16302                           
 16303                           ;stkvar	_sign @ sp[(-4)+2]
 16304  0168A0  0EFE               	movlw	-2
 16305  0168A2  50E3               	movf	plusw1,w,c
 16306  0168A4  B4D8               	btfsc	status,2,c
 16307  0168A6  D006               	goto	l7220
 16308                           
 16309                           ;stkvar	_quotient @ sp[(-4)+0]
 16310                           ;stkvar	_quotient @ sp[(-4)+0]
 16311  0168A8  0EFC               	movlw	-4
 16312  0168AA  6CE3               	negf	plusw1,c
 16313  0168AC  0EFD               	movlw	-3
 16314  0168AE  1EE3               	comf	plusw1,f,c
 16315  0168B0  B0D8               	btfsc	status,0,c
 16316  0168B2  2AE3               	incf	plusw1,f,c
 16317  0168B4                     l7220:
 16318                           
 16319                           ;stkvar	_quotient @ sp[(-4)+0]
 16320  0168B4  0EFC               	movlw	-4
 16321  0168B6  006F FF8C  F032    	movff	plusw1,btemp
 16322  0168BC  0EFD               	movlw	-3
 16323  0168BE  006F FF8C  F033    	movff	plusw1,btemp+1
 16324                           
 16325                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16326  0168C4  0EF8               	movlw	248
 16327  0168C6  26E1               	addwf	fsr1l,f,c
 16328  0168C8  0EFF               	movlw	255
 16329  0168CA  22E2               	addwfc	fsr1h,f,c
 16330  0168CC  0012               	return		;funcret
 16331  0168CE                     __end_of___awdiv:
 16332                           	opt callstack 0
 16333                           
 16334 ;; *************** function _dtoa *****************
 16335 ;; Defined at:
 16336 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16337 ;; Parameters:    Size  Location     Type
 16338 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16339 ;;		 -> f(6), NULL(0), 
 16340 ;;  d               8  [STACK] long long 
 16341 ;; Auto vars:     Size  Location     Type
 16342 ;;  n               8  [STACK] long long 
 16343 ;;  i               2  [STACK] int 
 16344 ;;  s               2  [STACK] int 
 16345 ;;  w               2  [STACK] int 
 16346 ;;  p               2  [STACK] int 
 16347 ;; Return value:  Size  Location     Type
 16348 ;;                  2  [STACK] int 
 16349 ;; Registers used:
 16350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16351 ;; Tracked objects:
 16352 ;;		On entry : 0/1
 16353 ;;		On exit  : 0/0
 16354 ;;		Unchanged: 0/0
 16355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16360 ;;Total ram usage:        0 bytes
 16361 ;; Hardware stack levels used:    1
 16362 ;; Hardware stack levels required when called:   11
 16363 ;; This function calls:
 16364 ;;		___aodiv
 16365 ;;		___aomod
 16366 ;;		_abs
 16367 ;;		_pad
 16368 ;; This function is called by:
 16369 ;;		_vfpfcnvrt
 16370 ;; This function uses a reentrant model
 16371 ;;
 16372                           
 16373                           	psect	text60
 16374  014018                     __ptext60:
 16375                           	opt callstack 0
 16376  014018                     _dtoa:
 16377                           	opt callstack 0
 16378                           
 16379                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16380  014018  0E12               	movlw	18
 16381  01401A  26E1               	addwf	fsr1l,f,c
 16382  01401C  0E00               	movlw	0
 16383  01401E  22E2               	addwfc	fsr1h,f,c
 16384                           
 16385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16386                           ;stkvar	_d @ sp[(-18)+-10]
 16387                           
 16388                           ;incstack = 0
 16389  014020  0EE4               	movlw	228
 16390  014022  24E1               	addwf	fsr1l,w,c
 16391  014024  6ED9               	movwf	fsr2l,c
 16392  014026  0EFF               	movlw	255
 16393  014028  20E2               	addwfc	fsr1h,w,c
 16394  01402A  6EDA               	movwf	fsr2h,c
 16395                           
 16396                           ;stkvar	_n @ sp[(-18)+2]
 16397  01402C  0E08               	movlw	8
 16398  01402E  6E32               	movwf	btemp^0,c
 16399  014030  0EF0               	movlw	-16
 16400  014032                     us922999:
 16401  014032  006F FF7B FFE3     	movff	postinc2,plusw1
 16402  014038  28E8               	incf	wreg,w,c
 16403  01403A  2E32               	decfsz	btemp^0,f,c
 16404  01403C  D7FA               	bra	us922999
 16405                           
 16406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16407                           ;stkvar	_n @ sp[(-18)+2]
 16408  01403E  0EF7               	movlw	-9
 16409  014040  AEE3               	btfss	plusw1,7,c
 16410  014042  D002               	goto	u9230
 16411  014044  0E01               	movlw	1
 16412  014046  D001               	goto	u9240
 16413  014048                     u9230:
 16414  014048  0E00               	movlw	0
 16415  01404A                     u9240:
 16416  01404A  6E3C               	movwf	(btemp+10)^0,c
 16417  01404C  6A3D               	clrf	(btemp+11)^0,c
 16418                           
 16419                           ;stkvar	_s @ sp[(-18)+12]
 16420  01404E  0EFA               	movlw	-6
 16421  014050  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16422  014056  0EFB               	movlw	-5
 16423  014058  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16424                           
 16425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16426                           ;stkvar	_s @ sp[(-18)+12]
 16427  01405E  0EFA               	movlw	-6
 16428  014060  006F FF8C  F032    	movff	plusw1,btemp
 16429  014066  0EFB               	movlw	-5
 16430  014068  50E3               	movf	plusw1,w,c
 16431  01406A  1032               	iorwf	btemp^0,w,c
 16432  01406C  B4D8               	btfsc	status,2,c
 16433  01406E  D025               	goto	u9260
 16434                           
 16435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16436                           ;stkvar	_n @ sp[(-18)+2]
 16437                           ;stkvar	_n @ sp[(-18)+2]
 16438  014070  0EF0               	movlw	-16
 16439  014072  6CE3               	negf	plusw1,c
 16440  014074  0EF1               	movlw	-15
 16441  014076  1EE3               	comf	plusw1,f,c
 16442  014078  0EF2               	movlw	-14
 16443  01407A  1EE3               	comf	plusw1,f,c
 16444  01407C  0EF3               	movlw	-13
 16445  01407E  1EE3               	comf	plusw1,f,c
 16446  014080  0EF4               	movlw	-12
 16447  014082  1EE3               	comf	plusw1,f,c
 16448  014084  0EF5               	movlw	-11
 16449  014086  1EE3               	comf	plusw1,f,c
 16450  014088  0EF6               	movlw	-10
 16451  01408A  1EE3               	comf	plusw1,f,c
 16452  01408C  0EF7               	movlw	-9
 16453  01408E  1EE3               	comf	plusw1,f,c
 16454  014090  E314               	bnc	u9260
 16455  014092  0EF1               	movlw	-15
 16456  014094  2AE3               	incf	plusw1,f,c
 16457  014096  E311               	bnc	u9260
 16458  014098  0EF2               	movlw	-14
 16459  01409A  2AE3               	incf	plusw1,f,c
 16460  01409C  E30E               	bnc	u9260
 16461  01409E  0EF3               	movlw	-13
 16462  0140A0  2AE3               	incf	plusw1,f,c
 16463  0140A2  E30B               	bnc	u9260
 16464  0140A4  0EF4               	movlw	-12
 16465  0140A6  2AE3               	incf	plusw1,f,c
 16466  0140A8  E308               	bnc	u9260
 16467  0140AA  0EF5               	movlw	-11
 16468  0140AC  2AE3               	incf	plusw1,f,c
 16469  0140AE  E305               	bnc	u9260
 16470  0140B0  0EF6               	movlw	-10
 16471  0140B2  2AE3               	incf	plusw1,f,c
 16472  0140B4  E302               	bnc	u9260
 16473  0140B6  0EF7               	movlw	-9
 16474  0140B8  2AE3               	incf	plusw1,f,c
 16475  0140BA                     u9260:
 16476                           
 16477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16478  0140BA  AE1E               	btfss	(_prec+1)^0,7,c
 16479                           
 16480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16481  0140BC  921F               	bcf	_flags^0,1,c
 16482                           
 16483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16484  0140BE  BE1E               	btfsc	(_prec+1)^0,7,c
 16485  0140C0  D005               	goto	u9280
 16486  0140C2  501E               	movf	(_prec+1)^0,w,c
 16487  0140C4  E110               	bnz	l9858
 16488  0140C6  041D               	decf	_prec^0,w,c
 16489  0140C8  B0D8               	btfsc	status,0,c
 16490  0140CA  D00D               	goto	l9858
 16491  0140CC                     u9280:
 16492  0140CC  0E01               	movlw	1
 16493  0140CE  6E3C               	movwf	(btemp+10)^0,c
 16494  0140D0  0E00               	movlw	0
 16495  0140D2  6E3D               	movwf	(btemp+11)^0,c
 16496                           
 16497                           ;stkvar	_p @ sp[(-18)+16]
 16498  0140D4  0EFE               	movlw	-2
 16499  0140D6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16500  0140DC  0EFF               	movlw	-1
 16501  0140DE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16502  0140E4  D008               	goto	l1897
 16503  0140E6                     l9858:
 16504                           
 16505                           ;stkvar	_p @ sp[(-18)+16]
 16506  0140E6  0EFE               	movlw	-2
 16507  0140E8  0060  F077  FFE3   	movff	_prec,plusw1
 16508  0140EE  0EFF               	movlw	-1
 16509  0140F0  0060  F07B  FFE3   	movff	_prec+1,plusw1
 16510  0140F6                     l1897:
 16511                           
 16512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 16513                           ;stkvar	_w @ sp[(-18)+14]
 16514  0140F6  0EFC               	movlw	-4
 16515  0140F8  0060  F06F  FFE3   	movff	_width,plusw1
 16516  0140FE  0EFD               	movlw	-3
 16517  014100  0060  F073  FFE3   	movff	_width+1,plusw1
 16518                           
 16519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 16520                           ;stkvar	_s @ sp[(-18)+12]
 16521  014106  0EFA               	movlw	-6
 16522  014108  006F FF8C  F032    	movff	plusw1,btemp
 16523  01410E  0EFB               	movlw	-5
 16524  014110  50E3               	movf	plusw1,w,c
 16525  014112  1032               	iorwf	btemp^0,w,c
 16526  014114  A4D8               	btfss	status,2,c
 16527  014116  D002               	goto	u9300
 16528  014118  A41F               	btfss	_flags^0,2,c
 16529  01411A  D00A               	goto	l9866
 16530  01411C                     u9300:
 16531                           
 16532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 16533                           ;stkvar	_w @ sp[(-18)+14]
 16534  01411C  50E1               	movf	fsr1l,w,c
 16535  01411E  0FFC               	addlw	-4
 16536  014120  6ED9               	movwf	fsr2l,c
 16537  014122  50E2               	movf	fsr1h,w,c
 16538  014124  6EDA               	movwf	fsr2h,c
 16539  014126  0EFF               	movlw	255
 16540  014128  22DA               	addwfc	fsr2h,f,c
 16541  01412A  06DE               	decf	postinc2,f,c
 16542  01412C  0E00               	movlw	0
 16543  01412E  5ADD               	subwfb	postdec2,f,c
 16544  014130                     l9866:
 16545                           
 16546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 16547  014130  0E4F               	movlw	79
 16548  014132  6E3C               	movwf	(btemp+10)^0,c
 16549  014134  0E00               	movlw	0
 16550  014136  6E3D               	movwf	(btemp+11)^0,c
 16551                           
 16552                           ;stkvar	_i @ sp[(-18)+10]
 16553  014138  0EF8               	movlw	-8
 16554  01413A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16555  014140  0EF9               	movlw	-7
 16556  014142  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16557                           
 16558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 16559  014148  0101               	movlb	1	; () banked
 16560  01414A  6BF2               	clrf	(_dbuf+79)& (0+255),b
 16561                           
 16562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16563  01414C  D109               	goto	l9880
 16564  01414E                     l9870:
 16565                           
 16566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 16567                           ;stkvar	_i @ sp[(-18)+10]
 16568  01414E  50E1               	movf	fsr1l,w,c
 16569  014150  0FF8               	addlw	-8
 16570  014152  6ED9               	movwf	fsr2l,c
 16571  014154  50E2               	movf	fsr1h,w,c
 16572  014156  6EDA               	movwf	fsr2h,c
 16573  014158  0EFF               	movlw	255
 16574  01415A  22DA               	addwfc	fsr2h,f,c
 16575  01415C  06DE               	decf	postinc2,f,c
 16576  01415E  0E00               	movlw	0
 16577  014160  5ADD               	subwfb	postdec2,f,c
 16578                           
 16579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 16580  014162  0E0A               	movlw	10
 16581  014164  6EE6               	movwf	postinc1,c
 16582  014166  0E00               	movlw	0
 16583  014168  6EE6               	movwf	postinc1,c
 16584  01416A  0E00               	movlw	0
 16585  01416C  6EE6               	movwf	postinc1,c
 16586  01416E  0E00               	movlw	0
 16587  014170  6EE6               	movwf	postinc1,c
 16588  014172  0E00               	movlw	0
 16589  014174  6EE6               	movwf	postinc1,c
 16590  014176  0E00               	movlw	0
 16591  014178  6EE6               	movwf	postinc1,c
 16592  01417A  0E00               	movlw	0
 16593  01417C  6EE6               	movwf	postinc1,c
 16594  01417E  0E00               	movlw	0
 16595  014180  6EE6               	movwf	postinc1,c
 16596                           
 16597                           ;stkvar	_n @ sp[(-26)+2]
 16598  014182  50E1               	movf	fsr1l,w,c
 16599  014184  0FE8               	addlw	-24
 16600  014186  6ED9               	movwf	fsr2l,c
 16601  014188  50E2               	movf	fsr1h,w,c
 16602  01418A  6EDA               	movwf	fsr2h,c
 16603  01418C  0EFF               	movlw	255
 16604  01418E  22DA               	addwfc	fsr2h,f,c
 16605  014190  006F FF7B FFE6     	movff	postinc2,postinc1
 16606  014196  006F FF7B FFE6     	movff	postinc2,postinc1
 16607  01419C  006F FF7B FFE6     	movff	postinc2,postinc1
 16608  0141A2  006F FF7B FFE6     	movff	postinc2,postinc1
 16609  0141A8  006F FF7B FFE6     	movff	postinc2,postinc1
 16610  0141AE  006F FF7B FFE6     	movff	postinc2,postinc1
 16611  0141B4  006F FF7B FFE6     	movff	postinc2,postinc1
 16612  0141BA  006F FF7B FFE6     	movff	postinc2,postinc1
 16613  0141C0  EC9C  F0AC         	call	___aomod	;wreg free
 16614  0141C4  52E5               	movf	postdec1,f,c
 16615  0141C6  006F FF9C  F049    	movff	indf1,btemp+23
 16616  0141CC  52E5               	movf	postdec1,f,c
 16617  0141CE  006F FF9C  F048    	movff	indf1,btemp+22
 16618  0141D4  52E5               	movf	postdec1,f,c
 16619  0141D6  006F FF9C  F047    	movff	indf1,btemp+21
 16620  0141DC  52E5               	movf	postdec1,f,c
 16621  0141DE  006F FF9C  F046    	movff	indf1,btemp+20
 16622  0141E4  52E5               	movf	postdec1,f,c
 16623  0141E6  006F FF9C  F045    	movff	indf1,btemp+19
 16624  0141EC  52E5               	movf	postdec1,f,c
 16625  0141EE  006F FF9C  F044    	movff	indf1,btemp+18
 16626  0141F4  52E5               	movf	postdec1,f,c
 16627  0141F6  006F FF9C  F043    	movff	indf1,btemp+17
 16628  0141FC  52E5               	movf	postdec1,f,c
 16629  0141FE  006F FF9C  F042    	movff	indf1,btemp+16
 16630  014204  0EF8               	movlw	248
 16631  014206  26E1               	addwf	fsr1l,f,c
 16632  014208  0EFF               	movlw	255
 16633  01420A  22E2               	addwfc	fsr1h,f,c
 16634  01420C  0060  F108  F03C   	movff	btemp+16,btemp+10
 16635  014212  0060  F10C  F03D   	movff	btemp+17,btemp+11
 16636  014218  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 16637  01421E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 16638  014224  ECE2  F0C1         	call	_abs	;wreg free
 16639  014228  0E30               	movlw	48
 16640  01422A  2632               	addwf	btemp^0,f,c
 16641                           
 16642                           ;stkvar	_i @ sp[(-18)+10]
 16643  01422C  0EF8               	movlw	-8
 16644  01422E  006F FF8C  F03C    	movff	plusw1,btemp+10
 16645  014234  0EF9               	movlw	-7
 16646  014236  006F FF8C  F03D    	movff	plusw1,btemp+11
 16647  01423C  0EA3               	movlw	low _dbuf
 16648  01423E  243C               	addwf	(btemp+10)^0,w,c
 16649  014240  6ED9               	movwf	fsr2l,c
 16650  014242  0E01               	movlw	high _dbuf
 16651  014244  203D               	addwfc	(btemp+11)^0,w,c
 16652  014246  6EDA               	movwf	fsr2h,c
 16653  014248  0060  F0CB  FFDF   	movff	btemp,indf2
 16654                           
 16655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16656                           ;stkvar	_p @ sp[(-18)+16]
 16657  01424E  50E1               	movf	fsr1l,w,c
 16658  014250  0FFE               	addlw	-2
 16659  014252  6ED9               	movwf	fsr2l,c
 16660  014254  50E2               	movf	fsr1h,w,c
 16661  014256  6EDA               	movwf	fsr2h,c
 16662  014258  0EFF               	movlw	255
 16663  01425A  22DA               	addwfc	fsr2h,f,c
 16664  01425C  06DE               	decf	postinc2,f,c
 16665  01425E  0E00               	movlw	0
 16666  014260  5ADD               	subwfb	postdec2,f,c
 16667                           
 16668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16669                           ;stkvar	_w @ sp[(-18)+14]
 16670  014262  50E1               	movf	fsr1l,w,c
 16671  014264  0FFC               	addlw	-4
 16672  014266  6ED9               	movwf	fsr2l,c
 16673  014268  50E2               	movf	fsr1h,w,c
 16674  01426A  6EDA               	movwf	fsr2h,c
 16675  01426C  0EFF               	movlw	255
 16676  01426E  22DA               	addwfc	fsr2h,f,c
 16677  014270  06DE               	decf	postinc2,f,c
 16678  014272  0E00               	movlw	0
 16679  014274  5ADD               	subwfb	postdec2,f,c
 16680                           
 16681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16682  014276  0E0A               	movlw	10
 16683  014278  6EE6               	movwf	postinc1,c
 16684  01427A  0E00               	movlw	0
 16685  01427C  6EE6               	movwf	postinc1,c
 16686  01427E  0E00               	movlw	0
 16687  014280  6EE6               	movwf	postinc1,c
 16688  014282  0E00               	movlw	0
 16689  014284  6EE6               	movwf	postinc1,c
 16690  014286  0E00               	movlw	0
 16691  014288  6EE6               	movwf	postinc1,c
 16692  01428A  0E00               	movlw	0
 16693  01428C  6EE6               	movwf	postinc1,c
 16694  01428E  0E00               	movlw	0
 16695  014290  6EE6               	movwf	postinc1,c
 16696  014292  0E00               	movlw	0
 16697  014294  6EE6               	movwf	postinc1,c
 16698                           
 16699                           ;stkvar	_n @ sp[(-26)+2]
 16700  014296  50E1               	movf	fsr1l,w,c
 16701  014298  0FE8               	addlw	-24
 16702  01429A  6ED9               	movwf	fsr2l,c
 16703  01429C  50E2               	movf	fsr1h,w,c
 16704  01429E  6EDA               	movwf	fsr2h,c
 16705  0142A0  0EFF               	movlw	255
 16706  0142A2  22DA               	addwfc	fsr2h,f,c
 16707  0142A4  006F FF7B FFE6     	movff	postinc2,postinc1
 16708  0142AA  006F FF7B FFE6     	movff	postinc2,postinc1
 16709  0142B0  006F FF7B FFE6     	movff	postinc2,postinc1
 16710  0142B6  006F FF7B FFE6     	movff	postinc2,postinc1
 16711  0142BC  006F FF7B FFE6     	movff	postinc2,postinc1
 16712  0142C2  006F FF7B FFE6     	movff	postinc2,postinc1
 16713  0142C8  006F FF7B FFE6     	movff	postinc2,postinc1
 16714  0142CE  006F FF7B FFE6     	movff	postinc2,postinc1
 16715  0142D4  EC22  F0AA         	call	___aodiv	;wreg free
 16716  0142D8  52E5               	movf	postdec1,f,c
 16717  0142DA  006F FF9C  F049    	movff	indf1,btemp+23
 16718  0142E0  52E5               	movf	postdec1,f,c
 16719  0142E2  006F FF9C  F048    	movff	indf1,btemp+22
 16720  0142E8  52E5               	movf	postdec1,f,c
 16721  0142EA  006F FF9C  F047    	movff	indf1,btemp+21
 16722  0142F0  52E5               	movf	postdec1,f,c
 16723  0142F2  006F FF9C  F046    	movff	indf1,btemp+20
 16724  0142F8  52E5               	movf	postdec1,f,c
 16725  0142FA  006F FF9C  F045    	movff	indf1,btemp+19
 16726  014300  52E5               	movf	postdec1,f,c
 16727  014302  006F FF9C  F044    	movff	indf1,btemp+18
 16728  014308  52E5               	movf	postdec1,f,c
 16729  01430A  006F FF9C  F043    	movff	indf1,btemp+17
 16730  014310  52E5               	movf	postdec1,f,c
 16731  014312  006F FF9C  F042    	movff	indf1,btemp+16
 16732  014318  0EF8               	movlw	248
 16733  01431A  26E1               	addwf	fsr1l,f,c
 16734  01431C  0EFF               	movlw	255
 16735  01431E  22E2               	addwfc	fsr1h,f,c
 16736                           
 16737                           ;stkvar	_n @ sp[(-18)+2]
 16738  014320  0EF0               	movlw	-16
 16739  014322  0060  F10B  FFE3   	movff	btemp+16,plusw1
 16740  014328  0EF1               	movlw	-15
 16741  01432A  0060  F10F  FFE3   	movff	btemp+17,plusw1
 16742  014330  0EF2               	movlw	-14
 16743  014332  0060  F113  FFE3   	movff	btemp+18,plusw1
 16744  014338  0EF3               	movlw	-13
 16745  01433A  0060  F117  FFE3   	movff	btemp+19,plusw1
 16746  014340  0EF4               	movlw	-12
 16747  014342  0060  F11B  FFE3   	movff	btemp+20,plusw1
 16748  014348  0EF5               	movlw	-11
 16749  01434A  0060  F11F  FFE3   	movff	btemp+21,plusw1
 16750  014350  0EF6               	movlw	-10
 16751  014352  0060  F123  FFE3   	movff	btemp+22,plusw1
 16752  014358  0EF7               	movlw	-9
 16753  01435A  0060  F127  FFE3   	movff	btemp+23,plusw1
 16754  014360                     l9880:
 16755                           
 16756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16757                           ;stkvar	_i @ sp[(-18)+10]
 16758  014360  0EF9               	movlw	-7
 16759  014362  BEE3               	btfsc	plusw1,7,c
 16760  014364  D036               	goto	u9350
 16761  014366  0EF9               	movlw	-7
 16762  014368  50E3               	movf	plusw1,w,c
 16763  01436A  E104               	bnz	u9310
 16764  01436C  0EF8               	movlw	-8
 16765  01436E  04E3               	decf	plusw1,w,c
 16766  014370  A0D8               	btfss	status,0,c
 16767  014372  D02F               	goto	u9350
 16768  014374                     u9310:
 16769                           
 16770                           ;stkvar	_n @ sp[(-18)+2]
 16771  014374  0EF0               	movlw	-16
 16772  014376  50E3               	movf	plusw1,w,c
 16773  014378  E115               	bnz	u9321
 16774  01437A  0EF1               	movlw	-15
 16775  01437C  50E3               	movf	plusw1,w,c
 16776  01437E  E112               	bnz	u9321
 16777  014380  0EF2               	movlw	-14
 16778  014382  50E3               	movf	plusw1,w,c
 16779  014384  E10F               	bnz	u9321
 16780  014386  0EF3               	movlw	-13
 16781  014388  50E3               	movf	plusw1,w,c
 16782  01438A  E10C               	bnz	u9321
 16783  01438C  0EF4               	movlw	-12
 16784  01438E  50E3               	movf	plusw1,w,c
 16785  014390  E109               	bnz	u9321
 16786  014392  0EF5               	movlw	-11
 16787  014394  50E3               	movf	plusw1,w,c
 16788  014396  E106               	bnz	u9321
 16789  014398  0EF6               	movlw	-10
 16790  01439A  50E3               	movf	plusw1,w,c
 16791  01439C  E103               	bnz	u9321
 16792  01439E  0EF7               	movlw	-9
 16793  0143A0  50E3               	movf	plusw1,w,c
 16794  0143A2  A4D8               	btfss	status,2,c
 16795  0143A4                     u9321:
 16796  0143A4  D6D4               	goto	l9870
 16797                           
 16798                           ;stkvar	_p @ sp[(-18)+16]
 16799  0143A6  0EFF               	movlw	-1
 16800  0143A8  BEE3               	btfsc	plusw1,7,c
 16801  0143AA  D007               	goto	u9330
 16802  0143AC  0EFF               	movlw	-1
 16803  0143AE  50E3               	movf	plusw1,w,c
 16804  0143B0  E103               	bnz	u9331
 16805  0143B2  0EFE               	movlw	-2
 16806  0143B4  04E3               	decf	plusw1,w,c
 16807  0143B6  B0D8               	btfsc	status,0,c
 16808  0143B8                     u9331:
 16809  0143B8  D6CA               	goto	l9870
 16810  0143BA                     u9330:
 16811                           
 16812                           ;stkvar	_w @ sp[(-18)+14]
 16813  0143BA  0EFD               	movlw	-3
 16814  0143BC  BEE3               	btfsc	plusw1,7,c
 16815  0143BE  D009               	goto	u9350
 16816  0143C0  0EFD               	movlw	-3
 16817  0143C2  50E3               	movf	plusw1,w,c
 16818  0143C4  E104               	bnz	u9340
 16819  0143C6  0EFC               	movlw	-4
 16820  0143C8  04E3               	decf	plusw1,w,c
 16821  0143CA  A0D8               	btfss	status,0,c
 16822  0143CC  D002               	goto	u9350
 16823  0143CE                     u9340:
 16824  0143CE  B21F               	btfsc	_flags^0,1,c
 16825  0143D0  D6BE               	goto	l9870
 16826  0143D2                     u9350:
 16827                           
 16828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 16829                           ;stkvar	_s @ sp[(-18)+12]
 16830  0143D2  0EFA               	movlw	-6
 16831  0143D4  006F FF8C  F032    	movff	plusw1,btemp
 16832  0143DA  0EFB               	movlw	-5
 16833  0143DC  50E3               	movf	plusw1,w,c
 16834  0143DE  1032               	iorwf	btemp^0,w,c
 16835  0143E0  A4D8               	btfss	status,2,c
 16836  0143E2  D002               	goto	u9370
 16837  0143E4  A41F               	btfss	_flags^0,2,c
 16838  0143E6  D033               	goto	l9904
 16839  0143E8                     u9370:
 16840                           
 16841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 16842                           ;stkvar	_i @ sp[(-18)+10]
 16843  0143E8  50E1               	movf	fsr1l,w,c
 16844  0143EA  0FF8               	addlw	-8
 16845  0143EC  6ED9               	movwf	fsr2l,c
 16846  0143EE  50E2               	movf	fsr1h,w,c
 16847  0143F0  6EDA               	movwf	fsr2h,c
 16848  0143F2  0EFF               	movlw	255
 16849  0143F4  22DA               	addwfc	fsr2h,f,c
 16850  0143F6  06DE               	decf	postinc2,f,c
 16851  0143F8  0E00               	movlw	0
 16852  0143FA  5ADD               	subwfb	postdec2,f,c
 16853                           
 16854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 16855                           ;stkvar	_s @ sp[(-18)+12]
 16856  0143FC  0EFA               	movlw	-6
 16857  0143FE  006F FF8C  F032    	movff	plusw1,btemp
 16858  014404  0EFB               	movlw	-5
 16859  014406  50E3               	movf	plusw1,w,c
 16860  014408  1032               	iorwf	btemp^0,w,c
 16861  01440A  A4D8               	btfss	status,2,c
 16862  01440C  D002               	goto	l9900
 16863  01440E  0E2B               	movlw	43
 16864  014410  D001               	goto	L17
 16865  014412                     l9900:
 16866  014412  0E2D               	movlw	45
 16867  014414                     L17:
 16868  014414  6E3C               	movwf	(btemp+10)^0,c
 16869  014416  0E00               	movlw	0
 16870  014418  6E3D               	movwf	(btemp+11)^0,c
 16871                           
 16872                           ;stkvar	_dtoa$4613 @ sp[(-18)+0]
 16873  01441A  0EEE               	movlw	-18
 16874  01441C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16875  014422  0EEF               	movlw	-17
 16876  014424  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16877                           
 16878                           ;stkvar	_dtoa$4613 @ sp[(-18)+0]
 16879                           ;stkvar	_i @ sp[(-18)+10]
 16880  01442A  0EF8               	movlw	-8
 16881  01442C  006F FF8C  F03C    	movff	plusw1,btemp+10
 16882  014432  0EF9               	movlw	-7
 16883  014434  006F FF8C  F03D    	movff	plusw1,btemp+11
 16884  01443A  0EA3               	movlw	low _dbuf
 16885  01443C  243C               	addwf	(btemp+10)^0,w,c
 16886  01443E  6ED9               	movwf	fsr2l,c
 16887  014440  0E01               	movlw	high _dbuf
 16888  014442  203D               	addwfc	(btemp+11)^0,w,c
 16889  014444  6EDA               	movwf	fsr2h,c
 16890  014446  0EEE               	movlw	-18
 16891  014448  006F FF8F FFDF     	movff	plusw1,indf2
 16892  01444E                     l9904:
 16893                           
 16894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 16895                           ;stkvar	_w @ sp[(-18)+14]
 16896  01444E  0EFC               	movlw	-4
 16897  014450  006F FF8F FFE6     	movff	plusw1,postinc1
 16898  014456  006F FF8F FFE6     	movff	plusw1,postinc1
 16899                           
 16900                           ;stkvar	_i @ sp[(-20)+10]
 16901  01445C  0EA3               	movlw	low _dbuf
 16902  01445E  6E3C               	movwf	(btemp+10)^0,c
 16903  014460  0E01               	movlw	high _dbuf
 16904  014462  6E3D               	movwf	(btemp+11)^0,c
 16905  014464  0EF6               	movlw	-10
 16906  014466  50E3               	movf	plusw1,w,c
 16907  014468  263C               	addwf	(btemp+10)^0,f,c
 16908  01446A  0EF7               	movlw	-9
 16909  01446C  50E3               	movf	plusw1,w,c
 16910  01446E  223D               	addwfc	(btemp+11)^0,f,c
 16911  014470  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 16912  014476  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 16913                           
 16914                           ;stkvar	_fp @ sp[(-22)+-2]
 16915  01447C  0EE8               	movlw	-24
 16916  01447E  006F FF8F FFE6     	movff	plusw1,postinc1
 16917  014484  006F FF8F FFE6     	movff	plusw1,postinc1
 16918  01448A  ECC0  F0B6         	call	_pad	;wreg free
 16919                           
 16920                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 16921  01448E  0EE4               	movlw	228
 16922  014490  26E1               	addwf	fsr1l,f,c
 16923  014492  0EFF               	movlw	255
 16924  014494  22E2               	addwfc	fsr1h,f,c
 16925  014496  0012               	return		;funcret
 16926  014498                     __end_of_dtoa:
 16927                           	opt callstack 0
 16928                           
 16929 ;; *************** function _abs *****************
 16930 ;; Defined at:
 16931 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 16932 ;; Parameters:    Size  Location     Type
 16933 ;;  a               2  [STACK] int 
 16934 ;; Auto vars:     Size  Location     Type
 16935 ;;		None
 16936 ;; Return value:  Size  Location     Type
 16937 ;;                  2  [STACK] int 
 16938 ;; Registers used:
 16939 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 16940 ;; Tracked objects:
 16941 ;;		On entry : 0/1
 16942 ;;		On exit  : 0/0
 16943 ;;		Unchanged: 0/0
 16944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16949 ;;Total ram usage:        0 bytes
 16950 ;; Hardware stack levels used:    1
 16951 ;; Hardware stack levels required when called:    6
 16952 ;; This function calls:
 16953 ;;		Nothing
 16954 ;; This function is called by:
 16955 ;;		_dtoa
 16956 ;; This function uses a reentrant model
 16957 ;;
 16958                           
 16959                           	psect	text61
 16960  0183C4                     __ptext61:
 16961                           	opt callstack 0
 16962  0183C4                     _abs:
 16963                           	opt callstack 17
 16964                           
 16965                           ;stkvar	_a @ sp[(0)+-2]
 16966                           
 16967                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16968                           ;incstack = 0
 16969  0183C4  0EFF               	movlw	-1
 16970  0183C6  BEE3               	btfsc	plusw1,7,c
 16971  0183C8  D007               	goto	u5140
 16972  0183CA  0EFF               	movlw	-1
 16973  0183CC  50E3               	movf	plusw1,w,c
 16974  0183CE  E112               	bnz	l6674
 16975  0183D0  0EFE               	movlw	-2
 16976  0183D2  04E3               	decf	plusw1,w,c
 16977  0183D4  B0D8               	btfsc	status,0,c
 16978  0183D6  D00E               	goto	l6674
 16979  0183D8                     u5140:
 16980                           
 16981                           ;stkvar	_a @ sp[(0)+-2]
 16982  0183D8  0EFE               	movlw	-2
 16983  0183DA  006F FF8C  F032    	movff	plusw1,btemp
 16984  0183E0  1E32               	comf	btemp^0,f,c
 16985  0183E2  0EFF               	movlw	-1
 16986  0183E4  006F FF8C  F033    	movff	plusw1,btemp+1
 16987  0183EA  1E33               	comf	(btemp+1)^0,f,c
 16988  0183EC  2A32               	incf	btemp^0,f,c
 16989  0183EE  B4D8               	btfsc	status,2,c
 16990  0183F0  2A33               	incf	(btemp+1)^0,f,c
 16991  0183F2  D008               	goto	l2800
 16992  0183F4                     l6674:
 16993                           
 16994                           ;stkvar	_a @ sp[(0)+-2]
 16995  0183F4  0EFE               	movlw	-2
 16996  0183F6  006F FF8C  F032    	movff	plusw1,btemp
 16997  0183FC  0EFF               	movlw	-1
 16998  0183FE  006F FF8C  F033    	movff	plusw1,btemp+1
 16999  018404                     l2800:
 17000                           
 17001                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17002  018404  52E5               	movf	postdec1,f,c
 17003  018406  52E5               	movf	postdec1,f,c
 17004  018408  0012               	return		;funcret
 17005  01840A                     __end_of_abs:
 17006                           	opt callstack 0
 17007                           
 17008 ;; *************** function ___aomod *****************
 17009 ;; Defined at:
 17010 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17011 ;; Parameters:    Size  Location     Type
 17012 ;;  dividend        8  [STACK] long long 
 17013 ;;  divisor         8  [STACK] long long 
 17014 ;; Auto vars:     Size  Location     Type
 17015 ;;  sign            1  [STACK] unsigned char 
 17016 ;;  counter         1  [STACK] unsigned char 
 17017 ;; Return value:  Size  Location     Type
 17018 ;;                  8  [STACK] long long 
 17019 ;; Registers used:
 17020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17021 ;; Tracked objects:
 17022 ;;		On entry : 0/1
 17023 ;;		On exit  : 0/0
 17024 ;;		Unchanged: 0/0
 17025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17030 ;;Total ram usage:        0 bytes
 17031 ;; Hardware stack levels used:    1
 17032 ;; Hardware stack levels required when called:    6
 17033 ;; This function calls:
 17034 ;;		Nothing
 17035 ;; This function is called by:
 17036 ;;		_dtoa
 17037 ;; This function uses a reentrant model
 17038 ;;
 17039                           
 17040                           	psect	text62
 17041  015938                     __ptext62:
 17042                           	opt callstack 0
 17043  015938                     ___aomod:
 17044                           	opt callstack 0
 17045                           
 17046                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17047  015938  52E6               	movf	postinc1,f,c
 17048  01593A  52E6               	movf	postinc1,f,c
 17049                           
 17050                           ;stkvar	_sign @ sp[(-2)+0]
 17051                           
 17052                           ;incstack = 0
 17053  01593C  0EFE               	movlw	-2
 17054  01593E  6AE3               	clrf	plusw1,c
 17055                           
 17056                           ;stkvar	_dividend @ sp[(-2)+-8]
 17057  015940  0EFD               	movlw	-3
 17058  015942  AEE3               	btfss	plusw1,7,c
 17059  015944  D028               	goto	l6832
 17060                           
 17061                           ;stkvar	_dividend @ sp[(-2)+-8]
 17062                           ;stkvar	_dividend @ sp[(-2)+-8]
 17063  015946  0EF6               	movlw	-10
 17064  015948  6CE3               	negf	plusw1,c
 17065  01594A  0EF7               	movlw	-9
 17066  01594C  1EE3               	comf	plusw1,f,c
 17067  01594E  0EF8               	movlw	-8
 17068  015950  1EE3               	comf	plusw1,f,c
 17069  015952  0EF9               	movlw	-7
 17070  015954  1EE3               	comf	plusw1,f,c
 17071  015956  0EFA               	movlw	-6
 17072  015958  1EE3               	comf	plusw1,f,c
 17073  01595A  0EFB               	movlw	-5
 17074  01595C  1EE3               	comf	plusw1,f,c
 17075  01595E  0EFC               	movlw	-4
 17076  015960  1EE3               	comf	plusw1,f,c
 17077  015962  0EFD               	movlw	-3
 17078  015964  1EE3               	comf	plusw1,f,c
 17079  015966  E314               	bnc	u5570
 17080  015968  0EF7               	movlw	-9
 17081  01596A  2AE3               	incf	plusw1,f,c
 17082  01596C  E311               	bnc	u5570
 17083  01596E  0EF8               	movlw	-8
 17084  015970  2AE3               	incf	plusw1,f,c
 17085  015972  E30E               	bnc	u5570
 17086  015974  0EF9               	movlw	-7
 17087  015976  2AE3               	incf	plusw1,f,c
 17088  015978  E30B               	bnc	u5570
 17089  01597A  0EFA               	movlw	-6
 17090  01597C  2AE3               	incf	plusw1,f,c
 17091  01597E  E308               	bnc	u5570
 17092  015980  0EFB               	movlw	-5
 17093  015982  2AE3               	incf	plusw1,f,c
 17094  015984  E305               	bnc	u5570
 17095  015986  0EFC               	movlw	-4
 17096  015988  2AE3               	incf	plusw1,f,c
 17097  01598A  E302               	bnc	u5570
 17098  01598C  0EFD               	movlw	-3
 17099  01598E  2AE3               	incf	plusw1,f,c
 17100  015990                     u5570:
 17101                           
 17102                           ;stkvar	_sign @ sp[(-2)+0]
 17103  015990  0EFE               	movlw	-2
 17104  015992  6AE3               	clrf	plusw1,c
 17105  015994  2AE3               	incf	plusw1,f,c
 17106  015996                     l6832:
 17107                           
 17108                           ;stkvar	_divisor @ sp[(-2)+-16]
 17109  015996  0EF5               	movlw	-11
 17110  015998  AEE3               	btfss	plusw1,7,c
 17111  01599A  D025               	goto	u5590
 17112                           
 17113                           ;stkvar	_divisor @ sp[(-2)+-16]
 17114                           ;stkvar	_divisor @ sp[(-2)+-16]
 17115  01599C  0EEE               	movlw	-18
 17116  01599E  6CE3               	negf	plusw1,c
 17117  0159A0  0EEF               	movlw	-17
 17118  0159A2  1EE3               	comf	plusw1,f,c
 17119  0159A4  0EF0               	movlw	-16
 17120  0159A6  1EE3               	comf	plusw1,f,c
 17121  0159A8  0EF1               	movlw	-15
 17122  0159AA  1EE3               	comf	plusw1,f,c
 17123  0159AC  0EF2               	movlw	-14
 17124  0159AE  1EE3               	comf	plusw1,f,c
 17125  0159B0  0EF3               	movlw	-13
 17126  0159B2  1EE3               	comf	plusw1,f,c
 17127  0159B4  0EF4               	movlw	-12
 17128  0159B6  1EE3               	comf	plusw1,f,c
 17129  0159B8  0EF5               	movlw	-11
 17130  0159BA  1EE3               	comf	plusw1,f,c
 17131  0159BC  E314               	bnc	u5590
 17132  0159BE  0EEF               	movlw	-17
 17133  0159C0  2AE3               	incf	plusw1,f,c
 17134  0159C2  E311               	bnc	u5590
 17135  0159C4  0EF0               	movlw	-16
 17136  0159C6  2AE3               	incf	plusw1,f,c
 17137  0159C8  E30E               	bnc	u5590
 17138  0159CA  0EF1               	movlw	-15
 17139  0159CC  2AE3               	incf	plusw1,f,c
 17140  0159CE  E30B               	bnc	u5590
 17141  0159D0  0EF2               	movlw	-14
 17142  0159D2  2AE3               	incf	plusw1,f,c
 17143  0159D4  E308               	bnc	u5590
 17144  0159D6  0EF3               	movlw	-13
 17145  0159D8  2AE3               	incf	plusw1,f,c
 17146  0159DA  E305               	bnc	u5590
 17147  0159DC  0EF4               	movlw	-12
 17148  0159DE  2AE3               	incf	plusw1,f,c
 17149  0159E0  E302               	bnc	u5590
 17150  0159E2  0EF5               	movlw	-11
 17151  0159E4  2AE3               	incf	plusw1,f,c
 17152  0159E6                     u5590:
 17153                           
 17154                           ;stkvar	_divisor @ sp[(-2)+-16]
 17155  0159E6  0EEE               	movlw	-18
 17156  0159E8  50E3               	movf	plusw1,w,c
 17157  0159EA  E116               	bnz	u5600
 17158  0159EC  0EEF               	movlw	-17
 17159  0159EE  50E3               	movf	plusw1,w,c
 17160  0159F0  E113               	bnz	u5600
 17161  0159F2  0EF0               	movlw	-16
 17162  0159F4  50E3               	movf	plusw1,w,c
 17163  0159F6  E110               	bnz	u5600
 17164  0159F8  0EF1               	movlw	-15
 17165  0159FA  50E3               	movf	plusw1,w,c
 17166  0159FC  E10D               	bnz	u5600
 17167  0159FE  0EF2               	movlw	-14
 17168  015A00  50E3               	movf	plusw1,w,c
 17169  015A02  E10A               	bnz	u5600
 17170  015A04  0EF3               	movlw	-13
 17171  015A06  50E3               	movf	plusw1,w,c
 17172  015A08  E107               	bnz	u5600
 17173  015A0A  0EF4               	movlw	-12
 17174  015A0C  50E3               	movf	plusw1,w,c
 17175  015A0E  E104               	bnz	u5600
 17176  015A10  0EF5               	movlw	-11
 17177  015A12  50E3               	movf	plusw1,w,c
 17178  015A14  B4D8               	btfsc	status,2,c
 17179  015A16  D075               	goto	u5630
 17180  015A18                     u5600:
 17181                           
 17182                           ;stkvar	_counter @ sp[(-2)+1]
 17183  015A18  0EFF               	movlw	-1
 17184  015A1A  6AE3               	clrf	plusw1,c
 17185  015A1C  D012               	goto	L18
 17186  015A1E                     l6840:
 17187                           
 17188                           ;stkvar	_divisor @ sp[(-2)+-16]
 17189  015A1E  90D8               	bcf	status,0,c
 17190  015A20  0EEE               	movlw	-18
 17191  015A22  36E3               	rlcf	plusw1,f,c
 17192  015A24  0EEF               	movlw	-17
 17193  015A26  36E3               	rlcf	plusw1,f,c
 17194  015A28  0EF0               	movlw	-16
 17195  015A2A  36E3               	rlcf	plusw1,f,c
 17196  015A2C  0EF1               	movlw	-15
 17197  015A2E  36E3               	rlcf	plusw1,f,c
 17198  015A30  0EF2               	movlw	-14
 17199  015A32  36E3               	rlcf	plusw1,f,c
 17200  015A34  0EF3               	movlw	-13
 17201  015A36  36E3               	rlcf	plusw1,f,c
 17202  015A38  0EF4               	movlw	-12
 17203  015A3A  36E3               	rlcf	plusw1,f,c
 17204  015A3C  0EF5               	movlw	-11
 17205  015A3E  36E3               	rlcf	plusw1,f,c
 17206                           
 17207                           ;stkvar	_counter @ sp[(-2)+1]
 17208  015A40  0EFF               	movlw	-1
 17209  015A42                     L18:
 17210  015A42  2AE3               	incf	plusw1,f,c
 17211                           
 17212                           ;stkvar	_divisor @ sp[(-2)+-16]
 17213  015A44  0EF5               	movlw	-11
 17214  015A46  AEE3               	btfss	plusw1,7,c
 17215  015A48  D7EA               	goto	l6840
 17216  015A4A                     u5610:
 17217                           
 17218                           ;stkvar	_divisor @ sp[(-2)+-16]
 17219                           ;stkvar	_dividend @ sp[(-2)+-8]
 17220  015A4A  50E1               	movf	fsr1l,w,c
 17221  015A4C  0FF6               	addlw	-10
 17222  015A4E  6ED9               	movwf	fsr2l,c
 17223  015A50  50E2               	movf	fsr1h,w,c
 17224  015A52  6EDA               	movwf	fsr2h,c
 17225  015A54  0EFF               	movlw	255
 17226  015A56  22DA               	addwfc	fsr2h,f,c
 17227  015A58  0EEE               	movlw	-18
 17228  015A5A  50E3               	movf	plusw1,w,c
 17229  015A5C  5CDE               	subwf	postinc2,w,c
 17230  015A5E  0EEF               	movlw	-17
 17231  015A60  50E3               	movf	plusw1,w,c
 17232  015A62  58DE               	subwfb	postinc2,w,c
 17233  015A64  0EF0               	movlw	-16
 17234  015A66  50E3               	movf	plusw1,w,c
 17235  015A68  58DE               	subwfb	postinc2,w,c
 17236  015A6A  0EF1               	movlw	-15
 17237  015A6C  50E3               	movf	plusw1,w,c
 17238  015A6E  58DE               	subwfb	postinc2,w,c
 17239  015A70  0EF2               	movlw	-14
 17240  015A72  50E3               	movf	plusw1,w,c
 17241  015A74  58DE               	subwfb	postinc2,w,c
 17242  015A76  0EF3               	movlw	-13
 17243  015A78  50E3               	movf	plusw1,w,c
 17244  015A7A  58DE               	subwfb	postinc2,w,c
 17245  015A7C  0EF4               	movlw	-12
 17246  015A7E  50E3               	movf	plusw1,w,c
 17247  015A80  58DE               	subwfb	postinc2,w,c
 17248  015A82  0EF5               	movlw	-11
 17249  015A84  50E3               	movf	plusw1,w,c
 17250  015A86  58DE               	subwfb	postinc2,w,c
 17251  015A88  A0D8               	btfss	status,0,c
 17252  015A8A  D01F               	goto	l6848
 17253                           
 17254                           ;stkvar	_divisor @ sp[(-2)+-16]
 17255                           ;stkvar	_dividend @ sp[(-2)+-8]
 17256  015A8C  50E1               	movf	fsr1l,w,c
 17257  015A8E  0FF6               	addlw	-10
 17258  015A90  6ED9               	movwf	fsr2l,c
 17259  015A92  50E2               	movf	fsr1h,w,c
 17260  015A94  6EDA               	movwf	fsr2h,c
 17261  015A96  0EFF               	movlw	255
 17262  015A98  22DA               	addwfc	fsr2h,f,c
 17263  015A9A  0EEE               	movlw	-18
 17264  015A9C  50E3               	movf	plusw1,w,c
 17265  015A9E  5EDE               	subwf	postinc2,f,c
 17266  015AA0  0EEF               	movlw	-17
 17267  015AA2  50E3               	movf	plusw1,w,c
 17268  015AA4  5ADE               	subwfb	postinc2,f,c
 17269  015AA6  0EF0               	movlw	-16
 17270  015AA8  50E3               	movf	plusw1,w,c
 17271  015AAA  5ADE               	subwfb	postinc2,f,c
 17272  015AAC  0EF1               	movlw	-15
 17273  015AAE  50E3               	movf	plusw1,w,c
 17274  015AB0  5ADE               	subwfb	postinc2,f,c
 17275  015AB2  0EF2               	movlw	-14
 17276  015AB4  50E3               	movf	plusw1,w,c
 17277  015AB6  5ADE               	subwfb	postinc2,f,c
 17278  015AB8  0EF3               	movlw	-13
 17279  015ABA  50E3               	movf	plusw1,w,c
 17280  015ABC  5ADE               	subwfb	postinc2,f,c
 17281  015ABE  0EF4               	movlw	-12
 17282  015AC0  50E3               	movf	plusw1,w,c
 17283  015AC2  5ADE               	subwfb	postinc2,f,c
 17284  015AC4  0EF5               	movlw	-11
 17285  015AC6  50E3               	movf	plusw1,w,c
 17286  015AC8  5ADE               	subwfb	postinc2,f,c
 17287  015ACA                     l6848:
 17288                           
 17289                           ;stkvar	_divisor @ sp[(-2)+-16]
 17290  015ACA  90D8               	bcf	status,0,c
 17291  015ACC  0EF5               	movlw	-11
 17292  015ACE  32E3               	rrcf	plusw1,f,c
 17293  015AD0  0EF4               	movlw	-12
 17294  015AD2  32E3               	rrcf	plusw1,f,c
 17295  015AD4  0EF3               	movlw	-13
 17296  015AD6  32E3               	rrcf	plusw1,f,c
 17297  015AD8  0EF2               	movlw	-14
 17298  015ADA  32E3               	rrcf	plusw1,f,c
 17299  015ADC  0EF1               	movlw	-15
 17300  015ADE  32E3               	rrcf	plusw1,f,c
 17301  015AE0  0EF0               	movlw	-16
 17302  015AE2  32E3               	rrcf	plusw1,f,c
 17303  015AE4  0EEF               	movlw	-17
 17304  015AE6  32E3               	rrcf	plusw1,f,c
 17305  015AE8  0EEE               	movlw	-18
 17306  015AEA  32E3               	rrcf	plusw1,f,c
 17307                           
 17308                           ;stkvar	_counter @ sp[(-2)+1]
 17309  015AEC  0EFF               	movlw	-1
 17310  015AEE  50E3               	movf	plusw1,w,c
 17311  015AF0  6E32               	movwf	btemp^0,c
 17312  015AF2  0E01               	movlw	1
 17313  015AF4  5E32               	subwf	btemp^0,f,c
 17314  015AF6  0EFF               	movlw	-1
 17315  015AF8  0060  F0CB  FFE3   	movff	btemp,plusw1
 17316  015AFE  A4D8               	btfss	status,2,c
 17317  015B00  D7A4               	goto	u5610
 17318  015B02                     u5630:
 17319                           
 17320                           ;stkvar	_sign @ sp[(-2)+0]
 17321  015B02  0EFE               	movlw	-2
 17322  015B04  50E3               	movf	plusw1,w,c
 17323  015B06  B4D8               	btfsc	status,2,c
 17324  015B08  D025               	goto	u5650
 17325                           
 17326                           ;stkvar	_dividend @ sp[(-2)+-8]
 17327                           ;stkvar	_dividend @ sp[(-2)+-8]
 17328  015B0A  0EF6               	movlw	-10
 17329  015B0C  6CE3               	negf	plusw1,c
 17330  015B0E  0EF7               	movlw	-9
 17331  015B10  1EE3               	comf	plusw1,f,c
 17332  015B12  0EF8               	movlw	-8
 17333  015B14  1EE3               	comf	plusw1,f,c
 17334  015B16  0EF9               	movlw	-7
 17335  015B18  1EE3               	comf	plusw1,f,c
 17336  015B1A  0EFA               	movlw	-6
 17337  015B1C  1EE3               	comf	plusw1,f,c
 17338  015B1E  0EFB               	movlw	-5
 17339  015B20  1EE3               	comf	plusw1,f,c
 17340  015B22  0EFC               	movlw	-4
 17341  015B24  1EE3               	comf	plusw1,f,c
 17342  015B26  0EFD               	movlw	-3
 17343  015B28  1EE3               	comf	plusw1,f,c
 17344  015B2A  E314               	bnc	u5650
 17345  015B2C  0EF7               	movlw	-9
 17346  015B2E  2AE3               	incf	plusw1,f,c
 17347  015B30  E311               	bnc	u5650
 17348  015B32  0EF8               	movlw	-8
 17349  015B34  2AE3               	incf	plusw1,f,c
 17350  015B36  E30E               	bnc	u5650
 17351  015B38  0EF9               	movlw	-7
 17352  015B3A  2AE3               	incf	plusw1,f,c
 17353  015B3C  E30B               	bnc	u5650
 17354  015B3E  0EFA               	movlw	-6
 17355  015B40  2AE3               	incf	plusw1,f,c
 17356  015B42  E308               	bnc	u5650
 17357  015B44  0EFB               	movlw	-5
 17358  015B46  2AE3               	incf	plusw1,f,c
 17359  015B48  E305               	bnc	u5650
 17360  015B4A  0EFC               	movlw	-4
 17361  015B4C  2AE3               	incf	plusw1,f,c
 17362  015B4E  E302               	bnc	u5650
 17363  015B50  0EFD               	movlw	-3
 17364  015B52  2AE3               	incf	plusw1,f,c
 17365  015B54                     u5650:
 17366                           
 17367                           ;stkvar	_dividend @ sp[(-2)+-8]
 17368  015B54  0EF6               	movlw	246
 17369  015B56  24E1               	addwf	fsr1l,w,c
 17370  015B58  6ED9               	movwf	fsr2l,c
 17371  015B5A  0EFF               	movlw	255
 17372  015B5C  20E2               	addwfc	fsr1h,w,c
 17373  015B5E  6EDA               	movwf	fsr2h,c
 17374                           
 17375                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17376  015B60  0E08               	movlw	8
 17377  015B62  6E32               	movwf	btemp^0,c
 17378  015B64  0EF6               	movlw	-10
 17379  015B66                     us566999:
 17380  015B66  006F FF7B FFE3     	movff	postinc2,plusw1
 17381  015B6C  28E8               	incf	wreg,w,c
 17382  015B6E  2E32               	decfsz	btemp^0,f,c
 17383  015B70  D7FA               	bra	us566999
 17384                           
 17385                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17386  015B72  52E5               	movf	postdec1,f,c
 17387  015B74  52E5               	movf	postdec1,f,c
 17388  015B76  0012               	return		;funcret
 17389  015B78                     __end_of___aomod:
 17390                           	opt callstack 0
 17391                           
 17392 ;; *************** function ___aodiv *****************
 17393 ;; Defined at:
 17394 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17395 ;; Parameters:    Size  Location     Type
 17396 ;;  dividend        8  [STACK] long long 
 17397 ;;  divisor         8  [STACK] long long 
 17398 ;; Auto vars:     Size  Location     Type
 17399 ;;  quotient        8  [STACK] long long 
 17400 ;;  sign            1  [STACK] unsigned char 
 17401 ;;  counter         1  [STACK] unsigned char 
 17402 ;; Return value:  Size  Location     Type
 17403 ;;                  8  [STACK] long long 
 17404 ;; Registers used:
 17405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17406 ;; Tracked objects:
 17407 ;;		On entry : 0/1
 17408 ;;		On exit  : 0/0
 17409 ;;		Unchanged: 0/0
 17410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17415 ;;Total ram usage:        0 bytes
 17416 ;; Hardware stack levels used:    1
 17417 ;; Hardware stack levels required when called:    6
 17418 ;; This function calls:
 17419 ;;		Nothing
 17420 ;; This function is called by:
 17421 ;;		_dtoa
 17422 ;; This function uses a reentrant model
 17423 ;;
 17424                           
 17425                           	psect	text63
 17426  015444                     __ptext63:
 17427                           	opt callstack 0
 17428  015444                     ___aodiv:
 17429                           	opt callstack 0
 17430                           
 17431                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17432  015444  0E0A               	movlw	10
 17433  015446  26E1               	addwf	fsr1l,f,c
 17434  015448  0E00               	movlw	0
 17435  01544A  22E2               	addwfc	fsr1h,f,c
 17436                           
 17437                           ;stkvar	_sign @ sp[(-10)+8]
 17438                           
 17439                           ;incstack = 0
 17440  01544C  0EFE               	movlw	-2
 17441  01544E  6AE3               	clrf	plusw1,c
 17442                           
 17443                           ;stkvar	_divisor @ sp[(-10)+-16]
 17444  015450  0EED               	movlw	-19
 17445  015452  AEE3               	btfss	plusw1,7,c
 17446  015454  D028               	goto	l6788
 17447                           
 17448                           ;stkvar	_divisor @ sp[(-10)+-16]
 17449                           ;stkvar	_divisor @ sp[(-10)+-16]
 17450  015456  0EE6               	movlw	-26
 17451  015458  6CE3               	negf	plusw1,c
 17452  01545A  0EE7               	movlw	-25
 17453  01545C  1EE3               	comf	plusw1,f,c
 17454  01545E  0EE8               	movlw	-24
 17455  015460  1EE3               	comf	plusw1,f,c
 17456  015462  0EE9               	movlw	-23
 17457  015464  1EE3               	comf	plusw1,f,c
 17458  015466  0EEA               	movlw	-22
 17459  015468  1EE3               	comf	plusw1,f,c
 17460  01546A  0EEB               	movlw	-21
 17461  01546C  1EE3               	comf	plusw1,f,c
 17462  01546E  0EEC               	movlw	-20
 17463  015470  1EE3               	comf	plusw1,f,c
 17464  015472  0EED               	movlw	-19
 17465  015474  1EE3               	comf	plusw1,f,c
 17466  015476  E314               	bnc	u5450
 17467  015478  0EE7               	movlw	-25
 17468  01547A  2AE3               	incf	plusw1,f,c
 17469  01547C  E311               	bnc	u5450
 17470  01547E  0EE8               	movlw	-24
 17471  015480  2AE3               	incf	plusw1,f,c
 17472  015482  E30E               	bnc	u5450
 17473  015484  0EE9               	movlw	-23
 17474  015486  2AE3               	incf	plusw1,f,c
 17475  015488  E30B               	bnc	u5450
 17476  01548A  0EEA               	movlw	-22
 17477  01548C  2AE3               	incf	plusw1,f,c
 17478  01548E  E308               	bnc	u5450
 17479  015490  0EEB               	movlw	-21
 17480  015492  2AE3               	incf	plusw1,f,c
 17481  015494  E305               	bnc	u5450
 17482  015496  0EEC               	movlw	-20
 17483  015498  2AE3               	incf	plusw1,f,c
 17484  01549A  E302               	bnc	u5450
 17485  01549C  0EED               	movlw	-19
 17486  01549E  2AE3               	incf	plusw1,f,c
 17487  0154A0                     u5450:
 17488                           
 17489                           ;stkvar	_sign @ sp[(-10)+8]
 17490  0154A0  0EFE               	movlw	-2
 17491  0154A2  6AE3               	clrf	plusw1,c
 17492  0154A4  2AE3               	incf	plusw1,f,c
 17493  0154A6                     l6788:
 17494                           
 17495                           ;stkvar	_dividend @ sp[(-10)+-8]
 17496  0154A6  0EF5               	movlw	-11
 17497  0154A8  AEE3               	btfss	plusw1,7,c
 17498  0154AA  D027               	goto	l6794
 17499                           
 17500                           ;stkvar	_dividend @ sp[(-10)+-8]
 17501                           ;stkvar	_dividend @ sp[(-10)+-8]
 17502  0154AC  0EEE               	movlw	-18
 17503  0154AE  6CE3               	negf	plusw1,c
 17504  0154B0  0EEF               	movlw	-17
 17505  0154B2  1EE3               	comf	plusw1,f,c
 17506  0154B4  0EF0               	movlw	-16
 17507  0154B6  1EE3               	comf	plusw1,f,c
 17508  0154B8  0EF1               	movlw	-15
 17509  0154BA  1EE3               	comf	plusw1,f,c
 17510  0154BC  0EF2               	movlw	-14
 17511  0154BE  1EE3               	comf	plusw1,f,c
 17512  0154C0  0EF3               	movlw	-13
 17513  0154C2  1EE3               	comf	plusw1,f,c
 17514  0154C4  0EF4               	movlw	-12
 17515  0154C6  1EE3               	comf	plusw1,f,c
 17516  0154C8  0EF5               	movlw	-11
 17517  0154CA  1EE3               	comf	plusw1,f,c
 17518  0154CC  E314               	bnc	u5470
 17519  0154CE  0EEF               	movlw	-17
 17520  0154D0  2AE3               	incf	plusw1,f,c
 17521  0154D2  E311               	bnc	u5470
 17522  0154D4  0EF0               	movlw	-16
 17523  0154D6  2AE3               	incf	plusw1,f,c
 17524  0154D8  E30E               	bnc	u5470
 17525  0154DA  0EF1               	movlw	-15
 17526  0154DC  2AE3               	incf	plusw1,f,c
 17527  0154DE  E30B               	bnc	u5470
 17528  0154E0  0EF2               	movlw	-14
 17529  0154E2  2AE3               	incf	plusw1,f,c
 17530  0154E4  E308               	bnc	u5470
 17531  0154E6  0EF3               	movlw	-13
 17532  0154E8  2AE3               	incf	plusw1,f,c
 17533  0154EA  E305               	bnc	u5470
 17534  0154EC  0EF4               	movlw	-12
 17535  0154EE  2AE3               	incf	plusw1,f,c
 17536  0154F0  E302               	bnc	u5470
 17537  0154F2  0EF5               	movlw	-11
 17538  0154F4  2AE3               	incf	plusw1,f,c
 17539  0154F6                     u5470:
 17540                           
 17541                           ;stkvar	_sign @ sp[(-10)+8]
 17542  0154F6  0EFE               	movlw	-2
 17543  0154F8  70E3               	btg	plusw1,0,c
 17544  0154FA                     l6794:
 17545                           
 17546                           ;stkvar	_quotient @ sp[(-10)+0]
 17547  0154FA  0E07               	movlw	7
 17548  0154FC  6E32               	movwf	btemp^0,c
 17549  0154FE  0EF6               	movlw	-10
 17550  015500                     u5481:
 17551  015500  6AE3               	clrf	plusw1,c
 17552  015502  2AE8               	incf	wreg,f,c
 17553  015504  0632               	decf	btemp^0,f,c
 17554  015506  E2FC               	bc	u5481
 17555                           
 17556                           ;stkvar	_divisor @ sp[(-10)+-16]
 17557  015508  0EE6               	movlw	-26
 17558  01550A  50E3               	movf	plusw1,w,c
 17559  01550C  E116               	bnz	u5490
 17560  01550E  0EE7               	movlw	-25
 17561  015510  50E3               	movf	plusw1,w,c
 17562  015512  E113               	bnz	u5490
 17563  015514  0EE8               	movlw	-24
 17564  015516  50E3               	movf	plusw1,w,c
 17565  015518  E110               	bnz	u5490
 17566  01551A  0EE9               	movlw	-23
 17567  01551C  50E3               	movf	plusw1,w,c
 17568  01551E  E10D               	bnz	u5490
 17569  015520  0EEA               	movlw	-22
 17570  015522  50E3               	movf	plusw1,w,c
 17571  015524  E10A               	bnz	u5490
 17572  015526  0EEB               	movlw	-21
 17573  015528  50E3               	movf	plusw1,w,c
 17574  01552A  E107               	bnz	u5490
 17575  01552C  0EEC               	movlw	-20
 17576  01552E  50E3               	movf	plusw1,w,c
 17577  015530  E104               	bnz	u5490
 17578  015532  0EED               	movlw	-19
 17579  015534  50E3               	movf	plusw1,w,c
 17580  015536  B4D8               	btfsc	status,2,c
 17581  015538  D088               	goto	u5520
 17582  01553A                     u5490:
 17583                           
 17584                           ;stkvar	_counter @ sp[(-10)+9]
 17585  01553A  0EFF               	movlw	-1
 17586  01553C  6AE3               	clrf	plusw1,c
 17587  01553E  D012               	goto	L19
 17588  015540                     l6800:
 17589                           
 17590                           ;stkvar	_divisor @ sp[(-10)+-16]
 17591  015540  90D8               	bcf	status,0,c
 17592  015542  0EE6               	movlw	-26
 17593  015544  36E3               	rlcf	plusw1,f,c
 17594  015546  0EE7               	movlw	-25
 17595  015548  36E3               	rlcf	plusw1,f,c
 17596  01554A  0EE8               	movlw	-24
 17597  01554C  36E3               	rlcf	plusw1,f,c
 17598  01554E  0EE9               	movlw	-23
 17599  015550  36E3               	rlcf	plusw1,f,c
 17600  015552  0EEA               	movlw	-22
 17601  015554  36E3               	rlcf	plusw1,f,c
 17602  015556  0EEB               	movlw	-21
 17603  015558  36E3               	rlcf	plusw1,f,c
 17604  01555A  0EEC               	movlw	-20
 17605  01555C  36E3               	rlcf	plusw1,f,c
 17606  01555E  0EED               	movlw	-19
 17607  015560  36E3               	rlcf	plusw1,f,c
 17608                           
 17609                           ;stkvar	_counter @ sp[(-10)+9]
 17610  015562  0EFF               	movlw	-1
 17611  015564                     L19:
 17612  015564  2AE3               	incf	plusw1,f,c
 17613                           
 17614                           ;stkvar	_divisor @ sp[(-10)+-16]
 17615  015566  0EED               	movlw	-19
 17616  015568  AEE3               	btfss	plusw1,7,c
 17617  01556A  D7EA               	goto	l6800
 17618  01556C                     u5500:
 17619                           
 17620                           ;stkvar	_quotient @ sp[(-10)+0]
 17621  01556C  90D8               	bcf	status,0,c
 17622  01556E  0EF6               	movlw	-10
 17623  015570  36E3               	rlcf	plusw1,f,c
 17624  015572  0EF7               	movlw	-9
 17625  015574  36E3               	rlcf	plusw1,f,c
 17626  015576  0EF8               	movlw	-8
 17627  015578  36E3               	rlcf	plusw1,f,c
 17628  01557A  0EF9               	movlw	-7
 17629  01557C  36E3               	rlcf	plusw1,f,c
 17630  01557E  0EFA               	movlw	-6
 17631  015580  36E3               	rlcf	plusw1,f,c
 17632  015582  0EFB               	movlw	-5
 17633  015584  36E3               	rlcf	plusw1,f,c
 17634  015586  0EFC               	movlw	-4
 17635  015588  36E3               	rlcf	plusw1,f,c
 17636  01558A  0EFD               	movlw	-3
 17637  01558C  36E3               	rlcf	plusw1,f,c
 17638                           
 17639                           ;stkvar	_divisor @ sp[(-10)+-16]
 17640                           ;stkvar	_dividend @ sp[(-10)+-8]
 17641  01558E  50E1               	movf	fsr1l,w,c
 17642  015590  0FEE               	addlw	-18
 17643  015592  6ED9               	movwf	fsr2l,c
 17644  015594  50E2               	movf	fsr1h,w,c
 17645  015596  6EDA               	movwf	fsr2h,c
 17646  015598  0EFF               	movlw	255
 17647  01559A  22DA               	addwfc	fsr2h,f,c
 17648  01559C  0EE6               	movlw	-26
 17649  01559E  50E3               	movf	plusw1,w,c
 17650  0155A0  5CDE               	subwf	postinc2,w,c
 17651  0155A2  0EE7               	movlw	-25
 17652  0155A4  50E3               	movf	plusw1,w,c
 17653  0155A6  58DE               	subwfb	postinc2,w,c
 17654  0155A8  0EE8               	movlw	-24
 17655  0155AA  50E3               	movf	plusw1,w,c
 17656  0155AC  58DE               	subwfb	postinc2,w,c
 17657  0155AE  0EE9               	movlw	-23
 17658  0155B0  50E3               	movf	plusw1,w,c
 17659  0155B2  58DE               	subwfb	postinc2,w,c
 17660  0155B4  0EEA               	movlw	-22
 17661  0155B6  50E3               	movf	plusw1,w,c
 17662  0155B8  58DE               	subwfb	postinc2,w,c
 17663  0155BA  0EEB               	movlw	-21
 17664  0155BC  50E3               	movf	plusw1,w,c
 17665  0155BE  58DE               	subwfb	postinc2,w,c
 17666  0155C0  0EEC               	movlw	-20
 17667  0155C2  50E3               	movf	plusw1,w,c
 17668  0155C4  58DE               	subwfb	postinc2,w,c
 17669  0155C6  0EED               	movlw	-19
 17670  0155C8  50E3               	movf	plusw1,w,c
 17671  0155CA  58DE               	subwfb	postinc2,w,c
 17672  0155CC  A0D8               	btfss	status,0,c
 17673  0155CE  D021               	goto	l6812
 17674                           
 17675                           ;stkvar	_divisor @ sp[(-10)+-16]
 17676                           ;stkvar	_dividend @ sp[(-10)+-8]
 17677  0155D0  50E1               	movf	fsr1l,w,c
 17678  0155D2  0FEE               	addlw	-18
 17679  0155D4  6ED9               	movwf	fsr2l,c
 17680  0155D6  50E2               	movf	fsr1h,w,c
 17681  0155D8  6EDA               	movwf	fsr2h,c
 17682  0155DA  0EFF               	movlw	255
 17683  0155DC  22DA               	addwfc	fsr2h,f,c
 17684  0155DE  0EE6               	movlw	-26
 17685  0155E0  50E3               	movf	plusw1,w,c
 17686  0155E2  5EDE               	subwf	postinc2,f,c
 17687  0155E4  0EE7               	movlw	-25
 17688  0155E6  50E3               	movf	plusw1,w,c
 17689  0155E8  5ADE               	subwfb	postinc2,f,c
 17690  0155EA  0EE8               	movlw	-24
 17691  0155EC  50E3               	movf	plusw1,w,c
 17692  0155EE  5ADE               	subwfb	postinc2,f,c
 17693  0155F0  0EE9               	movlw	-23
 17694  0155F2  50E3               	movf	plusw1,w,c
 17695  0155F4  5ADE               	subwfb	postinc2,f,c
 17696  0155F6  0EEA               	movlw	-22
 17697  0155F8  50E3               	movf	plusw1,w,c
 17698  0155FA  5ADE               	subwfb	postinc2,f,c
 17699  0155FC  0EEB               	movlw	-21
 17700  0155FE  50E3               	movf	plusw1,w,c
 17701  015600  5ADE               	subwfb	postinc2,f,c
 17702  015602  0EEC               	movlw	-20
 17703  015604  50E3               	movf	plusw1,w,c
 17704  015606  5ADE               	subwfb	postinc2,f,c
 17705  015608  0EED               	movlw	-19
 17706  01560A  50E3               	movf	plusw1,w,c
 17707  01560C  5ADE               	subwfb	postinc2,f,c
 17708                           
 17709                           ;stkvar	_quotient @ sp[(-10)+0]
 17710  01560E  0EF6               	movlw	-10
 17711  015610  80E3               	bsf	plusw1,0,c
 17712  015612                     l6812:
 17713                           
 17714                           ;stkvar	_divisor @ sp[(-10)+-16]
 17715  015612  90D8               	bcf	status,0,c
 17716  015614  0EED               	movlw	-19
 17717  015616  32E3               	rrcf	plusw1,f,c
 17718  015618  0EEC               	movlw	-20
 17719  01561A  32E3               	rrcf	plusw1,f,c
 17720  01561C  0EEB               	movlw	-21
 17721  01561E  32E3               	rrcf	plusw1,f,c
 17722  015620  0EEA               	movlw	-22
 17723  015622  32E3               	rrcf	plusw1,f,c
 17724  015624  0EE9               	movlw	-23
 17725  015626  32E3               	rrcf	plusw1,f,c
 17726  015628  0EE8               	movlw	-24
 17727  01562A  32E3               	rrcf	plusw1,f,c
 17728  01562C  0EE7               	movlw	-25
 17729  01562E  32E3               	rrcf	plusw1,f,c
 17730  015630  0EE6               	movlw	-26
 17731  015632  32E3               	rrcf	plusw1,f,c
 17732                           
 17733                           ;stkvar	_counter @ sp[(-10)+9]
 17734  015634  0EFF               	movlw	-1
 17735  015636  50E3               	movf	plusw1,w,c
 17736  015638  6E32               	movwf	btemp^0,c
 17737  01563A  0E01               	movlw	1
 17738  01563C  5E32               	subwf	btemp^0,f,c
 17739  01563E  0EFF               	movlw	-1
 17740  015640  0060  F0CB  FFE3   	movff	btemp,plusw1
 17741  015646  A4D8               	btfss	status,2,c
 17742  015648  D791               	goto	u5500
 17743  01564A                     u5520:
 17744                           
 17745                           ;stkvar	_sign @ sp[(-10)+8]
 17746  01564A  0EFE               	movlw	-2
 17747  01564C  50E3               	movf	plusw1,w,c
 17748  01564E  B4D8               	btfsc	status,2,c
 17749  015650  D025               	goto	u5540
 17750                           
 17751                           ;stkvar	_quotient @ sp[(-10)+0]
 17752                           ;stkvar	_quotient @ sp[(-10)+0]
 17753  015652  0EF6               	movlw	-10
 17754  015654  6CE3               	negf	plusw1,c
 17755  015656  0EF7               	movlw	-9
 17756  015658  1EE3               	comf	plusw1,f,c
 17757  01565A  0EF8               	movlw	-8
 17758  01565C  1EE3               	comf	plusw1,f,c
 17759  01565E  0EF9               	movlw	-7
 17760  015660  1EE3               	comf	plusw1,f,c
 17761  015662  0EFA               	movlw	-6
 17762  015664  1EE3               	comf	plusw1,f,c
 17763  015666  0EFB               	movlw	-5
 17764  015668  1EE3               	comf	plusw1,f,c
 17765  01566A  0EFC               	movlw	-4
 17766  01566C  1EE3               	comf	plusw1,f,c
 17767  01566E  0EFD               	movlw	-3
 17768  015670  1EE3               	comf	plusw1,f,c
 17769  015672  E314               	bnc	u5540
 17770  015674  0EF7               	movlw	-9
 17771  015676  2AE3               	incf	plusw1,f,c
 17772  015678  E311               	bnc	u5540
 17773  01567A  0EF8               	movlw	-8
 17774  01567C  2AE3               	incf	plusw1,f,c
 17775  01567E  E30E               	bnc	u5540
 17776  015680  0EF9               	movlw	-7
 17777  015682  2AE3               	incf	plusw1,f,c
 17778  015684  E30B               	bnc	u5540
 17779  015686  0EFA               	movlw	-6
 17780  015688  2AE3               	incf	plusw1,f,c
 17781  01568A  E308               	bnc	u5540
 17782  01568C  0EFB               	movlw	-5
 17783  01568E  2AE3               	incf	plusw1,f,c
 17784  015690  E305               	bnc	u5540
 17785  015692  0EFC               	movlw	-4
 17786  015694  2AE3               	incf	plusw1,f,c
 17787  015696  E302               	bnc	u5540
 17788  015698  0EFD               	movlw	-3
 17789  01569A  2AE3               	incf	plusw1,f,c
 17790  01569C                     u5540:
 17791                           
 17792                           ;stkvar	_quotient @ sp[(-10)+0]
 17793  01569C  0EF6               	movlw	246
 17794  01569E  24E1               	addwf	fsr1l,w,c
 17795  0156A0  6ED9               	movwf	fsr2l,c
 17796  0156A2  0EFF               	movlw	255
 17797  0156A4  20E2               	addwfc	fsr1h,w,c
 17798  0156A6  6EDA               	movwf	fsr2h,c
 17799                           
 17800                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17801  0156A8  0E08               	movlw	8
 17802  0156AA  6E32               	movwf	btemp^0,c
 17803  0156AC  0EEE               	movlw	-18
 17804  0156AE                     us555999:
 17805  0156AE  006F FF7B FFE3     	movff	postinc2,plusw1
 17806  0156B4  28E8               	incf	wreg,w,c
 17807  0156B6  2E32               	decfsz	btemp^0,f,c
 17808  0156B8  D7FA               	bra	us555999
 17809                           
 17810                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17811  0156BA  0EF6               	movlw	246
 17812  0156BC  26E1               	addwf	fsr1l,f,c
 17813  0156BE  0EFF               	movlw	255
 17814  0156C0  22E2               	addwfc	fsr1h,f,c
 17815  0156C2  0012               	return		;funcret
 17816  0156C4                     __end_of___aodiv:
 17817                           	opt callstack 0
 17818                           
 17819 ;; *************** function _ctoa *****************
 17820 ;; Defined at:
 17821 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17822 ;; Parameters:    Size  Location     Type
 17823 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17824 ;;		 -> f(6), NULL(0), 
 17825 ;;  c               1  [STACK] unsigned char 
 17826 ;; Auto vars:     Size  Location     Type
 17827 ;;  w               2  [STACK] int 
 17828 ;;  l               2    0        int 
 17829 ;; Return value:  Size  Location     Type
 17830 ;;                  2  [STACK] int 
 17831 ;; Registers used:
 17832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17833 ;; Tracked objects:
 17834 ;;		On entry : 0/1
 17835 ;;		On exit  : 0/0
 17836 ;;		Unchanged: 0/0
 17837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17842 ;;Total ram usage:        0 bytes
 17843 ;; Hardware stack levels used:    1
 17844 ;; Hardware stack levels required when called:   11
 17845 ;; This function calls:
 17846 ;;		_pad
 17847 ;; This function is called by:
 17848 ;;		_vfpfcnvrt
 17849 ;; This function uses a reentrant model
 17850 ;;
 17851                           
 17852                           	psect	text64
 17853  017C2C                     __ptext64:
 17854                           	opt callstack 0
 17855  017C2C                     _ctoa:
 17856                           	opt callstack 0
 17857                           
 17858                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17859  017C2C  52E6               	movf	postinc1,f,c
 17860  017C2E  52E6               	movf	postinc1,f,c
 17861                           
 17862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 17863                           
 17864                           ;incstack = 0
 17865  017C30  501B               	movf	_width^0,w,c
 17866  017C32  101C               	iorwf	(_width+1)^0,w,c
 17867  017C34  A4D8               	btfss	status,2,c
 17868  017C36  D009               	goto	l9832
 17869                           
 17870                           ;stkvar	_w @ sp[(-2)+0]
 17871  017C38  0EFE               	movlw	-2
 17872  017C3A  0060  F06F  FFE3   	movff	_width,plusw1
 17873  017C40  0EFF               	movlw	-1
 17874  017C42  0060  F073  FFE3   	movff	_width+1,plusw1
 17875  017C48  D016               	goto	l9834
 17876  017C4A                     l9832:
 17877  017C4A  0EFF               	movlw	255
 17878  017C4C  6E3C               	movwf	(btemp+10)^0,c
 17879  017C4E  0EFF               	movlw	255
 17880  017C50  6E3D               	movwf	(btemp+11)^0,c
 17881  017C52  0060  F06C  F03A   	movff	_width,btemp+8
 17882  017C58  0060  F070  F03B   	movff	_width+1,btemp+9
 17883  017C5E  503C               	movf	(btemp+10)^0,w,c
 17884  017C60  263A               	addwf	(btemp+8)^0,f,c
 17885  017C62  503D               	movf	(btemp+11)^0,w,c
 17886  017C64  223B               	addwfc	(btemp+9)^0,f,c
 17887                           
 17888                           ;stkvar	_w @ sp[(-2)+0]
 17889  017C66  0EFE               	movlw	-2
 17890  017C68  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17891  017C6E  0EFF               	movlw	-1
 17892  017C70  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17893  017C76                     l9834:
 17894                           
 17895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 17896                           ;stkvar	_c @ sp[(-2)+-3]
 17897  017C76  0EFB               	movlw	-5
 17898  017C78  006F FF8C  F1A3    	movff	plusw1,_dbuf
 17899                           
 17900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 17901  017C7E  0101               	movlb	1	; () banked
 17902  017C80  6BA4               	clrf	(_dbuf+1)& (0+255),b
 17903                           
 17904                           ; BSR set to: 1
 17905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 17906                           ;stkvar	_w @ sp[(-2)+0]
 17907  017C82  0EFE               	movlw	-2
 17908  017C84  006F FF8F FFE6     	movff	plusw1,postinc1
 17909  017C8A  006F FF8F FFE6     	movff	plusw1,postinc1
 17910  017C90  0EA3               	movlw	low _dbuf
 17911  017C92  6EE6               	movwf	postinc1,c
 17912  017C94  0E01               	movlw	high _dbuf
 17913  017C96  6EE6               	movwf	postinc1,c
 17914                           
 17915                           ;stkvar	_fp @ sp[(-6)+-2]
 17916  017C98  0EF8               	movlw	-8
 17917  017C9A  006F FF8F FFE6     	movff	plusw1,postinc1
 17918  017CA0  006F FF8F FFE6     	movff	plusw1,postinc1
 17919  017CA6  ECC0  F0B6         	call	_pad	;wreg free
 17920                           
 17921                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 17922  017CAA  0EFB               	movlw	251
 17923  017CAC  26E1               	addwf	fsr1l,f,c
 17924  017CAE  0EFF               	movlw	255
 17925  017CB0  22E2               	addwfc	fsr1h,f,c
 17926  017CB2  0012               	return		;funcret
 17927  017CB4                     __end_of_ctoa:
 17928                           	opt callstack 0
 17929                           
 17930 ;; *************** function _pad *****************
 17931 ;; Defined at:
 17932 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17933 ;; Parameters:    Size  Location     Type
 17934 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17935 ;;		 -> f(6), NULL(0), 
 17936 ;;  buf             2  [STACK] PTR unsigned char 
 17937 ;;		 -> dbuf(80), 
 17938 ;;  p               2  [STACK] int 
 17939 ;; Auto vars:     Size  Location     Type
 17940 ;;  w               2  [STACK] int 
 17941 ;;  i               2  [STACK] int 
 17942 ;; Return value:  Size  Location     Type
 17943 ;;                  2  [STACK] int 
 17944 ;; Registers used:
 17945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17946 ;; Tracked objects:
 17947 ;;		On entry : 0/1
 17948 ;;		On exit  : 0/0
 17949 ;;		Unchanged: 0/0
 17950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17955 ;;Total ram usage:        0 bytes
 17956 ;; Hardware stack levels used:    1
 17957 ;; Hardware stack levels required when called:   10
 17958 ;; This function calls:
 17959 ;;		_fputc
 17960 ;;		_fputs
 17961 ;;		_strlen
 17962 ;; This function is called by:
 17963 ;;		_ctoa
 17964 ;;		_dtoa
 17965 ;;		_efgtoa
 17966 ;;		_xtoa
 17967 ;; This function uses a reentrant model
 17968 ;;
 17969                           
 17970                           	psect	text65
 17971  016D80                     __ptext65:
 17972                           	opt callstack 0
 17973  016D80                     _pad:
 17974                           	opt callstack 0
 17975                           
 17976                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17977  016D80  52E6               	movf	postinc1,f,c
 17978  016D82  52E6               	movf	postinc1,f,c
 17979  016D84  52E6               	movf	postinc1,f,c
 17980  016D86  52E6               	movf	postinc1,f,c
 17981                           
 17982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 17983                           
 17984                           ;incstack = 0
 17985  016D88  A01F               	btfss	_flags^0,0,c
 17986  016D8A  D010               	goto	l9806
 17987                           
 17988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 17989                           ;stkvar	_fp @ sp[(-4)+-2]
 17990  016D8C  0EFA               	movlw	-6
 17991  016D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 17992  016D94  006F FF8F FFE6     	movff	plusw1,postinc1
 17993                           
 17994                           ;stkvar	_buf @ sp[(-6)+-4]
 17995  016D9A  0EF6               	movlw	-10
 17996  016D9C  006F FF8F FFE6     	movff	plusw1,postinc1
 17997  016DA2  006F FF8F FFE6     	movff	plusw1,postinc1
 17998  016DA8  ECF0  F0BC         	call	_fputs	;wreg free
 17999  016DAC                     l9806:
 18000                           
 18001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18002                           ;stkvar	_p @ sp[(-4)+-6]
 18003  016DAC  0EF7               	movlw	-9
 18004  016DAE  BEE3               	btfsc	plusw1,7,c
 18005  016DB0  D011               	goto	l9810
 18006                           
 18007                           ;stkvar	_p @ sp[(-4)+-6]
 18008                           ;stkvar	_w @ sp[(-4)+0]
 18009  016DB2  0EF6               	movlw	-10
 18010  016DB4  006F FF8C  F032    	movff	plusw1,btemp
 18011  016DBA  0EFC               	movlw	-4
 18012  016DBC  0060  F0CB  FFE3   	movff	btemp,plusw1
 18013  016DC2  0EF7               	movlw	-9
 18014  016DC4  006F FF8C  F032    	movff	plusw1,btemp
 18015  016DCA  0EFD               	movlw	-3
 18016  016DCC  0060  F0CB  FFE3   	movff	btemp,plusw1
 18017  016DD2  D004               	goto	l1877
 18018  016DD4                     l9810:
 18019                           
 18020                           ;stkvar	_w @ sp[(-4)+0]
 18021  016DD4  0EFC               	movlw	-4
 18022  016DD6  6AE3               	clrf	plusw1,c
 18023  016DD8  0EFD               	movlw	-3
 18024  016DDA  6AE3               	clrf	plusw1,c
 18025  016DDC                     l1877:
 18026                           
 18027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18028                           ;stkvar	_i @ sp[(-4)+2]
 18029  016DDC  0EFE               	movlw	-2
 18030  016DDE  6AE3               	clrf	plusw1,c
 18031  016DE0  0EFF               	movlw	-1
 18032  016DE2  6AE3               	clrf	plusw1,c
 18033                           
 18034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18035  016DE4  D01E               	goto	l9816
 18036  016DE6                     l9812:
 18037                           
 18038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18039                           ;stkvar	_fp @ sp[(-4)+-2]
 18040  016DE6  0EFA               	movlw	-6
 18041  016DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 18042  016DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 18043  016DF4  0E20               	movlw	32
 18044  016DF6  6EE6               	movwf	postinc1,c
 18045  016DF8  0E00               	movlw	0
 18046  016DFA  6EE6               	movwf	postinc1,c
 18047  016DFC  ECA2  F0B5         	call	_fputc	;wreg free
 18048                           
 18049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18050                           ;stkvar	_i @ sp[(-4)+2]
 18051  016E00  0EFE               	movlw	-2
 18052  016E02  50E3               	movf	plusw1,w,c
 18053  016E04  0F01               	addlw	1
 18054  016E06  6E32               	movwf	btemp^0,c
 18055  016E08  0EFE               	movlw	-2
 18056  016E0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 18057  016E10  6A32               	clrf	btemp^0,c
 18058  016E12  0EFF               	movlw	-1
 18059  016E14  50E3               	movf	plusw1,w,c
 18060  016E16  2032               	addwfc	btemp^0,w,c
 18061  016E18  6E32               	movwf	btemp^0,c
 18062  016E1A  0EFF               	movlw	-1
 18063  016E1C  0060  F0CB  FFE3   	movff	btemp,plusw1
 18064  016E22                     l9816:
 18065                           
 18066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18067                           ;stkvar	_w @ sp[(-4)+0]
 18068                           ;stkvar	_i @ sp[(-4)+2]
 18069  016E22  50E1               	movf	fsr1l,w,c
 18070  016E24  0FFE               	addlw	-2
 18071  016E26  6ED9               	movwf	fsr2l,c
 18072  016E28  50E2               	movf	fsr1h,w,c
 18073  016E2A  6EDA               	movwf	fsr2h,c
 18074  016E2C  0EFF               	movlw	255
 18075  016E2E  22DA               	addwfc	fsr2h,f,c
 18076  016E30  0EFC               	movlw	-4
 18077  016E32  50E3               	movf	plusw1,w,c
 18078  016E34  5CDE               	subwf	postinc2,w,c
 18079  016E36  50DE               	movf	postinc2,w,c
 18080  016E38  0A80               	xorlw	128
 18081  016E3A  6E32               	movwf	btemp^0,c
 18082  016E3C  0EFD               	movlw	-3
 18083  016E3E  50E3               	movf	plusw1,w,c
 18084  016E40  0A80               	xorlw	128
 18085  016E42  5832               	subwfb	btemp^0,w,c
 18086  016E44  A0D8               	btfss	status,0,c
 18087  016E46  D7CF               	goto	l9812
 18088                           
 18089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18090  016E48  B01F               	btfsc	_flags^0,0,c
 18091  016E4A  D010               	goto	l9820
 18092                           
 18093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18094                           ;stkvar	_fp @ sp[(-4)+-2]
 18095  016E4C  0EFA               	movlw	-6
 18096  016E4E  006F FF8F FFE6     	movff	plusw1,postinc1
 18097  016E54  006F FF8F FFE6     	movff	plusw1,postinc1
 18098                           
 18099                           ;stkvar	_buf @ sp[(-6)+-4]
 18100  016E5A  0EF6               	movlw	-10
 18101  016E5C  006F FF8F FFE6     	movff	plusw1,postinc1
 18102  016E62  006F FF8F FFE6     	movff	plusw1,postinc1
 18103  016E68  ECF0  F0BC         	call	_fputs	;wreg free
 18104  016E6C                     l9820:
 18105                           
 18106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18107                           ;stkvar	_w @ sp[(-4)+0]
 18108                           ;stkvar	_buf @ sp[(-4)+-4]
 18109  016E6C  0EF8               	movlw	-8
 18110  016E6E  006F FF8F FFE6     	movff	plusw1,postinc1
 18111  016E74  006F FF8F FFE6     	movff	plusw1,postinc1
 18112  016E7A  EC9F  F0BC         	call	_strlen	;wreg free
 18113  016E7E  0EFC               	movlw	-4
 18114  016E80  50E3               	movf	plusw1,w,c
 18115  016E82  2632               	addwf	btemp^0,f,c
 18116  016E84  0EFD               	movlw	-3
 18117  016E86  50E3               	movf	plusw1,w,c
 18118  016E88  2233               	addwfc	(btemp+1)^0,f,c
 18119                           
 18120                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18121  016E8A  0EF6               	movlw	246
 18122  016E8C  26E1               	addwf	fsr1l,f,c
 18123  016E8E  0EFF               	movlw	255
 18124  016E90  22E2               	addwfc	fsr1h,f,c
 18125  016E92  0012               	return		;funcret
 18126  016E94                     __end_of_pad:
 18127                           	opt callstack 0
 18128                           
 18129 ;; *************** function _strlen *****************
 18130 ;; Defined at:
 18131 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18132 ;; Parameters:    Size  Location     Type
 18133 ;;  s               2  [STACK] PTR const unsigned char 
 18134 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18135 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18136 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18137 ;; Auto vars:     Size  Location     Type
 18138 ;;  a               2  [STACK] PTR const unsigned char 
 18139 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18140 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18141 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18142 ;; Return value:  Size  Location     Type
 18143 ;;                  2  [STACK] unsigned int 
 18144 ;; Registers used:
 18145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18146 ;; Tracked objects:
 18147 ;;		On entry : 0/0
 18148 ;;		On exit  : 0/0
 18149 ;;		Unchanged: 0/0
 18150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18155 ;;Total ram usage:        0 bytes
 18156 ;; Hardware stack levels used:    1
 18157 ;; Hardware stack levels required when called:    6
 18158 ;; This function calls:
 18159 ;;		Nothing
 18160 ;; This function is called by:
 18161 ;;		_eaDogM_WriteString
 18162 ;;		_pad
 18163 ;;		_stoa
 18164 ;; This function uses a reentrant model
 18165 ;;
 18166                           
 18167                           	psect	text66
 18168  01793E                     __ptext66:
 18169                           	opt callstack 0
 18170  01793E                     _strlen:
 18171                           	opt callstack 0
 18172                           
 18173                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18174  01793E  52E6               	movf	postinc1,f,c
 18175  017940  52E6               	movf	postinc1,f,c
 18176                           
 18177                           ;stkvar	_s @ sp[(-2)+-2]
 18178                           
 18179                           ;incstack = 0
 18180  017942  0EFC               	movlw	-4
 18181  017944  006F FF8C  F03C    	movff	plusw1,btemp+10
 18182  01794A  0EFD               	movlw	-3
 18183  01794C  006F FF8C  F03D    	movff	plusw1,btemp+11
 18184                           
 18185                           ;stkvar	_a @ sp[(-2)+0]
 18186  017952  0EFF               	movlw	-1
 18187  017954  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18188  01795A  0EFE               	movlw	-2
 18189  01795C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18190  017962  D011               	goto	l9788
 18191  017964                     l9786:
 18192                           
 18193                           ;stkvar	_s @ sp[(-2)+-2]
 18194  017964  0EFC               	movlw	-4
 18195  017966  50E3               	movf	plusw1,w,c
 18196  017968  0F01               	addlw	1
 18197  01796A  6E32               	movwf	btemp^0,c
 18198  01796C  0EFC               	movlw	-4
 18199  01796E  0060  F0CB  FFE3   	movff	btemp,plusw1
 18200  017974  6A32               	clrf	btemp^0,c
 18201  017976  0EFD               	movlw	-3
 18202  017978  50E3               	movf	plusw1,w,c
 18203  01797A  2032               	addwfc	btemp^0,w,c
 18204  01797C  6E32               	movwf	btemp^0,c
 18205  01797E  0EFD               	movlw	-3
 18206  017980  0060  F0CB  FFE3   	movff	btemp,plusw1
 18207  017986                     l9788:
 18208                           
 18209                           ;stkvar	_s @ sp[(-2)+-2]
 18210  017986  0EFC               	movlw	-4
 18211  017988  006F FF8F FFF6     	movff	plusw1,tblptrl
 18212  01798E  0EFD               	movlw	-3
 18213  017990  006F FF8F FFF7     	movff	plusw1,tblptrh
 18214  017996  0E00               	movlw	low (__mediumconst shr (0+16))
 18215  017998  6EF8               	movwf	tblptru,c
 18216  01799A  0E1F               	movlw	(high __ramtop+-1)
 18217  01799C  64F7               	cpfsgt	tblptrh,c
 18218  01799E  D003               	bra	u9127
 18219  0179A0  0008               	tblrd		*
 18220  0179A2  50F5               	movf	tablat,w,c
 18221  0179A4  D007               	bra	u9120
 18222  0179A6                     u9127:
 18223  0179A6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18224  0179AC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18225  0179B2  50EF               	movf	indf0,w,c
 18226  0179B4                     u9120:
 18227  0179B4  0900               	iorlw	0
 18228  0179B6  A4D8               	btfss	status,2,c
 18229  0179B8  D7D5               	goto	l9786
 18230                           
 18231                           ;stkvar	_a @ sp[(-2)+0]
 18232                           ;stkvar	_s @ sp[(-2)+-2]
 18233  0179BA  0EFC               	movlw	-4
 18234  0179BC  006F FF8C  F032    	movff	plusw1,btemp
 18235  0179C2  0EFD               	movlw	-3
 18236  0179C4  006F FF8C  F033    	movff	plusw1,btemp+1
 18237  0179CA  0EFE               	movlw	-2
 18238  0179CC  50E3               	movf	plusw1,w,c
 18239  0179CE  5E32               	subwf	btemp^0,f,c
 18240  0179D0  0EFF               	movlw	-1
 18241  0179D2  50E3               	movf	plusw1,w,c
 18242  0179D4  5A33               	subwfb	(btemp+1)^0,f,c
 18243                           
 18244                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18245  0179D6  52E5               	movf	postdec1,f,c
 18246  0179D8  52E5               	movf	postdec1,f,c
 18247  0179DA  52E5               	movf	postdec1,f,c
 18248  0179DC  52E5               	movf	postdec1,f,c
 18249  0179DE  0012               	return		;funcret
 18250  0179E0                     __end_of_strlen:
 18251                           	opt callstack 0
 18252                           
 18253 ;; *************** function _fputs *****************
 18254 ;; Defined at:
 18255 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18256 ;; Parameters:    Size  Location     Type
 18257 ;;  s               2  [STACK] PTR const unsigned char 
 18258 ;;		 -> dbuf(80), 
 18259 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18260 ;;		 -> f(6), NULL(0), 
 18261 ;; Auto vars:     Size  Location     Type
 18262 ;;  i               2  [STACK] int 
 18263 ;;  c               1  [STACK] unsigned char 
 18264 ;; Return value:  Size  Location     Type
 18265 ;;                  2  [STACK] int 
 18266 ;; Registers used:
 18267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18268 ;; Tracked objects:
 18269 ;;		On entry : 0/1
 18270 ;;		On exit  : 0/0
 18271 ;;		Unchanged: 0/0
 18272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18277 ;;Total ram usage:        0 bytes
 18278 ;; Hardware stack levels used:    1
 18279 ;; Hardware stack levels required when called:    9
 18280 ;; This function calls:
 18281 ;;		_fputc
 18282 ;; This function is called by:
 18283 ;;		_pad
 18284 ;; This function uses a reentrant model
 18285 ;;
 18286                           
 18287                           	psect	text67
 18288  0179E0                     __ptext67:
 18289                           	opt callstack 0
 18290  0179E0                     _fputs:
 18291                           	opt callstack 0
 18292                           
 18293                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18294  0179E0  52E6               	movf	postinc1,f,c
 18295  0179E2  52E6               	movf	postinc1,f,c
 18296  0179E4  52E6               	movf	postinc1,f,c
 18297                           
 18298                           ;stkvar	_i @ sp[(-3)+0]
 18299                           
 18300                           ;incstack = 0
 18301  0179E6  0EFD               	movlw	-3
 18302  0179E8  6AE3               	clrf	plusw1,c
 18303  0179EA  0EFE               	movlw	-2
 18304  0179EC  6AE3               	clrf	plusw1,c
 18305  0179EE  D01F               	goto	l9800
 18306  0179F0                     l9796:
 18307                           
 18308                           ;stkvar	_fp @ sp[(-3)+-4]
 18309  0179F0  0EF9               	movlw	-7
 18310  0179F2  006F FF8F FFE6     	movff	plusw1,postinc1
 18311  0179F8  006F FF8F FFE6     	movff	plusw1,postinc1
 18312                           
 18313                           ;stkvar	_c @ sp[(-5)+2]
 18314  0179FE  0EFD               	movlw	-3
 18315  017A00  50E3               	movf	plusw1,w,c
 18316  017A02  6EE6               	movwf	postinc1,c
 18317  017A04  0E00               	movlw	0
 18318  017A06  6EE6               	movwf	postinc1,c
 18319  017A08  ECA2  F0B5         	call	_fputc	;wreg free
 18320                           
 18321                           ;stkvar	_i @ sp[(-3)+0]
 18322  017A0C  0EFD               	movlw	-3
 18323  017A0E  50E3               	movf	plusw1,w,c
 18324  017A10  0F01               	addlw	1
 18325  017A12  6E32               	movwf	btemp^0,c
 18326  017A14  0EFD               	movlw	-3
 18327  017A16  0060  F0CB  FFE3   	movff	btemp,plusw1
 18328  017A1C  6A32               	clrf	btemp^0,c
 18329  017A1E  0EFE               	movlw	-2
 18330  017A20  50E3               	movf	plusw1,w,c
 18331  017A22  2032               	addwfc	btemp^0,w,c
 18332  017A24  6E32               	movwf	btemp^0,c
 18333  017A26  0EFE               	movlw	-2
 18334  017A28  0060  F0CB  FFE3   	movff	btemp,plusw1
 18335  017A2E                     l9800:
 18336                           
 18337                           ;stkvar	_i @ sp[(-3)+0]
 18338  017A2E  0EFD               	movlw	-3
 18339  017A30  006F FF8C  F03C    	movff	plusw1,btemp+10
 18340  017A36  0EFE               	movlw	-2
 18341  017A38  006F FF8C  F03D    	movff	plusw1,btemp+11
 18342                           
 18343                           ;stkvar	_s @ sp[(-3)+-2]
 18344  017A3E  0EFB               	movlw	-5
 18345  017A40  006F FF8C  F03A    	movff	plusw1,btemp+8
 18346  017A46  0EFC               	movlw	-4
 18347  017A48  006F FF8C  F03B    	movff	plusw1,btemp+9
 18348  017A4E  503C               	movf	(btemp+10)^0,w,c
 18349  017A50  243A               	addwf	(btemp+8)^0,w,c
 18350  017A52  6ED9               	movwf	fsr2l,c
 18351  017A54  503D               	movf	(btemp+11)^0,w,c
 18352  017A56  203B               	addwfc	(btemp+9)^0,w,c
 18353  017A58  6EDA               	movwf	fsr2h,c
 18354  017A5A  50DF               	movf	indf2,w,c
 18355  017A5C  6E3D               	movwf	(btemp+11)^0,c
 18356                           
 18357                           ;stkvar	_c @ sp[(-3)+2]
 18358  017A5E  0EFF               	movlw	-1
 18359  017A60  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18360  017A66  0EFF               	movlw	-1
 18361  017A68  50E3               	movf	plusw1,w,c
 18362  017A6A  A4D8               	btfss	status,2,c
 18363  017A6C  D7C1               	goto	l9796
 18364                           
 18365                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18366  017A6E  0EF9               	movlw	249
 18367  017A70  26E1               	addwf	fsr1l,f,c
 18368  017A72  0EFF               	movlw	255
 18369  017A74  22E2               	addwfc	fsr1h,f,c
 18370  017A76  0012               	return		;funcret
 18371  017A78                     __end_of_fputs:
 18372                           	opt callstack 0
 18373                           
 18374 ;; *************** function _fputc *****************
 18375 ;; Defined at:
 18376 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18377 ;; Parameters:    Size  Location     Type
 18378 ;;  c               2  [STACK] int 
 18379 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18380 ;;		 -> f(6), NULL(0), 
 18381 ;; Auto vars:     Size  Location     Type
 18382 ;;		None
 18383 ;; Return value:  Size  Location     Type
 18384 ;;                  2  [STACK] int 
 18385 ;; Registers used:
 18386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18387 ;; Tracked objects:
 18388 ;;		On entry : 0/1
 18389 ;;		On exit  : 0/0
 18390 ;;		Unchanged: 0/0
 18391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18396 ;;Total ram usage:        0 bytes
 18397 ;; Hardware stack levels used:    1
 18398 ;; Hardware stack levels required when called:    8
 18399 ;; This function calls:
 18400 ;;		_putch
 18401 ;; This function is called by:
 18402 ;;		_pad
 18403 ;;		_stoa
 18404 ;;		_vfpfcnvrt
 18405 ;;		_fputs
 18406 ;; This function uses a reentrant model
 18407 ;;
 18408                           
 18409                           	psect	text68
 18410  016B44                     __ptext68:
 18411                           	opt callstack 0
 18412  016B44                     _fputc:
 18413                           	opt callstack 13
 18414                           
 18415                           ;stkvar	_fp @ sp[(0)+-4]
 18416                           
 18417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18418                           ;incstack = 0
 18419  016B44  0EFC               	movlw	-4
 18420  016B46  006F FF8C  F032    	movff	plusw1,btemp
 18421  016B4C  0EFD               	movlw	-3
 18422  016B4E  50E3               	movf	plusw1,w,c
 18423  016B50  1032               	iorwf	btemp^0,w,c
 18424  016B52  B4D8               	btfsc	status,2,c
 18425  016B54  D009               	goto	u9090
 18426                           
 18427                           ;stkvar	_fp @ sp[(0)+-4]
 18428  016B56  0EFC               	movlw	-4
 18429  016B58  006F FF8C  F032    	movff	plusw1,btemp
 18430  016B5E  0EFD               	movlw	-3
 18431  016B60  50E3               	movf	plusw1,w,c
 18432  016B62  1032               	iorwf	btemp^0,w,c
 18433  016B64  A4D8               	btfss	status,2,c
 18434  016B66  D006               	goto	l9774
 18435  016B68                     u9090:
 18436                           
 18437                           ;stkvar	_c @ sp[(0)+-2]
 18438  016B68  0EFE               	movlw	-2
 18439  016B6A  50E3               	movf	plusw1,w,c
 18440  016B6C  6EE6               	movwf	postinc1,c
 18441  016B6E  EC15  F0C7         	call	_putch	;wreg free
 18442  016B72  D075               	goto	l2895
 18443  016B74                     l9774:
 18444                           
 18445                           ;stkvar	_fp @ sp[(0)+-4]
 18446  016B74  0EFC               	movlw	-4
 18447  016B76  006F FF8C  F03C    	movff	plusw1,btemp+10
 18448  016B7C  0EFD               	movlw	-3
 18449  016B7E  006F FF8C  F03D    	movff	plusw1,btemp+11
 18450  016B84  0E04               	movlw	4
 18451  016B86  243C               	addwf	(btemp+10)^0,w,c
 18452  016B88  6ED9               	movwf	fsr2l,c
 18453  016B8A  0E00               	movlw	0
 18454  016B8C  203D               	addwfc	(btemp+11)^0,w,c
 18455  016B8E  6EDA               	movwf	fsr2h,c
 18456  016B90  50DE               	movf	postinc2,w,c
 18457  016B92  10DE               	iorwf	postinc2,w,c
 18458  016B94  B4D8               	btfsc	status,2,c
 18459  016B96  D026               	goto	u9110
 18460                           
 18461                           ;stkvar	_fp @ sp[(0)+-4]
 18462  016B98  0EFC               	movlw	-4
 18463  016B9A  006F FF8C  F03C    	movff	plusw1,btemp+10
 18464  016BA0  0EFD               	movlw	-3
 18465  016BA2  006F FF8C  F03D    	movff	plusw1,btemp+11
 18466  016BA8  0E04               	movlw	4
 18467  016BAA  243C               	addwf	(btemp+10)^0,w,c
 18468  016BAC  6ED9               	movwf	fsr2l,c
 18469  016BAE  0E00               	movlw	0
 18470  016BB0  203D               	addwfc	(btemp+11)^0,w,c
 18471  016BB2  6EDA               	movwf	fsr2h,c
 18472                           
 18473                           ;stkvar	_fp @ sp[(0)+-4]
 18474  016BB4  0EFC               	movlw	-4
 18475  016BB6  006F FF8C  F03C    	movff	plusw1,btemp+10
 18476  016BBC  0EFD               	movlw	-3
 18477  016BBE  006F FF8C  F03D    	movff	plusw1,btemp+11
 18478  016BC4  0E02               	movlw	2
 18479  016BC6  243C               	addwf	(btemp+10)^0,w,c
 18480  016BC8  6EE9               	movwf	fsr0l,c
 18481  016BCA  0E00               	movlw	0
 18482  016BCC  203D               	addwfc	(btemp+11)^0,w,c
 18483  016BCE  6EEA               	movwf	fsr0h,c
 18484  016BD0  50DE               	movf	postinc2,w,c
 18485  016BD2  5CEE               	subwf	postinc0,w,c
 18486  016BD4  50EE               	movf	postinc0,w,c
 18487  016BD6  0A80               	xorlw	128
 18488  016BD8  6E32               	movwf	btemp^0,c
 18489  016BDA  50DE               	movf	postinc2,w,c
 18490  016BDC  0A80               	xorlw	128
 18491  016BDE  5832               	subwfb	btemp^0,w,c
 18492  016BE0  B0D8               	btfsc	status,0,c
 18493  016BE2  D03D               	goto	l2895
 18494  016BE4                     u9110:
 18495                           
 18496                           ;stkvar	_c @ sp[(0)+-2]
 18497                           ;stkvar	_fp @ sp[(0)+-4]
 18498  016BE4  0EFC               	movlw	-4
 18499  016BE6  006F FF8C  F03C    	movff	plusw1,btemp+10
 18500  016BEC  0EFD               	movlw	-3
 18501  016BEE  006F FF8C  F03D    	movff	plusw1,btemp+11
 18502  016BF4  0E02               	movlw	2
 18503  016BF6  243C               	addwf	(btemp+10)^0,w,c
 18504  016BF8  6ED9               	movwf	fsr2l,c
 18505  016BFA  0E00               	movlw	0
 18506  016BFC  203D               	addwfc	(btemp+11)^0,w,c
 18507  016BFE  6EDA               	movwf	fsr2h,c
 18508  016C00  006F FF78  F03C    	movff	postinc2,btemp+10
 18509  016C06  006F FF74  F03D    	movff	postdec2,btemp+11
 18510                           
 18511                           ;stkvar	_fp @ sp[(0)+-4]
 18512  016C0C  0EFC               	movlw	-4
 18513  016C0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 18514  016C14  0EFD               	movlw	-3
 18515  016C16  006F FF8F FFDA     	movff	plusw1,fsr2h
 18516  016C1C  006F FF78  F03A    	movff	postinc2,btemp+8
 18517  016C22  006F FF74  F03B    	movff	postdec2,btemp+9
 18518  016C28  503C               	movf	(btemp+10)^0,w,c
 18519  016C2A  243A               	addwf	(btemp+8)^0,w,c
 18520  016C2C  6ED9               	movwf	fsr2l,c
 18521  016C2E  503D               	movf	(btemp+11)^0,w,c
 18522  016C30  203B               	addwfc	(btemp+9)^0,w,c
 18523  016C32  6EDA               	movwf	fsr2h,c
 18524  016C34  0EFE               	movlw	-2
 18525  016C36  006F FF8F FFDF     	movff	plusw1,indf2
 18526                           
 18527                           ;stkvar	_fp @ sp[(0)+-4]
 18528  016C3C  0EFC               	movlw	-4
 18529  016C3E  006F FF8C  F03C    	movff	plusw1,btemp+10
 18530  016C44  0EFD               	movlw	-3
 18531  016C46  006F FF8C  F03D    	movff	plusw1,btemp+11
 18532  016C4C  0E02               	movlw	2
 18533  016C4E  243C               	addwf	(btemp+10)^0,w,c
 18534  016C50  6ED9               	movwf	fsr2l,c
 18535  016C52  0E00               	movlw	0
 18536  016C54  203D               	addwfc	(btemp+11)^0,w,c
 18537  016C56  6EDA               	movwf	fsr2h,c
 18538  016C58  2ADE               	incf	postinc2,f,c
 18539  016C5A  0E00               	movlw	0
 18540  016C5C  22DD               	addwfc	postdec2,f,c
 18541  016C5E                     l2895:
 18542                           
 18543                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18544  016C5E  52E5               	movf	postdec1,f,c
 18545  016C60  52E5               	movf	postdec1,f,c
 18546  016C62  52E5               	movf	postdec1,f,c
 18547  016C64  52E5               	movf	postdec1,f,c
 18548  016C66  0012               	return		;funcret
 18549  016C68                     __end_of_fputc:
 18550                           	opt callstack 0
 18551                           
 18552 ;; *************** function _putch *****************
 18553 ;; Defined at:
 18554 ;;		line 158 in file "eadog.c"
 18555 ;; Parameters:    Size  Location     Type
 18556 ;;  c               1  [STACK] unsigned char 
 18557 ;; Auto vars:     Size  Location     Type
 18558 ;;		None
 18559 ;; Return value:  Size  Location     Type
 18560 ;;                  1  [STACK] void 
 18561 ;; Registers used:
 18562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18563 ;; Tracked objects:
 18564 ;;		On entry : 0/1
 18565 ;;		On exit  : 0/0
 18566 ;;		Unchanged: 0/0
 18567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18572 ;;Total ram usage:        0 bytes
 18573 ;; Hardware stack levels used:    1
 18574 ;; Hardware stack levels required when called:    7
 18575 ;; This function calls:
 18576 ;;		_ringBufS_put_dma
 18577 ;; This function is called by:
 18578 ;;		_fputc
 18579 ;; This function uses a reentrant model
 18580 ;;
 18581                           
 18582                           	psect	text69
 18583  018E2A                     __ptext69:
 18584                           	opt callstack 0
 18585  018E2A                     _putch:
 18586                           	opt callstack 13
 18587                           
 18588                           ;eadog.c: 158: void putch(char c);eadog.c: 159: {;eadog.c: 160:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 18589                           ;stkvar	_c @ sp[(0)+-1]
 18590                           
 18591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18592                           ;incstack = 0
 18593  018E2A  0EFF               	movlw	-1
 18594  018E2C  50E3               	movf	plusw1,w,c
 18595  018E2E  6EE6               	movwf	postinc1,c
 18596  018E30  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 18597  018E36  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 18598  018E3C  EC51  F0BB         	call	_ringBufS_put_dma	;wreg free
 18599                           
 18600                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 18601  018E40  52E5               	movf	postdec1,f,c
 18602  018E42  0012               	return		;funcret
 18603  018E44                     __end_of_putch:
 18604                           	opt callstack 0
 18605                           
 18606 ;; *************** function _ringBufS_put_dma *****************
 18607 ;; Defined at:
 18608 ;;		line 67 in file "ringbufs.c"
 18609 ;; Parameters:    Size  Location     Type
 18610 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18611 ;;		 -> ring_buf1(67), 
 18612 ;;  c               1  [STACK] const unsigned char 
 18613 ;; Auto vars:     Size  Location     Type
 18614 ;;		None
 18615 ;; Return value:  Size  Location     Type
 18616 ;;                  1  [STACK] void 
 18617 ;; Registers used:
 18618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18619 ;; Tracked objects:
 18620 ;;		On entry : 0/1
 18621 ;;		On exit  : 0/0
 18622 ;;		Unchanged: 0/0
 18623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18628 ;;Total ram usage:        0 bytes
 18629 ;; Hardware stack levels used:    1
 18630 ;; Hardware stack levels required when called:    6
 18631 ;; This function calls:
 18632 ;;		Nothing
 18633 ;; This function is called by:
 18634 ;;		_putch
 18635 ;; This function uses a reentrant model
 18636 ;;
 18637                           
 18638                           	psect	text70
 18639  0176A2                     __ptext70:
 18640                           	opt callstack 0
 18641  0176A2                     _ringBufS_put_dma:
 18642                           	opt callstack 13
 18643                           
 18644                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18645                           ;stkvar	__this @ sp[(0)+-2]
 18646                           
 18647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18648                           ;incstack = 0
 18649  0176A2  0EFE               	movlw	-2
 18650  0176A4  006F FF8C  F03C    	movff	plusw1,btemp+10
 18651  0176AA  0EFF               	movlw	-1
 18652  0176AC  006F FF8C  F03D    	movff	plusw1,btemp+11
 18653  0176B2  0E42               	movlw	66
 18654  0176B4  243C               	addwf	(btemp+10)^0,w,c
 18655  0176B6  6ED9               	movwf	fsr2l,c
 18656  0176B8  0E00               	movlw	0
 18657  0176BA  203D               	addwfc	(btemp+11)^0,w,c
 18658  0176BC  6EDA               	movwf	fsr2h,c
 18659  0176BE  0E40               	movlw	64
 18660  0176C0  60DF               	cpfslt	indf2,c
 18661  0176C2  D040               	goto	l1502
 18662                           
 18663                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18664                           ;stkvar	_c @ sp[(0)+-3]
 18665                           ;stkvar	__this @ sp[(0)+-2]
 18666  0176C4  0EFE               	movlw	-2
 18667  0176C6  006F FF8C  F03C    	movff	plusw1,btemp+10
 18668  0176CC  0EFF               	movlw	-1
 18669  0176CE  006F FF8C  F03D    	movff	plusw1,btemp+11
 18670  0176D4  0E40               	movlw	64
 18671  0176D6  243C               	addwf	(btemp+10)^0,w,c
 18672  0176D8  6ED9               	movwf	fsr2l,c
 18673  0176DA  0E00               	movlw	0
 18674  0176DC  203D               	addwfc	(btemp+11)^0,w,c
 18675  0176DE  6EDA               	movwf	fsr2h,c
 18676  0176E0  50DF               	movf	indf2,w,c
 18677  0176E2  6E3D               	movwf	(btemp+11)^0,c
 18678                           
 18679                           ;stkvar	__this @ sp[(0)+-2]
 18680  0176E4  0EFE               	movlw	-2
 18681  0176E6  006F FF8C  F03A    	movff	plusw1,btemp+8
 18682  0176EC  0EFF               	movlw	-1
 18683  0176EE  006F FF8C  F03B    	movff	plusw1,btemp+9
 18684  0176F4  503D               	movf	(btemp+11)^0,w,c
 18685  0176F6  243A               	addwf	(btemp+8)^0,w,c
 18686  0176F8  6ED9               	movwf	fsr2l,c
 18687  0176FA  0E00               	movlw	0
 18688  0176FC  203B               	addwfc	(btemp+9)^0,w,c
 18689  0176FE  6EDA               	movwf	fsr2h,c
 18690  017700  0EFD               	movlw	-3
 18691  017702  006F FF8F FFDF     	movff	plusw1,indf2
 18692                           
 18693                           ;ringbufs.c: 71:   ++_this->head;
 18694                           ;stkvar	__this @ sp[(0)+-2]
 18695  017708  0EFE               	movlw	-2
 18696  01770A  006F FF8C  F03C    	movff	plusw1,btemp+10
 18697  017710  0EFF               	movlw	-1
 18698  017712  006F FF8C  F03D    	movff	plusw1,btemp+11
 18699  017718  0E40               	movlw	64
 18700  01771A  243C               	addwf	(btemp+10)^0,w,c
 18701  01771C  6ED9               	movwf	fsr2l,c
 18702  01771E  0E00               	movlw	0
 18703  017720  203D               	addwfc	(btemp+11)^0,w,c
 18704  017722  6EDA               	movwf	fsr2h,c
 18705  017724  2ADF               	incf	indf2,f,c
 18706                           
 18707                           ;ringbufs.c: 72:   ++_this->count;
 18708                           ;stkvar	__this @ sp[(0)+-2]
 18709  017726  0EFE               	movlw	-2
 18710  017728  006F FF8C  F03C    	movff	plusw1,btemp+10
 18711  01772E  0EFF               	movlw	-1
 18712  017730  006F FF8C  F03D    	movff	plusw1,btemp+11
 18713  017736  0E42               	movlw	66
 18714  017738  243C               	addwf	(btemp+10)^0,w,c
 18715  01773A  6ED9               	movwf	fsr2l,c
 18716  01773C  0E00               	movlw	0
 18717  01773E  203D               	addwfc	(btemp+11)^0,w,c
 18718  017740  6EDA               	movwf	fsr2h,c
 18719  017742  2ADF               	incf	indf2,f,c
 18720  017744                     l1502:
 18721                           
 18722                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18723  017744  52E5               	movf	postdec1,f,c
 18724  017746  52E5               	movf	postdec1,f,c
 18725  017748  52E5               	movf	postdec1,f,c
 18726  01774A  0012               	return		;funcret
 18727  01774C                     __end_of_ringBufS_put_dma:
 18728                           	opt callstack 0
 18729                           
 18730 ;; *************** function _atoi *****************
 18731 ;; Defined at:
 18732 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18733 ;; Parameters:    Size  Location     Type
 18734 ;;  s               2  [STACK] PTR const unsigned char 
 18735 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
 18736 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
 18737 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
 18738 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
 18739 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
 18740 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
 18741 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 18742 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
 18743 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
 18744 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 18745 ;; Auto vars:     Size  Location     Type
 18746 ;;  n               2  [STACK] int 
 18747 ;;  neg             2  [STACK] int 
 18748 ;; Return value:  Size  Location     Type
 18749 ;;                  2  [STACK] int 
 18750 ;; Registers used:
 18751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18752 ;; Tracked objects:
 18753 ;;		On entry : 0/1
 18754 ;;		On exit  : 0/0
 18755 ;;		Unchanged: 0/0
 18756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18761 ;;Total ram usage:        0 bytes
 18762 ;; Hardware stack levels used:    1
 18763 ;; Hardware stack levels required when called:    7
 18764 ;; This function calls:
 18765 ;;		_isdigit
 18766 ;;		_isspace
 18767 ;; This function is called by:
 18768 ;;		_vfpfcnvrt
 18769 ;; This function uses a reentrant model
 18770 ;;
 18771                           
 18772                           	psect	text71
 18773  0156C4                     __ptext71:
 18774                           	opt callstack 0
 18775  0156C4                     _atoi:
 18776                           	opt callstack 0
 18777                           
 18778                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18779  0156C4  0E09               	movlw	9
 18780  0156C6  26E1               	addwf	fsr1l,f,c
 18781  0156C8  0E00               	movlw	0
 18782  0156CA  22E2               	addwfc	fsr1h,f,c
 18783                           
 18784                           ;stkvar	_n @ sp[(-9)+5]
 18785                           
 18786                           ;incstack = 0
 18787  0156CC  0EFC               	movlw	-4
 18788  0156CE  6AE3               	clrf	plusw1,c
 18789  0156D0  0EFD               	movlw	-3
 18790  0156D2  6AE3               	clrf	plusw1,c
 18791                           
 18792                           ;stkvar	_neg @ sp[(-9)+7]
 18793  0156D4  0EFE               	movlw	-2
 18794  0156D6  6AE3               	clrf	plusw1,c
 18795  0156D8  0EFF               	movlw	-1
 18796  0156DA  6AE3               	clrf	plusw1,c
 18797  0156DC  D011               	goto	l7878
 18798  0156DE                     l7876:
 18799                           
 18800                           ;stkvar	_s @ sp[(-9)+-2]
 18801  0156DE  0EF5               	movlw	-11
 18802  0156E0  50E3               	movf	plusw1,w,c
 18803  0156E2  0F01               	addlw	1
 18804  0156E4  6E32               	movwf	btemp^0,c
 18805  0156E6  0EF5               	movlw	-11
 18806  0156E8  0060  F0CB  FFE3   	movff	btemp,plusw1
 18807  0156EE  6A32               	clrf	btemp^0,c
 18808  0156F0  0EF6               	movlw	-10
 18809  0156F2  50E3               	movf	plusw1,w,c
 18810  0156F4  2032               	addwfc	btemp^0,w,c
 18811  0156F6  6E32               	movwf	btemp^0,c
 18812  0156F8  0EF6               	movlw	-10
 18813  0156FA  0060  F0CB  FFE3   	movff	btemp,plusw1
 18814  015700                     l7878:
 18815                           
 18816                           ;stkvar	_atoi$5165 @ sp[(-9)+4]
 18817  015700  0EFB               	movlw	-5
 18818  015702  6AE3               	clrf	plusw1,c
 18819  015704  2AE3               	incf	plusw1,f,c
 18820                           
 18821                           ;stkvar	_s @ sp[(-9)+-2]
 18822  015706  50E1               	movf	fsr1l,w,c
 18823  015708  0FF5               	addlw	-11
 18824  01570A  6ED9               	movwf	fsr2l,c
 18825  01570C  50E2               	movf	fsr1h,w,c
 18826  01570E  6EDA               	movwf	fsr2h,c
 18827  015710  0EFF               	movlw	255
 18828  015712  22DA               	addwfc	fsr2h,f,c
 18829  015714  006F FF7B FFF6     	movff	postinc2,tblptrl
 18830  01571A  006F FF77 FFF7     	movff	postdec2,tblptrh
 18831  015720                     	if	0	;tblptru may be non-zero
 18832  015720                     	endif
 18833  015720                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18834  015720  0E00               	movlw	low (__mediumconst shr (0+16))
 18835  015722  6EF8               	movwf	tblptru,c
 18836  015724                     	endif
 18837  015724  0008               	tblrd		*
 18838  015726  50F5               	movf	tablat,w,c
 18839  015728  0A20               	xorlw	32
 18840  01572A  B4D8               	btfsc	status,2,c
 18841  01572C  D023               	goto	l7886
 18842  01572E  0EF7               	movlw	247
 18843  015730  6E3C               	movwf	(btemp+10)^0,c
 18844  015732  0EFF               	movlw	255
 18845  015734  6E3D               	movwf	(btemp+11)^0,c
 18846                           
 18847                           ;stkvar	_s @ sp[(-9)+-2]
 18848  015736  50E1               	movf	fsr1l,w,c
 18849  015738  0FF5               	addlw	-11
 18850  01573A  6ED9               	movwf	fsr2l,c
 18851  01573C  50E2               	movf	fsr1h,w,c
 18852  01573E  6EDA               	movwf	fsr2h,c
 18853  015740  0EFF               	movlw	255
 18854  015742  22DA               	addwfc	fsr2h,f,c
 18855  015744  006F FF7B FFF6     	movff	postinc2,tblptrl
 18856  01574A  006F FF77 FFF7     	movff	postdec2,tblptrh
 18857  015750                     	if	0	;tblptru may be non-zero
 18858  015750                     	endif
 18859  015750                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18860  015750  0E00               	movlw	low (__mediumconst shr (0+16))
 18861  015752  6EF8               	movwf	tblptru,c
 18862  015754                     	endif
 18863  015754  0008               	tblrd		*
 18864  015756  50F5               	movf	tablat,w,c
 18865  015758  6E3A               	movwf	(btemp+8)^0,c
 18866  01575A  6A3B               	clrf	(btemp+9)^0,c
 18867  01575C  503C               	movf	(btemp+10)^0,w,c
 18868  01575E  263A               	addwf	(btemp+8)^0,f,c
 18869  015760  503D               	movf	(btemp+11)^0,w,c
 18870  015762  223B               	addwfc	(btemp+9)^0,f,c
 18871  015764  503B               	movf	(btemp+9)^0,w,c
 18872  015766  E104               	bnz	u7470
 18873  015768  0E05               	movlw	5
 18874  01576A  5C3A               	subwf	(btemp+8)^0,w,c
 18875  01576C  A0D8               	btfss	status,0,c
 18876  01576E  D002               	goto	l7886
 18877  015770                     u7470:
 18878                           
 18879                           ;stkvar	_atoi$5165 @ sp[(-9)+4]
 18880  015770  0EFB               	movlw	-5
 18881  015772  6AE3               	clrf	plusw1,c
 18882  015774                     l7886:
 18883                           
 18884                           ;stkvar	_atoi$5165 @ sp[(-9)+4]
 18885  015774  0EFB               	movlw	-5
 18886  015776  50E3               	movf	plusw1,w,c
 18887  015778  6E3C               	movwf	(btemp+10)^0,c
 18888  01577A  6A3D               	clrf	(btemp+11)^0,c
 18889                           
 18890                           ;stkvar	_atoi$5164 @ sp[(-9)+2]
 18891  01577C  0EF9               	movlw	-7
 18892  01577E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18893  015784  0EFA               	movlw	-6
 18894  015786  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18895                           
 18896                           ;stkvar	_atoi$5164 @ sp[(-9)+2]
 18897  01578C  0EF9               	movlw	-7
 18898  01578E  006F FF8C  F032    	movff	plusw1,btemp
 18899  015794  0EFA               	movlw	-6
 18900  015796  50E3               	movf	plusw1,w,c
 18901  015798  1032               	iorwf	btemp^0,w,c
 18902  01579A  B4D8               	btfsc	status,2,c
 18903  01579C  D01F               	goto	l7896
 18904  01579E  D79F               	goto	l7876
 18905  0157A0                     l7892:
 18906  0157A0  0E01               	movlw	1
 18907  0157A2  6E3C               	movwf	(btemp+10)^0,c
 18908  0157A4  0E00               	movlw	0
 18909  0157A6  6E3D               	movwf	(btemp+11)^0,c
 18910                           
 18911                           ;stkvar	_neg @ sp[(-9)+7]
 18912  0157A8  0EFE               	movlw	-2
 18913  0157AA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18914  0157B0  0EFF               	movlw	-1
 18915  0157B2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18916  0157B8                     l7894:
 18917                           
 18918                           ;stkvar	_s @ sp[(-9)+-2]
 18919  0157B8  0EF5               	movlw	-11
 18920  0157BA  50E3               	movf	plusw1,w,c
 18921  0157BC  0F01               	addlw	1
 18922  0157BE  6E32               	movwf	btemp^0,c
 18923  0157C0  0EF5               	movlw	-11
 18924  0157C2  0060  F0CB  FFE3   	movff	btemp,plusw1
 18925  0157C8  6A32               	clrf	btemp^0,c
 18926  0157CA  0EF6               	movlw	-10
 18927  0157CC  50E3               	movf	plusw1,w,c
 18928  0157CE  2032               	addwfc	btemp^0,w,c
 18929  0157D0  6E32               	movwf	btemp^0,c
 18930  0157D2  0EF6               	movlw	-10
 18931  0157D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 18932  0157DA  D053               	goto	l7902
 18933  0157DC                     l7896:
 18934                           
 18935                           ;stkvar	_s @ sp[(-9)+-2]
 18936  0157DC  50E1               	movf	fsr1l,w,c
 18937  0157DE  0FF5               	addlw	-11
 18938  0157E0  6ED9               	movwf	fsr2l,c
 18939  0157E2  50E2               	movf	fsr1h,w,c
 18940  0157E4  6EDA               	movwf	fsr2h,c
 18941  0157E6  0EFF               	movlw	255
 18942  0157E8  22DA               	addwfc	fsr2h,f,c
 18943  0157EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 18944  0157F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 18945  0157F6                     	if	0	;tblptru may be non-zero
 18946  0157F6                     	endif
 18947  0157F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18948  0157F6  0E00               	movlw	low (__mediumconst shr (0+16))
 18949  0157F8  6EF8               	movwf	tblptru,c
 18950  0157FA                     	endif
 18951  0157FA  0008               	tblrd		*
 18952  0157FC  50F5               	movf	tablat,w,c
 18953  0157FE  6E3C               	movwf	(btemp+10)^0,c
 18954  015800  6A3D               	clrf	(btemp+11)^0,c
 18955                           
 18956                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18957                           ; Switch size 1, requested type "simple"
 18958                           ; Number of cases is 1, Range of values is 0 to 0
 18959                           ; switch strategies available:
 18960                           ; Name         Instructions Cycles
 18961                           ; simple_byte            4     3 (average)
 18962                           ;	Chosen strategy is simple_byte
 18963  015802  503D               	movf	(btemp+11)^0,w,c
 18964  015804  0A00               	xorlw	0	; case 0
 18965  015806  A4D8               	btfss	status,2,c
 18966  015808  D03C               	goto	l7902
 18967                           
 18968                           ; Switch size 1, requested type "simple"
 18969                           ; Number of cases is 2, Range of values is 43 to 45
 18970                           ; switch strategies available:
 18971                           ; Name         Instructions Cycles
 18972                           ; simple_byte            7     4 (average)
 18973                           ;	Chosen strategy is simple_byte
 18974  01580A  503C               	movf	(btemp+10)^0,w,c
 18975  01580C  0A2B               	xorlw	43	; case 43
 18976  01580E  B4D8               	btfsc	status,2,c
 18977  015810  D7D3               	goto	l7894
 18978  015812  0A06               	xorlw	6	; case 45
 18979  015814  B4D8               	btfsc	status,2,c
 18980  015816  D7C4               	goto	l7892
 18981  015818  D034               	goto	l7902
 18982  01581A                     l7898:
 18983                           
 18984                           ;stkvar	_n @ sp[(-9)+5]
 18985  01581A  0EFC               	movlw	-4
 18986  01581C  006F FF8C  F03C    	movff	plusw1,btemp+10
 18987  015822  0EFD               	movlw	-3
 18988  015824  006F FF8C  F03D    	movff	plusw1,btemp+11
 18989  01582A  0E0A               	movlw	10
 18990  01582C  023C               	mulwf	(btemp+10)^0,c
 18991  01582E  006F FFCC  F03A    	movff	prodl,btemp+8
 18992  015834  006F FFD0  F03B    	movff	prodh,btemp+9
 18993  01583A  023D               	mulwf	(btemp+11)^0,c
 18994  01583C  50F3               	movf	prodl,w,c
 18995  01583E  263B               	addwf	(btemp+9)^0,f,c
 18996                           
 18997                           ;stkvar	_s @ sp[(-9)+-2]
 18998  015840  50E1               	movf	fsr1l,w,c
 18999  015842  0FF5               	addlw	-11
 19000  015844  6ED9               	movwf	fsr2l,c
 19001  015846  50E2               	movf	fsr1h,w,c
 19002  015848  6EDA               	movwf	fsr2h,c
 19003  01584A  0EFF               	movlw	255
 19004  01584C  22DA               	addwfc	fsr2h,f,c
 19005  01584E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19006  015854  006F FF77 FFF7     	movff	postdec2,tblptrh
 19007  01585A                     	if	0	;tblptru may be non-zero
 19008  01585A                     	endif
 19009  01585A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19010  01585A  0E00               	movlw	low (__mediumconst shr (0+16))
 19011  01585C  6EF8               	movwf	tblptru,c
 19012  01585E                     	endif
 19013  01585E  0008               	tblrd		*
 19014  015860  50F5               	movf	tablat,w,c
 19015  015862  5E3A               	subwf	(btemp+8)^0,f,c
 19016  015864  0E00               	movlw	0
 19017  015866  5A3B               	subwfb	(btemp+9)^0,f,c
 19018  015868  0E30               	movlw	48
 19019  01586A  263A               	addwf	(btemp+8)^0,f,c
 19020  01586C  0E00               	movlw	0
 19021  01586E  223B               	addwfc	(btemp+9)^0,f,c
 19022                           
 19023                           ;stkvar	_n @ sp[(-9)+5]
 19024  015870  0EFC               	movlw	-4
 19025  015872  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19026  015878  0EFD               	movlw	-3
 19027  01587A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19028  015880  D79B               	goto	l7894
 19029  015882                     l7902:
 19030  015882  0ED0               	movlw	208
 19031  015884  6E3C               	movwf	(btemp+10)^0,c
 19032  015886  0EFF               	movlw	255
 19033  015888  6E3D               	movwf	(btemp+11)^0,c
 19034                           
 19035                           ;stkvar	_s @ sp[(-9)+-2]
 19036  01588A  50E1               	movf	fsr1l,w,c
 19037  01588C  0FF5               	addlw	-11
 19038  01588E  6ED9               	movwf	fsr2l,c
 19039  015890  50E2               	movf	fsr1h,w,c
 19040  015892  6EDA               	movwf	fsr2h,c
 19041  015894  0EFF               	movlw	255
 19042  015896  22DA               	addwfc	fsr2h,f,c
 19043  015898  006F FF7B FFF6     	movff	postinc2,tblptrl
 19044  01589E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19045  0158A4                     	if	0	;tblptru may be non-zero
 19046  0158A4                     	endif
 19047  0158A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19048  0158A4  0E00               	movlw	low (__mediumconst shr (0+16))
 19049  0158A6  6EF8               	movwf	tblptru,c
 19050  0158A8                     	endif
 19051  0158A8  0008               	tblrd		*
 19052  0158AA  50F5               	movf	tablat,w,c
 19053  0158AC  6E3A               	movwf	(btemp+8)^0,c
 19054  0158AE  6A3B               	clrf	(btemp+9)^0,c
 19055  0158B0  503C               	movf	(btemp+10)^0,w,c
 19056  0158B2  263A               	addwf	(btemp+8)^0,f,c
 19057  0158B4  503D               	movf	(btemp+11)^0,w,c
 19058  0158B6  223B               	addwfc	(btemp+9)^0,f,c
 19059  0158B8  503B               	movf	(btemp+9)^0,w,c
 19060  0158BA  E106               	bnz	u7490
 19061  0158BC  0E0A               	movlw	10
 19062  0158BE  5C3A               	subwf	(btemp+8)^0,w,c
 19063  0158C0  B0D8               	btfsc	status,0,c
 19064  0158C2  D002               	goto	u7490
 19065  0158C4  0E01               	movlw	1
 19066  0158C6  D001               	goto	u7500
 19067  0158C8                     u7490:
 19068  0158C8  0E00               	movlw	0
 19069  0158CA                     u7500:
 19070  0158CA  6E3C               	movwf	(btemp+10)^0,c
 19071  0158CC  6A3D               	clrf	(btemp+11)^0,c
 19072                           
 19073                           ;stkvar	_atoi$5166 @ sp[(-9)+0]
 19074  0158CE  0EF7               	movlw	-9
 19075  0158D0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19076  0158D6  0EF8               	movlw	-8
 19077  0158D8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19078                           
 19079                           ;stkvar	_atoi$5166 @ sp[(-9)+0]
 19080  0158DE  0EF7               	movlw	-9
 19081  0158E0  006F FF8C  F032    	movff	plusw1,btemp
 19082  0158E6  0EF8               	movlw	-8
 19083  0158E8  50E3               	movf	plusw1,w,c
 19084  0158EA  1032               	iorwf	btemp^0,w,c
 19085  0158EC  A4D8               	btfss	status,2,c
 19086  0158EE  D795               	goto	l7898
 19087                           
 19088                           ;stkvar	_neg @ sp[(-9)+7]
 19089  0158F0  0EFE               	movlw	-2
 19090  0158F2  006F FF8C  F032    	movff	plusw1,btemp
 19091  0158F8  0EFF               	movlw	-1
 19092  0158FA  50E3               	movf	plusw1,w,c
 19093  0158FC  1032               	iorwf	btemp^0,w,c
 19094  0158FE  A4D8               	btfss	status,2,c
 19095  015900  D00E               	goto	l7912
 19096                           
 19097                           ;stkvar	_n @ sp[(-9)+5]
 19098  015902  0EFC               	movlw	-4
 19099  015904  006F FF8C  F032    	movff	plusw1,btemp
 19100  01590A  1E32               	comf	btemp^0,f,c
 19101  01590C  0EFD               	movlw	-3
 19102  01590E  006F FF8C  F033    	movff	plusw1,btemp+1
 19103  015914  1E33               	comf	(btemp+1)^0,f,c
 19104  015916  2A32               	incf	btemp^0,f,c
 19105  015918  B4D8               	btfsc	status,2,c
 19106  01591A  2A33               	incf	(btemp+1)^0,f,c
 19107  01591C  D008               	goto	l2831
 19108  01591E                     l7912:
 19109                           
 19110                           ;stkvar	_n @ sp[(-9)+5]
 19111  01591E  0EFC               	movlw	-4
 19112  015920  006F FF8C  F032    	movff	plusw1,btemp
 19113  015926  0EFD               	movlw	-3
 19114  015928  006F FF8C  F033    	movff	plusw1,btemp+1
 19115  01592E                     l2831:
 19116                           
 19117                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19118  01592E  0EF5               	movlw	245
 19119  015930  26E1               	addwf	fsr1l,f,c
 19120  015932  0EFF               	movlw	255
 19121  015934  22E2               	addwfc	fsr1h,f,c
 19122  015936  0012               	return		;funcret
 19123  015938                     __end_of_atoi:
 19124                           	opt callstack 0
 19125                           
 19126 ;; *************** function _isspace *****************
 19127 ;; Defined at:
 19128 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19129 ;; Parameters:    Size  Location     Type
 19130 ;;  c               2  [STACK] int 
 19131 ;; Auto vars:     Size  Location     Type
 19132 ;;		None
 19133 ;; Return value:  Size  Location     Type
 19134 ;;                  2  [STACK] int 
 19135 ;; Registers used:
 19136 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19137 ;; Tracked objects:
 19138 ;;		On entry : 0/0
 19139 ;;		On exit  : 0/0
 19140 ;;		Unchanged: 0/0
 19141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19146 ;;Total ram usage:        0 bytes
 19147 ;; Hardware stack levels used:    1
 19148 ;; Hardware stack levels required when called:    6
 19149 ;; This function calls:
 19150 ;;		Nothing
 19151 ;; This function is called by:
 19152 ;;		_atoi
 19153 ;; This function uses a reentrant model
 19154 ;;
 19155                           
 19156                           	psect	text72
 19157  01832A                     __ptext72:
 19158                           	opt callstack 0
 19159  01832A                     _isspace:
 19160                           	opt callstack 0
 19161                           
 19162                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19163  01832A  52E6               	movf	postinc1,f,c
 19164                           
 19165                           ;stkvar	_isspace$5204 @ sp[(-1)+0]
 19166                           
 19167                           ;incstack = 0
 19168  01832C  0EFF               	movlw	-1
 19169  01832E  6AE3               	clrf	plusw1,c
 19170  018330  2AE3               	incf	plusw1,f,c
 19171                           
 19172                           ;stkvar	_c @ sp[(-1)+-2]
 19173  018332  0EFD               	movlw	-3
 19174  018334  006F FF8C  F032    	movff	plusw1,btemp
 19175  01833A  0E20               	movlw	32
 19176  01833C  1832               	xorwf	btemp^0,w,c
 19177  01833E  E104               	bnz	u6460
 19178  018340  0EFE               	movlw	-2
 19179  018342  50E3               	movf	plusw1,w,c
 19180  018344  B4D8               	btfsc	status,2,c
 19181  018346  D012               	goto	l7362
 19182  018348                     u6460:
 19183                           
 19184                           ;stkvar	_c @ sp[(-1)+-2]
 19185  018348  0EFD               	movlw	-3
 19186  01834A  50E3               	movf	plusw1,w,c
 19187  01834C  0FF7               	addlw	247
 19188  01834E  6E3C               	movwf	(btemp+10)^0,c
 19189  018350  0EFE               	movlw	-2
 19190  018352  006F FF8C  F03D    	movff	plusw1,btemp+11
 19191  018358  0EFF               	movlw	255
 19192  01835A  223D               	addwfc	(btemp+11)^0,f,c
 19193  01835C  503D               	movf	(btemp+11)^0,w,c
 19194  01835E  E104               	bnz	u6470
 19195  018360  0E05               	movlw	5
 19196  018362  5C3C               	subwf	(btemp+10)^0,w,c
 19197  018364  A0D8               	btfss	status,0,c
 19198  018366  D002               	goto	l7362
 19199  018368                     u6470:
 19200                           
 19201                           ;stkvar	_isspace$5204 @ sp[(-1)+0]
 19202  018368  0EFF               	movlw	-1
 19203  01836A  6AE3               	clrf	plusw1,c
 19204  01836C                     l7362:
 19205                           
 19206                           ;stkvar	_isspace$5204 @ sp[(-1)+0]
 19207  01836C  0EFF               	movlw	-1
 19208  01836E  50E3               	movf	plusw1,w,c
 19209  018370  6E32               	movwf	btemp^0,c
 19210  018372  6A33               	clrf	(btemp+1)^0,c
 19211                           
 19212                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19213  018374  52E5               	movf	postdec1,f,c
 19214  018376  52E5               	movf	postdec1,f,c
 19215  018378  52E5               	movf	postdec1,f,c
 19216  01837A  0012               	return		;funcret
 19217  01837C                     __end_of_isspace:
 19218                           	opt callstack 0
 19219                           
 19220 ;; *************** function _isdigit *****************
 19221 ;; Defined at:
 19222 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19223 ;; Parameters:    Size  Location     Type
 19224 ;;  c               2  [STACK] int 
 19225 ;; Auto vars:     Size  Location     Type
 19226 ;;		None
 19227 ;; Return value:  Size  Location     Type
 19228 ;;                  2  [STACK] int 
 19229 ;; Registers used:
 19230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19231 ;; Tracked objects:
 19232 ;;		On entry : 0/0
 19233 ;;		On exit  : 0/0
 19234 ;;		Unchanged: 0/0
 19235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19240 ;;Total ram usage:        0 bytes
 19241 ;; Hardware stack levels used:    1
 19242 ;; Hardware stack levels required when called:    6
 19243 ;; This function calls:
 19244 ;;		Nothing
 19245 ;; This function is called by:
 19246 ;;		_vfpfcnvrt
 19247 ;;		_atoi
 19248 ;; This function uses a reentrant model
 19249 ;;
 19250                           
 19251                           	psect	text73
 19252  01880E                     __ptext73:
 19253                           	opt callstack 0
 19254  01880E                     _isdigit:
 19255                           	opt callstack 18
 19256                           
 19257                           ;stkvar	_c @ sp[(0)+-2]
 19258                           
 19259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19260                           ;incstack = 0
 19261  01880E  0EFE               	movlw	-2
 19262  018810  50E3               	movf	plusw1,w,c
 19263  018812  0FD0               	addlw	208
 19264  018814  6E3C               	movwf	(btemp+10)^0,c
 19265  018816  0EFF               	movlw	-1
 19266  018818  006F FF8C  F03D    	movff	plusw1,btemp+11
 19267  01881E  0EFF               	movlw	255
 19268  018820  223D               	addwfc	(btemp+11)^0,f,c
 19269  018822  503D               	movf	(btemp+11)^0,w,c
 19270  018824  E106               	bnz	u5420
 19271  018826  0E0A               	movlw	10
 19272  018828  5C3C               	subwf	(btemp+10)^0,w,c
 19273  01882A  B0D8               	btfsc	status,0,c
 19274  01882C  D002               	goto	u5420
 19275  01882E  0E01               	movlw	1
 19276  018830  D001               	goto	u5430
 19277  018832                     u5420:
 19278  018832  0E00               	movlw	0
 19279  018834                     u5430:
 19280  018834  6E32               	movwf	btemp^0,c
 19281  018836  6A33               	clrf	(btemp+1)^0,c
 19282                           
 19283                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19284  018838  52E5               	movf	postdec1,f,c
 19285  01883A  52E5               	movf	postdec1,f,c
 19286  01883C  0012               	return		;funcret
 19287  01883E                     __end_of_isdigit:
 19288                           	opt callstack 0
 19289                           
 19290 ;; *************** function _set_vterm *****************
 19291 ;; Defined at:
 19292 ;;		line 107 in file "mconfig.c"
 19293 ;; Parameters:    Size  Location     Type
 19294 ;;  vterm           1  [STACK] const unsigned char 
 19295 ;; Auto vars:     Size  Location     Type
 19296 ;;		None
 19297 ;; Return value:  Size  Location     Type
 19298 ;;                  1  [STACK] unsigned char 
 19299 ;; Registers used:
 19300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 19301 ;; Tracked objects:
 19302 ;;		On entry : 0/1
 19303 ;;		On exit  : 0/0
 19304 ;;		Unchanged: 0/0
 19305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19310 ;;Total ram usage:        0 bytes
 19311 ;; Hardware stack levels used:    1
 19312 ;; Hardware stack levels required when called:    6
 19313 ;; This function calls:
 19314 ;;		Nothing
 19315 ;; This function is called by:
 19316 ;;		_main
 19317 ;;		_check_help
 19318 ;; This function uses a reentrant model
 19319 ;;
 19320                           
 19321                           	psect	text74
 19322  018D96                     __ptext74:
 19323                           	opt callstack 0
 19324  018D96                     _set_vterm:
 19325                           	opt callstack 24
 19326                           
 19327                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 19328                           ;stkvar	_vterm @ sp[(0)+-1]
 19329                           
 19330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19331                           ;incstack = 0
 19332  018D96  0EFF               	movlw	-1
 19333  018D98  006F FF8C  F03D    	movff	plusw1,btemp+11
 19334  018D9E  0E03               	movlw	3
 19335  018DA0  163D               	andwf	(btemp+11)^0,f,c
 19336  018DA2  EE22  F01F         	lfsr	2,_D+288
 19337  018DA6  50DF               	movf	223,w,c
 19338  018DA8  183D               	xorwf	(btemp+11)^0,w,c
 19339  018DAA  0BFE               	andlw	-2
 19340  018DAC  183D               	xorwf	(btemp+11)^0,w,c
 19341  018DAE  6EDF               	movwf	223,c
 19342                           
 19343                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19344  018DB0  52E5               	movf	postdec1,f,c
 19345  018DB2  0012               	return		;funcret
 19346  018DB4                     __end_of_set_vterm:
 19347                           	opt callstack 0
 19348                           
 19349 ;; *************** function _set_temp_display_help *****************
 19350 ;; Defined at:
 19351 ;;		line 211 in file "mconfig.c"
 19352 ;; Parameters:    Size  Location     Type
 19353 ;;  new_response    1  [STACK] const enum E16501
 19354 ;; Auto vars:     Size  Location     Type
 19355 ;;		None
 19356 ;; Return value:  Size  Location     Type
 19357 ;;                  1  [STACK] enum E16501
 19358 ;; Registers used:
 19359 ;;		wreg, fsr1l, fsr1h
 19360 ;; Tracked objects:
 19361 ;;		On entry : 0/2
 19362 ;;		On exit  : 3F/2
 19363 ;;		Unchanged: 0/0
 19364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19369 ;;Total ram usage:        0 bytes
 19370 ;; Hardware stack levels used:    1
 19371 ;; Hardware stack levels required when called:    6
 19372 ;; This function calls:
 19373 ;;		Nothing
 19374 ;; This function is called by:
 19375 ;;		_check_help
 19376 ;; This function uses a reentrant model
 19377 ;;
 19378                           
 19379                           	psect	text75
 19380  018EF6                     __ptext75:
 19381                           	opt callstack 0
 19382  018EF6                     _set_temp_display_help:
 19383                           	opt callstack 23
 19384                           
 19385                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 19386                           
 19387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19388                           ;incstack = 0
 19389  018EF6  0102               	movlb	2	; () banked
 19390  018EF8  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 19391                           
 19392                           ; BSR set to: 2
 19393                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 19394                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19395  018EFA  0EFF               	movlw	-1
 19396  018EFC  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 19397                           
 19398                           ; BSR set to: 2
 19399                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19400  018F02  52E5               	movf	postdec1,f,c
 19401  018F04  0012               	return		;funcret
 19402  018F06                     __end_of_set_temp_display_help:
 19403                           	opt callstack 0
 19404                           
 19405 ;; *************** function _set_display_info *****************
 19406 ;; Defined at:
 19407 ;;		line 200 in file "mconfig.c"
 19408 ;; Parameters:    Size  Location     Type
 19409 ;;  new_response    1  [STACK] const enum E16501
 19410 ;; Auto vars:     Size  Location     Type
 19411 ;;		None
 19412 ;; Return value:  Size  Location     Type
 19413 ;;                  1  [STACK] enum E16986
 19414 ;; Registers used:
 19415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19416 ;; Tracked objects:
 19417 ;;		On entry : 0/1
 19418 ;;		On exit  : 0/0
 19419 ;;		Unchanged: 0/0
 19420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19425 ;;Total ram usage:        0 bytes
 19426 ;; Hardware stack levels used:    1
 19427 ;; Hardware stack levels required when called:    7
 19428 ;; This function calls:
 19429 ;;		_TimerDone
 19430 ;; This function is called by:
 19431 ;;		_main
 19432 ;;		_check_help
 19433 ;; This function uses a reentrant model
 19434 ;;
 19435                           
 19436                           	psect	text76
 19437  018DB4                     __ptext76:
 19438                           	opt callstack 0
 19439  018DB4                     _set_display_info:
 19440                           	opt callstack 23
 19441                           
 19442                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 19443                           
 19444                           ; BSR set to: 2
 19445                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19446                           ;incstack = 0
 19447  018DB4  0E07               	movlw	7
 19448  018DB6  6EE6               	movwf	postinc1,c
 19449  018DB8  EC45  F0C6         	call	_TimerDone	;wreg free
 19450  018DBC  5032               	movf	btemp^0,w,c
 19451  018DBE  B4D8               	btfsc	status,2,c
 19452  018DC0  D006               	goto	l1639
 19453                           
 19454                           ;mconfig.c: 205:   old_info = V.response.info;
 19455  018DC2  0102               	movlb	2	; () banked
 19456  018DC4  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 19457                           
 19458                           ; BSR set to: 2
 19459                           ;mconfig.c: 206:   V.response.info = new_response_info;
 19460                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19461  018DC6  0EFF               	movlw	-1
 19462  018DC8  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 19463  018DCE                     l1639:
 19464                           
 19465                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19466  018DCE  52E5               	movf	postdec1,f,c
 19467  018DD0  0012               	return		;funcret
 19468  018DD2                     __end_of_set_display_info:
 19469                           	opt callstack 0
 19470                           
 19471 ;; *************** function _mode_lamp_dim *****************
 19472 ;; Defined at:
 19473 ;;		line 13 in file "mconfig.c"
 19474 ;; Parameters:    Size  Location     Type
 19475 ;;  level           2  [STACK] const unsigned short 
 19476 ;; Auto vars:     Size  Location     Type
 19477 ;;		None
 19478 ;; Return value:  Size  Location     Type
 19479 ;;                  1  [STACK] void 
 19480 ;; Registers used:
 19481 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19482 ;; Tracked objects:
 19483 ;;		On entry : 0/2
 19484 ;;		On exit  : 0/0
 19485 ;;		Unchanged: 0/0
 19486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19491 ;;Total ram usage:        0 bytes
 19492 ;; Hardware stack levels used:    1
 19493 ;; Hardware stack levels required when called:    7
 19494 ;; This function calls:
 19495 ;;		_PWM8_LoadDutyValue
 19496 ;; This function is called by:
 19497 ;;		_main
 19498 ;;		_check_help
 19499 ;; This function uses a reentrant model
 19500 ;;
 19501                           
 19502                           	psect	text77
 19503  018E5E                     __ptext77:
 19504                           	opt callstack 0
 19505  018E5E                     _mode_lamp_dim:
 19506                           	opt callstack 23
 19507                           
 19508                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 19509                           ;stkvar	_level @ sp[(0)+-2]
 19510                           
 19511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19512                           ;incstack = 0
 19513  018E5E  0EFE               	movlw	-2
 19514  018E60  006F FF8F FFE6     	movff	plusw1,postinc1
 19515  018E66  006F FF8F FFE6     	movff	plusw1,postinc1
 19516  018E6C  ECB3  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 19517                           
 19518                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 19519  018E70  52E5               	movf	postdec1,f,c
 19520  018E72  52E5               	movf	postdec1,f,c
 19521  018E74  0012               	return		;funcret
 19522  018E76                     __end_of_mode_lamp_dim:
 19523                           	opt callstack 0
 19524                           
 19525 ;; *************** function _mode_lamp_bright *****************
 19526 ;; Defined at:
 19527 ;;		line 18 in file "mconfig.c"
 19528 ;; Parameters:    Size  Location     Type
 19529 ;;		None
 19530 ;; Auto vars:     Size  Location     Type
 19531 ;;		None
 19532 ;; Return value:  Size  Location     Type
 19533 ;;                  1  [STACK] void 
 19534 ;; Registers used:
 19535 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19536 ;; Tracked objects:
 19537 ;;		On entry : 0/2
 19538 ;;		On exit  : 0/0
 19539 ;;		Unchanged: 0/0
 19540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19545 ;;Total ram usage:        0 bytes
 19546 ;; Hardware stack levels used:    1
 19547 ;; Hardware stack levels required when called:    7
 19548 ;; This function calls:
 19549 ;;		_PWM8_LoadDutyValue
 19550 ;; This function is called by:
 19551 ;;		_check_help
 19552 ;; This function uses a reentrant model
 19553 ;;
 19554                           
 19555                           	psect	text78
 19556  018F14                     __ptext78:
 19557                           	opt callstack 0
 19558  018F14                     _mode_lamp_bright:
 19559                           	opt callstack 22
 19560                           
 19561                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 19562                           
 19563                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19564                           ;incstack = 0
 19565  018F14  0E2C               	movlw	44
 19566  018F16  6EE6               	movwf	postinc1,c
 19567  018F18  0E01               	movlw	1
 19568  018F1A  6EE6               	movwf	postinc1,c
 19569  018F1C  ECB3  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 19570                           
 19571                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 19572  018F20  0012               	return		;funcret
 19573  018F22                     __end_of_mode_lamp_bright:
 19574                           	opt callstack 0
 19575                           
 19576 ;; *************** function _PWM8_LoadDutyValue *****************
 19577 ;; Defined at:
 19578 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 19579 ;; Parameters:    Size  Location     Type
 19580 ;;  dutyValue       2  [STACK] unsigned short 
 19581 ;; Auto vars:     Size  Location     Type
 19582 ;;		None
 19583 ;; Return value:  Size  Location     Type
 19584 ;;                  1  [STACK] void 
 19585 ;; Registers used:
 19586 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19587 ;; Tracked objects:
 19588 ;;		On entry : 0/2
 19589 ;;		On exit  : 0/0
 19590 ;;		Unchanged: 0/0
 19591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19596 ;;Total ram usage:        0 bytes
 19597 ;; Hardware stack levels used:    1
 19598 ;; Hardware stack levels required when called:    6
 19599 ;; This function calls:
 19600 ;;		Nothing
 19601 ;; This function is called by:
 19602 ;;		_mode_lamp_dim
 19603 ;;		_mode_lamp_bright
 19604 ;; This function uses a reentrant model
 19605 ;;
 19606                           
 19607                           	psect	text79
 19608  018566                     __ptext79:
 19609                           	opt callstack 0
 19610  018566                     _PWM8_LoadDutyValue:
 19611                           	opt callstack 23
 19612                           
 19613                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19614                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19615                           
 19616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19617                           ;incstack = 0
 19618  018566  0EFE               	movlw	-2
 19619  018568  006F FF8C  F03C    	movff	plusw1,btemp+10
 19620  01856E  0EFF               	movlw	-1
 19621  018570  006F FF8C  F03D    	movff	plusw1,btemp+11
 19622  018576  90D8               	bcf	status,0,c
 19623  018578  323D               	rrcf	(btemp+11)^0,f,c
 19624  01857A  323C               	rrcf	(btemp+10)^0,f,c
 19625  01857C  90D8               	bcf	status,0,c
 19626  01857E  323D               	rrcf	(btemp+11)^0,f,c
 19627  018580  323C               	rrcf	(btemp+10)^0,f,c
 19628  018582  503C               	movf	(btemp+10)^0,w,c
 19629  018584  6E61               	movwf	97,c	;volatile
 19630                           
 19631                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 19632                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19633  018586  0EFE               	movlw	-2
 19634  018588  006F FF8C  F03D    	movff	plusw1,btemp+11
 19635  01858E  0E03               	movlw	3
 19636  018590  163D               	andwf	(btemp+11)^0,f,c
 19637  018592  0E06               	movlw	6
 19638  018594  6E32               	movwf	btemp^0,c
 19639  018596                     u7955:
 19640  018596  90D8               	bcf	status,0,c
 19641  018598  363D               	rlcf	(btemp+11)^0,f,c
 19642  01859A  2E32               	decfsz	btemp^0,f,c
 19643  01859C  D7FC               	goto	u7955
 19644  01859E  503D               	movf	(btemp+11)^0,w,c
 19645  0185A0  6E60               	movwf	96,c	;volatile
 19646                           
 19647                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19648  0185A2  52E5               	movf	postdec1,f,c
 19649  0185A4  52E5               	movf	postdec1,f,c
 19650  0185A6  0012               	return		;funcret
 19651  0185A8                     __end_of_PWM8_LoadDutyValue:
 19652                           	opt callstack 0
 19653                           
 19654 ;; *************** function _help_button *****************
 19655 ;; Defined at:
 19656 ;;		line 26 in file "mconfig.c"
 19657 ;; Parameters:    Size  Location     Type
 19658 ;;		None
 19659 ;; Auto vars:     Size  Location     Type
 19660 ;;		None
 19661 ;; Return value:  Size  Location     Type
 19662 ;;                  1  [STACK] _Bool 
 19663 ;; Registers used:
 19664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19665 ;; Tracked objects:
 19666 ;;		On entry : 0/2
 19667 ;;		On exit  : 0/0
 19668 ;;		Unchanged: 0/0
 19669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19674 ;;Total ram usage:        0 bytes
 19675 ;; Hardware stack levels used:    1
 19676 ;; Hardware stack levels required when called:    7
 19677 ;; This function calls:
 19678 ;;		_StartTimer
 19679 ;;		_TimerDone
 19680 ;; This function is called by:
 19681 ;;		_check_help
 19682 ;; This function uses a reentrant model
 19683 ;;
 19684                           
 19685                           	psect	text80
 19686  0186A2                     __ptext80:
 19687                           	opt callstack 0
 19688  0186A2                     _help_button:
 19689                           	opt callstack 22
 19690                           
 19691                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19692                           
 19693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19694                           ;incstack = 0
 19695  0186A2  B0CB               	btfsc	203,0,c	;volatile
 19696  0186A4  D00C               	goto	l1582
 19697                           
 19698                           ;mconfig.c: 29:   V.help = 1;
 19699  0186A6  0102               	movlb	2	; () banked
 19700  0186A8  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 19701                           
 19702                           ; BSR set to: 2
 19703                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19704  0186AA  0E08               	movlw	8
 19705  0186AC  6EE6               	movwf	postinc1,c
 19706  0186AE  EC45  F0C6         	call	_TimerDone	;wreg free
 19707  0186B2  5032               	movf	btemp^0,w,c
 19708  0186B4  B4D8               	btfsc	status,2,c
 19709  0186B6  D003               	goto	l1582
 19710                           
 19711                           ;mconfig.c: 31:    return 1;
 19712  0186B8  0E01               	movlw	1
 19713  0186BA  6E32               	movwf	btemp^0,c
 19714  0186BC  0012               	return	
 19715  0186BE                     l1582:
 19716                           
 19717                           ;mconfig.c: 34:  if (!V.help)
 19718  0186BE  0102               	movlb	2	; () banked
 19719  0186C0  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 19720  0186C2  D008               	goto	l8836
 19721                           
 19722                           ; BSR set to: 2
 19723                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19724  0186C4  0E2C               	movlw	44
 19725  0186C6  6EE6               	movwf	postinc1,c
 19726  0186C8  0E01               	movlw	1
 19727  0186CA  6EE6               	movwf	postinc1,c
 19728  0186CC  0E08               	movlw	8
 19729  0186CE  6EE6               	movwf	postinc1,c
 19730  0186D0  EC33  F0C3         	call	_StartTimer	;wreg free
 19731  0186D4                     l8836:
 19732                           
 19733                           ;mconfig.c: 37:  return 0;
 19734  0186D4  0E00               	movlw	0
 19735  0186D6  6E32               	movwf	btemp^0,c
 19736                           
 19737                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19738  0186D8  0012               	return		;funcret
 19739  0186DA                     __end_of_help_button:
 19740                           	opt callstack 0
 19741                           
 19742 ;; *************** function _TimerDone *****************
 19743 ;; Defined at:
 19744 ;;		line 20 in file "timers.c"
 19745 ;; Parameters:    Size  Location     Type
 19746 ;;  timer           1  [STACK] const unsigned char 
 19747 ;; Auto vars:     Size  Location     Type
 19748 ;;		None
 19749 ;; Return value:  Size  Location     Type
 19750 ;;                  1  [STACK] _Bool 
 19751 ;; Registers used:
 19752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19753 ;; Tracked objects:
 19754 ;;		On entry : 0/1
 19755 ;;		On exit  : 0/0
 19756 ;;		Unchanged: 0/0
 19757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19762 ;;Total ram usage:        0 bytes
 19763 ;; Hardware stack levels used:    1
 19764 ;; Hardware stack levels required when called:    6
 19765 ;; This function calls:
 19766 ;;		Nothing
 19767 ;; This function is called by:
 19768 ;;		_main
 19769 ;;		_WaitMs
 19770 ;;		_help_button
 19771 ;;		_check_help
 19772 ;;		_set_display_info
 19773 ;; This function uses a reentrant model
 19774 ;;
 19775                           
 19776                           	psect	text81
 19777  018C8A                     __ptext81:
 19778                           	opt callstack 0
 19779  018C8A                     _TimerDone:
 19780                           	opt callstack 23
 19781                           
 19782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19783                           ;incstack = 0
 19784  018C8A  0004               	clrwdt		;# 
 19785                           
 19786                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19787                           ;stkvar	_timer @ sp[(0)+-1]
 19788  018C8C  0EFF               	movlw	-1
 19789  018C8E  50E3               	movf	plusw1,w,c
 19790  018C90  0D02               	mullw	2
 19791  018C92  50F3               	movf	243,w,c
 19792  018C94  0F89               	addlw	low _tickCount
 19793  018C96  6ED9               	movwf	fsr2l,c
 19794  018C98  6ADA               	clrf	fsr2h,c
 19795  018C9A  50DE               	movf	postinc2,w,c
 19796  018C9C  10DE               	iorwf	postinc2,w,c
 19797  018C9E  A4D8               	btfss	status,2,c
 19798  018CA0  D002               	goto	l8198
 19799                           
 19800                           ;timers.c: 24:   return 1;
 19801  018CA2  0E01               	movlw	1
 19802  018CA4  D001               	goto	L20
 19803  018CA6                     l8198:
 19804                           
 19805                           ;timers.c: 26:  return 0;
 19806  018CA6  0E00               	movlw	0
 19807  018CA8                     L20:
 19808  018CA8  6E32               	movwf	btemp^0,c
 19809                           
 19810                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19811  018CAA  52E5               	movf	postdec1,f,c
 19812  018CAC  0012               	return		;funcret
 19813  018CAE                     __end_of_TimerDone:
 19814                           	opt callstack 0
 19815                           
 19816 ;; *************** function _StartTimer *****************
 19817 ;; Defined at:
 19818 ;;		line 12 in file "timers.c"
 19819 ;; Parameters:    Size  Location     Type
 19820 ;;  timer           1  [STACK] const unsigned char 
 19821 ;;  count           2  [STACK] const unsigned short 
 19822 ;; Auto vars:     Size  Location     Type
 19823 ;;		None
 19824 ;; Return value:  Size  Location     Type
 19825 ;;                  1  [STACK] void 
 19826 ;; Registers used:
 19827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19828 ;; Tracked objects:
 19829 ;;		On entry : 0/1
 19830 ;;		On exit  : 0/0
 19831 ;;		Unchanged: 0/0
 19832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19837 ;;Total ram usage:        0 bytes
 19838 ;; Hardware stack levels used:    1
 19839 ;; Hardware stack levels required when called:    6
 19840 ;; This function calls:
 19841 ;;		Nothing
 19842 ;; This function is called by:
 19843 ;;		_main
 19844 ;;		_WaitMs
 19845 ;;		_help_button
 19846 ;;		_check_help
 19847 ;; This function uses a reentrant model
 19848 ;;
 19849                           
 19850                           	psect	text82
 19851  018666                     __ptext82:
 19852                           	opt callstack 0
 19853  018666                     _StartTimer:
 19854                           	opt callstack 21
 19855                           
 19856                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 19857                           ;stkvar	_count @ sp[(0)+-3]
 19858                           
 19859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19860                           ;incstack = 0
 19861  018666  0EFD               	movlw	-3
 19862  018668  006F FF8C  F03C    	movff	plusw1,btemp+10
 19863  01866E  0EFE               	movlw	-2
 19864  018670  006F FF8C  F03D    	movff	plusw1,btemp+11
 19865  018676  90D8               	bcf	status,0,c
 19866  018678  343C               	rlcf	(btemp+10)^0,w,c
 19867  01867A  6E3A               	movwf	(btemp+8)^0,c
 19868  01867C  343D               	rlcf	(btemp+11)^0,w,c
 19869  01867E  6E3B               	movwf	(btemp+9)^0,c
 19870                           
 19871                           ;stkvar	_timer @ sp[(0)+-1]
 19872  018680  0EFF               	movlw	-1
 19873  018682  50E3               	movf	plusw1,w,c
 19874  018684  0D02               	mullw	2
 19875  018686  50F3               	movf	243,w,c
 19876  018688  0F89               	addlw	low _tickCount
 19877  01868A  6ED9               	movwf	fsr2l,c
 19878  01868C  6ADA               	clrf	fsr2h,c
 19879  01868E  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 19880  018694  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 19881                           
 19882                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 19883  01869A  52E5               	movf	postdec1,f,c
 19884  01869C  52E5               	movf	postdec1,f,c
 19885  01869E  52E5               	movf	postdec1,f,c
 19886  0186A0  0012               	return		;funcret
 19887  0186A2                     __end_of_StartTimer:
 19888                           	opt callstack 0
 19889                           
 19890 ;; *************** function _display_info *****************
 19891 ;; Defined at:
 19892 ;;		line 190 in file "mconfig.c"
 19893 ;; Parameters:    Size  Location     Type
 19894 ;;		None
 19895 ;; Auto vars:     Size  Location     Type
 19896 ;;		None
 19897 ;; Return value:  Size  Location     Type
 19898 ;;                  1  [STACK] enum E16501
 19899 ;; Registers used:
 19900 ;;		btemp
 19901 ;; Tracked objects:
 19902 ;;		On entry : 0/2
 19903 ;;		On exit  : 0/0
 19904 ;;		Unchanged: 0/0
 19905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19910 ;;Total ram usage:        0 bytes
 19911 ;; Hardware stack levels used:    1
 19912 ;; Hardware stack levels required when called:    6
 19913 ;; This function calls:
 19914 ;;		Nothing
 19915 ;; This function is called by:
 19916 ;;		_check_help
 19917 ;; This function uses a reentrant model
 19918 ;;
 19919                           
 19920                           	psect	text83
 19921  018F76                     __ptext83:
 19922                           	opt callstack 0
 19923  018F76                     _display_info:
 19924                           	opt callstack 23
 19925                           
 19926                           ;mconfig.c: 192:  return V.response.info;
 19927                           
 19928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19929                           ;incstack = 0
 19930  018F76  0060  FA8C  F032   	movff	_V+163,btemp	;volatile
 19931                           
 19932                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19933  018F7C  0012               	return		;funcret
 19934  018F7E                     __end_of_display_info:
 19935                           	opt callstack 0
 19936                           
 19937 ;; *************** function _display_help *****************
 19938 ;; Defined at:
 19939 ;;		line 195 in file "mconfig.c"
 19940 ;; Parameters:    Size  Location     Type
 19941 ;;		None
 19942 ;; Auto vars:     Size  Location     Type
 19943 ;;		None
 19944 ;; Return value:  Size  Location     Type
 19945 ;;                  1  [STACK] enum E16501
 19946 ;; Registers used:
 19947 ;;		btemp
 19948 ;; Tracked objects:
 19949 ;;		On entry : 3F/2
 19950 ;;		On exit  : 0/0
 19951 ;;		Unchanged: 0/0
 19952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19957 ;;Total ram usage:        0 bytes
 19958 ;; Hardware stack levels used:    1
 19959 ;; Hardware stack levels required when called:    6
 19960 ;; This function calls:
 19961 ;;		Nothing
 19962 ;; This function is called by:
 19963 ;;		_check_help
 19964 ;; This function uses a reentrant model
 19965 ;;
 19966                           
 19967                           	psect	text84
 19968  018F7E                     __ptext84:
 19969                           	opt callstack 0
 19970  018F7E                     _display_help:
 19971                           	opt callstack 23
 19972                           
 19973                           ;mconfig.c: 197:  return V.response.help_temp;
 19974                           
 19975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19976                           ;incstack = 0
 19977  018F7E  0060  FA90  F032   	movff	_V+164,btemp	;volatile
 19978                           
 19979                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19980  018F84  0012               	return		;funcret
 19981  018F86                     __end_of_display_help:
 19982                           	opt callstack 0
 19983                           
 19984 ;; *************** function _check_enter_button *****************
 19985 ;; Defined at:
 19986 ;;		line 42 in file "hid.c"
 19987 ;; Parameters:    Size  Location     Type
 19988 ;;  h               1  [STACK] PTR struct H_data
 19989 ;;		 -> H(7), 
 19990 ;; Auto vars:     Size  Location     Type
 19991 ;;		None
 19992 ;; Return value:  Size  Location     Type
 19993 ;;                  1  [STACK] _Bool 
 19994 ;; Registers used:
 19995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19996 ;; Tracked objects:
 19997 ;;		On entry : 0/1
 19998 ;;		On exit  : 0/0
 19999 ;;		Unchanged: 0/0
 20000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20005 ;;Total ram usage:        0 bytes
 20006 ;; Hardware stack levels used:    1
 20007 ;; Hardware stack levels required when called:    6
 20008 ;; This function calls:
 20009 ;;		Nothing
 20010 ;; This function is called by:
 20011 ;;		_main
 20012 ;; This function uses a reentrant model
 20013 ;;
 20014                           
 20015                           	psect	text85
 20016  0185A8                     __ptext85:
 20017                           	opt callstack 0
 20018  0185A8                     _check_enter_button:
 20019                           	opt callstack 24
 20020                           
 20021                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 20022                           ;stkvar	_h @ sp[(0)+-1]
 20023                           
 20024                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20025                           ;incstack = 0
 20026  0185A8  0EFF               	movlw	-1
 20027  0185AA  50E3               	movf	plusw1,w,c
 20028  0185AC  6ED9               	movwf	fsr2l,c
 20029  0185AE  6ADA               	clrf	fsr2h,c
 20030  0185B0  0E04               	movlw	4
 20031  0185B2  26D9               	addwf	fsr2l,f,c
 20032  0185B4  50DF               	movf	indf2,w,c
 20033  0185B6  A4D8               	btfss	status,2,c
 20034  0185B8  D013               	goto	l9320
 20035                           
 20036                           ;stkvar	_h @ sp[(0)+-1]
 20037  0185BA  0EFF               	movlw	-1
 20038  0185BC  50E3               	movf	plusw1,w,c
 20039  0185BE  6ED9               	movwf	fsr2l,c
 20040  0185C0  6ADA               	clrf	fsr2h,c
 20041  0185C2  0E05               	movlw	5
 20042  0185C4  26D9               	addwf	fsr2l,f,c
 20043  0185C6  50DF               	movf	indf2,w,c
 20044  0185C8  A4D8               	btfss	status,2,c
 20045  0185CA  D00A               	goto	l9320
 20046                           
 20047                           ;hid.c: 45:   h->wait_enter = 1;
 20048                           ;stkvar	_h @ sp[(0)+-1]
 20049  0185CC  0EFF               	movlw	-1
 20050  0185CE  50E3               	movf	plusw1,w,c
 20051  0185D0  6ED9               	movwf	fsr2l,c
 20052  0185D2  6ADA               	clrf	fsr2h,c
 20053  0185D4  0E04               	movlw	4
 20054  0185D6  26D9               	addwf	fsr2l,f,c
 20055  0185D8  0E01               	movlw	1
 20056  0185DA  6EDF               	movwf	indf2,c
 20057                           
 20058                           ;hid.c: 46:   return 1;
 20059  0185DC  0E01               	movlw	1
 20060  0185DE  D001               	goto	L21
 20061  0185E0                     l9320:
 20062                           
 20063                           ;hid.c: 48:  return 0;
 20064  0185E0  0E00               	movlw	0
 20065  0185E2                     L21:
 20066  0185E2  6E32               	movwf	btemp^0,c
 20067                           
 20068                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 20069  0185E4  52E5               	movf	postdec1,f,c
 20070  0185E6  0012               	return		;funcret
 20071  0185E8                     __end_of_check_enter_button:
 20072                           	opt callstack 0
 20073                           
 20074 ;; *************** function _check_adc_scan *****************
 20075 ;; Defined at:
 20076 ;;		line 56 in file "daq.c"
 20077 ;; Parameters:    Size  Location     Type
 20078 ;;		None
 20079 ;; Auto vars:     Size  Location     Type
 20080 ;;		None
 20081 ;; Return value:  Size  Location     Type
 20082 ;;                  1  [STACK] _Bool 
 20083 ;; Registers used:
 20084 ;;		btemp
 20085 ;; Tracked objects:
 20086 ;;		On entry : 0/1
 20087 ;;		On exit  : 0/0
 20088 ;;		Unchanged: 0/0
 20089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20094 ;;Total ram usage:        0 bytes
 20095 ;; Hardware stack levels used:    1
 20096 ;; Hardware stack levels required when called:    6
 20097 ;; This function calls:
 20098 ;;		Nothing
 20099 ;; This function is called by:
 20100 ;;		_main
 20101 ;; This function uses a reentrant model
 20102 ;;
 20103                           
 20104                           	psect	text86
 20105  018F86                     __ptext86:
 20106                           	opt callstack 0
 20107  018F86                     _check_adc_scan:
 20108                           	opt callstack 24
 20109                           
 20110                           ;daq.c: 58:  return R.done;
 20111                           
 20112                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20113                           ;incstack = 0
 20114  018F86  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 20115                           
 20116                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20117  018F8C  0012               	return		;funcret
 20118  018F8E                     __end_of_check_adc_scan:
 20119                           	opt callstack 0
 20120                           
 20121 ;; *************** function _calc_model_data *****************
 20122 ;; Defined at:
 20123 ;;		line 55 in file "mbmc.c"
 20124 ;; Parameters:    Size  Location     Type
 20125 ;;		None
 20126 ;; Auto vars:     Size  Location     Type
 20127 ;;		None
 20128 ;; Return value:  Size  Location     Type
 20129 ;;                  1  [STACK] void 
 20130 ;; Registers used:
 20131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20132 ;; Tracked objects:
 20133 ;;		On entry : 0/1
 20134 ;;		On exit  : 3C/0
 20135 ;;		Unchanged: 0/0
 20136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20141 ;;Total ram usage:        0 bytes
 20142 ;; Hardware stack levels used:    1
 20143 ;; Hardware stack levels required when called:    9
 20144 ;; This function calls:
 20145 ;;		___fladd
 20146 ;;		___flmul
 20147 ;;		___flsub
 20148 ;;		_lp_filter
 20149 ;; This function is called by:
 20150 ;;		_main
 20151 ;; This function uses a reentrant model
 20152 ;;
 20153                           
 20154                           	psect	text87
 20155  014EAA                     __ptext87:
 20156                           	opt callstack 0
 20157  014EAA                     _calc_model_data:
 20158                           	opt callstack 21
 20159                           
 20160                           ;mbmc.c: 57:  if (!V.calib) {
 20161                           
 20162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20163                           ;incstack = 0
 20164  014EAA  0102               	movlb	2	; () banked
 20165  014EAC  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 20166  014EAE  A4D8               	btfss	status,2,c
 20167  014EB0  0012               	return	
 20168                           
 20169                           ; BSR set to: 2
 20170                           ;mbmc.c: 58:   C.c_bat = C.calc[C_BATT];
 20171  014EB2  C100  F144         	movff	_C,_C+68
 20172  014EB6  C101  F145         	movff	_C+1,_C+69
 20173  014EBA  C102  F146         	movff	_C+2,_C+70
 20174  014EBE  C103  F147         	movff	_C+3,_C+71
 20175                           
 20176                           ;mbmc.c: 59:   C.c_pv = C.calc[C_PV];
 20177  014EC2  C104  F148         	movff	_C+4,_C+72
 20178  014EC6  C105  F149         	movff	_C+5,_C+73
 20179  014ECA  C106  F14A         	movff	_C+6,_C+74
 20180  014ECE  C107  F14B         	movff	_C+7,_C+75
 20181                           
 20182                           ;mbmc.c: 60:   C.v_bat = C.calc[V_BAT];
 20183  014ED2  C110  F154         	movff	_C+16,_C+84
 20184  014ED6  C111  F155         	movff	_C+17,_C+85
 20185  014EDA  C112  F156         	movff	_C+18,_C+86
 20186  014EDE  C113  F157         	movff	_C+19,_C+87
 20187                           
 20188                           ;mbmc.c: 61:   C.v_pv = C.calc[V_PV];
 20189  014EE2  C114  F150         	movff	_C+20,_C+80
 20190  014EE6  C115  F151         	movff	_C+21,_C+81
 20191  014EEA  C116  F152         	movff	_C+22,_C+82
 20192  014EEE  C117  F153         	movff	_C+23,_C+83
 20193                           
 20194                           ;mbmc.c: 62:   C.v_inverter = C.calc[V_INVERTER];
 20195  014EF2  C130  F164         	movff	_C+48,_C+100
 20196  014EF6  C131  F165         	movff	_C+49,_C+101
 20197  014EFA  C132  F166         	movff	_C+50,_C+102
 20198  014EFE  C133  F167         	movff	_C+51,_C+103
 20199                           
 20200                           ; BSR set to: 2
 20201                           ;mbmc.c: 63:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 20202  014F02  0E01               	movlw	1
 20203  014F04  6EE6               	movwf	postinc1,c
 20204  014F06  0E10               	movlw	16
 20205  014F08  6EE6               	movwf	postinc1,c
 20206  014F0A  0060  F403  FFE6   	movff	_C,postinc1
 20207  014F10  0060  F407  FFE6   	movff	_C+1,postinc1
 20208  014F16  0060  F40B  FFE6   	movff	_C+2,postinc1
 20209  014F1C  0060  F40F  FFE6   	movff	_C+3,postinc1
 20210  014F22  0060  F413  FFE6   	movff	_C+4,postinc1
 20211  014F28  0060  F417  FFE6   	movff	_C+5,postinc1
 20212  014F2E  0060  F41B  FFE6   	movff	_C+6,postinc1
 20213  014F34  0060  F41F  FFE6   	movff	_C+7,postinc1
 20214  014F3A  EC05  F0C2         	call	___flsub	;wreg free
 20215  014F3E  0060  F0CB  FFE6   	movff	btemp,postinc1
 20216  014F44  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20217  014F4A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20218  014F50  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20219  014F56  ECAB  F0B0         	call	_lp_filter	;wreg free
 20220  014F5A  0060  F0C8  F140   	movff	btemp,_C+64
 20221  014F60  0060  F0CC  F141   	movff	btemp+1,_C+65
 20222  014F66  0060  F0D0  F142   	movff	btemp+2,_C+66
 20223  014F6C  0060  F0D4  F143   	movff	btemp+3,_C+67
 20224                           
 20225                           ;mbmc.c: 64:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 20226  014F72  0E01               	movlw	1
 20227  014F74  6EE6               	movwf	postinc1,c
 20228  014F76  0E11               	movlw	17
 20229  014F78  6EE6               	movwf	postinc1,c
 20230  014F7A  0060  F553  FFE6   	movff	_C+84,postinc1
 20231  014F80  0060  F557  FFE6   	movff	_C+85,postinc1
 20232  014F86  0060  F55B  FFE6   	movff	_C+86,postinc1
 20233  014F8C  0060  F55F  FFE6   	movff	_C+87,postinc1
 20234  014F92  0060  F503  FFE6   	movff	_C+64,postinc1
 20235  014F98  0060  F507  FFE6   	movff	_C+65,postinc1
 20236  014F9E  0060  F50B  FFE6   	movff	_C+66,postinc1
 20237  014FA4  0060  F50F  FFE6   	movff	_C+67,postinc1
 20238  014FAA  EC06  F093         	call	___flmul	;wreg free
 20239  014FAE  0060  F0CB  FFE6   	movff	btemp,postinc1
 20240  014FB4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20241  014FBA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20242  014FC0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20243  014FC6  ECAB  F0B0         	call	_lp_filter	;wreg free
 20244  014FCA  0060  F0C8  F168   	movff	btemp,_C+104
 20245  014FD0  0060  F0CC  F169   	movff	btemp+1,_C+105
 20246  014FD6  0060  F0D0  F16A   	movff	btemp+2,_C+106
 20247  014FDC  0060  F0D4  F16B   	movff	btemp+3,_C+107
 20248                           
 20249                           ;mbmc.c: 65:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 20250  014FE2  0E01               	movlw	1
 20251  014FE4  6EE6               	movwf	postinc1,c
 20252  014FE6  0E12               	movlw	18
 20253  014FE8  6EE6               	movwf	postinc1,c
 20254  014FEA  0060  F543  FFE6   	movff	_C+80,postinc1
 20255  014FF0  0060  F547  FFE6   	movff	_C+81,postinc1
 20256  014FF6  0060  F54B  FFE6   	movff	_C+82,postinc1
 20257  014FFC  0060  F54F  FFE6   	movff	_C+83,postinc1
 20258  015002  0060  F523  FFE6   	movff	_C+72,postinc1
 20259  015008  0060  F527  FFE6   	movff	_C+73,postinc1
 20260  01500E  0060  F52B  FFE6   	movff	_C+74,postinc1
 20261  015014  0060  F52F  FFE6   	movff	_C+75,postinc1
 20262  01501A  EC06  F093         	call	___flmul	;wreg free
 20263  01501E  0060  F0CB  FFE6   	movff	btemp,postinc1
 20264  015024  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20265  01502A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20266  015030  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20267  015036  ECAB  F0B0         	call	_lp_filter	;wreg free
 20268  01503A  0060  F0C8  F170   	movff	btemp,_C+112
 20269  015040  0060  F0CC  F171   	movff	btemp+1,_C+113
 20270  015046  0060  F0D0  F172   	movff	btemp+2,_C+114
 20271  01504C  0060  F0D4  F173   	movff	btemp+3,_C+115
 20272                           
 20273                           ;mbmc.c: 66:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 20274  015052  0E01               	movlw	1
 20275  015054  6EE6               	movwf	postinc1,c
 20276  015056  0E13               	movlw	19
 20277  015058  6EE6               	movwf	postinc1,c
 20278  01505A  0E00               	movlw	0
 20279  01505C  6EE6               	movwf	postinc1,c
 20280  01505E  0E00               	movlw	0
 20281  015060  6EE6               	movwf	postinc1,c
 20282  015062  0E60               	movlw	96
 20283  015064  6EE6               	movwf	postinc1,c
 20284  015066  0EC1               	movlw	193
 20285  015068  6EE6               	movwf	postinc1,c
 20286  01506A  0060  F593  FFE6   	movff	_C+100,postinc1
 20287  015070  0060  F597  FFE6   	movff	_C+101,postinc1
 20288  015076  0060  F59B  FFE6   	movff	_C+102,postinc1
 20289  01507C  0060  F59F  FFE6   	movff	_C+103,postinc1
 20290  015082  0060  F503  FFE6   	movff	_C+64,postinc1
 20291  015088  0060  F507  FFE6   	movff	_C+65,postinc1
 20292  01508E  0060  F50B  FFE6   	movff	_C+66,postinc1
 20293  015094  0060  F50F  FFE6   	movff	_C+67,postinc1
 20294  01509A  EC06  F093         	call	___flmul	;wreg free
 20295  01509E  0060  F0CB  FFE6   	movff	btemp,postinc1
 20296  0150A4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20297  0150AA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20298  0150B0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20299  0150B6  EC1B  F097         	call	___fladd	;wreg free
 20300  0150BA  0060  F0CB  FFE6   	movff	btemp,postinc1
 20301  0150C0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20302  0150C6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20303  0150CC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20304  0150D2  ECAB  F0B0         	call	_lp_filter	;wreg free
 20305  0150D6  0060  F0C8  F16C   	movff	btemp,_C+108
 20306  0150DC  0060  F0CC  F16D   	movff	btemp+1,_C+109
 20307  0150E2  0060  F0D0  F16E   	movff	btemp+2,_C+110
 20308  0150E8  0060  F0D4  F16F   	movff	btemp+3,_C+111
 20309                           
 20310                           ;mbmc.c: 67:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 20311  0150EE  0E01               	movlw	1
 20312  0150F0  6EE6               	movwf	postinc1,c
 20313  0150F2  0E14               	movlw	20
 20314  0150F4  6EE6               	movwf	postinc1,c
 20315  0150F6  0060  F553  FFE6   	movff	_C+84,postinc1
 20316  0150FC  0060  F557  FFE6   	movff	_C+85,postinc1
 20317  015102  0060  F55B  FFE6   	movff	_C+86,postinc1
 20318  015108  0060  F55F  FFE6   	movff	_C+87,postinc1
 20319  01510E  0060  F513  FFE6   	movff	_C+68,postinc1
 20320  015114  0060  F517  FFE6   	movff	_C+69,postinc1
 20321  01511A  0060  F51B  FFE6   	movff	_C+70,postinc1
 20322  015120  0060  F51F  FFE6   	movff	_C+71,postinc1
 20323  015126  EC06  F093         	call	___flmul	;wreg free
 20324  01512A  0060  F0CB  FFE6   	movff	btemp,postinc1
 20325  015130  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20326  015136  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20327  01513C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20328  015142  ECAB  F0B0         	call	_lp_filter	;wreg free
 20329  015146  0060  F0C8  F174   	movff	btemp,_C+116
 20330  01514C  0060  F0CC  F175   	movff	btemp+1,_C+117
 20331  015152  0060  F0D0  F176   	movff	btemp+2,_C+118
 20332  015158  0060  F0D4  F177   	movff	btemp+3,_C+119
 20333                           
 20334                           ;mbmc.c: 71:   if (C.p_inverter < 0.0)
 20335  01515E  0101               	movlb	1	; () banked
 20336  015160  AF6F               	btfss	(_C+111)& (0+255),7,b
 20337  015162  D008               	goto	l9222
 20338                           
 20339                           ; BSR set to: 1
 20340                           ;mbmc.c: 72:    C.p_inverter = 0.0001;
 20341  015164  0E17               	movlw	23
 20342  015166  6F6C               	movwf	(_C+108)& (0+255),b
 20343  015168  0EB7               	movlw	183
 20344  01516A  6F6D               	movwf	(_C+109)& (0+255),b
 20345  01516C  0ED1               	movlw	209
 20346  01516E  6F6E               	movwf	(_C+110)& (0+255),b
 20347  015170  0E38               	movlw	56
 20348  015172  6F6F               	movwf	(_C+111)& (0+255),b
 20349  015174                     l9222:
 20350                           
 20351                           ; BSR set to: 1
 20352                           ;mbmc.c: 76:   C.dynamic_ah = C.static_ah;
 20353  015174  C180  F184         	movff	_C+128,_C+132
 20354  015178  C181  F185         	movff	_C+129,_C+133
 20355  01517C  C182  F186         	movff	_C+130,_C+134
 20356  015180  C183  F187         	movff	_C+131,_C+135
 20357                           
 20358                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20359  015184  0012               	return		;funcret
 20360  015186                     __end_of_calc_model_data:
 20361                           	opt callstack 0
 20362                           
 20363 ;; *************** function _lp_filter *****************
 20364 ;; Defined at:
 20365 ;;		line 17 in file "mbmc.c"
 20366 ;; Parameters:    Size  Location     Type
 20367 ;;  new             4  [STACK] const float 
 20368 ;;  bn              1  [STACK] const unsigned char 
 20369 ;;  slow            1  [STACK] const char 
 20370 ;; Auto vars:     Size  Location     Type
 20371 ;;  lp_speed        4  [STACK] float 
 20372 ;; Return value:  Size  Location     Type
 20373 ;;                  4  [STACK] float 
 20374 ;; Registers used:
 20375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20376 ;; Tracked objects:
 20377 ;;		On entry : 0/2
 20378 ;;		On exit  : 0/0
 20379 ;;		Unchanged: 0/0
 20380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20385 ;;Total ram usage:        0 bytes
 20386 ;; Hardware stack levels used:    1
 20387 ;; Hardware stack levels required when called:    8
 20388 ;; This function calls:
 20389 ;;		___fladd
 20390 ;;		___flmul
 20391 ;;		___flsub
 20392 ;; This function is called by:
 20393 ;;		_main
 20394 ;;		_convert_adc_data
 20395 ;;		_calc_model_data
 20396 ;; This function uses a reentrant model
 20397 ;;
 20398                           
 20399                           	psect	text88
 20400  016156                     __ptext88:
 20401                           	opt callstack 0
 20402  016156                     _lp_filter:
 20403                           	opt callstack 0
 20404                           
 20405                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20406  016156  52E6               	movf	postinc1,f,c
 20407  016158  52E6               	movf	postinc1,f,c
 20408  01615A  52E6               	movf	postinc1,f,c
 20409  01615C  52E6               	movf	postinc1,f,c
 20410                           
 20411                           ;mbmc.c: 17: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 18: {;mbmc.c: 19:  static float smooth[16 +5];;mbmc.c: 20:  float lp_speed;;mbmc.c: 2
      +                          2:  if (bn >= 16 +5)
 20412                           ;stkvar	_bn @ sp[(-4)+-5]
 20413                           
 20414                           ;incstack = 0
 20415  01615E  0EF7               	movlw	-9
 20416  016160  006F FF8C  F032    	movff	plusw1,btemp
 20417  016166  0E14               	movlw	20
 20418  016168  6432               	cpfsgt	btemp^0,c
 20419  01616A  D011               	goto	l8790
 20420  01616C                     u8180:
 20421                           
 20422                           ;mbmc.c: 23:   return new;
 20423                           ;stkvar	_new @ sp[(-4)+-4]
 20424  01616C  0EF8               	movlw	-8
 20425  01616E  006F FF8C  F032    	movff	plusw1,btemp
 20426  016174  0EF9               	movlw	-7
 20427  016176  006F FF8C  F033    	movff	plusw1,btemp+1
 20428  01617C  0EFA               	movlw	-6
 20429  01617E  006F FF8C  F034    	movff	plusw1,btemp+2
 20430  016184  0EFB               	movlw	-5
 20431  016186  006F FF8C  F035    	movff	plusw1,btemp+3
 20432  01618C  D0BF               	goto	l1726
 20433  01618E                     l8790:
 20434                           
 20435                           ;mbmc.c: 25:  if (slow == (-1)) {
 20436                           ;stkvar	_slow @ sp[(-4)+-6]
 20437  01618E  0EF6               	movlw	-10
 20438  016190  28E3               	incf	plusw1,w,c
 20439  016192  A4D8               	btfss	status,2,c
 20440  016194  D012               	goto	l8798
 20441                           
 20442                           ;mbmc.c: 26:   smooth[bn] = 0.0;
 20443                           ;stkvar	_bn @ sp[(-4)+-5]
 20444  016196  0EF7               	movlw	-9
 20445  016198  50E3               	movf	plusw1,w,c
 20446  01619A  0D04               	mullw	4
 20447  01619C  0E00               	movlw	low lp_filter@smooth
 20448  01619E  24F3               	addwf	243,w,c
 20449  0161A0  6ED9               	movwf	fsr2l,c
 20450  0161A2  0E03               	movlw	high lp_filter@smooth
 20451  0161A4  20F4               	addwfc	prodh,w,c
 20452  0161A6  6EDA               	movwf	fsr2h,c
 20453  0161A8  0E00               	movlw	0
 20454  0161AA  6EDE               	movwf	postinc2,c
 20455  0161AC  0E00               	movlw	0
 20456  0161AE  6EDE               	movwf	postinc2,c
 20457  0161B0  0E00               	movlw	0
 20458  0161B2  6EDE               	movwf	postinc2,c
 20459  0161B4  0E00               	movlw	0
 20460  0161B6  6EDD               	movwf	postdec2,c
 20461  0161B8  D7D9               	goto	u8180
 20462  0161BA                     l8798:
 20463                           
 20464                           ;mbmc.c: 30:  if (slow) {
 20465                           ;stkvar	_slow @ sp[(-4)+-6]
 20466  0161BA  0EF6               	movlw	-10
 20467  0161BC  50E3               	movf	plusw1,w,c
 20468  0161BE  B4D8               	btfsc	status,2,c
 20469  0161C0  D008               	goto	l8802
 20470                           
 20471                           ;mbmc.c: 31:   lp_speed = 0.033;
 20472  0161C2  0E02               	movlw	2
 20473  0161C4  6E3A               	movwf	(btemp+8)^0,c
 20474  0161C6  0E2B               	movlw	43
 20475  0161C8  6E3B               	movwf	(btemp+9)^0,c
 20476  0161CA  0E07               	movlw	7
 20477  0161CC  6E3C               	movwf	(btemp+10)^0,c
 20478  0161CE  0E3D               	movlw	61
 20479  0161D0  D007               	goto	L22
 20480  0161D2                     l8802:
 20481                           
 20482                           ;mbmc.c: 33:   lp_speed = 0.125;
 20483  0161D2  0E00               	movlw	0
 20484  0161D4  6E3A               	movwf	(btemp+8)^0,c
 20485  0161D6  0E00               	movlw	0
 20486  0161D8  6E3B               	movwf	(btemp+9)^0,c
 20487  0161DA  0E00               	movlw	0
 20488  0161DC  6E3C               	movwf	(btemp+10)^0,c
 20489  0161DE  0E3E               	movlw	62
 20490  0161E0                     L22:
 20491  0161E0  6E3D               	movwf	(btemp+11)^0,c
 20492                           
 20493                           ;stkvar	_lp_speed @ sp[(-4)+0]
 20494  0161E2  0EFC               	movlw	-4
 20495  0161E4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20496  0161EA  0EFD               	movlw	-3
 20497  0161EC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20498  0161F2  0EFE               	movlw	-2
 20499  0161F4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20500  0161FA  0EFF               	movlw	-1
 20501  0161FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20502                           
 20503                           ;mbmc.c: 36:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 20504                           ;stkvar	_bn @ sp[(-4)+-5]
 20505  016202  0EF7               	movlw	-9
 20506  016204  50E3               	movf	plusw1,w,c
 20507  016206  0D04               	mullw	4
 20508  016208  0E00               	movlw	low lp_filter@smooth
 20509  01620A  24F3               	addwf	243,w,c
 20510  01620C  6ED9               	movwf	fsr2l,c
 20511  01620E  0E03               	movlw	high lp_filter@smooth
 20512  016210  20F4               	addwfc	prodh,w,c
 20513  016212  6EDA               	movwf	fsr2h,c
 20514  016214  006F FF7B FFE6     	movff	postinc2,postinc1
 20515  01621A  006F FF7B FFE6     	movff	postinc2,postinc1
 20516  016220  006F FF7B FFE6     	movff	postinc2,postinc1
 20517  016226  006F FF7B FFE6     	movff	postinc2,postinc1
 20518                           
 20519                           ;stkvar	_lp_speed @ sp[(-8)+0]
 20520  01622C  0EF8               	movlw	-8
 20521  01622E  006F FF8F FFE6     	movff	plusw1,postinc1
 20522  016234  006F FF8F FFE6     	movff	plusw1,postinc1
 20523  01623A  006F FF8F FFE6     	movff	plusw1,postinc1
 20524  016240  006F FF8F FFE6     	movff	plusw1,postinc1
 20525                           
 20526                           ;stkvar	_bn @ sp[(-12)+-5]
 20527  016246  0EEF               	movlw	-17
 20528  016248  50E3               	movf	plusw1,w,c
 20529  01624A  0D04               	mullw	4
 20530  01624C  0E00               	movlw	low lp_filter@smooth
 20531  01624E  24F3               	addwf	243,w,c
 20532  016250  6ED9               	movwf	fsr2l,c
 20533  016252  0E03               	movlw	high lp_filter@smooth
 20534  016254  20F4               	addwfc	prodh,w,c
 20535  016256  6EDA               	movwf	fsr2h,c
 20536  016258  006F FF7B FFE6     	movff	postinc2,postinc1
 20537  01625E  006F FF7B FFE6     	movff	postinc2,postinc1
 20538  016264  006F FF7B FFE6     	movff	postinc2,postinc1
 20539  01626A  006F FF7B FFE6     	movff	postinc2,postinc1
 20540                           
 20541                           ;stkvar	_new @ sp[(-16)+-4]
 20542  016270  0EEC               	movlw	-20
 20543  016272  006F FF8F FFE6     	movff	plusw1,postinc1
 20544  016278  006F FF8F FFE6     	movff	plusw1,postinc1
 20545  01627E  006F FF8F FFE6     	movff	plusw1,postinc1
 20546  016284  006F FF8F FFE6     	movff	plusw1,postinc1
 20547  01628A  EC05  F0C2         	call	___flsub	;wreg free
 20548  01628E  0060  F0CB  FFE6   	movff	btemp,postinc1
 20549  016294  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20550  01629A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20551  0162A0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20552  0162A6  EC06  F093         	call	___flmul	;wreg free
 20553  0162AA  0060  F0CB  FFE6   	movff	btemp,postinc1
 20554  0162B0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20555  0162B6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20556  0162BC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20557  0162C2  EC1B  F097         	call	___fladd	;wreg free
 20558                           
 20559                           ;stkvar	_bn @ sp[(-4)+-5]
 20560  0162C6  0EF7               	movlw	-9
 20561  0162C8  50E3               	movf	plusw1,w,c
 20562  0162CA  0D04               	mullw	4
 20563  0162CC  0E00               	movlw	low lp_filter@smooth
 20564  0162CE  24F3               	addwf	243,w,c
 20565  0162D0  6ED9               	movwf	fsr2l,c
 20566  0162D2  0E03               	movlw	high lp_filter@smooth
 20567  0162D4  20F4               	addwfc	prodh,w,c
 20568  0162D6  6EDA               	movwf	fsr2h,c
 20569  0162D8  0060  F0CB  FFDE   	movff	btemp,postinc2
 20570  0162DE  0060  F0CF  FFDE   	movff	btemp+1,postinc2
 20571  0162E4  0060  F0D3  FFDE   	movff	btemp+2,postinc2
 20572  0162EA  0060  F0D7  FFDD   	movff	btemp+3,postdec2
 20573  0162F0  52DD               	movf	postdec2,f,c
 20574  0162F2  52DD               	movf	postdec2,f,c
 20575  0162F4  006F FF78  F032    	movff	postinc2,btemp
 20576  0162FA  006F FF78  F033    	movff	postinc2,btemp+1
 20577  016300  006F FF78  F034    	movff	postinc2,btemp+2
 20578  016306  006F FF78  F035    	movff	postinc2,btemp+3
 20579  01630C                     l1726:
 20580                           
 20581                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 20582  01630C  0EF6               	movlw	246
 20583  01630E  26E1               	addwf	fsr1l,f,c
 20584  016310  0EFF               	movlw	255
 20585  016312  22E2               	addwfc	fsr1h,f,c
 20586  016314  0012               	return		;funcret
 20587  016316                     __end_of_lp_filter:
 20588                           	opt callstack 0
 20589                           
 20590 ;; *************** function ___flsub *****************
 20591 ;; Defined at:
 20592 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20593 ;; Parameters:    Size  Location     Type
 20594 ;;  b               4  [STACK] float 
 20595 ;;  a               4  [STACK] float 
 20596 ;; Auto vars:     Size  Location     Type
 20597 ;;		None
 20598 ;; Return value:  Size  Location     Type
 20599 ;;                  4  [STACK] float 
 20600 ;; Registers used:
 20601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20602 ;; Tracked objects:
 20603 ;;		On entry : 0/2
 20604 ;;		On exit  : 0/0
 20605 ;;		Unchanged: 0/0
 20606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20611 ;;Total ram usage:        0 bytes
 20612 ;; Hardware stack levels used:    1
 20613 ;; Hardware stack levels required when called:    7
 20614 ;; This function calls:
 20615 ;;		___fladd
 20616 ;; This function is called by:
 20617 ;;		_conv_raw_result
 20618 ;;		_lp_filter
 20619 ;;		_calc_model_data
 20620 ;;		_efgtoa
 20621 ;; This function uses a reentrant model
 20622 ;;
 20623                           
 20624                           	psect	text89
 20625  01840A                     __ptext89:
 20626                           	opt callstack 0
 20627  01840A                     ___flsub:
 20628                           	opt callstack 16
 20629                           
 20630                           ;stkvar	_a @ sp[(0)+-8]
 20631                           
 20632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20633                           ;incstack = 0
 20634  01840A  0EFB               	movlw	-5
 20635  01840C  7EE3               	btg	plusw1,7,c
 20636                           
 20637                           ;stkvar	_a @ sp[(0)+-8]
 20638  01840E  0EF8               	movlw	-8
 20639  018410  006F FF8F FFE6     	movff	plusw1,postinc1
 20640  018416  006F FF8F FFE6     	movff	plusw1,postinc1
 20641  01841C  006F FF8F FFE6     	movff	plusw1,postinc1
 20642  018422  006F FF8F FFE6     	movff	plusw1,postinc1
 20643                           
 20644                           ;stkvar	_b @ sp[(-4)+-4]
 20645  018428  0EF8               	movlw	-8
 20646  01842A  006F FF8F FFE6     	movff	plusw1,postinc1
 20647  018430  006F FF8F FFE6     	movff	plusw1,postinc1
 20648  018436  006F FF8F FFE6     	movff	plusw1,postinc1
 20649  01843C  006F FF8F FFE6     	movff	plusw1,postinc1
 20650  018442  EC1B  F097         	call	___fladd	;wreg free
 20651                           
 20652                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20653  018446  0EF8               	movlw	248
 20654  018448  26E1               	addwf	fsr1l,f,c
 20655  01844A  0EFF               	movlw	255
 20656  01844C  22E2               	addwfc	fsr1h,f,c
 20657  01844E  0012               	return		;funcret
 20658  018450                     __end_of___flsub:
 20659                           	opt callstack 0
 20660                           
 20661 ;; *************** function ___fladd *****************
 20662 ;; Defined at:
 20663 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20664 ;; Parameters:    Size  Location     Type
 20665 ;;  b               4  [STACK] float 
 20666 ;;  a               4  [STACK] float 
 20667 ;; Auto vars:     Size  Location     Type
 20668 ;;  grs             1  [STACK] unsigned char 
 20669 ;;  bexp            1  [STACK] unsigned char 
 20670 ;;  aexp            1  [STACK] unsigned char 
 20671 ;;  signs           1  [STACK] unsigned char 
 20672 ;; Return value:  Size  Location     Type
 20673 ;;                  4  [STACK] unsigned char 
 20674 ;; Registers used:
 20675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20676 ;; Tracked objects:
 20677 ;;		On entry : 0/1
 20678 ;;		On exit  : 0/0
 20679 ;;		Unchanged: 0/0
 20680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20685 ;;Total ram usage:        0 bytes
 20686 ;; Hardware stack levels used:    1
 20687 ;; Hardware stack levels required when called:    6
 20688 ;; This function calls:
 20689 ;;		Nothing
 20690 ;; This function is called by:
 20691 ;;		_lp_filter
 20692 ;;		_calc_model_data
 20693 ;;		_efgtoa
 20694 ;;		___flsub
 20695 ;; This function uses a reentrant model
 20696 ;;
 20697                           
 20698                           	psect	text90
 20699  012E36                     __ptext90:
 20700                           	opt callstack 0
 20701  012E36                     ___fladd:
 20702                           	opt callstack 0
 20703                           
 20704                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20705  012E36  52E6               	movf	postinc1,f,c
 20706  012E38  52E6               	movf	postinc1,f,c
 20707  012E3A  52E6               	movf	postinc1,f,c
 20708  012E3C  52E6               	movf	postinc1,f,c
 20709                           
 20710                           ;stkvar	_b @ sp[(-4)+-4]
 20711                           
 20712                           ;incstack = 0
 20713  012E3E  0EFB               	movlw	251
 20714  012E40  24E1               	addwf	fsr1l,w,c
 20715  012E42  6ED9               	movwf	fsr2l,c
 20716  012E44  0EFF               	movlw	255
 20717  012E46  20E2               	addwfc	fsr1h,w,c
 20718  012E48  6EDA               	movwf	fsr2h,c
 20719  012E4A  50DF               	movf	indf2,w,c
 20720  012E4C  6E3D               	movwf	(btemp+11)^0,c
 20721  012E4E  0E80               	movlw	128
 20722  012E50  163D               	andwf	(btemp+11)^0,f,c
 20723                           
 20724                           ;stkvar	_signs @ sp[(-4)+3]
 20725  012E52  0EFF               	movlw	-1
 20726  012E54  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20727                           
 20728                           ;stkvar	_b @ sp[(-4)+-4]
 20729  012E5A  0EFB               	movlw	251
 20730  012E5C  24E1               	addwf	fsr1l,w,c
 20731  012E5E  6ED9               	movwf	fsr2l,c
 20732  012E60  0EFF               	movlw	255
 20733  012E62  20E2               	addwfc	fsr1h,w,c
 20734  012E64  6EDA               	movwf	fsr2h,c
 20735  012E66  50DF               	movf	indf2,w,c
 20736  012E68  6E3D               	movwf	(btemp+11)^0,c
 20737  012E6A  90D8               	bcf	status,0,c
 20738  012E6C  343D               	rlcf	(btemp+11)^0,w,c
 20739  012E6E  6E3C               	movwf	(btemp+10)^0,c
 20740                           
 20741                           ;stkvar	_bexp @ sp[(-4)+1]
 20742  012E70  0EFD               	movlw	-3
 20743  012E72  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20744                           
 20745                           ;stkvar	_b @ sp[(-4)+-4]
 20746  012E78  0EFA               	movlw	250
 20747  012E7A  24E1               	addwf	fsr1l,w,c
 20748  012E7C  6ED9               	movwf	fsr2l,c
 20749  012E7E  0EFF               	movlw	255
 20750  012E80  20E2               	addwfc	fsr1h,w,c
 20751  012E82  6EDA               	movwf	fsr2h,c
 20752  012E84  AEDF               	btfss	indf2,7,c
 20753  012E86  D002               	goto	l6432
 20754                           
 20755                           ;stkvar	_bexp @ sp[(-4)+1]
 20756  012E88  0EFD               	movlw	-3
 20757  012E8A  80E3               	bsf	plusw1,0,c
 20758  012E8C                     l6432:
 20759                           
 20760                           ;stkvar	_bexp @ sp[(-4)+1]
 20761  012E8C  0EFD               	movlw	-3
 20762  012E8E  50E3               	movf	plusw1,w,c
 20763  012E90  B4D8               	btfsc	status,2,c
 20764  012E92  D027               	goto	l6442
 20765                           
 20766                           ;stkvar	_bexp @ sp[(-4)+1]
 20767  012E94  0EFD               	movlw	-3
 20768  012E96  28E3               	incf	plusw1,w,c
 20769  012E98  A4D8               	btfss	status,2,c
 20770  012E9A  D018               	goto	l6438
 20771  012E9C  0E00               	movlw	0
 20772  012E9E  6E3A               	movwf	(btemp+8)^0,c
 20773  012EA0  0E00               	movlw	0
 20774  012EA2  6E3B               	movwf	(btemp+9)^0,c
 20775  012EA4  0E00               	movlw	0
 20776  012EA6  6E3C               	movwf	(btemp+10)^0,c
 20777  012EA8  0E00               	movlw	0
 20778  012EAA  6E3D               	movwf	(btemp+11)^0,c
 20779                           
 20780                           ;stkvar	_b @ sp[(-4)+-4]
 20781  012EAC  0EF8               	movlw	-8
 20782  012EAE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20783  012EB4  0EF9               	movlw	-7
 20784  012EB6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20785  012EBC  0EFA               	movlw	-6
 20786  012EBE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20787  012EC4  0EFB               	movlw	-5
 20788  012EC6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20789  012ECC                     l6438:
 20790                           
 20791                           ;stkvar	_b @ sp[(-4)+-4]
 20792  012ECC  0EFA               	movlw	-6
 20793  012ECE  8EE3               	bsf	plusw1,7,c
 20794                           
 20795                           ;stkvar	_b @ sp[(-4)+-4]
 20796  012ED0  0EFB               	movlw	251
 20797  012ED2  24E1               	addwf	fsr1l,w,c
 20798  012ED4  6ED9               	movwf	fsr2l,c
 20799  012ED6  0EFF               	movlw	255
 20800  012ED8  20E2               	addwfc	fsr1h,w,c
 20801  012EDA  6EDA               	movwf	fsr2h,c
 20802  012EDC  0E00               	movlw	0
 20803  012EDE  6EDF               	movwf	indf2,c
 20804  012EE0  D018               	goto	l6444
 20805  012EE2                     l6442:
 20806  012EE2  0E00               	movlw	0
 20807  012EE4  6E3A               	movwf	(btemp+8)^0,c
 20808  012EE6  0E00               	movlw	0
 20809  012EE8  6E3B               	movwf	(btemp+9)^0,c
 20810  012EEA  0E00               	movlw	0
 20811  012EEC  6E3C               	movwf	(btemp+10)^0,c
 20812  012EEE  0E00               	movlw	0
 20813  012EF0  6E3D               	movwf	(btemp+11)^0,c
 20814                           
 20815                           ;stkvar	_b @ sp[(-4)+-4]
 20816  012EF2  0EF8               	movlw	-8
 20817  012EF4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20818  012EFA  0EF9               	movlw	-7
 20819  012EFC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20820  012F02  0EFA               	movlw	-6
 20821  012F04  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20822  012F0A  0EFB               	movlw	-5
 20823  012F0C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20824  012F12                     l6444:
 20825                           
 20826                           ;stkvar	_a @ sp[(-4)+-8]
 20827  012F12  0EF7               	movlw	247
 20828  012F14  24E1               	addwf	fsr1l,w,c
 20829  012F16  6ED9               	movwf	fsr2l,c
 20830  012F18  0EFF               	movlw	255
 20831  012F1A  20E2               	addwfc	fsr1h,w,c
 20832  012F1C  6EDA               	movwf	fsr2h,c
 20833  012F1E  50DF               	movf	indf2,w,c
 20834  012F20  6E3D               	movwf	(btemp+11)^0,c
 20835  012F22  0E80               	movlw	128
 20836  012F24  163D               	andwf	(btemp+11)^0,f,c
 20837                           
 20838                           ;stkvar	_aexp @ sp[(-4)+2]
 20839  012F26  0EFE               	movlw	-2
 20840  012F28  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20841                           
 20842                           ;stkvar	_signs @ sp[(-4)+3]
 20843                           ;stkvar	_aexp @ sp[(-4)+2]
 20844  012F2E  50E1               	movf	fsr1l,w,c
 20845  012F30  0FFE               	addlw	-2
 20846  012F32  6ED9               	movwf	fsr2l,c
 20847  012F34  50E2               	movf	fsr1h,w,c
 20848  012F36  6EDA               	movwf	fsr2h,c
 20849  012F38  0EFF               	movlw	255
 20850  012F3A  22DA               	addwfc	fsr2h,f,c
 20851  012F3C  0EFF               	movlw	-1
 20852  012F3E  50E3               	movf	plusw1,w,c
 20853  012F40  18DE               	xorwf	postinc2,w,c
 20854  012F42  B4D8               	btfsc	status,2,c
 20855  012F44  D002               	goto	l6450
 20856                           
 20857                           ;stkvar	_signs @ sp[(-4)+3]
 20858  012F46  0EFF               	movlw	-1
 20859  012F48  8CE3               	bsf	plusw1,6,c
 20860  012F4A                     l6450:
 20861                           
 20862                           ;stkvar	_a @ sp[(-4)+-8]
 20863  012F4A  0EF7               	movlw	247
 20864  012F4C  24E1               	addwf	fsr1l,w,c
 20865  012F4E  6ED9               	movwf	fsr2l,c
 20866  012F50  0EFF               	movlw	255
 20867  012F52  20E2               	addwfc	fsr1h,w,c
 20868  012F54  6EDA               	movwf	fsr2h,c
 20869  012F56  50DF               	movf	indf2,w,c
 20870  012F58  6E3D               	movwf	(btemp+11)^0,c
 20871  012F5A  90D8               	bcf	status,0,c
 20872  012F5C  343D               	rlcf	(btemp+11)^0,w,c
 20873  012F5E  6E3C               	movwf	(btemp+10)^0,c
 20874                           
 20875                           ;stkvar	_aexp @ sp[(-4)+2]
 20876  012F60  0EFE               	movlw	-2
 20877  012F62  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20878                           
 20879                           ;stkvar	_a @ sp[(-4)+-8]
 20880  012F68  0EF6               	movlw	246
 20881  012F6A  24E1               	addwf	fsr1l,w,c
 20882  012F6C  6ED9               	movwf	fsr2l,c
 20883  012F6E  0EFF               	movlw	255
 20884  012F70  20E2               	addwfc	fsr1h,w,c
 20885  012F72  6EDA               	movwf	fsr2h,c
 20886  012F74  AEDF               	btfss	indf2,7,c
 20887  012F76  D002               	goto	l6456
 20888                           
 20889                           ;stkvar	_aexp @ sp[(-4)+2]
 20890  012F78  0EFE               	movlw	-2
 20891  012F7A  80E3               	bsf	plusw1,0,c
 20892  012F7C                     l6456:
 20893                           
 20894                           ;stkvar	_aexp @ sp[(-4)+2]
 20895  012F7C  0EFE               	movlw	-2
 20896  012F7E  50E3               	movf	plusw1,w,c
 20897  012F80  B4D8               	btfsc	status,2,c
 20898  012F82  D027               	goto	l6466
 20899                           
 20900                           ;stkvar	_aexp @ sp[(-4)+2]
 20901  012F84  0EFE               	movlw	-2
 20902  012F86  28E3               	incf	plusw1,w,c
 20903  012F88  A4D8               	btfss	status,2,c
 20904  012F8A  D018               	goto	l6462
 20905  012F8C  0E00               	movlw	0
 20906  012F8E  6E3A               	movwf	(btemp+8)^0,c
 20907  012F90  0E00               	movlw	0
 20908  012F92  6E3B               	movwf	(btemp+9)^0,c
 20909  012F94  0E00               	movlw	0
 20910  012F96  6E3C               	movwf	(btemp+10)^0,c
 20911  012F98  0E00               	movlw	0
 20912  012F9A  6E3D               	movwf	(btemp+11)^0,c
 20913                           
 20914                           ;stkvar	_a @ sp[(-4)+-8]
 20915  012F9C  0EF4               	movlw	-12
 20916  012F9E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20917  012FA4  0EF5               	movlw	-11
 20918  012FA6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20919  012FAC  0EF6               	movlw	-10
 20920  012FAE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20921  012FB4  0EF7               	movlw	-9
 20922  012FB6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20923  012FBC                     l6462:
 20924                           
 20925                           ;stkvar	_a @ sp[(-4)+-8]
 20926  012FBC  0EF6               	movlw	-10
 20927  012FBE  8EE3               	bsf	plusw1,7,c
 20928                           
 20929                           ;stkvar	_a @ sp[(-4)+-8]
 20930  012FC0  0EF7               	movlw	247
 20931  012FC2  24E1               	addwf	fsr1l,w,c
 20932  012FC4  6ED9               	movwf	fsr2l,c
 20933  012FC6  0EFF               	movlw	255
 20934  012FC8  20E2               	addwfc	fsr1h,w,c
 20935  012FCA  6EDA               	movwf	fsr2h,c
 20936  012FCC  0E00               	movlw	0
 20937  012FCE  6EDF               	movwf	indf2,c
 20938  012FD0  D018               	goto	l6468
 20939  012FD2                     l6466:
 20940  012FD2  0E00               	movlw	0
 20941  012FD4  6E3A               	movwf	(btemp+8)^0,c
 20942  012FD6  0E00               	movlw	0
 20943  012FD8  6E3B               	movwf	(btemp+9)^0,c
 20944  012FDA  0E00               	movlw	0
 20945  012FDC  6E3C               	movwf	(btemp+10)^0,c
 20946  012FDE  0E00               	movlw	0
 20947  012FE0  6E3D               	movwf	(btemp+11)^0,c
 20948                           
 20949                           ;stkvar	_a @ sp[(-4)+-8]
 20950  012FE2  0EF4               	movlw	-12
 20951  012FE4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20952  012FEA  0EF5               	movlw	-11
 20953  012FEC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20954  012FF2  0EF6               	movlw	-10
 20955  012FF4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20956  012FFA  0EF7               	movlw	-9
 20957  012FFC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20958  013002                     l6468:
 20959                           
 20960                           ;stkvar	_bexp @ sp[(-4)+1]
 20961                           ;stkvar	_aexp @ sp[(-4)+2]
 20962  013002  50E1               	movf	fsr1l,w,c
 20963  013004  0FFE               	addlw	-2
 20964  013006  6ED9               	movwf	fsr2l,c
 20965  013008  50E2               	movf	fsr1h,w,c
 20966  01300A  6EDA               	movwf	fsr2h,c
 20967  01300C  0EFF               	movlw	255
 20968  01300E  22DA               	addwfc	fsr2h,f,c
 20969  013010  0EFD               	movlw	-3
 20970  013012  50E3               	movf	plusw1,w,c
 20971  013014  5CDE               	subwf	postinc2,w,c
 20972  013016  B0D8               	btfsc	status,0,c
 20973  013018  D0A4               	goto	l6504
 20974                           
 20975                           ;stkvar	_signs @ sp[(-4)+3]
 20976  01301A  0EFF               	movlw	-1
 20977  01301C  ACE3               	btfss	plusw1,6,c
 20978  01301E  D002               	goto	l6474
 20979                           
 20980                           ;stkvar	_signs @ sp[(-4)+3]
 20981  013020  0EFF               	movlw	-1
 20982  013022  7EE3               	btg	plusw1,7,c
 20983  013024                     l6474:
 20984                           
 20985                           ;stkvar	_bexp @ sp[(-4)+1]
 20986                           ;stkvar	_grs @ sp[(-4)+0]
 20987  013024  0EFD               	movlw	-3
 20988  013026  006F FF8C  F032    	movff	plusw1,btemp
 20989  01302C  0EFC               	movlw	-4
 20990  01302E  0060  F0CB  FFE3   	movff	btemp,plusw1
 20991                           
 20992                           ;stkvar	_aexp @ sp[(-4)+2]
 20993                           ;stkvar	_bexp @ sp[(-4)+1]
 20994  013034  0EFE               	movlw	-2
 20995  013036  006F FF8C  F032    	movff	plusw1,btemp
 20996  01303C  0EFD               	movlw	-3
 20997  01303E  0060  F0CB  FFE3   	movff	btemp,plusw1
 20998                           
 20999                           ;stkvar	_grs @ sp[(-4)+0]
 21000                           ;stkvar	_aexp @ sp[(-4)+2]
 21001  013044  0EFC               	movlw	-4
 21002  013046  006F FF8C  F032    	movff	plusw1,btemp
 21003  01304C  0EFE               	movlw	-2
 21004  01304E  0060  F0CB  FFE3   	movff	btemp,plusw1
 21005                           
 21006                           ;stkvar	_b @ sp[(-4)+-4]
 21007                           ;stkvar	_grs @ sp[(-4)+0]
 21008  013054  0EF8               	movlw	-8
 21009  013056  006F FF8C  F032    	movff	plusw1,btemp
 21010  01305C  0EFC               	movlw	-4
 21011  01305E  0060  F0CB  FFE3   	movff	btemp,plusw1
 21012                           
 21013                           ;stkvar	_a @ sp[(-4)+-8]
 21014                           ;stkvar	_b @ sp[(-4)+-4]
 21015  013064  0EF4               	movlw	-12
 21016  013066  006F FF8C  F032    	movff	plusw1,btemp
 21017  01306C  0EF8               	movlw	-8
 21018  01306E  0060  F0CB  FFE3   	movff	btemp,plusw1
 21019                           
 21020                           ;stkvar	_grs @ sp[(-4)+0]
 21021                           ;stkvar	_a @ sp[(-4)+-8]
 21022  013074  0EFC               	movlw	-4
 21023  013076  006F FF8C  F032    	movff	plusw1,btemp
 21024  01307C  0EF4               	movlw	-12
 21025  01307E  0060  F0CB  FFE3   	movff	btemp,plusw1
 21026                           
 21027                           ;stkvar	_b @ sp[(-4)+-4]
 21028  013084  0EF9               	movlw	249
 21029  013086  24E1               	addwf	fsr1l,w,c
 21030  013088  6ED9               	movwf	fsr2l,c
 21031  01308A  0EFF               	movlw	255
 21032  01308C  20E2               	addwfc	fsr1h,w,c
 21033  01308E  6EDA               	movwf	fsr2h,c
 21034  013090  50DF               	movf	indf2,w,c
 21035  013092  6E3D               	movwf	(btemp+11)^0,c
 21036                           
 21037                           ;stkvar	_grs @ sp[(-4)+0]
 21038  013094  0EFC               	movlw	-4
 21039  013096  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21040                           
 21041                           ;stkvar	_a @ sp[(-4)+-8]
 21042  01309C  0EF5               	movlw	245
 21043  01309E  24E1               	addwf	fsr1l,w,c
 21044  0130A0  6ED9               	movwf	fsr2l,c
 21045  0130A2  0EFF               	movlw	255
 21046  0130A4  20E2               	addwfc	fsr1h,w,c
 21047  0130A6  6EDA               	movwf	fsr2h,c
 21048                           
 21049                           ;stkvar	_b @ sp[(-4)+-4]
 21050  0130A8  0EF9               	movlw	249
 21051  0130AA  24E1               	addwf	fsr1l,w,c
 21052  0130AC  6EE9               	movwf	fsr0l,c
 21053  0130AE  0EFF               	movlw	255
 21054  0130B0  20E2               	addwfc	fsr1h,w,c
 21055  0130B2  6EEA               	movwf	fsr0h,c
 21056  0130B4  006F FF7F FFEF     	movff	indf2,indf0
 21057                           
 21058                           ;stkvar	_grs @ sp[(-4)+0]
 21059                           ;stkvar	_a @ sp[(-4)+-8]
 21060  0130BA  0EF5               	movlw	245
 21061  0130BC  24E1               	addwf	fsr1l,w,c
 21062  0130BE  6ED9               	movwf	fsr2l,c
 21063  0130C0  0EFF               	movlw	255
 21064  0130C2  20E2               	addwfc	fsr1h,w,c
 21065  0130C4  6EDA               	movwf	fsr2h,c
 21066  0130C6  0EFC               	movlw	-4
 21067  0130C8  006F FF8F FFDF     	movff	plusw1,indf2
 21068                           
 21069                           ;stkvar	_b @ sp[(-4)+-4]
 21070  0130CE  0EFA               	movlw	250
 21071  0130D0  24E1               	addwf	fsr1l,w,c
 21072  0130D2  6ED9               	movwf	fsr2l,c
 21073  0130D4  0EFF               	movlw	255
 21074  0130D6  20E2               	addwfc	fsr1h,w,c
 21075  0130D8  6EDA               	movwf	fsr2h,c
 21076  0130DA  50DF               	movf	indf2,w,c
 21077  0130DC  6E3D               	movwf	(btemp+11)^0,c
 21078                           
 21079                           ;stkvar	_grs @ sp[(-4)+0]
 21080  0130DE  0EFC               	movlw	-4
 21081  0130E0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21082                           
 21083                           ;stkvar	_a @ sp[(-4)+-8]
 21084  0130E6  0EF6               	movlw	246
 21085  0130E8  24E1               	addwf	fsr1l,w,c
 21086  0130EA  6ED9               	movwf	fsr2l,c
 21087  0130EC  0EFF               	movlw	255
 21088  0130EE  20E2               	addwfc	fsr1h,w,c
 21089  0130F0  6EDA               	movwf	fsr2h,c
 21090                           
 21091                           ;stkvar	_b @ sp[(-4)+-4]
 21092  0130F2  0EFA               	movlw	250
 21093  0130F4  24E1               	addwf	fsr1l,w,c
 21094  0130F6  6EE9               	movwf	fsr0l,c
 21095  0130F8  0EFF               	movlw	255
 21096  0130FA  20E2               	addwfc	fsr1h,w,c
 21097  0130FC  6EEA               	movwf	fsr0h,c
 21098  0130FE  006F FF7F FFEF     	movff	indf2,indf0
 21099                           
 21100                           ;stkvar	_grs @ sp[(-4)+0]
 21101                           ;stkvar	_a @ sp[(-4)+-8]
 21102  013104  0EF6               	movlw	246
 21103  013106  24E1               	addwf	fsr1l,w,c
 21104  013108  6ED9               	movwf	fsr2l,c
 21105  01310A  0EFF               	movlw	255
 21106  01310C  20E2               	addwfc	fsr1h,w,c
 21107  01310E  6EDA               	movwf	fsr2h,c
 21108  013110  0EFC               	movlw	-4
 21109  013112  006F FF8F FFDF     	movff	plusw1,indf2
 21110                           
 21111                           ;stkvar	_b @ sp[(-4)+-4]
 21112  013118  0EFB               	movlw	251
 21113  01311A  24E1               	addwf	fsr1l,w,c
 21114  01311C  6ED9               	movwf	fsr2l,c
 21115  01311E  0EFF               	movlw	255
 21116  013120  20E2               	addwfc	fsr1h,w,c
 21117  013122  6EDA               	movwf	fsr2h,c
 21118  013124  50DF               	movf	indf2,w,c
 21119  013126  6E3D               	movwf	(btemp+11)^0,c
 21120                           
 21121                           ;stkvar	_grs @ sp[(-4)+0]
 21122  013128  0EFC               	movlw	-4
 21123  01312A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21124                           
 21125                           ;stkvar	_a @ sp[(-4)+-8]
 21126  013130  0EF7               	movlw	247
 21127  013132  24E1               	addwf	fsr1l,w,c
 21128  013134  6ED9               	movwf	fsr2l,c
 21129  013136  0EFF               	movlw	255
 21130  013138  20E2               	addwfc	fsr1h,w,c
 21131  01313A  6EDA               	movwf	fsr2h,c
 21132                           
 21133                           ;stkvar	_b @ sp[(-4)+-4]
 21134  01313C  0EFB               	movlw	251
 21135  01313E  24E1               	addwf	fsr1l,w,c
 21136  013140  6EE9               	movwf	fsr0l,c
 21137  013142  0EFF               	movlw	255
 21138  013144  20E2               	addwfc	fsr1h,w,c
 21139  013146  6EEA               	movwf	fsr0h,c
 21140  013148  006F FF7F FFEF     	movff	indf2,indf0
 21141                           
 21142                           ;stkvar	_grs @ sp[(-4)+0]
 21143                           ;stkvar	_a @ sp[(-4)+-8]
 21144  01314E  0EF7               	movlw	247
 21145  013150  24E1               	addwf	fsr1l,w,c
 21146  013152  6ED9               	movwf	fsr2l,c
 21147  013154  0EFF               	movlw	255
 21148  013156  20E2               	addwfc	fsr1h,w,c
 21149  013158  6EDA               	movwf	fsr2h,c
 21150  01315A  0EFC               	movlw	-4
 21151  01315C  006F FF8F FFDF     	movff	plusw1,indf2
 21152  013162                     l6504:
 21153                           
 21154                           ;stkvar	_grs @ sp[(-4)+0]
 21155  013162  0EFC               	movlw	-4
 21156  013164  6AE3               	clrf	plusw1,c
 21157                           
 21158                           ;stkvar	_aexp @ sp[(-4)+2]
 21159  013166  0EFE               	movlw	-2
 21160  013168  50E3               	movf	plusw1,w,c
 21161  01316A  6E3C               	movwf	(btemp+10)^0,c
 21162  01316C  6A3D               	clrf	(btemp+11)^0,c
 21163                           
 21164                           ;stkvar	_bexp @ sp[(-4)+1]
 21165  01316E  0EFD               	movlw	-3
 21166  013170  50E3               	movf	plusw1,w,c
 21167  013172  5E3C               	subwf	(btemp+10)^0,f,c
 21168  013174  0E00               	movlw	0
 21169  013176  5A3D               	subwfb	(btemp+11)^0,f,c
 21170  013178  BE3D               	btfsc	(btemp+11)^0,7,c
 21171  01317A  D062               	goto	l6528
 21172  01317C  503D               	movf	(btemp+11)^0,w,c
 21173  01317E  E104               	bnz	u4750
 21174  013180  0E1A               	movlw	26
 21175  013182  5C3C               	subwf	(btemp+10)^0,w,c
 21176  013184  A0D8               	btfss	status,0,c
 21177  013186  D05C               	goto	l6528
 21178  013188                     u4750:
 21179                           
 21180                           ;stkvar	_b @ sp[(-4)+-4]
 21181  013188  0EF8               	movlw	-8
 21182  01318A  50E3               	movf	plusw1,w,c
 21183  01318C  E10A               	bnz	u4761
 21184  01318E  0EF9               	movlw	-7
 21185  013190  50E3               	movf	plusw1,w,c
 21186  013192  E107               	bnz	u4761
 21187  013194  0EFA               	movlw	-6
 21188  013196  50E3               	movf	plusw1,w,c
 21189  013198  E104               	bnz	u4761
 21190  01319A  0EFB               	movlw	-5
 21191  01319C  50E3               	movf	plusw1,w,c
 21192  01319E  B4D8               	btfsc	status,2,c
 21193  0131A0  D003               	goto	u4760
 21194  0131A2                     u4761:
 21195  0131A2  6A3D               	clrf	(btemp+11)^0,c
 21196  0131A4  2A3D               	incf	(btemp+11)^0,f,c
 21197  0131A6  D001               	goto	u4778
 21198  0131A8                     u4760:
 21199  0131A8  6A3D               	clrf	(btemp+11)^0,c
 21200  0131AA                     u4778:
 21201                           
 21202                           ;stkvar	_grs @ sp[(-4)+0]
 21203  0131AA  0EFC               	movlw	-4
 21204  0131AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21205                           
 21206                           ;stkvar	_b @ sp[(-4)+-4]
 21207  0131B2  0EF8               	movlw	-8
 21208  0131B4  6AE3               	clrf	plusw1,c
 21209  0131B6  0EF9               	movlw	-7
 21210  0131B8  6AE3               	clrf	plusw1,c
 21211  0131BA  0EFA               	movlw	-6
 21212  0131BC  6AE3               	clrf	plusw1,c
 21213  0131BE  0EFB               	movlw	-5
 21214  0131C0  6AE3               	clrf	plusw1,c
 21215                           
 21216                           ;stkvar	_aexp @ sp[(-4)+2]
 21217                           ;stkvar	_bexp @ sp[(-4)+1]
 21218  0131C2  0EFE               	movlw	-2
 21219  0131C4  006F FF8C  F032    	movff	plusw1,btemp
 21220  0131CA  0EFD               	movlw	-3
 21221  0131CC  0060  F0CB  FFE3   	movff	btemp,plusw1
 21222  0131D2  D042               	goto	u4810
 21223  0131D4                     l6514:
 21224                           
 21225                           ;stkvar	_grs @ sp[(-4)+0]
 21226  0131D4  0EFC               	movlw	-4
 21227  0131D6  A0E3               	btfss	plusw1,0,c
 21228  0131D8  D00D               	goto	l6518
 21229                           
 21230                           ;stkvar	_grs @ sp[(-4)+0]
 21231  0131DA  0EFC               	movlw	-4
 21232  0131DC  006F FF8C  F03D    	movff	plusw1,btemp+11
 21233  0131E2  90D8               	bcf	status,0,c
 21234  0131E4  323D               	rrcf	(btemp+11)^0,f,c
 21235  0131E6  0E01               	movlw	1
 21236  0131E8  123D               	iorwf	(btemp+11)^0,f,c
 21237                           
 21238                           ;stkvar	_grs @ sp[(-4)+0]
 21239  0131EA  0EFC               	movlw	-4
 21240  0131EC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21241  0131F2  D009               	goto	l6520
 21242  0131F4                     l6518:
 21243                           
 21244                           ;stkvar	_grs @ sp[(-4)+0]
 21245  0131F4  50E1               	movf	fsr1l,w,c
 21246  0131F6  0FFC               	addlw	-4
 21247  0131F8  6ED9               	movwf	fsr2l,c
 21248  0131FA  50E2               	movf	fsr1h,w,c
 21249  0131FC  6EDA               	movwf	fsr2h,c
 21250  0131FE  0EFF               	movlw	255
 21251  013200  22DA               	addwfc	fsr2h,f,c
 21252  013202  90D8               	bcf	status,0,c
 21253  013204  32DF               	rrcf	indf2,f,c
 21254  013206                     l6520:
 21255                           
 21256                           ;stkvar	_b @ sp[(-4)+-4]
 21257  013206  0EF8               	movlw	-8
 21258  013208  A0E3               	btfss	plusw1,0,c
 21259  01320A  D002               	goto	l6524
 21260                           
 21261                           ;stkvar	_grs @ sp[(-4)+0]
 21262  01320C  0EFC               	movlw	-4
 21263  01320E  8EE3               	bsf	plusw1,7,c
 21264  013210                     l6524:
 21265  013210  0E01               	movlw	1
 21266  013212  6E3D               	movwf	(btemp+11)^0,c
 21267                           
 21268                           ;stkvar	_b @ sp[(-4)+-4]
 21269  013214  50E1               	movf	fsr1l,w,c
 21270  013216  0FF8               	addlw	-8
 21271  013218  6ED9               	movwf	fsr2l,c
 21272  01321A  50E2               	movf	fsr1h,w,c
 21273  01321C  6EDA               	movwf	fsr2h,c
 21274  01321E  0EFF               	movlw	255
 21275  013220  22DA               	addwfc	fsr2h,f,c
 21276  013222  283D               	incf	(btemp+11)^0,w,c
 21277  013224  52DE               	movf	postinc2,f,c
 21278  013226  D008               	goto	u4800
 21279  013228                     u4805:
 21280  013228  52DE               	movf	postinc2,f,c
 21281  01322A  90D8               	bcf	status,0,c
 21282  01322C  BEDC               	btfsc	preinc2,7,c
 21283  01322E  80D8               	bsf	status,0,c
 21284  013230  32DD               	rrcf	postdec2,f,c
 21285  013232  32DD               	rrcf	postdec2,f,c
 21286  013234  32DD               	rrcf	postdec2,f,c
 21287  013236  32DE               	rrcf	postinc2,f,c
 21288  013238                     u4800:
 21289  013238  2EE8               	decfsz	wreg,f,c
 21290  01323A  D7F6               	goto	u4805
 21291                           
 21292                           ;stkvar	_bexp @ sp[(-4)+1]
 21293  01323C  0EFD               	movlw	-3
 21294  01323E  2AE3               	incf	plusw1,f,c
 21295  013240                     l6528:
 21296                           
 21297                           ;stkvar	_aexp @ sp[(-4)+2]
 21298                           ;stkvar	_bexp @ sp[(-4)+1]
 21299  013240  50E1               	movf	fsr1l,w,c
 21300  013242  0FFD               	addlw	-3
 21301  013244  6ED9               	movwf	fsr2l,c
 21302  013246  50E2               	movf	fsr1h,w,c
 21303  013248  6EDA               	movwf	fsr2h,c
 21304  01324A  0EFF               	movlw	255
 21305  01324C  22DA               	addwfc	fsr2h,f,c
 21306  01324E  0EFE               	movlw	-2
 21307  013250  50E3               	movf	plusw1,w,c
 21308  013252  5CDE               	subwf	postinc2,w,c
 21309  013254  A0D8               	btfss	status,0,c
 21310  013256  D7BE               	goto	l6514
 21311  013258                     u4810:
 21312                           
 21313                           ;stkvar	_signs @ sp[(-4)+3]
 21314  013258  0EFF               	movlw	-1
 21315  01325A  BCE3               	btfsc	plusw1,6,c
 21316  01325C  D066               	goto	l6556
 21317                           
 21318                           ;stkvar	_bexp @ sp[(-4)+1]
 21319  01325E  0EFD               	movlw	-3
 21320  013260  50E3               	movf	plusw1,w,c
 21321  013262  B4D8               	btfsc	status,2,c
 21322  013264  D0F2               	goto	u4910
 21323                           
 21324                           ;stkvar	_a @ sp[(-4)+-8]
 21325                           ;stkvar	_b @ sp[(-4)+-4]
 21326  013266  0EF8               	movlw	-8
 21327  013268  50E3               	movf	plusw1,w,c
 21328  01326A  6E32               	movwf	btemp^0,c
 21329  01326C  0EF4               	movlw	-12
 21330  01326E  50E3               	movf	plusw1,w,c
 21331  013270  2632               	addwf	btemp^0,f,c
 21332  013272  0EF8               	movlw	-8
 21333  013274  0060  F0CB  FFE3   	movff	btemp,plusw1
 21334  01327A  0EF9               	movlw	-7
 21335  01327C  50E3               	movf	plusw1,w,c
 21336  01327E  6E32               	movwf	btemp^0,c
 21337  013280  0EF5               	movlw	-11
 21338  013282  50E3               	movf	plusw1,w,c
 21339  013284  2232               	addwfc	btemp^0,f,c
 21340  013286  0EF9               	movlw	-7
 21341  013288  0060  F0CB  FFE3   	movff	btemp,plusw1
 21342  01328E  0EFA               	movlw	-6
 21343  013290  50E3               	movf	plusw1,w,c
 21344  013292  6E32               	movwf	btemp^0,c
 21345  013294  0EF6               	movlw	-10
 21346  013296  50E3               	movf	plusw1,w,c
 21347  013298  2232               	addwfc	btemp^0,f,c
 21348  01329A  0EFA               	movlw	-6
 21349  01329C  0060  F0CB  FFE3   	movff	btemp,plusw1
 21350  0132A2  0EFB               	movlw	-5
 21351  0132A4  50E3               	movf	plusw1,w,c
 21352  0132A6  6E32               	movwf	btemp^0,c
 21353  0132A8  0EF7               	movlw	-9
 21354  0132AA  50E3               	movf	plusw1,w,c
 21355  0132AC  2232               	addwfc	btemp^0,f,c
 21356  0132AE  0EFB               	movlw	-5
 21357  0132B0  0060  F0CB  FFE3   	movff	btemp,plusw1
 21358                           
 21359                           ;stkvar	_b @ sp[(-4)+-4]
 21360  0132B6  0EFB               	movlw	-5
 21361  0132B8  A0E3               	btfss	plusw1,0,c
 21362  0132BA  D101               	goto	u4950
 21363                           
 21364                           ;stkvar	_grs @ sp[(-4)+0]
 21365  0132BC  0EFC               	movlw	-4
 21366  0132BE  A0E3               	btfss	plusw1,0,c
 21367  0132C0  D00D               	goto	l6546
 21368                           
 21369                           ;stkvar	_grs @ sp[(-4)+0]
 21370  0132C2  0EFC               	movlw	-4
 21371  0132C4  006F FF8C  F03D    	movff	plusw1,btemp+11
 21372  0132CA  90D8               	bcf	status,0,c
 21373  0132CC  323D               	rrcf	(btemp+11)^0,f,c
 21374  0132CE  0E01               	movlw	1
 21375  0132D0  123D               	iorwf	(btemp+11)^0,f,c
 21376                           
 21377                           ;stkvar	_grs @ sp[(-4)+0]
 21378  0132D2  0EFC               	movlw	-4
 21379  0132D4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21380  0132DA  D009               	goto	l6548
 21381  0132DC                     l6546:
 21382                           
 21383                           ;stkvar	_grs @ sp[(-4)+0]
 21384  0132DC  50E1               	movf	fsr1l,w,c
 21385  0132DE  0FFC               	addlw	-4
 21386  0132E0  6ED9               	movwf	fsr2l,c
 21387  0132E2  50E2               	movf	fsr1h,w,c
 21388  0132E4  6EDA               	movwf	fsr2h,c
 21389  0132E6  0EFF               	movlw	255
 21390  0132E8  22DA               	addwfc	fsr2h,f,c
 21391  0132EA  90D8               	bcf	status,0,c
 21392  0132EC  32DF               	rrcf	indf2,f,c
 21393  0132EE                     l6548:
 21394                           
 21395                           ;stkvar	_b @ sp[(-4)+-4]
 21396  0132EE  0EF8               	movlw	-8
 21397  0132F0  A0E3               	btfss	plusw1,0,c
 21398  0132F2  D002               	goto	l6552
 21399                           
 21400                           ;stkvar	_grs @ sp[(-4)+0]
 21401  0132F4  0EFC               	movlw	-4
 21402  0132F6  8EE3               	bsf	plusw1,7,c
 21403  0132F8                     l6552:
 21404  0132F8  0E01               	movlw	1
 21405  0132FA  6E3D               	movwf	(btemp+11)^0,c
 21406                           
 21407                           ;stkvar	_b @ sp[(-4)+-4]
 21408  0132FC  50E1               	movf	fsr1l,w,c
 21409  0132FE  0FF8               	addlw	-8
 21410  013300  6ED9               	movwf	fsr2l,c
 21411  013302  50E2               	movf	fsr1h,w,c
 21412  013304  6EDA               	movwf	fsr2h,c
 21413  013306  0EFF               	movlw	255
 21414  013308  22DA               	addwfc	fsr2h,f,c
 21415  01330A  283D               	incf	(btemp+11)^0,w,c
 21416  01330C  52DE               	movf	postinc2,f,c
 21417  01330E  D008               	goto	u4870
 21418  013310                     u4875:
 21419  013310  52DE               	movf	postinc2,f,c
 21420  013312  90D8               	bcf	status,0,c
 21421  013314  BEDC               	btfsc	preinc2,7,c
 21422  013316  80D8               	bsf	status,0,c
 21423  013318  32DD               	rrcf	postdec2,f,c
 21424  01331A  32DD               	rrcf	postdec2,f,c
 21425  01331C  32DD               	rrcf	postdec2,f,c
 21426  01331E  32DE               	rrcf	postinc2,f,c
 21427  013320                     u4870:
 21428  013320  2EE8               	decfsz	wreg,f,c
 21429  013322  D7F6               	goto	u4875
 21430                           
 21431                           ;stkvar	_bexp @ sp[(-4)+1]
 21432  013324  0EFD               	movlw	-3
 21433  013326  2AE3               	incf	plusw1,f,c
 21434  013328  D0CA               	goto	u4950
 21435  01332A                     l6556:
 21436                           
 21437                           ;stkvar	_a @ sp[(-4)+-8]
 21438                           ;stkvar	_b @ sp[(-4)+-4]
 21439  01332A  50E1               	movf	fsr1l,w,c
 21440  01332C  0FF8               	addlw	-8
 21441  01332E  6ED9               	movwf	fsr2l,c
 21442  013330  50E2               	movf	fsr1h,w,c
 21443  013332  6EDA               	movwf	fsr2h,c
 21444  013334  0EFF               	movlw	255
 21445  013336  22DA               	addwfc	fsr2h,f,c
 21446  013338  0EF4               	movlw	-12
 21447  01333A  50E3               	movf	plusw1,w,c
 21448  01333C  5CDE               	subwf	postinc2,w,c
 21449  01333E  0EF5               	movlw	-11
 21450  013340  50E3               	movf	plusw1,w,c
 21451  013342  58DE               	subwfb	postinc2,w,c
 21452  013344  0EF6               	movlw	-10
 21453  013346  50E3               	movf	plusw1,w,c
 21454  013348  58DE               	subwfb	postinc2,w,c
 21455  01334A  50DE               	movf	postinc2,w,c
 21456  01334C  0A80               	xorlw	128
 21457  01334E  6E32               	movwf	btemp^0,c
 21458  013350  0EF7               	movlw	-9
 21459  013352  50E3               	movf	plusw1,w,c
 21460  013354  0A80               	xorlw	128
 21461  013356  5832               	subwfb	btemp^0,w,c
 21462  013358  B0D8               	btfsc	status,0,c
 21463  01335A  D053               	goto	l6568
 21464                           
 21465                           ;stkvar	_b @ sp[(-4)+-4]
 21466                           ;stkvar	_a @ sp[(-4)+-8]
 21467  01335C  0EF4               	movlw	-12
 21468  01335E  006F FF8C  F03A    	movff	plusw1,btemp+8
 21469  013364  0EF5               	movlw	-11
 21470  013366  006F FF8C  F03B    	movff	plusw1,btemp+9
 21471  01336C  0EF6               	movlw	-10
 21472  01336E  006F FF8C  F03C    	movff	plusw1,btemp+10
 21473  013374  0EF7               	movlw	-9
 21474  013376  006F FF8C  F03D    	movff	plusw1,btemp+11
 21475  01337C  0EF8               	movlw	-8
 21476  01337E  50E3               	movf	plusw1,w,c
 21477  013380  5E3A               	subwf	(btemp+8)^0,f,c
 21478  013382  0EF9               	movlw	-7
 21479  013384  50E3               	movf	plusw1,w,c
 21480  013386  5A3B               	subwfb	(btemp+9)^0,f,c
 21481  013388  0EFA               	movlw	-6
 21482  01338A  50E3               	movf	plusw1,w,c
 21483  01338C  5A3C               	subwfb	(btemp+10)^0,f,c
 21484  01338E  0EFB               	movlw	-5
 21485  013390  50E3               	movf	plusw1,w,c
 21486  013392  5A3D               	subwfb	(btemp+11)^0,f,c
 21487  013394  0EFF               	movlw	255
 21488  013396  243A               	addwf	(btemp+8)^0,w,c
 21489  013398  6E36               	movwf	(btemp+4)^0,c
 21490  01339A  0EFF               	movlw	255
 21491  01339C  203B               	addwfc	(btemp+9)^0,w,c
 21492  01339E  6E37               	movwf	(btemp+5)^0,c
 21493  0133A0  0EFF               	movlw	255
 21494  0133A2  203C               	addwfc	(btemp+10)^0,w,c
 21495  0133A4  6E38               	movwf	(btemp+6)^0,c
 21496  0133A6  0EFF               	movlw	255
 21497  0133A8  203D               	addwfc	(btemp+11)^0,w,c
 21498  0133AA  6E39               	movwf	(btemp+7)^0,c
 21499                           
 21500                           ;stkvar	_b @ sp[(-4)+-4]
 21501  0133AC  0EF8               	movlw	-8
 21502  0133AE  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21503  0133B4  0EF9               	movlw	-7
 21504  0133B6  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21505  0133BC  0EFA               	movlw	-6
 21506  0133BE  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21507  0133C4  0EFB               	movlw	-5
 21508  0133C6  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21509                           
 21510                           ;stkvar	_signs @ sp[(-4)+3]
 21511  0133CC  0EFF               	movlw	-1
 21512  0133CE  7EE3               	btg	plusw1,7,c
 21513                           
 21514                           ;stkvar	_grs @ sp[(-4)+0]
 21515  0133D0  0EFC               	movlw	-4
 21516  0133D2  50E3               	movf	plusw1,w,c
 21517  0133D4  0800               	sublw	0
 21518  0133D6  6E3D               	movwf	(btemp+11)^0,c
 21519                           
 21520                           ;stkvar	_grs @ sp[(-4)+0]
 21521  0133D8  0EFC               	movlw	-4
 21522  0133DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21523                           
 21524                           ;stkvar	_grs @ sp[(-4)+0]
 21525  0133E0  0EFC               	movlw	-4
 21526  0133E2  50E3               	movf	plusw1,w,c
 21527  0133E4  A4D8               	btfss	status,2,c
 21528  0133E6  D020               	goto	l6570
 21529                           
 21530                           ;stkvar	_b @ sp[(-4)+-4]
 21531  0133E8  50E1               	movf	fsr1l,w,c
 21532  0133EA  0FF8               	addlw	-8
 21533  0133EC  6ED9               	movwf	fsr2l,c
 21534  0133EE  50E2               	movf	fsr1h,w,c
 21535  0133F0  6EDA               	movwf	fsr2h,c
 21536  0133F2  0EFF               	movlw	255
 21537  0133F4  22DA               	addwfc	fsr2h,f,c
 21538  0133F6  2ADE               	incf	postinc2,f,c
 21539  0133F8  0E00               	movlw	0
 21540  0133FA  22DE               	addwfc	postinc2,f,c
 21541  0133FC  22DE               	addwfc	postinc2,f,c
 21542  0133FE  22DE               	addwfc	postinc2,f,c
 21543  013400  D013               	goto	l6570
 21544  013402                     l6568:
 21545                           
 21546                           ;stkvar	_a @ sp[(-4)+-8]
 21547                           ;stkvar	_b @ sp[(-4)+-4]
 21548  013402  50E1               	movf	fsr1l,w,c
 21549  013404  0FF8               	addlw	-8
 21550  013406  6ED9               	movwf	fsr2l,c
 21551  013408  50E2               	movf	fsr1h,w,c
 21552  01340A  6EDA               	movwf	fsr2h,c
 21553  01340C  0EFF               	movlw	255
 21554  01340E  22DA               	addwfc	fsr2h,f,c
 21555  013410  0EF4               	movlw	-12
 21556  013412  50E3               	movf	plusw1,w,c
 21557  013414  5EDE               	subwf	postinc2,f,c
 21558  013416  0EF5               	movlw	-11
 21559  013418  50E3               	movf	plusw1,w,c
 21560  01341A  5ADE               	subwfb	postinc2,f,c
 21561  01341C  0EF6               	movlw	-10
 21562  01341E  50E3               	movf	plusw1,w,c
 21563  013420  5ADE               	subwfb	postinc2,f,c
 21564  013422  0EF7               	movlw	-9
 21565  013424  50E3               	movf	plusw1,w,c
 21566  013426  5ADE               	subwfb	postinc2,f,c
 21567  013428                     l6570:
 21568                           
 21569                           ;stkvar	_b @ sp[(-4)+-4]
 21570  013428  0EF8               	movlw	-8
 21571  01342A  50E3               	movf	plusw1,w,c
 21572  01342C  E145               	bnz	l6592
 21573  01342E  0EF9               	movlw	-7
 21574  013430  50E3               	movf	plusw1,w,c
 21575  013432  E142               	bnz	l6592
 21576  013434  0EFA               	movlw	-6
 21577  013436  50E3               	movf	plusw1,w,c
 21578  013438  E13F               	bnz	l6592
 21579  01343A  0EFB               	movlw	-5
 21580  01343C  50E3               	movf	plusw1,w,c
 21581  01343E  A4D8               	btfss	status,2,c
 21582  013440  D03B               	goto	l6592
 21583                           
 21584                           ;stkvar	_grs @ sp[(-4)+0]
 21585  013442  0EFC               	movlw	-4
 21586  013444  50E3               	movf	plusw1,w,c
 21587  013446  A4D8               	btfss	status,2,c
 21588  013448  D037               	goto	l6592
 21589  01344A                     u4910:
 21590  01344A  0E00               	movlw	0
 21591  01344C  6E32               	movwf	btemp^0,c
 21592  01344E  0E00               	movlw	0
 21593  013450  6E33               	movwf	(btemp+1)^0,c
 21594  013452  0E00               	movlw	0
 21595  013454  6E34               	movwf	(btemp+2)^0,c
 21596  013456  0E00               	movlw	0
 21597  013458  6E35               	movwf	(btemp+3)^0,c
 21598  01345A  D0C6               	goto	l2648
 21599  01345C                     l6578:
 21600                           
 21601                           ;stkvar	_b @ sp[(-4)+-4]
 21602  01345C  90D8               	bcf	status,0,c
 21603  01345E  0EF8               	movlw	-8
 21604  013460  36E3               	rlcf	plusw1,f,c
 21605  013462  0EF9               	movlw	-7
 21606  013464  36E3               	rlcf	plusw1,f,c
 21607  013466  0EFA               	movlw	-6
 21608  013468  36E3               	rlcf	plusw1,f,c
 21609  01346A  0EFB               	movlw	-5
 21610  01346C  36E3               	rlcf	plusw1,f,c
 21611                           
 21612                           ;stkvar	_grs @ sp[(-4)+0]
 21613  01346E  0EFC               	movlw	-4
 21614  013470  AEE3               	btfss	plusw1,7,c
 21615  013472  D002               	goto	l2660
 21616                           
 21617                           ;stkvar	_b @ sp[(-4)+-4]
 21618  013474  0EF8               	movlw	-8
 21619  013476  80E3               	bsf	plusw1,0,c
 21620  013478                     l2660:
 21621                           
 21622                           ;stkvar	_grs @ sp[(-4)+0]
 21623  013478  0EFC               	movlw	-4
 21624  01347A  A0E3               	btfss	plusw1,0,c
 21625  01347C  D00E               	goto	l6586
 21626                           
 21627                           ;stkvar	_grs @ sp[(-4)+0]
 21628  01347E  0EFC               	movlw	-4
 21629  013480  006F FF8C  F03D    	movff	plusw1,btemp+11
 21630  013486  90D8               	bcf	status,0,c
 21631  013488  343D               	rlcf	(btemp+11)^0,w,c
 21632  01348A  6E3C               	movwf	(btemp+10)^0,c
 21633  01348C  0E01               	movlw	1
 21634  01348E  123C               	iorwf	(btemp+10)^0,f,c
 21635                           
 21636                           ;stkvar	_grs @ sp[(-4)+0]
 21637  013490  0EFC               	movlw	-4
 21638  013492  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21639  013498  D009               	goto	l6588
 21640  01349A                     l6586:
 21641                           
 21642                           ;stkvar	_grs @ sp[(-4)+0]
 21643  01349A  50E1               	movf	fsr1l,w,c
 21644  01349C  0FFC               	addlw	-4
 21645  01349E  6ED9               	movwf	fsr2l,c
 21646  0134A0  50E2               	movf	fsr1h,w,c
 21647  0134A2  6EDA               	movwf	fsr2h,c
 21648  0134A4  0EFF               	movlw	255
 21649  0134A6  22DA               	addwfc	fsr2h,f,c
 21650  0134A8  90D8               	bcf	status,0,c
 21651  0134AA  36DF               	rlcf	indf2,f,c
 21652  0134AC                     l6588:
 21653                           
 21654                           ;stkvar	_bexp @ sp[(-4)+1]
 21655  0134AC  0EFD               	movlw	-3
 21656  0134AE  50E3               	movf	plusw1,w,c
 21657  0134B0  B4D8               	btfsc	status,2,c
 21658  0134B2  D002               	goto	l6592
 21659                           
 21660                           ;stkvar	_bexp @ sp[(-4)+1]
 21661  0134B4  0EFD               	movlw	-3
 21662  0134B6  06E3               	decf	plusw1,f,c
 21663  0134B8                     l6592:
 21664                           
 21665                           ;stkvar	_b @ sp[(-4)+-4]
 21666  0134B8  0EFA               	movlw	-6
 21667  0134BA  AEE3               	btfss	plusw1,7,c
 21668  0134BC  D7CF               	goto	l6578
 21669  0134BE                     u4950:
 21670                           
 21671                           ;stkvar	_aexp @ sp[(-4)+2]
 21672  0134BE  0EFE               	movlw	-2
 21673  0134C0  6AE3               	clrf	plusw1,c
 21674                           
 21675                           ;stkvar	_grs @ sp[(-4)+0]
 21676  0134C2  0EFC               	movlw	-4
 21677  0134C4  AEE3               	btfss	plusw1,7,c
 21678  0134C6  D00F               	goto	l6606
 21679                           
 21680                           ;stkvar	_grs @ sp[(-4)+0]
 21681  0134C8  0EFC               	movlw	-4
 21682  0134CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 21683  0134D0  0E7F               	movlw	127
 21684  0134D2  163D               	andwf	(btemp+11)^0,f,c
 21685  0134D4  B4D8               	btfsc	status,2,c
 21686  0134D6  D004               	goto	l6602
 21687  0134D8                     u4970:
 21688                           
 21689                           ;stkvar	_aexp @ sp[(-4)+2]
 21690  0134D8  0EFE               	movlw	-2
 21691  0134DA  6AE3               	clrf	plusw1,c
 21692  0134DC  2AE3               	incf	plusw1,f,c
 21693  0134DE  D003               	goto	l6606
 21694  0134E0                     l6602:
 21695                           
 21696                           ;stkvar	_b @ sp[(-4)+-4]
 21697  0134E0  0EF8               	movlw	-8
 21698  0134E2  B0E3               	btfsc	plusw1,0,c
 21699  0134E4  D7F9               	goto	u4970
 21700  0134E6                     l6606:
 21701                           
 21702                           ;stkvar	_aexp @ sp[(-4)+2]
 21703  0134E6  0EFE               	movlw	-2
 21704  0134E8  50E3               	movf	plusw1,w,c
 21705  0134EA  B4D8               	btfsc	status,2,c
 21706  0134EC  D02B               	goto	l6618
 21707                           
 21708                           ;stkvar	_b @ sp[(-4)+-4]
 21709  0134EE  50E1               	movf	fsr1l,w,c
 21710  0134F0  0FF8               	addlw	-8
 21711  0134F2  6ED9               	movwf	fsr2l,c
 21712  0134F4  50E2               	movf	fsr1h,w,c
 21713  0134F6  6EDA               	movwf	fsr2h,c
 21714  0134F8  0EFF               	movlw	255
 21715  0134FA  22DA               	addwfc	fsr2h,f,c
 21716  0134FC  2ADE               	incf	postinc2,f,c
 21717  0134FE  0E00               	movlw	0
 21718  013500  22DE               	addwfc	postinc2,f,c
 21719  013502  22DE               	addwfc	postinc2,f,c
 21720  013504  22DE               	addwfc	postinc2,f,c
 21721                           
 21722                           ;stkvar	_b @ sp[(-4)+-4]
 21723  013506  0EFB               	movlw	-5
 21724  013508  A0E3               	btfss	plusw1,0,c
 21725  01350A  D01C               	goto	l6618
 21726  01350C  0E01               	movlw	1
 21727  01350E  6E3D               	movwf	(btemp+11)^0,c
 21728                           
 21729                           ;stkvar	_b @ sp[(-4)+-4]
 21730  013510  50E1               	movf	fsr1l,w,c
 21731  013512  0FF8               	addlw	-8
 21732  013514  6ED9               	movwf	fsr2l,c
 21733  013516  50E2               	movf	fsr1h,w,c
 21734  013518  6EDA               	movwf	fsr2h,c
 21735  01351A  0EFF               	movlw	255
 21736  01351C  22DA               	addwfc	fsr2h,f,c
 21737  01351E  283D               	incf	(btemp+11)^0,w,c
 21738  013520  52DE               	movf	postinc2,f,c
 21739  013522  D008               	goto	u5010
 21740  013524                     u5015:
 21741  013524  52DE               	movf	postinc2,f,c
 21742  013526  90D8               	bcf	status,0,c
 21743  013528  BEDC               	btfsc	preinc2,7,c
 21744  01352A  80D8               	bsf	status,0,c
 21745  01352C  32DD               	rrcf	postdec2,f,c
 21746  01352E  32DD               	rrcf	postdec2,f,c
 21747  013530  32DD               	rrcf	postdec2,f,c
 21748  013532  32DE               	rrcf	postinc2,f,c
 21749  013534                     u5010:
 21750  013534  2EE8               	decfsz	wreg,f,c
 21751  013536  D7F6               	goto	u5015
 21752                           
 21753                           ;stkvar	_bexp @ sp[(-4)+1]
 21754  013538  0EFD               	movlw	-3
 21755  01353A  28E3               	incf	plusw1,w,c
 21756  01353C  B4D8               	btfsc	status,2,c
 21757  01353E  D002               	goto	l6618
 21758                           
 21759                           ;stkvar	_bexp @ sp[(-4)+1]
 21760  013540  0EFD               	movlw	-3
 21761  013542  2AE3               	incf	plusw1,f,c
 21762  013544                     l6618:
 21763                           
 21764                           ;stkvar	_bexp @ sp[(-4)+1]
 21765  013544  0EFD               	movlw	-3
 21766  013546  28E3               	incf	plusw1,w,c
 21767  013548  B4D8               	btfsc	status,2,c
 21768  01354A  D004               	goto	u5040
 21769                           
 21770                           ;stkvar	_bexp @ sp[(-4)+1]
 21771  01354C  0EFD               	movlw	-3
 21772  01354E  50E3               	movf	plusw1,w,c
 21773  013550  A4D8               	btfss	status,2,c
 21774  013552  D00E               	goto	l6628
 21775  013554                     u5040:
 21776                           
 21777                           ;stkvar	_b @ sp[(-4)+-4]
 21778  013554  0EF8               	movlw	-8
 21779  013556  6AE3               	clrf	plusw1,c
 21780  013558  0EF9               	movlw	-7
 21781  01355A  6AE3               	clrf	plusw1,c
 21782  01355C  0EFA               	movlw	-6
 21783  01355E  6AE3               	clrf	plusw1,c
 21784  013560  0EFB               	movlw	-5
 21785  013562  6AE3               	clrf	plusw1,c
 21786                           
 21787                           ;stkvar	_bexp @ sp[(-4)+1]
 21788  013564  0EFD               	movlw	-3
 21789  013566  50E3               	movf	plusw1,w,c
 21790  013568  A4D8               	btfss	status,2,c
 21791  01356A  D002               	goto	l6628
 21792                           
 21793                           ;stkvar	_signs @ sp[(-4)+3]
 21794  01356C  0EFF               	movlw	-1
 21795  01356E  6AE3               	clrf	plusw1,c
 21796  013570                     l6628:
 21797                           
 21798                           ;stkvar	_bexp @ sp[(-4)+1]
 21799  013570  0EFD               	movlw	-3
 21800  013572  A0E3               	btfss	plusw1,0,c
 21801  013574  D009               	goto	l6632
 21802                           
 21803                           ;stkvar	_b @ sp[(-4)+-4]
 21804  013576  0EFA               	movlw	250
 21805  013578  24E1               	addwf	fsr1l,w,c
 21806  01357A  6ED9               	movwf	fsr2l,c
 21807  01357C  0EFF               	movlw	255
 21808  01357E  20E2               	addwfc	fsr1h,w,c
 21809  013580  6EDA               	movwf	fsr2h,c
 21810  013582  0E00               	movlw	0
 21811  013584  8EDB               	bsf	plusw2,7,c
 21812  013586  D008               	goto	l6634
 21813  013588                     l6632:
 21814                           
 21815                           ;stkvar	_b @ sp[(-4)+-4]
 21816  013588  0EFA               	movlw	250
 21817  01358A  24E1               	addwf	fsr1l,w,c
 21818  01358C  6ED9               	movwf	fsr2l,c
 21819  01358E  0EFF               	movlw	255
 21820  013590  20E2               	addwfc	fsr1h,w,c
 21821  013592  6EDA               	movwf	fsr2h,c
 21822  013594  0E7F               	movlw	127
 21823  013596  16DF               	andwf	indf2,f,c
 21824  013598                     l6634:
 21825                           
 21826                           ;stkvar	_b @ sp[(-4)+-4]
 21827  013598  0EFB               	movlw	251
 21828  01359A  24E1               	addwf	fsr1l,w,c
 21829  01359C  6ED9               	movwf	fsr2l,c
 21830  01359E  0EFF               	movlw	255
 21831  0135A0  20E2               	addwfc	fsr1h,w,c
 21832  0135A2  6EDA               	movwf	fsr2h,c
 21833                           
 21834                           ;stkvar	_bexp @ sp[(-4)+1]
 21835  0135A4  0EFD               	movlw	-3
 21836  0135A6  006F FF8C  F03D    	movff	plusw1,btemp+11
 21837  0135AC  90D8               	bcf	status,0,c
 21838  0135AE  303D               	rrcf	(btemp+11)^0,w,c
 21839  0135B0  6EDF               	movwf	indf2,c
 21840                           
 21841                           ;stkvar	_signs @ sp[(-4)+3]
 21842  0135B2  0EFF               	movlw	-1
 21843  0135B4  AEE3               	btfss	plusw1,7,c
 21844  0135B6  D008               	goto	l6640
 21845                           
 21846                           ;stkvar	_b @ sp[(-4)+-4]
 21847  0135B8  0EFB               	movlw	251
 21848  0135BA  24E1               	addwf	fsr1l,w,c
 21849  0135BC  6ED9               	movwf	fsr2l,c
 21850  0135BE  0EFF               	movlw	255
 21851  0135C0  20E2               	addwfc	fsr1h,w,c
 21852  0135C2  6EDA               	movwf	fsr2h,c
 21853  0135C4  0E00               	movlw	0
 21854  0135C6  8EDB               	bsf	plusw2,7,c
 21855  0135C8                     l6640:
 21856                           
 21857                           ;stkvar	_b @ sp[(-4)+-4]
 21858  0135C8  0EF8               	movlw	-8
 21859  0135CA  006F FF8C  F032    	movff	plusw1,btemp
 21860  0135D0  0EF9               	movlw	-7
 21861  0135D2  006F FF8C  F033    	movff	plusw1,btemp+1
 21862  0135D8  0EFA               	movlw	-6
 21863  0135DA  006F FF8C  F034    	movff	plusw1,btemp+2
 21864  0135E0  0EFB               	movlw	-5
 21865  0135E2  006F FF8C  F035    	movff	plusw1,btemp+3
 21866  0135E8                     l2648:
 21867                           
 21868                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 21869  0135E8  0EF4               	movlw	244
 21870  0135EA  26E1               	addwf	fsr1l,f,c
 21871  0135EC  0EFF               	movlw	255
 21872  0135EE  22E2               	addwfc	fsr1h,f,c
 21873  0135F0  0012               	return		;funcret
 21874  0135F2                     __end_of___fladd:
 21875                           	opt callstack 0
 21876                           
 21877 ;; *************** function ___flmul *****************
 21878 ;; Defined at:
 21879 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 21880 ;; Parameters:    Size  Location     Type
 21881 ;;  b               4  [STACK] unsigned char 
 21882 ;;  a               4  [STACK] unsigned char 
 21883 ;; Auto vars:     Size  Location     Type
 21884 ;;  prod            4  [STACK] struct .
 21885 ;;  grs             4  [STACK] unsigned long 
 21886 ;;  temp            2  [STACK] struct .
 21887 ;;  bexp            1  [STACK] unsigned char 
 21888 ;;  aexp            1  [STACK] unsigned char 
 21889 ;;  sign            1  [STACK] unsigned char 
 21890 ;; Return value:  Size  Location     Type
 21891 ;;                  4  [STACK] unsigned char 
 21892 ;; Registers used:
 21893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21894 ;; Tracked objects:
 21895 ;;		On entry : 0/2
 21896 ;;		On exit  : 0/0
 21897 ;;		Unchanged: 0/0
 21898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21903 ;;Total ram usage:        0 bytes
 21904 ;; Hardware stack levels used:    1
 21905 ;; Hardware stack levels required when called:    6
 21906 ;; This function calls:
 21907 ;;		Nothing
 21908 ;; This function is called by:
 21909 ;;		_conv_raw_result
 21910 ;;		_lp_filter
 21911 ;;		_calc_model_data
 21912 ;;		_efgtoa
 21913 ;; This function uses a reentrant model
 21914 ;;
 21915                           
 21916                           	psect	text91
 21917  01260C                     __ptext91:
 21918                           	opt callstack 0
 21919  01260C                     ___flmul:
 21920                           	opt callstack 0
 21921                           
 21922                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 21923  01260C  0E0D               	movlw	13
 21924  01260E  26E1               	addwf	fsr1l,f,c
 21925  012610  0E00               	movlw	0
 21926  012612  22E2               	addwfc	fsr1h,f,c
 21927                           
 21928                           ;stkvar	_b @ sp[(-13)+-4]
 21929                           
 21930                           ;incstack = 0
 21931  012614  0EF2               	movlw	242
 21932  012616  24E1               	addwf	fsr1l,w,c
 21933  012618  6ED9               	movwf	fsr2l,c
 21934  01261A  0EFF               	movlw	255
 21935  01261C  20E2               	addwfc	fsr1h,w,c
 21936  01261E  6EDA               	movwf	fsr2h,c
 21937  012620  50DF               	movf	indf2,w,c
 21938  012622  6E3D               	movwf	(btemp+11)^0,c
 21939  012624  0E80               	movlw	128
 21940  012626  163D               	andwf	(btemp+11)^0,f,c
 21941                           
 21942                           ;stkvar	_sign @ sp[(-13)+12]
 21943  012628  0EFF               	movlw	-1
 21944  01262A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21945                           
 21946                           ;stkvar	_b @ sp[(-13)+-4]
 21947  012630  0EF2               	movlw	242
 21948  012632  24E1               	addwf	fsr1l,w,c
 21949  012634  6ED9               	movwf	fsr2l,c
 21950  012636  0EFF               	movlw	255
 21951  012638  20E2               	addwfc	fsr1h,w,c
 21952  01263A  6EDA               	movwf	fsr2h,c
 21953  01263C  50DF               	movf	indf2,w,c
 21954  01263E  6E3D               	movwf	(btemp+11)^0,c
 21955  012640  90D8               	bcf	status,0,c
 21956  012642  343D               	rlcf	(btemp+11)^0,w,c
 21957  012644  6E3C               	movwf	(btemp+10)^0,c
 21958                           
 21959                           ;stkvar	_bexp @ sp[(-13)+10]
 21960  012646  0EFD               	movlw	-3
 21961  012648  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21962                           
 21963                           ;stkvar	_b @ sp[(-13)+-4]
 21964  01264E  0EF1               	movlw	241
 21965  012650  24E1               	addwf	fsr1l,w,c
 21966  012652  6ED9               	movwf	fsr2l,c
 21967  012654  0EFF               	movlw	255
 21968  012656  20E2               	addwfc	fsr1h,w,c
 21969  012658  6EDA               	movwf	fsr2h,c
 21970  01265A  AEDF               	btfss	indf2,7,c
 21971  01265C  D002               	goto	l7024
 21972                           
 21973                           ;stkvar	_bexp @ sp[(-13)+10]
 21974  01265E  0EFD               	movlw	-3
 21975  012660  80E3               	bsf	plusw1,0,c
 21976  012662                     l7024:
 21977                           
 21978                           ;stkvar	_bexp @ sp[(-13)+10]
 21979  012662  0EFD               	movlw	-3
 21980  012664  50E3               	movf	plusw1,w,c
 21981  012666  B4D8               	btfsc	status,2,c
 21982  012668  D01F               	goto	l7032
 21983                           
 21984                           ;stkvar	_bexp @ sp[(-13)+10]
 21985  01266A  0EFD               	movlw	-3
 21986  01266C  28E3               	incf	plusw1,w,c
 21987  01266E  A4D8               	btfss	status,2,c
 21988  012670  D018               	goto	l7030
 21989  012672  0E00               	movlw	0
 21990  012674  6E3A               	movwf	(btemp+8)^0,c
 21991  012676  0E00               	movlw	0
 21992  012678  6E3B               	movwf	(btemp+9)^0,c
 21993  01267A  0E00               	movlw	0
 21994  01267C  6E3C               	movwf	(btemp+10)^0,c
 21995  01267E  0E00               	movlw	0
 21996  012680  6E3D               	movwf	(btemp+11)^0,c
 21997                           
 21998                           ;stkvar	_b @ sp[(-13)+-4]
 21999  012682  0EEF               	movlw	-17
 22000  012684  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22001  01268A  0EF0               	movlw	-16
 22002  01268C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22003  012692  0EF1               	movlw	-15
 22004  012694  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22005  01269A  0EF2               	movlw	-14
 22006  01269C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22007  0126A2                     l7030:
 22008                           
 22009                           ;stkvar	_b @ sp[(-13)+-4]
 22010  0126A2  0EF1               	movlw	-15
 22011  0126A4  8EE3               	bsf	plusw1,7,c
 22012  0126A6  D018               	goto	l7034
 22013  0126A8                     l7032:
 22014  0126A8  0E00               	movlw	0
 22015  0126AA  6E3A               	movwf	(btemp+8)^0,c
 22016  0126AC  0E00               	movlw	0
 22017  0126AE  6E3B               	movwf	(btemp+9)^0,c
 22018  0126B0  0E00               	movlw	0
 22019  0126B2  6E3C               	movwf	(btemp+10)^0,c
 22020  0126B4  0E00               	movlw	0
 22021  0126B6  6E3D               	movwf	(btemp+11)^0,c
 22022                           
 22023                           ;stkvar	_b @ sp[(-13)+-4]
 22024  0126B8  0EEF               	movlw	-17
 22025  0126BA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22026  0126C0  0EF0               	movlw	-16
 22027  0126C2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22028  0126C8  0EF1               	movlw	-15
 22029  0126CA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22030  0126D0  0EF2               	movlw	-14
 22031  0126D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22032  0126D8                     l7034:
 22033                           
 22034                           ;stkvar	_a @ sp[(-13)+-8]
 22035  0126D8  0EEE               	movlw	238
 22036  0126DA  24E1               	addwf	fsr1l,w,c
 22037  0126DC  6ED9               	movwf	fsr2l,c
 22038  0126DE  0EFF               	movlw	255
 22039  0126E0  20E2               	addwfc	fsr1h,w,c
 22040  0126E2  6EDA               	movwf	fsr2h,c
 22041  0126E4  50DF               	movf	indf2,w,c
 22042  0126E6  6E3D               	movwf	(btemp+11)^0,c
 22043  0126E8  0E80               	movlw	128
 22044  0126EA  163D               	andwf	(btemp+11)^0,f,c
 22045                           
 22046                           ;stkvar	_sign @ sp[(-13)+12]
 22047  0126EC  50E1               	movf	fsr1l,w,c
 22048  0126EE  0FFF               	addlw	-1
 22049  0126F0  6ED9               	movwf	fsr2l,c
 22050  0126F2  50E2               	movf	fsr1h,w,c
 22051  0126F4  6EDA               	movwf	fsr2h,c
 22052  0126F6  0EFF               	movlw	255
 22053  0126F8  22DA               	addwfc	fsr2h,f,c
 22054  0126FA  503D               	movf	(btemp+11)^0,w,c
 22055  0126FC  1ADF               	xorwf	indf2,f,c
 22056                           
 22057                           ;stkvar	_a @ sp[(-13)+-8]
 22058  0126FE  0EEE               	movlw	238
 22059  012700  24E1               	addwf	fsr1l,w,c
 22060  012702  6ED9               	movwf	fsr2l,c
 22061  012704  0EFF               	movlw	255
 22062  012706  20E2               	addwfc	fsr1h,w,c
 22063  012708  6EDA               	movwf	fsr2h,c
 22064  01270A  50DF               	movf	indf2,w,c
 22065  01270C  6E3D               	movwf	(btemp+11)^0,c
 22066  01270E  90D8               	bcf	status,0,c
 22067  012710  343D               	rlcf	(btemp+11)^0,w,c
 22068  012712  6E3C               	movwf	(btemp+10)^0,c
 22069                           
 22070                           ;stkvar	_aexp @ sp[(-13)+11]
 22071  012714  0EFE               	movlw	-2
 22072  012716  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22073                           
 22074                           ;stkvar	_a @ sp[(-13)+-8]
 22075  01271C  0EED               	movlw	237
 22076  01271E  24E1               	addwf	fsr1l,w,c
 22077  012720  6ED9               	movwf	fsr2l,c
 22078  012722  0EFF               	movlw	255
 22079  012724  20E2               	addwfc	fsr1h,w,c
 22080  012726  6EDA               	movwf	fsr2h,c
 22081  012728  AEDF               	btfss	indf2,7,c
 22082  01272A  D002               	goto	l7042
 22083                           
 22084                           ;stkvar	_aexp @ sp[(-13)+11]
 22085  01272C  0EFE               	movlw	-2
 22086  01272E  80E3               	bsf	plusw1,0,c
 22087  012730                     l7042:
 22088                           
 22089                           ;stkvar	_aexp @ sp[(-13)+11]
 22090  012730  0EFE               	movlw	-2
 22091  012732  50E3               	movf	plusw1,w,c
 22092  012734  B4D8               	btfsc	status,2,c
 22093  012736  D01F               	goto	l7050
 22094                           
 22095                           ;stkvar	_aexp @ sp[(-13)+11]
 22096  012738  0EFE               	movlw	-2
 22097  01273A  28E3               	incf	plusw1,w,c
 22098  01273C  A4D8               	btfss	status,2,c
 22099  01273E  D018               	goto	l7048
 22100  012740  0E00               	movlw	0
 22101  012742  6E3A               	movwf	(btemp+8)^0,c
 22102  012744  0E00               	movlw	0
 22103  012746  6E3B               	movwf	(btemp+9)^0,c
 22104  012748  0E00               	movlw	0
 22105  01274A  6E3C               	movwf	(btemp+10)^0,c
 22106  01274C  0E00               	movlw	0
 22107  01274E  6E3D               	movwf	(btemp+11)^0,c
 22108                           
 22109                           ;stkvar	_a @ sp[(-13)+-8]
 22110  012750  0EEB               	movlw	-21
 22111  012752  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22112  012758  0EEC               	movlw	-20
 22113  01275A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22114  012760  0EED               	movlw	-19
 22115  012762  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22116  012768  0EEE               	movlw	-18
 22117  01276A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22118  012770                     l7048:
 22119                           
 22120                           ;stkvar	_a @ sp[(-13)+-8]
 22121  012770  0EED               	movlw	-19
 22122  012772  8EE3               	bsf	plusw1,7,c
 22123  012774  D018               	goto	l7052
 22124  012776                     l7050:
 22125  012776  0E00               	movlw	0
 22126  012778  6E3A               	movwf	(btemp+8)^0,c
 22127  01277A  0E00               	movlw	0
 22128  01277C  6E3B               	movwf	(btemp+9)^0,c
 22129  01277E  0E00               	movlw	0
 22130  012780  6E3C               	movwf	(btemp+10)^0,c
 22131  012782  0E00               	movlw	0
 22132  012784  6E3D               	movwf	(btemp+11)^0,c
 22133                           
 22134                           ;stkvar	_a @ sp[(-13)+-8]
 22135  012786  0EEB               	movlw	-21
 22136  012788  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22137  01278E  0EEC               	movlw	-20
 22138  012790  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22139  012796  0EED               	movlw	-19
 22140  012798  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22141  01279E  0EEE               	movlw	-18
 22142  0127A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22143  0127A6                     l7052:
 22144                           
 22145                           ;stkvar	_aexp @ sp[(-13)+11]
 22146  0127A6  0EFE               	movlw	-2
 22147  0127A8  50E3               	movf	plusw1,w,c
 22148  0127AA  B4D8               	btfsc	status,2,c
 22149  0127AC  D004               	goto	u5980
 22150                           
 22151                           ;stkvar	_bexp @ sp[(-13)+10]
 22152  0127AE  0EFD               	movlw	-3
 22153  0127B0  50E3               	movf	plusw1,w,c
 22154  0127B2  A4D8               	btfss	status,2,c
 22155  0127B4  D009               	goto	l7060
 22156  0127B6                     u5980:
 22157  0127B6  0E00               	movlw	0
 22158  0127B8  6E32               	movwf	btemp^0,c
 22159  0127BA  0E00               	movlw	0
 22160  0127BC  6E33               	movwf	(btemp+1)^0,c
 22161  0127BE  0E00               	movlw	0
 22162  0127C0  6E34               	movwf	(btemp+2)^0,c
 22163  0127C2  0E00               	movlw	0
 22164  0127C4  6E35               	movwf	(btemp+3)^0,c
 22165  0127C6  D332               	goto	l2729
 22166  0127C8                     l7060:
 22167                           
 22168                           ;stkvar	_b @ sp[(-13)+-4]
 22169  0127C8  0EEF               	movlw	-17
 22170  0127CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 22171                           
 22172                           ;stkvar	_a @ sp[(-13)+-8]
 22173  0127D0  0EED               	movlw	237
 22174  0127D2  24E1               	addwf	fsr1l,w,c
 22175  0127D4  6ED9               	movwf	fsr2l,c
 22176  0127D6  0EFF               	movlw	255
 22177  0127D8  20E2               	addwfc	fsr1h,w,c
 22178  0127DA  6EDA               	movwf	fsr2h,c
 22179  0127DC  50DF               	movf	indf2,w,c
 22180  0127DE  023D               	mulwf	(btemp+11)^0,c
 22181                           
 22182                           ;stkvar	_temp @ sp[(-13)+8]
 22183  0127E0  0EFB               	movlw	-5
 22184  0127E2  006F FFCF FFE3     	movff	prodl,plusw1
 22185  0127E8  0EFC               	movlw	-4
 22186  0127EA  006F FFD3 FFE3     	movff	prodh,plusw1
 22187                           
 22188                           ;stkvar	_temp @ sp[(-13)+8]
 22189  0127F0  0EFB               	movlw	-5
 22190  0127F2  006F FF8C  F03D    	movff	plusw1,btemp+11
 22191  0127F8  0060  F0F4  F036   	movff	btemp+11,btemp+4
 22192  0127FE  6A37               	clrf	(btemp+5)^0,c
 22193  012800  6A38               	clrf	(btemp+6)^0,c
 22194  012802  6A39               	clrf	(btemp+7)^0,c
 22195                           
 22196                           ;stkvar	_grs @ sp[(-13)+4]
 22197  012804  0EF7               	movlw	-9
 22198  012806  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 22199  01280C  0EF8               	movlw	-8
 22200  01280E  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 22201  012814  0EF9               	movlw	-7
 22202  012816  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 22203  01281C  0EFA               	movlw	-6
 22204  01281E  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 22205                           
 22206                           ;stkvar	_temp @ sp[(-13)+8]
 22207  012824  0EFC               	movlw	252
 22208  012826  24E1               	addwf	fsr1l,w,c
 22209  012828  6ED9               	movwf	fsr2l,c
 22210  01282A  0EFF               	movlw	255
 22211  01282C  20E2               	addwfc	fsr1h,w,c
 22212  01282E  6EDA               	movwf	fsr2h,c
 22213  012830  50DF               	movf	indf2,w,c
 22214  012832  6E3D               	movwf	(btemp+11)^0,c
 22215  012834  0060  F0F4  F036   	movff	btemp+11,btemp+4
 22216  01283A  6A37               	clrf	(btemp+5)^0,c
 22217  01283C  6A38               	clrf	(btemp+6)^0,c
 22218  01283E  6A39               	clrf	(btemp+7)^0,c
 22219                           
 22220                           ;stkvar	_prod @ sp[(-13)+0]
 22221  012840  0EF3               	movlw	-13
 22222  012842  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 22223  012848  0EF4               	movlw	-12
 22224  01284A  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 22225  012850  0EF5               	movlw	-11
 22226  012852  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 22227  012858  0EF6               	movlw	-10
 22228  01285A  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 22229                           
 22230                           ;stkvar	_b @ sp[(-13)+-4]
 22231  012860  0EF0               	movlw	240
 22232  012862  24E1               	addwf	fsr1l,w,c
 22233  012864  6ED9               	movwf	fsr2l,c
 22234  012866  0EFF               	movlw	255
 22235  012868  20E2               	addwfc	fsr1h,w,c
 22236  01286A  6EDA               	movwf	fsr2h,c
 22237  01286C  50DF               	movf	indf2,w,c
 22238  01286E  6E3D               	movwf	(btemp+11)^0,c
 22239                           
 22240                           ;stkvar	_a @ sp[(-13)+-8]
 22241  012870  0EEC               	movlw	236
 22242  012872  24E1               	addwf	fsr1l,w,c
 22243  012874  6ED9               	movwf	fsr2l,c
 22244  012876  0EFF               	movlw	255
 22245  012878  20E2               	addwfc	fsr1h,w,c
 22246  01287A  6EDA               	movwf	fsr2h,c
 22247  01287C  50DF               	movf	indf2,w,c
 22248  01287E  023D               	mulwf	(btemp+11)^0,c
 22249                           
 22250                           ;stkvar	_temp @ sp[(-13)+8]
 22251  012880  0EFB               	movlw	-5
 22252  012882  006F FFCF FFE3     	movff	prodl,plusw1
 22253  012888  0EFC               	movlw	-4
 22254  01288A  006F FFD3 FFE3     	movff	prodh,plusw1
 22255                           
 22256                           ;stkvar	_grs @ sp[(-13)+4]
 22257  012890  50E1               	movf	fsr1l,w,c
 22258  012892  0FF7               	addlw	-9
 22259  012894  6ED9               	movwf	fsr2l,c
 22260  012896  50E2               	movf	fsr1h,w,c
 22261  012898  6EDA               	movwf	fsr2h,c
 22262  01289A  0EFF               	movlw	255
 22263  01289C  22DA               	addwfc	fsr2h,f,c
 22264                           
 22265                           ;stkvar	_temp @ sp[(-13)+8]
 22266  01289E  0EFB               	movlw	-5
 22267  0128A0  50E3               	movf	plusw1,w,c
 22268  0128A2  26DE               	addwf	postinc2,f,c
 22269  0128A4  0E00               	movlw	0
 22270  0128A6  22DE               	addwfc	postinc2,f,c
 22271  0128A8  22DE               	addwfc	postinc2,f,c
 22272  0128AA  22DE               	addwfc	postinc2,f,c
 22273                           
 22274                           ;stkvar	_prod @ sp[(-13)+0]
 22275  0128AC  50E1               	movf	fsr1l,w,c
 22276  0128AE  0FF3               	addlw	-13
 22277  0128B0  6ED9               	movwf	fsr2l,c
 22278  0128B2  50E2               	movf	fsr1h,w,c
 22279  0128B4  6EDA               	movwf	fsr2h,c
 22280  0128B6  0EFF               	movlw	255
 22281  0128B8  22DA               	addwfc	fsr2h,f,c
 22282                           
 22283                           ;stkvar	_temp @ sp[(-13)+8]
 22284  0128BA  0EFC               	movlw	252
 22285  0128BC  24E1               	addwf	fsr1l,w,c
 22286  0128BE  6EE9               	movwf	fsr0l,c
 22287  0128C0  0EFF               	movlw	255
 22288  0128C2  20E2               	addwfc	fsr1h,w,c
 22289  0128C4  6EEA               	movwf	fsr0h,c
 22290  0128C6  50EF               	movf	indf0,w,c
 22291  0128C8  26DE               	addwf	postinc2,f,c
 22292  0128CA  0E00               	movlw	0
 22293  0128CC  22DE               	addwfc	postinc2,f,c
 22294  0128CE  22DE               	addwfc	postinc2,f,c
 22295  0128D0  22DE               	addwfc	postinc2,f,c
 22296                           
 22297                           ;stkvar	_b @ sp[(-13)+-4]
 22298  0128D2  0EF1               	movlw	241
 22299  0128D4  24E1               	addwf	fsr1l,w,c
 22300  0128D6  6ED9               	movwf	fsr2l,c
 22301  0128D8  0EFF               	movlw	255
 22302  0128DA  20E2               	addwfc	fsr1h,w,c
 22303  0128DC  6EDA               	movwf	fsr2h,c
 22304  0128DE  50DF               	movf	indf2,w,c
 22305  0128E0  6E3D               	movwf	(btemp+11)^0,c
 22306                           
 22307                           ;stkvar	_a @ sp[(-13)+-8]
 22308  0128E2  0EEB               	movlw	-21
 22309  0128E4  50E3               	movf	plusw1,w,c
 22310  0128E6  023D               	mulwf	(btemp+11)^0,c
 22311                           
 22312                           ;stkvar	_temp @ sp[(-13)+8]
 22313  0128E8  0EFB               	movlw	-5
 22314  0128EA  006F FFCF FFE3     	movff	prodl,plusw1
 22315  0128F0  0EFC               	movlw	-4
 22316  0128F2  006F FFD3 FFE3     	movff	prodh,plusw1
 22317                           
 22318                           ;stkvar	_grs @ sp[(-13)+4]
 22319  0128F8  50E1               	movf	fsr1l,w,c
 22320  0128FA  0FF7               	addlw	-9
 22321  0128FC  6ED9               	movwf	fsr2l,c
 22322  0128FE  50E2               	movf	fsr1h,w,c
 22323  012900  6EDA               	movwf	fsr2h,c
 22324  012902  0EFF               	movlw	255
 22325  012904  22DA               	addwfc	fsr2h,f,c
 22326                           
 22327                           ;stkvar	_temp @ sp[(-13)+8]
 22328  012906  0EFB               	movlw	-5
 22329  012908  50E3               	movf	plusw1,w,c
 22330  01290A  26DE               	addwf	postinc2,f,c
 22331  01290C  0E00               	movlw	0
 22332  01290E  22DE               	addwfc	postinc2,f,c
 22333  012910  22DE               	addwfc	postinc2,f,c
 22334  012912  22DE               	addwfc	postinc2,f,c
 22335                           
 22336                           ;stkvar	_prod @ sp[(-13)+0]
 22337  012914  50E1               	movf	fsr1l,w,c
 22338  012916  0FF3               	addlw	-13
 22339  012918  6ED9               	movwf	fsr2l,c
 22340  01291A  50E2               	movf	fsr1h,w,c
 22341  01291C  6EDA               	movwf	fsr2h,c
 22342  01291E  0EFF               	movlw	255
 22343  012920  22DA               	addwfc	fsr2h,f,c
 22344                           
 22345                           ;stkvar	_temp @ sp[(-13)+8]
 22346  012922  0EFC               	movlw	252
 22347  012924  24E1               	addwf	fsr1l,w,c
 22348  012926  6EE9               	movwf	fsr0l,c
 22349  012928  0EFF               	movlw	255
 22350  01292A  20E2               	addwfc	fsr1h,w,c
 22351  01292C  6EEA               	movwf	fsr0h,c
 22352  01292E  50EF               	movf	indf0,w,c
 22353  012930  26DE               	addwf	postinc2,f,c
 22354  012932  0E00               	movlw	0
 22355  012934  22DE               	addwfc	postinc2,f,c
 22356  012936  22DE               	addwfc	postinc2,f,c
 22357  012938  22DE               	addwfc	postinc2,f,c
 22358                           
 22359                           ;stkvar	_grs @ sp[(-13)+4]
 22360  01293A  50E1               	movf	fsr1l,w,c
 22361  01293C  0FF7               	addlw	-9
 22362  01293E  6ED9               	movwf	fsr2l,c
 22363  012940  50E2               	movf	fsr1h,w,c
 22364  012942  6EDA               	movwf	fsr2h,c
 22365  012944  0EFF               	movlw	255
 22366  012946  22DA               	addwfc	fsr2h,f,c
 22367  012948  0E08               	movlw	8
 22368  01294A                     u5995:
 22369  01294A  90D8               	bcf	status,0,c
 22370  01294C  36DE               	rlcf	postinc2,f,c
 22371  01294E  36DE               	rlcf	postinc2,f,c
 22372  012950  36DE               	rlcf	postinc2,f,c
 22373  012952  36DD               	rlcf	postdec2,f,c
 22374  012954  52DD               	movf	postdec2,f,c
 22375  012956  52DD               	movf	postdec2,f,c
 22376  012958  2EE8               	decfsz	wreg,f,c
 22377  01295A  D7F7               	goto	u5995
 22378                           
 22379                           ;stkvar	_b @ sp[(-13)+-4]
 22380  01295C  0EF0               	movlw	240
 22381  01295E  24E1               	addwf	fsr1l,w,c
 22382  012960  6ED9               	movwf	fsr2l,c
 22383  012962  0EFF               	movlw	255
 22384  012964  20E2               	addwfc	fsr1h,w,c
 22385  012966  6EDA               	movwf	fsr2h,c
 22386  012968  50DF               	movf	indf2,w,c
 22387  01296A  6E3D               	movwf	(btemp+11)^0,c
 22388                           
 22389                           ;stkvar	_a @ sp[(-13)+-8]
 22390  01296C  0EEB               	movlw	-21
 22391  01296E  50E3               	movf	plusw1,w,c
 22392  012970  023D               	mulwf	(btemp+11)^0,c
 22393                           
 22394                           ;stkvar	_temp @ sp[(-13)+8]
 22395  012972  0EFB               	movlw	-5
 22396  012974  006F FFCF FFE3     	movff	prodl,plusw1
 22397  01297A  0EFC               	movlw	-4
 22398  01297C  006F FFD3 FFE3     	movff	prodh,plusw1
 22399                           
 22400                           ;stkvar	_temp @ sp[(-13)+8]
 22401  012982  0EFB               	movlw	-5
 22402  012984  006F FF8C  F03C    	movff	plusw1,btemp+10
 22403  01298A  0EFC               	movlw	-4
 22404  01298C  006F FF8C  F03D    	movff	plusw1,btemp+11
 22405                           
 22406                           ;stkvar	_grs @ sp[(-13)+4]
 22407  012992  50E1               	movf	fsr1l,w,c
 22408  012994  0FF7               	addlw	-9
 22409  012996  6ED9               	movwf	fsr2l,c
 22410  012998  50E2               	movf	fsr1h,w,c
 22411  01299A  6EDA               	movwf	fsr2h,c
 22412  01299C  0EFF               	movlw	255
 22413  01299E  22DA               	addwfc	fsr2h,f,c
 22414  0129A0  503C               	movf	(btemp+10)^0,w,c
 22415  0129A2  26DE               	addwf	postinc2,f,c
 22416  0129A4  503D               	movf	(btemp+11)^0,w,c
 22417  0129A6  22DE               	addwfc	postinc2,f,c
 22418  0129A8  0E00               	movlw	0
 22419  0129AA  22DE               	addwfc	postinc2,f,c
 22420  0129AC  22DE               	addwfc	postinc2,f,c
 22421                           
 22422                           ;stkvar	_b @ sp[(-13)+-4]
 22423  0129AE  0EEF               	movlw	-17
 22424  0129B0  006F FF8C  F03D    	movff	plusw1,btemp+11
 22425                           
 22426                           ;stkvar	_a @ sp[(-13)+-8]
 22427  0129B6  0EEC               	movlw	236
 22428  0129B8  24E1               	addwf	fsr1l,w,c
 22429  0129BA  6ED9               	movwf	fsr2l,c
 22430  0129BC  0EFF               	movlw	255
 22431  0129BE  20E2               	addwfc	fsr1h,w,c
 22432  0129C0  6EDA               	movwf	fsr2h,c
 22433  0129C2  50DF               	movf	indf2,w,c
 22434  0129C4  023D               	mulwf	(btemp+11)^0,c
 22435                           
 22436                           ;stkvar	_temp @ sp[(-13)+8]
 22437  0129C6  0EFB               	movlw	-5
 22438  0129C8  006F FFCF FFE3     	movff	prodl,plusw1
 22439  0129CE  0EFC               	movlw	-4
 22440  0129D0  006F FFD3 FFE3     	movff	prodh,plusw1
 22441                           
 22442                           ;stkvar	_temp @ sp[(-13)+8]
 22443  0129D6  0EFB               	movlw	-5
 22444  0129D8  006F FF8C  F03C    	movff	plusw1,btemp+10
 22445  0129DE  0EFC               	movlw	-4
 22446  0129E0  006F FF8C  F03D    	movff	plusw1,btemp+11
 22447                           
 22448                           ;stkvar	_grs @ sp[(-13)+4]
 22449  0129E6  50E1               	movf	fsr1l,w,c
 22450  0129E8  0FF7               	addlw	-9
 22451  0129EA  6ED9               	movwf	fsr2l,c
 22452  0129EC  50E2               	movf	fsr1h,w,c
 22453  0129EE  6EDA               	movwf	fsr2h,c
 22454  0129F0  0EFF               	movlw	255
 22455  0129F2  22DA               	addwfc	fsr2h,f,c
 22456  0129F4  503C               	movf	(btemp+10)^0,w,c
 22457  0129F6  26DE               	addwf	postinc2,f,c
 22458  0129F8  503D               	movf	(btemp+11)^0,w,c
 22459  0129FA  22DE               	addwfc	postinc2,f,c
 22460  0129FC  0E00               	movlw	0
 22461  0129FE  22DE               	addwfc	postinc2,f,c
 22462  012A00  22DE               	addwfc	postinc2,f,c
 22463                           
 22464                           ;stkvar	_grs @ sp[(-13)+4]
 22465  012A02  50E1               	movf	fsr1l,w,c
 22466  012A04  0FF7               	addlw	-9
 22467  012A06  6ED9               	movwf	fsr2l,c
 22468  012A08  50E2               	movf	fsr1h,w,c
 22469  012A0A  6EDA               	movwf	fsr2h,c
 22470  012A0C  0EFF               	movlw	255
 22471  012A0E  22DA               	addwfc	fsr2h,f,c
 22472  012A10  0E08               	movlw	8
 22473  012A12                     u6005:
 22474  012A12  90D8               	bcf	status,0,c
 22475  012A14  36DE               	rlcf	postinc2,f,c
 22476  012A16  36DE               	rlcf	postinc2,f,c
 22477  012A18  36DE               	rlcf	postinc2,f,c
 22478  012A1A  36DD               	rlcf	postdec2,f,c
 22479  012A1C  52DD               	movf	postdec2,f,c
 22480  012A1E  52DD               	movf	postdec2,f,c
 22481  012A20  2EE8               	decfsz	wreg,f,c
 22482  012A22  D7F7               	goto	u6005
 22483                           
 22484                           ;stkvar	_b @ sp[(-13)+-4]
 22485  012A24  0EEF               	movlw	-17
 22486  012A26  006F FF8C  F03D    	movff	plusw1,btemp+11
 22487                           
 22488                           ;stkvar	_a @ sp[(-13)+-8]
 22489  012A2C  0EEB               	movlw	-21
 22490  012A2E  50E3               	movf	plusw1,w,c
 22491  012A30  023D               	mulwf	(btemp+11)^0,c
 22492                           
 22493                           ;stkvar	_temp @ sp[(-13)+8]
 22494  012A32  0EFB               	movlw	-5
 22495  012A34  006F FFCF FFE3     	movff	prodl,plusw1
 22496  012A3A  0EFC               	movlw	-4
 22497  012A3C  006F FFD3 FFE3     	movff	prodh,plusw1
 22498                           
 22499                           ;stkvar	_temp @ sp[(-13)+8]
 22500  012A42  0EFB               	movlw	-5
 22501  012A44  006F FF8C  F03C    	movff	plusw1,btemp+10
 22502  012A4A  0EFC               	movlw	-4
 22503  012A4C  006F FF8C  F03D    	movff	plusw1,btemp+11
 22504                           
 22505                           ;stkvar	_grs @ sp[(-13)+4]
 22506  012A52  50E1               	movf	fsr1l,w,c
 22507  012A54  0FF7               	addlw	-9
 22508  012A56  6ED9               	movwf	fsr2l,c
 22509  012A58  50E2               	movf	fsr1h,w,c
 22510  012A5A  6EDA               	movwf	fsr2h,c
 22511  012A5C  0EFF               	movlw	255
 22512  012A5E  22DA               	addwfc	fsr2h,f,c
 22513  012A60  503C               	movf	(btemp+10)^0,w,c
 22514  012A62  26DE               	addwf	postinc2,f,c
 22515  012A64  503D               	movf	(btemp+11)^0,w,c
 22516  012A66  22DE               	addwfc	postinc2,f,c
 22517  012A68  0E00               	movlw	0
 22518  012A6A  22DE               	addwfc	postinc2,f,c
 22519  012A6C  22DE               	addwfc	postinc2,f,c
 22520                           
 22521                           ;stkvar	_b @ sp[(-13)+-4]
 22522  012A6E  0EF0               	movlw	240
 22523  012A70  24E1               	addwf	fsr1l,w,c
 22524  012A72  6ED9               	movwf	fsr2l,c
 22525  012A74  0EFF               	movlw	255
 22526  012A76  20E2               	addwfc	fsr1h,w,c
 22527  012A78  6EDA               	movwf	fsr2h,c
 22528  012A7A  50DF               	movf	indf2,w,c
 22529  012A7C  6E3D               	movwf	(btemp+11)^0,c
 22530                           
 22531                           ;stkvar	_a @ sp[(-13)+-8]
 22532  012A7E  0EED               	movlw	237
 22533  012A80  24E1               	addwf	fsr1l,w,c
 22534  012A82  6ED9               	movwf	fsr2l,c
 22535  012A84  0EFF               	movlw	255
 22536  012A86  20E2               	addwfc	fsr1h,w,c
 22537  012A88  6EDA               	movwf	fsr2h,c
 22538  012A8A  50DF               	movf	indf2,w,c
 22539  012A8C  023D               	mulwf	(btemp+11)^0,c
 22540                           
 22541                           ;stkvar	_temp @ sp[(-13)+8]
 22542  012A8E  0EFB               	movlw	-5
 22543  012A90  006F FFCF FFE3     	movff	prodl,plusw1
 22544  012A96  0EFC               	movlw	-4
 22545  012A98  006F FFD3 FFE3     	movff	prodh,plusw1
 22546                           
 22547                           ;stkvar	_temp @ sp[(-13)+8]
 22548  012A9E  0EFB               	movlw	-5
 22549  012AA0  006F FF8C  F03C    	movff	plusw1,btemp+10
 22550  012AA6  0EFC               	movlw	-4
 22551  012AA8  006F FF8C  F03D    	movff	plusw1,btemp+11
 22552                           
 22553                           ;stkvar	_prod @ sp[(-13)+0]
 22554  012AAE  50E1               	movf	fsr1l,w,c
 22555  012AB0  0FF3               	addlw	-13
 22556  012AB2  6ED9               	movwf	fsr2l,c
 22557  012AB4  50E2               	movf	fsr1h,w,c
 22558  012AB6  6EDA               	movwf	fsr2h,c
 22559  012AB8  0EFF               	movlw	255
 22560  012ABA  22DA               	addwfc	fsr2h,f,c
 22561  012ABC  503C               	movf	(btemp+10)^0,w,c
 22562  012ABE  26DE               	addwf	postinc2,f,c
 22563  012AC0  503D               	movf	(btemp+11)^0,w,c
 22564  012AC2  22DE               	addwfc	postinc2,f,c
 22565  012AC4  0E00               	movlw	0
 22566  012AC6  22DE               	addwfc	postinc2,f,c
 22567  012AC8  22DE               	addwfc	postinc2,f,c
 22568                           
 22569                           ;stkvar	_b @ sp[(-13)+-4]
 22570  012ACA  0EF1               	movlw	241
 22571  012ACC  24E1               	addwf	fsr1l,w,c
 22572  012ACE  6ED9               	movwf	fsr2l,c
 22573  012AD0  0EFF               	movlw	255
 22574  012AD2  20E2               	addwfc	fsr1h,w,c
 22575  012AD4  6EDA               	movwf	fsr2h,c
 22576  012AD6  50DF               	movf	indf2,w,c
 22577  012AD8  6E3D               	movwf	(btemp+11)^0,c
 22578                           
 22579                           ;stkvar	_a @ sp[(-13)+-8]
 22580  012ADA  0EEC               	movlw	236
 22581  012ADC  24E1               	addwf	fsr1l,w,c
 22582  012ADE  6ED9               	movwf	fsr2l,c
 22583  012AE0  0EFF               	movlw	255
 22584  012AE2  20E2               	addwfc	fsr1h,w,c
 22585  012AE4  6EDA               	movwf	fsr2h,c
 22586  012AE6  50DF               	movf	indf2,w,c
 22587  012AE8  023D               	mulwf	(btemp+11)^0,c
 22588                           
 22589                           ;stkvar	_temp @ sp[(-13)+8]
 22590  012AEA  0EFB               	movlw	-5
 22591  012AEC  006F FFCF FFE3     	movff	prodl,plusw1
 22592  012AF2  0EFC               	movlw	-4
 22593  012AF4  006F FFD3 FFE3     	movff	prodh,plusw1
 22594                           
 22595                           ;stkvar	_temp @ sp[(-13)+8]
 22596  012AFA  0EFB               	movlw	-5
 22597  012AFC  006F FF8C  F03C    	movff	plusw1,btemp+10
 22598  012B02  0EFC               	movlw	-4
 22599  012B04  006F FF8C  F03D    	movff	plusw1,btemp+11
 22600                           
 22601                           ;stkvar	_prod @ sp[(-13)+0]
 22602  012B0A  50E1               	movf	fsr1l,w,c
 22603  012B0C  0FF3               	addlw	-13
 22604  012B0E  6ED9               	movwf	fsr2l,c
 22605  012B10  50E2               	movf	fsr1h,w,c
 22606  012B12  6EDA               	movwf	fsr2h,c
 22607  012B14  0EFF               	movlw	255
 22608  012B16  22DA               	addwfc	fsr2h,f,c
 22609  012B18  503C               	movf	(btemp+10)^0,w,c
 22610  012B1A  26DE               	addwf	postinc2,f,c
 22611  012B1C  503D               	movf	(btemp+11)^0,w,c
 22612  012B1E  22DE               	addwfc	postinc2,f,c
 22613  012B20  0E00               	movlw	0
 22614  012B22  22DE               	addwfc	postinc2,f,c
 22615  012B24  22DE               	addwfc	postinc2,f,c
 22616                           
 22617                           ;stkvar	_b @ sp[(-13)+-4]
 22618  012B26  0EF1               	movlw	241
 22619  012B28  24E1               	addwf	fsr1l,w,c
 22620  012B2A  6ED9               	movwf	fsr2l,c
 22621  012B2C  0EFF               	movlw	255
 22622  012B2E  20E2               	addwfc	fsr1h,w,c
 22623  012B30  6EDA               	movwf	fsr2h,c
 22624  012B32  50DF               	movf	indf2,w,c
 22625  012B34  6E3D               	movwf	(btemp+11)^0,c
 22626                           
 22627                           ;stkvar	_a @ sp[(-13)+-8]
 22628  012B36  0EED               	movlw	237
 22629  012B38  24E1               	addwf	fsr1l,w,c
 22630  012B3A  6ED9               	movwf	fsr2l,c
 22631  012B3C  0EFF               	movlw	255
 22632  012B3E  20E2               	addwfc	fsr1h,w,c
 22633  012B40  6EDA               	movwf	fsr2h,c
 22634  012B42  50DF               	movf	indf2,w,c
 22635  012B44  023D               	mulwf	(btemp+11)^0,c
 22636                           
 22637                           ;stkvar	_temp @ sp[(-13)+8]
 22638  012B46  0EFB               	movlw	-5
 22639  012B48  006F FFCF FFE3     	movff	prodl,plusw1
 22640  012B4E  0EFC               	movlw	-4
 22641  012B50  006F FFD3 FFE3     	movff	prodh,plusw1
 22642                           
 22643                           ;stkvar	_temp @ sp[(-13)+8]
 22644  012B56  0EFB               	movlw	-5
 22645  012B58  006F FF8C  F03C    	movff	plusw1,btemp+10
 22646  012B5E  0EFC               	movlw	-4
 22647  012B60  006F FF8C  F03D    	movff	plusw1,btemp+11
 22648  012B66  503C               	movf	(btemp+10)^0,w,c
 22649  012B68  6E36               	movwf	(btemp+4)^0,c
 22650  012B6A  503D               	movf	(btemp+11)^0,w,c
 22651  012B6C  6E37               	movwf	(btemp+5)^0,c
 22652  012B6E  6A38               	clrf	(btemp+6)^0,c
 22653  012B70  6A39               	clrf	(btemp+7)^0,c
 22654  012B72  0060  F0E0  F039   	movff	btemp+6,btemp+7
 22655  012B78  0060  F0DC  F038   	movff	btemp+5,btemp+6
 22656  012B7E  0060  F0D8  F037   	movff	btemp+4,btemp+5
 22657  012B84  6A36               	clrf	(btemp+4)^0,c
 22658                           
 22659                           ;stkvar	_prod @ sp[(-13)+0]
 22660  012B86  50E1               	movf	fsr1l,w,c
 22661  012B88  0FF3               	addlw	-13
 22662  012B8A  6ED9               	movwf	fsr2l,c
 22663  012B8C  50E2               	movf	fsr1h,w,c
 22664  012B8E  6EDA               	movwf	fsr2h,c
 22665  012B90  0EFF               	movlw	255
 22666  012B92  22DA               	addwfc	fsr2h,f,c
 22667  012B94  5036               	movf	(btemp+4)^0,w,c
 22668  012B96  26DE               	addwf	postinc2,f,c
 22669  012B98  5037               	movf	(btemp+5)^0,w,c
 22670  012B9A  22DE               	addwfc	postinc2,f,c
 22671  012B9C  5038               	movf	(btemp+6)^0,w,c
 22672  012B9E  22DE               	addwfc	postinc2,f,c
 22673  012BA0  5039               	movf	(btemp+7)^0,w,c
 22674  012BA2  22DE               	addwfc	postinc2,f,c
 22675                           
 22676                           ;stkvar	_prod @ sp[(-13)+0]
 22677  012BA4  50E1               	movf	fsr1l,w,c
 22678  012BA6  0FF3               	addlw	-13
 22679  012BA8  6ED9               	movwf	fsr2l,c
 22680  012BAA  50E2               	movf	fsr1h,w,c
 22681  012BAC  6EDA               	movwf	fsr2h,c
 22682  012BAE  0EFF               	movlw	255
 22683  012BB0  22DA               	addwfc	fsr2h,f,c
 22684                           
 22685                           ;stkvar	_grs @ sp[(-13)+4]
 22686  012BB2  0EFA               	movlw	250
 22687  012BB4  24E1               	addwf	fsr1l,w,c
 22688  012BB6  6EE9               	movwf	fsr0l,c
 22689  012BB8  0EFF               	movlw	255
 22690  012BBA  20E2               	addwfc	fsr1h,w,c
 22691  012BBC  6EEA               	movwf	fsr0h,c
 22692  012BBE  50EF               	movf	indf0,w,c
 22693  012BC0  26DE               	addwf	postinc2,f,c
 22694  012BC2  0E00               	movlw	0
 22695  012BC4  22DE               	addwfc	postinc2,f,c
 22696  012BC6  22DE               	addwfc	postinc2,f,c
 22697  012BC8  22DE               	addwfc	postinc2,f,c
 22698                           
 22699                           ;stkvar	_grs @ sp[(-13)+4]
 22700  012BCA  50E1               	movf	fsr1l,w,c
 22701  012BCC  0FF7               	addlw	-9
 22702  012BCE  6ED9               	movwf	fsr2l,c
 22703  012BD0  50E2               	movf	fsr1h,w,c
 22704  012BD2  6EDA               	movwf	fsr2h,c
 22705  012BD4  0EFF               	movlw	255
 22706  012BD6  22DA               	addwfc	fsr2h,f,c
 22707  012BD8  0E08               	movlw	8
 22708  012BDA                     u6015:
 22709  012BDA  90D8               	bcf	status,0,c
 22710  012BDC  36DE               	rlcf	postinc2,f,c
 22711  012BDE  36DE               	rlcf	postinc2,f,c
 22712  012BE0  36DE               	rlcf	postinc2,f,c
 22713  012BE2  36DD               	rlcf	postdec2,f,c
 22714  012BE4  52DD               	movf	postdec2,f,c
 22715  012BE6  52DD               	movf	postdec2,f,c
 22716  012BE8  2EE8               	decfsz	wreg,f,c
 22717  012BEA  D7F7               	goto	u6015
 22718  012BEC  0E82               	movlw	130
 22719  012BEE  6E3C               	movwf	(btemp+10)^0,c
 22720  012BF0  0EFF               	movlw	255
 22721  012BF2  6E3D               	movwf	(btemp+11)^0,c
 22722                           
 22723                           ;stkvar	_bexp @ sp[(-13)+10]
 22724  012BF4  0EFD               	movlw	-3
 22725  012BF6  50E3               	movf	plusw1,w,c
 22726  012BF8  6E3A               	movwf	(btemp+8)^0,c
 22727  012BFA  6A3B               	clrf	(btemp+9)^0,c
 22728                           
 22729                           ;stkvar	_aexp @ sp[(-13)+11]
 22730  012BFC  0EFE               	movlw	-2
 22731  012BFE  50E3               	movf	plusw1,w,c
 22732  012C00  263A               	addwf	(btemp+8)^0,f,c
 22733  012C02  0E00               	movlw	0
 22734  012C04  223B               	addwfc	(btemp+9)^0,f,c
 22735  012C06  503C               	movf	(btemp+10)^0,w,c
 22736  012C08  263A               	addwf	(btemp+8)^0,f,c
 22737  012C0A  503D               	movf	(btemp+11)^0,w,c
 22738  012C0C  223B               	addwfc	(btemp+9)^0,f,c
 22739                           
 22740                           ;stkvar	_temp @ sp[(-13)+8]
 22741  012C0E  0EFB               	movlw	-5
 22742  012C10  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22743  012C16  0EFC               	movlw	-4
 22744  012C18  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22745  012C1E  D021               	goto	l7122
 22746  012C20                     l7112:
 22747                           
 22748                           ;stkvar	_prod @ sp[(-13)+0]
 22749  012C20  90D8               	bcf	status,0,c
 22750  012C22  0EF3               	movlw	-13
 22751  012C24  36E3               	rlcf	plusw1,f,c
 22752  012C26  0EF4               	movlw	-12
 22753  012C28  36E3               	rlcf	plusw1,f,c
 22754  012C2A  0EF5               	movlw	-11
 22755  012C2C  36E3               	rlcf	plusw1,f,c
 22756  012C2E  0EF6               	movlw	-10
 22757  012C30  36E3               	rlcf	plusw1,f,c
 22758                           
 22759                           ;stkvar	_grs @ sp[(-13)+4]
 22760  012C32  0EFA               	movlw	-6
 22761  012C34  AEE3               	btfss	plusw1,7,c
 22762  012C36  D002               	goto	l7118
 22763                           
 22764                           ;stkvar	_prod @ sp[(-13)+0]
 22765  012C38  0EF3               	movlw	-13
 22766  012C3A  80E3               	bsf	plusw1,0,c
 22767  012C3C                     l7118:
 22768                           
 22769                           ;stkvar	_grs @ sp[(-13)+4]
 22770  012C3C  90D8               	bcf	status,0,c
 22771  012C3E  0EF7               	movlw	-9
 22772  012C40  36E3               	rlcf	plusw1,f,c
 22773  012C42  0EF8               	movlw	-8
 22774  012C44  36E3               	rlcf	plusw1,f,c
 22775  012C46  0EF9               	movlw	-7
 22776  012C48  36E3               	rlcf	plusw1,f,c
 22777  012C4A  0EFA               	movlw	-6
 22778  012C4C  36E3               	rlcf	plusw1,f,c
 22779                           
 22780                           ;stkvar	_temp @ sp[(-13)+8]
 22781  012C4E  50E1               	movf	fsr1l,w,c
 22782  012C50  0FFB               	addlw	-5
 22783  012C52  6ED9               	movwf	fsr2l,c
 22784  012C54  50E2               	movf	fsr1h,w,c
 22785  012C56  6EDA               	movwf	fsr2h,c
 22786  012C58  0EFF               	movlw	255
 22787  012C5A  22DA               	addwfc	fsr2h,f,c
 22788  012C5C  06DE               	decf	postinc2,f,c
 22789  012C5E  0E00               	movlw	0
 22790  012C60  5ADD               	subwfb	postdec2,f,c
 22791  012C62                     l7122:
 22792                           
 22793                           ;stkvar	_prod @ sp[(-13)+0]
 22794  012C62  0EF5               	movlw	-11
 22795  012C64  AEE3               	btfss	plusw1,7,c
 22796  012C66  D7DC               	goto	l7112
 22797                           
 22798                           ;stkvar	_aexp @ sp[(-13)+11]
 22799  012C68  0EFE               	movlw	-2
 22800  012C6A  6AE3               	clrf	plusw1,c
 22801                           
 22802                           ;stkvar	_grs @ sp[(-13)+4]
 22803  012C6C  0EFA               	movlw	-6
 22804  012C6E  AEE3               	btfss	plusw1,7,c
 22805  012C70  D020               	goto	l7136
 22806                           
 22807                           ;stkvar	_grs @ sp[(-13)+4]
 22808  012C72  50E1               	movf	fsr1l,w,c
 22809  012C74  0FF7               	addlw	-9
 22810  012C76  6ED9               	movwf	fsr2l,c
 22811  012C78  50E2               	movf	fsr1h,w,c
 22812  012C7A  6EDA               	movwf	fsr2h,c
 22813  012C7C  0EFF               	movlw	255
 22814  012C7E  22DA               	addwfc	fsr2h,f,c
 22815  012C80  0EFF               	movlw	255
 22816  012C82  14DE               	andwf	postinc2,w,c
 22817  012C84  6E3A               	movwf	(btemp+8)^0,c
 22818  012C86  0EFF               	movlw	255
 22819  012C88  14DE               	andwf	postinc2,w,c
 22820  012C8A  6E3B               	movwf	(btemp+9)^0,c
 22821  012C8C  0EFF               	movlw	255
 22822  012C8E  14DE               	andwf	postinc2,w,c
 22823  012C90  6E3C               	movwf	(btemp+10)^0,c
 22824  012C92  0E7F               	movlw	127
 22825  012C94  14DE               	andwf	postinc2,w,c
 22826  012C96  6E3D               	movwf	(btemp+11)^0,c
 22827  012C98  503A               	movf	(btemp+8)^0,w,c
 22828  012C9A  103B               	iorwf	(btemp+9)^0,w,c
 22829  012C9C  103C               	iorwf	(btemp+10)^0,w,c
 22830  012C9E  103D               	iorwf	(btemp+11)^0,w,c
 22831  012CA0  B4D8               	btfsc	status,2,c
 22832  012CA2  D004               	goto	l7132
 22833  012CA4                     u6050:
 22834                           
 22835                           ;stkvar	_aexp @ sp[(-13)+11]
 22836  012CA4  0EFE               	movlw	-2
 22837  012CA6  6AE3               	clrf	plusw1,c
 22838  012CA8  2AE3               	incf	plusw1,f,c
 22839  012CAA  D003               	goto	l7136
 22840  012CAC                     l7132:
 22841                           
 22842                           ;stkvar	_prod @ sp[(-13)+0]
 22843  012CAC  0EF3               	movlw	-13
 22844  012CAE  B0E3               	btfsc	plusw1,0,c
 22845  012CB0  D7F9               	goto	u6050
 22846  012CB2                     l7136:
 22847                           
 22848                           ;stkvar	_aexp @ sp[(-13)+11]
 22849  012CB2  0EFE               	movlw	-2
 22850  012CB4  50E3               	movf	plusw1,w,c
 22851  012CB6  B4D8               	btfsc	status,2,c
 22852  012CB8  D036               	goto	l7146
 22853                           
 22854                           ;stkvar	_prod @ sp[(-13)+0]
 22855  012CBA  50E1               	movf	fsr1l,w,c
 22856  012CBC  0FF3               	addlw	-13
 22857  012CBE  6ED9               	movwf	fsr2l,c
 22858  012CC0  50E2               	movf	fsr1h,w,c
 22859  012CC2  6EDA               	movwf	fsr2h,c
 22860  012CC4  0EFF               	movlw	255
 22861  012CC6  22DA               	addwfc	fsr2h,f,c
 22862  012CC8  2ADE               	incf	postinc2,f,c
 22863  012CCA  0E00               	movlw	0
 22864  012CCC  22DE               	addwfc	postinc2,f,c
 22865  012CCE  22DE               	addwfc	postinc2,f,c
 22866  012CD0  22DE               	addwfc	postinc2,f,c
 22867                           
 22868                           ;stkvar	_prod @ sp[(-13)+0]
 22869  012CD2  0EF6               	movlw	-10
 22870  012CD4  A0E3               	btfss	plusw1,0,c
 22871  012CD6  D027               	goto	l7146
 22872  012CD8  0E01               	movlw	1
 22873  012CDA  6E3D               	movwf	(btemp+11)^0,c
 22874                           
 22875                           ;stkvar	_prod @ sp[(-13)+0]
 22876  012CDC  50E1               	movf	fsr1l,w,c
 22877  012CDE  0FF3               	addlw	-13
 22878  012CE0  6ED9               	movwf	fsr2l,c
 22879  012CE2  50E2               	movf	fsr1h,w,c
 22880  012CE4  6EDA               	movwf	fsr2h,c
 22881  012CE6  0EFF               	movlw	255
 22882  012CE8  22DA               	addwfc	fsr2h,f,c
 22883  012CEA  283D               	incf	(btemp+11)^0,w,c
 22884  012CEC  52DE               	movf	postinc2,f,c
 22885  012CEE  D008               	goto	u6090
 22886  012CF0                     u6095:
 22887  012CF0  52DE               	movf	postinc2,f,c
 22888  012CF2  90D8               	bcf	status,0,c
 22889  012CF4  BEDC               	btfsc	preinc2,7,c
 22890  012CF6  80D8               	bsf	status,0,c
 22891  012CF8  32DD               	rrcf	postdec2,f,c
 22892  012CFA  32DD               	rrcf	postdec2,f,c
 22893  012CFC  32DD               	rrcf	postdec2,f,c
 22894  012CFE  32DE               	rrcf	postinc2,f,c
 22895  012D00                     u6090:
 22896  012D00  2EE8               	decfsz	wreg,f,c
 22897  012D02  D7F6               	goto	u6095
 22898                           
 22899                           ;stkvar	_temp @ sp[(-13)+8]
 22900  012D04  0EFB               	movlw	-5
 22901  012D06  50E3               	movf	plusw1,w,c
 22902  012D08  0F01               	addlw	1
 22903  012D0A  6E32               	movwf	btemp^0,c
 22904  012D0C  0EFB               	movlw	-5
 22905  012D0E  0060  F0CB  FFE3   	movff	btemp,plusw1
 22906  012D14  6A32               	clrf	btemp^0,c
 22907  012D16  0EFC               	movlw	-4
 22908  012D18  50E3               	movf	plusw1,w,c
 22909  012D1A  2032               	addwfc	btemp^0,w,c
 22910  012D1C  6E32               	movwf	btemp^0,c
 22911  012D1E  0EFC               	movlw	-4
 22912  012D20  0060  F0CB  FFE3   	movff	btemp,plusw1
 22913  012D26                     l7146:
 22914                           
 22915                           ;stkvar	_temp @ sp[(-13)+8]
 22916  012D26  0EFC               	movlw	-4
 22917  012D28  BEE3               	btfsc	plusw1,7,c
 22918  012D2A  D020               	goto	l7150
 22919  012D2C  0EFC               	movlw	-4
 22920  012D2E  50E3               	movf	plusw1,w,c
 22921  012D30  E104               	bnz	u6100
 22922  012D32  0EFB               	movlw	-5
 22923  012D34  28E3               	incf	plusw1,w,c
 22924  012D36  A0D8               	btfss	status,0,c
 22925  012D38  D019               	goto	l7150
 22926  012D3A                     u6100:
 22927  012D3A  0E00               	movlw	0
 22928  012D3C  6E3A               	movwf	(btemp+8)^0,c
 22929  012D3E  0E00               	movlw	0
 22930  012D40  6E3B               	movwf	(btemp+9)^0,c
 22931  012D42  0E80               	movlw	128
 22932  012D44  6E3C               	movwf	(btemp+10)^0,c
 22933  012D46  0E7F               	movlw	127
 22934  012D48  6E3D               	movwf	(btemp+11)^0,c
 22935                           
 22936                           ;stkvar	_prod @ sp[(-13)+0]
 22937  012D4A  0EF3               	movlw	-13
 22938  012D4C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22939  012D52  0EF4               	movlw	-12
 22940  012D54  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22941  012D5A  0EF5               	movlw	-11
 22942  012D5C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22943  012D62  0EF6               	movlw	-10
 22944  012D64  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22945  012D6A  D044               	goto	l7166
 22946  012D6C                     l7150:
 22947                           
 22948                           ;stkvar	_temp @ sp[(-13)+8]
 22949  012D6C  0EFC               	movlw	-4
 22950  012D6E  BEE3               	btfsc	plusw1,7,c
 22951  012D70  D007               	goto	u6110
 22952  012D72  0EFC               	movlw	-4
 22953  012D74  50E3               	movf	plusw1,w,c
 22954  012D76  E10F               	bnz	l7156
 22955  012D78  0EFB               	movlw	-5
 22956  012D7A  04E3               	decf	plusw1,w,c
 22957  012D7C  B0D8               	btfsc	status,0,c
 22958  012D7E  D00B               	goto	l7156
 22959  012D80                     u6110:
 22960                           
 22961                           ;stkvar	_prod @ sp[(-13)+0]
 22962  012D80  0EF3               	movlw	-13
 22963  012D82  6AE3               	clrf	plusw1,c
 22964  012D84  0EF4               	movlw	-12
 22965  012D86  6AE3               	clrf	plusw1,c
 22966  012D88  0EF5               	movlw	-11
 22967  012D8A  6AE3               	clrf	plusw1,c
 22968  012D8C  0EF6               	movlw	-10
 22969  012D8E  6AE3               	clrf	plusw1,c
 22970                           
 22971                           ;stkvar	_sign @ sp[(-13)+12]
 22972  012D90  0EFF               	movlw	-1
 22973  012D92  6AE3               	clrf	plusw1,c
 22974  012D94  D02F               	goto	l7166
 22975  012D96                     l7156:
 22976                           
 22977                           ;stkvar	_temp @ sp[(-13)+8]
 22978                           ;stkvar	_bexp @ sp[(-13)+10]
 22979  012D96  0EFB               	movlw	-5
 22980  012D98  006F FF8C  F032    	movff	plusw1,btemp
 22981  012D9E  0EFD               	movlw	-3
 22982  012DA0  0060  F0CB  FFE3   	movff	btemp,plusw1
 22983                           
 22984                           ;stkvar	_prod @ sp[(-13)+0]
 22985  012DA6  50E1               	movf	fsr1l,w,c
 22986  012DA8  0FF3               	addlw	-13
 22987  012DAA  6ED9               	movwf	fsr2l,c
 22988  012DAC  50E2               	movf	fsr1h,w,c
 22989  012DAE  6EDA               	movwf	fsr2h,c
 22990  012DB0  0EFF               	movlw	255
 22991  012DB2  22DA               	addwfc	fsr2h,f,c
 22992  012DB4  0EFF               	movlw	255
 22993  012DB6  16DE               	andwf	postinc2,f,c
 22994  012DB8  0EFF               	movlw	255
 22995  012DBA  16DE               	andwf	postinc2,f,c
 22996  012DBC  0E7F               	movlw	127
 22997  012DBE  16DE               	andwf	postinc2,f,c
 22998  012DC0  0E00               	movlw	0
 22999  012DC2  16DE               	andwf	postinc2,f,c
 23000                           
 23001                           ;stkvar	_bexp @ sp[(-13)+10]
 23002  012DC4  0EFD               	movlw	-3
 23003  012DC6  A0E3               	btfss	plusw1,0,c
 23004  012DC8  D008               	goto	l7164
 23005                           
 23006                           ;stkvar	_prod @ sp[(-13)+0]
 23007  012DCA  0EF5               	movlw	245
 23008  012DCC  24E1               	addwf	fsr1l,w,c
 23009  012DCE  6ED9               	movwf	fsr2l,c
 23010  012DD0  0EFF               	movlw	255
 23011  012DD2  20E2               	addwfc	fsr1h,w,c
 23012  012DD4  6EDA               	movwf	fsr2h,c
 23013  012DD6  0E00               	movlw	0
 23014  012DD8  8EDB               	bsf	plusw2,7,c
 23015  012DDA                     l7164:
 23016                           
 23017                           ;stkvar	_prod @ sp[(-13)+0]
 23018  012DDA  0EF6               	movlw	246
 23019  012DDC  24E1               	addwf	fsr1l,w,c
 23020  012DDE  6ED9               	movwf	fsr2l,c
 23021  012DE0  0EFF               	movlw	255
 23022  012DE2  20E2               	addwfc	fsr1h,w,c
 23023  012DE4  6EDA               	movwf	fsr2h,c
 23024                           
 23025                           ;stkvar	_bexp @ sp[(-13)+10]
 23026  012DE6  0EFD               	movlw	-3
 23027  012DE8  006F FF8C  F03D    	movff	plusw1,btemp+11
 23028  012DEE  90D8               	bcf	status,0,c
 23029  012DF0  303D               	rrcf	(btemp+11)^0,w,c
 23030  012DF2  6EDF               	movwf	indf2,c
 23031  012DF4                     l7166:
 23032                           
 23033                           ;stkvar	_sign @ sp[(-13)+12]
 23034  012DF4  0EFF               	movlw	-1
 23035  012DF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 23036                           
 23037                           ;stkvar	_prod @ sp[(-13)+0]
 23038  012DFC  0EF6               	movlw	246
 23039  012DFE  24E1               	addwf	fsr1l,w,c
 23040  012E00  6ED9               	movwf	fsr2l,c
 23041  012E02  0EFF               	movlw	255
 23042  012E04  20E2               	addwfc	fsr1h,w,c
 23043  012E06  6EDA               	movwf	fsr2h,c
 23044  012E08  503D               	movf	(btemp+11)^0,w,c
 23045  012E0A  12DF               	iorwf	indf2,f,c
 23046                           
 23047                           ;stkvar	_prod @ sp[(-13)+0]
 23048  012E0C  0EF3               	movlw	-13
 23049  012E0E  006F FF8C  F032    	movff	plusw1,btemp
 23050  012E14  0EF4               	movlw	-12
 23051  012E16  006F FF8C  F033    	movff	plusw1,btemp+1
 23052  012E1C  0EF5               	movlw	-11
 23053  012E1E  006F FF8C  F034    	movff	plusw1,btemp+2
 23054  012E24  0EF6               	movlw	-10
 23055  012E26  006F FF8C  F035    	movff	plusw1,btemp+3
 23056  012E2C                     l2729:
 23057                           
 23058                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 23059  012E2C  0EEB               	movlw	235
 23060  012E2E  26E1               	addwf	fsr1l,f,c
 23061  012E30  0EFF               	movlw	255
 23062  012E32  22E2               	addwfc	fsr1h,f,c
 23063  012E34  0012               	return		;funcret
 23064  012E36                     __end_of___flmul:
 23065                           	opt callstack 0
 23066                           
 23067 ;; *************** function _SYSTEM_Initialize *****************
 23068 ;; Defined at:
 23069 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23070 ;; Parameters:    Size  Location     Type
 23071 ;;		None
 23072 ;; Auto vars:     Size  Location     Type
 23073 ;;		None
 23074 ;; Return value:  Size  Location     Type
 23075 ;;                  1  [STACK] void 
 23076 ;; Registers used:
 23077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 23078 ;; Tracked objects:
 23079 ;;		On entry : 0/0
 23080 ;;		On exit  : 3F/3C
 23081 ;;		Unchanged: 0/0
 23082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23087 ;;Total ram usage:        0 bytes
 23088 ;; Hardware stack levels used:    1
 23089 ;; Hardware stack levels required when called:    8
 23090 ;; This function calls:
 23091 ;;		_ADCC_Initialize
 23092 ;;		_CLKREF_Initialize
 23093 ;;		_DMA1_Initialize
 23094 ;;		_DMA2_Initialize
 23095 ;;		_EXT_INT_Initialize
 23096 ;;		_FVR_Initialize
 23097 ;;		_INTERRUPT_Initialize
 23098 ;;		_OSCILLATOR_Initialize
 23099 ;;		_PIN_MANAGER_Initialize
 23100 ;;		_PMD_Initialize
 23101 ;;		_PWM8_Initialize
 23102 ;;		_SPI1_Initialize
 23103 ;;		_TMR2_Initialize
 23104 ;;		_TMR5_Initialize
 23105 ;;		_TMR6_Initialize
 23106 ;;		_UART1_Initialize
 23107 ;;		_UART2_Initialize
 23108 ;; This function is called by:
 23109 ;;		_main
 23110 ;; This function uses a reentrant model
 23111 ;;
 23112                           
 23113                           	psect	text92
 23114  018450                     __ptext92:
 23115                           	opt callstack 0
 23116  018450                     _SYSTEM_Initialize:
 23117                           	opt callstack 22
 23118                           
 23119                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23120                           
 23121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23122                           ;incstack = 0
 23123  018450  ECBC  F0BF         	call	_INTERRUPT_Initialize	;wreg free
 23124                           
 23125                           ; BSR set to: 57
 23126                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23127  018454  EC68  F0C7         	call	_PMD_Initialize	;wreg free
 23128                           
 23129                           ; BSR set to: 57
 23130                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 23131  018458  EC85  F0BD         	call	_PIN_MANAGER_Initialize	;wreg free
 23132                           
 23133                           ; BSR set to: 58
 23134                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 23135  01845C  EC5D  F0C7         	call	_OSCILLATOR_Initialize	;wreg free
 23136                           
 23137                           ; BSR set to: 57
 23138                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 23139  018460  ECC7  F0C7         	call	_FVR_Initialize	;wreg free
 23140                           
 23141                           ; BSR set to: 62
 23142                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 23143  018464  EC52  F0BF         	call	_ADCC_Initialize	;wreg free
 23144                           
 23145                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 23146  018468  EC3B  F0C7         	call	_TMR2_Initialize	;wreg free
 23147                           
 23148                           ; BSR set to: 57
 23149                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 23150  01846C  EC52  F0C7         	call	_PWM8_Initialize	;wreg free
 23151                           
 23152                           ; BSR set to: 63
 23153                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 23154  018470  ECBD  F0C3         	call	_EXT_INT_Initialize	;wreg free
 23155                           
 23156                           ; BSR set to: 57
 23157                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 23158  018474  EC7A  F0C4         	call	_TMR6_Initialize	;wreg free
 23159                           
 23160                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 23161  018478  EC4B  F0C2         	call	_TMR5_Initialize	;wreg free
 23162                           
 23163                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 23164  01847C  EC21  F0C0         	call	_UART1_Initialize	;wreg free
 23165                           
 23166                           ; BSR set to: 57
 23167                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 23168  018480  ECB5  F0C0         	call	_UART2_Initialize	;wreg free
 23169                           
 23170                           ; BSR set to: 57
 23171                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 23172  018484  EC47  F0C7         	call	_SPI1_Initialize	;wreg free
 23173                           
 23174                           ; BSR set to: 61
 23175                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 23176  018488  EC3F  F0C1         	call	_DMA2_Initialize	;wreg free
 23177                           
 23178                           ; BSR set to: 59
 23179                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 23180  01848C  EC1D  F0BF         	call	_DMA1_Initialize	;wreg free
 23181                           
 23182                           ; BSR set to: 59
 23183                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 23184  018490  ECA1  F0C7         	call	_CLKREF_Initialize	;wreg free
 23185                           
 23186                           ; BSR set to: 60
 23187                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23188  018494  0012               	return		;funcret
 23189  018496                     __end_of_SYSTEM_Initialize:
 23190                           	opt callstack 0
 23191                           
 23192 ;; *************** function _UART2_Initialize *****************
 23193 ;; Defined at:
 23194 ;;		line 78 in file "mcc_generated_files/uart2.c"
 23195 ;; Parameters:    Size  Location     Type
 23196 ;;		None
 23197 ;; Auto vars:     Size  Location     Type
 23198 ;;		None
 23199 ;; Return value:  Size  Location     Type
 23200 ;;                  1  [STACK] void 
 23201 ;; Registers used:
 23202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23203 ;; Tracked objects:
 23204 ;;		On entry : 3F/39
 23205 ;;		On exit  : 3F/39
 23206 ;;		Unchanged: 0/0
 23207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23212 ;;Total ram usage:        0 bytes
 23213 ;; Hardware stack levels used:    1
 23214 ;; Hardware stack levels required when called:    7
 23215 ;; This function calls:
 23216 ;;		_UART2_SetRxInterruptHandler
 23217 ;;		_UART2_SetTxInterruptHandler
 23218 ;; This function is called by:
 23219 ;;		_SYSTEM_Initialize
 23220 ;; This function uses a reentrant model
 23221 ;;
 23222                           
 23223                           	psect	text93
 23224  01816A                     __ptext93:
 23225                           	opt callstack 0
 23226  01816A                     _UART2_Initialize:
 23227                           	opt callstack 22
 23228                           
 23229                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 23230                           
 23231                           ; BSR set to: 60
 23232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23233                           ;incstack = 0
 23234  01816A  0139               	movlb	57	; () banked
 23235  01816C  9596               	bcf	150,2,b	;volatile
 23236                           
 23237                           ; BSR set to: 57
 23238                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 23239  01816E  0EF0               	movlw	low _UART2_Receive_ISR
 23240  018170  6EE6               	movwf	postinc1,c
 23241  018172  0E8D               	movlw	high _UART2_Receive_ISR
 23242  018174  6EE6               	movwf	postinc1,c
 23243  018176  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 23244  018178  6EE6               	movwf	postinc1,c
 23245  01817A  EC09  F0C5         	call	_UART2_SetRxInterruptHandler	;wreg free
 23246                           
 23247                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 23248  01817E  0139               	movlb	57	; () banked
 23249  018180  9796               	bcf	150,3,b	;volatile
 23250                           
 23251                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 23252  018182  0EC8               	movlw	low _UART2_Transmit_ISR
 23253  018184  6EE6               	movwf	postinc1,c
 23254  018186  0E88               	movlw	high _UART2_Transmit_ISR
 23255  018188  6EE6               	movwf	postinc1,c
 23256  01818A  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 23257  01818C  6EE6               	movwf	postinc1,c
 23258  01818E  ECF5  F0C4         	call	_UART2_SetTxInterruptHandler	;wreg free
 23259                           
 23260                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 23261  018192  013D               	movlb	61	; () banked
 23262  018194  6BD4               	clrf	212,b	;volatile
 23263                           
 23264                           ; BSR set to: 61
 23265                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 23266  018196  6BD6               	clrf	214,b	;volatile
 23267                           
 23268                           ; BSR set to: 61
 23269                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 23270  018198  6BD8               	clrf	216,b	;volatile
 23271                           
 23272                           ; BSR set to: 61
 23273                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 23274  01819A  0EB0               	movlw	176
 23275  01819C  6FDA               	movwf	218,b	;volatile
 23276                           
 23277                           ; BSR set to: 61
 23278                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 23279  01819E  0E80               	movlw	128
 23280  0181A0  6FDB               	movwf	219,b	;volatile
 23281                           
 23282                           ; BSR set to: 61
 23283                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 23284  0181A2  6BDC               	clrf	220,b	;volatile
 23285                           
 23286                           ; BSR set to: 61
 23287                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 23288  0181A4  0E82               	movlw	130
 23289  0181A6  6FDD               	movwf	221,b	;volatile
 23290                           
 23291                           ; BSR set to: 61
 23292                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 23293  0181A8  0E06               	movlw	6
 23294  0181AA  6FDE               	movwf	222,b	;volatile
 23295                           
 23296                           ; BSR set to: 61
 23297                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 23298  0181AC  6BDF               	clrf	223,b	;volatile
 23299                           
 23300                           ; BSR set to: 61
 23301                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 23302  0181AE  6BE0               	clrf	224,b	;volatile
 23303                           
 23304                           ; BSR set to: 61
 23305                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 23306  0181B0  6BE1               	clrf	225,b	;volatile
 23307                           
 23308                           ; BSR set to: 61
 23309                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 23310  0181B2  6BE2               	clrf	226,b	;volatile
 23311                           
 23312                           ; BSR set to: 61
 23313                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 23314  0181B4  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 23315                           
 23316                           ; BSR set to: 61
 23317                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 23318  0181B6  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 23319                           
 23320                           ; BSR set to: 61
 23321                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 23322  0181B8  0E40               	movlw	64
 23323  0181BA  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 23324                           
 23325                           ; BSR set to: 61
 23326                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 23327  0181BC  6A28               	clrf	_uart2RxHead^0,c	;volatile
 23328                           
 23329                           ; BSR set to: 61
 23330                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 23331  0181BE  6A27               	clrf	_uart2RxTail^0,c	;volatile
 23332                           
 23333                           ; BSR set to: 61
 23334                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 23335  0181C0  6A26               	clrf	_uart2RxCount^0,c	;volatile
 23336                           
 23337                           ; BSR set to: 61
 23338                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 23339  0181C2  0139               	movlb	57	; () banked
 23340  0181C4  8596               	bsf	150,2,b	;volatile
 23341                           
 23342                           ; BSR set to: 57
 23343                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23344  0181C6  0012               	return		;funcret
 23345  0181C8                     __end_of_UART2_Initialize:
 23346                           	opt callstack 0
 23347                           
 23348 ;; *************** function _UART2_SetTxInterruptHandler *****************
 23349 ;; Defined at:
 23350 ;;		line 252 in file "mcc_generated_files/uart2.c"
 23351 ;; Parameters:    Size  Location     Type
 23352 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23353 ;;		 -> UART2_Transmit_ISR(1), 
 23354 ;; Auto vars:     Size  Location     Type
 23355 ;;		None
 23356 ;; Return value:  Size  Location     Type
 23357 ;;                  1  [STACK] void 
 23358 ;; Registers used:
 23359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23360 ;; Tracked objects:
 23361 ;;		On entry : 3F/39
 23362 ;;		On exit  : 0/0
 23363 ;;		Unchanged: 0/0
 23364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23369 ;;Total ram usage:        0 bytes
 23370 ;; Hardware stack levels used:    1
 23371 ;; Hardware stack levels required when called:    6
 23372 ;; This function calls:
 23373 ;;		Nothing
 23374 ;; This function is called by:
 23375 ;;		_UART2_Initialize
 23376 ;; This function uses a reentrant model
 23377 ;;
 23378                           
 23379                           	psect	text94
 23380  0189EA                     __ptext94:
 23381                           	opt callstack 0
 23382  0189EA                     _UART2_SetTxInterruptHandler:
 23383                           	opt callstack 22
 23384                           
 23385                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 23386                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23387                           
 23388                           ; BSR set to: 57
 23389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23390                           ;incstack = 0
 23391  0189EA  50E1               	movf	fsr1l,w,c
 23392  0189EC  0FFD               	addlw	-3
 23393  0189EE  6ED9               	movwf	fsr2l,c
 23394  0189F0  50E2               	movf	fsr1h,w,c
 23395  0189F2  6EDA               	movwf	fsr2h,c
 23396  0189F4  0EFF               	movlw	255
 23397  0189F6  22DA               	addwfc	fsr2h,f,c
 23398  0189F8  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 23399  0189FE  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 23400  018A04  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 23401                           
 23402                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23403  018A0A  52E5               	movf	postdec1,f,c
 23404  018A0C  52E5               	movf	postdec1,f,c
 23405  018A0E  52E5               	movf	postdec1,f,c
 23406  018A10  0012               	return		;funcret
 23407  018A12                     __end_of_UART2_SetTxInterruptHandler:
 23408                           	opt callstack 0
 23409                           
 23410 ;; *************** function _UART2_SetRxInterruptHandler *****************
 23411 ;; Defined at:
 23412 ;;		line 248 in file "mcc_generated_files/uart2.c"
 23413 ;; Parameters:    Size  Location     Type
 23414 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23415 ;;		 -> UART2_Receive_ISR(1), 
 23416 ;; Auto vars:     Size  Location     Type
 23417 ;;		None
 23418 ;; Return value:  Size  Location     Type
 23419 ;;                  1  [STACK] void 
 23420 ;; Registers used:
 23421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23422 ;; Tracked objects:
 23423 ;;		On entry : 3F/39
 23424 ;;		On exit  : 0/0
 23425 ;;		Unchanged: 0/0
 23426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23431 ;;Total ram usage:        0 bytes
 23432 ;; Hardware stack levels used:    1
 23433 ;; Hardware stack levels required when called:    6
 23434 ;; This function calls:
 23435 ;;		Nothing
 23436 ;; This function is called by:
 23437 ;;		_UART2_Initialize
 23438 ;; This function uses a reentrant model
 23439 ;;
 23440                           
 23441                           	psect	text95
 23442  018A12                     __ptext95:
 23443                           	opt callstack 0
 23444  018A12                     _UART2_SetRxInterruptHandler:
 23445                           	opt callstack 22
 23446                           
 23447                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 23448                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23449                           
 23450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23451                           ;incstack = 0
 23452  018A12  50E1               	movf	fsr1l,w,c
 23453  018A14  0FFD               	addlw	-3
 23454  018A16  6ED9               	movwf	fsr2l,c
 23455  018A18  50E2               	movf	fsr1h,w,c
 23456  018A1A  6EDA               	movwf	fsr2h,c
 23457  018A1C  0EFF               	movlw	255
 23458  018A1E  22DA               	addwfc	fsr2h,f,c
 23459  018A20  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 23460  018A26  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 23461  018A2C  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 23462                           
 23463                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23464  018A32  52E5               	movf	postdec1,f,c
 23465  018A34  52E5               	movf	postdec1,f,c
 23466  018A36  52E5               	movf	postdec1,f,c
 23467  018A38  0012               	return		;funcret
 23468  018A3A                     __end_of_UART2_SetRxInterruptHandler:
 23469                           	opt callstack 0
 23470                           
 23471 ;; *************** function _UART1_Initialize *****************
 23472 ;; Defined at:
 23473 ;;		line 79 in file "mcc_generated_files/uart1.c"
 23474 ;; Parameters:    Size  Location     Type
 23475 ;;		None
 23476 ;; Auto vars:     Size  Location     Type
 23477 ;;		None
 23478 ;; Return value:  Size  Location     Type
 23479 ;;                  1  [STACK] void 
 23480 ;; Registers used:
 23481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23482 ;; Tracked objects:
 23483 ;;		On entry : 0/39
 23484 ;;		On exit  : 3F/39
 23485 ;;		Unchanged: 0/0
 23486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23491 ;;Total ram usage:        0 bytes
 23492 ;; Hardware stack levels used:    1
 23493 ;; Hardware stack levels required when called:    7
 23494 ;; This function calls:
 23495 ;;		_UART1_SetRxInterruptHandler
 23496 ;;		_UART1_SetTxInterruptHandler
 23497 ;; This function is called by:
 23498 ;;		_SYSTEM_Initialize
 23499 ;; This function uses a reentrant model
 23500 ;;
 23501                           
 23502                           	psect	text96
 23503  018042                     __ptext96:
 23504                           	opt callstack 0
 23505  018042                     _UART1_Initialize:
 23506                           	opt callstack 22
 23507                           
 23508                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 23509                           
 23510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23511                           ;incstack = 0
 23512  018042  0139               	movlb	57	; () banked
 23513  018044  9793               	bcf	147,3,b	;volatile
 23514                           
 23515                           ; BSR set to: 57
 23516                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23517  018046  0ED2               	movlw	low _UART1_Receive_ISR
 23518  018048  6EE6               	movwf	postinc1,c
 23519  01804A  0E8D               	movlw	high _UART1_Receive_ISR
 23520  01804C  6EE6               	movwf	postinc1,c
 23521  01804E  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23522  018050  6EE6               	movwf	postinc1,c
 23523  018052  EC31  F0C5         	call	_UART1_SetRxInterruptHandler	;wreg free
 23524                           
 23525                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23526  018056  0139               	movlb	57	; () banked
 23527  018058  9993               	bcf	147,4,b	;volatile
 23528                           
 23529                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23530  01805A  0E9C               	movlw	low _UART1_Transmit_ISR
 23531  01805C  6EE6               	movwf	postinc1,c
 23532  01805E  0E88               	movlw	high _UART1_Transmit_ISR
 23533  018060  6EE6               	movwf	postinc1,c
 23534  018062  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23535  018064  6EE6               	movwf	postinc1,c
 23536  018066  EC1D  F0C5         	call	_UART1_SetTxInterruptHandler	;wreg free
 23537                           
 23538                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23539  01806A  013D               	movlb	61	; () banked
 23540  01806C  6BEC               	clrf	236,b	;volatile
 23541                           
 23542                           ; BSR set to: 61
 23543                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23544  01806E  6BED               	clrf	237,b	;volatile
 23545                           
 23546                           ; BSR set to: 61
 23547                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23548  018070  6BEE               	clrf	238,b	;volatile
 23549                           
 23550                           ; BSR set to: 61
 23551                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23552  018072  6BEF               	clrf	239,b	;volatile
 23553                           
 23554                           ; BSR set to: 61
 23555                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23556  018074  6BF0               	clrf	240,b	;volatile
 23557                           
 23558                           ; BSR set to: 61
 23559                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23560  018076  6BF1               	clrf	241,b	;volatile
 23561                           
 23562                           ; BSR set to: 61
 23563                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23564  018078  0EB0               	movlw	176
 23565  01807A  6FF2               	movwf	242,b	;volatile
 23566                           
 23567                           ; BSR set to: 61
 23568                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23569  01807C  0E80               	movlw	128
 23570  01807E  6FF3               	movwf	243,b	;volatile
 23571                           
 23572                           ; BSR set to: 61
 23573                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23574  018080  6BF4               	clrf	244,b	;volatile
 23575                           
 23576                           ; BSR set to: 61
 23577                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23578  018082  0E82               	movlw	130
 23579  018084  6FF5               	movwf	245,b	;volatile
 23580                           
 23581                           ; BSR set to: 61
 23582                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23583  018086  0E06               	movlw	6
 23584  018088  6FF6               	movwf	246,b	;volatile
 23585                           
 23586                           ; BSR set to: 61
 23587                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23588  01808A  6BF7               	clrf	247,b	;volatile
 23589                           
 23590                           ; BSR set to: 61
 23591                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23592  01808C  6BF8               	clrf	248,b	;volatile
 23593                           
 23594                           ; BSR set to: 61
 23595                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23596  01808E  6BF9               	clrf	249,b	;volatile
 23597                           
 23598                           ; BSR set to: 61
 23599                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23600  018090  6BFA               	clrf	250,b	;volatile
 23601                           
 23602                           ; BSR set to: 61
 23603                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23604  018092  6A31               	clrf	_uart1TxHead^0,c	;volatile
 23605                           
 23606                           ; BSR set to: 61
 23607                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23608  018094  6A30               	clrf	_uart1TxTail^0,c	;volatile
 23609                           
 23610                           ; BSR set to: 61
 23611                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23612  018096  0E40               	movlw	64
 23613  018098  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23614                           
 23615                           ; BSR set to: 61
 23616                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23617  01809A  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 23618                           
 23619                           ; BSR set to: 61
 23620                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23621  01809C  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 23622                           
 23623                           ; BSR set to: 61
 23624                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23625  01809E  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 23626                           
 23627                           ; BSR set to: 61
 23628                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23629  0180A0  0139               	movlb	57	; () banked
 23630  0180A2  8793               	bsf	147,3,b	;volatile
 23631                           
 23632                           ; BSR set to: 57
 23633                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23634  0180A4  0012               	return		;funcret
 23635  0180A6                     __end_of_UART1_Initialize:
 23636                           	opt callstack 0
 23637                           
 23638 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23639 ;; Defined at:
 23640 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23641 ;; Parameters:    Size  Location     Type
 23642 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23643 ;;		 -> UART1_Transmit_ISR(1), 
 23644 ;; Auto vars:     Size  Location     Type
 23645 ;;		None
 23646 ;; Return value:  Size  Location     Type
 23647 ;;                  1  [STACK] void 
 23648 ;; Registers used:
 23649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23650 ;; Tracked objects:
 23651 ;;		On entry : 3F/39
 23652 ;;		On exit  : 0/0
 23653 ;;		Unchanged: 0/0
 23654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23659 ;;Total ram usage:        0 bytes
 23660 ;; Hardware stack levels used:    1
 23661 ;; Hardware stack levels required when called:    6
 23662 ;; This function calls:
 23663 ;;		Nothing
 23664 ;; This function is called by:
 23665 ;;		_UART1_Initialize
 23666 ;; This function uses a reentrant model
 23667 ;;
 23668                           
 23669                           	psect	text97
 23670  018A3A                     __ptext97:
 23671                           	opt callstack 0
 23672  018A3A                     _UART1_SetTxInterruptHandler:
 23673                           	opt callstack 22
 23674                           
 23675                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23676                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23677                           
 23678                           ; BSR set to: 57
 23679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23680                           ;incstack = 0
 23681  018A3A  50E1               	movf	fsr1l,w,c
 23682  018A3C  0FFD               	addlw	-3
 23683  018A3E  6ED9               	movwf	fsr2l,c
 23684  018A40  50E2               	movf	fsr1h,w,c
 23685  018A42  6EDA               	movwf	fsr2h,c
 23686  018A44  0EFF               	movlw	255
 23687  018A46  22DA               	addwfc	fsr2h,f,c
 23688  018A48  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 23689  018A4E  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 23690  018A54  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 23691                           
 23692                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23693  018A5A  52E5               	movf	postdec1,f,c
 23694  018A5C  52E5               	movf	postdec1,f,c
 23695  018A5E  52E5               	movf	postdec1,f,c
 23696  018A60  0012               	return		;funcret
 23697  018A62                     __end_of_UART1_SetTxInterruptHandler:
 23698                           	opt callstack 0
 23699                           
 23700 ;; *************** function _UART1_SetRxInterruptHandler *****************
 23701 ;; Defined at:
 23702 ;;		line 241 in file "mcc_generated_files/uart1.c"
 23703 ;; Parameters:    Size  Location     Type
 23704 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23705 ;;		 -> UART1_Receive_ISR(1), 
 23706 ;; Auto vars:     Size  Location     Type
 23707 ;;		None
 23708 ;; Return value:  Size  Location     Type
 23709 ;;                  1  [STACK] void 
 23710 ;; Registers used:
 23711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23712 ;; Tracked objects:
 23713 ;;		On entry : 3F/39
 23714 ;;		On exit  : 0/0
 23715 ;;		Unchanged: 0/0
 23716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23721 ;;Total ram usage:        0 bytes
 23722 ;; Hardware stack levels used:    1
 23723 ;; Hardware stack levels required when called:    6
 23724 ;; This function calls:
 23725 ;;		Nothing
 23726 ;; This function is called by:
 23727 ;;		_UART1_Initialize
 23728 ;; This function uses a reentrant model
 23729 ;;
 23730                           
 23731                           	psect	text98
 23732  018A62                     __ptext98:
 23733                           	opt callstack 0
 23734  018A62                     _UART1_SetRxInterruptHandler:
 23735                           	opt callstack 22
 23736                           
 23737                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 23738                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23739                           
 23740                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23741                           ;incstack = 0
 23742  018A62  50E1               	movf	fsr1l,w,c
 23743  018A64  0FFD               	addlw	-3
 23744  018A66  6ED9               	movwf	fsr2l,c
 23745  018A68  50E2               	movf	fsr1h,w,c
 23746  018A6A  6EDA               	movwf	fsr2h,c
 23747  018A6C  0EFF               	movlw	255
 23748  018A6E  22DA               	addwfc	fsr2h,f,c
 23749  018A70  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 23750  018A76  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 23751  018A7C  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 23752                           
 23753                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23754  018A82  52E5               	movf	postdec1,f,c
 23755  018A84  52E5               	movf	postdec1,f,c
 23756  018A86  52E5               	movf	postdec1,f,c
 23757  018A88  0012               	return		;funcret
 23758  018A8A                     __end_of_UART1_SetRxInterruptHandler:
 23759                           	opt callstack 0
 23760                           
 23761 ;; *************** function _TMR6_Initialize *****************
 23762 ;; Defined at:
 23763 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 23764 ;; Parameters:    Size  Location     Type
 23765 ;;		None
 23766 ;; Auto vars:     Size  Location     Type
 23767 ;;		None
 23768 ;; Return value:  Size  Location     Type
 23769 ;;                  1  [STACK] void 
 23770 ;; Registers used:
 23771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23772 ;; Tracked objects:
 23773 ;;		On entry : 3F/39
 23774 ;;		On exit  : 0/0
 23775 ;;		Unchanged: 0/0
 23776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23781 ;;Total ram usage:        0 bytes
 23782 ;; Hardware stack levels used:    1
 23783 ;; Hardware stack levels required when called:    7
 23784 ;; This function calls:
 23785 ;;		_TMR6_SetInterruptHandler
 23786 ;; This function is called by:
 23787 ;;		_SYSTEM_Initialize
 23788 ;; This function uses a reentrant model
 23789 ;;
 23790                           
 23791                           	psect	text99
 23792  0188F4                     __ptext99:
 23793                           	opt callstack 0
 23794  0188F4                     _TMR6_Initialize:
 23795                           	opt callstack 22
 23796                           
 23797                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 23798                           
 23799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23800                           ;incstack = 0
 23801  0188F4  0E01               	movlw	1
 23802  0188F6  6E96               	movwf	150,c	;volatile
 23803                           
 23804                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 23805  0188F8  6A95               	clrf	149,c	;volatile
 23806                           
 23807                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 23808  0188FA  6A97               	clrf	151,c	;volatile
 23809                           
 23810                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 23811  0188FC  0E7C               	movlw	124
 23812  0188FE  6E93               	movwf	147,c	;volatile
 23813                           
 23814                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 23815  018900  6A92               	clrf	146,c	;volatile
 23816                           
 23817                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 23818  018902  0139               	movlb	57	; () banked
 23819  018904  91A9               	bcf	169,0,b	;volatile
 23820                           
 23821                           ; BSR set to: 57
 23822                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 23823  018906  8199               	bsf	153,0,b	;volatile
 23824                           
 23825                           ; BSR set to: 57
 23826                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 23827  018908  0EDC               	movlw	low _TMR6_DefaultInterruptHandler
 23828  01890A  6EE6               	movwf	postinc1,c
 23829  01890C  0E84               	movlw	high _TMR6_DefaultInterruptHandler
 23830  01890E  6EE6               	movwf	postinc1,c
 23831  018910  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23832  018912  6EE6               	movwf	postinc1,c
 23833  018914  EC45  F0C5         	call	_TMR6_SetInterruptHandler	;wreg free
 23834                           
 23835                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 23836  018918  0EE0               	movlw	224
 23837  01891A  6E94               	movwf	148,c	;volatile
 23838                           
 23839                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23840  01891C  0012               	return		;funcret
 23841  01891E                     __end_of_TMR6_Initialize:
 23842                           	opt callstack 0
 23843                           
 23844 ;; *************** function _TMR6_SetInterruptHandler *****************
 23845 ;; Defined at:
 23846 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 23847 ;; Parameters:    Size  Location     Type
 23848 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23849 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 23850 ;; Auto vars:     Size  Location     Type
 23851 ;;		None
 23852 ;; Return value:  Size  Location     Type
 23853 ;;                  1  [STACK] void 
 23854 ;; Registers used:
 23855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23856 ;; Tracked objects:
 23857 ;;		On entry : 3F/39
 23858 ;;		On exit  : 0/0
 23859 ;;		Unchanged: 0/0
 23860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23865 ;;Total ram usage:        0 bytes
 23866 ;; Hardware stack levels used:    1
 23867 ;; Hardware stack levels required when called:    6
 23868 ;; This function calls:
 23869 ;;		Nothing
 23870 ;; This function is called by:
 23871 ;;		_TMR6_Initialize
 23872 ;; This function uses a reentrant model
 23873 ;;
 23874                           
 23875                           	psect	text100
 23876  018A8A                     __ptext100:
 23877                           	opt callstack 0
 23878  018A8A                     _TMR6_SetInterruptHandler:
 23879                           	opt callstack 22
 23880                           
 23881                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 23882                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23883                           
 23884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23885                           ;incstack = 0
 23886  018A8A  50E1               	movf	fsr1l,w,c
 23887  018A8C  0FFD               	addlw	-3
 23888  018A8E  6ED9               	movwf	fsr2l,c
 23889  018A90  50E2               	movf	fsr1h,w,c
 23890  018A92  6EDA               	movwf	fsr2h,c
 23891  018A94  0EFF               	movlw	255
 23892  018A96  22DA               	addwfc	fsr2h,f,c
 23893  018A98  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 23894  018A9E  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 23895  018AA4  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 23896                           
 23897                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23898  018AAA  52E5               	movf	postdec1,f,c
 23899  018AAC  52E5               	movf	postdec1,f,c
 23900  018AAE  52E5               	movf	postdec1,f,c
 23901  018AB0  0012               	return		;funcret
 23902  018AB2                     __end_of_TMR6_SetInterruptHandler:
 23903                           	opt callstack 0
 23904                           
 23905 ;; *************** function _TMR5_Initialize *****************
 23906 ;; Defined at:
 23907 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 23908 ;; Parameters:    Size  Location     Type
 23909 ;;		None
 23910 ;; Auto vars:     Size  Location     Type
 23911 ;;		None
 23912 ;; Return value:  Size  Location     Type
 23913 ;;                  1  [STACK] void 
 23914 ;; Registers used:
 23915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 23916 ;; Tracked objects:
 23917 ;;		On entry : 0/39
 23918 ;;		On exit  : 0/0
 23919 ;;		Unchanged: 0/0
 23920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23925 ;;Total ram usage:        0 bytes
 23926 ;; Hardware stack levels used:    1
 23927 ;; Hardware stack levels required when called:    7
 23928 ;; This function calls:
 23929 ;;		_TMR5_SetInterruptHandler
 23930 ;; This function is called by:
 23931 ;;		_SYSTEM_Initialize
 23932 ;; This function uses a reentrant model
 23933 ;;
 23934                           
 23935                           	psect	text101
 23936  018496                     __ptext101:
 23937                           	opt callstack 0
 23938  018496                     _TMR5_Initialize:
 23939                           	opt callstack 22
 23940                           
 23941                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 23942                           
 23943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23944                           ;incstack = 0
 23945  018496  6A9B               	clrf	155,c	;volatile
 23946                           
 23947                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 23948  018498  6A9C               	clrf	156,c	;volatile
 23949                           
 23950                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 23951  01849A  0E01               	movlw	1
 23952  01849C  6E9D               	movwf	157,c	;volatile
 23953                           
 23954                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 23955  01849E  0E63               	movlw	99
 23956  0184A0  6E99               	movwf	153,c	;volatile
 23957                           
 23958                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 23959  0184A2  0EC0               	movlw	192
 23960  0184A4  6E98               	movwf	152,c	;volatile
 23961                           
 23962                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 23963  0184A6  5098               	movf	152,w,c	;volatile
 23964  0184A8  006F FE64  F032    	movff	16281,btemp	;volatile
 23965  0184AE  6A33               	clrf	(btemp+1)^0,c
 23966  0184B0  0060  F0C8  F033   	movff	btemp,btemp+1
 23967  0184B6  6A32               	clrf	btemp^0,c
 23968  0184B8  1032               	iorwf	btemp^0,w,c
 23969  0184BA  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 23970  0184BC  5033               	movf	(btemp+1)^0,w,c
 23971  0184BE  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 23972                           
 23973                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 23974  0184C0  0139               	movlb	57	; () banked
 23975  0184C2  9DA8               	bcf	168,6,b	;volatile
 23976                           
 23977                           ; BSR set to: 57
 23978                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 23979  0184C4  8D98               	bsf	152,6,b	;volatile
 23980                           
 23981                           ; BSR set to: 57
 23982                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 23983  0184C6  0E7A               	movlw	low _TMR5_DefaultInterruptHandler
 23984  0184C8  6EE6               	movwf	postinc1,c
 23985  0184CA  0E8B               	movlw	high _TMR5_DefaultInterruptHandler
 23986  0184CC  6EE6               	movwf	postinc1,c
 23987  0184CE  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23988  0184D0  6EE6               	movwf	postinc1,c
 23989  0184D2  EC59  F0C5         	call	_TMR5_SetInterruptHandler	;wreg free
 23990                           
 23991                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 23992  0184D6  0E31               	movlw	49
 23993  0184D8  6E9A               	movwf	154,c	;volatile
 23994                           
 23995                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23996  0184DA  0012               	return		;funcret
 23997  0184DC                     __end_of_TMR5_Initialize:
 23998                           	opt callstack 0
 23999                           
 24000 ;; *************** function _TMR5_SetInterruptHandler *****************
 24001 ;; Defined at:
 24002 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 24003 ;; Parameters:    Size  Location     Type
 24004 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24005 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 24006 ;; Auto vars:     Size  Location     Type
 24007 ;;		None
 24008 ;; Return value:  Size  Location     Type
 24009 ;;                  1  [STACK] void 
 24010 ;; Registers used:
 24011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24012 ;; Tracked objects:
 24013 ;;		On entry : 3F/39
 24014 ;;		On exit  : 0/0
 24015 ;;		Unchanged: 0/0
 24016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24021 ;;Total ram usage:        0 bytes
 24022 ;; Hardware stack levels used:    1
 24023 ;; Hardware stack levels required when called:    6
 24024 ;; This function calls:
 24025 ;;		Nothing
 24026 ;; This function is called by:
 24027 ;;		_TMR5_Initialize
 24028 ;; This function uses a reentrant model
 24029 ;;
 24030                           
 24031                           	psect	text102
 24032  018AB2                     __ptext102:
 24033                           	opt callstack 0
 24034  018AB2                     _TMR5_SetInterruptHandler:
 24035                           	opt callstack 22
 24036                           
 24037                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 24038                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24039                           
 24040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24041                           ;incstack = 0
 24042  018AB2  50E1               	movf	fsr1l,w,c
 24043  018AB4  0FFD               	addlw	-3
 24044  018AB6  6ED9               	movwf	fsr2l,c
 24045  018AB8  50E2               	movf	fsr1h,w,c
 24046  018ABA  6EDA               	movwf	fsr2h,c
 24047  018ABC  0EFF               	movlw	255
 24048  018ABE  22DA               	addwfc	fsr2h,f,c
 24049  018AC0  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 24050  018AC6  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 24051  018ACC  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 24052                           
 24053                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24054  018AD2  52E5               	movf	postdec1,f,c
 24055  018AD4  52E5               	movf	postdec1,f,c
 24056  018AD6  52E5               	movf	postdec1,f,c
 24057  018AD8  0012               	return		;funcret
 24058  018ADA                     __end_of_TMR5_SetInterruptHandler:
 24059                           	opt callstack 0
 24060                           
 24061 ;; *************** function _TMR2_Initialize *****************
 24062 ;; Defined at:
 24063 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 24064 ;; Parameters:    Size  Location     Type
 24065 ;;		None
 24066 ;; Auto vars:     Size  Location     Type
 24067 ;;		None
 24068 ;; Return value:  Size  Location     Type
 24069 ;;                  1  [STACK] void 
 24070 ;; Registers used:
 24071 ;;		wreg, status,2
 24072 ;; Tracked objects:
 24073 ;;		On entry : 0/3E
 24074 ;;		On exit  : 3F/39
 24075 ;;		Unchanged: 0/0
 24076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24081 ;;Total ram usage:        0 bytes
 24082 ;; Hardware stack levels used:    1
 24083 ;; Hardware stack levels required when called:    6
 24084 ;; This function calls:
 24085 ;;		Nothing
 24086 ;; This function is called by:
 24087 ;;		_SYSTEM_Initialize
 24088 ;; This function uses a reentrant model
 24089 ;;
 24090                           
 24091                           	psect	text103
 24092  018E76                     __ptext103:
 24093                           	opt callstack 0
 24094  018E76                     _TMR2_Initialize:
 24095                           	opt callstack 23
 24096                           
 24097                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 24098                           
 24099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24100                           ;incstack = 0
 24101  018E76  0E01               	movlw	1
 24102  018E78  6EAE               	movwf	174,c	;volatile
 24103                           
 24104                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 24105  018E7A  6AAD               	clrf	173,c	;volatile
 24106                           
 24107                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 24108  018E7C  6AAF               	clrf	175,c	;volatile
 24109                           
 24110                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 24111  018E7E  0E63               	movlw	99
 24112  018E80  6EAB               	movwf	171,c	;volatile
 24113                           
 24114                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 24115  018E82  6AAA               	clrf	170,c	;volatile
 24116                           
 24117                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 24118  018E84  0139               	movlb	57	; () banked
 24119  018E86  95A4               	bcf	164,2,b	;volatile
 24120                           
 24121                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 24122  018E88  0EC0               	movlw	192
 24123  018E8A  6EAC               	movwf	172,c	;volatile
 24124                           
 24125                           ; BSR set to: 57
 24126                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24127  018E8C  0012               	return		;funcret
 24128  018E8E                     __end_of_TMR2_Initialize:
 24129                           	opt callstack 0
 24130                           
 24131 ;; *************** function _SPI1_Initialize *****************
 24132 ;; Defined at:
 24133 ;;		line 64 in file "mcc_generated_files/spi1.c"
 24134 ;; Parameters:    Size  Location     Type
 24135 ;;		None
 24136 ;; Auto vars:     Size  Location     Type
 24137 ;;		None
 24138 ;; Return value:  Size  Location     Type
 24139 ;;                  1  [STACK] void 
 24140 ;; Registers used:
 24141 ;;		wreg, status,2
 24142 ;; Tracked objects:
 24143 ;;		On entry : 3F/39
 24144 ;;		On exit  : 3F/3D
 24145 ;;		Unchanged: 0/0
 24146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24151 ;;Total ram usage:        0 bytes
 24152 ;; Hardware stack levels used:    1
 24153 ;; Hardware stack levels required when called:    6
 24154 ;; This function calls:
 24155 ;;		Nothing
 24156 ;; This function is called by:
 24157 ;;		_SYSTEM_Initialize
 24158 ;; This function uses a reentrant model
 24159 ;;
 24160                           
 24161                           	psect	text104
 24162  018E8E                     __ptext104:
 24163                           	opt callstack 0
 24164  018E8E                     _SPI1_Initialize:
 24165                           	opt callstack 23
 24166                           
 24167                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 24168                           
 24169                           ; BSR set to: 57
 24170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24171                           ;incstack = 0
 24172  018E8E  0E40               	movlw	64
 24173  018E90  013D               	movlb	61	; () banked
 24174  018E92  6F15               	movwf	21,b	;volatile
 24175                           
 24176                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 24177  018E94  0E03               	movlw	3
 24178  018E96  6F16               	movwf	22,b	;volatile
 24179                           
 24180                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 24181  018E98  0E4F               	movlw	79
 24182  018E9A  6F19               	movwf	25,b	;volatile
 24183                           
 24184                           ; BSR set to: 61
 24185                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 24186  018E9C  6B1C               	clrf	28,b	;volatile
 24187                           
 24188                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 24189  018E9E  0E83               	movlw	131
 24190  018EA0  6F14               	movwf	20,b	;volatile
 24191                           
 24192                           ; BSR set to: 61
 24193                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24194  018EA2  0012               	return		;funcret
 24195  018EA4                     __end_of_SPI1_Initialize:
 24196                           	opt callstack 0
 24197                           
 24198 ;; *************** function _PWM8_Initialize *****************
 24199 ;; Defined at:
 24200 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 24201 ;; Parameters:    Size  Location     Type
 24202 ;;		None
 24203 ;; Auto vars:     Size  Location     Type
 24204 ;;		None
 24205 ;; Return value:  Size  Location     Type
 24206 ;;                  1  [STACK] void 
 24207 ;; Registers used:
 24208 ;;		wreg, status,2
 24209 ;; Tracked objects:
 24210 ;;		On entry : 3F/39
 24211 ;;		On exit  : 3F/3F
 24212 ;;		Unchanged: 0/0
 24213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24218 ;;Total ram usage:        0 bytes
 24219 ;; Hardware stack levels used:    1
 24220 ;; Hardware stack levels required when called:    6
 24221 ;; This function calls:
 24222 ;;		Nothing
 24223 ;; This function is called by:
 24224 ;;		_SYSTEM_Initialize
 24225 ;; This function uses a reentrant model
 24226 ;;
 24227                           
 24228                           	psect	text105
 24229  018EA4                     __ptext105:
 24230                           	opt callstack 0
 24231  018EA4                     _PWM8_Initialize:
 24232                           	opt callstack 23
 24233                           
 24234                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 24235                           
 24236                           ; BSR set to: 61
 24237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24238                           ;incstack = 0
 24239  018EA4  0E80               	movlw	128
 24240  018EA6  6E62               	movwf	98,c	;volatile
 24241                           
 24242                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 24243  018EA8  6A61               	clrf	97,c	;volatile
 24244                           
 24245                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 24246  018EAA  0E40               	movlw	64
 24247  018EAC  6E60               	movwf	96,c	;volatile
 24248                           
 24249                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 24250  018EAE  013F               	movlb	63	; () banked
 24251  018EB0  515F               	movf	95,w,b	;volatile
 24252  018EB2  0B3F               	andlw	-193
 24253  018EB4  0940               	iorlw	64
 24254  018EB6  6F5F               	movwf	95,b	;volatile
 24255                           
 24256                           ; BSR set to: 63
 24257                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24258  018EB8  0012               	return		;funcret
 24259  018EBA                     __end_of_PWM8_Initialize:
 24260                           	opt callstack 0
 24261                           
 24262 ;; *************** function _PMD_Initialize *****************
 24263 ;; Defined at:
 24264 ;;		line 89 in file "mcc_generated_files/mcc.c"
 24265 ;; Parameters:    Size  Location     Type
 24266 ;;		None
 24267 ;; Auto vars:     Size  Location     Type
 24268 ;;		None
 24269 ;; Return value:  Size  Location     Type
 24270 ;;                  1  [STACK] void 
 24271 ;; Registers used:
 24272 ;;		None
 24273 ;; Tracked objects:
 24274 ;;		On entry : 3F/39
 24275 ;;		On exit  : 3F/39
 24276 ;;		Unchanged: 0/0
 24277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24282 ;;Total ram usage:        0 bytes
 24283 ;; Hardware stack levels used:    1
 24284 ;; Hardware stack levels required when called:    6
 24285 ;; This function calls:
 24286 ;;		Nothing
 24287 ;; This function is called by:
 24288 ;;		_SYSTEM_Initialize
 24289 ;; This function uses a reentrant model
 24290 ;;
 24291                           
 24292                           	psect	text106
 24293  018ED0                     __ptext106:
 24294                           	opt callstack 0
 24295  018ED0                     _PMD_Initialize:
 24296                           	opt callstack 23
 24297                           
 24298                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 24299                           
 24300                           ; BSR set to: 63
 24301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24302                           ;incstack = 0
 24303  018ED0  0139               	movlb	57	; () banked
 24304  018ED2  6BC0               	clrf	192,b	;volatile
 24305                           
 24306                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 24307  018ED4  6BC1               	clrf	193,b	;volatile
 24308                           
 24309                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 24310  018ED6  6BC2               	clrf	194,b	;volatile
 24311                           
 24312                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 24313  018ED8  6BC3               	clrf	195,b	;volatile
 24314                           
 24315                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 24316  018EDA  6BC4               	clrf	196,b	;volatile
 24317                           
 24318                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 24319  018EDC  6BC5               	clrf	197,b	;volatile
 24320                           
 24321                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 24322  018EDE  6BC6               	clrf	198,b	;volatile
 24323                           
 24324                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 24325  018EE0  6BC7               	clrf	199,b	;volatile
 24326                           
 24327                           ; BSR set to: 57
 24328                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24329  018EE2  0012               	return		;funcret
 24330  018EE4                     __end_of_PMD_Initialize:
 24331                           	opt callstack 0
 24332                           
 24333 ;; *************** function _PIN_MANAGER_Initialize *****************
 24334 ;; Defined at:
 24335 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 24336 ;; Parameters:    Size  Location     Type
 24337 ;;		None
 24338 ;; Auto vars:     Size  Location     Type
 24339 ;;		None
 24340 ;; Return value:  Size  Location     Type
 24341 ;;                  1  [STACK] void 
 24342 ;; Registers used:
 24343 ;;		wreg, status,2
 24344 ;; Tracked objects:
 24345 ;;		On entry : 3F/39
 24346 ;;		On exit  : 3F/3A
 24347 ;;		Unchanged: 0/0
 24348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24353 ;;Total ram usage:        0 bytes
 24354 ;; Hardware stack levels used:    1
 24355 ;; Hardware stack levels required when called:    6
 24356 ;; This function calls:
 24357 ;;		Nothing
 24358 ;; This function is called by:
 24359 ;;		_SYSTEM_Initialize
 24360 ;; This function uses a reentrant model
 24361 ;;
 24362                           
 24363                           	psect	text107
 24364  017B0A                     __ptext107:
 24365                           	opt callstack 0
 24366  017B0A                     _PIN_MANAGER_Initialize:
 24367                           	opt callstack 23
 24368                           
 24369                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 24370                           
 24371                           ; BSR set to: 57
 24372                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24373                           ;incstack = 0
 24374  017B0A  0E07               	movlw	7
 24375  017B0C  6EBE               	movwf	190,c	;volatile
 24376                           
 24377                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 24378  017B0E  0E80               	movlw	128
 24379  017B10  6EBD               	movwf	189,c	;volatile
 24380                           
 24381                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 24382  017B12  6ABA               	clrf	186,c	;volatile
 24383                           
 24384                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 24385  017B14  6ABF               	clrf	191,c	;volatile
 24386                           
 24387                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 24388  017B16  6ABB               	clrf	187,c	;volatile
 24389                           
 24390                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 24391  017B18  0E07               	movlw	7
 24392  017B1A  6EBC               	movwf	188,c	;volatile
 24393                           
 24394                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 24395  017B1C  6AC6               	clrf	198,c	;volatile
 24396                           
 24397                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 24398  017B1E  0E0F               	movlw	15
 24399  017B20  6EC7               	movwf	199,c	;volatile
 24400                           
 24401                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 24402  017B22  68C2               	setf	194,c	;volatile
 24403                           
 24404                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 24405  017B24  0EBF               	movlw	191
 24406  017B26  6EC3               	movwf	195,c	;volatile
 24407                           
 24408                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 24409  017B28  0E90               	movlw	144
 24410  017B2A  6EC4               	movwf	196,c	;volatile
 24411                           
 24412                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 24413  017B2C  0E0C               	movlw	12
 24414  017B2E  6EC5               	movwf	197,c	;volatile
 24415                           
 24416                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 24417  017B30  013A               	movlb	58	; () banked
 24418  017B32  6B70               	clrf	112,b	;volatile
 24419                           
 24420                           ; BSR set to: 58
 24421                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 24422  017B34  6B60               	clrf	96,b	;volatile
 24423                           
 24424                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 24425  017B36  0E3C               	movlw	60
 24426  017B38  6F50               	movwf	80,b	;volatile
 24427                           
 24428                           ; BSR set to: 58
 24429                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 24430  017B3A  6B80               	clrf	128,b	;volatile
 24431                           
 24432                           ; BSR set to: 58
 24433                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 24434  017B3C  6B90               	clrf	144,b	;volatile
 24435                           
 24436                           ; BSR set to: 58
 24437                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 24438  017B3E  6940               	setf	64,b	;volatile
 24439                           
 24440                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 24441  017B40  0E0C               	movlw	12
 24442  017B42  6F71               	movwf	113,b	;volatile
 24443                           
 24444                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 24445  017B44  0E0F               	movlw	15
 24446  017B46  6F91               	movwf	145,b	;volatile
 24447                           
 24448                           ; BSR set to: 58
 24449                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 24450  017B48  6B81               	clrf	129,b	;volatile
 24451                           
 24452                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 24453  017B4A  0E83               	movlw	131
 24454  017B4C  6F51               	movwf	81,b	;volatile
 24455                           
 24456                           ; BSR set to: 58
 24457                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 24458  017B4E  6B41               	clrf	65,b	;volatile
 24459                           
 24460                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 24461  017B50  0E97               	movlw	151
 24462  017B52  6F61               	movwf	97,b	;volatile
 24463                           
 24464                           ; BSR set to: 58
 24465                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 24466  017B54  6B82               	clrf	130,b	;volatile
 24467                           
 24468                           ; BSR set to: 58
 24469                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 24470  017B56  6B92               	clrf	146,b	;volatile
 24471                           
 24472                           ; BSR set to: 58
 24473                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 24474  017B58  6B42               	clrf	66,b	;volatile
 24475                           
 24476                           ; BSR set to: 58
 24477                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 24478  017B5A  6B52               	clrf	82,b	;volatile
 24479                           
 24480                           ; BSR set to: 58
 24481                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 24482  017B5C  6B62               	clrf	98,b	;volatile
 24483                           
 24484                           ; BSR set to: 58
 24485                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 24486  017B5E  6B72               	clrf	114,b	;volatile
 24487                           
 24488                           ; BSR set to: 58
 24489                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 24490  017B60  6943               	setf	67,b	;volatile
 24491                           
 24492                           ; BSR set to: 58
 24493                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 24494  017B62  6953               	setf	83,b	;volatile
 24495                           
 24496                           ; BSR set to: 58
 24497                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 24498  017B64  6963               	setf	99,b	;volatile
 24499                           
 24500                           ; BSR set to: 58
 24501                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 24502  017B66  6973               	setf	115,b	;volatile
 24503                           
 24504                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 24505  017B68  0E07               	movlw	7
 24506  017B6A  6F83               	movwf	131,b	;volatile
 24507                           
 24508                           ; BSR set to: 58
 24509                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 24510  017B6C  6993               	setf	147,b	;volatile
 24511                           
 24512                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24513  017B6E  0E0F               	movlw	15
 24514  017B70  6FE8               	movwf	232,b	;volatile
 24515                           
 24516                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24517  017B72  0E13               	movlw	19
 24518  017B74  6FDE               	movwf	222,b	;volatile
 24519                           
 24520                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 24521  017B76  0E16               	movlw	22
 24522  017B78  6F0E               	movwf	14,b	;volatile
 24523                           
 24524                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 24525  017B7A  0E1E               	movlw	30
 24526  017B7C  6F13               	movwf	19,b	;volatile
 24527                           
 24528                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 24529  017B7E  0E08               	movlw	8
 24530  017B80  6FC0               	movwf	192,b	;volatile
 24531                           
 24532                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 24533  017B82  0E10               	movlw	16
 24534  017B84  6F19               	movwf	25,b	;volatile
 24535                           
 24536                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 24537  017B86  0E09               	movlw	9
 24538  017B88  6FC1               	movwf	193,b	;volatile
 24539                           
 24540                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 24541  017B8A  0E1F               	movlw	31
 24542  017B8C  6F15               	movwf	21,b	;volatile
 24543                           
 24544                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 24545  017B8E  0E13               	movlw	19
 24546  017B90  6F16               	movwf	22,b	;volatile
 24547                           
 24548                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 24549  017B92  0E17               	movlw	23
 24550  017B94  6FE5               	movwf	229,b	;volatile
 24551                           
 24552                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 24553  017B96  0E14               	movlw	20
 24554  017B98  6FDF               	movwf	223,b	;volatile
 24555                           
 24556                           ; BSR set to: 58
 24557                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 24558  017B9A  0012               	return		;funcret
 24559  017B9C                     __end_of_PIN_MANAGER_Initialize:
 24560                           	opt callstack 0
 24561                           
 24562 ;; *************** function _OSCILLATOR_Initialize *****************
 24563 ;; Defined at:
 24564 ;;		line 71 in file "mcc_generated_files/mcc.c"
 24565 ;; Parameters:    Size  Location     Type
 24566 ;;		None
 24567 ;; Auto vars:     Size  Location     Type
 24568 ;;		None
 24569 ;; Return value:  Size  Location     Type
 24570 ;;                  1  [STACK] void 
 24571 ;; Registers used:
 24572 ;;		wreg, status,2
 24573 ;; Tracked objects:
 24574 ;;		On entry : 3F/3A
 24575 ;;		On exit  : 3F/39
 24576 ;;		Unchanged: 0/0
 24577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24582 ;;Total ram usage:        0 bytes
 24583 ;; Hardware stack levels used:    1
 24584 ;; Hardware stack levels required when called:    6
 24585 ;; This function calls:
 24586 ;;		Nothing
 24587 ;; This function is called by:
 24588 ;;		_SYSTEM_Initialize
 24589 ;; This function uses a reentrant model
 24590 ;;
 24591                           
 24592                           	psect	text108
 24593  018EBA                     __ptext108:
 24594                           	opt callstack 0
 24595  018EBA                     _OSCILLATOR_Initialize:
 24596                           	opt callstack 23
 24597                           
 24598                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 24599                           
 24600                           ; BSR set to: 58
 24601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24602                           ;incstack = 0
 24603  018EBA  0E20               	movlw	32
 24604  018EBC  0139               	movlb	57	; () banked
 24605  018EBE  6FD9               	movwf	217,b	;volatile
 24606                           
 24607                           ; BSR set to: 57
 24608                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 24609  018EC0  6BDB               	clrf	219,b	;volatile
 24610                           
 24611                           ; BSR set to: 57
 24612                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 24613  018EC2  6BDD               	clrf	221,b	;volatile
 24614                           
 24615                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 24616  018EC4  0E02               	movlw	2
 24617  018EC6  6FDF               	movwf	223,b	;volatile
 24618                           
 24619                           ; BSR set to: 57
 24620                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 24621  018EC8  6BDE               	clrf	222,b	;volatile
 24622  018ECA                     l171:
 24623                           
 24624                           ; BSR set to: 57
 24625                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 24626  018ECA  B1DC               	btfsc	220,0,b	;volatile
 24627  018ECC  0012               	return	
 24628  018ECE  D7FD               	goto	l171
 24629  018ED0                     __end_of_OSCILLATOR_Initialize:
 24630                           	opt callstack 0
 24631                           
 24632 ;; *************** function _INTERRUPT_Initialize *****************
 24633 ;; Defined at:
 24634 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24635 ;; Parameters:    Size  Location     Type
 24636 ;;		None
 24637 ;; Auto vars:     Size  Location     Type
 24638 ;;  state           1  [STACK] _Bool 
 24639 ;; Return value:  Size  Location     Type
 24640 ;;                  1  [STACK] void 
 24641 ;; Registers used:
 24642 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 24643 ;; Tracked objects:
 24644 ;;		On entry : 0/0
 24645 ;;		On exit  : 3F/39
 24646 ;;		Unchanged: 0/0
 24647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24652 ;;Total ram usage:        0 bytes
 24653 ;; Hardware stack levels used:    1
 24654 ;; Hardware stack levels required when called:    6
 24655 ;; This function calls:
 24656 ;;		Nothing
 24657 ;; This function is called by:
 24658 ;;		_SYSTEM_Initialize
 24659 ;; This function uses a reentrant model
 24660 ;;
 24661                           
 24662                           	psect	text109
 24663  017F78                     __ptext109:
 24664                           	opt callstack 0
 24665  017F78                     _INTERRUPT_Initialize:
 24666                           	opt callstack 0
 24667                           
 24668                           ; BSR set to: 57
 24669                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24670  017F78  52E6               	movf	postinc1,f,c
 24671                           
 24672                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 24673                           
 24674                           ;incstack = 0
 24675  017F7A  8AD2               	bsf	210,5,c	;volatile
 24676                           
 24677                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 24678  017F7C  AED2               	btfss	16338,7,c	;volatile
 24679  017F7E  D003               	goto	u8080
 24680  017F80  6A3D               	clrf	(btemp+11)^0,c
 24681  017F82  2A3D               	incf	(btemp+11)^0,f,c
 24682  017F84  D001               	goto	u8098
 24683  017F86                     u8080:
 24684  017F86  6A3D               	clrf	(btemp+11)^0,c
 24685  017F88                     u8098:
 24686                           
 24687                           ;stkvar	_state @ sp[(-1)+0]
 24688  017F88  0EFF               	movlw	-1
 24689  017F8A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24690                           
 24691                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 24692  017F90  9ED2               	bcf	16338,7,c	;volatile
 24693                           
 24694                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 24695  017F92  0E55               	movlw	85
 24696  017F94  6ED4               	movwf	212,c	;volatile
 24697                           
 24698                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 24699  017F96  0EAA               	movlw	170
 24700  017F98  6ED4               	movwf	212,c	;volatile
 24701                           
 24702                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 24703  017F9A  90D4               	bcf	212,0,c	;volatile
 24704                           
 24705                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 24706  017F9C  0138               	movlb	56	; () banked
 24707  017F9E  6B9F               	clrf	159,b	;volatile
 24708                           
 24709                           ; BSR set to: 56
 24710                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 24711  017FA0  6B9E               	clrf	158,b	;volatile
 24712                           
 24713                           ; BSR set to: 56
 24714                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 24715  017FA2  0E08               	movlw	8
 24716  017FA4  6F9D               	movwf	157,b	;volatile
 24717                           
 24718                           ; BSR set to: 56
 24719                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 24720  017FA6  0E55               	movlw	85
 24721  017FA8  6ED4               	movwf	212,c	;volatile
 24722                           
 24723                           ; BSR set to: 56
 24724                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 24725  017FAA  0EAA               	movlw	170
 24726  017FAC  6ED4               	movwf	212,c	;volatile
 24727                           
 24728                           ; BSR set to: 56
 24729                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 24730  017FAE  80D4               	bsf	212,0,c	;volatile
 24731                           
 24732                           ; BSR set to: 56
 24733                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 24734                           ;stkvar	_state @ sp[(-1)+0]
 24735  017FB0  0EFF               	movlw	-1
 24736  017FB2  B0E3               	btfsc	plusw1,0,c
 24737  017FB4  D002               	bra	u8105
 24738  017FB6  9ED2               	bcf	16338,7,c	;volatile
 24739  017FB8  D001               	bra	u8106
 24740  017FBA                     u8105:
 24741  017FBA  8ED2               	bsf	16338,7,c	;volatile
 24742  017FBC                     u8106:
 24743                           
 24744                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 24745  017FBC  0139               	movlb	57	; () banked
 24746  017FBE  8782               	bsf	130,3,b	;volatile
 24747                           
 24748                           ; BSR set to: 57
 24749                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 24750  017FC0  8382               	bsf	130,1,b	;volatile
 24751                           
 24752                           ; BSR set to: 57
 24753                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 24754  017FC2  8182               	bsf	130,0,b	;volatile
 24755                           
 24756                           ; BSR set to: 57
 24757                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 24758  017FC4  8582               	bsf	130,2,b	;volatile
 24759                           
 24760                           ; BSR set to: 57
 24761                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 24762  017FC6  8786               	bsf	134,3,b	;volatile
 24763                           
 24764                           ; BSR set to: 57
 24765                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 24766  017FC8  8586               	bsf	134,2,b	;volatile
 24767                           
 24768                           ; BSR set to: 57
 24769                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 24770  017FCA  8983               	bsf	131,4,b	;volatile
 24771                           
 24772                           ; BSR set to: 57
 24773                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 24774  017FCC  8783               	bsf	131,3,b	;volatile
 24775                           
 24776                           ; BSR set to: 57
 24777                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 24778  017FCE  8181               	bsf	129,0,b	;volatile
 24779                           
 24780                           ; BSR set to: 57
 24781                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 24782  017FD0  9185               	bcf	133,0,b	;volatile
 24783                           
 24784                           ; BSR set to: 57
 24785                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 24786  017FD2  8189               	bsf	137,0,b	;volatile
 24787                           
 24788                           ; BSR set to: 57
 24789                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 24790  017FD4  9D88               	bcf	136,6,b	;volatile
 24791                           
 24792                           ; BSR set to: 57
 24793                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 24794  017FD6  8581               	bsf	129,2,b	;volatile
 24795                           
 24796                           ; BSR set to: 57
 24797                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 24798  017FD8  8781               	bsf	129,3,b	;volatile
 24799                           
 24800                           ; BSR set to: 57
 24801                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 24802  017FDA  52E5               	movf	postdec1,f,c
 24803  017FDC  0012               	return		;funcret
 24804  017FDE                     __end_of_INTERRUPT_Initialize:
 24805                           	opt callstack 0
 24806                           
 24807 ;; *************** function _FVR_Initialize *****************
 24808 ;; Defined at:
 24809 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24810 ;; Parameters:    Size  Location     Type
 24811 ;;		None
 24812 ;; Auto vars:     Size  Location     Type
 24813 ;;		None
 24814 ;; Return value:  Size  Location     Type
 24815 ;;                  1  [STACK] void 
 24816 ;; Registers used:
 24817 ;;		wreg, status,2
 24818 ;; Tracked objects:
 24819 ;;		On entry : 3F/39
 24820 ;;		On exit  : 3F/3E
 24821 ;;		Unchanged: 0/0
 24822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24827 ;;Total ram usage:        0 bytes
 24828 ;; Hardware stack levels used:    1
 24829 ;; Hardware stack levels required when called:    6
 24830 ;; This function calls:
 24831 ;;		Nothing
 24832 ;; This function is called by:
 24833 ;;		_SYSTEM_Initialize
 24834 ;; This function uses a reentrant model
 24835 ;;
 24836                           
 24837                           	psect	text110
 24838  018F8E                     __ptext110:
 24839                           	opt callstack 0
 24840  018F8E                     _FVR_Initialize:
 24841                           	opt callstack 23
 24842                           
 24843                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 24844                           
 24845                           ; BSR set to: 57
 24846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24847                           ;incstack = 0
 24848  018F8E  0EAF               	movlw	175
 24849  018F90  013E               	movlb	62	; () banked
 24850  018F92  6FC1               	movwf	193,b	;volatile
 24851                           
 24852                           ; BSR set to: 62
 24853                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24854  018F94  0012               	return		;funcret
 24855  018F96                     __end_of_FVR_Initialize:
 24856                           	opt callstack 0
 24857                           
 24858 ;; *************** function _EXT_INT_Initialize *****************
 24859 ;; Defined at:
 24860 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 24861 ;; Parameters:    Size  Location     Type
 24862 ;;		None
 24863 ;; Auto vars:     Size  Location     Type
 24864 ;;		None
 24865 ;; Return value:  Size  Location     Type
 24866 ;;                  1  [STACK] void 
 24867 ;; Registers used:
 24868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24869 ;; Tracked objects:
 24870 ;;		On entry : 3F/3F
 24871 ;;		On exit  : 3F/39
 24872 ;;		Unchanged: 0/0
 24873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24878 ;;Total ram usage:        0 bytes
 24879 ;; Hardware stack levels used:    1
 24880 ;; Hardware stack levels required when called:    7
 24881 ;; This function calls:
 24882 ;;		_INT0_SetInterruptHandler
 24883 ;;		_INT1_SetInterruptHandler
 24884 ;; This function is called by:
 24885 ;;		_SYSTEM_Initialize
 24886 ;; This function uses a reentrant model
 24887 ;;
 24888                           
 24889                           	psect	text111
 24890  01877A                     __ptext111:
 24891                           	opt callstack 0
 24892  01877A                     _EXT_INT_Initialize:
 24893                           	opt callstack 22
 24894                           
 24895                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 24896                           
 24897                           ; BSR set to: 62
 24898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24899                           ;incstack = 0
 24900  01877A  0139               	movlb	57	; () banked
 24901  01877C  91A1               	bcf	161,0,b	;volatile
 24902                           
 24903                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 24904  01877E  90D2               	bcf	210,0,c	;volatile
 24905                           
 24906                           ; BSR set to: 57
 24907                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 24908  018780  0EB0               	movlw	low _INT0_DefaultInterruptHandler
 24909  018782  6EE6               	movwf	postinc1,c
 24910  018784  0E8F               	movlw	high _INT0_DefaultInterruptHandler
 24911  018786  6EE6               	movwf	postinc1,c
 24912  018788  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 24913  01878A  6EE6               	movwf	postinc1,c
 24914  01878C  EC81  F0C5         	call	_INT0_SetInterruptHandler	;wreg free
 24915                           
 24916                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 24917  018790  0139               	movlb	57	; () banked
 24918  018792  8191               	bsf	145,0,b	;volatile
 24919                           
 24920                           ; BSR set to: 57
 24921                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 24922  018794  91A5               	bcf	165,0,b	;volatile
 24923                           
 24924                           ; BSR set to: 57
 24925                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 24926  018796  92D2               	bcf	210,1,c	;volatile
 24927                           
 24928                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 24929  018798  0EAE               	movlw	low _INT1_DefaultInterruptHandler
 24930  01879A  6EE6               	movwf	postinc1,c
 24931  01879C  0E8F               	movlw	high _INT1_DefaultInterruptHandler
 24932  01879E  6EE6               	movwf	postinc1,c
 24933  0187A0  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 24934  0187A2  6EE6               	movwf	postinc1,c
 24935  0187A4  EC6D  F0C5         	call	_INT1_SetInterruptHandler	;wreg free
 24936                           
 24937                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 24938  0187A8  0139               	movlb	57	; () banked
 24939  0187AA  8195               	bsf	149,0,b	;volatile
 24940                           
 24941                           ; BSR set to: 57
 24942                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24943  0187AC  0012               	return		;funcret
 24944  0187AE                     __end_of_EXT_INT_Initialize:
 24945                           	opt callstack 0
 24946                           
 24947 ;; *************** function _INT1_SetInterruptHandler *****************
 24948 ;; Defined at:
 24949 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 24950 ;; Parameters:    Size  Location     Type
 24951 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24952 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 24953 ;; Auto vars:     Size  Location     Type
 24954 ;;		None
 24955 ;; Return value:  Size  Location     Type
 24956 ;;                  1  [STACK] void 
 24957 ;; Registers used:
 24958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24959 ;; Tracked objects:
 24960 ;;		On entry : 3F/39
 24961 ;;		On exit  : 0/0
 24962 ;;		Unchanged: 0/0
 24963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24968 ;;Total ram usage:        0 bytes
 24969 ;; Hardware stack levels used:    1
 24970 ;; Hardware stack levels required when called:    6
 24971 ;; This function calls:
 24972 ;;		Nothing
 24973 ;; This function is called by:
 24974 ;;		_EXT_INT_Initialize
 24975 ;;		_start_switch_handler
 24976 ;; This function uses a reentrant model
 24977 ;;
 24978                           
 24979                           	psect	text112
 24980  018ADA                     __ptext112:
 24981                           	opt callstack 0
 24982  018ADA                     _INT1_SetInterruptHandler:
 24983                           	opt callstack 23
 24984                           
 24985                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 24986                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24987                           
 24988                           ; BSR set to: 57
 24989                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24990                           ;incstack = 0
 24991  018ADA  50E1               	movf	fsr1l,w,c
 24992  018ADC  0FFD               	addlw	-3
 24993  018ADE  6ED9               	movwf	fsr2l,c
 24994  018AE0  50E2               	movf	fsr1h,w,c
 24995  018AE2  6EDA               	movwf	fsr2h,c
 24996  018AE4  0EFF               	movlw	255
 24997  018AE6  22DA               	addwfc	fsr2h,f,c
 24998  018AE8  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 24999  018AEE  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 25000  018AF4  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 25001                           
 25002                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25003  018AFA  52E5               	movf	postdec1,f,c
 25004  018AFC  52E5               	movf	postdec1,f,c
 25005  018AFE  52E5               	movf	postdec1,f,c
 25006  018B00  0012               	return		;funcret
 25007  018B02                     __end_of_INT1_SetInterruptHandler:
 25008                           	opt callstack 0
 25009                           
 25010 ;; *************** function _INT0_SetInterruptHandler *****************
 25011 ;; Defined at:
 25012 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 25013 ;; Parameters:    Size  Location     Type
 25014 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25015 ;;		 -> INT0_DefaultInterruptHandler(1), 
 25016 ;; Auto vars:     Size  Location     Type
 25017 ;;		None
 25018 ;; Return value:  Size  Location     Type
 25019 ;;                  1  [STACK] void 
 25020 ;; Registers used:
 25021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25022 ;; Tracked objects:
 25023 ;;		On entry : 3F/39
 25024 ;;		On exit  : 0/0
 25025 ;;		Unchanged: 0/0
 25026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25031 ;;Total ram usage:        0 bytes
 25032 ;; Hardware stack levels used:    1
 25033 ;; Hardware stack levels required when called:    6
 25034 ;; This function calls:
 25035 ;;		Nothing
 25036 ;; This function is called by:
 25037 ;;		_EXT_INT_Initialize
 25038 ;; This function uses a reentrant model
 25039 ;;
 25040                           
 25041                           	psect	text113
 25042  018B02                     __ptext113:
 25043                           	opt callstack 0
 25044  018B02                     _INT0_SetInterruptHandler:
 25045                           	opt callstack 22
 25046                           
 25047                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 25048                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25049                           
 25050                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25051                           ;incstack = 0
 25052  018B02  50E1               	movf	fsr1l,w,c
 25053  018B04  0FFD               	addlw	-3
 25054  018B06  6ED9               	movwf	fsr2l,c
 25055  018B08  50E2               	movf	fsr1h,w,c
 25056  018B0A  6EDA               	movwf	fsr2h,c
 25057  018B0C  0EFF               	movlw	255
 25058  018B0E  22DA               	addwfc	fsr2h,f,c
 25059  018B10  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 25060  018B16  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 25061  018B1C  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 25062                           
 25063                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25064  018B22  52E5               	movf	postdec1,f,c
 25065  018B24  52E5               	movf	postdec1,f,c
 25066  018B26  52E5               	movf	postdec1,f,c
 25067  018B28  0012               	return		;funcret
 25068  018B2A                     __end_of_INT0_SetInterruptHandler:
 25069                           	opt callstack 0
 25070                           
 25071 ;; *************** function _DMA2_Initialize *****************
 25072 ;; Defined at:
 25073 ;;		line 61 in file "mcc_generated_files/dma2.c"
 25074 ;; Parameters:    Size  Location     Type
 25075 ;;		None
 25076 ;; Auto vars:     Size  Location     Type
 25077 ;;		None
 25078 ;; Return value:  Size  Location     Type
 25079 ;;                  1  [STACK] void 
 25080 ;; Registers used:
 25081 ;;		wreg, status,2
 25082 ;; Tracked objects:
 25083 ;;		On entry : 3F/3D
 25084 ;;		On exit  : 3F/3B
 25085 ;;		Unchanged: 0/0
 25086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25091 ;;Total ram usage:        0 bytes
 25092 ;; Hardware stack levels used:    1
 25093 ;; Hardware stack levels required when called:    6
 25094 ;; This function calls:
 25095 ;;		Nothing
 25096 ;; This function is called by:
 25097 ;;		_SYSTEM_Initialize
 25098 ;; This function uses a reentrant model
 25099 ;;
 25100                           
 25101                           	psect	text114
 25102  01827E                     __ptext114:
 25103                           	opt callstack 0
 25104  01827E                     _DMA2_Initialize:
 25105                           	opt callstack 23
 25106                           
 25107                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 25108                           
 25109                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25110                           ;incstack = 0
 25111  01827E  0E00               	movlw	0
 25112  018280  013B               	movlb	59	; () banked
 25113  018282  6FD9               	movwf	217,b	;volatile
 25114  018284  0E10               	movlw	16
 25115  018286  6FDA               	movwf	218,b	;volatile
 25116  018288  0E00               	movlw	0
 25117  01828A  6FDB               	movwf	219,b	;volatile
 25118                           
 25119                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 25120  01828C  0E3F               	movlw	63
 25121  01828E  6FD1               	movwf	209,b	;volatile
 25122  018290  0EBB               	movlw	187
 25123  018292  6FD0               	movwf	208,b	;volatile
 25124                           
 25125                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 25126  018294  0E03               	movlw	3
 25127  018296  6FDD               	movwf	221,b	;volatile
 25128                           
 25129                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 25130  018298  0E00               	movlw	0
 25131  01829A  6FD8               	movwf	216,b	;volatile
 25132  01829C  0E01               	movlw	1
 25133  01829E  6FD7               	movwf	215,b	;volatile
 25134                           
 25135                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 25136  0182A0  0E00               	movlw	0
 25137  0182A2  6FCF               	movwf	207,b	;volatile
 25138  0182A4  0E01               	movlw	1
 25139  0182A6  6FCE               	movwf	206,b	;volatile
 25140                           
 25141                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 25142  0182A8  0E46               	movlw	70
 25143  0182AA  6FDF               	movwf	223,b	;volatile
 25144                           
 25145                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 25146  0182AC  0E3D               	movlw	61
 25147  0182AE  6FDE               	movwf	222,b	;volatile
 25148                           
 25149                           ; BSR set to: 59
 25150                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 25151  0182B0  0139               	movlb	57	; () banked
 25152  0182B2  97A5               	bcf	165,3,b	;volatile
 25153                           
 25154                           ; BSR set to: 57
 25155                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 25156  0182B4  95A5               	bcf	165,2,b	;volatile
 25157                           
 25158                           ; BSR set to: 57
 25159                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 25160  0182B6  9BA5               	bcf	165,5,b	;volatile
 25161                           
 25162                           ; BSR set to: 57
 25163                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 25164  0182B8  99A5               	bcf	165,4,b	;volatile
 25165                           
 25166                           ; BSR set to: 57
 25167                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 25168  0182BA  9795               	bcf	149,3,b	;volatile
 25169                           
 25170                           ; BSR set to: 57
 25171                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 25172  0182BC  9595               	bcf	149,2,b	;volatile
 25173                           
 25174                           ; BSR set to: 57
 25175                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 25176  0182BE  9B95               	bcf	149,5,b	;volatile
 25177                           
 25178                           ; BSR set to: 57
 25179                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 25180  0182C0  9995               	bcf	149,4,b	;volatile
 25181  0182C2  9ED2               	bcf	16338,7,c	;# 
 25182  0182C4  0139               	banksel	14831	;# 
 25183  0182C6  0E55               	movlw	85	;# 
 25184  0182C8  6FEF               	movwf	14831,b	;# 
 25185  0182CA  0EAA               	movlw	170	;# 
 25186  0182CC  6FEF               	movwf	14831,b	;# 
 25187  0182CE  81EF               	bsf	14831,0,b	;# 
 25188  0182D0  8ED2               	bsf	16338,7,c	;# 
 25189                           
 25190                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 25191  0182D2  013B               	movlb	59	; () banked
 25192  0182D4  6BDC               	clrf	220,b	;volatile
 25193                           
 25194                           ; BSR set to: 59
 25195                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25196  0182D6  0012               	return		;funcret
 25197  0182D8                     __end_of_DMA2_Initialize:
 25198                           	opt callstack 0
 25199                           
 25200 ;; *************** function _DMA1_Initialize *****************
 25201 ;; Defined at:
 25202 ;;		line 86 in file "mcc_generated_files/dma1.c"
 25203 ;; Parameters:    Size  Location     Type
 25204 ;;		None
 25205 ;; Auto vars:     Size  Location     Type
 25206 ;;		None
 25207 ;; Return value:  Size  Location     Type
 25208 ;;                  1  [STACK] void 
 25209 ;; Registers used:
 25210 ;;		wreg, status,2
 25211 ;; Tracked objects:
 25212 ;;		On entry : 3F/3B
 25213 ;;		On exit  : 3F/3B
 25214 ;;		Unchanged: 0/0
 25215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25220 ;;Total ram usage:        0 bytes
 25221 ;; Hardware stack levels used:    1
 25222 ;; Hardware stack levels required when called:    6
 25223 ;; This function calls:
 25224 ;;		Nothing
 25225 ;; This function is called by:
 25226 ;;		_SYSTEM_Initialize
 25227 ;; This function uses a reentrant model
 25228 ;;
 25229                           
 25230                           	psect	text115
 25231  017E3A                     __ptext115:
 25232                           	opt callstack 0
 25233  017E3A                     _DMA1_Initialize:
 25234                           	opt callstack 23
 25235                           
 25236                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 25237                           
 25238                           ; BSR set to: 59
 25239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25240                           ;incstack = 0
 25241  017E3A  0E00               	movlw	0
 25242  017E3C  013B               	movlb	59	; () banked
 25243  017E3E  6FF9               	movwf	249,b	;volatile
 25244  017E40  0E10               	movlw	16
 25245  017E42  6FFA               	movwf	250,b	;volatile
 25246  017E44  0E00               	movlw	0
 25247  017E46  6FFB               	movwf	251,b	;volatile
 25248                           
 25249                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 25250  017E48  0E3D               	movlw	61
 25251  017E4A  6FF1               	movwf	241,b	;volatile
 25252  017E4C  0E11               	movlw	17
 25253  017E4E  6FF0               	movwf	240,b	;volatile
 25254                           
 25255                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 25256  017E50  0E03               	movlw	3
 25257  017E52  6FFD               	movwf	253,b	;volatile
 25258                           
 25259                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 25260  017E54  0E00               	movlw	0
 25261  017E56  6FF8               	movwf	248,b	;volatile
 25262  017E58  0E01               	movlw	1
 25263  017E5A  6FF7               	movwf	247,b	;volatile
 25264                           
 25265                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 25266  017E5C  0E00               	movlw	0
 25267  017E5E  6FEF               	movwf	239,b	;volatile
 25268  017E60  0E01               	movlw	1
 25269  017E62  6FEE               	movwf	238,b	;volatile
 25270                           
 25271                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 25272  017E64  0E15               	movlw	21
 25273  017E66  6FFF               	movwf	255,b	;volatile
 25274                           
 25275                           ; BSR set to: 59
 25276                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 25277  017E68  6BFE               	clrf	254,b	;volatile
 25278                           
 25279                           ; BSR set to: 59
 25280                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 25281  017E6A  0139               	movlb	57	; () banked
 25282  017E6C  93A2               	bcf	162,1,b	;volatile
 25283                           
 25284                           ; BSR set to: 57
 25285                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 25286  017E6E  91A2               	bcf	162,0,b	;volatile
 25287                           
 25288                           ; BSR set to: 57
 25289                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 25290  017E70  97A2               	bcf	162,3,b	;volatile
 25291                           
 25292                           ; BSR set to: 57
 25293                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 25294  017E72  95A2               	bcf	162,2,b	;volatile
 25295                           
 25296                           ; BSR set to: 57
 25297                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 25298  017E74  8392               	bsf	146,1,b	;volatile
 25299                           
 25300                           ; BSR set to: 57
 25301                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 25302  017E76  8192               	bsf	146,0,b	;volatile
 25303                           
 25304                           ; BSR set to: 57
 25305                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 25306  017E78  8792               	bsf	146,3,b	;volatile
 25307                           
 25308                           ; BSR set to: 57
 25309                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 25310  017E7A  8592               	bsf	146,2,b	;volatile
 25311                           
 25312                           ; BSR set to: 57
 25313                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 25314  017E7C  6BF1               	clrf	241,b	;volatile
 25315                           
 25316                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 25317  017E7E  0E01               	movlw	1
 25318  017E80  6FF2               	movwf	242,b	;volatile
 25319                           
 25320                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 25321  017E82  0E04               	movlw	4
 25322  017E84  6FF3               	movwf	243,b	;volatile
 25323                           
 25324                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 25325  017E86  0E02               	movlw	2
 25326  017E88  6FF4               	movwf	244,b	;volatile
 25327                           
 25328                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 25329  017E8A  0E03               	movlw	3
 25330  017E8C  6FF7               	movwf	247,b	;volatile
 25331  017E8E  9ED2               	bcf	16338,7,c	;# 
 25332  017E90  0139               	banksel	14831	;# 
 25333  017E92  0E55               	movlw	85	;# 
 25334  017E94  6FEF               	movwf	14831,b	;# 
 25335  017E96  0EAA               	movlw	170	;# 
 25336  017E98  6FEF               	movwf	14831,b	;# 
 25337  017E9A  81EF               	bsf	14831,0,b	;# 
 25338  017E9C  8ED2               	bsf	16338,7,c	;# 
 25339                           
 25340                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 25341  017E9E  013B               	movlb	59	; () banked
 25342  017EA0  6BFC               	clrf	252,b	;volatile
 25343                           
 25344                           ; BSR set to: 59
 25345                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25346  017EA2  0012               	return		;funcret
 25347  017EA4                     __end_of_DMA1_Initialize:
 25348                           	opt callstack 0
 25349                           
 25350 ;; *************** function _CLKREF_Initialize *****************
 25351 ;; Defined at:
 25352 ;;		line 58 in file "mcc_generated_files/clkref.c"
 25353 ;; Parameters:    Size  Location     Type
 25354 ;;		None
 25355 ;; Auto vars:     Size  Location     Type
 25356 ;;		None
 25357 ;; Return value:  Size  Location     Type
 25358 ;;                  1  [STACK] void 
 25359 ;; Registers used:
 25360 ;;		wreg, status,2
 25361 ;; Tracked objects:
 25362 ;;		On entry : 3F/3B
 25363 ;;		On exit  : 3F/3C
 25364 ;;		Unchanged: 0/0
 25365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25370 ;;Total ram usage:        0 bytes
 25371 ;; Hardware stack levels used:    1
 25372 ;; Hardware stack levels required when called:    6
 25373 ;; This function calls:
 25374 ;;		Nothing
 25375 ;; This function is called by:
 25376 ;;		_SYSTEM_Initialize
 25377 ;; This function uses a reentrant model
 25378 ;;
 25379                           
 25380                           	psect	text116
 25381  018F42                     __ptext116:
 25382                           	opt callstack 0
 25383  018F42                     _CLKREF_Initialize:
 25384                           	opt callstack 23
 25385                           
 25386                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 25387                           
 25388                           ; BSR set to: 59
 25389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25390                           ;incstack = 0
 25391  018F42  013C               	movlb	60	; () banked
 25392  018F44  6BE6               	clrf	230,b	;volatile
 25393                           
 25394                           ; BSR set to: 60
 25395                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 25396  018F46  0E94               	movlw	148
 25397  018F48  6FE5               	movwf	229,b	;volatile
 25398                           
 25399                           ; BSR set to: 60
 25400                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25401  018F4A  0012               	return		;funcret
 25402  018F4C                     __end_of_CLKREF_Initialize:
 25403                           	opt callstack 0
 25404                           
 25405 ;; *************** function _ADCC_Initialize *****************
 25406 ;; Defined at:
 25407 ;;		line 65 in file "mcc_generated_files/adcc.c"
 25408 ;; Parameters:    Size  Location     Type
 25409 ;;		None
 25410 ;; Auto vars:     Size  Location     Type
 25411 ;;		None
 25412 ;; Return value:  Size  Location     Type
 25413 ;;                  1  [STACK] void 
 25414 ;; Registers used:
 25415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25416 ;; Tracked objects:
 25417 ;;		On entry : 3F/3E
 25418 ;;		On exit  : 0/0
 25419 ;;		Unchanged: 0/0
 25420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25425 ;;Total ram usage:        0 bytes
 25426 ;; Hardware stack levels used:    1
 25427 ;; Hardware stack levels required when called:    7
 25428 ;; This function calls:
 25429 ;;		_ADCC_SetADIInterruptHandler
 25430 ;;		_ADCC_SetADTIInterruptHandler
 25431 ;; This function is called by:
 25432 ;;		_SYSTEM_Initialize
 25433 ;; This function uses a reentrant model
 25434 ;;
 25435                           
 25436                           	psect	text117
 25437  017EA4                     __ptext117:
 25438                           	opt callstack 0
 25439  017EA4                     _ADCC_Initialize:
 25440                           	opt callstack 22
 25441                           
 25442                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 25443                           
 25444                           ; BSR set to: 60
 25445                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25446                           ;incstack = 0
 25447  017EA4  013E               	movlb	62	; () banked
 25448  017EA6  6BDE               	clrf	222,b	;volatile
 25449                           
 25450                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 25451  017EA8  6BDF               	clrf	223,b	;volatile
 25452                           
 25453                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 25454  017EAA  6BE0               	clrf	224,b	;volatile
 25455                           
 25456                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 25457  017EAC  6BE1               	clrf	225,b	;volatile
 25458                           
 25459                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 25460  017EAE  6BE4               	clrf	228,b	;volatile
 25461                           
 25462                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 25463  017EB0  6BE5               	clrf	229,b	;volatile
 25464                           
 25465                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 25466  017EB2  6BEA               	clrf	234,b	;volatile
 25467                           
 25468                           ; BSR set to: 62
 25469                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 25470  017EB4  0E40               	movlw	64
 25471  017EB6  6FEC               	movwf	236,b	;volatile
 25472                           
 25473                           ; BSR set to: 62
 25474                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 25475  017EB8  6BF1               	clrf	241,b	;volatile
 25476                           
 25477                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 25478  017EBA  0E20               	movlw	32
 25479  017EBC  6FF3               	movwf	243,b	;volatile
 25480                           
 25481                           ; BSR set to: 62
 25482                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 25483  017EBE  6BF4               	clrf	244,b	;volatile
 25484                           
 25485                           ; BSR set to: 62
 25486                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 25487  017EC0  6BF5               	clrf	245,b	;volatile
 25488                           
 25489                           ; BSR set to: 62
 25490                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 25491  017EC2  6BF6               	clrf	246,b	;volatile
 25492                           
 25493                           ; BSR set to: 62
 25494                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 25495  017EC4  6BF7               	clrf	247,b	;volatile
 25496                           
 25497                           ; BSR set to: 62
 25498                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 25499  017EC6  6BF9               	clrf	249,b	;volatile
 25500                           
 25501                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 25502  017EC8  0E5B               	movlw	91
 25503  017ECA  6FFA               	movwf	250,b	;volatile
 25504                           
 25505                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 25506  017ECC  0E27               	movlw	39
 25507  017ECE  6FFB               	movwf	251,b	;volatile
 25508                           
 25509                           ; BSR set to: 62
 25510                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 25511  017ED0  6BFC               	clrf	252,b	;volatile
 25512                           
 25513                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25514  017ED2  0E02               	movlw	2
 25515  017ED4  6FFD               	movwf	253,b	;volatile
 25516                           
 25517                           ; BSR set to: 62
 25518                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 25519  017ED6  6BFE               	clrf	254,b	;volatile
 25520                           
 25521                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 25522  017ED8  0E07               	movlw	7
 25523  017EDA  6FFF               	movwf	255,b	;volatile
 25524                           
 25525                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 25526  017EDC  0E84               	movlw	132
 25527  017EDE  6FF8               	movwf	248,b	;volatile
 25528                           
 25529                           ; BSR set to: 62
 25530                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 25531  017EE0  0139               	movlb	57	; () banked
 25532  017EE2  95A1               	bcf	161,2,b	;volatile
 25533                           
 25534                           ; BSR set to: 57
 25535                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 25536  017EE4  8591               	bsf	145,2,b	;volatile
 25537                           
 25538                           ; BSR set to: 57
 25539                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 25540  017EE6  0EB2               	movlw	low _ADCC_DefaultInterruptHandler
 25541  017EE8  6EE6               	movwf	postinc1,c
 25542  017EEA  0E8F               	movlw	high _ADCC_DefaultInterruptHandler
 25543  017EEC  6EE6               	movwf	postinc1,c
 25544  017EEE  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25545  017EF0  6EE6               	movwf	postinc1,c
 25546  017EF2  ECA9  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
 25547                           
 25548                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 25549  017EF6  0139               	movlb	57	; () banked
 25550  017EF8  97A1               	bcf	161,3,b	;volatile
 25551                           
 25552                           ; BSR set to: 57
 25553                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 25554  017EFA  8791               	bsf	145,3,b	;volatile
 25555                           
 25556                           ; BSR set to: 57
 25557                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 25558  017EFC  0EB2               	movlw	low _ADCC_DefaultInterruptHandler
 25559  017EFE  6EE6               	movwf	postinc1,c
 25560  017F00  0E8F               	movlw	high _ADCC_DefaultInterruptHandler
 25561  017F02  6EE6               	movwf	postinc1,c
 25562  017F04  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25563  017F06  6EE6               	movwf	postinc1,c
 25564  017F08  EC95  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 25565                           
 25566                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25567  017F0C  0012               	return		;funcret
 25568  017F0E                     __end_of_ADCC_Initialize:
 25569                           	opt callstack 0
 25570                           
 25571 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 25572 ;; Defined at:
 25573 ;;		line 336 in file "mcc_generated_files/adcc.c"
 25574 ;; Parameters:    Size  Location     Type
 25575 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25576 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 25577 ;; Auto vars:     Size  Location     Type
 25578 ;;		None
 25579 ;; Return value:  Size  Location     Type
 25580 ;;                  1  [STACK] void 
 25581 ;; Registers used:
 25582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25583 ;; Tracked objects:
 25584 ;;		On entry : 0/0
 25585 ;;		On exit  : 0/0
 25586 ;;		Unchanged: 0/0
 25587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25592 ;;Total ram usage:        0 bytes
 25593 ;; Hardware stack levels used:    1
 25594 ;; Hardware stack levels required when called:    6
 25595 ;; This function calls:
 25596 ;;		Nothing
 25597 ;; This function is called by:
 25598 ;;		_ADCC_Initialize
 25599 ;;		_start_adc_scan
 25600 ;; This function uses a reentrant model
 25601 ;;
 25602                           
 25603                           	psect	text118
 25604  018B2A                     __ptext118:
 25605                           	opt callstack 0
 25606  018B2A                     _ADCC_SetADTIInterruptHandler:
 25607                           	opt callstack 23
 25608                           
 25609                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 25610                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25611                           
 25612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25613                           ;incstack = 0
 25614  018B2A  50E1               	movf	fsr1l,w,c
 25615  018B2C  0FFD               	addlw	-3
 25616  018B2E  6ED9               	movwf	fsr2l,c
 25617  018B30  50E2               	movf	fsr1h,w,c
 25618  018B32  6EDA               	movwf	fsr2h,c
 25619  018B34  0EFF               	movlw	255
 25620  018B36  22DA               	addwfc	fsr2h,f,c
 25621  018B38  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 25622  018B3E  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 25623  018B44  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 25624                           
 25625                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 25626  018B4A  52E5               	movf	postdec1,f,c
 25627  018B4C  52E5               	movf	postdec1,f,c
 25628  018B4E  52E5               	movf	postdec1,f,c
 25629  018B50  0012               	return		;funcret
 25630  018B52                     __end_of_ADCC_SetADTIInterruptHandler:
 25631                           	opt callstack 0
 25632                           
 25633 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 25634 ;; Defined at:
 25635 ;;		line 323 in file "mcc_generated_files/adcc.c"
 25636 ;; Parameters:    Size  Location     Type
 25637 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25638 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 25639 ;; Auto vars:     Size  Location     Type
 25640 ;;		None
 25641 ;; Return value:  Size  Location     Type
 25642 ;;                  1  [STACK] void 
 25643 ;; Registers used:
 25644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25645 ;; Tracked objects:
 25646 ;;		On entry : 6/0
 25647 ;;		On exit  : 0/0
 25648 ;;		Unchanged: 0/0
 25649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25654 ;;Total ram usage:        0 bytes
 25655 ;; Hardware stack levels used:    1
 25656 ;; Hardware stack levels required when called:    6
 25657 ;; This function calls:
 25658 ;;		Nothing
 25659 ;; This function is called by:
 25660 ;;		_ADCC_Initialize
 25661 ;;		_start_adc_scan
 25662 ;; This function uses a reentrant model
 25663 ;;
 25664                           
 25665                           	psect	text119
 25666  018B52                     __ptext119:
 25667                           	opt callstack 0
 25668  018B52                     _ADCC_SetADIInterruptHandler:
 25669                           	opt callstack 23
 25670                           
 25671                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 25672                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25673                           
 25674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25675                           ;incstack = 0
 25676  018B52  50E1               	movf	fsr1l,w,c
 25677  018B54  0FFD               	addlw	-3
 25678  018B56  6ED9               	movwf	fsr2l,c
 25679  018B58  50E2               	movf	fsr1h,w,c
 25680  018B5A  6EDA               	movwf	fsr2h,c
 25681  018B5C  0EFF               	movlw	255
 25682  018B5E  22DA               	addwfc	fsr2h,f,c
 25683  018B60  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 25684  018B66  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 25685  018B6C  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 25686                           
 25687                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25688  018B72  52E5               	movf	postdec1,f,c
 25689  018B74  52E5               	movf	postdec1,f,c
 25690  018B76  52E5               	movf	postdec1,f,c
 25691  018B78  0012               	return		;funcret
 25692  018B7A                     __end_of_ADCC_SetADIInterruptHandler:
 25693                           	opt callstack 0
 25694                           
 25695 ;; *************** function _INT1_ISR *****************
 25696 ;; Defined at:
 25697 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 25698 ;; Parameters:    Size  Location     Type
 25699 ;;		None
 25700 ;; Auto vars:     Size  Location     Type
 25701 ;;		None
 25702 ;; Return value:  Size  Location     Type
 25703 ;;                  1    wreg      void 
 25704 ;; Registers used:
 25705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 25706 ;; Tracked objects:
 25707 ;;		On entry : 0/0
 25708 ;;		On exit  : 0/0
 25709 ;;		Unchanged: 0/0
 25710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25713 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25714 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25715 ;;Total ram usage:        4 bytes
 25716 ;; Hardware stack levels used:    1
 25717 ;; Hardware stack levels required when called:    5
 25718 ;; This function calls:
 25719 ;;		_INT1_CallBack
 25720 ;; This function is called by:
 25721 ;;		Interrupt level 1
 25722 ;; This function uses a non-reentrant model
 25723 ;;
 25724                           
 25725                           	psect	text120
 25726  018628                     __ptext120:
 25727                           	opt callstack 0
 25728  018628                     _INT1_ISR:
 25729                           	opt callstack 12
 25730                           
 25731                           ;incstack = 0
 25732  018628  006F FF60  F0F6    	movff	status,??_INT1_ISR
 25733  01862E  0060  F0C8  F0F7   	movff	btemp,??_INT1_ISR+1
 25734  018634  0060  F0F0  F0F8   	movff	btemp+10,??_INT1_ISR+2
 25735  01863A  0060  F0F4  F0F9   	movff	btemp+11,??_INT1_ISR+3
 25736  018640  EE16  F00B         	lfsr	1,___intlo_sp
 25737                           
 25738                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 25739  018644  0139               	movlb	57	; () banked
 25740  018646  91A5               	bcf	165,0,b	;volatile
 25741                           
 25742                           ; BSR set to: 57
 25743                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 25744  018648  EC7B  F0C6         	call	_INT1_CallBack	;wreg free
 25745  01864C  0060  F3E4  F03D   	movff	??_INT1_ISR+3,btemp+11
 25746  018652  0060  F3E0  F03C   	movff	??_INT1_ISR+2,btemp+10
 25747  018658  0060  F3DC  F032   	movff	??_INT1_ISR+1,btemp
 25748  01865E  0060  F3DB  FFD8   	movff	??_INT1_ISR,status
 25749  018664  0011               	retfie		f
 25750  018666                     __end_of_INT1_ISR:
 25751                           	opt callstack 0
 25752                           
 25753 ;; *************** function _INT1_CallBack *****************
 25754 ;; Defined at:
 25755 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 25756 ;; Parameters:    Size  Location     Type
 25757 ;;		None
 25758 ;; Auto vars:     Size  Location     Type
 25759 ;;		None
 25760 ;; Return value:  Size  Location     Type
 25761 ;;                  1  [STACK] void 
 25762 ;; Registers used:
 25763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 25764 ;; Tracked objects:
 25765 ;;		On entry : 3F/39
 25766 ;;		On exit  : 0/0
 25767 ;;		Unchanged: 0/0
 25768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25773 ;;Total ram usage:        0 bytes
 25774 ;; Hardware stack levels used:    1
 25775 ;; Hardware stack levels required when called:    4
 25776 ;; This function calls:
 25777 ;;		Absolute function
 25778 ;;		_INT1_DefaultInterruptHandler
 25779 ;;		_switch_handler
 25780 ;; This function is called by:
 25781 ;;		_INT1_ISR
 25782 ;; This function uses a reentrant model
 25783 ;;
 25784                           
 25785                           	psect	text121
 25786  018CF6                     __ptext121:
 25787                           	opt callstack 0
 25788  018CF6                     _INT1_CallBack:
 25789                           	opt callstack 12
 25790                           
 25791                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 25792                           
 25793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25794                           ;incstack = 0
 25795  018CF6  5013               	movf	_INT1_InterruptHandler^0,w,c
 25796  018CF8  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 25797  018CFA  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 25798  018CFC  B4D8               	btfsc	status,2,c
 25799  018CFE  0012               	return	
 25800                           
 25801                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 25802  018D00  D801               	call	u853_28
 25803  018D02  0012               	return	
 25804  018D04                     u853_28:
 25805  018D04  0005               	push	
 25806  018D06  6EFA               	movwf	pclath,c
 25807  018D08  5013               	movf	_INT1_InterruptHandler^0,w,c
 25808  018D0A  6EFD               	movwf	tosl,c
 25809  018D0C  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 25810  018D0E  6EFE               	movwf	tosh,c
 25811  018D10  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 25812  018D12  6EFF               	movwf	tosu,c
 25813  018D14  50FA               	movf	pclath,w,c
 25814  018D16  0012               	return		;indir
 25815  018D18                     __end_of_INT1_CallBack:
 25816                           	opt callstack 0
 25817                           
 25818 ;; *************** function _INT1_DefaultInterruptHandler *****************
 25819 ;; Defined at:
 25820 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 25821 ;; Parameters:    Size  Location     Type
 25822 ;;		None
 25823 ;; Auto vars:     Size  Location     Type
 25824 ;;		None
 25825 ;; Return value:  Size  Location     Type
 25826 ;;                  1  [STACK] void 
 25827 ;; Registers used:
 25828 ;;		None
 25829 ;; Tracked objects:
 25830 ;;		On entry : 0/39
 25831 ;;		On exit  : 0/0
 25832 ;;		Unchanged: 0/0
 25833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25838 ;;Total ram usage:        0 bytes
 25839 ;; Hardware stack levels used:    1
 25840 ;; Hardware stack levels required when called:    3
 25841 ;; This function calls:
 25842 ;;		Nothing
 25843 ;; This function is called by:
 25844 ;;		_EXT_INT_Initialize
 25845 ;;		_INT1_CallBack
 25846 ;; This function uses a reentrant model
 25847 ;;
 25848                           
 25849                           	psect	text122
 25850  018FAE                     __ptext122:
 25851                           	opt callstack 0
 25852  018FAE                     _INT1_DefaultInterruptHandler:
 25853                           	opt callstack 12
 25854                           
 25855                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25856                           
 25857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25858                           ;incstack = 0
 25859  018FAE  0012               	return		;funcret
 25860  018FB0                     __end_of_INT1_DefaultInterruptHandler:
 25861                           	opt callstack 0
 25862                           
 25863 ;; *************** function _switch_handler *****************
 25864 ;; Defined at:
 25865 ;;		line 58 in file "dio.c"
 25866 ;; Parameters:    Size  Location     Type
 25867 ;;		None
 25868 ;; Auto vars:     Size  Location     Type
 25869 ;;  i               1  [STACK] unsigned char 
 25870 ;;  sw_value        1  [STACK] unsigned char 
 25871 ;; Return value:  Size  Location     Type
 25872 ;;                  1  [STACK] void 
 25873 ;; Registers used:
 25874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 25875 ;; Tracked objects:
 25876 ;;		On entry : 0/39
 25877 ;;		On exit  : 0/0
 25878 ;;		Unchanged: 0/0
 25879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25884 ;;Total ram usage:        0 bytes
 25885 ;; Hardware stack levels used:    1
 25886 ;; Hardware stack levels required when called:    3
 25887 ;; This function calls:
 25888 ;;		Nothing
 25889 ;; This function is called by:
 25890 ;;		_start_switch_handler
 25891 ;;		_INT1_CallBack
 25892 ;; This function uses a reentrant model
 25893 ;;
 25894                           
 25895                           	psect	text123
 25896  0168CE                     __ptext123:
 25897                           	opt callstack 0
 25898  0168CE                     _switch_handler:
 25899                           	opt callstack 0
 25900                           
 25901                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25902  0168CE  52E6               	movf	postinc1,f,c
 25903  0168D0  52E6               	movf	postinc1,f,c
 25904                           
 25905                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 25906                           ;stkvar	_i @ sp[(-2)+0]
 25907                           
 25908                           ;incstack = 0
 25909  0168D2  0EFE               	movlw	-2
 25910  0168D4  6AE3               	clrf	plusw1,c
 25911  0168D6  9EBD               	bcf	189,7,c	;volatile
 25912  0168D8  82BE               	bsf	190,1,c	;volatile
 25913                           
 25914                           ;dio.c: 72:  __nop();
 25915  0168DA  F000               	nop	
 25916                           
 25917                           ;dio.c: 73:  __nop();
 25918  0168DC  F000               	nop	
 25919                           
 25920                           ;dio.c: 74:  __nop();
 25921  0168DE  F000               	nop	
 25922  0168E0  D019               	goto	l8960
 25923  0168E2                     l8948:
 25924                           
 25925                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 25926  0168E2  A6CF               	btfss	207,3,c	;volatile
 25927  0168E4  D011               	goto	u839_20
 25928  0168E6  D00D               	goto	u839_21
 25929  0168E8                     u836_28:
 25930                           
 25931                           ;stkvar	_sw_value @ sp[(-2)+1]
 25932  0168E8  0EFF               	movlw	-1
 25933  0168EA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 25934                           
 25935                           ;dio.c: 80:    break;
 25936  0168F0  D027               	goto	l8962
 25937  0168F2                     l8950:
 25938                           
 25939                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 25940  0168F2  A4CF               	btfss	207,2,c	;volatile
 25941  0168F4  D009               	goto	u839_20
 25942  0168F6  D005               	goto	u839_21
 25943  0168F8                     l8952:
 25944                           
 25945                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 25946  0168F8  A2CF               	btfss	207,1,c	;volatile
 25947  0168FA  D006               	goto	u839_20
 25948  0168FC  D002               	goto	u839_21
 25949  0168FE                     l8954:
 25950                           
 25951                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 25952  0168FE  A0CF               	btfss	207,0,c	;volatile
 25953  016900  D003               	goto	u839_20
 25954  016902                     u839_21:
 25955  016902  6A3D               	clrf	(btemp+11)^0,c
 25956  016904  2A3D               	incf	(btemp+11)^0,f,c
 25957  016906  D7F0               	goto	u836_28
 25958  016908                     u839_20:
 25959  016908  6A3D               	clrf	(btemp+11)^0,c
 25960  01690A  D7EE               	goto	u836_28
 25961  01690C                     l8956:
 25962                           
 25963                           ;dio.c: 91:    sw_value = 1;
 25964                           ;stkvar	_sw_value @ sp[(-2)+1]
 25965  01690C  0EFF               	movlw	-1
 25966  01690E  6AE3               	clrf	plusw1,c
 25967  016910  2AE3               	incf	plusw1,f,c
 25968                           
 25969                           ;dio.c: 92:    break;
 25970  016912  D016               	goto	l8962
 25971  016914                     l8960:
 25972                           
 25973                           ;stkvar	_i @ sp[(-2)+0]
 25974  016914  0EFE               	movlw	-2
 25975  016916  50E3               	movf	plusw1,w,c
 25976  016918  6E3C               	movwf	(btemp+10)^0,c
 25977  01691A  6A3D               	clrf	(btemp+11)^0,c
 25978                           
 25979                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25980                           ; Switch size 1, requested type "simple"
 25981                           ; Number of cases is 1, Range of values is 0 to 0
 25982                           ; switch strategies available:
 25983                           ; Name         Instructions Cycles
 25984                           ; simple_byte            4     3 (average)
 25985                           ;	Chosen strategy is simple_byte
 25986  01691C  503D               	movf	(btemp+11)^0,w,c
 25987  01691E  0A00               	xorlw	0	; case 0
 25988  016920  A4D8               	btfss	status,2,c
 25989  016922  D7F4               	goto	l8956
 25990                           
 25991                           ; Switch size 1, requested type "simple"
 25992                           ; Number of cases is 4, Range of values is 0 to 3
 25993                           ; switch strategies available:
 25994                           ; Name         Instructions Cycles
 25995                           ; simple_byte           13     7 (average)
 25996                           ;	Chosen strategy is simple_byte
 25997  016924  503C               	movf	(btemp+10)^0,w,c
 25998  016926  0A00               	xorlw	0	; case 0
 25999  016928  B4D8               	btfsc	status,2,c
 26000  01692A  D7E9               	goto	l8954
 26001  01692C  0A01               	xorlw	1	; case 1
 26002  01692E  B4D8               	btfsc	status,2,c
 26003  016930  D7E3               	goto	l8952
 26004  016932  0A03               	xorlw	3	; case 2
 26005  016934  B4D8               	btfsc	status,2,c
 26006  016936  D7DD               	goto	l8950
 26007  016938  0A01               	xorlw	1	; case 3
 26008  01693A  B4D8               	btfsc	status,2,c
 26009  01693C  D7D2               	goto	l8948
 26010  01693E  D7E6               	goto	l8956
 26011  016940                     l8962:
 26012                           
 26013                           ;dio.c: 96:   if (sw_value) {
 26014                           ;stkvar	_sw_value @ sp[(-2)+1]
 26015  016940  0EFF               	movlw	-1
 26016  016942  50E3               	movf	plusw1,w,c
 26017  016944  B4D8               	btfsc	status,2,c
 26018  016946  D014               	goto	l8968
 26019                           
 26020                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 26021                           ;stkvar	_i @ sp[(-2)+0]
 26022  016948  0EFE               	movlw	-2
 26023  01694A  50E3               	movf	plusw1,w,c
 26024  01694C  0D05               	mullw	5
 26025  01694E  50F3               	movf	243,w,c
 26026  016950  0F60               	addlw	low _S
 26027  016952  6ED9               	movwf	fsr2l,c
 26028  016954  6ADA               	clrf	fsr2h,c
 26029  016956  04DE               	decf	postinc2,w,c
 26030  016958  A4D8               	btfss	status,2,c
 26031  01695A  D041               	goto	l8976
 26032                           
 26033                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 26034                           ;stkvar	_i @ sp[(-2)+0]
 26035  01695C  0EFE               	movlw	-2
 26036  01695E  50E3               	movf	plusw1,w,c
 26037  016960  0D05               	mullw	5
 26038  016962  50F3               	movf	243,w,c
 26039  016964  0F60               	addlw	low _S
 26040  016966  6ED9               	movwf	fsr2l,c
 26041  016968  6ADA               	clrf	fsr2h,c
 26042  01696A  0E00               	movlw	0
 26043  01696C  6EDF               	movwf	indf2,c
 26044  01696E  D037               	goto	l8976
 26045  016970                     l8968:
 26046                           
 26047                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 26048                           ;stkvar	_i @ sp[(-2)+0]
 26049  016970  0EFE               	movlw	-2
 26050  016972  50E3               	movf	plusw1,w,c
 26051  016974  0D05               	mullw	5
 26052  016976  50F3               	movf	243,w,c
 26053  016978  0F60               	addlw	low _S
 26054  01697A  6ED9               	movwf	fsr2l,c
 26055  01697C  6ADA               	clrf	fsr2h,c
 26056  01697E  50DF               	movf	indf2,w,c
 26057  016980  A4D8               	btfss	status,2,c
 26058  016982  D02D               	goto	l8976
 26059                           
 26060                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 26061                           ;stkvar	_i @ sp[(-2)+0]
 26062  016984  0EFE               	movlw	-2
 26063  016986  50E3               	movf	plusw1,w,c
 26064  016988  0D05               	mullw	5
 26065  01698A  50F3               	movf	243,w,c
 26066  01698C  0F60               	addlw	low _S
 26067  01698E  6ED9               	movwf	fsr2l,c
 26068  016990  6ADA               	clrf	fsr2h,c
 26069  016992  0E01               	movlw	1
 26070  016994  6EDF               	movwf	indf2,c
 26071                           
 26072                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 26073  016996  EE20  F2B8         	lfsr	2,_V+184	;volatile
 26074                           
 26075                           ;stkvar	_i @ sp[(-2)+0]
 26076  01699A  0EFE               	movlw	-2
 26077  01699C  50E3               	movf	plusw1,w,c
 26078  01699E  0D05               	mullw	5
 26079  0169A0  50F3               	movf	243,w,c
 26080  0169A2  0F61               	addlw	low (_S+1)
 26081  0169A4  6EE9               	movwf	fsr0l,c
 26082  0169A6  6AEA               	clrf	fsr0h,c
 26083  0169A8  006F FF7B FFEE     	movff	postinc2,postinc0
 26084  0169AE  006F FF7B FFEE     	movff	postinc2,postinc0
 26085  0169B4  006F FF7B FFEE     	movff	postinc2,postinc0
 26086  0169BA  006F FF7B FFEE     	movff	postinc2,postinc0
 26087                           
 26088                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 26089                           ;stkvar	_i @ sp[(-2)+0]
 26090  0169C0  0EFE               	movlw	-2
 26091  0169C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 26092  0169C8  0E01               	movlw	1
 26093  0169CA  6E3C               	movwf	(btemp+10)^0,c
 26094  0169CC  2A3D               	incf	(btemp+11)^0,f,c
 26095  0169CE  D002               	goto	u843_24
 26096  0169D0                     u843_25:
 26097  0169D0  90D8               	bcf	status,0,c
 26098  0169D2  363C               	rlcf	(btemp+10)^0,f,c
 26099  0169D4                     u843_24:
 26100  0169D4  2E3D               	decfsz	(btemp+11)^0,f,c
 26101  0169D6  D7FC               	goto	u843_25
 26102  0169D8  503C               	movf	(btemp+10)^0,w,c
 26103  0169DA  0100               	movlb	0	; () banked
 26104  0169DC  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 26105  0169DE                     l8976:
 26106                           
 26107                           ;dio.c: 107:  } while (++i < 4);
 26108                           ;stkvar	_i @ sp[(-2)+0]
 26109  0169DE  0EFE               	movlw	-2
 26110  0169E0  2AE3               	incf	plusw1,f,c
 26111  0169E2  0EFE               	movlw	-2
 26112  0169E4  006F FF8C  F032    	movff	plusw1,btemp
 26113  0169EA  0E03               	movlw	3
 26114  0169EC  6432               	cpfsgt	btemp^0,c
 26115  0169EE  D792               	goto	l8960
 26116                           
 26117                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 26118  0169F0  92BE               	bcf	190,1,c	;volatile
 26119  0169F2  A4BE               	btfss	190,2,c	;volatile
 26120  0169F4  D002               	goto	u845_20
 26121  0169F6  0E01               	movlw	1
 26122  0169F8  D001               	goto	u845_26
 26123  0169FA                     u845_20:
 26124  0169FA  0E00               	movlw	0
 26125  0169FC                     u845_26:
 26126  0169FC  0AFF               	xorlw	255
 26127  0169FE  6E3D               	movwf	(btemp+11)^0,c
 26128  016A00  463D               	rlncf	(btemp+11)^0,f,c
 26129  016A02  463D               	rlncf	(btemp+11)^0,f,c
 26130  016A04  50BE               	movf	190,w,c	;volatile
 26131  016A06  183D               	xorwf	(btemp+11)^0,w,c
 26132  016A08  0BFB               	andlw	-5
 26133  016A0A  183D               	xorwf	(btemp+11)^0,w,c
 26134  016A0C  6EBE               	movwf	190,c	;volatile
 26135  016A0E  8EBD               	bsf	189,7,c	;volatile
 26136                           
 26137                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 26138  016A10  52E5               	movf	postdec1,f,c
 26139  016A12  52E5               	movf	postdec1,f,c
 26140  016A14  0012               	return		;funcret
 26141  016A16                     __end_of_switch_handler:
 26142                           	opt callstack 0
 26143                           
 26144 ;; *************** function _TMR5_ISR *****************
 26145 ;; Defined at:
 26146 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 26147 ;; Parameters:    Size  Location     Type
 26148 ;;		None
 26149 ;; Auto vars:     Size  Location     Type
 26150 ;;		None
 26151 ;; Return value:  Size  Location     Type
 26152 ;;                  1    wreg      void 
 26153 ;; Registers used:
 26154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 26155 ;; Tracked objects:
 26156 ;;		On entry : 0/0
 26157 ;;		On exit  : 0/0
 26158 ;;		Unchanged: 0/0
 26159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26162 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26163 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26164 ;;Total ram usage:        4 bytes
 26165 ;; Hardware stack levels used:    1
 26166 ;; Hardware stack levels required when called:    5
 26167 ;; This function calls:
 26168 ;;		_TMR5_CallBack
 26169 ;;		_TMR5_WriteTimer
 26170 ;; This function is called by:
 26171 ;;		Interrupt level 1
 26172 ;; This function uses a non-reentrant model
 26173 ;;
 26174                           
 26175                           	psect	text124
 26176  0181C8                     __ptext124:
 26177                           	opt callstack 0
 26178  0181C8                     _TMR5_ISR:
 26179                           	opt callstack 12
 26180                           
 26181                           ;incstack = 0
 26182  0181C8  006F FF60  F1FD    	movff	status,??_TMR5_ISR+2
 26183  0181CE  0060  F0F4  F1FE   	movff	btemp+11,??_TMR5_ISR+3
 26184  0181D4  EE16  F00B         	lfsr	1,___intlo_sp
 26185                           
 26186                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 26187  0181D8  0139               	movlb	57	; () banked
 26188  0181DA  9DA8               	bcf	168,6,b	;volatile
 26189                           
 26190                           ; BSR set to: 57
 26191                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 26192  0181DC  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 26193  0181E2  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 26194  0181E8  ECF4  F0C2         	call	_TMR5_WriteTimer	;wreg free
 26195                           
 26196                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 26197  0181EC  0102               	movlb	2	; () banked
 26198  0181EE  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 26199  0181F0  0101               	movlb	1	; () banked
 26200  0181F2  6FFB               	movwf	??_TMR5_ISR& (0+255),b
 26201  0181F4  6BFC               	clrf	(??_TMR5_ISR+1)& (0+255),b
 26202  0181F6  0E05               	movlw	5
 26203  0181F8  27FB               	addwf	??_TMR5_ISR& (0+255),f,b
 26204  0181FA  0E00               	movlw	0
 26205  0181FC  23FC               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 26206  0181FE  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 26207  018200  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 26208  018202  51FB               	movf	??_TMR5_ISR& (0+255),w,b
 26209  018204  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 26210  018206  51FC               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 26211  018208  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 26212  01820A  A0D8               	btfss	status,0,c
 26213  01820C  D004               	goto	i1l1045
 26214                           
 26215                           ; BSR set to: 1
 26216                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 26217  01820E  EC57  F0C6         	call	_TMR5_CallBack	;wreg free
 26218                           
 26219                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 26220  018212  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 26221  018214  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 26222  018216                     i1l1045:
 26223  018216  0060  F7F8  F03D   	movff	??_TMR5_ISR+3,btemp+11
 26224  01821C  0060  F7F7  FFD8   	movff	??_TMR5_ISR+2,status
 26225  018222  0011               	retfie		f
 26226  018224                     __end_of_TMR5_ISR:
 26227                           	opt callstack 0
 26228                           
 26229 ;; *************** function _TMR5_WriteTimer *****************
 26230 ;; Defined at:
 26231 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 26232 ;; Parameters:    Size  Location     Type
 26233 ;;  timerVal        2  [STACK] unsigned short 
 26234 ;; Auto vars:     Size  Location     Type
 26235 ;;		None
 26236 ;; Return value:  Size  Location     Type
 26237 ;;                  1  [STACK] void 
 26238 ;; Registers used:
 26239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26240 ;; Tracked objects:
 26241 ;;		On entry : 3F/39
 26242 ;;		On exit  : 0/0
 26243 ;;		Unchanged: 0/0
 26244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26249 ;;Total ram usage:        0 bytes
 26250 ;; Hardware stack levels used:    1
 26251 ;; Hardware stack levels required when called:    3
 26252 ;; This function calls:
 26253 ;;		Nothing
 26254 ;; This function is called by:
 26255 ;;		_TMR5_ISR
 26256 ;; This function uses a reentrant model
 26257 ;;
 26258                           
 26259                           	psect	text125
 26260  0185E8                     __ptext125:
 26261                           	opt callstack 0
 26262  0185E8                     _TMR5_WriteTimer:
 26263                           	opt callstack 13
 26264                           
 26265                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 26266                           
 26267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26268                           ;incstack = 0
 26269  0185E8  A49A               	btfss	154,2,c	;volatile
 26270  0185EA  D00F               	goto	l9096
 26271                           
 26272                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 26273  0185EC  909A               	bcf	154,0,c	;volatile
 26274                           
 26275                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 26276                           ;stkvar	_timerVal @ sp[(0)+-2]
 26277  0185EE  0EFF               	movlw	255
 26278  0185F0  24E1               	addwf	fsr1l,w,c
 26279  0185F2  6ED9               	movwf	fsr2l,c
 26280  0185F4  0EFF               	movlw	255
 26281  0185F6  20E2               	addwfc	fsr1h,w,c
 26282  0185F8  6EDA               	movwf	fsr2h,c
 26283  0185FA  50DF               	movf	indf2,w,c
 26284  0185FC  6E99               	movwf	153,c	;volatile
 26285                           
 26286                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 26287                           ;stkvar	_timerVal @ sp[(0)+-2]
 26288  0185FE  0EFE               	movlw	-2
 26289  018600  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26290                           
 26291                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 26292  018606  809A               	bsf	154,0,c	;volatile
 26293                           
 26294                           ;mcc_generated_files/tmr5.c: 142:  } else {
 26295  018608  D00C               	goto	l1028
 26296  01860A                     l9096:
 26297                           
 26298                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 26299                           ;stkvar	_timerVal @ sp[(0)+-2]
 26300  01860A  0EFF               	movlw	255
 26301  01860C  24E1               	addwf	fsr1l,w,c
 26302  01860E  6ED9               	movwf	fsr2l,c
 26303  018610  0EFF               	movlw	255
 26304  018612  20E2               	addwfc	fsr1h,w,c
 26305  018614  6EDA               	movwf	fsr2h,c
 26306  018616  50DF               	movf	indf2,w,c
 26307  018618  6E99               	movwf	153,c	;volatile
 26308                           
 26309                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 26310                           ;stkvar	_timerVal @ sp[(0)+-2]
 26311  01861A  0EFE               	movlw	-2
 26312  01861C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26313  018622                     l1028:
 26314                           
 26315                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26316  018622  52E5               	movf	postdec1,f,c
 26317  018624  52E5               	movf	postdec1,f,c
 26318  018626  0012               	return		;funcret
 26319  018628                     __end_of_TMR5_WriteTimer:
 26320                           	opt callstack 0
 26321                           
 26322 ;; *************** function _TMR5_CallBack *****************
 26323 ;; Defined at:
 26324 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 26325 ;; Parameters:    Size  Location     Type
 26326 ;;		None
 26327 ;; Auto vars:     Size  Location     Type
 26328 ;;		None
 26329 ;; Return value:  Size  Location     Type
 26330 ;;                  1  [STACK] void 
 26331 ;; Registers used:
 26332 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 26333 ;; Tracked objects:
 26334 ;;		On entry : 3F/1
 26335 ;;		On exit  : 0/0
 26336 ;;		Unchanged: 0/0
 26337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26342 ;;Total ram usage:        0 bytes
 26343 ;; Hardware stack levels used:    1
 26344 ;; Hardware stack levels required when called:    4
 26345 ;; This function calls:
 26346 ;;		Absolute function
 26347 ;;		_TMR5_DefaultInterruptHandler
 26348 ;; This function is called by:
 26349 ;;		_TMR5_ISR
 26350 ;; This function uses a reentrant model
 26351 ;;
 26352                           
 26353                           	psect	text126
 26354  018CAE                     __ptext126:
 26355                           	opt callstack 0
 26356  018CAE                     _TMR5_CallBack:
 26357                           	opt callstack 12
 26358                           
 26359                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 26360                           
 26361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26362                           ;incstack = 0
 26363  018CAE  0100               	movlb	0	; () banked
 26364  018CB0  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26365  018CB2  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26366  018CB4  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26367  018CB6  B4D8               	btfsc	status,2,c
 26368  018CB8  0012               	return	
 26369                           
 26370                           ; BSR set to: 0
 26371                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 26372  018CBA  D801               	call	u864_28
 26373  018CBC  0012               	return	
 26374  018CBE                     u864_28:
 26375  018CBE  0005               	push	
 26376  018CC0  6EFA               	movwf	pclath,c
 26377  018CC2  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26378  018CC4  6EFD               	movwf	tosl,c
 26379  018CC6  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26380  018CC8  6EFE               	movwf	tosh,c
 26381  018CCA  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26382  018CCC  6EFF               	movwf	tosu,c
 26383  018CCE  50FA               	movf	pclath,w,c
 26384  018CD0  0012               	return		;indir
 26385  018CD2                     __end_of_TMR5_CallBack:
 26386                           	opt callstack 0
 26387                           
 26388 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 26389 ;; Defined at:
 26390 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 26391 ;; Parameters:    Size  Location     Type
 26392 ;;		None
 26393 ;; Auto vars:     Size  Location     Type
 26394 ;;		None
 26395 ;; Return value:  Size  Location     Type
 26396 ;;                  1  [STACK] void 
 26397 ;; Registers used:
 26398 ;;		wreg, status,2, status,0, btemp+11
 26399 ;; Tracked objects:
 26400 ;;		On entry : 3F/0
 26401 ;;		On exit  : 3F/2
 26402 ;;		Unchanged: 0/0
 26403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26408 ;;Total ram usage:        0 bytes
 26409 ;; Hardware stack levels used:    1
 26410 ;; Hardware stack levels required when called:    3
 26411 ;; This function calls:
 26412 ;;		Nothing
 26413 ;; This function is called by:
 26414 ;;		_TMR5_Initialize
 26415 ;;		_TMR5_CallBack
 26416 ;; This function uses a reentrant model
 26417 ;;
 26418                           
 26419                           	psect	text127
 26420  018B7A                     __ptext127:
 26421                           	opt callstack 0
 26422  018B7A                     _TMR5_DefaultInterruptHandler:
 26423                           	opt callstack 12
 26424                           
 26425                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 26426                           
 26427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26428                           ;incstack = 0
 26429  018B7A  A0BE               	btfss	190,0,c	;volatile
 26430  018B7C  D002               	goto	u814_20
 26431  018B7E  0E01               	movlw	1
 26432  018B80  D001               	goto	u814_26
 26433  018B82                     u814_20:
 26434  018B82  0E00               	movlw	0
 26435  018B84                     u814_26:
 26436  018B84  0AFF               	xorlw	255
 26437  018B86  6E3D               	movwf	(btemp+11)^0,c
 26438  018B88  50BE               	movf	190,w,c	;volatile
 26439  018B8A  183D               	xorwf	(btemp+11)^0,w,c
 26440  018B8C  0BFE               	andlw	-2
 26441  018B8E  183D               	xorwf	(btemp+11)^0,w,c
 26442  018B90  6EBE               	movwf	190,c	;volatile
 26443                           
 26444                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 26445  018B92  0E01               	movlw	1
 26446  018B94  0102               	movlb	2	; () banked
 26447  018B96  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 26448  018B98  0E00               	movlw	0
 26449  018B9A  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 26450  018B9C  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 26451  018B9E  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 26452                           
 26453                           ; BSR set to: 2
 26454                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26455  018BA0  0012               	return		;funcret
 26456  018BA2                     __end_of_TMR5_DefaultInterruptHandler:
 26457                           	opt callstack 0
 26458                           
 26459 ;; *************** function _INT0_ISR *****************
 26460 ;; Defined at:
 26461 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 26462 ;; Parameters:    Size  Location     Type
 26463 ;;		None
 26464 ;; Auto vars:     Size  Location     Type
 26465 ;;		None
 26466 ;; Return value:  Size  Location     Type
 26467 ;;                  1    wreg      void 
 26468 ;; Registers used:
 26469 ;;		wreg, status,2, status,0, pclath, tosl
 26470 ;; Tracked objects:
 26471 ;;		On entry : 0/0
 26472 ;;		On exit  : 0/0
 26473 ;;		Unchanged: 0/0
 26474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26479 ;;Total ram usage:        0 bytes
 26480 ;; Hardware stack levels used:    1
 26481 ;; Hardware stack levels required when called:    2
 26482 ;; This function calls:
 26483 ;;		_INT0_CallBack
 26484 ;; This function is called by:
 26485 ;;		Interrupt level 2
 26486 ;; This function uses a non-reentrant model
 26487 ;;
 26488                           
 26489                           	psect	text128
 26490  018F24                     __ptext128:
 26491                           	opt callstack 0
 26492  018F24                     _INT0_ISR:
 26493                           	opt callstack 12
 26494                           
 26495                           ; BSR set to: 2
 26496                           ;incstack = 0
 26497  018F24  EE14  F016         	lfsr	1,___inthi_sp
 26498                           
 26499                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 26500  018F28  0139               	movlb	57	; () banked
 26501  018F2A  91A1               	bcf	161,0,b	;volatile
 26502                           
 26503                           ; BSR set to: 57
 26504                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 26505  018F2C  EC8C  F0C6         	call	_INT0_CallBack	;wreg free
 26506  018F30  0011               	retfie		f
 26507  018F32                     __end_of_INT0_ISR:
 26508                           	opt callstack 0
 26509                           
 26510 ;; *************** function _INT0_CallBack *****************
 26511 ;; Defined at:
 26512 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 26513 ;; Parameters:    Size  Location     Type
 26514 ;;		None
 26515 ;; Auto vars:     Size  Location     Type
 26516 ;;		None
 26517 ;; Return value:  Size  Location     Type
 26518 ;;                  1  [STACK] void 
 26519 ;; Registers used:
 26520 ;;		wreg, status,2, status,0, pclath, tosl
 26521 ;; Tracked objects:
 26522 ;;		On entry : 3F/39
 26523 ;;		On exit  : 0/0
 26524 ;;		Unchanged: 0/0
 26525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26530 ;;Total ram usage:        0 bytes
 26531 ;; Hardware stack levels used:    1
 26532 ;; Hardware stack levels required when called:    1
 26533 ;; This function calls:
 26534 ;;		Absolute function
 26535 ;;		_INT0_DefaultInterruptHandler
 26536 ;; This function is called by:
 26537 ;;		_INT0_ISR
 26538 ;; This function uses a reentrant model
 26539 ;;
 26540                           
 26541                           	psect	text129
 26542  018D18                     __ptext129:
 26543                           	opt callstack 0
 26544  018D18                     _INT0_CallBack:
 26545                           	opt callstack 12
 26546                           
 26547                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 26548                           
 26549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26550                           ;incstack = 0
 26551  018D18  5016               	movf	_INT0_InterruptHandler^0,w,c
 26552  018D1A  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 26553  018D1C  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 26554  018D1E  B4D8               	btfsc	status,2,c
 26555  018D20  0012               	return	
 26556                           
 26557                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 26558  018D22  D801               	call	u398_48
 26559  018D24  0012               	return	
 26560  018D26                     u398_48:
 26561  018D26  0005               	push	
 26562  018D28  6EFA               	movwf	pclath,c
 26563  018D2A  5016               	movf	_INT0_InterruptHandler^0,w,c
 26564  018D2C  6EFD               	movwf	tosl,c
 26565  018D2E  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 26566  018D30  6EFE               	movwf	tosh,c
 26567  018D32  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 26568  018D34  6EFF               	movwf	tosu,c
 26569  018D36  50FA               	movf	pclath,w,c
 26570  018D38  0012               	return		;indir
 26571  018D3A                     __end_of_INT0_CallBack:
 26572                           	opt callstack 0
 26573                           
 26574 ;; *************** function _INT0_DefaultInterruptHandler *****************
 26575 ;; Defined at:
 26576 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 26577 ;; Parameters:    Size  Location     Type
 26578 ;;		None
 26579 ;; Auto vars:     Size  Location     Type
 26580 ;;		None
 26581 ;; Return value:  Size  Location     Type
 26582 ;;                  1  [STACK] void 
 26583 ;; Registers used:
 26584 ;;		None
 26585 ;; Tracked objects:
 26586 ;;		On entry : 0/39
 26587 ;;		On exit  : 0/0
 26588 ;;		Unchanged: 0/0
 26589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26594 ;;Total ram usage:        0 bytes
 26595 ;; Hardware stack levels used:    1
 26596 ;; This function calls:
 26597 ;;		Nothing
 26598 ;; This function is called by:
 26599 ;;		_EXT_INT_Initialize
 26600 ;;		_INT0_CallBack
 26601 ;; This function uses a reentrant model
 26602 ;;
 26603                           
 26604                           	psect	text130
 26605  018FB0                     __ptext130:
 26606                           	opt callstack 0
 26607  018FB0                     _INT0_DefaultInterruptHandler:
 26608                           	opt callstack 12
 26609                           
 26610                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26611                           
 26612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26613                           ;incstack = 0
 26614  018FB0  0012               	return		;funcret
 26615  018FB2                     __end_of_INT0_DefaultInterruptHandler:
 26616                           	opt callstack 0
 26617                           
 26618 ;; *************** function _Default_ISR *****************
 26619 ;; Defined at:
 26620 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 26621 ;; Parameters:    Size  Location     Type
 26622 ;;		None
 26623 ;; Auto vars:     Size  Location     Type
 26624 ;;		None
 26625 ;; Return value:  Size  Location     Type
 26626 ;;                  1    wreg      void 
 26627 ;; Registers used:
 26628 ;;		None
 26629 ;; Tracked objects:
 26630 ;;		On entry : 0/0
 26631 ;;		On exit  : 0/0
 26632 ;;		Unchanged: 0/0
 26633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26638 ;;Total ram usage:        0 bytes
 26639 ;; Hardware stack levels used:    1
 26640 ;; This function calls:
 26641 ;;		Nothing
 26642 ;; This function is called by:
 26643 ;;		Interrupt level 2
 26644 ;; This function uses a non-reentrant model
 26645 ;;
 26646                           
 26647                           	psect	text131
 26648  018FA8                     __ptext131:
 26649                           	opt callstack 0
 26650  018FA8                     _Default_ISR:
 26651                           	opt callstack 14
 26652                           
 26653                           ;incstack = 0
 26654  018FA8  EE14  F016         	lfsr	1,___inthi_sp
 26655  018FAC  0011               	retfie		f
 26656  018FAE                     __end_of_Default_ISR:
 26657                           	opt callstack 0
 26658                           
 26659 ;; *************** function _ADCC_ISR *****************
 26660 ;; Defined at:
 26661 ;;		line 314 in file "mcc_generated_files/adcc.c"
 26662 ;; Parameters:    Size  Location     Type
 26663 ;;		None
 26664 ;; Auto vars:     Size  Location     Type
 26665 ;;		None
 26666 ;; Return value:  Size  Location     Type
 26667 ;;                  1    wreg      void 
 26668 ;; Registers used:
 26669 ;;		wreg, status,2, status,0, pclath, tosl
 26670 ;; Tracked objects:
 26671 ;;		On entry : 0/0
 26672 ;;		On exit  : 0/0
 26673 ;;		Unchanged: 0/0
 26674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26679 ;;Total ram usage:        0 bytes
 26680 ;; Hardware stack levels used:    1
 26681 ;; Hardware stack levels required when called:    1
 26682 ;; This function calls:
 26683 ;;		Absolute function
 26684 ;;		_ADCC_DefaultInterruptHandler
 26685 ;;		_adc_int_handler
 26686 ;; This function is called by:
 26687 ;;		Interrupt level 2
 26688 ;; This function uses a non-reentrant model
 26689 ;;
 26690                           
 26691                           	psect	text132
 26692  018920                     __ptext132:
 26693                           	opt callstack 0
 26694  018920                     _ADCC_ISR:
 26695                           	opt callstack 13
 26696                           
 26697                           ;incstack = 0
 26698  018920  EE14  F016         	lfsr	1,___inthi_sp
 26699                           
 26700                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 26701  018924  0139               	movlb	57	; () banked
 26702  018926  95A1               	bcf	161,2,b	;volatile
 26703                           
 26704                           ; BSR set to: 57
 26705                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 26706  018928  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26707  01892A  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26708  01892C  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26709  01892E  B4D8               	btfsc	status,2,c
 26710  018930  0011               	retfie		f
 26711                           
 26712                           ; BSR set to: 57
 26713                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 26714  018932  D801               	call	i2u433_48
 26715  018934  0011               	retfie		f
 26716  018936                     i2u433_48:
 26717  018936  0005               	push	
 26718  018938  6EFA               	movwf	pclath,c
 26719  01893A  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26720  01893C  6EFD               	movwf	tosl,c
 26721  01893E  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26722  018940  6EFE               	movwf	tosh,c
 26723  018942  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26724  018944  6EFF               	movwf	tosu,c
 26725  018946  50FA               	movf	pclath,w,c
 26726  018948  0012               	return		;indir
 26727  01894A                     __end_of_ADCC_ISR:
 26728                           	opt callstack 0
 26729                           
 26730 ;; *************** function _adc_int_t_handler *****************
 26731 ;; Defined at:
 26732 ;;		line 128 in file "daq.c"
 26733 ;; Parameters:    Size  Location     Type
 26734 ;;		None
 26735 ;; Auto vars:     Size  Location     Type
 26736 ;;		None
 26737 ;; Return value:  Size  Location     Type
 26738 ;;                  1  [STACK] void 
 26739 ;; Registers used:
 26740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 26741 ;; Tracked objects:
 26742 ;;		On entry : 3F/39
 26743 ;;		On exit  : 1/0
 26744 ;;		Unchanged: 0/0
 26745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26750 ;;Total ram usage:        0 bytes
 26751 ;; Hardware stack levels used:    1
 26752 ;; Hardware stack levels required when called:    1
 26753 ;; This function calls:
 26754 ;;		_ADCC_DischargeSampleCapacitor
 26755 ;;		_ADCC_StartConversion
 26756 ;; This function is called by:
 26757 ;;		_start_adc_scan
 26758 ;;		_ADCC_ThresholdISR
 26759 ;; This function uses a reentrant model
 26760 ;;
 26761                           
 26762                           	psect	text133
 26763  017DBC                     __ptext133:
 26764                           	opt callstack 0
 26765  017DBC                     _adc_int_t_handler:
 26766                           	opt callstack 12
 26767                           
 26768                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 26769                           
 26770                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26771                           ;incstack = 0
 26772  017DBC  013E               	movlb	62	; () banked
 26773  017DBE  51E6               	movf	230,w,b	;volatile
 26774  017DC0  006F FB9C  F032    	movff	16103,btemp	;volatile
 26775  017DC6  6A33               	clrf	(btemp+1)^0,c
 26776  017DC8  0060  F0C8  F033   	movff	btemp,btemp+1
 26777  017DCE  6A32               	clrf	btemp^0,c
 26778  017DD0  2632               	addwf	btemp^0,f,c
 26779  017DD2  0E00               	movlw	0
 26780  017DD4  2233               	addwfc	(btemp+1)^0,f,c
 26781  017DD6  0100               	movlb	0	; () banked
 26782  017DD8  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 26783  017DDA  0D02               	mullw	2
 26784  017DDC  50F3               	movf	243,w,c
 26785  017DDE  0FC7               	addlw	low _R
 26786  017DE0  6ED9               	movwf	fsr2l,c
 26787  017DE2  6ADA               	clrf	fsr2h,c
 26788  017DE4  0060  F0CB  FFDE   	movff	btemp,postinc2
 26789  017DEA  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 26790  017DF0                     l9326:
 26791                           
 26792                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 26793  017DF0  0100               	movlb	0	; () banked
 26794  017DF2  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 26795  017DF4  0E0D               	movlw	13
 26796  017DF6  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 26797  017DF8  D003               	goto	l9332
 26798                           
 26799                           ; BSR set to: 0
 26800                           ;daq.c: 136:    R.done = 1;
 26801  017DFA  0E01               	movlw	1
 26802  017DFC  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 26803  017DFE  0012               	return	
 26804  017E00                     l9332:
 26805                           
 26806                           ; BSR set to: 0
 26807                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 26808  017E00  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 26809  017E06  EE20  F0EC         	lfsr	2,_R+37	;volatile
 26810  017E0A  006F FF78  F03A    	movff	postinc2,btemp+8
 26811  017E10  006F FF74  F03B    	movff	postdec2,btemp+9
 26812  017E16  2A3D               	incf	(btemp+11)^0,f,c
 26813  017E18  D003               	goto	u883_44
 26814  017E1A                     u883_45:
 26815  017E1A  90D8               	bcf	status,0,c
 26816  017E1C  323B               	rrcf	(btemp+9)^0,f,c
 26817  017E1E  323A               	rrcf	(btemp+8)^0,f,c
 26818  017E20                     u883_44:
 26819  017E20  2E3D               	decfsz	(btemp+11)^0,f,c
 26820  017E22  D7FB               	goto	u883_45
 26821  017E24  A03A               	btfss	(btemp+8)^0,0,c
 26822  017E26  D7E4               	goto	l9326
 26823                           
 26824                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 26825  017E28  ECB7  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 26826                           
 26827                           ; BSR set to: 62
 26828                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 26829  017E2C  0100               	movlb	0	; () banked
 26830  017E2E  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 26831  017E30  0B0F               	andlw	15
 26832  017E32  6EE6               	movwf	postinc1,c
 26833  017E34  EC72  F0C7         	call	_ADCC_StartConversion	;wreg free
 26834                           
 26835                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26836  017E38  0012               	return		;funcret
 26837  017E3A                     __end_of_adc_int_t_handler:
 26838                           	opt callstack 0
 26839                           
 26840 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 26841 ;; Defined at:
 26842 ;;		line 339 in file "mcc_generated_files/adcc.c"
 26843 ;; Parameters:    Size  Location     Type
 26844 ;;		None
 26845 ;; Auto vars:     Size  Location     Type
 26846 ;;		None
 26847 ;; Return value:  Size  Location     Type
 26848 ;;                  1  [STACK] void 
 26849 ;; Registers used:
 26850 ;;		None
 26851 ;; Tracked objects:
 26852 ;;		On entry : 3F/39
 26853 ;;		On exit  : 0/0
 26854 ;;		Unchanged: 0/0
 26855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26860 ;;Total ram usage:        0 bytes
 26861 ;; Hardware stack levels used:    1
 26862 ;; This function calls:
 26863 ;;		Nothing
 26864 ;; This function is called by:
 26865 ;;		_ADCC_Initialize
 26866 ;;		_ADCC_ISR
 26867 ;;		_ADCC_ThresholdISR
 26868 ;; This function uses a reentrant model
 26869 ;;
 26870                           
 26871                           	psect	text134
 26872  018FB2                     __ptext134:
 26873                           	opt callstack 0
 26874  018FB2                     _ADCC_DefaultInterruptHandler:
 26875                           	opt callstack 13
 26876                           
 26877                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26878                           
 26879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26880                           ;incstack = 0
 26881  018FB2  0012               	return		;funcret
 26882  018FB4                     __end_of_ADCC_DefaultInterruptHandler:
 26883                           	opt callstack 0
 26884                           
 26885 ;; *************** function _adc_int_handler *****************
 26886 ;; Defined at:
 26887 ;;		line 118 in file "daq.c"
 26888 ;; Parameters:    Size  Location     Type
 26889 ;;		None
 26890 ;; Auto vars:     Size  Location     Type
 26891 ;;		None
 26892 ;; Return value:  Size  Location     Type
 26893 ;;                  1  [STACK] void 
 26894 ;; Registers used:
 26895 ;;		None
 26896 ;; Tracked objects:
 26897 ;;		On entry : 3F/39
 26898 ;;		On exit  : 0/0
 26899 ;;		Unchanged: 0/0
 26900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26905 ;;Total ram usage:        0 bytes
 26906 ;; Hardware stack levels used:    1
 26907 ;; This function calls:
 26908 ;;		Nothing
 26909 ;; This function is called by:
 26910 ;;		_start_adc_scan
 26911 ;;		_ADCC_ISR
 26912 ;; This function uses a reentrant model
 26913 ;;
 26914                           
 26915                           	psect	text135
 26916  018FB4                     __ptext135:
 26917                           	opt callstack 0
 26918  018FB4                     _adc_int_handler:
 26919                           	opt callstack 13
 26920                           
 26921                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26922                           
 26923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26924                           ;incstack = 0
 26925  018FB4  0012               	return		;funcret
 26926  018FB6                     __end_of_adc_int_handler:
 26927                           	opt callstack 0
 26928                           
 26929 ;; *************** function _ADCC_ThresholdISR *****************
 26930 ;; Defined at:
 26931 ;;		line 327 in file "mcc_generated_files/adcc.c"
 26932 ;; Parameters:    Size  Location     Type
 26933 ;;		None
 26934 ;; Auto vars:     Size  Location     Type
 26935 ;;		None
 26936 ;; Return value:  Size  Location     Type
 26937 ;;                  1    wreg      void 
 26938 ;; Registers used:
 26939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 26940 ;; Tracked objects:
 26941 ;;		On entry : 0/0
 26942 ;;		On exit  : 0/0
 26943 ;;		Unchanged: 0/0
 26944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26947 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26948 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26949 ;;Total ram usage:        5 bytes
 26950 ;; Hardware stack levels used:    1
 26951 ;; Hardware stack levels required when called:    2
 26952 ;; This function calls:
 26953 ;;		Absolute function
 26954 ;;		_ADCC_DefaultInterruptHandler
 26955 ;;		_adc_int_t_handler
 26956 ;; This function is called by:
 26957 ;;		Interrupt level 2
 26958 ;; This function uses a non-reentrant model
 26959 ;;
 26960                           
 26961                           	psect	text136
 26962  017F10                     __ptext136:
 26963                           	opt callstack 0
 26964  017F10                     _ADCC_ThresholdISR:
 26965                           	opt callstack 12
 26966                           
 26967                           ;incstack = 0
 26968  017F10  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 26969  017F16  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 26970  017F1C  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 26971  017F22  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 26972  017F28  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 26973  017F2E  EE14  F016         	lfsr	1,___inthi_sp
 26974                           
 26975                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 26976  017F32  0139               	movlb	57	; () banked
 26977  017F34  97A1               	bcf	161,3,b	;volatile
 26978                           
 26979                           ; BSR set to: 57
 26980                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 26981  017F36  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26982  017F38  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26983  017F3A  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26984  017F3C  B4D8               	btfsc	status,2,c
 26985  017F3E  D00C               	goto	i2u886_49
 26986                           
 26987                           ; BSR set to: 57
 26988                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 26989  017F40  D801               	call	i2u886_48
 26990  017F42  D00A               	goto	i2u886_49
 26991  017F44                     i2u886_48:
 26992  017F44  0005               	push	
 26993  017F46  6EFA               	movwf	pclath,c
 26994  017F48  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26995  017F4A  6EFD               	movwf	tosl,c
 26996  017F4C  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26997  017F4E  6EFE               	movwf	tosh,c
 26998  017F50  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26999  017F52  6EFF               	movwf	tosu,c
 27000  017F54  50FA               	movf	pclath,w,c
 27001  017F56  0012               	return		;indir
 27002  017F58                     i2u886_49:
 27003  017F58  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 27004  017F5E  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 27005  017F64  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 27006  017F6A  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 27007  017F70  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 27008  017F76  0011               	retfie		f
 27009  017F78                     __end_of_ADCC_ThresholdISR:
 27010                           	opt callstack 0
 27011                           
 27012 ;; *************** function _UART1_tx_vect_isr *****************
 27013 ;; Defined at:
 27014 ;;		line 199 in file "mcc_generated_files/uart1.c"
 27015 ;; Parameters:    Size  Location     Type
 27016 ;;		None
 27017 ;; Auto vars:     Size  Location     Type
 27018 ;;		None
 27019 ;; Return value:  Size  Location     Type
 27020 ;;                  1    wreg      void 
 27021 ;; Registers used:
 27022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27023 ;; Tracked objects:
 27024 ;;		On entry : 0/0
 27025 ;;		On exit  : 0/0
 27026 ;;		Unchanged: 0/0
 27027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27032 ;;Total ram usage:        0 bytes
 27033 ;; Hardware stack levels used:    1
 27034 ;; Hardware stack levels required when called:    1
 27035 ;; This function calls:
 27036 ;;		Absolute function
 27037 ;;		_UART1_Transmit_ISR
 27038 ;; This function is called by:
 27039 ;;		Interrupt level 2
 27040 ;; This function uses a non-reentrant model
 27041 ;;
 27042                           
 27043                           	psect	text137
 27044  018BA4                     __ptext137:
 27045                           	opt callstack 0
 27046  018BA4                     _UART1_tx_vect_isr:
 27047                           	opt callstack 13
 27048                           
 27049                           ;incstack = 0
 27050  018BA4  EE14  F016         	lfsr	1,___inthi_sp
 27051                           
 27052                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 27053  018BA8  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 27054  018BAA  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 27055  018BAC  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 27056  018BAE  B4D8               	btfsc	status,2,c
 27057  018BB0  0011               	retfie		f
 27058                           
 27059                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 27060  018BB2  D801               	call	i2u888_48
 27061  018BB4  0011               	retfie		f
 27062  018BB6                     i2u888_48:
 27063  018BB6  0005               	push	
 27064  018BB8  6EFA               	movwf	pclath,c
 27065  018BBA  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 27066  018BBC  6EFD               	movwf	tosl,c
 27067  018BBE  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 27068  018BC0  6EFE               	movwf	tosh,c
 27069  018BC2  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 27070  018BC4  6EFF               	movwf	tosu,c
 27071  018BC6  50FA               	movf	pclath,w,c
 27072  018BC8  0012               	return		;indir
 27073  018BCA                     __end_of_UART1_tx_vect_isr:
 27074                           	opt callstack 0
 27075                           
 27076 ;; *************** function _UART1_Transmit_ISR *****************
 27077 ;; Defined at:
 27078 ;;		line 213 in file "mcc_generated_files/uart1.c"
 27079 ;; Parameters:    Size  Location     Type
 27080 ;;		None
 27081 ;; Auto vars:     Size  Location     Type
 27082 ;;		None
 27083 ;; Return value:  Size  Location     Type
 27084 ;;                  1  [STACK] void 
 27085 ;; Registers used:
 27086 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27087 ;; Tracked objects:
 27088 ;;		On entry : 0/0
 27089 ;;		On exit  : 3B/39
 27090 ;;		Unchanged: 0/0
 27091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27096 ;;Total ram usage:        0 bytes
 27097 ;; Hardware stack levels used:    1
 27098 ;; This function calls:
 27099 ;;		Nothing
 27100 ;; This function is called by:
 27101 ;;		_UART1_Initialize
 27102 ;;		_UART1_tx_vect_isr
 27103 ;; This function uses a reentrant model
 27104 ;;
 27105                           
 27106                           	psect	text138
 27107  01889C                     __ptext138:
 27108                           	opt callstack 0
 27109  01889C                     _UART1_Transmit_ISR:
 27110                           	opt callstack 13
 27111                           
 27112                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 27113                           
 27114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27115                           ;incstack = 0
 27116  01889C  0E40               	movlw	64
 27117  01889E  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 27118  0188A0  D010               	goto	l581
 27119                           
 27120                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 27121  0188A2  0EBC               	movlw	low _uart1TxBuffer
 27122  0188A4  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 27123  0188A6  6ED9               	movwf	fsr2l,c
 27124  0188A8  6ADA               	clrf	fsr2h,c
 27125  0188AA  0E02               	movlw	high _uart1TxBuffer
 27126  0188AC  22DA               	addwfc	fsr2h,f,c
 27127  0188AE  50DF               	movf	indf2,w,c
 27128  0188B0  013D               	movlb	61	; () banked
 27129  0188B2  6FEA               	movwf	234,b	;volatile
 27130                           
 27131                           ; BSR set to: 61
 27132  0188B4  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 27133                           
 27134                           ; BSR set to: 61
 27135                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 27136  0188B6  0E3F               	movlw	63
 27137  0188B8  6430               	cpfsgt	_uart1TxTail^0,c
 27138  0188BA  D001               	goto	l9048
 27139                           
 27140                           ; BSR set to: 61
 27141                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 27142  0188BC  6A30               	clrf	_uart1TxTail^0,c	;volatile
 27143  0188BE                     l9048:
 27144                           
 27145                           ; BSR set to: 61
 27146                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 27147  0188BE  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 27148                           
 27149                           ;mcc_generated_files/uart1.c: 222:  } else {
 27150  0188C0  0012               	return	
 27151  0188C2                     l581:
 27152                           
 27153                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 27154  0188C2  0139               	movlb	57	; () banked
 27155  0188C4  9993               	bcf	147,4,b	;volatile
 27156                           
 27157                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 27158  0188C6  0012               	return		;funcret
 27159  0188C8                     __end_of_UART1_Transmit_ISR:
 27160                           	opt callstack 0
 27161                           
 27162 ;; *************** function _UART1_rx_vect_isr *****************
 27163 ;; Defined at:
 27164 ;;		line 206 in file "mcc_generated_files/uart1.c"
 27165 ;; Parameters:    Size  Location     Type
 27166 ;;		None
 27167 ;; Auto vars:     Size  Location     Type
 27168 ;;		None
 27169 ;; Return value:  Size  Location     Type
 27170 ;;                  1    wreg      void 
 27171 ;; Registers used:
 27172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27173 ;; Tracked objects:
 27174 ;;		On entry : 0/0
 27175 ;;		On exit  : 0/0
 27176 ;;		Unchanged: 0/0
 27177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27182 ;;Total ram usage:        0 bytes
 27183 ;; Hardware stack levels used:    1
 27184 ;; Hardware stack levels required when called:    1
 27185 ;; This function calls:
 27186 ;;		Absolute function
 27187 ;;		_UART1_Receive_ISR
 27188 ;; This function is called by:
 27189 ;;		Interrupt level 2
 27190 ;; This function uses a non-reentrant model
 27191 ;;
 27192                           
 27193                           	psect	text139
 27194  018BCC                     __ptext139:
 27195                           	opt callstack 0
 27196  018BCC                     _UART1_rx_vect_isr:
 27197                           	opt callstack 13
 27198                           
 27199                           ;incstack = 0
 27200  018BCC  EE14  F016         	lfsr	1,___inthi_sp
 27201                           
 27202                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 27203  018BD0  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 27204  018BD2  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 27205  018BD4  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 27206  018BD6  B4D8               	btfsc	status,2,c
 27207  018BD8  0011               	retfie		f
 27208                           
 27209                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 27210  018BDA  D801               	call	i2u890_48
 27211  018BDC  0011               	retfie		f
 27212  018BDE                     i2u890_48:
 27213  018BDE  0005               	push	
 27214  018BE0  6EFA               	movwf	pclath,c
 27215  018BE2  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 27216  018BE4  6EFD               	movwf	tosl,c
 27217  018BE6  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 27218  018BE8  6EFE               	movwf	tosh,c
 27219  018BEA  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 27220  018BEC  6EFF               	movwf	tosu,c
 27221  018BEE  50FA               	movf	pclath,w,c
 27222  018BF0  0012               	return		;indir
 27223  018BF2                     __end_of_UART1_rx_vect_isr:
 27224                           	opt callstack 0
 27225                           
 27226 ;; *************** function _UART1_Receive_ISR *****************
 27227 ;; Defined at:
 27228 ;;		line 229 in file "mcc_generated_files/uart1.c"
 27229 ;; Parameters:    Size  Location     Type
 27230 ;;		None
 27231 ;; Auto vars:     Size  Location     Type
 27232 ;;		None
 27233 ;; Return value:  Size  Location     Type
 27234 ;;                  1  [STACK] void 
 27235 ;; Registers used:
 27236 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27237 ;; Tracked objects:
 27238 ;;		On entry : 0/0
 27239 ;;		On exit  : 0/0
 27240 ;;		Unchanged: 0/0
 27241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27246 ;;Total ram usage:        0 bytes
 27247 ;; Hardware stack levels used:    1
 27248 ;; This function calls:
 27249 ;;		Nothing
 27250 ;; This function is called by:
 27251 ;;		_UART1_Initialize
 27252 ;;		_UART1_rx_vect_isr
 27253 ;; This function uses a reentrant model
 27254 ;;
 27255                           
 27256                           	psect	text140
 27257  018DD2                     __ptext140:
 27258                           	opt callstack 0
 27259  018DD2                     _UART1_Receive_ISR:
 27260                           	opt callstack 13
 27261                           
 27262                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 27263                           
 27264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27265                           ;incstack = 0
 27266  018DD2  0E00               	movlw	low _uart1RxBuffer
 27267  018DD4  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 27268  018DD6  6ED9               	movwf	fsr2l,c
 27269  018DD8  6ADA               	clrf	fsr2h,c
 27270  018DDA  0E05               	movlw	high _uart1RxBuffer
 27271  018DDC  22DA               	addwfc	fsr2h,f,c
 27272  018DDE  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 27273  018DE4  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 27274                           
 27275                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 27276  018DE6  282E               	incf	_uart1RxHead^0,w,c
 27277  018DE8  B4D8               	btfsc	status,2,c
 27278                           
 27279                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 27280  018DEA  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 27281                           
 27282                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 27283  018DEC  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 27284                           
 27285                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27286  018DEE  0012               	return		;funcret
 27287  018DF0                     __end_of_UART1_Receive_ISR:
 27288                           	opt callstack 0
 27289                           
 27290 ;; *************** function _UART2_tx_vect_isr *****************
 27291 ;; Defined at:
 27292 ;;		line 195 in file "mcc_generated_files/uart2.c"
 27293 ;; Parameters:    Size  Location     Type
 27294 ;;		None
 27295 ;; Auto vars:     Size  Location     Type
 27296 ;;		None
 27297 ;; Return value:  Size  Location     Type
 27298 ;;                  1    wreg      void 
 27299 ;; Registers used:
 27300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27301 ;; Tracked objects:
 27302 ;;		On entry : 0/0
 27303 ;;		On exit  : 0/0
 27304 ;;		Unchanged: 0/0
 27305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27310 ;;Total ram usage:        0 bytes
 27311 ;; Hardware stack levels used:    1
 27312 ;; Hardware stack levels required when called:    1
 27313 ;; This function calls:
 27314 ;;		Absolute function
 27315 ;;		_UART2_Transmit_ISR
 27316 ;; This function is called by:
 27317 ;;		Interrupt level 2
 27318 ;; This function uses a non-reentrant model
 27319 ;;
 27320                           
 27321                           	psect	text141
 27322  018BF4                     __ptext141:
 27323                           	opt callstack 0
 27324  018BF4                     _UART2_tx_vect_isr:
 27325                           	opt callstack 13
 27326                           
 27327                           ;incstack = 0
 27328  018BF4  EE14  F016         	lfsr	1,___inthi_sp
 27329                           
 27330                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 27331  018BF8  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 27332  018BFA  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 27333  018BFC  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 27334  018BFE  B4D8               	btfsc	status,2,c
 27335  018C00  0011               	retfie		f
 27336                           
 27337                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 27338  018C02  D801               	call	i2u892_48
 27339  018C04  0011               	retfie		f
 27340  018C06                     i2u892_48:
 27341  018C06  0005               	push	
 27342  018C08  6EFA               	movwf	pclath,c
 27343  018C0A  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 27344  018C0C  6EFD               	movwf	tosl,c
 27345  018C0E  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 27346  018C10  6EFE               	movwf	tosh,c
 27347  018C12  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 27348  018C14  6EFF               	movwf	tosu,c
 27349  018C16  50FA               	movf	pclath,w,c
 27350  018C18  0012               	return		;indir
 27351  018C1A                     __end_of_UART2_tx_vect_isr:
 27352                           	opt callstack 0
 27353                           
 27354 ;; *************** function _UART2_Transmit_ISR *****************
 27355 ;; Defined at:
 27356 ;;		line 213 in file "mcc_generated_files/uart2.c"
 27357 ;; Parameters:    Size  Location     Type
 27358 ;;		None
 27359 ;; Auto vars:     Size  Location     Type
 27360 ;;		None
 27361 ;; Return value:  Size  Location     Type
 27362 ;;                  1  [STACK] void 
 27363 ;; Registers used:
 27364 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27365 ;; Tracked objects:
 27366 ;;		On entry : 0/0
 27367 ;;		On exit  : 3B/39
 27368 ;;		Unchanged: 0/0
 27369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27374 ;;Total ram usage:        0 bytes
 27375 ;; Hardware stack levels used:    1
 27376 ;; This function calls:
 27377 ;;		Nothing
 27378 ;; This function is called by:
 27379 ;;		_UART2_Initialize
 27380 ;;		_UART2_tx_vect_isr
 27381 ;; This function uses a reentrant model
 27382 ;;
 27383                           
 27384                           	psect	text142
 27385  0188C8                     __ptext142:
 27386                           	opt callstack 0
 27387  0188C8                     _UART2_Transmit_ISR:
 27388                           	opt callstack 13
 27389                           
 27390                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 27391                           
 27392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27393                           ;incstack = 0
 27394  0188C8  0E40               	movlw	64
 27395  0188CA  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 27396  0188CC  D010               	goto	l701
 27397                           
 27398                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 27399  0188CE  0E54               	movlw	low _uart2TxBuffer
 27400  0188D0  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 27401  0188D2  6ED9               	movwf	fsr2l,c
 27402  0188D4  6ADA               	clrf	fsr2h,c
 27403  0188D6  0E03               	movlw	high _uart2TxBuffer
 27404  0188D8  22DA               	addwfc	fsr2h,f,c
 27405  0188DA  50DF               	movf	indf2,w,c
 27406  0188DC  013D               	movlb	61	; () banked
 27407  0188DE  6FD2               	movwf	210,b	;volatile
 27408                           
 27409                           ; BSR set to: 61
 27410  0188E0  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 27411                           
 27412                           ; BSR set to: 61
 27413                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 27414  0188E2  0E3F               	movlw	63
 27415  0188E4  642A               	cpfsgt	_uart2TxTail^0,c
 27416  0188E6  D001               	goto	l9070
 27417                           
 27418                           ; BSR set to: 61
 27419                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 27420  0188E8  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 27421  0188EA                     l9070:
 27422                           
 27423                           ; BSR set to: 61
 27424                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 27425  0188EA  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 27426                           
 27427                           ;mcc_generated_files/uart2.c: 224:     }
 27428  0188EC  0012               	return	
 27429  0188EE                     l701:
 27430                           
 27431                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 27432  0188EE  0139               	movlb	57	; () banked
 27433  0188F0  9796               	bcf	150,3,b	;volatile
 27434                           
 27435                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 27436  0188F2  0012               	return		;funcret
 27437  0188F4                     __end_of_UART2_Transmit_ISR:
 27438                           	opt callstack 0
 27439                           
 27440 ;; *************** function _UART2_rx_vect_isr *****************
 27441 ;; Defined at:
 27442 ;;		line 203 in file "mcc_generated_files/uart2.c"
 27443 ;; Parameters:    Size  Location     Type
 27444 ;;		None
 27445 ;; Auto vars:     Size  Location     Type
 27446 ;;		None
 27447 ;; Return value:  Size  Location     Type
 27448 ;;                  1    wreg      void 
 27449 ;; Registers used:
 27450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27451 ;; Tracked objects:
 27452 ;;		On entry : 0/0
 27453 ;;		On exit  : 0/0
 27454 ;;		Unchanged: 0/0
 27455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27460 ;;Total ram usage:        0 bytes
 27461 ;; Hardware stack levels used:    1
 27462 ;; Hardware stack levels required when called:    1
 27463 ;; This function calls:
 27464 ;;		Absolute function
 27465 ;;		_UART2_Receive_ISR
 27466 ;; This function is called by:
 27467 ;;		Interrupt level 2
 27468 ;; This function uses a non-reentrant model
 27469 ;;
 27470                           
 27471                           	psect	text143
 27472  018C1C                     __ptext143:
 27473                           	opt callstack 0
 27474  018C1C                     _UART2_rx_vect_isr:
 27475                           	opt callstack 13
 27476                           
 27477                           ;incstack = 0
 27478  018C1C  EE14  F016         	lfsr	1,___inthi_sp
 27479                           
 27480                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 27481  018C20  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 27482  018C22  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 27483  018C24  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 27484  018C26  B4D8               	btfsc	status,2,c
 27485  018C28  0011               	retfie		f
 27486                           
 27487                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 27488  018C2A  D801               	call	i2u894_48
 27489  018C2C  0011               	retfie		f
 27490  018C2E                     i2u894_48:
 27491  018C2E  0005               	push	
 27492  018C30  6EFA               	movwf	pclath,c
 27493  018C32  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 27494  018C34  6EFD               	movwf	tosl,c
 27495  018C36  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 27496  018C38  6EFE               	movwf	tosh,c
 27497  018C3A  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 27498  018C3C  6EFF               	movwf	tosu,c
 27499  018C3E  50FA               	movf	pclath,w,c
 27500  018C40  0012               	return		;indir
 27501  018C42                     __end_of_UART2_rx_vect_isr:
 27502                           	opt callstack 0
 27503                           
 27504 ;; *************** function _UART2_Receive_ISR *****************
 27505 ;; Defined at:
 27506 ;;		line 233 in file "mcc_generated_files/uart2.c"
 27507 ;; Parameters:    Size  Location     Type
 27508 ;;		None
 27509 ;; Auto vars:     Size  Location     Type
 27510 ;;		None
 27511 ;; Return value:  Size  Location     Type
 27512 ;;                  1  [STACK] void 
 27513 ;; Registers used:
 27514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27515 ;; Tracked objects:
 27516 ;;		On entry : 0/0
 27517 ;;		On exit  : 0/0
 27518 ;;		Unchanged: 0/0
 27519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27524 ;;Total ram usage:        0 bytes
 27525 ;; Hardware stack levels used:    1
 27526 ;; This function calls:
 27527 ;;		Nothing
 27528 ;; This function is called by:
 27529 ;;		_UART2_Initialize
 27530 ;;		_UART2_rx_vect_isr
 27531 ;; This function uses a reentrant model
 27532 ;;
 27533                           
 27534                           	psect	text144
 27535  018DF0                     __ptext144:
 27536                           	opt callstack 0
 27537  018DF0                     _UART2_Receive_ISR:
 27538                           	opt callstack 13
 27539                           
 27540                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 27541                           
 27542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27543                           ;incstack = 0
 27544  018DF0  0E00               	movlw	low _uart2RxBuffer
 27545  018DF2  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 27546  018DF4  6ED9               	movwf	fsr2l,c
 27547  018DF6  6ADA               	clrf	fsr2h,c
 27548  018DF8  0E06               	movlw	high _uart2RxBuffer
 27549  018DFA  22DA               	addwfc	fsr2h,f,c
 27550  018DFC  006F F743 FFDF     	movff	15824,indf2	;volatile
 27551  018E02  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 27552                           
 27553                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 27554  018E04  2828               	incf	_uart2RxHead^0,w,c
 27555  018E06  B4D8               	btfsc	status,2,c
 27556                           
 27557                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 27558  018E08  6A28               	clrf	_uart2RxHead^0,c	;volatile
 27559                           
 27560                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 27561  018E0A  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 27562                           
 27563                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27564  018E0C  0012               	return		;funcret
 27565  018E0E                     __end_of_UART2_Receive_ISR:
 27566                           	opt callstack 0
 27567                           
 27568 ;; *************** function _TMR6_ISR *****************
 27569 ;; Defined at:
 27570 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 27571 ;; Parameters:    Size  Location     Type
 27572 ;;		None
 27573 ;; Auto vars:     Size  Location     Type
 27574 ;;		None
 27575 ;; Return value:  Size  Location     Type
 27576 ;;                  1    wreg      void 
 27577 ;; Registers used:
 27578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 27579 ;; Tracked objects:
 27580 ;;		On entry : 0/0
 27581 ;;		On exit  : 0/0
 27582 ;;		Unchanged: 0/0
 27583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27587 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27588 ;;Total ram usage:        1 bytes
 27589 ;; Hardware stack levels used:    1
 27590 ;; Hardware stack levels required when called:    2
 27591 ;; This function calls:
 27592 ;;		_TMR6_CallBack
 27593 ;; This function is called by:
 27594 ;;		Interrupt level 2
 27595 ;; This function uses a non-reentrant model
 27596 ;;
 27597                           
 27598                           	psect	text145
 27599  018E44                     __ptext145:
 27600                           	opt callstack 0
 27601  018E44                     _TMR6_ISR:
 27602                           	opt callstack 12
 27603                           
 27604                           ;incstack = 0
 27605  018E44  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 27606  018E4A  EE14  F016         	lfsr	1,___inthi_sp
 27607                           
 27608                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 27609  018E4E  0139               	movlb	57	; () banked
 27610  018E50  91A9               	bcf	169,0,b	;volatile
 27611                           
 27612                           ; BSR set to: 57
 27613                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 27614  018E52  EC69  F0C6         	call	_TMR6_CallBack	;wreg free
 27615  018E56  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 27616  018E5C  0011               	retfie		f
 27617  018E5E                     __end_of_TMR6_ISR:
 27618                           	opt callstack 0
 27619                           
 27620 ;; *************** function _TMR6_CallBack *****************
 27621 ;; Defined at:
 27622 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 27623 ;; Parameters:    Size  Location     Type
 27624 ;;		None
 27625 ;; Auto vars:     Size  Location     Type
 27626 ;;		None
 27627 ;; Return value:  Size  Location     Type
 27628 ;;                  1  [STACK] void 
 27629 ;; Registers used:
 27630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 27631 ;; Tracked objects:
 27632 ;;		On entry : 3F/39
 27633 ;;		On exit  : 0/0
 27634 ;;		Unchanged: 0/0
 27635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27640 ;;Total ram usage:        0 bytes
 27641 ;; Hardware stack levels used:    1
 27642 ;; Hardware stack levels required when called:    1
 27643 ;; This function calls:
 27644 ;;		Absolute function
 27645 ;;		_TMR6_DefaultInterruptHandler
 27646 ;; This function is called by:
 27647 ;;		_TMR6_ISR
 27648 ;; This function uses a reentrant model
 27649 ;;
 27650                           
 27651                           	psect	text146
 27652  018CD2                     __ptext146:
 27653                           	opt callstack 0
 27654  018CD2                     _TMR6_CallBack:
 27655                           	opt callstack 12
 27656                           
 27657                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 27658                           
 27659                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27660                           ;incstack = 0
 27661  018CD2  0100               	movlb	0	; () banked
 27662  018CD4  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27663  018CD6  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27664  018CD8  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 27665  018CDA  B4D8               	btfsc	status,2,c
 27666  018CDC  0012               	return	
 27667                           
 27668                           ; BSR set to: 0
 27669                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 27670  018CDE  D801               	call	u861_48
 27671  018CE0  0012               	return	
 27672  018CE2                     u861_48:
 27673  018CE2  0005               	push	
 27674  018CE4  6EFA               	movwf	pclath,c
 27675  018CE6  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27676  018CE8  6EFD               	movwf	tosl,c
 27677  018CEA  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27678  018CEC  6EFE               	movwf	tosh,c
 27679  018CEE  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 27680  018CF0  6EFF               	movwf	tosu,c
 27681  018CF2  50FA               	movf	pclath,w,c
 27682  018CF4  0012               	return		;indir
 27683  018CF6                     __end_of_TMR6_CallBack:
 27684                           	opt callstack 0
 27685                           
 27686 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 27687 ;; Defined at:
 27688 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 27689 ;; Parameters:    Size  Location     Type
 27690 ;;		None
 27691 ;; Auto vars:     Size  Location     Type
 27692 ;;  i               1  [STACK] unsigned char 
 27693 ;; Return value:  Size  Location     Type
 27694 ;;                  1  [STACK] void 
 27695 ;; Registers used:
 27696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 27697 ;; Tracked objects:
 27698 ;;		On entry : 3F/0
 27699 ;;		On exit  : 0/0
 27700 ;;		Unchanged: 0/0
 27701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27706 ;;Total ram usage:        0 bytes
 27707 ;; Hardware stack levels used:    1
 27708 ;; This function calls:
 27709 ;;		Nothing
 27710 ;; This function is called by:
 27711 ;;		_TMR6_Initialize
 27712 ;;		_TMR6_CallBack
 27713 ;; This function uses a reentrant model
 27714 ;;
 27715                           
 27716                           	psect	text147
 27717  0184DC                     __ptext147:
 27718                           	opt callstack 0
 27719  0184DC                     _TMR6_DefaultInterruptHandler:
 27720                           	opt callstack 0
 27721                           
 27722                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27723  0184DC  52E6               	movf	postinc1,f,c
 27724                           
 27725                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 27726                           ;stkvar	_i @ sp[(-1)+0]
 27727                           
 27728                           ;incstack = 0
 27729  0184DE  0EFF               	movlw	-1
 27730  0184E0  6AE3               	clrf	plusw1,c
 27731  0184E2                     l8734:
 27732                           
 27733                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 27734                           ;stkvar	_i @ sp[(-1)+0]
 27735  0184E2  0EFF               	movlw	-1
 27736  0184E4  50E3               	movf	plusw1,w,c
 27737  0184E6  0D02               	mullw	2
 27738  0184E8  50F3               	movf	243,w,c
 27739  0184EA  0F89               	addlw	low _tickCount
 27740  0184EC  6ED9               	movwf	fsr2l,c
 27741  0184EE  6ADA               	clrf	fsr2h,c
 27742  0184F0  50DE               	movf	postinc2,w,c
 27743  0184F2  10DE               	iorwf	postinc2,w,c
 27744  0184F4  B4D8               	btfsc	status,2,c
 27745  0184F6  D00A               	goto	l8738
 27746                           
 27747                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 27748                           ;stkvar	_i @ sp[(-1)+0]
 27749  0184F8  0EFF               	movlw	-1
 27750  0184FA  50E3               	movf	plusw1,w,c
 27751  0184FC  0D02               	mullw	2
 27752  0184FE  50F3               	movf	243,w,c
 27753  018500  0F89               	addlw	low _tickCount
 27754  018502  6ED9               	movwf	fsr2l,c
 27755  018504  6ADA               	clrf	fsr2h,c
 27756  018506  06DE               	decf	postinc2,f,c
 27757  018508  0E00               	movlw	0
 27758  01850A  5ADD               	subwfb	postdec2,f,c
 27759  01850C                     l8738:
 27760                           
 27761                           ;mcc_generated_files/tmr6.c: 207:  }
 27762                           ;stkvar	_i @ sp[(-1)+0]
 27763  01850C  0EFF               	movlw	-1
 27764  01850E  2AE3               	incf	plusw1,f,c
 27765                           
 27766                           ;stkvar	_i @ sp[(-1)+0]
 27767  018510  0EFF               	movlw	-1
 27768  018512  006F FF8C  F032    	movff	plusw1,btemp
 27769  018518  0E0B               	movlw	11
 27770  01851A  6432               	cpfsgt	btemp^0,c
 27771  01851C  D7E2               	goto	l8734
 27772                           
 27773                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27774  01851E  52E5               	movf	postdec1,f,c
 27775  018520  0012               	return		;funcret
 27776  018522                     __end_of_TMR6_DefaultInterruptHandler:
 27777                           	opt callstack 0
 27778                           
 27779 ;; *************** function _DMA1_DMASCNT_ISR *****************
 27780 ;; Defined at:
 27781 ;;		line 126 in file "mcc_generated_files/dma1.c"
 27782 ;; Parameters:    Size  Location     Type
 27783 ;;		None
 27784 ;; Auto vars:     Size  Location     Type
 27785 ;;		None
 27786 ;; Return value:  Size  Location     Type
 27787 ;;                  1    wreg      void 
 27788 ;; Registers used:
 27789 ;;		None
 27790 ;; Tracked objects:
 27791 ;;		On entry : 0/0
 27792 ;;		On exit  : 3F/0
 27793 ;;		Unchanged: 0/0
 27794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27799 ;;Total ram usage:        0 bytes
 27800 ;; Hardware stack levels used:    1
 27801 ;; This function calls:
 27802 ;;		Nothing
 27803 ;; This function is called by:
 27804 ;;		Interrupt level 2
 27805 ;; This function uses a non-reentrant model
 27806 ;;
 27807                           
 27808                           	psect	text148
 27809  018F34                     __ptext148:
 27810                           	opt callstack 0
 27811  018F34                     _DMA1_DMASCNT_ISR:
 27812                           	opt callstack 14
 27813                           
 27814                           ;incstack = 0
 27815  018F34  EE14  F016         	lfsr	1,___inthi_sp
 27816                           
 27817                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 27818  018F38  0139               	movlb	57	; () banked
 27819  018F3A  91A2               	bcf	162,0,b	;volatile
 27820                           
 27821                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 27822  018F3C  0100               	movlb	0	; () banked
 27823  018F3E  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 27824                           
 27825                           ; BSR set to: 0
 27826  018F40  0011               	retfie		f
 27827  018F42                     __end_of_DMA1_DMASCNT_ISR:
 27828                           	opt callstack 0
 27829                           
 27830 ;; *************** function _DMA1_DMADCNT_ISR *****************
 27831 ;; Defined at:
 27832 ;;		line 134 in file "mcc_generated_files/dma1.c"
 27833 ;; Parameters:    Size  Location     Type
 27834 ;;		None
 27835 ;; Auto vars:     Size  Location     Type
 27836 ;;		None
 27837 ;; Return value:  Size  Location     Type
 27838 ;;                  1    wreg      void 
 27839 ;; Registers used:
 27840 ;;		None
 27841 ;; Tracked objects:
 27842 ;;		On entry : 0/0
 27843 ;;		On exit  : 3F/39
 27844 ;;		Unchanged: 0/0
 27845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27850 ;;Total ram usage:        0 bytes
 27851 ;; Hardware stack levels used:    1
 27852 ;; This function calls:
 27853 ;;		Nothing
 27854 ;; This function is called by:
 27855 ;;		Interrupt level 2
 27856 ;; This function uses a non-reentrant model
 27857 ;;
 27858                           
 27859                           	psect	text149
 27860  018F4C                     __ptext149:
 27861                           	opt callstack 0
 27862  018F4C                     _DMA1_DMADCNT_ISR:
 27863                           	opt callstack 14
 27864                           
 27865                           ; BSR set to: 0
 27866                           ;incstack = 0
 27867  018F4C  EE14  F016         	lfsr	1,___inthi_sp
 27868                           
 27869                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 27870  018F50  0139               	movlb	57	; () banked
 27871  018F52  93A2               	bcf	162,1,b	;volatile
 27872                           
 27873                           ; BSR set to: 57
 27874  018F54  0011               	retfie		f
 27875  018F56                     __end_of_DMA1_DMADCNT_ISR:
 27876                           	opt callstack 0
 27877                           
 27878 ;; *************** function _DMA1_DMAA_ISR *****************
 27879 ;; Defined at:
 27880 ;;		line 144 in file "mcc_generated_files/dma1.c"
 27881 ;; Parameters:    Size  Location     Type
 27882 ;;		None
 27883 ;; Auto vars:     Size  Location     Type
 27884 ;;		None
 27885 ;; Return value:  Size  Location     Type
 27886 ;;                  1    wreg      void 
 27887 ;; Registers used:
 27888 ;;		None
 27889 ;; Tracked objects:
 27890 ;;		On entry : 0/0
 27891 ;;		On exit  : 3F/39
 27892 ;;		Unchanged: 0/0
 27893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27898 ;;Total ram usage:        0 bytes
 27899 ;; Hardware stack levels used:    1
 27900 ;; This function calls:
 27901 ;;		Nothing
 27902 ;; This function is called by:
 27903 ;;		Interrupt level 2
 27904 ;; This function uses a non-reentrant model
 27905 ;;
 27906                           
 27907                           	psect	text150
 27908  018F58                     __ptext150:
 27909                           	opt callstack 0
 27910  018F58                     _DMA1_DMAA_ISR:
 27911                           	opt callstack 14
 27912                           
 27913                           ; BSR set to: 57
 27914                           ;incstack = 0
 27915  018F58  EE14  F016         	lfsr	1,___inthi_sp
 27916                           
 27917                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 27918  018F5C  0139               	movlb	57	; () banked
 27919  018F5E  97A2               	bcf	162,3,b	;volatile
 27920                           
 27921                           ; BSR set to: 57
 27922  018F60  0011               	retfie		f
 27923  018F62                     __end_of_DMA1_DMAA_ISR:
 27924                           	opt callstack 0
 27925                           
 27926 ;; *************** function _DMA1_DMAOR_ISR *****************
 27927 ;; Defined at:
 27928 ;;		line 155 in file "mcc_generated_files/dma1.c"
 27929 ;; Parameters:    Size  Location     Type
 27930 ;;		None
 27931 ;; Auto vars:     Size  Location     Type
 27932 ;;		None
 27933 ;; Return value:  Size  Location     Type
 27934 ;;                  1    wreg      void 
 27935 ;; Registers used:
 27936 ;;		None
 27937 ;; Tracked objects:
 27938 ;;		On entry : 0/0
 27939 ;;		On exit  : 3F/39
 27940 ;;		Unchanged: 0/0
 27941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27946 ;;Total ram usage:        0 bytes
 27947 ;; Hardware stack levels used:    1
 27948 ;; This function calls:
 27949 ;;		Nothing
 27950 ;; This function is called by:
 27951 ;;		Interrupt level 2
 27952 ;; This function uses a non-reentrant model
 27953 ;;
 27954                           
 27955                           	psect	text151
 27956  018F64                     __ptext151:
 27957                           	opt callstack 0
 27958  018F64                     _DMA1_DMAOR_ISR:
 27959                           	opt callstack 14
 27960                           
 27961                           ; BSR set to: 57
 27962                           ;incstack = 0
 27963  018F64  EE14  F016         	lfsr	1,___inthi_sp
 27964                           
 27965                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 27966  018F68  0139               	movlb	57	; () banked
 27967  018F6A  95A2               	bcf	162,2,b	;volatile
 27968                           
 27969                           ; BSR set to: 57
 27970  018F6C  0011               	retfie		f
 27971  018F6E                     __end_of_DMA1_DMAOR_ISR:
 27972                           	opt callstack 0
 27973                           
 27974                           ;
 27975                           ; Interrupt Vector Table @ 0x8
 27976                           ;
 27977                           
 27978                           	psect	ivt0x8
 27979  000008                     __pivt0x8:
 27980                           	opt callstack 0
 27981  000008                     ivt0x8_base:
 27982                           	opt callstack 0
 27983                           
 27984                           ; Vector 0 : SWINT
 27985  000008  63EA               	dw	_Default_ISR shr (0+2)
 27986                           
 27987                           ; Vector 1 : HLVD
 27988  00000A  63EA               	dw	_Default_ISR shr (0+2)
 27989                           
 27990                           ; Vector 2 : OSF
 27991  00000C  63EA               	dw	_Default_ISR shr (0+2)
 27992                           
 27993                           ; Vector 3 : CSW
 27994  00000E  63EA               	dw	_Default_ISR shr (0+2)
 27995                           
 27996                           ; Vector 4 : NVM
 27997  000010  63EA               	dw	_Default_ISR shr (0+2)
 27998                           
 27999                           ; Vector 5 : SCAN
 28000  000012  63EA               	dw	_Default_ISR shr (0+2)
 28001                           
 28002                           ; Vector 6 : CRC
 28003  000014  63EA               	dw	_Default_ISR shr (0+2)
 28004                           
 28005                           ; Vector 7 : IOC
 28006  000016  63EA               	dw	_Default_ISR shr (0+2)
 28007                           
 28008                           ; Vector 8 : INT0
 28009  000018  63C9               	dw	_INT0_ISR shr (0+2)
 28010                           
 28011                           ; Vector 9 : ZCD
 28012  00001A  63EA               	dw	_Default_ISR shr (0+2)
 28013                           
 28014                           ; Vector 10 : AD
 28015  00001C  6248               	dw	_ADCC_ISR shr (0+2)
 28016                           
 28017                           ; Vector 11 : ADT
 28018  00001E  5FC4               	dw	_ADCC_ThresholdISR shr (0+2)
 28019                           
 28020                           ; Vector 12 : CMP1
 28021  000020  63EA               	dw	_Default_ISR shr (0+2)
 28022                           
 28023                           ; Vector 13 : SMT1
 28024  000022  63EA               	dw	_Default_ISR shr (0+2)
 28025                           
 28026                           ; Vector 14 : SMT1PRA
 28027  000024  63EA               	dw	_Default_ISR shr (0+2)
 28028                           
 28029                           ; Vector 15 : SMT1PRW
 28030  000026  63EA               	dw	_Default_ISR shr (0+2)
 28031                           
 28032                           ; Vector 16 : DMA1SCNT
 28033  000028  63CD               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 28034                           
 28035                           ; Vector 17 : DMA1DCNT
 28036  00002A  63D3               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 28037                           
 28038                           ; Vector 18 : DMA1OR
 28039  00002C  63D9               	dw	_DMA1_DMAOR_ISR shr (0+2)
 28040                           
 28041                           ; Vector 19 : DMA1A
 28042  00002E  63D6               	dw	_DMA1_DMAA_ISR shr (0+2)
 28043                           
 28044                           ; Vector 20 : SPI1RX
 28045  000030  63EA               	dw	_Default_ISR shr (0+2)
 28046                           
 28047                           ; Vector 21 : SPI1TX
 28048  000032  63EA               	dw	_Default_ISR shr (0+2)
 28049                           
 28050                           ; Vector 22 : SPI1
 28051  000034  63EA               	dw	_Default_ISR shr (0+2)
 28052                           
 28053                           ; Vector 23 : I2C1RX
 28054  000036  63EA               	dw	_Default_ISR shr (0+2)
 28055                           
 28056                           ; Vector 24 : I2C1TX
 28057  000038  63EA               	dw	_Default_ISR shr (0+2)
 28058                           
 28059                           ; Vector 25 : I2C1
 28060  00003A  63EA               	dw	_Default_ISR shr (0+2)
 28061                           
 28062                           ; Vector 26 : I2C1E
 28063  00003C  63EA               	dw	_Default_ISR shr (0+2)
 28064                           
 28065                           ; Vector 27 : U1RX
 28066  00003E  62F3               	dw	_UART1_rx_vect_isr shr (0+2)
 28067                           
 28068                           ; Vector 28 : U1TX
 28069  000040  62E9               	dw	_UART1_tx_vect_isr shr (0+2)
 28070                           
 28071                           ; Vector 29 : U1E
 28072  000042  63EA               	dw	_Default_ISR shr (0+2)
 28073                           
 28074                           ; Vector 30 : U1
 28075  000044  63EA               	dw	_Default_ISR shr (0+2)
 28076                           
 28077                           ; Vector 31 : TMR0
 28078  000046  63EA               	dw	_Default_ISR shr (0+2)
 28079                           
 28080                           ; Vector 32 : TMR1
 28081  000048  63EA               	dw	_Default_ISR shr (0+2)
 28082                           
 28083                           ; Vector 33 : TMR1G
 28084  00004A  63EA               	dw	_Default_ISR shr (0+2)
 28085                           
 28086                           ; Vector 34 : TMR2
 28087  00004C  63EA               	dw	_Default_ISR shr (0+2)
 28088                           
 28089                           ; Vector 35 : CCP1
 28090  00004E  63EA               	dw	_Default_ISR shr (0+2)
 28091                           
 28092                           ; Vector 36 : Undefined
 28093  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 28094                           
 28095                           ; Vector 37 : NCO1
 28096  000052  63EA               	dw	_Default_ISR shr (0+2)
 28097                           
 28098                           ; Vector 38 : CWG1
 28099  000054  63EA               	dw	_Default_ISR shr (0+2)
 28100                           
 28101                           ; Vector 39 : CLC1
 28102  000056  63EA               	dw	_Default_ISR shr (0+2)
 28103                           
 28104                           ; Vector 40 : INT1
 28105  000058  618A               	dw	_INT1_ISR shr (0+2)
 28106                           
 28107                           ; Vector 41 : CMP2
 28108  00005A  63EA               	dw	_Default_ISR shr (0+2)
 28109                           
 28110                           ; Vector 42 : DMA2SCNT
 28111  00005C  63EA               	dw	_Default_ISR shr (0+2)
 28112                           
 28113                           ; Vector 43 : DMA2DCNT
 28114  00005E  63EA               	dw	_Default_ISR shr (0+2)
 28115                           
 28116                           ; Vector 44 : DMA2OR
 28117  000060  63EA               	dw	_Default_ISR shr (0+2)
 28118                           
 28119                           ; Vector 45 : DMA2A
 28120  000062  63EA               	dw	_Default_ISR shr (0+2)
 28121                           
 28122                           ; Vector 46 : I2C2RX
 28123  000064  63EA               	dw	_Default_ISR shr (0+2)
 28124                           
 28125                           ; Vector 47 : I2C2TX
 28126  000066  63EA               	dw	_Default_ISR shr (0+2)
 28127                           
 28128                           ; Vector 48 : I2C2
 28129  000068  63EA               	dw	_Default_ISR shr (0+2)
 28130                           
 28131                           ; Vector 49 : I2C2E
 28132  00006A  63EA               	dw	_Default_ISR shr (0+2)
 28133                           
 28134                           ; Vector 50 : U2RX
 28135  00006C  6307               	dw	_UART2_rx_vect_isr shr (0+2)
 28136                           
 28137                           ; Vector 51 : U2TX
 28138  00006E  62FD               	dw	_UART2_tx_vect_isr shr (0+2)
 28139                           
 28140                           ; Vector 52 : U2E
 28141  000070  63EA               	dw	_Default_ISR shr (0+2)
 28142                           
 28143                           ; Vector 53 : U2
 28144  000072  63EA               	dw	_Default_ISR shr (0+2)
 28145                           
 28146                           ; Vector 54 : TMR3
 28147  000074  63EA               	dw	_Default_ISR shr (0+2)
 28148                           
 28149                           ; Vector 55 : TMR3G
 28150  000076  63EA               	dw	_Default_ISR shr (0+2)
 28151                           
 28152                           ; Vector 56 : TMR4
 28153  000078  63EA               	dw	_Default_ISR shr (0+2)
 28154                           
 28155                           ; Vector 57 : CCP2
 28156  00007A  63EA               	dw	_Default_ISR shr (0+2)
 28157                           
 28158                           ; Vector 58 : Undefined
 28159  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 28160                           
 28161                           ; Vector 59 : CWG2
 28162  00007E  63EA               	dw	_Default_ISR shr (0+2)
 28163                           
 28164                           ; Vector 60 : CLC2
 28165  000080  63EA               	dw	_Default_ISR shr (0+2)
 28166                           
 28167                           ; Vector 61 : INT2
 28168  000082  63EA               	dw	_Default_ISR shr (0+2)
 28169                           
 28170                           ; Vector 62 : Undefined
 28171  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 28172                           
 28173                           ; Vector 63 : Undefined
 28174  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 28175                           
 28176                           ; Vector 64 : Undefined
 28177  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 28178                           
 28179                           ; Vector 65 : Undefined
 28180  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 28181                           
 28182                           ; Vector 66 : Undefined
 28183  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 28184                           
 28185                           ; Vector 67 : Undefined
 28186  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 28187                           
 28188                           ; Vector 68 : Undefined
 28189  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 28190                           
 28191                           ; Vector 69 : Undefined
 28192  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 28193                           
 28194                           ; Vector 70 : TMR5
 28195  000094  6072               	dw	_TMR5_ISR shr (0+2)
 28196                           
 28197                           ; Vector 71 : TMR5G
 28198  000096  63EA               	dw	_Default_ISR shr (0+2)
 28199                           
 28200                           ; Vector 72 : TMR6
 28201  000098  6391               	dw	_TMR6_ISR shr (0+2)
 28202                           
 28203                           ; Vector 73 : CCP3
 28204  00009A  63EA               	dw	_Default_ISR shr (0+2)
 28205                           
 28206                           ; Vector 74 : CWG3
 28207  00009C  63EA               	dw	_Default_ISR shr (0+2)
 28208                           
 28209                           ; Vector 75 : CLC3
 28210  00009E  63EA               	dw	_Default_ISR shr (0+2)
 28211                           
 28212                           ; Vector 76 : Undefined
 28213  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 28214                           
 28215                           ; Vector 77 : Undefined
 28216  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 28217                           
 28218                           ; Vector 78 : Undefined
 28219  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 28220                           
 28221                           ; Vector 79 : Undefined
 28222  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 28223                           
 28224                           ; Vector 80 : CCP4
 28225  0000A8  63EA               	dw	_Default_ISR shr (0+2)
 28226                           
 28227                           ; Vector 81 : CLC4
 28228  0000AA  63EA               	dw	_Default_ISR shr (0+2)
 28229  0000AC                     ivt0x8_undefint:
 28230                           	opt callstack 0
 28231  0000AC  00FF               	reset	
 28232                           
 28233                           	psect	text152
 28234  000000                     __ptext152:
 28235                           	opt callstack 0
 28236                           
 28237                           	psect	rparam
 28238  0000                     
 28239                           	psect	temp
 28240  000032                     btemp:
 28241                           	opt callstack 0
 28242  000032                     	ds	32
 28243  0000                     wtemp0	set	btemp
 28244  0000                     wtemp1	set	btemp+2
 28245  0000                     wtemp2	set	btemp+4
 28246  0000                     wtemp3	set	btemp+6
 28247  0000                     wtemp4	set	btemp+8
 28248  0000                     wtemp5	set	btemp+10
 28249  0000                     wtemp8	set	btemp+1
 28250  0000                     ttemp0	set	btemp
 28251  0000                     ttemp1	set	btemp+3
 28252  0000                     ttemp2	set	btemp+6
 28253  0000                     ttemp3	set	btemp+9
 28254  0000                     ttemp5	set	btemp+1
 28255  0000                     ttemp6	set	btemp+4
 28256  0000                     ttemp7	set	btemp+8
 28257  0000                     ltemp0	set	btemp
 28258  0000                     ltemp1	set	btemp+4
 28259  0000                     ltemp2	set	btemp+8
 28260  0000                     lltemp0	set	btemp
 28261  0000                     lltemp1	set	btemp+8
 28262  0000                     lltemp2	set	btemp+16
 28263  0000                     lltemp3	set	btemp+24
 28264                           tosu	equ	0x3FFF
 28265                           tosh	equ	0x3FFE
 28266                           tosl	equ	0x3FFD
 28267                           stkptr	equ	0x3FFC
 28268                           pclatu	equ	0x3FFB
 28269                           pclath	equ	0x3FFA
 28270                           pcl	equ	0x3FF9
 28271                           tblptru	equ	0x3FF8
 28272                           tblptrh	equ	0x3FF7
 28273                           tblptrl	equ	0x3FF6
 28274                           tablat	equ	0x3FF5
 28275                           prodh	equ	0x3FF4
 28276                           prodl	equ	0x3FF3
 28277                           indf0	equ	0x3FEF
 28278                           postinc0	equ	0x3FEE
 28279                           postdec0	equ	0x3FED
 28280                           preinc0	equ	0x3FEC
 28281                           plusw0	equ	0x3FEB
 28282                           fsr0h	equ	0x3FEA
 28283                           fsr0l	equ	0x3FE9
 28284                           wreg	equ	0x3FE8
 28285                           indf1	equ	0x3FE7
 28286                           postinc1	equ	0x3FE6
 28287                           postdec1	equ	0x3FE5
 28288                           preinc1	equ	0x3FE4
 28289                           plusw1	equ	0x3FE3
 28290                           fsr1h	equ	0x3FE2
 28291                           fsr1l	equ	0x3FE1
 28292                           bsr	equ	0x3FE0
 28293                           indf2	equ	0x3FDF
 28294                           postinc2	equ	0x3FDE
 28295                           postdec2	equ	0x3FDD
 28296                           preinc2	equ	0x3FDC
 28297                           plusw2	equ	0x3FDB
 28298                           fsr2h	equ	0x3FDA
 28299                           fsr2l	equ	0x3FD9
 28300                           status	equ	0x3FD8


Data Sizes:
    Strings     445
    Constant    144
    Data        398
    BSS         1386
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     154
    BANK1           256      4     255
    BANK2           256      0     252
    BANK3           256      0     215
    BANK4           256      0      67
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5232_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4081tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  311390
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   28176
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  168228
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83861
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   27123
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56826
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56562
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   28145
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28324
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26898
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26769
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26437
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     122      69        3.5%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D7      11       84.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     5E4      58        0.0%
DATA                 0      0     706       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec  3 18:13:58 2019

                     _SPI1_Exchange8bit 8D5A                __end_of_set_display_info 8DD2  
                                     _C 0100                                       _D 06FF  
                                     _H 00EF                                       _P 00BD  
                                     _R 00C7                                       _S 0060  
                                     _T FDB1                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 8ADA            __end_of_start_switch_handler 8D5A  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 8F96                             __CFG_LVP$ON 000000  
                                   l171 8ECA                                     l701 88EE  
                                   l581 88C2                                     l835 8D68  
                                   _GIE 01FE97                                     _abs 83C4  
                                   _pad 6D80                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 8E76                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 8D18                      _UART1_Transmit_ISR 889C  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 8CF6  
                          __CFG_ZCD$OFF 000000                                    l1028 8622  
                                  l2015 5270                                    l2036 44DC  
                                  l1260 1DE0                                    l1502 7744  
                                  l1270 1F9A                                    l1280 20F8  
                                  l1521 86F2                                    l1281 2206  
                                  l1506 7B02                                    l1268 1F94  
                                  l1285 25D0                                    l2086 1D78  
                                  l1366 822E                                    l1278 2032  
                                  l2408 6614                                    l2370 7524  
                                  l1811 7C28                                    l1820 71AC  
                                  l2381 6776                                    l1726 630C  
                                  l1582 86BE                                    l2374 66A2  
                                  l1639 8DCE                                    l1591 5C2A  
                                  l2800 8404                                    l1592 5D86  
                                  l2660 3478                                    l1933 123A  
                  _ADCC_StartConversion 8EE4                                    l2831 592E  
                                  l1599 6FA0                                    l1687 4012  
                                  l2648 35E8                                    l7000 3B0E  
                                  l2729 2E2C                                    l1962 066A  
                                  l1877 6DDC                                    l2693 3B62  
                                  l2941 614C                                    l7030 26A2  
                                  l7006 3B36                                    l7112 2C20  
                                  l7032 26A8                                    l7024 2662  
                                  l7008 3B46                                    l2792 64A2  
                                  l1897 40F6                                    l1977 0B1A  
                                  l2769 5F84                                    l7122 2C62  
                                  l7050 2776                                    l7042 2730  
                                  l7034 26D8                                    l7132 2CAC  
                                  l7060 27C8                                    l7052 27A6  
                                  l7220 68B4                                    l7212 6880  
                                  l7300 6774                                    l2956 7DB2  
                                  l7150 2D6C                                    l7118 2C3C  
                                  l2895 6C5E                                    l7136 2CB2  
                                  l7048 2770                                    l6520 3206  
                                  l6504 3162                                    l6432 2E8C  
                                  l7240 6CB2                                    l7232 6C88  
                                  l2969 7D2E                                    l7146 2D26  
                                  l6602 34E0                                    l6514 31D4  
                                  l6450 2F4A                                    l6442 2EE2  
                                  l7250 6D32                                    l7164 2DDA  
                                  l7156 2D96                                    l6524 3210  
                                  l6444 2F12                                    l7236 6C9A  
                                  l7308 839A                                    l7166 2DF4  
                                  l6606 34E6                                    l6518 31F4  
                                  l6462 2FBC                                    l6438 2ECC  
                                  l7270 74EE                                    l7342 65AC  
                                  l7334 6580                                    l7318 64FE  
                                  l6640 35C8                                    l6632 3588  
                                  l6552 32F8                                    l6528 3240  
                                  l6456 2F7C                                    l6800 5540  
                                  l7192 67BA                                    l7344 65C2  
                                  l7336 659C                                    l6634 3598  
                                  l6618 3544                                    l6570 3428  
                                  l6546 32DC                                    l6474 3024  
                                  l6466 2FD2                                    l7362 836C  
                                  l7186 67A4                                    l7258 6D66  
                                  l7274 7522                                    l7266 74AC  
                                  l7282 6660                                    l6730 4970  
                                  l9202 75F0                                    l6628 3570  
                                  l6548 32EE                                    l6556 332A  
                                  l6468 3002                                    l6812 5612  
                                  l6900 37AC                                    l7292 673E  
                                  l6716 7DA2                                    l8340 5E82  
                                  l8308 89D4                                    l9070 88EA  
                                  l9222 5174                                    l7198 67DA  
                                  l6750 4B26                                    l8350 5EE4  
                                  l8334 5E40                                    l8326 5DD4  
                                  l9206 762E                                    l9048 88BE  
                                  l6592 34B8                                    l6568 3402  
                                  l9320 85E0                                    l6840 5A1E  
                                  l6832 5996                                    l6920 383E  
                                  l6912 3824                                    l7288 66F0  
                                  l6744 4A8E                                    l8336 5E4E  
                                  l6586 349A                                    l6578 345C  
                                  l6674 83F4                                    l6930 38CE  
                                  l6906 37EA                                    l6754 4B94  
                                  l6746 4ADE                                    l8346 5EB0  
                                  l8338 5E64                                    l9226 70BA  
                                  l9332 7E00                                    l6588 34AC  
                                  l6940 3916                                    l6692 6444  
                                  l6772 7D1E                                    l8348 5ECE  
                                  l9326 7DF0                                    l8198 8CA6  
                                  l7902 5882                                    l8278 86FC  
                                  l8358 5F02                                    l9238 7116  
                                  l9096 860A                                    l7912 591E  
                                  l6848 5ACA                                    l6960 39B8  
                                  l6880 36CE                                    l6688 6440  
                                  l8368 5F64                                    l9248 7186  
                                  l8802 61D2                                    l6794 54FA  
                                  l6954 399C                                    l6946 396A  
                                  l6938 3904                                    l6874 3688  
                                  l6698 649A                                    l7930 6082  
                                  l6788 54A6                                    l6964 39DE  
                                  l6948 396E                                    l6868 3648  
                                  l8900 3DC8                                    l8734 84E2  
                                  l6974 3A28                                    l6894 3766  
                                  l6878 369E                                    l9800 7A2E  
                                  l6888 3726                                    l7928 6016  
                                  l8912 3F44                                    l8904 3E64  
                                  l8738 850C                                    l9810 6DD4  
                                  l6994 3ADE                                    l6978 3A2E  
                                  l6898 377C                                    l8836 86D4  
                                  l7892 57A0                                    l7876 56DE  
                                  l9820 6E6C                                    l9812 6DE6  
                                  l9900 4412                                    l6988 3AA2  
                                  l8950 68F2                                    l8790 618E  
                                  l7894 57B8                                    l7886 5774  
                                  l7878 5700                                    l9806 6DAC  
                                  l8918 3FE0                                    l8926 3FF2  
                                  l8952 68F8                                    l8960 6914  
                                  l7896 57DC                                    l9816 6E22  
                                  l9832 7C4A                                    l9904 444E  
                                  l8872 3B6E                                    l8954 68FE  
                                  l8962 6940                                    l7898 581A  
                                  l9834 7C76                                    l9826 73DE  
                                  l9930 00F0                                    l8956 690C  
                                  l8948 68E2                                    l8892 3D96  
                                  l8798 61BA                                    l9774 6B74  
                                  l9870 414E                                    l9950 0216  
                                  l9918 00AC                                    l8878 3B9E  
                                  STR_1 FF5F                                    l8976 69DE  
                                  l8968 6970                                    l9880 4360  
                                  l9952 022C                                    l8888 3CBC  
                                  l8992 7BE2                                    STR_2 FFB1  
                                  STR_3 FFDF                                    l9786 7964  
                                  l9866 4130                                    l9858 40E6  
                                  l9938 0146                                    STR_4 FF4E  
                                  STR_5 FF70                                    l9796 79F0  
                                  l9788 7986                                    l9948 01EA  
                                  l9956 0258                                    STR_6 FFB1  
                                  STR_7 FFDF                                    l9982 0396  
                                  l9966 02FC                                    l9974 032A  
                                  STR_8 FF3D                                    STR_9 FF92  
                                  l9992 04D2                                    l9986 0406  
                                  l9988 0470                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    u5010 3534  
                                  _T2PR 003FAB                                    u5015 3524  
                                  u5040 3554                                    u5200 6492  
                                  u5210 6494                                    u6100 2D3A  
                                  u5140 83D8                                    u6005 2A12  
                                  u6110 2D80                                    u5150 63C4  
                                  u6015 2BDA                                    u5320 4A34  
                                  u5240 7D60                                    u5080 87D2  
                                  u5400 7CDE                                    u5305 498E  
                                  u6050 2CA4                                    u5306 4994  
                                  u5250 7D62                                    u5090 87D4  
                                  _T6PR 003F93                                    u5155 63BA  
                                  u5307 49A2                                    u5420 8832  
                                  u5500 556C                                    u5340 4B0C  
                                  _PMD0 0039C0                                    u5325 4A2A  
                                  _PMD1 0039C1                                    u5430 8834  
                                  u6230 6CDE                                    u5270 4908  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u4800 3238                                    u5520 564A  
                                  u5600 5A18                                    u6160 6806  
                                  u5280 4954                                    u4640 8802  
                                  _PMD4 0039C4                                    u5345 4B02  
                                  _PMD5 0039C5                                    u6090 2D00  
                                  u4810 3258                                    u5450 54A0  
                                  u5610 5A4A                                    u6250 6D52  
                                  u4650 8804                                    u5370 855A  
                                  _PMD6 0039C6                                    u5195 6474  
                                  u5275 48FE                                    _PMD7 0039C7  
                                  u5540 569C                                    u6180 68A0  
                                  u5380 855C                                    u4805 3228  
                                  u4910 344A                                    u4750 3188  
                                  u5470 54F6                                    u5630 5B02  
                                  u6350 8396                                    u6430 65CA  
                                  u5390 7CDC                                    u6095 2CF0  
                                  u4760 31A8                                    u6360 64DE  
                                  u8040 5EF8                                    u8105 7FBA  
                                  u4761 31A2                                    u5481 5500  
                                  u8106 7FBC                                    u5490 553A  
                                  u5650 5B54                                    u5570 5990  
                                  u6290 751E                                    u6450 65F4  
                                  u6370 64F2                                    u6460 8348  
                                  u7500 58CA                                    u6380 652C  
                                  u6365 64D4                                    u4950 34BE  
                                  u4870 3320                                    u6470 8368  
                                  u9110 6BE4                                    u5590 59E6  
                                  u5830 3A20                                    u8080 7F86  
                                  u9120 79B4                                    u8304 3DB0  
                                  u6385 6522                                    u8305 3DAA  
                                  u4970 34D8                                    u4778 31AA  
                                  u4875 3310                                    u8180 616C  
                                  u9300 411C                                    u8324 3E7E  
                                  u8244 3B88                                    u8500 7C14  
                                  u8325 3E78                                    u8245 3B82  
                                  u7470 5770                                    u9310 4374  
                                  u9230 4048                                    u5870 3A7C  
                                  u5790 3996                                    u8350 3EA8  
                                  u9127 79A6                                    u9240 404A  
                                  u5880 3AB6                                    u8344 3EA0  
                                  u8264 3BB8                                    u9321 43A4  
                                  u8345 3E9A                                    u8265 3BB2  
                                  u8098 7F88                                    u7490 58C8  
                                  u9090 6B68                                    u9330 43BA  
                                  u5890 3AF2                                    u9410 00DA  
                                  u7570 610E                                    u9331 43B8  
                                  u5875 3A6C                                    u5980 27B6  
                                  u9340 43CE                                    u9260 40BA  
                                  u8284 3BDA                                    u8285 3BD4  
                                  u9350 43D2                                    u9190 7458  
                                  u8518 7C16                                    u8470 7BCE  
                                  u9280 40CC                                    u9440 0194  
                                  u9370 43E8                                    u9530 050E  
                                  u9450 0196                                    u5995 294A  
                                  u9700 0A18                                    u9197 744A  
                                  u9630 0648                                    u9800 0EE4  
                                  u9560 0562                                    u9480 02A6  
                                  u8488 7BD0                                    u9490 02A8  
                                  _PLLR 01CEE0                                    u7955 8596  
                                  u9590 05C6                                    u9860 10B8  
                                  u9880 116E                                    u9960 5308  
                                  u9890 1170                                    u9970 534E  
                                  u9977 5340                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 894A  
                         __CFG_FCMEN$ON 000000                                    _dbuf 01A3  
                                  _atoi 56C4                                    _ctoa 7C2C  
                                  _main 1D82                                    _dtoa 4018  
                                  _nanf 80A6                                    _seed 01F3  
                                  _prec 001D                                    _nout 0019  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 5186  
                                  btemp 0032                                    _xtoa 4498  
                __end_of_check_adc_scan 8F8E                           ___fpclassifyf 6316  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0023  
             __end_of_SPI1_Exchange8bit 8D78               __size_of_clear_hid_pflags 0024  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 8BCC  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0052  
                      __end_of_INT0_ISR 8F32                        __end_of_INT1_ISR 8666  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 774C  
         __end_of_OSCILLATOR_Initialize 8ED0                                   l10010 058E  
                                 l10100 0C32                                   l10004 0554  
                                 l10200 119A                                   l10112 0CBA  
                                 l10120 0D24                                   l10024 05F6  
                                 l10016 0594                                   l10008 057C  
                                 l10042 06B8                                   l10026 0602  
                                 l10052 077A                                   l10220 51F2  
                                 l10062 0926                                   l10046 06F0  
                                 l10128 0D90                                   l10136 0EA2  
                                 l10240 52E2                                   l10162 0FD6  
                                 l10250 539C                                   l10164 0FF0  
                                 l10148 0F3A                                   l10084 0B12  
                                 l10076 0A48                                   l10244 5312  
                                 l10236 52A6                                   l10332 4808  
                                 l10308 4698                                   l10316 471E  
                                 l10174 1092                                   l10086 0B34  
                                 l10254 53C8                                   l10430 191C  
                                 l10406 16F2                                   l10184 10E2  
                                 l10272 44CC                                   l10512 4C56  
                                 l10258 5404                                   l10450 1A7C  
                                 l10426 18E8                                   l10418 1830  
                                 l10354 1326                                   l10292 45A2  
                                 l10284 4542                                   l10460 1B2A  
                                 l10380 14F8                                   l10356 1360  
                                 l10532 4E2C                                   l10524 4D7E  
                                 l10278 4506                                   l10358 1376  
                                 l10518 4D14                                   l10630 6EB8  
                                 l10480 1D00                                   l10376 14A8  
                                 l10544 7776                                   l10474 1CA6  
                                 l10378 14E2                                   l10490 1D24  
                                 l10546 77B6                                   l10484 1D04  
                                 l10396 165C                                   l10900 22CC  
                                 l10820 1DE8                                   l10822 1DFA  
                                 l10814 1DC2                                   l10904 232E  
                                 l10816 1DCA                                   l10762 5D22  
                                 l10914 24AA                                   l10922 24F4  
                                 l10596 784C                                   l10748 5BFA  
                                 l10940 2562                                   l10932 2538  
                                 l10916 24D4                                   PRLOCK 0039EF  
                                 l10950 25A6                                   l10960 25FA  
                                 l10880 2000                                   l10946 2580  
                                 l10938 254A                                   l10866 1F9E  
                                 l10868 1FCC                                   l10888 2024  
                       __end_of___aodiv 56C4                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 35F2  
                                 _ADCLK 003EFF                         __end_of___aomod 5B78  
                                 _ADPCH 003EF1                         __end_of___fldiv 3B6C  
                                 _ADREF 003EFD                         __end_of___awdiv 68CE  
                       __end_of___flneg 83C4                                   STR_11 FF81  
                                 STR_12 FEB8                                   STR_20 FE92  
                                 STR_21 FF92                                   STR_13 FEF1  
                                 STR_30 FE6C                                   STR_22 FF92  
                                 STR_14 FEDE                                   STR_23 FF81  
                                 STR_31 FFCC                                   STR_15 FF2A  
                                 STR_32 FFCC                                   STR_24 FFFB  
                                 STR_16 FF04                                   STR_25 FFF8  
                                 STR_33 FFA2                                   STR_17 FF17  
                         __CFG_WDTE$OFF 000000                                   STR_34 FFA2  
                                 STR_50 FFE9                                   STR_18 FECB  
                                 STR_35 FFA2                                   STR_51 FFF1  
                                 STR_27 FFC0                                   STR_19 FEA5  
                                 STR_28 FFD6                                   STR_36 FE41  
                       __end_of___awmod 6D80                                   STR_45 FE6B  
                                 STR_29 FE6C                                   STR_54 FFF5  
                                 STR_46 FFE5                                   STR_38 FE7F  
                                 STR_47 FFED                                   STR_39 FE59  
                                 STR_56 FFF5                                   _ADRPT 003EEC  
                       __end_of___flmul 2E36                         __end_of___flsub 8450  
                       __end_of___fltol 661E                                   u10000 542A  
                                 u10100 4650                                   u10020 44B2  
                                 u10120 471A                                   u10130 473A  
                                 u10050 459A                                   u10060 45EE  
                                 u10220 13BE                                   u10141 476A  
                                 u10125 46FC                                   u10150 4780  
                                 u10070 45F0                                   u10230 13C0  
                                 u10151 477E                                   u10160 4794  
                                 u10240 13E6                                   u10170 4798  
                                 u10090 464E                                   u10420 1B7E  
                                 u10340 1746                                   u10270 1540  
                                 u10510 782C                                   u10280 1542  
                                 u10600 5D72                                   u10370 19D6  
                                 u10290 1568                                   u10610 5D74  
                                 u10380 19D8                                   u10480 4EA0  
                                 _U1P1H 003DED                                   _U1P2H 003DEF  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0001                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0057  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR5H 003F99                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 8FA8                 __size_of_clear_adc_scan 0006  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 8BA4  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 8224  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 8E5E  
                          _DMA1CON1bits 003BFD                                   _flags 001F  
              __size_of_calc_model_data 02DC                                   _fputc 6B44  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 8566  
                                 _fputs 79E0                         __end_of_isdigit 883E  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0052  
                                 _srand 8746                                   _width 001B  
                                 _putch 8E2A                         __end_of_islower 87DE  
                       __end_of_isspace 837C                _INT1_SetInterruptHandler 8ADA  
                       __end_of_isupper 880E                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0032  
                                 ltemp1 0036                                   ltemp2 003A  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0032  
                                 ttemp1 0035                                   ttemp2 0038  
                                 ttemp3 003B                                   ttemp5 0033  
                                 ttemp6 0036                                   ttemp7 003A  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 8A8A  
           _UART1_SetRxInterruptHandler 8A62                                   wtemp0 0032  
                                 wtemp1 0034                                   wtemp2 0036  
                                 wtemp3 0038                                   wtemp4 003A  
                                 wtemp5 003C                                   wtemp8 0033  
                       __end_of_sprintf 70AE                         __end_of_tolower 7DBC  
                       __end_of_strncmp 6156                         __end_of_toupper 7D38  
                   ??_UART1_tx_vect_isr 0057               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 8BF2                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 8496                   __end_of_ringBufS_init 89C2  
                       __initialization 71B0                       _UART2_rx_vect_isr 8C1C  
                          __end_of_atoi 5938                            __end_of_ctoa 7CB4  
                          __end_of_main 260C                            __end_of_dtoa 4498  
                          __end_of_nanf 8108                            __end_of_stoa 5444  
                          __end_of_xtoa 4852                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0052                 __end_of_TMR2_Initialize 8E8E  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button 85E8  
              _TMR5_SetInterruptHandler 8AB2                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 0057               __end_of_UART1_tx_vect_isr 8BCA  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 88F4  
                       _PWM8_Initialize 8EA4                        _UART1_Initialize 8042  
                     _UART2_tx_vect_isr 8BF4                      _UART2_Transmit_ISR 88C8  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 7FDE  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 8566  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0052                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1045 8216  
                  _start_switch_handler 8D3A                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright 8F14  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u814_20 8B82                                  u814_26 8B84  
                                u398_48 8D26                                  u843_24 69D4  
                                u843_25 69D0                                  u845_20 69FA  
                                u836_28 68E8                                  u845_26 69FC  
                                u853_28 8D04                                  u861_48 8CE2  
                                u839_20 6908                                  u839_21 6902  
                                u864_28 8CBE                                  u883_44 7E20  
                                u883_45 7E1A                    __size_of_hid_display 0102  
                      __end_of___xxtofl 5F8E   __end_of_ADCC_DischargeSampleCapacitor 8F76  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 8F6E  
              __end_of_send_lcd_cmd_dma 832A                     ??_UART2_tx_vect_isr 0057  
             __end_of_UART2_rx_vect_isr 8C42              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize 8F42                        _UART2_Initialize 816A  
                                _WaitMs 86DA                         _conv_raw_result 3B6C  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 661E                                  ___fleq 746A  
                     _ADCC_ThresholdISR 7F10                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 7A78                                  _efgtoa 0000  
                                _floorf 4852                      ?_ADCC_ThresholdISR 0052  
                                _memset 4BBE                    __size_of_help_button 0038  
                                clear_0 721E                                  clear_1 7232  
                                clear_2 7246                                  clear_3 7258  
                                clear_4 7264                                  clear_5 7270  
                                clear_6 727C                                  clear_7 7288  
                                clear_8 7294                                  _printf 8108  
                    _eaDogM_WriteString 77F4                                  _strcpy 7396  
                             ?_ADCC_ISR 0052                                  _strlen 793E  
                    __size_of_TimerDone 0024                         _ADCC_Initialize 7EA4  
                        _PMD_Initialize 8ED0               __end_of_UART2_tx_vect_isr 8C1A  
                                lltemp0 0032                                  lltemp1 003A  
                                lltemp2 0042                                  lltemp3 004A  
                   ??_ADCC_ThresholdISR 0052                  __end_of_start_adc_scan 8042  
                          __mediumconst FDB0                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 827E  
                      __end_of_vfprintf 77F4                              _StartTimer 8666  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize 84DC  
                     _SYSTEM_Initialize 8450                              __accesstop 0060  
               __end_of__initialization 72A6                               ?_INT0_ISR 0052  
                             ?_INT1_ISR 0052                    __end_of_display_help 8F86  
                  __end_of_display_info 8F7E               __end_of_CLKREF_Initialize 8F4C  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0026  
                       _TMR5_WriteTimer 85E8                   _set_temp_display_help 8EF6  
                      _clear_hid_pflags 8C66               __end_of_ADCC_ThresholdISR 7F78  
                __end_of_ringBufS_flush 7B0A                          __pcstackCOMRAM 0052  
                            ___inthi_sp 1016                              ___intlo_sp 180B  
                          __pidataBANK0 883E                            __pidataBANK1 789A  
                          __pidataBANK2 752E                               ?_TMR5_ISR 0052  
                             ?_TMR6_ISR 0052                          ivt0x8_undefint 00AC  
                         __end_of_fputc 6C68                           __end_of_fputs 7A78  
                         __end_of_srand 877A                   __end_of_TMR5_CallBack 8CD2  
                         __end_of_putch 8E44                 __end_of_PWM8_Initialize 8EBA  
               __end_of_TMR6_Initialize 891E                       _adc_int_t_handler 7DBC  
                __end_of_PMD_Initialize 8EE4                              ??_ADCC_ISR 0052  
                 __end_of_TMR6_CallBack 8CF6             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 8F58  
                        _clear_adc_scan 8F96                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0010  
             __end_of_SYSTEM_Initialize 8496                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                              __pbssBANK0 0060  
                            __pbssBANK1 01A3                              __pbssBANK2 02BC  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            _check_help 5B78                 __end_of_conv_raw_result 4018  
                 _INT0_InterruptHandler 0016                              ??_INT0_ISR 0052  
                            ??_INT1_ISR 00F6                       __end_of_TimerDone 8CAE  
                      _DMA1_DMADCNT_ISR 8F4C              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 8E2A                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler 8AB2                 __end_of_ADCC_Initialize 7F0E  
                            ??_TMR5_ISR 01FB               __end_of_adc_int_t_handler 7E3A  
                            ??_TMR6_ISR 0057                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 8B52  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 8B2A  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 8DD2                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 8F9C  
                        ?_DMA1_DMAA_ISR 0052                        _DMA1_DMASCNT_ISR 8F34  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0052              __size_of_UART2_tx_vect_isr 0026  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch 89C2  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 8628  
               __size_of_switch_handler 0148       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 0068  
                         _mode_lamp_dim 8E5E                                 __Lparam 0000  
              __end_of_UART1_Initialize 80A6                       __end_of_hid_input 7C2C  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 5444  
                               ___fladd 2E36                                 ___aomod 5938  
                               ___fldiv 35F2                                 ___awdiv 6780  
                               ___flneg 837C                                 ___awmod 6C68  
                               ___flmul 260C                                 ___flsub 840A  
                               ___fltol 64AC               __end_of_UART1_Receive_ISR 8DF0  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 7396                                 __pcinit 71B0  
              __end_of_mode_lamp_bright 8F22                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 8F06  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 1D82                                 __ptext1 8C42  
                               __ptext2 8D3A                                 __ptext3 7FDE  
                               __ptext4 8EE4                                 __ptext5 8F6E  
                               __ptext6 8746                                 __ptext7 72AC  
                               __ptext8 894A                                 __ptext9 8972  
                     _UART2_Receive_ISR 8DF0                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 8EBA  
                          __size_of_abs 0046                                 us555999 56AE  
                          __size_of_pad 0114                                 us566999 5B66  
                               _isalpha 8522                                 _isdigit 880E  
                               us922999 4032                                 _mode_sw 0025  
                               us991999 5198                       __end_of_lp_filter 6316  
                               _islower 87AE                                 _isspace 832A  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 81C8                                 _isupper 87DE  
            __size_of_SYSTEM_Initialize 0046                                 _sprintf 6FA4  
                               _tolower 7D38                   __size_of_display_help 0008  
                               _utctime 00B5                   __size_of_display_info 0008  
                               _strncmp 5F8E                                 _toupper 7CB4  
                  end_of_initialization 72A6               __size_of_convert_adc_data 00B8  
                    _check_enter_button 85A8     __end_of_UART1_SetTxInterruptHandler 8A62  
           _UART1_SetTxInterruptHandler 8A3A     __end_of_UART2_SetRxInterruptHandler 8A3A  
           _UART2_SetRxInterruptHandler 8A12                       __end_of_set_vterm 8DB4  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 003C  
                     __end_of_start_lcd 8FA8               __end_of_UART2_Receive_ISR 8E0E  
                        wdtdelay@dcount 00B9                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0058                   _INT1_InterruptHandler 0013  
                             _PORTBbits 003FCB                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 8A8A                            _display_help 8F7E  
                 _TMR5_InterruptHandler 00C1                            _display_info 8F76  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags 8C8A  
                     __size_of_ADCC_ISR 002A     __end_of_ADCC_SetADIInterruptHandler 8B7A  
           _ADCC_SetADIInterruptHandler 8B52                              _update_lcd 6E94  
                       _calc_model_data 4EAA                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc 8C42  
                       _DMA1_Initialize 7E3A                         _SPI1_Initialize 8E8E  
                 __end_of_get_vterm_ptr 889C                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 8710  
          __end_of_INTERRUPT_Initialize 7FDE                              _vterm_dump 6A16  
                        __end_of___flge 6780                          __end_of___fleq 752E  
  __end_of_INT0_DefaultInterruptHandler 8FB2   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 8FB0              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 827E                          __end_of_efgtoa 1244  
                     __size_of_TMR5_ISR 005C                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 4BBE  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 00AD  
                        __end_of_memset 4EAA                          __end_of_printf 816A  
              __end_of_DMA1_DMADCNT_ISR 8F56             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 8D3A                          __end_of_strcpy 746A  
                        __end_of_strlen 79E0                     start_initialization 71B0  
  __end_of_TMR5_DefaultInterruptHandler 8BA2   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 8B7A         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 840A                   __end_of_INT1_CallBack 8D18  
             __size_of_set_display_info 001E                             __end_of_pad 6E94  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 899A  
                        _switch_handler 68CE           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0500  
                 __end_of___fpclassifyf 64AC                           _uart2RxBuffer 0600  
                         _uart1TxBuffer 02BC                __end_of_DMA1_DMASCNT_ISR 8F42  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR 8F64  
                   __end_of_hid_display 71B0                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone 8C8A                           _ringBufS_init 899A  
                           __pdataBANK0 00C7                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 0028              __end_of_EXT_INT_Initialize 87AE  
               __end_of_calc_model_data 5186                     __end_of_help_button 86DA  
       __end_of_eaDogM_WriteStringAtPos 8746                             __pbssBIGRAM 06FF  
               __end_of_DMA1_Initialize 7EA4                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 8B2A                           __pcstackBANK0 00F6  
                         __pcstackBANK1 01FB                __size_of_TMR2_Initialize 0018  
                __end_of_switch_handler 6A16                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 8EA4                _UART1_RxInterruptHandler 000A  
              _UART2_TxInterruptHandler 000D                               __end_of_T FE41  
                      _convert_adc_data 75EA               __size_of_ringBufS_put_dma 00AA  
                          _init_display 72AC                  __end_of_DMA1_DMAOR_ISR 8F6E  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00C4  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 82D8  
                _PIN_MANAGER_Initialize 7B0A                    __end_of_wait_lcd_set 8FA2  
                         __pmediumconst FDB0                               __ptext100 8A8A  
                             __ptext101 8496                               __ptext110 8F8E  
                             __ptext102 8AB2                               __ptext111 877A  
                             __ptext103 8E76                               __ptext120 8628  
                             __ptext112 8ADA                               __ptext104 8E8E  
                             __ptext121 8CF6                               __ptext113 8B02  
                             __ptext105 8EA4                               __ptext130 8FB0  
                             __ptext122 8FAE                               __ptext114 827E  
                             __ptext106 8ED0                               __ptext131 8FA8  
                             __ptext123 68CE                               __ptext115 7E3A  
                             __ptext107 7B0A                               __ptext140 8DD2  
                             __ptext132 8920                               __ptext124 81C8  
                             __ptext116 8F42                               __ptext108 8EBA  
                             __ptext141 8BF4                               __ptext133 7DBC  
                             __ptext125 85E8                               __ptext117 7EA4  
                             __ptext109 7F78                               __ptext150 8F58  
                             __ptext142 88C8                               __ptext134 8FB2  
                             __ptext126 8CAE                               __ptext118 8B2A  
                             __ptext151 8F64                               __ptext143 8C1C  
                             __ptext135 8FB4                               __ptext127 8B7A  
                             __ptext119 8B52                               __ptext152 0000  
                             __ptext144 8DF0                               __ptext136 7F10  
                             __ptext128 8F24                               __ptext145 8E44  
                             __ptext137 8BA4                               __ptext129 8D18  
                             __ptext146 8CD2                               __ptext138 889C  
                             __ptext147 84DC                               __ptext139 8BCC  
                             __ptext148 8F34                               __ptext149 8F4C  
                             _hid_input 7B9C                      __end_of_StartTimer 86A2  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00A8  
                              _ADCC_ISR 8920                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 6156  
                           _hid_display 70AE                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 7F78  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0052                                _INT0_ISR 8F24  
                              _INT1_ISR 8628                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 0089                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0394  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              i2u433_48 8936                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                                _PIR5bits 0039A5  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
                              i2u890_48 8BDE                                i2u892_48 8C06  
              __size_of_TMR5_Initialize 0046                                i2u894_48 8C2E  
                              i2u886_48 7F44                                i2u886_49 7F58  
                              i2u888_48 8BB6                               _set_vterm 8D96  
                   __size_of_update_lcd 0110                             _help_button 86A2  
            __end_of_UART1_Transmit_ISR 88C8                                _TMR5_ISR 81C8  
                              _TMR6_ISR 8E44                               _port_data 0193  
                   __size_of_static_soc 0024                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 8CAE  
                            _ADCON0bits 003EF8                      __end_of_check_help 5D8A  
                             _start_lcd 8FA2                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 8CD2  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 8DB4                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 71C4                               copy_data1 71E6  
                             copy_data2 7208                _INT0_SetInterruptHandler 8B02  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 002F  
   __end_of_UART2_SetTxInterruptHandler 8A12             _UART2_SetTxInterruptHandler 89EA  
                          _uart1RxCount 002C                            _uart2RxCount 0026  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done 8E0E  
                          _send_lcd_cmd 8972                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 8FB4                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                    __end_of_get_switch 89EA                   __end_of_DMA1_DMAA_ISR 8F62  
                    ___fpclassifyf@F463 00B1    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 5D8A  
                     ?_DMA1_DMADCNT_ISR 0052             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand 8F14  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0058  
                              __ptext10 8D5A                                __ptext11 899A  
                              __ptext20 5D8A                                __ptext12 70AE  
                              __ptext21 8C66                                __ptext13 7B9C  
                              __ptext30 82D8                                __ptext22 8F96  
                              __ptext14 89C2                                __ptext31 8E0E  
                              __ptext23 5B78                                __ptext15 8F06  
                              __ptext40 1244                                __ptext32 8224  
                              __ptext24 6A16                                __ptext16 75EA  
                              __ptext41 4498                                __ptext33 77F4  
                              __ptext25 6FA4                                __ptext17 3B6C  
                              __ptext50 7396                                __ptext42 7CB4  
                              __ptext34 8F9C                                __ptext26 886E  
                              __ptext18 80A6                                __ptext51 4852  
                              __ptext43 87AE                                __ptext35 8FA2  
                              __ptext27 86DA                                __ptext19 8D78  
                              __ptext60 4018                                __ptext52 6316  
                              __ptext44 8522                                __ptext36 7A78  
                              __ptext28 6E94                                __ptext61 83C4  
                              __ptext53 64AC                                __ptext45 5F8E  
                              __ptext37 4BBE                                __ptext29 8710  
                              __ptext70 76A2                                __ptext62 5938  
                              __ptext54 837C                                __ptext46 5186  
                              __ptext38 8108                                __ptext71 56C4  
                              __ptext63 5444                                __ptext55 661E  
                              __ptext47 0000                                __ptext39 774C  
                              __ptext80 86A2                                __ptext72 832A  
                              __ptext64 7C2C                                __ptext56 746A  
                              __ptext48 7D38                                __ptext81 8C8A  
                              __ptext73 880E                                __ptext65 6D80  
                              __ptext57 35F2                                __ptext49 87DE  
                              __ptext90 2E36                                __ptext82 8666  
                              __ptext74 8D96                                __ptext66 793E  
                              __ptext58 6C68                                __ptext91 260C  
                              __ptext83 8F76                                __ptext75 8EF6  
                              __ptext67 79E0                                __ptext59 6780  
                              __ptext92 8450                                __ptext84 8F7E  
                              __ptext76 8DB4                                __ptext68 6B44  
                              __ptext93 816A                                __ptext85 85A8  
                              __ptext77 8E5E                                __ptext69 8E2A  
                              __ptext94 89EA                                __ptext86 8F86  
                              __ptext78 8F14                                __ptext95 8A12  
                              __ptext87 4EAA                                __ptext79 8566  
                              __ptext96 8042                                __ptext88 6156  
                              __ptext97 8A3A                                __ptext89 840A  
                              __ptext98 8A62                                __ptext99 88F4  
                      __size_of_isupper 0030                                us1004999 4518  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 76A2                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 088A  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0052                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0004  
                             stoa@F1166 018C                      ??_DMA1_DMASCNT_ISR 0058  
          __end_of_ADCC_StartConversion 8EF6                                _spi_link 00A1  
                              _wdtdelay 8224              __end_of_UART2_Transmit_ISR 88F4  
                              _vfprintf 774C                __end_of_convert_adc_data 76A2  
            __end_of_PWM8_LoadDutyValue 85A8    __end_of_INT1_DefaultInterruptHandler 8FB0  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 8FAE  
                         ??_Default_ISR 0052                             _uart1RxHead 002E  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0031  
                           _uart2RxHead 0028                             _uart1RxTail 002D  
                        _get_raw_result 8D78                             _uart2TxHead 002B  
                           _uart1TxTail 0030                             _uart2RxTail 0027  
                           _uart2TxTail 002A                            _wait_lcd_set 8F9C  
                    _EXT_INT_Initialize 877A    __end_of_TMR6_DefaultInterruptHandler 8522  
 __size_of_TMR6_DefaultInterruptHandler 0046            _TMR6_DefaultInterruptHandler 84DC  
  __end_of_ADCC_DefaultInterruptHandler 8FB4   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 8FB2                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 894A  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 8F06  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 789A  
                 __end_of_mode_lamp_dim 8E76                 __end_of_adc_int_handler 8FB6  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 6FA4                  _uart2TxBufferRemaining 0029  
                    __end_of_static_soc 8C66                          _FVR_Initialize 8F8E  
                __end_of_get_raw_result 8D96                        _send_lcd_cmd_dma 82D8  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0021  
      __end_of_INT1_SetInterruptHandler 8B02               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 0058                _UART1_TxInterruptHandler 0007  
             __end_of_send_lcd_cmd_long 8972                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 8FAE          __end_of_PIN_MANAGER_Initialize 7B9C  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6B44  
               _eaDogM_WriteStringAtPos 8710                           _get_vterm_ptr 886E  
                        _check_adc_scan 8F86               __size_of_UART2_Initialize 005E  
