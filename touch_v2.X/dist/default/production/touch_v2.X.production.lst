

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 13 03:03:43 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=2
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1,inline
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1,inline
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=2
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=2
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1
   144                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1
   148                           	psect	text122,global,reloc=2,class=CODE,delta=1
   149                           	psect	text123,global,reloc=2,class=CODE,delta=1
   150                           	psect	text124,global,reloc=2,class=CODE,delta=1
   151                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   152                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	text128,global,reloc=2,class=CODE,delta=1
   155                           	psect	text129,global,reloc=2,class=CODE,delta=1
   156                           	psect	text130,global,reloc=2,class=CODE,delta=1
   157                           	psect	text131,global,reloc=2,class=CODE,delta=1
   158                           	psect	text132,global,reloc=2,class=CODE,delta=1
   159                           	psect	text133,global,reloc=2,class=CODE,delta=1
   160                           	psect	text134,global,reloc=2,class=CODE,delta=1
   161                           	psect	text135,global,reloc=2,class=CODE,delta=1
   162                           	psect	text136,global,reloc=2,class=CODE,delta=1
   163                           	psect	text137,global,reloc=2,class=CODE,delta=1
   164                           	psect	text138,global,reloc=2,class=CODE,delta=1
   165                           	psect	text139,global,reloc=2,class=CODE,delta=1
   166                           	psect	text140,global,reloc=2,class=CODE,delta=1
   167                           	psect	text141,global,reloc=2,class=CODE,delta=1
   168                           	psect	text142,global,reloc=2,class=CODE,delta=1
   169                           	psect	text143,global,reloc=2,class=CODE,delta=1
   170                           	psect	text144,global,reloc=2,class=CODE,delta=1
   171                           	psect	text145,global,reloc=2,class=CODE,delta=1
   172                           	psect	text146,global,reloc=2,class=CODE,delta=1
   173                           	psect	text147,global,reloc=2,class=CODE,delta=1
   174                           	psect	text148,global,reloc=2,class=CODE,delta=1
   175                           	psect	text149,global,reloc=2,class=CODE,delta=1
   176                           	psect	text150,global,reloc=2,class=CODE,delta=1
   177                           	psect	text151,global,reloc=2,class=CODE,delta=1
   178                           	psect	text152,global,reloc=2,class=CODE,delta=1
   179                           	psect	text153,global,reloc=2,class=CODE,delta=1
   180                           	psect	text154,global,reloc=2,class=CODE,delta=1
   181                           	psect	text155,global,reloc=2,class=CODE,delta=1
   182                           	psect	text156,global,reloc=2,class=CODE,delta=1
   183                           	psect	text157,global,reloc=2,class=CODE,delta=1
   184                           	psect	text158,global,reloc=4,class=CODE,delta=1
   185                           	psect	text159,global,reloc=2,class=CODE,delta=1
   186                           	psect	text160,global,reloc=2,class=CODE,delta=1
   187                           	psect	text161,global,reloc=2,class=CODE,delta=1
   188                           	psect	text162,global,reloc=4,class=CODE,delta=1
   189                           	psect	text163,global,reloc=2,class=CODE,delta=1
   190                           	psect	text164,global,reloc=2,class=CODE,delta=1
   191                           	psect	text165,global,reloc=2,class=CODE,delta=1
   192                           	psect	text166,global,reloc=2,class=CODE,delta=1
   193                           	psect	text167,global,reloc=2,class=CODE,delta=1
   194                           	psect	text168,global,reloc=2,class=CODE,delta=1
   195                           	psect	text169,global,reloc=4,class=CODE,delta=1
   196                           	psect	text170,global,reloc=2,class=CODE,delta=1
   197                           	psect	text171,global,reloc=2,class=CODE,delta=1
   198                           	psect	text172,global,reloc=2,class=CODE,delta=1
   199                           	psect	text173,global,reloc=2,class=CODE,delta=1
   200                           	psect	text174,global,reloc=2,class=CODE,delta=1
   201                           	psect	text175,global,reloc=2,class=CODE,delta=1
   202                           	psect	text176,global,reloc=2,class=CODE,delta=1,group=1
   203                           	psect	text177,global,reloc=4,class=CODE,delta=1
   204                           	psect	text178,global,reloc=2,class=CODE,delta=1
   205                           	psect	text179,global,reloc=2,class=CODE,delta=1
   206                           	psect	text180,global,reloc=4,class=CODE,delta=1
   207                           	psect	text181,global,reloc=4,class=CODE,delta=1
   208                           	psect	text182,global,reloc=2,class=CODE,delta=1
   209                           	psect	text183,global,reloc=2,class=CODE,delta=1
   210                           	psect	text184,global,reloc=2,class=CODE,delta=1
   211                           	psect	text185,global,reloc=4,class=CODE,delta=1
   212                           	psect	text186,global,reloc=4,class=CODE,delta=1
   213                           	psect	text187,global,reloc=2,class=CODE,delta=1
   214                           	psect	text188,global,reloc=4,class=CODE,delta=1
   215                           	psect	text189,global,reloc=2,class=CODE,delta=1
   216                           	psect	text190,global,reloc=4,class=CODE,delta=1
   217                           	psect	text191,global,reloc=2,class=CODE,delta=1
   218                           	psect	text192,global,reloc=4,class=CODE,delta=1
   219                           	psect	text193,global,reloc=2,class=CODE,delta=1
   220                           	psect	text194,global,reloc=2,class=CODE,delta=1
   221                           	psect	text195,global,reloc=4,class=CODE,delta=1
   222                           	psect	text196,global,reloc=4,class=CODE,delta=1
   223                           	psect	text197,global,reloc=4,class=CODE,delta=1
   224                           	psect	text198,global,reloc=4,class=CODE,delta=1
   225                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   226                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   227                           	psect	text199,global,reloc=4,class=CODE,delta=1
   228                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   229                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   230  0000                     
   231                           ; Version 2.10
   232                           ; Generated 31/07/2019 GMT
   233                           ; 
   234                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   235                           ; All rights reserved.
   236                           ; 
   237                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   238                           ; 
   239                           ; Redistribution and use in source and binary forms, with or without modification, are
   240                           ; permitted provided that the following conditions are met:
   241                           ; 
   242                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   243                           ;        conditions and the following disclaimer.
   244                           ; 
   245                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   246                           ;        of conditions and the following disclaimer in the documentation and/or other
   247                           ;        materials provided with the distribution.
   248                           ; 
   249                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   250                           ;        software without specific prior written permission.
   251                           ; 
   252                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   253                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   254                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   255                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   256                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   257                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   258                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   259                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   260                           ; 
   261                           ; 
   262                           ; Code-generator required, PIC18F57K42 Definitions
   263                           ; 
   264                           ; SFR Addresses
   265  0000                     
   266 ;;_main$3993	offset	0
   267 ;;_main$3989	offset	2
   268 ;;_esr_temp	offset	4
   269 ;;_i_esr	offset	8
   270 ;;_shape	offset	10
   271 ;;_inp_index	offset	11
   272 ;;_k	offset	12
   273 ;;_j	offset	13
   274 ;;_i	offset	14
   275 ;;_mode	offset	15
   276 ;;_i_ror	offset	16
   277 ;;_mode	offset=-1 (param)
   278 ;;_hist	offset=-3 (param)
   279 ;;_s	offset=-2 (param)
   280 ;;_voltage	offset=-4 (param)
   281 ;;_voltage	offset=-4 (param)
   282 ;;_voltage	offset=-4 (param)
   283 ;;_set	offset=-1 (param)
   284 ;;_x	offset	0
   285 ;;_r_cal_ptr	offset	2
   286 ;;_y	offset	4
   287 ;;_crcVal_save	offset	6
   288 ;;_bAdd	offset=-2 (param)
   289 ;;_data	offset=-1 (param)
   290 ;;_cmd	offset=-1 (param)
   291 ;;_cmd	offset=-1 (param)
   292 ;;_data	offset=-1 (param)
   293 ;;__this	offset=-2 (param)
   294 ;;_soc	offset	0
   295 ;;_slot	offset	2
   296 ;;_cvoltage	offset=-4 (param)
   297 ;;_h	offset=-1 (param)
   298 ;;_h	offset=-1 (param)
   299 ;;_fsm	offset=-1 (param)
   300 ;;_mode	offset=-1 (param)
   301 ;;_mode	offset=-1 (param)
   302 ;;_cmd	offset=-1 (param)
   303 ;;_cp	offset	0
   304 ;;_cb	offset	4
   305 ;;_x	offset	8
   306 ;;_x	offset	0
   307 ;;_r_cal_ptr	offset	2
   308 ;;_y	offset	4
   309 ;;_crcVal	offset	6
   310 ;;_GIEBitValue	offset	0
   311 ;;_bAdd	offset=-2 (param)
   312 ;;_bData	offset=-3 (param)
   313 ;;_result	offset	0
   314 ;;_mask	offset	2
   315 ;;_reverse	offset=-1 (param)
   316 ;;_xorValue	offset=-3 (param)
   317 ;;_mask	offset	0
   318 ;;_reverse	offset	2
   319 ;;_crc	offset=-2 (param)
   320 ;;_data	offset=-1 (param)
   321 ;;_channel	offset=-1 (param)
   322 ;;_c	offset	0
   323 ;;_shape	offset=-1 (param)
   324 ;;_reset	offset=-2 (param)
   325 ;;_i	offset=-1 (param)
   326 ;;_mode	offset=-1 (param)
   327 ;;_cb	offset=-3 (param)
   328 ;;_cp	offset=-5 (param)
   329 ;;_value	offset=-2 (param)
   330 ;;_window	offset=-4 (param)
   331 ;;_standard	offset=-6 (param)
   332 ;;_i	offset	0
   333 ;;_h	offset=-1 (param)
   334 ;;_flipper	offset=-1 (param)
   335 ;;_f	offset	0
   336 ;;_ap	offset	6
   337 ;;_s	offset=-3 (param)
   338 ;;_fmt	offset=-5 (param)
   339 ;;_line	offset=-1 (param)
   340 ;;_vterm	offset=-2 (param)
   341 ;;_numMilliseconds	offset=-2 (param)
   342 ;;_vterm	offset=-1 (param)
   343 ;;_row	offset	0
   344 ;;_r	offset=-1 (param)
   345 ;;_c	offset=-2 (param)
   346 ;;_strPtr	offset=-4 (param)
   347 ;;_strPtr	offset=-1 (param)
   348 ;;_delay	offset=-4 (param)
   349 ;;_strPtr	offset=-1 (param)
   350 ;;_strPtr	offset=-2 (param)
   351 ;;__this	offset=-2 (param)
   352 ;;_clearBuffer	offset=-3 (param)
   353 ;;_s	offset	0
   354 ;;_k	offset	2
   355 ;;_dest	offset=-2 (param)
   356 ;;_c	offset=-4 (param)
   357 ;;_n	offset=-6 (param)
   358 ;;_ap	offset	0
   359 ;;_fmt	offset=-3 (param)
   360 ;;_cfmt	offset	0
   361 ;;_fp	offset=-2 (param)
   362 ;;_fmt	offset=-4 (param)
   363 ;;_ap	offset=-6 (param)
   364 ;;_vfpfcnvrt$6810	offset	0
   365 ;;_vfpfcnvrt$6821	offset	2
   366 ;;_vfpfcnvrt$6809	offset	4
   367 ;;_llu	offset	6
   368 ;;_ll	offset	14
   369 ;;_f	offset	22
   370 ;;_ct	offset	26
   371 ;;_cp	offset	29
   372 ;;_c	offset	31
   373 ;;_fp	offset=-2 (param)
   374 ;;_fmt	offset=-4 (param)
   375 ;;_ap	offset=-6 (param)
   376 ;;_xtoa$6795	offset	0
   377 ;;_xtoa$6794	offset	2
   378 ;;_n	offset	4
   379 ;;_c	offset	12
   380 ;;_i	offset	14
   381 ;;_w	offset	16
   382 ;;_p	offset	18
   383 ;;_fp	offset=-2 (param)
   384 ;;_d	offset=-10 (param)
   385 ;;_x	offset=-11 (param)
   386 ;;_toupper$7601	offset	0
   387 ;;_c	offset=-2 (param)
   388 ;;_c	offset=-2 (param)
   389 ;;_c	offset=-2 (param)
   390 ;;_n	offset	0
   391 ;;_i	offset	8
   392 ;;_w	offset	10
   393 ;;_p	offset	12
   394 ;;_fp	offset=-2 (param)
   395 ;;_d	offset=-10 (param)
   396 ;;_counter	offset	0
   397 ;;_dividend	offset=-8 (param)
   398 ;;_divisor	offset=-16 (param)
   399 ;;_quotient	offset	0
   400 ;;_counter	offset	8
   401 ;;_dividend	offset=-8 (param)
   402 ;;_divisor	offset=-16 (param)
   403 ;;_r	offset	0
   404 ;;_l	offset	2
   405 ;;__l	offset=-2 (param)
   406 ;;__r	offset=-4 (param)
   407 ;;_n	offset=-6 (param)
   408 ;;_nuls	offset	0
   409 ;;_l	offset	7
   410 ;;_p	offset	9
   411 ;;_cp	offset	11
   412 ;;_w	offset	13
   413 ;;_i	offset	15
   414 ;;_fp	offset=-2 (param)
   415 ;;_s	offset=-4 (param)
   416 ;;_efgtoa$6767	offset	0
   417 ;;_efgtoa$6766	offset	2
   418 ;;_efgtoa$6765	offset	4
   419 ;;_efgtoa$6761	offset	6
   420 ;;_efgtoa$6757	offset	8
   421 ;;_efgtoa$6756	offset	10
   422 ;;_u	offset	12
   423 ;;_g	offset	16
   424 ;;_l	offset	20
   425 ;;_h	offset	24
   426 ;;_ou	offset	28
   427 ;;_n	offset	32
   428 ;;_e	offset	34
   429 ;;_i	offset	36
   430 ;;_w	offset	38
   431 ;;_p	offset	40
   432 ;;_sign	offset	42
   433 ;;_d	offset	44
   434 ;;_ne	offset	46
   435 ;;_m	offset	48
   436 ;;_pp	offset	50
   437 ;;_t	offset	52
   438 ;;_mode	offset	54
   439 ;;_nmode	offset	55
   440 ;;_fp	offset=-2 (param)
   441 ;;_f	offset=-6 (param)
   442 ;;_c	offset=-7 (param)
   443 ;;_tolower$7586	offset	0
   444 ;;_c	offset=-2 (param)
   445 ;;_c	offset=-2 (param)
   446 ;;_d	offset	0
   447 ;;_s	offset	2
   448 ;;_dest	offset=-2 (param)
   449 ;;_src	offset=-4 (param)
   450 ;;_u	offset	0
   451 ;;_m	offset	4
   452 ;;_e	offset	8
   453 ;;_x	offset=-4 (param)
   454 ;;_u	offset	0
   455 ;;_e	offset	4
   456 ;;_x	offset=-4 (param)
   457 ;;_exp1	offset	0
   458 ;;_sign1	offset	1
   459 ;;_f1	offset=-4 (param)
   460 ;;_f1	offset=-4 (param)
   461 ;;_ff1	offset=-4 (param)
   462 ;;_ff2	offset=-8 (param)
   463 ;;_sign	offset	0
   464 ;;_counter	offset	1
   465 ;;_dividend	offset=-2 (param)
   466 ;;_divisor	offset=-4 (param)
   467 ;;_quotient	offset	0
   468 ;;_sign	offset	2
   469 ;;_counter	offset	3
   470 ;;_dividend	offset=-2 (param)
   471 ;;_divisor	offset=-4 (param)
   472 ;;_dtoa$6733	offset	0
   473 ;;_n	offset	2
   474 ;;_i	offset	10
   475 ;;_s	offset	12
   476 ;;_w	offset	14
   477 ;;_p	offset	16
   478 ;;_fp	offset=-2 (param)
   479 ;;_d	offset=-10 (param)
   480 ;;_a	offset=-2 (param)
   481 ;;_sign	offset	0
   482 ;;_counter	offset	1
   483 ;;_dividend	offset=-8 (param)
   484 ;;_divisor	offset=-16 (param)
   485 ;;_quotient	offset	0
   486 ;;_sign	offset	8
   487 ;;_counter	offset	9
   488 ;;_dividend	offset=-8 (param)
   489 ;;_divisor	offset=-16 (param)
   490 ;;_w	offset	0
   491 ;;_fp	offset=-2 (param)
   492 ;;_c	offset=-3 (param)
   493 ;;_w	offset	0
   494 ;;_i	offset	2
   495 ;;_fp	offset=-2 (param)
   496 ;;_buf	offset=-4 (param)
   497 ;;_p	offset=-6 (param)
   498 ;;_a	offset	0
   499 ;;_s	offset=-2 (param)
   500 ;;_i	offset	0
   501 ;;_c	offset	2
   502 ;;_s	offset=-2 (param)
   503 ;;_fp	offset=-4 (param)
   504 ;;_c	offset=-2 (param)
   505 ;;_fp	offset=-4 (param)
   506 ;;_c	offset=-1 (param)
   507 ;;__this	offset=-2 (param)
   508 ;;_c	offset=-3 (param)
   509 ;;_atoi$7317	offset	0
   510 ;;_atoi$7315	offset	2
   511 ;;_atoi$7316	offset	4
   512 ;;_n	offset	5
   513 ;;_neg	offset	7
   514 ;;_s	offset=-2 (param)
   515 ;;_isspace$7366	offset	0
   516 ;;_c	offset=-2 (param)
   517 ;;_c	offset=-2 (param)
   518 ;;_vterm	offset=-1 (param)
   519 ;;_new_response_info	offset=-1 (param)
   520 ;;_new_response_info	offset=-1 (param)
   521 ;;_level	offset=-2 (param)
   522 ;;_dutyValue	offset=-2 (param)
   523 ;;_timer	offset=-1 (param)
   524 ;;_timer	offset=-1 (param)
   525 ;;_count	offset=-3 (param)
   526 ;;_h	offset=-1 (param)
   527 ;;_u	offset	0
   528 ;;_x	offset=-4 (param)
   529 ;;_chan	offset=-1 (param)
   530 ;;_to_what	offset=-2 (param)
   531 ;;_u	offset	0
   532 ;;_s	offset=-2 (param)
   533 ;;_index	offset=-1 (param)
   534 ;;_arg	offset	0
   535 ;;_exp	offset	4
   536 ;;_sign	offset=-1 (param)
   537 ;;_val	offset=-5 (param)
   538 ;;_grs	offset	0
   539 ;;_rem	offset	4
   540 ;;_new_exp	offset	8
   541 ;;_aexp	offset	10
   542 ;;_bexp	offset	11
   543 ;;_sign	offset	12
   544 ;;_b	offset=-4 (param)
   545 ;;_a	offset=-8 (param)
   546 ;;_ff1	offset=-4 (param)
   547 ;;_ff2	offset=-8 (param)
   548 ;;_lp_speed	offset	0
   549 ;;_new	offset=-4 (param)
   550 ;;_bn	offset=-5 (param)
   551 ;;_slow	offset=-6 (param)
   552 ;;_b	offset=-4 (param)
   553 ;;_a	offset=-8 (param)
   554 ;;_grs	offset	0
   555 ;;_bexp	offset	1
   556 ;;_aexp	offset	2
   557 ;;_signs	offset	3
   558 ;;_b	offset=-4 (param)
   559 ;;_a	offset=-8 (param)
   560 ;;_prod	offset	0
   561 ;;_grs	offset	4
   562 ;;_temp	offset	8
   563 ;;_bexp	offset	10
   564 ;;_aexp	offset	11
   565 ;;_sign	offset	12
   566 ;;_b	offset=-4 (param)
   567 ;;_a	offset=-8 (param)
   568 ;;_InterruptHandler	offset=-3 (param)
   569 ;;_InterruptHandler	offset=-3 (param)
   570 ;;_InterruptHandler	offset=-3 (param)
   571 ;;_InterruptHandler	offset=-3 (param)
   572 ;;_InterruptHandler	offset=-3 (param)
   573 ;;_InterruptHandler	offset=-3 (param)
   574 ;;_state	offset	0
   575 ;;_InterruptHandler	offset=-3 (param)
   576 ;;_InterruptHandler	offset=-3 (param)
   577 ;;_seed	offset	0
   578 ;;_poly	offset	2
   579 ;;_InterruptHandler	offset=-3 (param)
   580 ;;_InterruptHandler	offset=-3 (param)
   581 ;;_i	offset	0
   582 ;;_sw_value	offset	1
   583 ;;_timerVal	offset=-2 (param)
   584 ;;_light	offset	0
   585 ;;_mode	offset=-1 (param)
   586 ;;_chan	offset=-1 (param)
   587 ;;_to_what	offset=-2 (param)
   588 ;;_u	offset	0
   589 ;;_s	offset=-2 (param)
   590 ;;_index	offset=-1 (param)
   591 ;;_arg	offset	0
   592 ;;_exp	offset	4
   593 ;;_sign	offset=-1 (param)
   594 ;;_val	offset=-5 (param)
   595 ;;_b	offset=-4 (param)
   596 ;;_a	offset=-8 (param)
   597 ;;_grs	offset	0
   598 ;;_bexp	offset	1
   599 ;;_aexp	offset	2
   600 ;;_signs	offset	3
   601 ;;_b	offset=-4 (param)
   602 ;;_a	offset=-8 (param)
   603 ;;_prod	offset	0
   604 ;;_grs	offset	4
   605 ;;_temp	offset	8
   606 ;;_bexp	offset	10
   607 ;;_aexp	offset	11
   608 ;;_sign	offset	12
   609 ;;_b	offset=-4 (param)
   610 ;;_a	offset=-8 (param)
   611 ;;_grs	offset	0
   612 ;;_rem	offset	4
   613 ;;_new_exp	offset	8
   614 ;;_aexp	offset	10
   615 ;;_bexp	offset	11
   616 ;;_sign	offset	12
   617 ;;_b	offset=-4 (param)
   618 ;;_a	offset=-8 (param)
   619 ;;_ff1	offset=-4 (param)
   620 ;;_ff2	offset=-8 (param)
   621 ;;_timerVal	offset=-2 (param)
   622 ;;_adj	offset	0
   623 ;;_log_ptr	offset	4
   624 ;;_f	offset	0
   625 ;;_ap	offset	6
   626 ;;_s	offset=-3 (param)
   627 ;;_fmt	offset=-5 (param)
   628 ;;_cfmt	offset	0
   629 ;;_fp	offset=-2 (param)
   630 ;;_fmt	offset=-4 (param)
   631 ;;_ap	offset=-6 (param)
   632 ;;_vfpfcnvrt$6810	offset	0
   633 ;;_vfpfcnvrt$6821	offset	2
   634 ;;_vfpfcnvrt$6809	offset	4
   635 ;;_llu	offset	6
   636 ;;_ll	offset	14
   637 ;;_f	offset	22
   638 ;;_ct	offset	26
   639 ;;_cp	offset	29
   640 ;;_c	offset	31
   641 ;;_fp	offset=-2 (param)
   642 ;;_fmt	offset=-4 (param)
   643 ;;_ap	offset=-6 (param)
   644 ;;_xtoa$6795	offset	0
   645 ;;_xtoa$6794	offset	2
   646 ;;_n	offset	4
   647 ;;_c	offset	12
   648 ;;_i	offset	14
   649 ;;_w	offset	16
   650 ;;_p	offset	18
   651 ;;_fp	offset=-2 (param)
   652 ;;_d	offset=-10 (param)
   653 ;;_x	offset=-11 (param)
   654 ;;_toupper$7601	offset	0
   655 ;;_c	offset=-2 (param)
   656 ;;_c	offset=-2 (param)
   657 ;;_c	offset=-2 (param)
   658 ;;_n	offset	0
   659 ;;_i	offset	8
   660 ;;_w	offset	10
   661 ;;_p	offset	12
   662 ;;_fp	offset=-2 (param)
   663 ;;_d	offset=-10 (param)
   664 ;;_counter	offset	0
   665 ;;_dividend	offset=-8 (param)
   666 ;;_divisor	offset=-16 (param)
   667 ;;_quotient	offset	0
   668 ;;_counter	offset	8
   669 ;;_dividend	offset=-8 (param)
   670 ;;_divisor	offset=-16 (param)
   671 ;;_r	offset	0
   672 ;;_l	offset	2
   673 ;;__l	offset=-2 (param)
   674 ;;__r	offset=-4 (param)
   675 ;;_n	offset=-6 (param)
   676 ;;_nuls	offset	0
   677 ;;_l	offset	7
   678 ;;_p	offset	9
   679 ;;_cp	offset	11
   680 ;;_w	offset	13
   681 ;;_i	offset	15
   682 ;;_fp	offset=-2 (param)
   683 ;;_s	offset=-4 (param)
   684 ;;_efgtoa$6767	offset	0
   685 ;;_efgtoa$6766	offset	2
   686 ;;_efgtoa$6765	offset	4
   687 ;;_efgtoa$6761	offset	6
   688 ;;_efgtoa$6757	offset	8
   689 ;;_efgtoa$6756	offset	10
   690 ;;_u	offset	12
   691 ;;_g	offset	16
   692 ;;_l	offset	20
   693 ;;_h	offset	24
   694 ;;_ou	offset	28
   695 ;;_n	offset	32
   696 ;;_e	offset	34
   697 ;;_i	offset	36
   698 ;;_w	offset	38
   699 ;;_p	offset	40
   700 ;;_sign	offset	42
   701 ;;_d	offset	44
   702 ;;_ne	offset	46
   703 ;;_m	offset	48
   704 ;;_pp	offset	50
   705 ;;_t	offset	52
   706 ;;_mode	offset	54
   707 ;;_nmode	offset	55
   708 ;;_fp	offset=-2 (param)
   709 ;;_f	offset=-6 (param)
   710 ;;_c	offset=-7 (param)
   711 ;;_tolower$7586	offset	0
   712 ;;_c	offset=-2 (param)
   713 ;;_c	offset=-2 (param)
   714 ;;_d	offset	0
   715 ;;_s	offset	2
   716 ;;_dest	offset=-2 (param)
   717 ;;_src	offset=-4 (param)
   718 ;;_u	offset	0
   719 ;;_m	offset	4
   720 ;;_e	offset	8
   721 ;;_x	offset=-4 (param)
   722 ;;_u	offset	0
   723 ;;_e	offset	4
   724 ;;_x	offset=-4 (param)
   725 ;;_exp1	offset	0
   726 ;;_sign1	offset	1
   727 ;;_f1	offset=-4 (param)
   728 ;;_f1	offset=-4 (param)
   729 ;;_ff1	offset=-4 (param)
   730 ;;_ff2	offset=-8 (param)
   731 ;;_sign	offset	0
   732 ;;_counter	offset	1
   733 ;;_dividend	offset=-2 (param)
   734 ;;_divisor	offset=-4 (param)
   735 ;;_quotient	offset	0
   736 ;;_sign	offset	2
   737 ;;_counter	offset	3
   738 ;;_dividend	offset=-2 (param)
   739 ;;_divisor	offset=-4 (param)
   740 ;;_dtoa$6733	offset	0
   741 ;;_n	offset	2
   742 ;;_i	offset	10
   743 ;;_s	offset	12
   744 ;;_w	offset	14
   745 ;;_p	offset	16
   746 ;;_fp	offset=-2 (param)
   747 ;;_d	offset=-10 (param)
   748 ;;_a	offset=-2 (param)
   749 ;;_sign	offset	0
   750 ;;_counter	offset	1
   751 ;;_dividend	offset=-8 (param)
   752 ;;_divisor	offset=-16 (param)
   753 ;;_quotient	offset	0
   754 ;;_sign	offset	8
   755 ;;_counter	offset	9
   756 ;;_dividend	offset=-8 (param)
   757 ;;_divisor	offset=-16 (param)
   758 ;;_w	offset	0
   759 ;;_fp	offset=-2 (param)
   760 ;;_c	offset=-3 (param)
   761 ;;_w	offset	0
   762 ;;_i	offset	2
   763 ;;_fp	offset=-2 (param)
   764 ;;_buf	offset=-4 (param)
   765 ;;_p	offset=-6 (param)
   766 ;;_a	offset	0
   767 ;;_s	offset=-2 (param)
   768 ;;_i	offset	0
   769 ;;_c	offset	2
   770 ;;_s	offset=-2 (param)
   771 ;;_fp	offset=-4 (param)
   772 ;;_c	offset=-2 (param)
   773 ;;_fp	offset=-4 (param)
   774 ;;_c	offset=-1 (param)
   775 ;;__this	offset=-2 (param)
   776 ;;_c	offset=-3 (param)
   777 ;;_atoi$7317	offset	0
   778 ;;_atoi$7315	offset	2
   779 ;;_atoi$7316	offset	4
   780 ;;_n	offset	5
   781 ;;_neg	offset	7
   782 ;;_s	offset=-2 (param)
   783 ;;_isspace$7366	offset	0
   784 ;;_c	offset=-2 (param)
   785 ;;_c	offset=-2 (param)
   786 ;;_dsize	offset=-2 (param)
   787 ;;_u	offset	0
   788 ;;_x	offset=-4 (param)
   789 ;;_f1p	offset=-2 (param)
   790 ;;_f2	offset=-6 (param)
   791 ;;_timer	offset=-1 (param)
   792 ;;_count	offset=-3 (param)
   793 ;;_channel	offset=-1 (param)
   794 ;;_i	offset	0
   795                           
   796                           	psect	idataBIGRAM
   797  016D72                     __pidataBIGRAM:
   798                           	opt callstack 0
   799                           
   800                           ;initializer for _port_data
   801  016D72  FF                 	db	255
   802  016D73  00                 	db	0
   803  016D74  FF                 	db	255
   804  016D75  00                 	db	0
   805  016D76  FF                 	db	255
   806  016D77  00                 	db	0
   807  016D78  FF                 	db	255
   808  016D79  00                 	db	0
   809  016D7A  FF                 	db	255
   810  016D7B  00                 	db	0
   811  016D7C  FF                 	db	255
   812  016D7D  00                 	db	0
   813  016D7E  FF                 	db	255
   814  016D7F  00                 	db	0
   815  016D80  FF                 	db	255
   816  016D81  00                 	db	0
   817  016D82  00                 	db	0
   818  016D83  00                 	db	0
   819  016D84  00                 	db	0
   820  016D85  00                 	db	0
   821  016D86  00                 	db	0
   822  016D87  00                 	db	0
   823  016D88  00                 	db	0
   824  016D89  00                 	db	0
   825  016D8A  00                 	db	0
   826  016D8B  00                 	db	0
   827  016D8C  00                 	db	0
   828  016D8D  00                 	db	0
   829  016D8E  00                 	db	0
   830  016D8F  00                 	db	0
   831  016D90  00                 	db	0
   832  016D91  00                 	db	0
   833  016D92  00                 	db	0
   834  016D93  00                 	db	0
   835  016D94  00                 	db	0
   836  016D95  00                 	db	0
   837  016D96  00                 	db	0
   838  016D97  00                 	db	0
   839  016D98  00                 	db	0
   840  016D99  00                 	db	0
   841  016D9A  00                 	db	0
   842  016D9B  00                 	db	0
   843  016D9C  00                 	db	0
   844  016D9D  00                 	db	0
   845  016D9E  00                 	db	0
   846  016D9F  00                 	db	0
   847  016DA0  00                 	db	0
   848  016DA1  00                 	db	0
   849  016DA2  00                 	db	0
   850  016DA3  00                 	db	0
   851  016DA4  00                 	db	0
   852  016DA5  00                 	db	0
   853  016DA6  00                 	db	0
   854  016DA7  00                 	db	0
   855  016DA8  00                 	db	0
   856  016DA9  00                 	db	0
   857  016DAA  00                 	db	0
   858  016DAB  00                 	db	0
   859  016DAC  00                 	db	0
   860  016DAD  00                 	db	0
   861  016DAE  00                 	db	0
   862  016DAF  00                 	db	0
   863  016DB0  00                 	db	0
   864  016DB1  00                 	db	0
   865  016DB2  00                 	db	0
   866  016DB3  00                 	db	0
   867  016DB4  00                 	db	0
   868  016DB5  00                 	db	0
   869  016DB6  00                 	db	0
   870  016DB7  00                 	db	0
   871  016DB8  00                 	db	0
   872  016DB9  00                 	db	0
   873  016DBA  00                 	db	0
   874  016DBB  00                 	db	0
   875  016DBC  00                 	db	0
   876  016DBD  00                 	db	0
   877  016DBE  00                 	db	0
   878  016DBF  00                 	db	0
   879  016DC0  00                 	db	0
   880  016DC1  00                 	db	0
   881  016DC2  00                 	db	0
   882  016DC3  00                 	db	0
   883  016DC4  00                 	db	0
   884  016DC5  00                 	db	0
   885  016DC6  00                 	db	0
   886  016DC7  00                 	db	0
   887  016DC8  00                 	db	0
   888  016DC9  00                 	db	0
   889  016DCA  00                 	db	0
   890  016DCB  00                 	db	0
   891  016DCC  00                 	db	0
   892  016DCD  00                 	db	0
   893  016DCE  00                 	db	0
   894  016DCF  00                 	db	0
   895  016DD0  00                 	db	0
   896  016DD1  00                 	db	0
   897  016DD2  00                 	db	0
   898  016DD3  00                 	db	0
   899  016DD4  00                 	db	0
   900  016DD5  00                 	db	0
   901  016DD6  00                 	db	0
   902  016DD7  00                 	db	0
   903  016DD8  00                 	db	0
   904  016DD9  00                 	db	0
   905  016DDA  00                 	db	0
   906  016DDB  00                 	db	0
   907  016DDC  00                 	db	0
   908  016DDD  00                 	db	0
   909  016DDE  00                 	db	0
   910  016DDF  00                 	db	0
   911  016DE0  00                 	db	0
   912  016DE1  00                 	db	0
   913  016DE2  00                 	db	0
   914  016DE3  00                 	db	0
   915  016DE4  00                 	db	0
   916  016DE5  00                 	db	0
   917  016DE6  00                 	db	0
   918  016DE7  00                 	db	0
   919  016DE8  00                 	db	0
   920  016DE9  00                 	db	0
   921  016DEA  00                 	db	0
   922  016DEB  00                 	db	0
   923  016DEC  00                 	db	0
   924  016DED  00                 	db	0
   925  016DEE  00                 	db	0
   926  016DEF  00                 	db	0
   927  016DF0  00                 	db	0
   928  016DF1  00                 	db	0
   929  016DF2  00                 	db	0
   930  016DF3  00                 	db	0
   931  016DF4  00                 	db	0
   932  016DF5  00                 	db	0
   933  016DF6  00                 	db	0
   934  016DF7  00                 	db	0
   935  016DF8  00                 	db	0
   936  016DF9  00                 	db	0
   937  016DFA  00                 	db	0
   938  016DFB  00                 	db	0
   939  016DFC  00                 	db	0
   940  016DFD  00                 	db	0
   941  016DFE  00                 	db	0
   942  016DFF  00                 	db	0
   943  016E00  00                 	db	0
   944  016E01  00                 	db	0
   945  016E02  00                 	db	0
   946  016E03  00                 	db	0
   947  016E04  00                 	db	0
   948  016E05  00                 	db	0
   949  016E06  00                 	db	0
   950  016E07  00                 	db	0
   951  016E08  00                 	db	0
   952  016E09  00                 	db	0
   953  016E0A  00                 	db	0
   954  016E0B  00                 	db	0
   955  016E0C  00                 	db	0
   956  016E0D  00                 	db	0
   957  016E0E  00                 	db	0
   958  016E0F  00                 	db	0
   959  016E10  00                 	db	0
   960  016E11  00                 	db	0
   961  016E12  00                 	db	0
   962  016E13  00                 	db	0
   963  016E14  00                 	db	0
   964  016E15  00                 	db	0
   965  016E16  00                 	db	0
   966  016E17  00                 	db	0
   967  016E18  00                 	db	0
   968  016E19  00                 	db	0
   969  016E1A  00                 	db	0
   970  016E1B  00                 	db	0
   971  016E1C  00                 	db	0
   972  016E1D  00                 	db	0
   973  016E1E  00                 	db	0
   974  016E1F  00                 	db	0
   975  016E20  00                 	db	0
   976  016E21  00                 	db	0
   977  016E22  00                 	db	0
   978  016E23  00                 	db	0
   979  016E24  00                 	db	0
   980  016E25  00                 	db	0
   981  016E26  00                 	db	0
   982  016E27  00                 	db	0
   983  016E28  00                 	db	0
   984  016E29  00                 	db	0
   985  016E2A  00                 	db	0
   986  016E2B  00                 	db	0
   987  016E2C  00                 	db	0
   988  016E2D  00                 	db	0
   989  016E2E  00                 	db	0
   990  016E2F  00                 	db	0
   991  016E30  00                 	db	0
   992  016E31  00                 	db	0
   993  016E32  00                 	db	0
   994  016E33  00                 	db	0
   995  016E34  00                 	db	0
   996  016E35  00                 	db	0
   997  016E36  00                 	db	0
   998  016E37  00                 	db	0
   999  016E38  00                 	db	0
  1000  016E39  00                 	db	0
  1001  016E3A  00                 	db	0
  1002  016E3B  00                 	db	0
  1003  016E3C  00                 	db	0
  1004  016E3D  00                 	db	0
  1005  016E3E  00                 	db	0
  1006  016E3F  00                 	db	0
  1007  016E40  00                 	db	0
  1008  016E41  00                 	db	0
  1009  016E42  00                 	db	0
  1010  016E43  00                 	db	0
  1011  016E44  00                 	db	0
  1012  016E45  00                 	db	0
  1013  016E46  00                 	db	0
  1014  016E47  00                 	db	0
  1015  016E48  00                 	db	0
  1016  016E49  00                 	db	0
  1017  016E4A  00                 	db	0
  1018  016E4B  00                 	db	0
  1019  016E4C  00                 	db	0
  1020  016E4D  00                 	db	0
  1021  016E4E  00                 	db	0
  1022  016E4F  00                 	db	0
  1023  016E50  00                 	db	0
  1024  016E51  00                 	db	0
  1025  016E52  00                 	db	0
  1026  016E53  00                 	db	0
  1027  016E54  00                 	db	0
  1028  016E55  00                 	db	0
  1029  016E56  00                 	db	0
  1030  016E57  00                 	db	0
  1031  016E58  00                 	db	0
  1032  016E59  00                 	db	0
  1033  016E5A  00                 	db	0
  1034  016E5B  00                 	db	0
  1035  016E5C  00                 	db	0
  1036  016E5D  00                 	db	0
  1037  016E5E  00                 	db	0
  1038  016E5F  00                 	db	0
  1039  016E60  00                 	db	0
  1040  016E61  00                 	db	0
  1041  016E62  00                 	db	0
  1042  016E63  00                 	db	0
  1043  016E64  00                 	db	0
  1044  016E65  00                 	db	0
  1045  016E66  00                 	db	0
  1046  016E67  00                 	db	0
  1047  016E68  00                 	db	0
  1048  016E69  00                 	db	0
  1049  016E6A  00                 	db	0
  1050  016E6B  00                 	db	0
  1051  016E6C  00                 	db	0
  1052  016E6D  00                 	db	0
  1053  016E6E  00                 	db	0
  1054  016E6F  00                 	db	0
  1055  016E70  00                 	db	0
  1056  016E71  00                 	db	0
  1057  016E72  00                 	db	0
  1058  016E73  00                 	db	0
  1059  016E74  00                 	db	0
  1060  016E75  00                 	db	0
  1061  016E76  00                 	db	0
  1062  016E77  00                 	db	0
  1063  016E78  00                 	db	0
  1064  016E79  00                 	db	0
  1065  016E7A  00                 	db	0
  1066  016E7B  00                 	db	0
  1067  016E7C  00                 	db	0
  1068  016E7D  00                 	db	0
  1069  016E7E  00                 	db	0
  1070  016E7F  00                 	db	0
  1071  016E80  00                 	db	0
  1072  016E81  00                 	db	0
  1073  016E82  00                 	db	0
  1074  016E83  00                 	db	0
  1075  016E84  00                 	db	0
  1076  016E85  00                 	db	0
  1077  016E86  00                 	db	0
  1078  016E87  00                 	db	0
  1079  016E88  00                 	db	0
  1080  016E89  00                 	db	0
  1081  016E8A  00                 	db	0
  1082  016E8B  00                 	db	0
  1083  016E8C  00                 	db	0
  1084  016E8D  00                 	db	0
  1085  016E8E  00                 	db	0
  1086  016E8F  00                 	db	0
  1087  016E90  00                 	db	0
  1088  016E91  00                 	db	0
  1089  016E92  00                 	db	0
  1090  016E93  00                 	db	0
  1091  016E94  00                 	db	0
  1092  016E95  00                 	db	0
  1093  016E96  00                 	db	0
  1094  016E97  00                 	db	0
  1095  016E98  00                 	db	0
  1096  016E99  00                 	db	0
  1097  016E9A  00                 	db	0
  1098  016E9B  00                 	db	0
  1099  016E9C  00                 	db	0
  1100  016E9D  00                 	db	0
  1101  016E9E  00                 	db	0
  1102  016E9F  00                 	db	0
  1103  016EA0  00                 	db	0
  1104  016EA1  00                 	db	0
  1105  016EA2  00                 	db	0
  1106  016EA3  00                 	db	0
  1107  016EA4  00                 	db	0
  1108  016EA5  00                 	db	0
  1109  016EA6  00                 	db	0
  1110  016EA7  00                 	db	0
  1111  016EA8  00                 	db	0
  1112  016EA9  00                 	db	0
  1113  016EAA  00                 	db	0
  1114  016EAB  00                 	db	0
  1115  016EAC  00                 	db	0
  1116  016EAD  00                 	db	0
  1117  016EAE  00                 	db	0
  1118  016EAF  00                 	db	0
  1119  016EB0  00                 	db	0
  1120  016EB1  00                 	db	0
  1121  016EB2  00                 	db	0
  1122  016EB3  00                 	db	0
  1123  016EB4  00                 	db	0
  1124  016EB5  00                 	db	0
  1125  016EB6  00                 	db	0
  1126  016EB7  00                 	db	0
  1127  016EB8  00                 	db	0
  1128  016EB9  00                 	db	0
  1129  016EBA  00                 	db	0
  1130  016EBB  00                 	db	0
  1131  016EBC  00                 	db	0
  1132  016EBD  00                 	db	0
  1133  016EBE  00                 	db	0
  1134  016EBF  00                 	db	0
  1135  016EC0  00                 	db	0
  1136  016EC1  00                 	db	0
  1137  016EC2  00                 	db	0
  1138  016EC3  00                 	db	0
  1139  016EC4  00                 	db	0
  1140  016EC5  00                 	db	0
  1141  016EC6  00                 	db	0
  1142  016EC7  00                 	db	0
  1143  016EC8  00                 	db	0
  1144  016EC9  00                 	db	0
  1145  016ECA  00                 	db	0
  1146  016ECB  00                 	db	0
  1147  016ECC  00                 	db	0
  1148  016ECD  00                 	db	0
  1149  016ECE  00                 	db	0
  1150  016ECF  00                 	db	0
  1151  016ED0  00                 	db	0
  1152  016ED1  00                 	db	0
  1153  016ED2  00                 	db	0
  1154  016ED3  00                 	db	0
  1155  016ED4  00                 	db	0
  1156  016ED5  00                 	db	0
  1157  016ED6  00                 	db	0
  1158  016ED7  00                 	db	0
  1159  016ED8  00                 	db	0
  1160  016ED9  00                 	db	0
  1161  016EDA  00                 	db	0
  1162  016EDB  00                 	db	0
  1163  016EDC  00                 	db	0
  1164  016EDD  00                 	db	0
  1165  016EDE  00                 	db	0
  1166  016EDF  00                 	db	0
  1167  016EE0  00                 	db	0
  1168  016EE1  00                 	db	0
  1169  016EE2  00                 	db	0
  1170  016EE3  00                 	db	0
  1171  016EE4  00                 	db	0
  1172  016EE5  00                 	db	0
  1173  016EE6  00                 	db	0
  1174  016EE7  00                 	db	0
  1175  016EE8  00                 	db	0
  1176  016EE9  00                 	db	0
  1177  016EEA  00                 	db	0
  1178  016EEB  00                 	db	0
  1179  016EEC  00                 	db	0
  1180  016EED  00                 	db	0
  1181  016EEE  00                 	db	0
  1182  016EEF  00                 	db	0
  1183  016EF0  00                 	db	0
  1184  016EF1  00                 	db	0
  1185  016EF2  00                 	db	0
  1186  016EF3  00                 	db	0
  1187  016EF4  00                 	db	0
  1188  016EF5  00                 	db	0
  1189  016EF6  00                 	db	0
  1190  016EF7  00                 	db	0
  1191  016EF8  00                 	db	0
  1192  016EF9  00                 	db	0
  1193  016EFA  00                 	db	0
  1194  016EFB  00                 	db	0
  1195  016EFC  00                 	db	0
  1196  016EFD  00                 	db	0
  1197  016EFE  00                 	db	0
  1198  016EFF  00                 	db	0
  1199  016F00  00                 	db	0
  1200  016F01  00                 	db	0
  1201  016F02  00                 	db	0
  1202  016F03  00                 	db	0
  1203  016F04  00                 	db	0
  1204  016F05  00                 	db	0
  1205  016F06  00                 	db	0
  1206  016F07  00                 	db	0
  1207  016F08  00                 	db	0
  1208  016F09  00                 	db	0
  1209  016F0A  00                 	db	0
  1210  016F0B  00                 	db	0
  1211  016F0C  00                 	db	0
  1212  016F0D  00                 	db	0
  1213  016F0E  00                 	db	0
  1214  016F0F  00                 	db	0
  1215  016F10  00                 	db	0
  1216  016F11  00                 	db	0
  1217  016F12  00                 	db	0
  1218  016F13  00                 	db	0
  1219  016F14  00                 	db	0
  1220  016F15  00                 	db	0
  1221  016F16  00                 	db	0
  1222  016F17  00                 	db	0
  1223  016F18  00                 	db	0
  1224  016F19  00                 	db	0
  1225  016F1A  00                 	db	0
  1226  016F1B  00                 	db	0
  1227  016F1C  00                 	db	0
  1228  016F1D  00                 	db	0
  1229  016F1E  00                 	db	0
  1230  016F1F  00                 	db	0
  1231  016F20  00                 	db	0
  1232  016F21  00                 	db	0
  1233  016F22  00                 	db	0
  1234  016F23  00                 	db	0
  1235  016F24  00                 	db	0
  1236  016F25  00                 	db	0
  1237  016F26  00                 	db	0
  1238  016F27  00                 	db	0
  1239  016F28  00                 	db	0
  1240  016F29  00                 	db	0
  1241  016F2A  00                 	db	0
  1242  016F2B  00                 	db	0
  1243  016F2C  00                 	db	0
  1244  016F2D  00                 	db	0
  1245  016F2E  00                 	db	0
  1246  016F2F  00                 	db	0
  1247  016F30  00                 	db	0
  1248  016F31  00                 	db	0
  1249  016F32  00                 	db	0
  1250  016F33  00                 	db	0
  1251  016F34  00                 	db	0
  1252  016F35  00                 	db	0
  1253  016F36  00                 	db	0
  1254  016F37  00                 	db	0
  1255  016F38  00                 	db	0
  1256  016F39  00                 	db	0
  1257  016F3A  00                 	db	0
  1258  016F3B  00                 	db	0
  1259  016F3C  00                 	db	0
  1260  016F3D  00                 	db	0
  1261  016F3E  00                 	db	0
  1262  016F3F  00                 	db	0
  1263  016F40  00                 	db	0
  1264  016F41  00                 	db	0
  1265  016F42  00                 	db	0
  1266  016F43  00                 	db	0
  1267  016F44  00                 	db	0
  1268  016F45  00                 	db	0
  1269  016F46  00                 	db	0
  1270  016F47  00                 	db	0
  1271  016F48  00                 	db	0
  1272  016F49  00                 	db	0
  1273  016F4A  00                 	db	0
  1274  016F4B  00                 	db	0
  1275  016F4C  00                 	db	0
  1276  016F4D  00                 	db	0
  1277  016F4E  00                 	db	0
  1278  016F4F  00                 	db	0
  1279  016F50  00                 	db	0
  1280  016F51  00                 	db	0
  1281  016F52  00                 	db	0
  1282  016F53  00                 	db	0
  1283  016F54  00                 	db	0
  1284  016F55  00                 	db	0
  1285  016F56  00                 	db	0
  1286  016F57  00                 	db	0
  1287  016F58  00                 	db	0
  1288  016F59  00                 	db	0
  1289  016F5A  00                 	db	0
  1290  016F5B  00                 	db	0
  1291  016F5C  00                 	db	0
  1292  016F5D  00                 	db	0
  1293  016F5E  00                 	db	0
  1294  016F5F  00                 	db	0
  1295  016F60  00                 	db	0
  1296  016F61  00                 	db	0
  1297  016F62  00                 	db	0
  1298  016F63  00                 	db	0
  1299  016F64  00                 	db	0
  1300  016F65  00                 	db	0
  1301  016F66  00                 	db	0
  1302  016F67  00                 	db	0
  1303  016F68  00                 	db	0
  1304  016F69  00                 	db	0
  1305  016F6A  00                 	db	0
  1306  016F6B  00                 	db	0
  1307  016F6C  00                 	db	0
  1308  016F6D  00                 	db	0
  1309  016F6E  00                 	db	0
  1310  016F6F  00                 	db	0
  1311  016F70  00                 	db	0
  1312  016F71  00                 	db	0
  1313                           
  1314                           ;initializer for _C
  1315  016F72  0000               	dw	0
  1316  016F74  0000               	dw	0
  1317  016F76  0000               	dw	0
  1318  016F78  0000               	dw	0
  1319  016F7A  0000               	dw	0
  1320  016F7C  0000               	dw	0
  1321  016F7E  0000               	dw	0
  1322  016F80  0000               	dw	0
  1323  016F82  0000               	dw	0
  1324  016F84  0000               	dw	0
  1325  016F86  0000               	dw	0
  1326  016F88  0000               	dw	0
  1327  016F8A  0000               	dw	0
  1328  016F8C  0000               	dw	0
  1329  016F8E  0000               	dw	0
  1330  016F90  0000               	dw	0
  1331  016F92  0000               	dw	0
  1332  016F94  0000               	dw	0
  1333  016F96  0000               	dw	0
  1334  016F98  0000               	dw	0
  1335  016F9A  0000               	dw	0
  1336  016F9C  0000               	dw	0
  1337  016F9E  0000               	dw	0
  1338  016FA0  0000               	dw	0
  1339  016FA2  0000               	dw	0
  1340  016FA4  0000               	dw	0
  1341  016FA6  0000               	dw	0
  1342  016FA8  0000               	dw	0
  1343  016FAA  0000               	dw	0
  1344  016FAC  0000               	dw	0
  1345  016FAE  0000               	dw	0
  1346  016FB0  0000               	dw	0
  1347  016FB2  0000               	dw	0
  1348  016FB4  0000               	dw	0
  1349  016FB6  0000               	dw	0
  1350  016FB8  0000               	dw	0
  1351  016FBA  0000               	dw	0
  1352  016FBC  0000               	dw	0
  1353  016FBE  0000               	dw	0
  1354  016FC0  0000               	dw	0
  1355  016FC2  0000               	dw	0
  1356  016FC4  0000               	dw	0
  1357  016FC6  0000               	dw	0
  1358  016FC8  0000               	dw	0
  1359  016FCA  0000               	dw	0
  1360  016FCC  0000               	dw	0
  1361  016FCE  0000               	dw	0
  1362  016FD0  0000               	dw	0
  1363  016FD2  0000               	dw	0
  1364  016FD4  0000               	dw	0
  1365  016FD6  0000               	dw	0
  1366  016FD8  0000               	dw	0
  1367  016FDA  0000               	dw	0
  1368  016FDC  0000               	dw	0
  1369  016FDE  0000               	dw	0
  1370  016FE0  0000               	dw	0
  1371  016FE2  0000               	dw	0
  1372  016FE4  0000               	dw	0
  1373  016FE6  0000               	dw	0
  1374  016FE8  0000               	dw	0
  1375  016FEA  0000               	dw	0
  1376  016FEC  0000               	dw	0
  1377  016FEE  0000               	dw	0
  1378  016FF0  0000               	dw	0
  1379  016FF2  0000               	dw	0
  1380  016FF4  0000               	dw	0
  1381  016FF6  0000               	dw	0
  1382  016FF8  0000               	dw	0
  1383  016FFA  0000               	dw	0
  1384  016FFC  0000               	dw	0
  1385  016FFE  0000               	dw	0
  1386  017000  42FA               	dw	17146
  1387  017002  0000               	dw	0
  1388  017004  0000               	dw	0
  1389  017006  0000               	dw	0
  1390  017008  0000               	dw	0
  1391  01700A  0000               	dw	0
  1392  01700C  0000               	dw	0
  1393  01700E  0000               	dw	0
  1394  017010  0000               	dw	0
  1395  017012  0000               	dw	0
  1396  017014  0000               	dw	0
  1397  017016  0000               	dw	0
  1398  017018  0000               	dw	0
  1399  01701A  0000               	dw	0
  1400  01701C  0000               	dw	0
  1401  01701E  0000               	dw	0
  1402  017020  0000               	dw	0
  1403  017022  0000               	dw	0
  1404  017024  0000               	dw	0
  1405  017026  0000               	dw	0
  1406  017028  0000               	dw	0
  1407  01702A  00                 	db	0
  1408  01702B  01                 	db	1
  1409  01702C  0000               	dw	0
  1410  01702E  0000               	dw	0
  1411  017030  0000               	dw	0
  1412  017032  0000               	dw	0
  1413  017034  0000               	dw	0
  1414  017036  0000               	dw	0
  1415  017038  0000               	dw	0
  1416  01703A  0000               	dw	0
  1417  01703C  0000               	dw	0
  1418  01703E  0000               	dw	0
  1419  017040  0000               	dw	0
  1420  017042  00                 	db	0
  1421  017043  00                 	db	0
  1422  017044  0000               	dw	0
  1423  017046  3F80               	dw	16256
  1424  017048  0000               	dw	0
  1425  01704A  3F80               	dw	16256
  1426  01704C  00                 	db	0
  1427  01704D  00                 	db	0
  1428  01704E  00                 	db	0
  1429  01704F  00                 	db	0
  1430  017050  00                 	db	0
  1431  017051  00                 	db	0
  1432  017052  00                 	db	0
  1433  017053  00                 	db	0
  1434  017054  00                 	db	0
  1435  017055  00                 	db	0
  1436  017056  00                 	db	0
  1437  017057  00                 	db	0
  1438  017058  00                 	db	0
  1439  017059  00                 	db	0
  1440  01705A  00                 	db	0
  1441  01705B  00                 	db	0
  1442  01705C  00                 	db	0
  1443  01705D  00                 	db	0
  1444  01705E  00                 	db	0
  1445  01705F  00                 	db	0
  1446  017060  00                 	db	0
  1447  017061  00                 	db	0
  1448  017062  00                 	db	0
  1449  017063  00                 	db	0
  1450  017064  00                 	db	0
  1451  017065  00                 	db	0
  1452  017066  00                 	db	0
  1453  017067  00                 	db	0
  1454  017068  00                 	db	0
  1455  017069  00                 	db	0
  1456  01706A  00                 	db	0
  1457  01706B  00                 	db	0
  1458  01706C  00                 	db	0
  1459  01706D  00                 	db	0
  1460  01706E  00                 	db	0
  1461  01706F  00                 	db	0
  1462  017070  00                 	db	0
  1463  017071  00                 	db	0
  1464  017072  00                 	db	0
  1465  017073  00                 	db	0
  1466  017074  00                 	db	0
  1467  017075  00                 	db	0
  1468  017076  00                 	db	0
  1469  017077  00                 	db	0
  1470  017078  00                 	db	0
  1471  017079  00                 	db	0
  1472  01707A  00                 	db	0
  1473  01707B  00                 	db	0
  1474  01707C  00                 	db	0
  1475  01707D  00                 	db	0
  1476  01707E  00                 	db	0
  1477  01707F  00                 	db	0
  1478  017080  00                 	db	0
  1479  017081  00                 	db	0
  1480  017082  00                 	db	0
  1481  017083  00                 	db	0
  1482  017084  00                 	db	0
  1483  017085  00                 	db	0
  1484  017086  00                 	db	0
  1485  017087  00                 	db	0
  1486  017088  00                 	db	0
  1487  017089  00                 	db	0
  1488  01708A  00                 	db	0
  1489  01708B  00                 	db	0
  1490  01708C  00                 	db	0
  1491  01708D  00                 	db	0
  1492  01708E  00                 	db	0
  1493  01708F  00                 	db	0
  1494  017090  00                 	db	0
  1495  017091  00                 	db	0
  1496  017092  00                 	db	0
  1497  017093  00                 	db	0
  1498  017094  00                 	db	0
  1499  017095  00                 	db	0
  1500  017096  00                 	db	0
  1501  017097  00                 	db	0
  1502  017098  0000               	dw	0
  1503  01709A  0000               	dw	0
  1504  01709C  0000               	dw	0
  1505  01709E  0000               	dw	0
  1506  0170A0  0000               	dw	0
  1507  0170A2  0000               	dw	0
  1508  0170A4  0000               	dw	0
  1509  0170A6  0000               	dw	0
  1510  0170A8  0000               	dw	0
  1511  0170AA  0000               	dw	0
  1512  0170AC  01                 	db	1
  1513  0170AD  00                 	db	0
  1514  0170AE  00                 	db	0
  1515  0170AF  00                 	db	0
  1516  0170B0  00                 	db	0
  1517  0170B1  00                 	db	0
  1518  0170B2  00                 	db	0
  1519  0170B3  00                 	db	0
  1520  0170B4  00                 	db	0
  1521                           
  1522                           	psect	idataBANK0
  1523  01D33A                     __pidataBANK0:
  1524                           	opt callstack 0
  1525                           
  1526                           ;initializer for _H
  1527  01D33A  00                 	db	0
  1528  01D33B  00                 	db	0
  1529  01D33C  01                 	db	1
  1530  01D33D  00                 	db	0
  1531  01D33E  01                 	db	1
  1532  01D33F  00                 	db	0
  1533  01D340  01                 	db	1
  1534  01D341  00                 	db	0
  1535  01D342  00                 	db	0
  1536                           
  1537                           	psect	idataBANK1
  1538  01AFD2                     __pidataBANK1:
  1539                           	opt callstack 0
  1540                           
  1541                           ;initializer for stoa@F1166
  1542  01AFD2  28                 	db	40
  1543  01AFD3  6E                 	db	110
  1544  01AFD4  75                 	db	117
  1545  01AFD5  6C                 	db	108
  1546  01AFD6  6C                 	db	108
  1547  01AFD7  29                 	db	41
  1548  01AFD8  00                 	db	0
  1549                           
  1550                           ;initializer for _V
  1551  01AFD9  00                 	db	0
  1552  01AFDA  00                 	db	0
  1553  01AFDB  00                 	db	0
  1554  01AFDC  00                 	db	0
  1555  01AFDD  00                 	db	0
  1556  01AFDE  00                 	db	0
  1557  01AFDF  00                 	db	0
  1558  01AFE0  00                 	db	0
  1559  01AFE1  00                 	db	0
  1560  01AFE2  00                 	db	0
  1561  01AFE3  00                 	db	0
  1562  01AFE4  00                 	db	0
  1563  01AFE5  00                 	db	0
  1564  01AFE6  00                 	db	0
  1565  01AFE7  00                 	db	0
  1566  01AFE8  00                 	db	0
  1567  01AFE9  00                 	db	0
  1568  01AFEA  00                 	db	0
  1569  01AFEB  00                 	db	0
  1570  01AFEC  00                 	db	0
  1571  01AFED  00                 	db	0
  1572  01AFEE  00                 	db	0
  1573  01AFEF  00                 	db	0
  1574  01AFF0  00                 	db	0
  1575  01AFF1  00                 	db	0
  1576  01AFF2  00                 	db	0
  1577  01AFF3  00                 	db	0
  1578  01AFF4  00                 	db	0
  1579  01AFF5  00                 	db	0
  1580  01AFF6  00                 	db	0
  1581  01AFF7  00                 	db	0
  1582  01AFF8  00                 	db	0
  1583  01AFF9  00                 	db	0
  1584  01AFFA  00                 	db	0
  1585  01AFFB  00                 	db	0
  1586  01AFFC  00                 	db	0
  1587  01AFFD  00                 	db	0
  1588  01AFFE  00                 	db	0
  1589  01AFFF  00                 	db	0
  1590  01B000  00                 	db	0
  1591  01B001  00                 	db	0
  1592  01B002  00                 	db	0
  1593  01B003  00                 	db	0
  1594  01B004  00                 	db	0
  1595  01B005  00                 	db	0
  1596  01B006  00                 	db	0
  1597  01B007  00                 	db	0
  1598  01B008  00                 	db	0
  1599  01B009  00                 	db	0
  1600  01B00A  00                 	db	0
  1601  01B00B  00                 	db	0
  1602  01B00C  00                 	db	0
  1603  01B00D  00                 	db	0
  1604  01B00E  00                 	db	0
  1605  01B00F  00                 	db	0
  1606  01B010  00                 	db	0
  1607  01B011  00                 	db	0
  1608  01B012  00                 	db	0
  1609  01B013  00                 	db	0
  1610  01B014  00                 	db	0
  1611  01B015  00                 	db	0
  1612  01B016  00                 	db	0
  1613  01B017  00                 	db	0
  1614  01B018  00                 	db	0
  1615  01B019  00                 	db	0
  1616  01B01A  00                 	db	0
  1617  01B01B  00                 	db	0
  1618  01B01C  00                 	db	0
  1619  01B01D  00                 	db	0
  1620  01B01E  00                 	db	0
  1621  01B01F  00                 	db	0
  1622  01B020  00                 	db	0
  1623  01B021  00                 	db	0
  1624  01B022  00                 	db	0
  1625  01B023  00                 	db	0
  1626  01B024  00                 	db	0
  1627  01B025  00                 	db	0
  1628  01B026  00                 	db	0
  1629  01B027  00                 	db	0
  1630  01B028  00                 	db	0
  1631  01B029  00                 	db	0
  1632  01B02A  00                 	db	0
  1633  01B02B  00                 	db	0
  1634  01B02C  00                 	db	0
  1635  01B02D  00                 	db	0
  1636  01B02E  00                 	db	0
  1637  01B02F  00                 	db	0
  1638  01B030  00                 	db	0
  1639  01B031  00                 	db	0
  1640  01B032  00                 	db	0
  1641  01B033  00                 	db	0
  1642  01B034  00                 	db	0
  1643  01B035  00                 	db	0
  1644  01B036  00                 	db	0
  1645  01B037  00                 	db	0
  1646  01B038  00                 	db	0
  1647  01B039  00                 	db	0
  1648  01B03A  00                 	db	0
  1649  01B03B  00                 	db	0
  1650  01B03C  00                 	db	0
  1651  01B03D  00                 	db	0
  1652  01B03E  00                 	db	0
  1653  01B03F  00                 	db	0
  1654  01B040  00                 	db	0
  1655  01B041  00                 	db	0
  1656  01B042  00                 	db	0
  1657  01B043  00                 	db	0
  1658  01B044  00                 	db	0
  1659  01B045  00                 	db	0
  1660  01B046  00                 	db	0
  1661  01B047  00                 	db	0
  1662  01B048  00                 	db	0
  1663  01B049  00                 	db	0
  1664  01B04A  00                 	db	0
  1665  01B04B  00                 	db	0
  1666  01B04C  00                 	db	0
  1667  01B04D  00                 	db	0
  1668  01B04E  00                 	db	0
  1669  01B04F  00                 	db	0
  1670  01B050  00                 	db	0
  1671  01B051  00                 	db	0
  1672  01B052  00                 	db	0
  1673  01B053  00                 	db	0
  1674  01B054  00                 	db	0
  1675  01B055  00                 	db	0
  1676  01B056  00                 	db	0
  1677  01B057  00                 	db	0
  1678  01B058  00                 	db	0
  1679  01B059  00                 	db	0
  1680  01B05A  0000               	dw	0
  1681  01B05C  0000               	dw	0
  1682  01B05E  0000               	dw	0
  1683  01B060  0000               	dw	0
  1684  01B062  00                 	db	0
  1685  01B063  00                 	db	0
  1686  01B064  00                 	db	0
  1687  01B065  00                 	db	0
  1688  01B066  00                 	db	0
  1689  01B067  00                 	db	0
  1690  01B068  0000               	dw	0
  1691  01B06A  0000               	dw	0
  1692  01B06C  0000               	dw	0
  1693  01B06E  0000               	dw	0
  1694  01B070  0000               	dw	0
  1695  01B072  0000               	dw	0
  1696  01B074  00                 	db	0
  1697  01B075  00                 	db	0
  1698  01B076  00                 	db	0
  1699  01B077  00                 	db	0
  1700  01B078  00                 	db	0
  1701  01B079  00                 	db	0
  1702  01B07A  00                 	db	0
  1703  01B07B  00                 	db	0
  1704  01B07C  00                 	db	0
  1705  01B07D  00                 	db	0
  1706  01B07E  00                 	db	0
  1707  01B07F  0000               	dw	0
  1708  01B081  0000               	dw	0
  1709  01B083  2D                 	db	45
  1710  01B084  00                 	db	0
  1711  01B085  00                 	db	0
  1712  01B086  00                 	db	0
  1713  01B087  00                 	db	0
  1714  01B088  00                 	db	0
  1715  01B089  0000               	dw	0
  1716  01B08B  0000               	dw	0
  1717  01B08D  0000               	dw	0
  1718  01B08F  0000               	dw	0
  1719  01B091  0000               	dw	0
  1720  01B093  0000               	dw	0
  1721  01B095  0000               	dw	0
  1722  01B097  0000               	dw	0
  1723                           
  1724                           	psect	idataBANK2
  1725  01B632                     __pidataBANK2:
  1726                           	opt callstack 0
  1727                           
  1728                           ;initializer for _R
  1729  01B632  0000               	dw	0
  1730  01B634  0000               	dw	0
  1731  01B636  0000               	dw	0
  1732  01B638  0000               	dw	0
  1733  01B63A  0000               	dw	0
  1734  01B63C  0000               	dw	0
  1735  01B63E  0000               	dw	0
  1736  01B640  0000               	dw	0
  1737  01B642  0000               	dw	0
  1738  01B644  0000               	dw	0
  1739  01B646  0000               	dw	0
  1740  01B648  0000               	dw	0
  1741  01B64A  0000               	dw	0
  1742  01B64C  0000               	dw	0
  1743  01B64E  0000               	dw	0
  1744  01B650  0000               	dw	0
  1745  01B652  0000               	dw	0
  1746  01B654  0000               	dw	0
  1747  01B656  0000               	dw	0
  1748  01B658  0F62               	dw	3938
  1749  01B65A  0FA4               	dw	4004
  1750  01B65C  89A0               	dw	35232
  1751  01B65E  3DB0               	dw	15792
  1752  01B660  DEA4               	dw	56996
  1753  01B662  3D13               	dw	15635
  1754  01B664  00                 	db	0
  1755  01B665  0000               	dw	0
  1756  01B667  00                 	db	0
  1757  01B668  00                 	db	0
  1758  01B669  0000               	dw	0
  1759  01B66B  0000               	dw	0
  1760  01B66D  0000               	dw	0
  1761  01B66F  0000               	dw	0
  1762  01B671  0000               	dw	0
  1763  01B673  0000               	dw	0
  1764  01B675  0000               	dw	0
  1765  01B677  0000               	dw	0
  1766  01B679  0000               	dw	0
  1767  01B67B  0000               	dw	0
  1768  01B67D  0000               	dw	0
  1769  01B67F  00                 	db	0
  1770  01B680  00                 	db	0
  1771  01B681  0000               	dw	0
  1772  01B683  0000               	dw	0
  1773  01B685  0000               	dw	0
  1774  01B687  0000               	dw	0
  1775  01B689  0000               	dw	0
  1776  01B68B  0000               	dw	0
  1777  01B68D  0000               	dw	0
  1778  01B68F  0000               	dw	0
  1779  01B691  0000               	dw	0
  1780  01B693  0000               	dw	0
  1781  01B695  0000               	dw	0
  1782  01B697  0000               	dw	0
  1783  01B699  0000               	dw	0
  1784  01B69B  0000               	dw	0
  1785  01B69D  0000               	dw	0
  1786  01B69F  0000               	dw	0
  1787  01B6A1  0000               	dw	0
  1788  01B6A3  0000               	dw	0
  1789  01B6A5  0000               	dw	0
  1790  01B6A7  0000               	dw	0
  1791  01B6A9  0000               	dw	0
  1792  01B6AB  0000               	dw	0
  1793  01B6AD  0000               	dw	0
  1794  01B6AF  0000               	dw	0
  1795  01B6B1  0000               	dw	0
  1796  01B6B3  0000               	dw	0
  1797  01B6B5  0000               	dw	0
  1798  01B6B7  0000               	dw	0
  1799  01B6B9  0000               	dw	0
  1800  01B6BB  0000               	dw	0
  1801  01B6BD  0000               	dw	0
  1802  01B6BF  0000               	dw	0
  1803  01B6C1  0000               	dw	0
  1804  01B6C3  0000               	dw	0
  1805  01B6C5  0000               	dw	0
  1806  01B6C7  0000               	dw	0
  1807  01B6C9  0000               	dw	0
  1808  01B6CB  0000               	dw	0
  1809  01B6CD  0000               	dw	0
  1810  01B6CF  0000               	dw	0
  1811  01B6D1  0000               	dw	0
  1812  01B6D3  0000               	dw	0
  1813  01B6D5  00                 	db	0
  1814  01B6D6  1957               	dw	6487
  1815  01B6D8  42                 	db	66
  1816                           
  1817                           	psect	mediumconst
  1818  00F8E2                     __pmediumconst:
  1819                           	opt callstack 0
  1820  00F8E2  00                 	db	0
  1821  00F8E3                     _BVSOC_TABLE:
  1822                           	opt callstack 0
  1823  00F8E3  59D8               	dw	23000
  1824  00F8E5  0000               	dw	0
  1825  00F8E7  0005               	dw	5
  1826  00F8E9  0000               	dw	0
  1827  00F8EB  5B68               	dw	23400
  1828  00F8ED  0000               	dw	0
  1829  00F8EF  000A               	dw	10
  1830  00F8F1  0000               	dw	0
  1831  00F8F3  5C30               	dw	23600
  1832  00F8F5  0000               	dw	0
  1833  00F8F7  0014               	dw	20
  1834  00F8F9  0000               	dw	0
  1835  00F8FB  5E38               	dw	24120
  1836  00F8FD  0000               	dw	0
  1837  00F8FF  0019               	dw	25
  1838  00F901  0000               	dw	0
  1839  00F903  5E88               	dw	24200
  1840  00F905  0000               	dw	0
  1841  00F907  001E               	dw	30
  1842  00F909  0000               	dw	0
  1843  00F90B  5F78               	dw	24440
  1844  00F90D  0000               	dw	0
  1845  00F90F  0028               	dw	40
  1846  00F911  0000               	dw	0
  1847  00F913  5FDC               	dw	24540
  1848  00F915  0000               	dw	0
  1849  00F917  002D               	dw	45
  1850  00F919  0000               	dw	0
  1851  00F91B  6018               	dw	24600
  1852  00F91D  0000               	dw	0
  1853  00F91F  0032               	dw	50
  1854  00F921  0000               	dw	0
  1855  00F923  6046               	dw	24646
  1856  00F925  0000               	dw	0
  1857  00F927  0035               	dw	53
  1858  00F929  0000               	dw	0
  1859  00F92B  607C               	dw	24700
  1860  00F92D  0000               	dw	0
  1861  00F92F  0037               	dw	55
  1862  00F931  0000               	dw	0
  1863  00F933  60AE               	dw	24750
  1864  00F935  0000               	dw	0
  1865  00F937  0039               	dw	57
  1866  00F939  0000               	dw	0
  1867  00F93B  60E0               	dw	24800
  1868  00F93D  0000               	dw	0
  1869  00F93F  003C               	dw	60
  1870  00F941  0000               	dw	0
  1871  00F943  6112               	dw	24850
  1872  00F945  0000               	dw	0
  1873  00F947  003F               	dw	63
  1874  00F949  0000               	dw	0
  1875  00F94B  615D               	dw	24925
  1876  00F94D  0000               	dw	0
  1877  00F94F  0043               	dw	67
  1878  00F951  0000               	dw	0
  1879  00F953  61A8               	dw	25000
  1880  00F955  0000               	dw	0
  1881  00F957  0046               	dw	70
  1882  00F959  0000               	dw	0
  1883  00F95B  61BC               	dw	25020
  1884  00F95D  0000               	dw	0
  1885  00F95F  0048               	dw	72
  1886  00F961  0000               	dw	0
  1887  00F963  61D0               	dw	25040
  1888  00F965  0000               	dw	0
  1889  00F967  004B               	dw	75
  1890  00F969  0000               	dw	0
  1891  00F96B  61DA               	dw	25050
  1892  00F96D  0000               	dw	0
  1893  00F96F  0050               	dw	80
  1894  00F971  0000               	dw	0
  1895  00F973  61E4               	dw	25060
  1896  00F975  0000               	dw	0
  1897  00F977  0055               	dw	85
  1898  00F979  0000               	dw	0
  1899  00F97B  61F8               	dw	25080
  1900  00F97D  0000               	dw	0
  1901  00F97F  005A               	dw	90
  1902  00F981  0000               	dw	0
  1903  00F983  6208               	dw	25096
  1904  00F985  0000               	dw	0
  1905  00F987  005C               	dw	92
  1906  00F989  0000               	dw	0
  1907  00F98B  6222               	dw	25122
  1908  00F98D  0000               	dw	0
  1909  00F98F  005D               	dw	93
  1910  00F991  0000               	dw	0
  1911  00F993  6234               	dw	25140
  1912  00F995  0000               	dw	0
  1913  00F997  005F               	dw	95
  1914  00F999  0000               	dw	0
  1915  00F99B  6248               	dw	25160
  1916  00F99D  0000               	dw	0
  1917  00F99F  0061               	dw	97
  1918  00F9A1  0000               	dw	0
  1919  00F9A3  625C               	dw	25180
  1920  00F9A5  0000               	dw	0
  1921  00F9A7  0064               	dw	100
  1922  00F9A9  0000               	dw	0
  1923  00F9AB  6784               	dw	26500
  1924  00F9AD  0000               	dw	0
  1925  00F9AF  0062               	dw	98
  1926  00F9B1  0000               	dw	0
  1927  00F9B3                     __end_of_BVSOC_TABLE:
  1928                           	opt callstack 0
  1929  00F9B3                     _T:
  1930                           	opt callstack 0
  1931  00F9B3  63                 	db	99
  1932  00F9B4  6F                 	db	111
  1933  00F9B5  6D                 	db	109
  1934  00F9B6  6D                 	db	109
  1935  00F9B7  61                 	db	97
  1936  00F9B8  6E                 	db	110
  1937  00F9B9  64                 	db	100
  1938  00F9BA  73                 	db	115
  1939  00F9BB  20                 	db	32
  1940  00F9BC  31                 	db	49
  1941  00F9BD  00                 	db	0
  1942  00F9BE  00                 	db	0
  1943  00F9BF  00                 	db	0
  1944  00F9C0  00                 	db	0
  1945  00F9C1  00                 	db	0
  1946  00F9C2  00                 	db	0
  1947  00F9C3  00                 	db	0
  1948  00F9C4  00                 	db	0
  1949  00F9C5  64                 	db	100
  1950  00F9C6  69                 	db	105
  1951  00F9C7  73                 	db	115
  1952  00F9C8  70                 	db	112
  1953  00F9C9  6C                 	db	108
  1954  00F9CA  61                 	db	97
  1955  00F9CB  79                 	db	121
  1956  00F9CC  73                 	db	115
  1957  00F9CD  20                 	db	32
  1958  00F9CE  31                 	db	49
  1959  00F9CF  00                 	db	0
  1960  00F9D0  00                 	db	0
  1961  00F9D1  00                 	db	0
  1962  00F9D2  00                 	db	0
  1963  00F9D3  00                 	db	0
  1964  00F9D4  00                 	db	0
  1965  00F9D5  00                 	db	0
  1966  00F9D6  00                 	db	0
  1967  00F9D7  63                 	db	99
  1968  00F9D8  6F                 	db	111
  1969  00F9D9  6D                 	db	109
  1970  00F9DA  6D                 	db	109
  1971  00F9DB  61                 	db	97
  1972  00F9DC  6E                 	db	110
  1973  00F9DD  64                 	db	100
  1974  00F9DE  73                 	db	115
  1975  00F9DF  20                 	db	32
  1976  00F9E0  32                 	db	50
  1977  00F9E1  00                 	db	0
  1978  00F9E2  00                 	db	0
  1979  00F9E3  00                 	db	0
  1980  00F9E4  00                 	db	0
  1981  00F9E5  00                 	db	0
  1982  00F9E6  00                 	db	0
  1983  00F9E7  00                 	db	0
  1984  00F9E8  00                 	db	0
  1985  00F9E9  64                 	db	100
  1986  00F9EA  69                 	db	105
  1987  00F9EB  73                 	db	115
  1988  00F9EC  70                 	db	112
  1989  00F9ED  6C                 	db	108
  1990  00F9EE  61                 	db	97
  1991  00F9EF  79                 	db	121
  1992  00F9F0  73                 	db	115
  1993  00F9F1  20                 	db	32
  1994  00F9F2  32                 	db	50
  1995  00F9F3  00                 	db	0
  1996  00F9F4  00                 	db	0
  1997  00F9F5  00                 	db	0
  1998  00F9F6  00                 	db	0
  1999  00F9F7  00                 	db	0
  2000  00F9F8  00                 	db	0
  2001  00F9F9  00                 	db	0
  2002  00F9FA  00                 	db	0
  2003  00F9FB  63                 	db	99
  2004  00F9FC  6F                 	db	111
  2005  00F9FD  6D                 	db	109
  2006  00F9FE  6D                 	db	109
  2007  00F9FF  61                 	db	97
  2008  00FA00  6E                 	db	110
  2009  00FA01  64                 	db	100
  2010  00FA02  73                 	db	115
  2011  00FA03  20                 	db	32
  2012  00FA04  33                 	db	51
  2013  00FA05  00                 	db	0
  2014  00FA06  00                 	db	0
  2015  00FA07  00                 	db	0
  2016  00FA08  00                 	db	0
  2017  00FA09  00                 	db	0
  2018  00FA0A  00                 	db	0
  2019  00FA0B  00                 	db	0
  2020  00FA0C  00                 	db	0
  2021  00FA0D  64                 	db	100
  2022  00FA0E  69                 	db	105
  2023  00FA0F  73                 	db	115
  2024  00FA10  70                 	db	112
  2025  00FA11  6C                 	db	108
  2026  00FA12  61                 	db	97
  2027  00FA13  79                 	db	121
  2028  00FA14  73                 	db	115
  2029  00FA15  20                 	db	32
  2030  00FA16  33                 	db	51
  2031  00FA17  00                 	db	0
  2032  00FA18  00                 	db	0
  2033  00FA19  00                 	db	0
  2034  00FA1A  00                 	db	0
  2035  00FA1B  00                 	db	0
  2036  00FA1C  00                 	db	0
  2037  00FA1D  00                 	db	0
  2038  00FA1E  00                 	db	0
  2039  00FA1F  63                 	db	99
  2040  00FA20  6F                 	db	111
  2041  00FA21  6D                 	db	109
  2042  00FA22  6D                 	db	109
  2043  00FA23  61                 	db	97
  2044  00FA24  6E                 	db	110
  2045  00FA25  64                 	db	100
  2046  00FA26  73                 	db	115
  2047  00FA27  20                 	db	32
  2048  00FA28  34                 	db	52
  2049  00FA29  00                 	db	0
  2050  00FA2A  00                 	db	0
  2051  00FA2B  00                 	db	0
  2052  00FA2C  00                 	db	0
  2053  00FA2D  00                 	db	0
  2054  00FA2E  00                 	db	0
  2055  00FA2F  00                 	db	0
  2056  00FA30  00                 	db	0
  2057  00FA31  64                 	db	100
  2058  00FA32  69                 	db	105
  2059  00FA33  73                 	db	115
  2060  00FA34  70                 	db	112
  2061  00FA35  6C                 	db	108
  2062  00FA36  61                 	db	97
  2063  00FA37  79                 	db	121
  2064  00FA38  73                 	db	115
  2065  00FA39  20                 	db	32
  2066  00FA3A  34                 	db	52
  2067  00FA3B  00                 	db	0
  2068  00FA3C  00                 	db	0
  2069  00FA3D  00                 	db	0
  2070  00FA3E  00                 	db	0
  2071  00FA3F  00                 	db	0
  2072  00FA40  00                 	db	0
  2073  00FA41  00                 	db	0
  2074  00FA42  00                 	db	0
  2075  00FA43                     __end_of_T:
  2076                           	opt callstack 0
  2077  00FA43                     _spin:
  2078                           	opt callstack 0
  2079  00FA43  7C                 	db	124
  2080  00FA44  7C                 	db	124
  2081  00FA45  2F                 	db	47
  2082  00FA46  2F                 	db	47
  2083  00FA47  2D                 	db	45
  2084  00FA48  2D                 	db	45
  2085  00FA49  00                 	db	0
  2086  00FA4A  00                 	db	0
  2087  00FA4B  00                 	db	0
  2088  00FA4C  00                 	db	0
  2089  00FA4D  00                 	db	0
  2090  00FA4E  00                 	db	0
  2091  00FA4F  00                 	db	0
  2092  00FA50  00                 	db	0
  2093  00FA51  00                 	db	0
  2094  00FA52  00                 	db	0
  2095  00FA53  00                 	db	0
  2096  00FA54  00                 	db	0
  2097  00FA55  00                 	db	0
  2098  00FA56  00                 	db	0
  2099  00FA57  7C                 	db	124
  2100  00FA58  7C                 	db	124
  2101  00FA59  2F                 	db	47
  2102  00FA5A  2F                 	db	47
  2103  00FA5B  2D                 	db	45
  2104  00FA5C  2D                 	db	45
  2105  00FA5D  5C                 	db	92
  2106  00FA5E  5C                 	db	92
  2107  00FA5F  00                 	db	0
  2108  00FA60  00                 	db	0
  2109  00FA61  00                 	db	0
  2110  00FA62  00                 	db	0
  2111  00FA63  00                 	db	0
  2112  00FA64  00                 	db	0
  2113  00FA65  00                 	db	0
  2114  00FA66  00                 	db	0
  2115  00FA67  00                 	db	0
  2116  00FA68  00                 	db	0
  2117  00FA69  00                 	db	0
  2118  00FA6A  00                 	db	0
  2119  00FA6B  4F                 	db	79
  2120  00FA6C  4F                 	db	79
  2121  00FA6D  4F                 	db	79
  2122  00FA6E  4F                 	db	79
  2123  00FA6F  4F                 	db	79
  2124  00FA70  4F                 	db	79
  2125  00FA71  2D                 	db	45
  2126  00FA72  2D                 	db	45
  2127  00FA73  5F                 	db	95
  2128  00FA74  5F                 	db	95
  2129  00FA75  2D                 	db	45
  2130  00FA76  00                 	db	0
  2131  00FA77  00                 	db	0
  2132  00FA78  00                 	db	0
  2133  00FA79  00                 	db	0
  2134  00FA7A  00                 	db	0
  2135  00FA7B  00                 	db	0
  2136  00FA7C  00                 	db	0
  2137  00FA7D  00                 	db	0
  2138  00FA7E  00                 	db	0
  2139  00FA7F  76                 	db	118
  2140  00FA80  76                 	db	118
  2141  00FA81  3C                 	db	60
  2142  00FA82  3C                 	db	60
  2143  00FA83  5E                 	db	94
  2144  00FA84  5E                 	db	94
  2145  00FA85  3E                 	db	62
  2146  00FA86  3E                 	db	62
  2147  00FA87  00                 	db	0
  2148  00FA88  00                 	db	0
  2149  00FA89  00                 	db	0
  2150  00FA8A  00                 	db	0
  2151  00FA8B  00                 	db	0
  2152  00FA8C  00                 	db	0
  2153  00FA8D  00                 	db	0
  2154  00FA8E  00                 	db	0
  2155  00FA8F  00                 	db	0
  2156  00FA90  00                 	db	0
  2157  00FA91  00                 	db	0
  2158  00FA92  00                 	db	0
  2159  00FA93  2E                 	db	46
  2160  00FA94  2E                 	db	46
  2161  00FA95  2A                 	db	42
  2162  00FA96  2A                 	db	42
  2163  00FA97  78                 	db	120
  2164  00FA98  23                 	db	35
  2165  00FA99  78                 	db	120
  2166  00FA9A  23                 	db	35
  2167  00FA9B  58                 	db	88
  2168  00FA9C  58                 	db	88
  2169  00FA9D  7C                 	db	124
  2170  00FA9E  7C                 	db	124
  2171  00FA9F  2D                 	db	45
  2172  00FAA0  2D                 	db	45
  2173  00FAA1  00                 	db	0
  2174  00FAA2  00                 	db	0
  2175  00FAA3  00                 	db	0
  2176  00FAA4  00                 	db	0
  2177  00FAA5  00                 	db	0
  2178  00FAA6  00                 	db	0
  2179  00FAA7  2E                 	db	46
  2180  00FAA8  2E                 	db	46
  2181  00FAA9  6F                 	db	111
  2182  00FAAA  6F                 	db	111
  2183  00FAAB  4F                 	db	79
  2184  00FAAC  4F                 	db	79
  2185  00FAAD  6F                 	db	111
  2186  00FAAE  6F                 	db	111
  2187  00FAAF  00                 	db	0
  2188  00FAB0  00                 	db	0
  2189  00FAB1  00                 	db	0
  2190  00FAB2  00                 	db	0
  2191  00FAB3  00                 	db	0
  2192  00FAB4  00                 	db	0
  2193  00FAB5  00                 	db	0
  2194  00FAB6  00                 	db	0
  2195  00FAB7  00                 	db	0
  2196  00FAB8  00                 	db	0
  2197  00FAB9  00                 	db	0
  2198  00FABA  00                 	db	0
  2199  00FABB                     __end_of_spin:
  2200                           	opt callstack 0
  2201  00FABB  0000               	dw	0
  2202  00FABD  3F80               	dw	16256
  2203  00FABF  0000               	dw	0
  2204  00FAC1  3FC0               	dw	16320
  2205  00FAC3                     __end_of_bp:
  2206                           	opt callstack 0
  2207  00FAC3  AA00               	dw	43520
  2208  00FAC5  3FB8               	dw	16312
  2209  00FAC7                     __end_of_ivln2_h:
  2210                           	opt callstack 0
  2211  00FAC7  23C6               	dw	9158
  2212  00FAC9  B8F6               	dw	47350
  2213  00FACB                     __end_of_cp_l:
  2214                           	opt callstack 0
  2215  00FACB  4000               	dw	16384
  2216  00FACD  3F76               	dw	16246
  2217  00FACF                     __end_of_cp_h:
  2218                           	opt callstack 0
  2219  0000                     _IVTADL	set	14493
  2220  0000                     _IVTADH	set	14494
  2221  0000                     _IVTADU	set	14495
  2222  0000                     _CRCDATH	set	14689
  2223  0000                     _CRCDATL	set	14688
  2224  0000                     _CRCCON0bits	set	14696
  2225  0000                     _CRCCON1bits	set	14697
  2226  0000                     _CRCXORL	set	14694
  2227  0000                     _CRCXORH	set	14695
  2228  0000                     _SCANTRIG	set	14717
  2229  0000                     _SCANHADRL	set	14713
  2230  0000                     _SCANHADRH	set	14714
  2231  0000                     _SCANHADRU	set	14715
  2232  0000                     _SCANLADRL	set	14710
  2233  0000                     _SCANLADRH	set	14711
  2234  0000                     _SCANLADRU	set	14712
  2235  0000                     _SCANCON0	set	14716
  2236  0000                     _CRCACCH	set	14691
  2237  0000                     _CRCACCL	set	14690
  2238  0000                     _CRCCON1	set	14697
  2239  0000                     _CRCCON0	set	14696
  2240  0000                     _PIR6bits	set	14758
  2241  0000                     _PIR4bits	set	14756
  2242  0000                     _PIE8bits	set	14744
  2243  0000                     _PIR8bits	set	14760
  2244  0000                     _PIR0bits	set	14752
  2245  0000                     _NVMCON2	set	14822
  2246  0000                     _NVMDAT	set	14819
  2247  0000                     _NVMADRL	set	14816
  2248  0000                     _NVMADRH	set	14817
  2249  0000                     _NVMCON1bits	set	14821
  2250  0000                     _SCANPR	set	14839
  2251  0000                     _DMA2PR	set	14836
  2252  0000                     _DMA1PR	set	14835
  2253  0000                     _MAINPR	set	14834
  2254  0000                     _ISRPR	set	14833
  2255  0000                     _PIE2bits	set	14738
  2256  0000                     _PIR2bits	set	14754
  2257  0000                     _PIE9bits	set	14745
  2258  0000                     _PIR9bits	set	14761
  2259  0000                     _PIE6bits	set	14742
  2260  0000                     _PIE3bits	set	14739
  2261  0000                     _PMD7	set	14791
  2262  0000                     _PMD6	set	14790
  2263  0000                     _PMD5	set	14789
  2264  0000                     _PMD4	set	14788
  2265  0000                     _PMD3	set	14787
  2266  0000                     _PMD2	set	14786
  2267  0000                     _PMD1	set	14785
  2268  0000                     _PMD0	set	14784
  2269  0000                     _OSCTUNE	set	14814
  2270  0000                     _OSCFRQ	set	14815
  2271  0000                     _OSCEN	set	14813
  2272  0000                     _OSCCON3	set	14811
  2273  0000                     _OSCCON1	set	14809
  2274  0000                     _IPR8bits	set	14728
  2275  0000                     _IPR9bits	set	14729
  2276  0000                     _IPR5bits	set	14725
  2277  0000                     _IPR1bits	set	14721
  2278  0000                     _IPR3bits	set	14723
  2279  0000                     _IPR6bits	set	14726
  2280  0000                     _IPR2bits	set	14722
  2281  0000                     _PIE5bits	set	14741
  2282  0000                     _PIE1bits	set	14737
  2283  0000                     _PIR5bits	set	14757
  2284  0000                     _PIR1bits	set	14753
  2285  0000                     _PLLR	set	118496
  2286  0000                     _SPI1SDIPPS	set	15071
  2287  0000                     _U1RXPPS	set	15077
  2288  0000                     _RC6PPS	set	14870
  2289  0000                     _RC5PPS	set	14869
  2290  0000                     _INT1PPS	set	15041
  2291  0000                     _RD1PPS	set	14873
  2292  0000                     _INT0PPS	set	15040
  2293  0000                     _RC3PPS	set	14867
  2294  0000                     _RB6PPS	set	14862
  2295  0000                     _SPI1SCKPPS	set	15070
  2296  0000                     _U2RXPPS	set	15080
  2297  0000                     _SLRCONF	set	14995
  2298  0000                     _SLRCONE	set	14979
  2299  0000                     _SLRCOND	set	14963
  2300  0000                     _SLRCONC	set	14947
  2301  0000                     _SLRCONB	set	14931
  2302  0000                     _SLRCONA	set	14915
  2303  0000                     _ODCOND	set	14962
  2304  0000                     _ODCONC	set	14946
  2305  0000                     _ODCONB	set	14930
  2306  0000                     _ODCONA	set	14914
  2307  0000                     _ODCONF	set	14994
  2308  0000                     _ODCONE	set	14978
  2309  0000                     _WPUC	set	14945
  2310  0000                     _WPUA	set	14913
  2311  0000                     _WPUB	set	14929
  2312  0000                     _WPUE	set	14977
  2313  0000                     _WPUF	set	14993
  2314  0000                     _WPUD	set	14961
  2315  0000                     _ANSELA	set	14912
  2316  0000                     _ANSELF	set	14992
  2317  0000                     _ANSELE	set	14976
  2318  0000                     _ANSELB	set	14928
  2319  0000                     _ANSELC	set	14944
  2320  0000                     _ANSELD	set	14960
  2321  0000                     _DMA2SSA	set	15321
  2322  0000                     _DMA1SSA	set	15353
  2323  0000                     _DMA2DSZ	set	15310
  2324  0000                     _DMA2SSZ	set	15319
  2325  0000                     _DMA2DSA	set	15312
  2326  0000                     _DMA1DSZ	set	15342
  2327  0000                     _DMA1SSZ	set	15351
  2328  0000                     _DMA1DSA	set	15344
  2329  0000                     _DMA2CON0bits	set	15324
  2330  0000                     _DMA2CON1bits	set	15325
  2331  0000                     _DMA1CON0bits	set	15356
  2332  0000                     _DMA1CON1bits	set	15357
  2333  0000                     _DMA2CON0	set	15324
  2334  0000                     _DMA2AIRQ	set	15326
  2335  0000                     _DMA2SIRQ	set	15327
  2336  0000                     _DMA2CON1	set	15325
  2337  0000                     _DMA1CON0	set	15356
  2338  0000                     _DMA1AIRQ	set	15358
  2339  0000                     _DMA1SIRQ	set	15359
  2340  0000                     _DMA1CON1	set	15357
  2341  0000                     _CLKRCON	set	15589
  2342  0000                     _CLKRCLK	set	15590
  2343  0000                     _SPI1CON1bits	set	15637
  2344  0000                     _SPI1STATUSbits	set	15639
  2345  0000                     _SPI1INTFbits	set	15642
  2346  0000                     _SPI1CON0bits	set	15636
  2347  0000                     _SPI1RXB	set	15632
  2348  0000                     _SPI1TXB	set	15633
  2349  0000                     _SPI1TCNTL	set	15634
  2350  0000                     _SPI1CON0	set	15636
  2351  0000                     _SPI1CLK	set	15644
  2352  0000                     _SPI1BAUD	set	15641
  2353  0000                     _SPI1CON2	set	15638
  2354  0000                     _SPI1CON1	set	15637
  2355  0000                     _U2RXB	set	15824
  2356  0000                     _U2TXB	set	15826
  2357  0000                     _U2ERRIE	set	15842
  2358  0000                     _U2ERRIR	set	15841
  2359  0000                     _U2UIR	set	15840
  2360  0000                     _U2FIFO	set	15839
  2361  0000                     _U2BRGH	set	15838
  2362  0000                     _U2BRGL	set	15837
  2363  0000                     _U2CON2	set	15836
  2364  0000                     _U2CON1	set	15835
  2365  0000                     _U2CON0	set	15834
  2366  0000                     _U2P3L	set	15832
  2367  0000                     _U2P2L	set	15830
  2368  0000                     _U2P1L	set	15828
  2369  0000                     _U1RXB	set	15848
  2370  0000                     _U1ERRIE	set	15866
  2371  0000                     _U1ERRIR	set	15865
  2372  0000                     _U1UIR	set	15864
  2373  0000                     _U1FIFO	set	15863
  2374  0000                     _U1BRGH	set	15862
  2375  0000                     _U1BRGL	set	15861
  2376  0000                     _U1CON2	set	15860
  2377  0000                     _U1CON1	set	15859
  2378  0000                     _U1CON0	set	15858
  2379  0000                     _U1P3H	set	15857
  2380  0000                     _U1P3L	set	15856
  2381  0000                     _U1P2H	set	15855
  2382  0000                     _U1P2L	set	15854
  2383  0000                     _U1P1H	set	15853
  2384  0000                     _U1P1L	set	15852
  2385  0000                     _FVRCON	set	16065
  2386  0000                     _ADFLTRL	set	16102
  2387  0000                     _ADFLTRH	set	16103
  2388  0000                     _ADCON0bits	set	16120
  2389  0000                     _ADCON0	set	16120
  2390  0000                     _ADCLK	set	16127
  2391  0000                     _ADACT	set	16126
  2392  0000                     _ADREF	set	16125
  2393  0000                     _ADSTAT	set	16124
  2394  0000                     _ADCON3	set	16123
  2395  0000                     _ADCON2	set	16122
  2396  0000                     _ADCON1	set	16121
  2397  0000                     _ADPREH	set	16119
  2398  0000                     _ADPREL	set	16118
  2399  0000                     _ADCAP	set	16117
  2400  0000                     _ADACQH	set	16116
  2401  0000                     _ADACQL	set	16115
  2402  0000                     _ADPCH	set	16113
  2403  0000                     _ADRPT	set	16108
  2404  0000                     _ADACCU	set	16106
  2405  0000                     _ADSTPTH	set	16101
  2406  0000                     _ADSTPTL	set	16100
  2407  0000                     _ADUTHH	set	16097
  2408  0000                     _ADUTHL	set	16096
  2409  0000                     _ADLTHH	set	16095
  2410  0000                     _ADLTHL	set	16094
  2411  0000                     _CCPTMRS1bits	set	16223
  2412  0000                     _PORTDbits	set	16333
  2413  0000                     _PORTFbits	set	16335
  2414  0000                     _LATFbits	set	16319
  2415  0000                     _LATCbits	set	16316
  2416  0000                     _LATDbits	set	16317
  2417  0000                     _PORTBbits	set	16331
  2418  0000                     _T3CONbits	set	16294
  2419  0000                     _T3CON	set	16294
  2420  0000                     _TMR3L	set	16292
  2421  0000                     _TMR3H	set	16293
  2422  0000                     _T3CLK	set	16297
  2423  0000                     _T3GATE	set	16296
  2424  0000                     _T3GCON	set	16295
  2425  0000                     _T2CON	set	16300
  2426  0000                     _T2TMR	set	16298
  2427  0000                     _T2PR	set	16299
  2428  0000                     _T2RST	set	16303
  2429  0000                     _T2HLT	set	16301
  2430  0000                     _T2CLKCON	set	16302
  2431  0000                     _PWM8DCL	set	16224
  2432  0000                     _PWM8DCH	set	16225
  2433  0000                     _PWM8CON	set	16226
  2434  0000                     _LATEbits	set	16318
  2435  0000                     _T5CONbits	set	16282
  2436  0000                     _T5CON	set	16282
  2437  0000                     _TMR5L	set	16280
  2438  0000                     _TMR5H	set	16281
  2439  0000                     _T5CLK	set	16285
  2440  0000                     _T5GATE	set	16284
  2441  0000                     _T5GCON	set	16283
  2442  0000                     _T6CON	set	16276
  2443  0000                     _T6TMR	set	16274
  2444  0000                     _T6PR	set	16275
  2445  0000                     _T6RST	set	16279
  2446  0000                     _T6HLT	set	16277
  2447  0000                     _T6CLKCON	set	16278
  2448  0000                     _TRISD	set	16325
  2449  0000                     _TRISC	set	16324
  2450  0000                     _TRISB	set	16323
  2451  0000                     _TRISA	set	16322
  2452  0000                     _TRISF	set	16327
  2453  0000                     _TRISE	set	16326
  2454  0000                     _LATC	set	16316
  2455  0000                     _LATB	set	16315
  2456  0000                     _LATF	set	16319
  2457  0000                     _LATA	set	16314
  2458  0000                     _LATD	set	16317
  2459  0000                     _LATE	set	16318
  2460  0000                     _IVTLOCKbits	set	16340
  2461  0000                     _IVTLOCK	set	16340
  2462  0000                     _INTCON0bits	set	16338
  2463  0000                     _GIE	set	130711
  2464  00FACF                     STR_80:
  2465                           
  2466                           ; BSR set to: 57
  2467  00FACF  20                 	db	32
  2468  00FAD0  25                 	db	37
  2469  00FAD1  63                 	db	99	;'c'
  2470  00FAD2  20                 	db	32
  2471  00FAD3  2C                 	db	44
  2472  00FAD4  25                 	db	37
  2473  00FAD5  6C                 	db	108	;'l'
  2474  00FAD6  75                 	db	117	;'u'
  2475  00FAD7  2C                 	db	44
  2476  00FAD8  25                 	db	37
  2477  00FAD9  34                 	db	52	;'4'
  2478  00FADA  2E                 	db	46
  2479  00FADB  34                 	db	52	;'4'
  2480  00FADC  66                 	db	102	;'f'
  2481  00FADD  2C                 	db	44
  2482  00FADE  25                 	db	37
  2483  00FADF  34                 	db	52	;'4'
  2484  00FAE0  2E                 	db	46
  2485  00FAE1  34                 	db	52	;'4'
  2486  00FAE2  66                 	db	102	;'f'
  2487  00FAE3  2C                 	db	44
  2488  00FAE4  25                 	db	37
  2489  00FAE5  34                 	db	52	;'4'
  2490  00FAE6  2E                 	db	46
  2491  00FAE7  34                 	db	52	;'4'
  2492  00FAE8  66                 	db	102	;'f'
  2493  00FAE9  2C                 	db	44
  2494  00FAEA  25                 	db	37
  2495  00FAEB  34                 	db	52	;'4'
  2496  00FAEC  2E                 	db	46
  2497  00FAED  34                 	db	52	;'4'
  2498  00FAEE  66                 	db	102	;'f'
  2499  00FAEF  2C                 	db	44
  2500  00FAF0  25                 	db	37
  2501  00FAF1  34                 	db	52	;'4'
  2502  00FAF2  2E                 	db	46
  2503  00FAF3  34                 	db	52	;'4'
  2504  00FAF4  66                 	db	102	;'f'
  2505  00FAF5  2C                 	db	44
  2506  00FAF6  25                 	db	37
  2507  00FAF7  34                 	db	52	;'4'
  2508  00FAF8  2E                 	db	46
  2509  00FAF9  33                 	db	51	;'3'
  2510  00FAFA  66                 	db	102	;'f'
  2511  00FAFB  2C                 	db	44
  2512  00FAFC  25                 	db	37
  2513  00FAFD  34                 	db	52	;'4'
  2514  00FAFE  2E                 	db	46
  2515  00FAFF  33                 	db	51	;'3'
  2516  00FB00  66                 	db	102	;'f'
  2517  00FB01  2C                 	db	44
  2518  00FB02  25                 	db	37
  2519  00FB03  34                 	db	52	;'4'
  2520  00FB04  2E                 	db	46
  2521  00FB05  33                 	db	51	;'3'
  2522  00FB06  66                 	db	102	;'f'
  2523  00FB07  2C                 	db	44
  2524  00FB08  25                 	db	37
  2525  00FB09  34                 	db	52	;'4'
  2526  00FB0A  2E                 	db	46
  2527  00FB0B  33                 	db	51	;'3'
  2528  00FB0C  66                 	db	102	;'f'
  2529  00FB0D  2C                 	db	44
  2530  00FB0E  25                 	db	37
  2531  00FB0F  34                 	db	52	;'4'
  2532  00FB10  2E                 	db	46
  2533  00FB11  33                 	db	51	;'3'
  2534  00FB12  66                 	db	102	;'f'
  2535  00FB13  2C                 	db	44
  2536  00FB14  25                 	db	37
  2537  00FB15  34                 	db	52	;'4'
  2538  00FB16  2E                 	db	46
  2539  00FB17  33                 	db	51	;'3'
  2540  00FB18  66                 	db	102	;'f'
  2541  00FB19  2C                 	db	44
  2542  00FB1A  25                 	db	37
  2543  00FB1B  64                 	db	100	;'d'
  2544  00FB1C  2C                 	db	44
  2545  00FB1D  25                 	db	37
  2546  00FB1E  64                 	db	100	;'d'
  2547  00FB1F  2C                 	db	44
  2548  00FB20  25                 	db	37
  2549  00FB21  32                 	db	50	;'2'
  2550  00FB22  2E                 	db	46
  2551  00FB23  36                 	db	54	;'6'
  2552  00FB24  66                 	db	102	;'f'
  2553  00FB25  2C                 	db	44
  2554  00FB26  25                 	db	37
  2555  00FB27  34                 	db	52	;'4'
  2556  00FB28  2E                 	db	46
  2557  00FB29  33                 	db	51	;'3'
  2558  00FB2A  66                 	db	102	;'f'
  2559  00FB2B  2C                 	db	44
  2560  00FB2C  25                 	db	37
  2561  00FB2D  64                 	db	100	;'d'
  2562  00FB2E  2C                 	db	44
  2563  00FB2F  25                 	db	37
  2564  00FB30  64                 	db	100	;'d'
  2565  00FB31  2C                 	db	44
  2566  00FB32  25                 	db	37
  2567  00FB33  6C                 	db	108	;'l'
  2568  00FB34  75                 	db	117	;'u'
  2569  00FB35  2C                 	db	44
  2570  00FB36  25                 	db	37
  2571  00FB37  6C                 	db	108	;'l'
  2572  00FB38  75                 	db	117	;'u'
  2573  00FB39  2C                 	db	44
  2574  00FB3A  25                 	db	37
  2575  00FB3B  34                 	db	52	;'4'
  2576  00FB3C  2E                 	db	46
  2577  00FB3D  33                 	db	51	;'3'
  2578  00FB3E  66                 	db	102	;'f'
  2579  00FB3F  2C                 	db	44
  2580  00FB40  25                 	db	37
  2581  00FB41  34                 	db	52	;'4'
  2582  00FB42  2E                 	db	46
  2583  00FB43  33                 	db	51	;'3'
  2584  00FB44  66                 	db	102	;'f'
  2585  00FB45  2C                 	db	44
  2586  00FB46  25                 	db	37
  2587  00FB47  34                 	db	52	;'4'
  2588  00FB48  2E                 	db	46
  2589  00FB49  33                 	db	51	;'3'
  2590  00FB4A  66                 	db	102	;'f'
  2591  00FB4B  0D                 	db	13
  2592  00FB4C  0A                 	db	10
  2593  00FB4D  00                 	db	0
  2594  00FB4E                     STR_39:
  2595                           
  2596                           ; BSR set to: 57
  2597  00FB4E  53                 	db	83	;'S'
  2598  00FB4F  25                 	db	37
  2599  00FB50  63                 	db	99	;'c'
  2600  00FB51  43                 	db	67	;'C'
  2601  00FB52  20                 	db	32
  2602  00FB53  25                 	db	37
  2603  00FB54  64                 	db	100	;'d'
  2604  00FB55  20                 	db	32
  2605  00FB56  52                 	db	82	;'R'
  2606  00FB57  55                 	db	85	;'U'
  2607  00FB58  4E                 	db	78	;'N'
  2608  00FB59  20                 	db	32
  2609  00FB5A  25                 	db	37
  2610  00FB5B  64                 	db	100	;'d'
  2611  00FB5C  20                 	db	32
  2612  00FB5D  56                 	db	86	;'V'
  2613  00FB5E  25                 	db	37
  2614  00FB5F  32                 	db	50	;'2'
  2615  00FB60  2E                 	db	46
  2616  00FB61  32                 	db	50	;'2'
  2617  00FB62  66                 	db	102	;'f'
  2618  00FB63  20                 	db	32
  2619  00FB64  20                 	db	32
  2620  00FB65  20                 	db	32
  2621  00FB66  20                 	db	32
  2622  00FB67  20                 	db	32
  2623  00FB68  20                 	db	32
  2624  00FB69  20                 	db	32
  2625  00FB6A  00                 	db	0
  2626  00FB6B                     STR_20:
  2627                           
  2628                           ; BSR set to: 57
  2629  00FB6B  52                 	db	82	;'R'
  2630  00FB6C  31                 	db	49	;'1'
  2631  00FB6D  20                 	db	32
  2632  00FB6E  25                 	db	37
  2633  00FB6F  32                 	db	50	;'2'
  2634  00FB70  2E                 	db	46
  2635  00FB71  33                 	db	51	;'3'
  2636  00FB72  66                 	db	102	;'f'
  2637  00FB73  20                 	db	32
  2638  00FB74  25                 	db	37
  2639  00FB75  33                 	db	51	;'3'
  2640  00FB76  2E                 	db	46
  2641  00FB77  34                 	db	52	;'4'
  2642  00FB78  66                 	db	102	;'f'
  2643  00FB79  20                 	db	32
  2644  00FB7A  20                 	db	32
  2645  00FB7B  20                 	db	32
  2646  00FB7C  20                 	db	32
  2647  00FB7D  20                 	db	32
  2648  00FB7E  20                 	db	32
  2649  00FB7F  20                 	db	32
  2650  00FB80  20                 	db	32
  2651  00FB81  20                 	db	32
  2652  00FB82  20                 	db	32
  2653  00FB83  20                 	db	32
  2654  00FB84  00                 	db	0
  2655  00FB85                     STR_21:
  2656                           
  2657                           ; BSR set to: 57
  2658  00FB85  52                 	db	82	;'R'
  2659  00FB86  32                 	db	50	;'2'
  2660  00FB87  20                 	db	32
  2661  00FB88  25                 	db	37
  2662  00FB89  32                 	db	50	;'2'
  2663  00FB8A  2E                 	db	46
  2664  00FB8B  33                 	db	51	;'3'
  2665  00FB8C  66                 	db	102	;'f'
  2666  00FB8D  20                 	db	32
  2667  00FB8E  25                 	db	37
  2668  00FB8F  33                 	db	51	;'3'
  2669  00FB90  2E                 	db	46
  2670  00FB91  34                 	db	52	;'4'
  2671  00FB92  66                 	db	102	;'f'
  2672  00FB93  20                 	db	32
  2673  00FB94  20                 	db	32
  2674  00FB95  20                 	db	32
  2675  00FB96  20                 	db	32
  2676  00FB97  20                 	db	32
  2677  00FB98  20                 	db	32
  2678  00FB99  20                 	db	32
  2679  00FB9A  20                 	db	32
  2680  00FB9B  20                 	db	32
  2681  00FB9C  20                 	db	32
  2682  00FB9D  20                 	db	32
  2683  00FB9E  00                 	db	0
  2684  00FB9F                     STR_11:
  2685                           
  2686                           ; BSR set to: 57
  2687  00FB9F  53                 	db	83	;'S'
  2688  00FBA0  20                 	db	32
  2689  00FBA1  53                 	db	83	;'S'
  2690  00FBA2  25                 	db	37
  2691  00FBA3  63                 	db	99	;'c'
  2692  00FBA4  43                 	db	67	;'C'
  2693  00FBA5  20                 	db	32
  2694  00FBA6  25                 	db	37
  2695  00FBA7  64                 	db	100	;'d'
  2696  00FBA8  20                 	db	32
  2697  00FBA9  25                 	db	37
  2698  00FBAA  32                 	db	50	;'2'
  2699  00FBAB  2E                 	db	46
  2700  00FBAC  34                 	db	52	;'4'
  2701  00FBAD  66                 	db	102	;'f'
  2702  00FBAE  20                 	db	32
  2703  00FBAF  20                 	db	32
  2704  00FBB0  20                 	db	32
  2705  00FBB1  20                 	db	32
  2706  00FBB2  20                 	db	32
  2707  00FBB3  20                 	db	32
  2708  00FBB4  20                 	db	32
  2709  00FBB5  20                 	db	32
  2710  00FBB6  20                 	db	32
  2711  00FBB7  20                 	db	32
  2712  00FBB8  00                 	db	0
  2713  00FBB9                     
  2714                           ; BSR set to: 57
  2715  00FBB9  20                 	db	32
  2716  00FBBA  4D                 	db	77	;'M'
  2717  00FBBB  65                 	db	101	;'e'
  2718  00FBBC  73                 	db	115	;'s'
  2719  00FBBD  67                 	db	103	;'g'
  2720  00FBBE  20                 	db	32
  2721  00FBBF  25                 	db	37
  2722  00FBC0  64                 	db	100	;'d'
  2723  00FBC1  20                 	db	32
  2724  00FBC2  53                 	db	83	;'S'
  2725  00FBC3  74                 	db	116	;'t'
  2726  00FBC4  61                 	db	97	;'a'
  2727  00FBC5  63                 	db	99	;'c'
  2728  00FBC6  6B                 	db	107	;'k'
  2729  00FBC7  20                 	db	32
  2730  00FBC8  25                 	db	37
  2731  00FBC9  64                 	db	100	;'d'
  2732  00FBCA  20                 	db	32
  2733  00FBCB  20                 	db	32
  2734  00FBCC  20                 	db	32
  2735  00FBCD  20                 	db	32
  2736  00FBCE  20                 	db	32
  2737  00FBCF  20                 	db	32
  2738  00FBD0  00                 	db	0
  2739  00FBD1                     STR_40:
  2740                           
  2741                           ; BSR set to: 57
  2742  00FBD1  45                 	db	69	;'E'
  2743  00FBD2  53                 	db	83	;'S'
  2744  00FBD3  52                 	db	82	;'R'
  2745  00FBD4  20                 	db	32
  2746  00FBD5  20                 	db	32
  2747  00FBD6  25                 	db	37
  2748  00FBD7  32                 	db	50	;'2'
  2749  00FBD8  2E                 	db	46
  2750  00FBD9  36                 	db	54	;'6'
  2751  00FBDA  66                 	db	102	;'f'
  2752  00FBDB  20                 	db	32
  2753  00FBDC  20                 	db	32
  2754  00FBDD  20                 	db	32
  2755  00FBDE  20                 	db	32
  2756  00FBDF  20                 	db	32
  2757  00FBE0  20                 	db	32
  2758  00FBE1  20                 	db	32
  2759  00FBE2  20                 	db	32
  2760  00FBE3  20                 	db	32
  2761  00FBE4  20                 	db	32
  2762  00FBE5  20                 	db	32
  2763  00FBE6  20                 	db	32
  2764  00FBE7  00                 	db	0
  2765  00FBE8                     STR_37:
  2766                           
  2767                           ; BSR set to: 57
  2768  00FBE8  42                 	db	66	;'B'
  2769  00FBE9  41                 	db	65	;'A'
  2770  00FBEA  54                 	db	84	;'T'
  2771  00FBEB  54                 	db	84	;'T'
  2772  00FBEC  20                 	db	32
  2773  00FBED  50                 	db	80	;'P'
  2774  00FBEE  57                 	db	87	;'W'
  2775  00FBEF  52                 	db	82	;'R'
  2776  00FBF0  20                 	db	32
  2777  00FBF1  25                 	db	37
  2778  00FBF2  33                 	db	51	;'3'
  2779  00FBF3  2E                 	db	46
  2780  00FBF4  32                 	db	50	;'2'
  2781  00FBF5  66                 	db	102	;'f'
  2782  00FBF6  20                 	db	32
  2783  00FBF7  20                 	db	32
  2784  00FBF8  20                 	db	32
  2785  00FBF9  20                 	db	32
  2786  00FBFA  20                 	db	32
  2787  00FBFB  20                 	db	32
  2788  00FBFC  20                 	db	32
  2789  00FBFD  20                 	db	32
  2790  00FBFE  00                 	db	0
  2791  00FBFF                     STR_41:
  2792                           
  2793                           ; BSR set to: 57
  2794  00FBFF  52                 	db	82	;'R'
  2795  00FC00  31                 	db	49	;'1'
  2796  00FC01  20                 	db	32
  2797  00FC02  25                 	db	37
  2798  00FC03  32                 	db	50	;'2'
  2799  00FC04  2E                 	db	46
  2800  00FC05  33                 	db	51	;'3'
  2801  00FC06  66                 	db	102	;'f'
  2802  00FC07  20                 	db	32
  2803  00FC08  25                 	db	37
  2804  00FC09  33                 	db	51	;'3'
  2805  00FC0A  2E                 	db	46
  2806  00FC0B  34                 	db	52	;'4'
  2807  00FC0C  66                 	db	102	;'f'
  2808  00FC0D  20                 	db	32
  2809  00FC0E  20                 	db	32
  2810  00FC0F  20                 	db	32
  2811  00FC10  20                 	db	32
  2812  00FC11  20                 	db	32
  2813  00FC12  20                 	db	32
  2814  00FC13  20                 	db	32
  2815  00FC14  20                 	db	32
  2816  00FC15  00                 	db	0
  2817  00FC16                     STR_42:
  2818                           
  2819                           ; BSR set to: 57
  2820  00FC16  52                 	db	82	;'R'
  2821  00FC17  32                 	db	50	;'2'
  2822  00FC18  20                 	db	32
  2823  00FC19  25                 	db	37
  2824  00FC1A  32                 	db	50	;'2'
  2825  00FC1B  2E                 	db	46
  2826  00FC1C  33                 	db	51	;'3'
  2827  00FC1D  66                 	db	102	;'f'
  2828  00FC1E  20                 	db	32
  2829  00FC1F  25                 	db	37
  2830  00FC20  33                 	db	51	;'3'
  2831  00FC21  2E                 	db	46
  2832  00FC22  34                 	db	52	;'4'
  2833  00FC23  66                 	db	102	;'f'
  2834  00FC24  20                 	db	32
  2835  00FC25  20                 	db	32
  2836  00FC26  20                 	db	32
  2837  00FC27  20                 	db	32
  2838  00FC28  20                 	db	32
  2839  00FC29  20                 	db	32
  2840  00FC2A  20                 	db	32
  2841  00FC2B  20                 	db	32
  2842  00FC2C  00                 	db	0
  2843  00FC2D                     STR_38:
  2844                           
  2845                           ; BSR set to: 57
  2846  00FC2D  42                 	db	66	;'B'
  2847  00FC2E  41                 	db	65	;'A'
  2848  00FC2F  48                 	db	72	;'H'
  2849  00FC30  20                 	db	32
  2850  00FC31  25                 	db	37
  2851  00FC32  33                 	db	51	;'3'
  2852  00FC33  2E                 	db	46
  2853  00FC34  32                 	db	50	;'2'
  2854  00FC35  66                 	db	102	;'f'
  2855  00FC36  20                 	db	32
  2856  00FC37  50                 	db	80	;'P'
  2857  00FC38  25                 	db	37
  2858  00FC39  33                 	db	51	;'3'
  2859  00FC3A  2E                 	db	46
  2860  00FC3B  32                 	db	50	;'2'
  2861  00FC3C  66                 	db	102	;'f'
  2862  00FC3D  20                 	db	32
  2863  00FC3E  20                 	db	32
  2864  00FC3F  20                 	db	32
  2865  00FC40  20                 	db	32
  2866  00FC41  20                 	db	32
  2867  00FC42  20                 	db	32
  2868  00FC43  00                 	db	0
  2869  00FC44                     STR_14:
  2870                           
  2871                           ; BSR set to: 57
  2872  00FC44  20                 	db	32
  2873  00FC45  20                 	db	32
  2874  00FC46  20                 	db	32
  2875  00FC47  20                 	db	32
  2876  00FC48  20                 	db	32
  2877  00FC49  20                 	db	32
  2878  00FC4A  20                 	db	32
  2879  00FC4B  20                 	db	32
  2880  00FC4C  20                 	db	32
  2881  00FC4D  20                 	db	32
  2882  00FC4E  20                 	db	32
  2883  00FC4F  20                 	db	32
  2884  00FC50  20                 	db	32
  2885  00FC51  20                 	db	32
  2886  00FC52  20                 	db	32
  2887  00FC53  20                 	db	32
  2888  00FC54  20                 	db	32
  2889  00FC55  20                 	db	32
  2890  00FC56  20                 	db	32
  2891  00FC57  20                 	db	32
  2892  00FC58  20                 	db	32
  2893  00FC59  00                 	db	0
  2894  00FC5A                     STR_19:
  2895                           
  2896                           ; BSR set to: 57
  2897  00FC5A  45                 	db	69	;'E'
  2898  00FC5B  53                 	db	83	;'S'
  2899  00FC5C  52                 	db	82	;'R'
  2900  00FC5D  20                 	db	32
  2901  00FC5E  20                 	db	32
  2902  00FC5F  25                 	db	37
  2903  00FC60  32                 	db	50	;'2'
  2904  00FC61  2E                 	db	46
  2905  00FC62  36                 	db	54	;'6'
  2906  00FC63  66                 	db	102	;'f'
  2907  00FC64  20                 	db	32
  2908  00FC65  20                 	db	32
  2909  00FC66  20                 	db	32
  2910  00FC67  20                 	db	32
  2911  00FC68  20                 	db	32
  2912  00FC69  20                 	db	32
  2913  00FC6A  20                 	db	32
  2914  00FC6B  20                 	db	32
  2915  00FC6C  20                 	db	32
  2916  00FC6D  20                 	db	32
  2917  00FC6E  20                 	db	32
  2918  00FC6F  00                 	db	0
  2919  00FC70                     STR_12:
  2920                           
  2921                           ; BSR set to: 57
  2922  00FC70  53                 	db	83	;'S'
  2923  00FC71  74                 	db	116	;'t'
  2924  00FC72  61                 	db	97	;'a'
  2925  00FC73  74                 	db	116	;'t'
  2926  00FC74  69                 	db	105	;'i'
  2927  00FC75  63                 	db	99	;'c'
  2928  00FC76  20                 	db	32
  2929  00FC77  53                 	db	83	;'S'
  2930  00FC78  4F                 	db	79	;'O'
  2931  00FC79  43                 	db	67	;'C'
  2932  00FC7A  20                 	db	32
  2933  00FC7B  25                 	db	37
  2934  00FC7C  64                 	db	100	;'d'
  2935  00FC7D  20                 	db	32
  2936  00FC7E  20                 	db	32
  2937  00FC7F  20                 	db	32
  2938  00FC80  20                 	db	32
  2939  00FC81  20                 	db	32
  2940  00FC82  20                 	db	32
  2941  00FC83  20                 	db	32
  2942  00FC84  20                 	db	32
  2943  00FC85  00                 	db	0
  2944  00FC86                     STR_34:
  2945                           
  2946                           ; BSR set to: 57
  2947  00FC86  42                 	db	66	;'B'
  2948  00FC87  41                 	db	65	;'A'
  2949  00FC88  54                 	db	84	;'T'
  2950  00FC89  20                 	db	32
  2951  00FC8A  49                 	db	73	;'I'
  2952  00FC8B  57                 	db	87	;'W'
  2953  00FC8C  48                 	db	72	;'H'
  2954  00FC8D  20                 	db	32
  2955  00FC8E  25                 	db	37
  2956  00FC8F  34                 	db	52	;'4'
  2957  00FC90  2E                 	db	46
  2958  00FC91  31                 	db	49	;'1'
  2959  00FC92  66                 	db	102	;'f'
  2960  00FC93  20                 	db	32
  2961  00FC94  20                 	db	32
  2962  00FC95  20                 	db	32
  2963  00FC96  20                 	db	32
  2964  00FC97  20                 	db	32
  2965  00FC98  20                 	db	32
  2966  00FC99  20                 	db	32
  2967  00FC9A  20                 	db	32
  2968  00FC9B  00                 	db	0
  2969  00FC9C                     STR_35:
  2970                           
  2971                           ; BSR set to: 57
  2972  00FC9C  42                 	db	66	;'B'
  2973  00FC9D  41                 	db	65	;'A'
  2974  00FC9E  54                 	db	84	;'T'
  2975  00FC9F  20                 	db	32
  2976  00FCA0  4F                 	db	79	;'O'
  2977  00FCA1  57                 	db	87	;'W'
  2978  00FCA2  48                 	db	72	;'H'
  2979  00FCA3  20                 	db	32
  2980  00FCA4  25                 	db	37
  2981  00FCA5  34                 	db	52	;'4'
  2982  00FCA6  2E                 	db	46
  2983  00FCA7  31                 	db	49	;'1'
  2984  00FCA8  66                 	db	102	;'f'
  2985  00FCA9  20                 	db	32
  2986  00FCAA  20                 	db	32
  2987  00FCAB  20                 	db	32
  2988  00FCAC  20                 	db	32
  2989  00FCAD  20                 	db	32
  2990  00FCAE  20                 	db	32
  2991  00FCAF  20                 	db	32
  2992  00FCB0  20                 	db	32
  2993  00FCB1  00                 	db	0
  2994  00FCB2                     STR_36:
  2995                           
  2996                           ; BSR set to: 57
  2997  00FCB2  42                 	db	66	;'B'
  2998  00FCB3  41                 	db	65	;'A'
  2999  00FCB4  54                 	db	84	;'T'
  3000  00FCB5  20                 	db	32
  3001  00FCB6  54                 	db	84	;'T'
  3002  00FCB7  57                 	db	87	;'W'
  3003  00FCB8  48                 	db	72	;'H'
  3004  00FCB9  20                 	db	32
  3005  00FCBA  25                 	db	37
  3006  00FCBB  34                 	db	52	;'4'
  3007  00FCBC  2E                 	db	46
  3008  00FCBD  31                 	db	49	;'1'
  3009  00FCBE  66                 	db	102	;'f'
  3010  00FCBF  20                 	db	32
  3011  00FCC0  20                 	db	32
  3012  00FCC1  20                 	db	32
  3013  00FCC2  20                 	db	32
  3014  00FCC3  20                 	db	32
  3015  00FCC4  20                 	db	32
  3016  00FCC5  20                 	db	32
  3017  00FCC6  20                 	db	32
  3018  00FCC7  00                 	db	0
  3019  00FCC8                     STR_30:
  3020                           
  3021                           ; BSR set to: 57
  3022  00FCC8  49                 	db	73	;'I'
  3023  00FCC9  4E                 	db	78	;'N'
  3024  00FCCA  56                 	db	86	;'V'
  3025  00FCCB  20                 	db	32
  3026  00FCCC  20                 	db	32
  3027  00FCCD  57                 	db	87	;'W'
  3028  00FCCE  48                 	db	72	;'H'
  3029  00FCCF  20                 	db	32
  3030  00FCD0  25                 	db	37
  3031  00FCD1  33                 	db	51	;'3'
  3032  00FCD2  2E                 	db	46
  3033  00FCD3  32                 	db	50	;'2'
  3034  00FCD4  66                 	db	102	;'f'
  3035  00FCD5  20                 	db	32
  3036  00FCD6  20                 	db	32
  3037  00FCD7  20                 	db	32
  3038  00FCD8  20                 	db	32
  3039  00FCD9  20                 	db	32
  3040  00FCDA  20                 	db	32
  3041  00FCDB  20                 	db	32
  3042  00FCDC  20                 	db	32
  3043  00FCDD  00                 	db	0
  3044  00FCDE                     STR_29:
  3045                           
  3046                           ; BSR set to: 57
  3047  00FCDE  4C                 	db	76	;'L'
  3048  00FCDF  4F                 	db	79	;'O'
  3049  00FCE0  41                 	db	65	;'A'
  3050  00FCE1  44                 	db	68	;'D'
  3051  00FCE2  20                 	db	32
  3052  00FCE3  57                 	db	87	;'W'
  3053  00FCE4  48                 	db	72	;'H'
  3054  00FCE5  20                 	db	32
  3055  00FCE6  25                 	db	37
  3056  00FCE7  33                 	db	51	;'3'
  3057  00FCE8  2E                 	db	46
  3058  00FCE9  32                 	db	50	;'2'
  3059  00FCEA  66                 	db	102	;'f'
  3060  00FCEB  20                 	db	32
  3061  00FCEC  20                 	db	32
  3062  00FCED  20                 	db	32
  3063  00FCEE  20                 	db	32
  3064  00FCEF  20                 	db	32
  3065  00FCF0  20                 	db	32
  3066  00FCF1  20                 	db	32
  3067  00FCF2  20                 	db	32
  3068  00FCF3  00                 	db	0
  3069  00FCF4                     STR_28:
  3070                           
  3071                           ; BSR set to: 57
  3072  00FCF4  50                 	db	80	;'P'
  3073  00FCF5  56                 	db	86	;'V'
  3074  00FCF6  20                 	db	32
  3075  00FCF7  25                 	db	37
  3076  00FCF8  63                 	db	99	;'c'
  3077  00FCF9  20                 	db	32
  3078  00FCFA  57                 	db	87	;'W'
  3079  00FCFB  48                 	db	72	;'H'
  3080  00FCFC  20                 	db	32
  3081  00FCFD  25                 	db	37
  3082  00FCFE  33                 	db	51	;'3'
  3083  00FCFF  2E                 	db	46
  3084  00FD00  32                 	db	50	;'2'
  3085  00FD01  66                 	db	102	;'f'
  3086  00FD02  20                 	db	32
  3087  00FD03  20                 	db	32
  3088  00FD04  20                 	db	32
  3089  00FD05  20                 	db	32
  3090  00FD06  20                 	db	32
  3091  00FD07  20                 	db	32
  3092  00FD08  20                 	db	32
  3093  00FD09  00                 	db	0
  3094  00FD0A                     STR_27:
  3095                           
  3096                           ; BSR set to: 57
  3097  00FD0A  49                 	db	73	;'I'
  3098  00FD0B  4E                 	db	78	;'N'
  3099  00FD0C  56                 	db	86	;'V'
  3100  00FD0D  20                 	db	32
  3101  00FD0E  20                 	db	32
  3102  00FD0F  50                 	db	80	;'P'
  3103  00FD10  57                 	db	87	;'W'
  3104  00FD11  52                 	db	82	;'R'
  3105  00FD12  20                 	db	32
  3106  00FD13  25                 	db	37
  3107  00FD14  33                 	db	51	;'3'
  3108  00FD15  2E                 	db	46
  3109  00FD16  32                 	db	50	;'2'
  3110  00FD17  66                 	db	102	;'f'
  3111  00FD18  20                 	db	32
  3112  00FD19  20                 	db	32
  3113  00FD1A  20                 	db	32
  3114  00FD1B  20                 	db	32
  3115  00FD1C  20                 	db	32
  3116  00FD1D  20                 	db	32
  3117  00FD1E  20                 	db	32
  3118  00FD1F  00                 	db	0
  3119  00FD20                     STR_26:
  3120                           
  3121                           ; BSR set to: 57
  3122  00FD20  4C                 	db	76	;'L'
  3123  00FD21  4F                 	db	79	;'O'
  3124  00FD22  41                 	db	65	;'A'
  3125  00FD23  44                 	db	68	;'D'
  3126  00FD24  20                 	db	32
  3127  00FD25  50                 	db	80	;'P'
  3128  00FD26  57                 	db	87	;'W'
  3129  00FD27  52                 	db	82	;'R'
  3130  00FD28  20                 	db	32
  3131  00FD29  25                 	db	37
  3132  00FD2A  33                 	db	51	;'3'
  3133  00FD2B  2E                 	db	46
  3134  00FD2C  32                 	db	50	;'2'
  3135  00FD2D  66                 	db	102	;'f'
  3136  00FD2E  20                 	db	32
  3137  00FD2F  20                 	db	32
  3138  00FD30  20                 	db	32
  3139  00FD31  20                 	db	32
  3140  00FD32  20                 	db	32
  3141  00FD33  20                 	db	32
  3142  00FD34  20                 	db	32
  3143  00FD35  00                 	db	0
  3144  00FD36                     STR_25:
  3145                           
  3146                           ; BSR set to: 57
  3147  00FD36  50                 	db	80	;'P'
  3148  00FD37  56                 	db	86	;'V'
  3149  00FD38  20                 	db	32
  3150  00FD39  25                 	db	37
  3151  00FD3A  63                 	db	99	;'c'
  3152  00FD3B  20                 	db	32
  3153  00FD3C  50                 	db	80	;'P'
  3154  00FD3D  57                 	db	87	;'W'
  3155  00FD3E  52                 	db	82	;'R'
  3156  00FD3F  20                 	db	32
  3157  00FD40  25                 	db	37
  3158  00FD41  33                 	db	51	;'3'
  3159  00FD42  2E                 	db	46
  3160  00FD43  32                 	db	50	;'2'
  3161  00FD44  66                 	db	102	;'f'
  3162  00FD45  20                 	db	32
  3163  00FD46  20                 	db	32
  3164  00FD47  20                 	db	32
  3165  00FD48  20                 	db	32
  3166  00FD49  20                 	db	32
  3167  00FD4A  20                 	db	32
  3168  00FD4B  00                 	db	0
  3169  00FD4C                     STR_13:
  3170                           
  3171                           ; BSR set to: 57
  3172  00FD4C  42                 	db	66	;'B'
  3173  00FD4D  61                 	db	97	;'a'
  3174  00FD4E  74                 	db	116	;'t'
  3175  00FD4F  74                 	db	116	;'t'
  3176  00FD50  65                 	db	101	;'e'
  3177  00FD51  72                 	db	114	;'r'
  3178  00FD52  79                 	db	121	;'y'
  3179  00FD53  20                 	db	32
  3180  00FD54  41                 	db	65	;'A'
  3181  00FD55  68                 	db	104	;'h'
  3182  00FD56  20                 	db	32
  3183  00FD57  25                 	db	37
  3184  00FD58  33                 	db	51	;'3'
  3185  00FD59  2E                 	db	46
  3186  00FD5A  32                 	db	50	;'2'
  3187  00FD5B  66                 	db	102	;'f'
  3188  00FD5C  20                 	db	32
  3189  00FD5D  20                 	db	32
  3190  00FD5E  20                 	db	32
  3191  00FD5F  20                 	db	32
  3192  00FD60  20                 	db	32
  3193  00FD61  00                 	db	0
  3194  00FD62                     STR_32:
  3195                           
  3196                           ; BSR set to: 57
  3197  00FD62  42                 	db	66	;'B'
  3198  00FD63  56                 	db	86	;'V'
  3199  00FD64  20                 	db	32
  3200  00FD65  25                 	db	37
  3201  00FD66  32                 	db	50	;'2'
  3202  00FD67  2E                 	db	46
  3203  00FD68  32                 	db	50	;'2'
  3204  00FD69  66                 	db	102	;'f'
  3205  00FD6A  20                 	db	32
  3206  00FD6B  42                 	db	66	;'B'
  3207  00FD6C  41                 	db	65	;'A'
  3208  00FD6D  20                 	db	32
  3209  00FD6E  25                 	db	37
  3210  00FD6F  32                 	db	50	;'2'
  3211  00FD70  2E                 	db	46
  3212  00FD71  32                 	db	50	;'2'
  3213  00FD72  66                 	db	102	;'f'
  3214  00FD73  20                 	db	32
  3215  00FD74  20                 	db	32
  3216  00FD75  20                 	db	32
  3217  00FD76  20                 	db	32
  3218  00FD77  00                 	db	0
  3219  00FD78                     STR_33:
  3220                           
  3221                           ; BSR set to: 57
  3222  00FD78  43                 	db	67	;'C'
  3223  00FD79  56                 	db	86	;'V'
  3224  00FD7A  20                 	db	32
  3225  00FD7B  25                 	db	37
  3226  00FD7C  32                 	db	50	;'2'
  3227  00FD7D  2E                 	db	46
  3228  00FD7E  32                 	db	50	;'2'
  3229  00FD7F  66                 	db	102	;'f'
  3230  00FD80  20                 	db	32
  3231  00FD81  4C                 	db	76	;'L'
  3232  00FD82  41                 	db	65	;'A'
  3233  00FD83  20                 	db	32
  3234  00FD84  25                 	db	37
  3235  00FD85  32                 	db	50	;'2'
  3236  00FD86  2E                 	db	46
  3237  00FD87  32                 	db	50	;'2'
  3238  00FD88  66                 	db	102	;'f'
  3239  00FD89  20                 	db	32
  3240  00FD8A  20                 	db	32
  3241  00FD8B  20                 	db	32
  3242  00FD8C  20                 	db	32
  3243  00FD8D  00                 	db	0
  3244  00FD8E                     STR_31:
  3245                           
  3246                           ; BSR set to: 57
  3247  00FD8E  50                 	db	80	;'P'
  3248  00FD8F  56                 	db	86	;'V'
  3249  00FD90  20                 	db	32
  3250  00FD91  25                 	db	37
  3251  00FD92  32                 	db	50	;'2'
  3252  00FD93  2E                 	db	46
  3253  00FD94  32                 	db	50	;'2'
  3254  00FD95  66                 	db	102	;'f'
  3255  00FD96  20                 	db	32
  3256  00FD97  50                 	db	80	;'P'
  3257  00FD98  41                 	db	65	;'A'
  3258  00FD99  20                 	db	32
  3259  00FD9A  25                 	db	37
  3260  00FD9B  32                 	db	50	;'2'
  3261  00FD9C  2E                 	db	46
  3262  00FD9D  32                 	db	50	;'2'
  3263  00FD9E  66                 	db	102	;'f'
  3264  00FD9F  20                 	db	32
  3265  00FDA0  20                 	db	32
  3266  00FDA1  20                 	db	32
  3267  00FDA2  20                 	db	32
  3268  00FDA3  00                 	db	0
  3269  00FDA4                     STR_43:
  3270                           
  3271                           ; BSR set to: 57
  3272  00FDA4  25                 	db	37
  3273  00FDA5  64                 	db	100	;'d'
  3274  00FDA6  20                 	db	32
  3275  00FDA7  25                 	db	37
  3276  00FDA8  32                 	db	50	;'2'
  3277  00FDA9  2E                 	db	46
  3278  00FDAA  34                 	db	52	;'4'
  3279  00FDAB  66                 	db	102	;'f'
  3280  00FDAC  2C                 	db	44
  3281  00FDAD  20                 	db	32
  3282  00FDAE  25                 	db	37
  3283  00FDAF  64                 	db	100	;'d'
  3284  00FDB0  20                 	db	32
  3285  00FDB1  20                 	db	32
  3286  00FDB2  54                 	db	84	;'T'
  3287  00FDB3  52                 	db	82	;'R'
  3288  00FDB4  49                 	db	73	;'I'
  3289  00FDB5  4D                 	db	77	;'M'
  3290  00FDB6  20                 	db	32
  3291  00FDB7  20                 	db	32
  3292  00FDB8  20                 	db	32
  3293  00FDB9  00                 	db	0
  3294  00FDBA                     STR_51:
  3295                           
  3296                           ; BSR set to: 57
  3297  00FDBA  20                 	db	32
  3298  00FDBB  25                 	db	37
  3299  00FDBC  64                 	db	100	;'d'
  3300  00FDBD  20                 	db	32
  3301  00FDBE  25                 	db	37
  3302  00FDBF  64                 	db	100	;'d'
  3303  00FDC0  20                 	db	32
  3304  00FDC1  20                 	db	32
  3305  00FDC2  20                 	db	32
  3306  00FDC3  20                 	db	32
  3307  00FDC4  20                 	db	32
  3308  00FDC5  20                 	db	32
  3309  00FDC6  20                 	db	32
  3310  00FDC7  20                 	db	32
  3311  00FDC8  20                 	db	32
  3312  00FDC9  20                 	db	32
  3313  00FDCA  20                 	db	32
  3314  00FDCB  20                 	db	32
  3315  00FDCC  20                 	db	32
  3316  00FDCD  20                 	db	32
  3317  00FDCE  00                 	db	0
  3318  00FDCF                     STR_54:
  3319                           
  3320                           ; BSR set to: 57
  3321  00FDCF  20                 	db	32
  3322  00FDD0  25                 	db	37
  3323  00FDD1  6C                 	db	108	;'l'
  3324  00FDD2  64                 	db	100	;'d'
  3325  00FDD3  20                 	db	32
  3326  00FDD4  25                 	db	37
  3327  00FDD5  6C                 	db	108	;'l'
  3328  00FDD6  64                 	db	100	;'d'
  3329  00FDD7  20                 	db	32
  3330  00FDD8  20                 	db	32
  3331  00FDD9  20                 	db	32
  3332  00FDDA  20                 	db	32
  3333  00FDDB  20                 	db	32
  3334  00FDDC  20                 	db	32
  3335  00FDDD  20                 	db	32
  3336  00FDDE  20                 	db	32
  3337  00FDDF  20                 	db	32
  3338  00FDE0  20                 	db	32
  3339  00FDE1  20                 	db	32
  3340  00FDE2  20                 	db	32
  3341  00FDE3  00                 	db	0
  3342  00FDE4                     STR_10:
  3343                           
  3344                           ; BSR set to: 57
  3345  00FDE4  42                 	db	66	;'B'
  3346  00FDE5  56                 	db	86	;'V'
  3347  00FDE6  20                 	db	32
  3348  00FDE7  25                 	db	37
  3349  00FDE8  32                 	db	50	;'2'
  3350  00FDE9  2E                 	db	46
  3351  00FDEA  34                 	db	52	;'4'
  3352  00FDEB  66                 	db	102	;'f'
  3353  00FDEC  20                 	db	32
  3354  00FDED  20                 	db	32
  3355  00FDEE  20                 	db	32
  3356  00FDEF  20                 	db	32
  3357  00FDF0  20                 	db	32
  3358  00FDF1  20                 	db	32
  3359  00FDF2  20                 	db	32
  3360  00FDF3  20                 	db	32
  3361  00FDF4  20                 	db	32
  3362  00FDF5  20                 	db	32
  3363  00FDF6  20                 	db	32
  3364  00FDF7  20                 	db	32
  3365  00FDF8  00                 	db	0
  3366  00FDF9                     STR_4:
  3367                           
  3368                           ; BSR set to: 57
  3369  00FDF9  20                 	db	32
  3370  00FDFA  4E                 	db	78	;'N'
  3371  00FDFB  53                 	db	83	;'S'
  3372  00FDFC  41                 	db	65	;'A'
  3373  00FDFD  53                 	db	83	;'S'
  3374  00FDFE  50                 	db	80	;'P'
  3375  00FDFF  4F                 	db	79	;'O'
  3376  00FE00  4F                 	db	79	;'O'
  3377  00FE01  4B                 	db	75	;'K'
  3378  00FE02  20                 	db	32
  3379  00FE03  20                 	db	32
  3380  00FE04  20                 	db	32
  3381  00FE05  20                 	db	32
  3382  00FE06  20                 	db	32
  3383  00FE07  20                 	db	32
  3384  00FE08  20                 	db	32
  3385  00FE09  20                 	db	32
  3386  00FE0A  20                 	db	32
  3387  00FE0B  20                 	db	32
  3388  00FE0C  20                 	db	32
  3389  00FE0D  00                 	db	0
  3390  00FE0E                     STR_15:
  3391                           
  3392                           ; BSR set to: 57
  3393  00FE0E  42                 	db	66	;'B'
  3394  00FE0F  61                 	db	97	;'a'
  3395  00FE10  74                 	db	116	;'t'
  3396  00FE11  74                 	db	116	;'t'
  3397  00FE12  65                 	db	101	;'e'
  3398  00FE13  72                 	db	114	;'r'
  3399  00FE14  79                 	db	121	;'y'
  3400  00FE15  20                 	db	32
  3401  00FE16  45                 	db	69	;'E'
  3402  00FE17  53                 	db	83	;'S'
  3403  00FE18  52                 	db	82	;'R'
  3404  00FE19  20                 	db	32
  3405  00FE1A  20                 	db	32
  3406  00FE1B  20                 	db	32
  3407  00FE1C  20                 	db	32
  3408  00FE1D  20                 	db	32
  3409  00FE1E  20                 	db	32
  3410  00FE1F  20                 	db	32
  3411  00FE20  20                 	db	32
  3412  00FE21  20                 	db	32
  3413  00FE22  00                 	db	0
  3414  00FE23                     STR_16:
  3415                           
  3416                           ; BSR set to: 57
  3417  00FE23  43                 	db	67	;'C'
  3418  00FE24  61                 	db	97	;'a'
  3419  00FE25  6C                 	db	108	;'l'
  3420  00FE26  63                 	db	99	;'c'
  3421  00FE27  75                 	db	117	;'u'
  3422  00FE28  6C                 	db	108	;'l'
  3423  00FE29  61                 	db	97	;'a'
  3424  00FE2A  74                 	db	116	;'t'
  3425  00FE2B  69                 	db	105	;'i'
  3426  00FE2C  6F                 	db	111	;'o'
  3427  00FE2D  6E                 	db	110	;'n'
  3428  00FE2E  20                 	db	32
  3429  00FE2F  20                 	db	32
  3430  00FE30  20                 	db	32
  3431  00FE31  20                 	db	32
  3432  00FE32  20                 	db	32
  3433  00FE33  20                 	db	32
  3434  00FE34  20                 	db	32
  3435  00FE35  20                 	db	32
  3436  00FE36  20                 	db	32
  3437  00FE37  00                 	db	0
  3438  00FE38                     STR_48:
  3439                           
  3440                           ; BSR set to: 57
  3441  00FE38  43                 	db	67	;'C'
  3442  00FE39  61                 	db	97	;'a'
  3443  00FE3A  6C                 	db	108	;'l'
  3444  00FE3B  69                 	db	105	;'i'
  3445  00FE3C  62                 	db	98	;'b'
  3446  00FE3D  72                 	db	114	;'r'
  3447  00FE3E  61                 	db	97	;'a'
  3448  00FE3F  74                 	db	116	;'t'
  3449  00FE40  69                 	db	105	;'i'
  3450  00FE41  6F                 	db	111	;'o'
  3451  00FE42  6E                 	db	110	;'n'
  3452  00FE43  20                 	db	32
  3453  00FE44  20                 	db	32
  3454  00FE45  20                 	db	32
  3455  00FE46  20                 	db	32
  3456  00FE47  20                 	db	32
  3457  00FE48  20                 	db	32
  3458  00FE49  20                 	db	32
  3459  00FE4A  20                 	db	32
  3460  00FE4B  20                 	db	32
  3461  00FE4C  00                 	db	0
  3462  00FE4D                     STR_47:
  3463                           
  3464                           ; BSR set to: 57
  3465  00FE4D  53                 	db	83	;'S'
  3466  00FE4E  65                 	db	101	;'e'
  3467  00FE4F  6E                 	db	110	;'n'
  3468  00FE50  73                 	db	115	;'s'
  3469  00FE51  6F                 	db	111	;'o'
  3470  00FE52  72                 	db	114	;'r'
  3471  00FE53  20                 	db	32
  3472  00FE54  5A                 	db	90	;'Z'
  3473  00FE55  65                 	db	101	;'e'
  3474  00FE56  72                 	db	114	;'r'
  3475  00FE57  6F                 	db	111	;'o'
  3476  00FE58  20                 	db	32
  3477  00FE59  20                 	db	32
  3478  00FE5A  20                 	db	32
  3479  00FE5B  20                 	db	32
  3480  00FE5C  20                 	db	32
  3481  00FE5D  20                 	db	32
  3482  00FE5E  20                 	db	32
  3483  00FE5F  20                 	db	32
  3484  00FE60  20                 	db	32
  3485  00FE61  00                 	db	0
  3486  00FE62                     STR_2:
  3487                           
  3488                           ; BSR set to: 57
  3489  00FE62  20                 	db	32
  3490  00FE63  56                 	db	86	;'V'
  3491  00FE64  65                 	db	101	;'e'
  3492  00FE65  72                 	db	114	;'r'
  3493  00FE66  73                 	db	115	;'s'
  3494  00FE67  69                 	db	105	;'i'
  3495  00FE68  6F                 	db	111	;'o'
  3496  00FE69  6E                 	db	110	;'n'
  3497  00FE6A  20                 	db	32
  3498  00FE6B  25                 	db	37
  3499  00FE6C  73                 	db	115	;'s'
  3500  00FE6D  20                 	db	32
  3501  00FE6E  20                 	db	32
  3502  00FE6F  20                 	db	32
  3503  00FE70  20                 	db	32
  3504  00FE71  20                 	db	32
  3505  00FE72  20                 	db	32
  3506  00FE73  20                 	db	32
  3507  00FE74  20                 	db	32
  3508  00FE75  20                 	db	32
  3509  00FE76  00                 	db	0
  3510  00FE77                     STR_55:
  3511                           
  3512                           ; BSR set to: 57
  3513  00FE77  5A                 	db	90	;'Z'
  3514  00FE78  65                 	db	101	;'e'
  3515  00FE79  72                 	db	114	;'r'
  3516  00FE7A  6F                 	db	111	;'o'
  3517  00FE7B  20                 	db	32
  3518  00FE7C  43                 	db	67	;'C'
  3519  00FE7D  61                 	db	97	;'a'
  3520  00FE7E  6C                 	db	108	;'l'
  3521  00FE7F  20                 	db	32
  3522  00FE80  53                 	db	83	;'S'
  3523  00FE81  65                 	db	101	;'e'
  3524  00FE82  74                 	db	116	;'t'
  3525  00FE83  20                 	db	32
  3526  00FE84  20                 	db	32
  3527  00FE85  20                 	db	32
  3528  00FE86  20                 	db	32
  3529  00FE87  20                 	db	32
  3530  00FE88  20                 	db	32
  3531  00FE89  20                 	db	32
  3532  00FE8A  20                 	db	32
  3533  00FE8B  00                 	db	0
  3534  00FE8C                     STR_1:
  3535                           
  3536                           ; BSR set to: 57
  3537  00FE8C  20                 	db	32
  3538  00FE8D  4D                 	db	77	;'M'
  3539  00FE8E  42                 	db	66	;'B'
  3540  00FE8F  4D                 	db	77	;'M'
  3541  00FE90  43                 	db	67	;'C'
  3542  00FE91  20                 	db	32
  3543  00FE92  53                 	db	83	;'S'
  3544  00FE93  4F                 	db	79	;'O'
  3545  00FE94  4C                 	db	76	;'L'
  3546  00FE95  41                 	db	65	;'A'
  3547  00FE96  52                 	db	82	;'R'
  3548  00FE97  4D                 	db	77	;'M'
  3549  00FE98  4F                 	db	79	;'O'
  3550  00FE99  4E                 	db	78	;'N'
  3551  00FE9A  20                 	db	32
  3552  00FE9B  20                 	db	32
  3553  00FE9C  20                 	db	32
  3554  00FE9D  20                 	db	32
  3555  00FE9E  20                 	db	32
  3556  00FE9F  20                 	db	32
  3557  00FEA0  00                 	db	0
  3558  00FEA1                     STR_46:
  3559                           
  3560                           ; BSR set to: 57
  3561  00FEA1  42                 	db	66	;'B'
  3562  00FEA2  61                 	db	97	;'a'
  3563  00FEA3  74                 	db	116	;'t'
  3564  00FEA4  74                 	db	116	;'t'
  3565  00FEA5  65                 	db	101	;'e'
  3566  00FEA6  72                 	db	114	;'r'
  3567  00FEA7  79                 	db	121	;'y'
  3568  00FEA8  20                 	db	32
  3569  00FEA9  61                 	db	97	;'a'
  3570  00FEAA  6E                 	db	110	;'n'
  3571  00FEAB  64                 	db	100	;'d'
  3572  00FEAC  20                 	db	32
  3573  00FEAD  50                 	db	80	;'P'
  3574  00FEAE  56                 	db	86	;'V'
  3575  00FEAF  20                 	db	32
  3576  00FEB0  20                 	db	32
  3577  00FEB1  20                 	db	32
  3578  00FEB2  20                 	db	32
  3579  00FEB3  20                 	db	32
  3580  00FEB4  20                 	db	32
  3581  00FEB5  00                 	db	0
  3582  00FEB6                     STR_18:
  3583                           
  3584                           ; BSR set to: 57
  3585  00FEB6  43                 	db	67	;'C'
  3586  00FEB7  68                 	db	104	;'h'
  3587  00FEB8  65                 	db	101	;'e'
  3588  00FEB9  63                 	db	99	;'c'
  3589  00FEBA  6B                 	db	107	;'k'
  3590  00FEBB  69                 	db	105	;'i'
  3591  00FEBC  6E                 	db	110	;'n'
  3592  00FEBD  67                 	db	103	;'g'
  3593  00FEBE  20                 	db	32
  3594  00FEBF  25                 	db	37
  3595  00FEC0  63                 	db	99	;'c'
  3596  00FEC1  20                 	db	32
  3597  00FEC2  25                 	db	37
  3598  00FEC3  63                 	db	99	;'c'
  3599  00FEC4  20                 	db	32
  3600  00FEC5  20                 	db	32
  3601  00FEC6  20                 	db	32
  3602  00FEC7  20                 	db	32
  3603  00FEC8  20                 	db	32
  3604  00FEC9  20                 	db	32
  3605  00FECA  00                 	db	0
  3606  00FECB                     STR_50:
  3607                           
  3608                           ; BSR set to: 57
  3609  00FECB  53                 	db	83	;'S'
  3610  00FECC  65                 	db	101	;'e'
  3611  00FECD  6E                 	db	110	;'n'
  3612  00FECE  73                 	db	115	;'s'
  3613  00FECF  6F                 	db	111	;'o'
  3614  00FED0  72                 	db	114	;'r'
  3615  00FED1  20                 	db	32
  3616  00FED2  52                 	db	82	;'R'
  3617  00FED3  65                 	db	101	;'e'
  3618  00FED4  61                 	db	97	;'a'
  3619  00FED5  64                 	db	100	;'d'
  3620  00FED6  69                 	db	105	;'i'
  3621  00FED7  6E                 	db	110	;'n'
  3622  00FED8  67                 	db	103	;'g'
  3623  00FED9  73                 	db	115	;'s'
  3624  00FEDA  20                 	db	32
  3625  00FEDB  20                 	db	32
  3626  00FEDC  20                 	db	32
  3627  00FEDD  20                 	db	32
  3628  00FEDE  20                 	db	32
  3629  00FEDF  00                 	db	0
  3630  00FEE0                     STR_8:
  3631                           
  3632                           ; BSR set to: 57
  3633  00FEE0  52                 	db	82	;'R'
  3634  00FEE1  65                 	db	101	;'e'
  3635  00FEE2  61                 	db	97	;'a'
  3636  00FEE3  64                 	db	100	;'d'
  3637  00FEE4  20                 	db	32
  3638  00FEE5  45                 	db	69	;'E'
  3639  00FEE6  45                 	db	69	;'E'
  3640  00FEE7  50                 	db	80	;'P'
  3641  00FEE8  52                 	db	82	;'R'
  3642  00FEE9  4F                 	db	79	;'O'
  3643  00FEEA  4D                 	db	77	;'M'
  3644  00FEEB  20                 	db	32
  3645  00FEEC  44                 	db	68	;'D'
  3646  00FEED  41                 	db	65	;'A'
  3647  00FEEE  54                 	db	84	;'T'
  3648  00FEEF  41                 	db	65	;'A'
  3649  00FEF0  20                 	db	32
  3650  00FEF1  20                 	db	32
  3651  00FEF2  20                 	db	32
  3652  00FEF3  20                 	db	32
  3653  00FEF4  00                 	db	0
  3654  00FEF5                     STR_17:
  3655                           
  3656                           ; BSR set to: 57
  3657  00FEF5  43                 	db	67	;'C'
  3658  00FEF6  68                 	db	104	;'h'
  3659  00FEF7  65                 	db	101	;'e'
  3660  00FEF8  63                 	db	99	;'c'
  3661  00FEF9  6B                 	db	107	;'k'
  3662  00FEFA  20                 	db	32
  3663  00FEFB  33                 	db	51	;'3'
  3664  00FEFC  30                 	db	48	;'0'
  3665  00FEFD  20                 	db	32
  3666  00FEFE  73                 	db	115	;'s'
  3667  00FEFF  65                 	db	101	;'e'
  3668  00FF00  63                 	db	99	;'c'
  3669  00FF01  6F                 	db	111	;'o'
  3670  00FF02  6E                 	db	110	;'n'
  3671  00FF03  64                 	db	100	;'d'
  3672  00FF04  73                 	db	115	;'s'
  3673  00FF05  20                 	db	32
  3674  00FF06  20                 	db	32
  3675  00FF07  20                 	db	32
  3676  00FF08  20                 	db	32
  3677  00FF09  00                 	db	0
  3678  00FF0A                     STR_58:
  3679                           
  3680                           ; BSR set to: 57
  3681  00FF0A  5A                 	db	90	;'Z'
  3682  00FF0B  65                 	db	101	;'e'
  3683  00FF0C  72                 	db	114	;'r'
  3684  00FF0D  6F                 	db	111	;'o'
  3685  00FF0E  20                 	db	32
  3686  00FF0F  4F                 	db	79	;'O'
  3687  00FF10  75                 	db	117	;'u'
  3688  00FF11  74                 	db	116	;'t'
  3689  00FF12  20                 	db	32
  3690  00FF13  4F                 	db	79	;'O'
  3691  00FF14  66                 	db	102	;'f'
  3692  00FF15  20                 	db	32
  3693  00FF16  52                 	db	82	;'R'
  3694  00FF17  61                 	db	97	;'a'
  3695  00FF18  6E                 	db	110	;'n'
  3696  00FF19  67                 	db	103	;'g'
  3697  00FF1A  65                 	db	101	;'e'
  3698  00FF1B  20                 	db	32
  3699  00FF1C  20                 	db	32
  3700  00FF1D  20                 	db	32
  3701  00FF1E  00                 	db	0
  3702  00FF1F                     STR_52:
  3703                           
  3704                           ; BSR set to: 57
  3705  00FF1F  53                 	db	83	;'S'
  3706  00FF20  74                 	db	116	;'t'
  3707  00FF21  61                 	db	97	;'a'
  3708  00FF22  62                 	db	98	;'b'
  3709  00FF23  69                 	db	105	;'i'
  3710  00FF24  6C                 	db	108	;'l'
  3711  00FF25  69                 	db	105	;'i'
  3712  00FF26  74                 	db	116	;'t'
  3713  00FF27  79                 	db	121	;'y'
  3714  00FF28  20                 	db	32
  3715  00FF29  63                 	db	99	;'c'
  3716  00FF2A  6C                 	db	108	;'l'
  3717  00FF2B  6F                 	db	111	;'o'
  3718  00FF2C  63                 	db	99	;'c'
  3719  00FF2D  6B                 	db	107	;'k'
  3720  00FF2E  20                 	db	32
  3721  00FF2F  25                 	db	37
  3722  00FF30  64                 	db	100	;'d'
  3723  00FF31  20                 	db	32
  3724  00FF32  20                 	db	32
  3725  00FF33  00                 	db	0
  3726  00FF34                     STR_9:
  3727                           
  3728                           ; BSR set to: 57
  3729  00FF34  49                 	db	73	;'I'
  3730  00FF35  6E                 	db	110	;'n'
  3731  00FF36  76                 	db	118	;'v'
  3732  00FF37  61                 	db	97	;'a'
  3733  00FF38  6C                 	db	108	;'l'
  3734  00FF39  69                 	db	105	;'i'
  3735  00FF3A  64                 	db	100	;'d'
  3736  00FF3B  20                 	db	32
  3737  00FF3C  45                 	db	69	;'E'
  3738  00FF3D  45                 	db	69	;'E'
  3739  00FF3E  50                 	db	80	;'P'
  3740  00FF3F  52                 	db	82	;'R'
  3741  00FF40  4F                 	db	79	;'O'
  3742  00FF41  4D                 	db	77	;'M'
  3743  00FF42  20                 	db	32
  3744  00FF43  44                 	db	68	;'D'
  3745  00FF44  41                 	db	65	;'A'
  3746  00FF45  54                 	db	84	;'T'
  3747  00FF46  41                 	db	65	;'A'
  3748  00FF47  20                 	db	32
  3749  00FF48  00                 	db	0
  3750  00FF49                     STR_49:
  3751                           
  3752                           ; BSR set to: 57
  3753  00FF49  52                 	db	82	;'R'
  3754  00FF4A  65                 	db	101	;'e'
  3755  00FF4B  6C                 	db	108	;'l'
  3756  00FF4C  65                 	db	101	;'e'
  3757  00FF4D  61                 	db	97	;'a'
  3758  00FF4E  73                 	db	115	;'s'
  3759  00FF4F  65                 	db	101	;'e'
  3760  00FF50  20                 	db	32
  3761  00FF51  62                 	db	98	;'b'
  3762  00FF52  75                 	db	117	;'u'
  3763  00FF53  74                 	db	116	;'t'
  3764  00FF54  74                 	db	116	;'t'
  3765  00FF55  6F                 	db	111	;'o'
  3766  00FF56  6E                 	db	110	;'n'
  3767  00FF57  20                 	db	32
  3768  00FF58  25                 	db	37
  3769  00FF59  63                 	db	99	;'c'
  3770  00FF5A  20                 	db	32
  3771  00FF5B  20                 	db	32
  3772  00FF5C  00                 	db	0
  3773  00FF5D                     STR_63:
  3774                           
  3775                           ; BSR set to: 57
  3776  00FF5D  48                 	db	72	;'H'
  3777  00FF5E  45                 	db	69	;'E'
  3778  00FF5F  4C                 	db	76	;'L'
  3779  00FF60  50                 	db	80	;'P'
  3780  00FF61  20                 	db	32
  3781  00FF62  25                 	db	37
  3782  00FF63  73                 	db	115	;'s'
  3783  00FF64  20                 	db	32
  3784  00FF65  20                 	db	32
  3785  00FF66  20                 	db	32
  3786  00FF67  20                 	db	32
  3787  00FF68  20                 	db	32
  3788  00FF69  20                 	db	32
  3789  00FF6A  20                 	db	32
  3790  00FF6B  20                 	db	32
  3791  00FF6C  20                 	db	32
  3792  00FF6D  20                 	db	32
  3793  00FF6E  20                 	db	32
  3794  00FF6F  00                 	db	0
  3795  00FF70                     
  3796                           ; BSR set to: 57
  3797  00FF70  44                 	db	68	;'D'
  3798  00FF71  49                 	db	73	;'I'
  3799  00FF72  53                 	db	83	;'S'
  3800  00FF73  50                 	db	80	;'P'
  3801  00FF74  4C                 	db	76	;'L'
  3802  00FF75  41                 	db	65	;'A'
  3803  00FF76  59                 	db	89	;'Y'
  3804  00FF77  20                 	db	32
  3805  00FF78  25                 	db	37
  3806  00FF79  73                 	db	115	;'s'
  3807  00FF7A  20                 	db	32
  3808  00FF7B  20                 	db	32
  3809  00FF7C  20                 	db	32
  3810  00FF7D  20                 	db	32
  3811  00FF7E  20                 	db	32
  3812  00FF7F  20                 	db	32
  3813  00FF80  20                 	db	32
  3814  00FF81  20                 	db	32
  3815  00FF82  00                 	db	0
  3816  00FF83                     
  3817                           ; BSR set to: 57
  3818  00FF83  25                 	db	37
  3819  00FF84  64                 	db	100	;'d'
  3820  00FF85  20                 	db	32
  3821  00FF86  25                 	db	37
  3822  00FF87  32                 	db	50	;'2'
  3823  00FF88  2E                 	db	46
  3824  00FF89  34                 	db	52	;'4'
  3825  00FF8A  66                 	db	102	;'f'
  3826  00FF8B  2C                 	db	44
  3827  00FF8C  20                 	db	32
  3828  00FF8D  25                 	db	37
  3829  00FF8E  64                 	db	100	;'d'
  3830  00FF8F  20                 	db	32
  3831  00FF90  20                 	db	32
  3832  00FF91  20                 	db	32
  3833  00FF92  23                 	db	35
  3834  00FF93  00                 	db	0
  3835  00FF94                     STR_22:
  3836                           
  3837                           ; BSR set to: 57
  3838  00FF94  25                 	db	37
  3839  00FF95  64                 	db	100	;'d'
  3840  00FF96  20                 	db	32
  3841  00FF97  25                 	db	37
  3842  00FF98  32                 	db	50	;'2'
  3843  00FF99  2E                 	db	46
  3844  00FF9A  34                 	db	52	;'4'
  3845  00FF9B  66                 	db	102	;'f'
  3846  00FF9C  20                 	db	32
  3847  00FF9D  20                 	db	32
  3848  00FF9E  20                 	db	32
  3849  00FF9F  25                 	db	37
  3850  00FFA0  64                 	db	100	;'d'
  3851  00FFA1  20                 	db	32
  3852  00FFA2  20                 	db	32
  3853  00FFA3  00                 	db	0
  3854  00FFA4                     STR_67:
  3855                           
  3856                           ; BSR set to: 57
  3857  00FFA4  76                 	db	118	;'v'
  3858  00FFA5  74                 	db	116	;'t'
  3859  00FFA6  65                 	db	101	;'e'
  3860  00FFA7  72                 	db	114	;'r'
  3861  00FFA8  6D                 	db	109	;'m'
  3862  00FFA9  20                 	db	32
  3863  00FFAA  25                 	db	37
  3864  00FFAB  78                 	db	120	;'x'
  3865  00FFAC  3A                 	db	58	;':'
  3866  00FFAD  25                 	db	37
  3867  00FFAE  78                 	db	120	;'x'
  3868  00FFAF  20                 	db	32
  3869  00FFB0  20                 	db	32
  3870  00FFB1  20                 	db	32
  3871  00FFB2  00                 	db	0
  3872  00FFB3                     STR_61:
  3873                           
  3874                           ; BSR set to: 57
  3875  00FFB3  46                 	db	70	;'F'
  3876  00FFB4  65                 	db	101	;'e'
  3877  00FFB5  62                 	db	98	;'b'
  3878  00FFB6  20                 	db	32
  3879  00FFB7  31                 	db	49	;'1'
  3880  00FFB8  32                 	db	50	;'2'
  3881  00FFB9  20                 	db	32
  3882  00FFBA  32                 	db	50	;'2'
  3883  00FFBB  30                 	db	48	;'0'
  3884  00FFBC  32                 	db	50	;'2'
  3885  00FFBD  30                 	db	48	;'0'
  3886  00FFBE  00                 	db	0
  3887  00FFBF                     STR_65:
  3888                           
  3889                           ; BSR set to: 57
  3890  00FFBF  25                 	db	37
  3891  00FFC0  73                 	db	115	;'s'
  3892  00FFC1  20                 	db	32
  3893  00FFC2  20                 	db	32
  3894  00FFC3  20                 	db	32
  3895  00FFC4  20                 	db	32
  3896  00FFC5  20                 	db	32
  3897  00FFC6  20                 	db	32
  3898  00FFC7  20                 	db	32
  3899  00FFC8  00                 	db	0
  3900  00FFC9                     STR_62:
  3901                           
  3902                           ; BSR set to: 57
  3903  00FFC9  31                 	db	49	;'1'
  3904  00FFCA  39                 	db	57	;'9'
  3905  00FFCB  3A                 	db	58	;':'
  3906  00FFCC  30                 	db	48	;'0'
  3907  00FFCD  32                 	db	50	;'2'
  3908  00FFCE  3A                 	db	58	;':'
  3909  00FFCF  33                 	db	51	;'3'
  3910  00FFD0  35                 	db	53	;'5'
  3911  00FFD1  00                 	db	0
  3912  00FFD2                     STR_3:
  3913                           
  3914                           ; BSR set to: 57
  3915  00FFD2  31                 	db	49	;'1'
  3916  00FFD3  2E                 	db	46
  3917  00FFD4  32                 	db	50	;'2'
  3918  00FFD5  31                 	db	49	;'1'
  3919  00FFD6  00                 	db	0
  3920  00FFD7                     STR_81:
  3921                           
  3922                           ; BSR set to: 57
  3923  00FFD7  49                 	db	73	;'I'
  3924  00FFD8  4E                 	db	78	;'N'
  3925  00FFD9  46                 	db	70	;'F'
  3926  00FFDA  00                 	db	0
  3927  00FFDB                     STR_85:
  3928                           
  3929                           ; BSR set to: 57
  3930  00FFDB  4E                 	db	78	;'N'
  3931  00FFDC  41                 	db	65	;'A'
  3932  00FFDD  4E                 	db	78	;'N'
  3933  00FFDE  00                 	db	0
  3934  00FFDF                     STR_82:
  3935                           
  3936                           ; BSR set to: 57
  3937  00FFDF  69                 	db	105	;'i'
  3938  00FFE0  6E                 	db	110	;'n'
  3939  00FFE1  66                 	db	102	;'f'
  3940  00FFE2  00                 	db	0
  3941  00FFE3                     STR_86:
  3942                           
  3943                           ; BSR set to: 57
  3944  00FFE3  6E                 	db	110	;'n'
  3945  00FFE4  61                 	db	97	;'a'
  3946  00FFE5  6E                 	db	110	;'n'
  3947  00FFE6  00                 	db	0
  3948  00FFE7                     STR_112:
  3949                           
  3950                           ; BSR set to: 57
  3951  00FFE7  6C                 	db	108	;'l'
  3952  00FFE8  58                 	db	88	;'X'
  3953  00FFE9  00                 	db	0
  3954  00FFEA                     STR_89:
  3955                           
  3956                           ; BSR set to: 57
  3957  00FFEA  6C                 	db	108	;'l'
  3958  00FFEB  64                 	db	100	;'d'
  3959  00FFEC  00                 	db	0
  3960  00FFED                     STR_98:
  3961                           
  3962                           ; BSR set to: 57
  3963  00FFED  6C                 	db	108	;'l'
  3964  00FFEE  66                 	db	102	;'f'
  3965  00FFEF  00                 	db	0
  3966  00FFF0                     STR_93:
  3967                           
  3968                           ; BSR set to: 57
  3969  00FFF0  6C                 	db	108	;'l'
  3970  00FFF1  69                 	db	105	;'i'
  3971  00FFF2  00                 	db	0
  3972  00FFF3                     STR_103:
  3973                           
  3974                           ; BSR set to: 57
  3975  00FFF3  6C                 	db	108	;'l'
  3976  00FFF4  75                 	db	117	;'u'
  3977  00FFF5  00                 	db	0
  3978  00FFF6                     STR_108:
  3979                           
  3980                           ; BSR set to: 57
  3981  00FFF6  6C                 	db	108	;'l'
  3982  00FFF7  78                 	db	120	;'x'
  3983  00FFF8  00                 	db	0
  3984  00FFF9                     STR_60:
  3985                           
  3986                           ; BSR set to: 57
  3987  00FFF9  25                 	db	37
  3988  00FFFA  63                 	db	99	;'c'
  3989  00FFFB  00                 	db	0
  3990  00FFFC                     STR_59:
  3991                           
  3992                           ; BSR set to: 57
  3993  00FFFC  25                 	db	37
  3994  00FFFD  73                 	db	115	;'s'
  3995  00FFFE  00                 	db	0
  3996  0000                     
  3997                           ; #config settings
  3998  00FFFF  00                 	db	0	; dummy byte at the end
  3999  0000                     
  4000                           	psect	cinit
  4001  01A42E                     __pcinit:
  4002                           	opt callstack 0
  4003  01A42E                     start_initialization:
  4004                           	opt callstack 0
  4005  01A42E                     __initialization:
  4006                           	opt callstack 0
  4007                           
  4008                           ; Initialize objects allocated to BIGRAM (835 bytes)
  4009                           ; load TBLPTR registers with __pidataBIGRAM
  4010  01A42E  0E72               	movlw	low __pidataBIGRAM
  4011  01A430  6EF6               	movwf	tblptrl,c
  4012  01A432  0E6D               	movlw	high __pidataBIGRAM
  4013  01A434  6EF7               	movwf	tblptrh,c
  4014  01A436  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4015  01A438  6EF8               	movwf	tblptru,c
  4016  01A43A  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  4017  01A43E  EE20 F343          	lfsr	2,835
  4018  01A442                     copy_data0:
  4019  01A442  0009               	tblrd		*+
  4020  01A444  006F FFD7 FFEE     	movff	tablat,postinc0
  4021  01A44A  50DD               	movf	postdec2,w,c
  4022  01A44C  50D9               	movf	fsr2l,w,c
  4023  01A44E  E1F9               	bnz	copy_data0
  4024  01A450  50DA               	movf	fsr2h,w,c
  4025  01A452  E1F7               	bnz	copy_data0
  4026                           
  4027                           ; Initialize objects allocated to BANK2 (167 bytes)
  4028                           ; load TBLPTR registers with __pidataBANK2
  4029  01A454  0E32               	movlw	low __pidataBANK2
  4030  01A456  6EF6               	movwf	tblptrl,c
  4031  01A458  0EB6               	movlw	high __pidataBANK2
  4032  01A45A  6EF7               	movwf	tblptrh,c
  4033  01A45C  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4034  01A45E  6EF8               	movwf	tblptru,c
  4035  01A460  EE00  F200         	lfsr	0,__pdataBANK2
  4036  01A464  EE20 F0A7          	lfsr	2,167
  4037  01A468                     copy_data1:
  4038  01A468  0009               	tblrd		*+
  4039  01A46A  006F FFD7 FFEE     	movff	tablat,postinc0
  4040  01A470  50DD               	movf	postdec2,w,c
  4041  01A472  50D9               	movf	fsr2l,w,c
  4042  01A474  E1F9               	bnz	copy_data1
  4043                           
  4044                           ; Initialize objects allocated to BANK1 (199 bytes)
  4045                           ; load TBLPTR registers with __pidataBANK1
  4046  01A476  0ED2               	movlw	low __pidataBANK1
  4047  01A478  6EF6               	movwf	tblptrl,c
  4048  01A47A  0EAF               	movlw	high __pidataBANK1
  4049  01A47C  6EF7               	movwf	tblptrh,c
  4050  01A47E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  4051  01A480  6EF8               	movwf	tblptru,c
  4052  01A482  EE00  F100         	lfsr	0,__pdataBANK1
  4053  01A486  EE20 F0C7          	lfsr	2,199
  4054  01A48A                     copy_data2:
  4055  01A48A  0009               	tblrd		*+
  4056  01A48C  006F FFD7 FFEE     	movff	tablat,postinc0
  4057  01A492  50DD               	movf	postdec2,w,c
  4058  01A494  50D9               	movf	fsr2l,w,c
  4059  01A496  E1F9               	bnz	copy_data2
  4060                           
  4061                           ; Initialize objects allocated to BANK0 (9 bytes)
  4062                           ; load TBLPTR registers with __pidataBANK0
  4063  01A498  0E3A               	movlw	low __pidataBANK0
  4064  01A49A  6EF6               	movwf	tblptrl,c
  4065  01A49C  0ED3               	movlw	high __pidataBANK0
  4066  01A49E  6EF7               	movwf	tblptrh,c
  4067  01A4A0  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  4068  01A4A2  6EF8               	movwf	tblptru,c
  4069  01A4A4  EE00  F0F1         	lfsr	0,__pdataBANK0
  4070  01A4A8  EE20 F009          	lfsr	2,9
  4071  01A4AC                     copy_data3:
  4072  01A4AC  0009               	tblrd		*+
  4073  01A4AE  006F FFD7 FFEE     	movff	tablat,postinc0
  4074  01A4B4  50DD               	movf	postdec2,w,c
  4075  01A4B6  50D9               	movf	fsr2l,w,c
  4076  01A4B8  E1F9               	bnz	copy_data3
  4077                           
  4078                           ; Clear objects allocated to BIGRAM (482 bytes)
  4079  01A4BA  EE02  F242         	lfsr	0,__pbssBIGRAM
  4080  01A4BE  EE20 F1E2          	lfsr	2,482
  4081  01A4C2                     clear_0:
  4082  01A4C2  6AEE               	clrf	postinc0,c
  4083  01A4C4  50DD               	movf	postdec2,w,c
  4084  01A4C6  50D9               	movf	fsr2l,w,c
  4085  01A4C8  E1FC               	bnz	clear_0
  4086  01A4CA  50DA               	movf	fsr2h,w,c
  4087  01A4CC  E1FA               	bnz	clear_0
  4088                           
  4089                           ; Clear objects allocated to BANK6 (255 bytes)
  4090  01A4CE  EE01  F200         	lfsr	0,__pbssBANK6
  4091  01A4D2  EE20 F0FF          	lfsr	2,255
  4092  01A4D6                     clear_1:
  4093  01A4D6  6AEE               	clrf	postinc0,c
  4094  01A4D8  50DD               	movf	postdec2,w,c
  4095  01A4DA  50D9               	movf	fsr2l,w,c
  4096  01A4DC  E1FC               	bnz	clear_1
  4097  01A4DE  50DA               	movf	fsr2h,w,c
  4098  01A4E0  E1FA               	bnz	clear_1
  4099                           
  4100                           ; Clear objects allocated to BANK5 (67 bytes)
  4101  01A4E2  EE01  F100         	lfsr	0,__pbssBANK5
  4102  01A4E6  0E43               	movlw	67
  4103  01A4E8                     clear_2:
  4104  01A4E8  6AEE               	clrf	postinc0,c
  4105  01A4EA  06E8               	decf	wreg,f,c
  4106  01A4EC  E1FD               	bnz	clear_2
  4107                           
  4108                           ; Clear objects allocated to BANK4 (234 bytes)
  4109  01A4EE  EE01  F000         	lfsr	0,__pbssBANK4
  4110  01A4F2  0EEA               	movlw	234
  4111  01A4F4                     clear_3:
  4112  01A4F4  6AEE               	clrf	postinc0,c
  4113  01A4F6  06E8               	decf	wreg,f,c
  4114  01A4F8  E1FD               	bnz	clear_3
  4115                           
  4116                           ; Clear objects allocated to BANK3 (228 bytes)
  4117  01A4FA  EE00  F300         	lfsr	0,__pbssBANK3
  4118  01A4FE  0EE4               	movlw	228
  4119  01A500                     clear_4:
  4120  01A500  6AEE               	clrf	postinc0,c
  4121  01A502  06E8               	decf	wreg,f,c
  4122  01A504  E1FD               	bnz	clear_4
  4123                           
  4124                           ; Clear objects allocated to BANK2 (26 bytes)
  4125  01A506  EE00  F2A7         	lfsr	0,__pbssBANK2
  4126  01A50A  0E1A               	movlw	26
  4127  01A50C                     clear_5:
  4128  01A50C  6AEE               	clrf	postinc0,c
  4129  01A50E  06E8               	decf	wreg,f,c
  4130  01A510  E1FD               	bnz	clear_5
  4131                           
  4132                           ; Clear objects allocated to BANK1 (49 bytes)
  4133  01A512  EE00  F1C7         	lfsr	0,__pbssBANK1
  4134  01A516  0E31               	movlw	49
  4135  01A518                     clear_6:
  4136  01A518  6AEE               	clrf	postinc0,c
  4137  01A51A  06E8               	decf	wreg,f,c
  4138  01A51C  E1FD               	bnz	clear_6
  4139                           
  4140                           ; Clear objects allocated to BANK0 (120 bytes)
  4141  01A51E  EE00  F060         	lfsr	0,__pbssBANK0
  4142  01A522  0E78               	movlw	120
  4143  01A524                     clear_7:
  4144  01A524  6AEE               	clrf	postinc0,c
  4145  01A526  06E8               	decf	wreg,f,c
  4146  01A528  E1FD               	bnz	clear_7
  4147                           
  4148                           ; Clear objects allocated to COMRAM (14 bytes)
  4149  01A52A  EE00  F03A         	lfsr	0,__pbssCOMRAM
  4150  01A52E  0E0E               	movlw	14
  4151  01A530                     clear_8:
  4152  01A530  6AEE               	clrf	postinc0,c
  4153  01A532  06E8               	decf	wreg,f,c
  4154  01A534  E1FD               	bnz	clear_8
  4155                           
  4156                           ;
  4157                           ; Setup IVTBASE
  4158                           ;
  4159  01A536  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4160  01A538  6ED5               	movwf	213,c
  4161  01A53A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4162  01A53C  6ED6               	movwf	214,c
  4163  01A53E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4164  01A540  6ED7               	movwf	215,c
  4165  01A542                     end_of_initialization:
  4166                           	opt callstack 0
  4167  01A542                     __end_of__initialization:
  4168                           	opt callstack 0
  4169  01A542  0100               	movlb	0
  4170  01A544  EF00  F080         	goto	_main	;jump to C main() function
  4171                           
  4172                           	psect	bssCOMRAM
  4173  00003A                     __pbssCOMRAM:
  4174                           	opt callstack 0
  4175  00003A                     _width:
  4176                           	opt callstack 0
  4177  00003A                     	ds	2
  4178  00003C                     _prec:
  4179                           	opt callstack 0
  4180  00003C                     	ds	2
  4181  00003E                     _flags:
  4182                           	opt callstack 0
  4183  00003E                     	ds	2
  4184  000040                     calc_bsoc@log_update_wait:
  4185                           	opt callstack 0
  4186  000040                     	ds	1
  4187  000041                     check_day_time@day_delay:
  4188                           	opt callstack 0
  4189  000041                     	ds	1
  4190  000042                     dac_spi_control@S0:
  4191                           	opt callstack 0
  4192  000042                     	ds	1
  4193  000043                     dac_spi_control@init:
  4194                           	opt callstack 0
  4195  000043                     	ds	1
  4196  000044                     _uart2RxHead:
  4197                           	opt callstack 0
  4198  000044                     	ds	1
  4199  000045                     _uart2TxBufferRemaining:
  4200                           	opt callstack 0
  4201  000045                     	ds	1
  4202  000046                     _uart2TxTail:
  4203                           	opt callstack 0
  4204  000046                     	ds	1
  4205  000047                     _uart1RxHead:
  4206                           	opt callstack 0
  4207  000047                     	ds	1
  4208                           
  4209                           	psect	bssBANK0
  4210  000060                     __pbssBANK0:
  4211                           	opt callstack 0
  4212  000060                     _spi_link:
  4213                           	opt callstack 0
  4214  000060                     	ds	12
  4215  00006C                     _uart1RxBuffer:
  4216                           	opt callstack 0
  4217  00006C                     	ds	8
  4218  000074                     spinners@s:
  4219                           	opt callstack 0
  4220  000074                     	ds	6
  4221  00007A                     floorf@F524:
  4222                           	opt callstack 0
  4223  00007A                     	ds	4
  4224  00007E                     fabsf@F463:
  4225                           	opt callstack 0
  4226  00007E                     	ds	4
  4227  000082                     ___fpclassifyf@F463:
  4228                           	opt callstack 0
  4229  000082                     	ds	4
  4230  000086                     calc_ror_data@bcror:
  4231                           	opt callstack 0
  4232  000086                     	ds	4
  4233  00008A                     calc_ror_data@bvror:
  4234                           	opt callstack 0
  4235  00008A                     	ds	4
  4236  00008E                     calc_model_data@bcror:
  4237                           	opt callstack 0
  4238  00008E                     	ds	4
  4239  000092                     calc_model_data@bvror:
  4240                           	opt callstack 0
  4241  000092                     	ds	4
  4242  000096                     _utctime:
  4243                           	opt callstack 0
  4244  000096                     	ds	4
  4245  00009A                     wdtdelay@dcount:
  4246                           	opt callstack 0
  4247  00009A                     	ds	4
  4248  00009E                     _P:
  4249                           	opt callstack 0
  4250  00009E                     	ds	4
  4251  0000A2                     _TMR3_InterruptHandler:
  4252                           	opt callstack 0
  4253  0000A2                     	ds	3
  4254  0000A5                     _TMR5_InterruptHandler:
  4255                           	opt callstack 0
  4256  0000A5                     	ds	3
  4257  0000A8                     _TMR6_InterruptHandler:
  4258                           	opt callstack 0
  4259  0000A8                     	ds	3
  4260  0000AB                     _ADCC_ADTI_InterruptHandler:
  4261                           	opt callstack 0
  4262  0000AB                     	ds	3
  4263  0000AE                     _ADCC_ADI_InterruptHandler:
  4264                           	opt callstack 0
  4265  0000AE                     	ds	3
  4266  0000B1                     _UART1_RxInterruptHandler:
  4267                           	opt callstack 0
  4268  0000B1                     	ds	3
  4269  0000B4                     _UART2_TxInterruptHandler:
  4270                           	opt callstack 0
  4271  0000B4                     	ds	3
  4272  0000B7                     _UART2_RxInterruptHandler:
  4273                           	opt callstack 0
  4274  0000B7                     	ds	3
  4275  0000BA                     _INT1_InterruptHandler:
  4276                           	opt callstack 0
  4277  0000BA                     	ds	3
  4278  0000BD                     _INT0_InterruptHandler:
  4279                           	opt callstack 0
  4280  0000BD                     	ds	3
  4281  0000C0                     _nout:
  4282                           	opt callstack 0
  4283  0000C0                     	ds	2
  4284  0000C2                     TMR3_ISR@CountCallBack:
  4285                           	opt callstack 0
  4286  0000C2                     	ds	2
  4287  0000C4                     _timer3ReloadVal:
  4288                           	opt callstack 0
  4289  0000C4                     	ds	2
  4290  0000C6                     TMR5_ISR@CountCallBack:
  4291                           	opt callstack 0
  4292  0000C6                     	ds	2
  4293  0000C8                     _timer5ReloadVal:
  4294                           	opt callstack 0
  4295  0000C8                     	ds	2
  4296  0000CA                     esr_check@esr_state:
  4297                           	opt callstack 0
  4298  0000CA                     	ds	1
  4299  0000CB                     dac_spi_control@SB:
  4300                           	opt callstack 0
  4301  0000CB                     	ds	1
  4302  0000CC                     dac_spi_control@SC:
  4303                           	opt callstack 0
  4304  0000CC                     	ds	1
  4305  0000CD                     dac_spi_control@S2:
  4306                           	opt callstack 0
  4307  0000CD                     	ds	1
  4308  0000CE                     dac_spi_control@S1:
  4309                           	opt callstack 0
  4310  0000CE                     	ds	1
  4311  0000CF                     _mode_sw:
  4312                           	opt callstack 0
  4313  0000CF                     	ds	1
  4314  0000D0                     _uart2RxCount:
  4315                           	opt callstack 0
  4316  0000D0                     	ds	1
  4317  0000D1                     _uart2RxTail:
  4318                           	opt callstack 0
  4319  0000D1                     	ds	1
  4320  0000D2                     _uart2TxHead:
  4321                           	opt callstack 0
  4322  0000D2                     	ds	1
  4323  0000D3                     _uart1RxCount:
  4324                           	opt callstack 0
  4325  0000D3                     	ds	1
  4326  0000D4                     _uart1RxTail:
  4327                           	opt callstack 0
  4328  0000D4                     	ds	1
  4329  0000D5                     _crcObj:
  4330                           	opt callstack 0
  4331  0000D5                     	ds	3
  4332                           
  4333                           	psect	dataBANK0
  4334  0000F1                     __pdataBANK0:
  4335                           	opt callstack 0
  4336  0000F1                     _H:
  4337                           	opt callstack 0
  4338  0000F1                     	ds	9
  4339                           
  4340                           	psect	bssBANK1
  4341  0001C7                     __pbssBANK1:
  4342                           	opt callstack 0
  4343  0001C7                     _S:
  4344                           	opt callstack 0
  4345  0001C7                     	ds	41
  4346  0001F0                     _seed:
  4347                           	opt callstack 0
  4348  0001F0                     	ds	8
  4349                           
  4350                           	psect	dataBANK1
  4351  000100                     __pdataBANK1:
  4352                           	opt callstack 0
  4353  000100                     stoa@F1166:
  4354                           	opt callstack 0
  4355  000100                     	ds	7
  4356  000107                     _V:
  4357                           	opt callstack 0
  4358  000107                     	ds	192
  4359                           
  4360                           	psect	bssBANK2
  4361  0002A7                     __pbssBANK2:
  4362                           	opt callstack 0
  4363  0002A7                     _tickCount:
  4364                           	opt callstack 0
  4365  0002A7                     	ds	26
  4366                           
  4367                           	psect	dataBANK2
  4368  000200                     __pdataBANK2:
  4369                           	opt callstack 0
  4370  000200                     _R:
  4371                           	opt callstack 0
  4372  000200                     	ds	167
  4373                           
  4374                           	psect	bssBANK3
  4375  000300                     __pbssBANK3:
  4376                           	opt callstack 0
  4377  000300                     lp_filter@smooth:
  4378                           	opt callstack 0
  4379  000300                     	ds	84
  4380  000354                     _uart2TxBuffer:
  4381                           	opt callstack 0
  4382  000354                     	ds	64
  4383  000394                     _dbuf:
  4384                           	opt callstack 0
  4385  000394                     	ds	80
  4386                           
  4387                           	psect	bssBANK4
  4388  000400                     __pbssBANK4:
  4389                           	opt callstack 0
  4390  000400                     _r_cal:
  4391                           	opt callstack 0
  4392  000400                     	ds	167
  4393  0004A7                     _ring_buf1:
  4394                           	opt callstack 0
  4395  0004A7                     	ds	67
  4396                           
  4397                           	psect	bssBANK5
  4398  000500                     __pbssBANK5:
  4399                           	opt callstack 0
  4400  000500                     _ring_buf2:
  4401                           	opt callstack 0
  4402  000500                     	ds	67
  4403                           
  4404                           	psect	bssBANK6
  4405  000600                     __pbssBANK6:
  4406                           	opt callstack 0
  4407  000600                     _uart2RxBuffer:
  4408                           	opt callstack 0
  4409  000600                     	ds	255
  4410                           
  4411                           	psect	bssBIGRAM
  4412  000A42                     __pbssBIGRAM:
  4413                           	opt callstack 0
  4414  000A42                     _D:
  4415                           	opt callstack 0
  4416  000A42                     	ds	482
  4417                           
  4418                           	psect	dataBIGRAM
  4419  0006FF                     __pdataBIGRAM:
  4420                           	opt callstack 0
  4421  0006FF                     _port_data:
  4422                           	opt callstack 0
  4423  0006FF                     	ds	512
  4424  0008FF                     _C:
  4425                           	opt callstack 0
  4426  0008FF                     	ds	323
  4427                           
  4428                           	psect	cstackBANK0
  4429  0000D8                     __pcstackBANK0:
  4430                           	opt callstack 0
  4431  0000D8                     ??_TMR3_ISR:
  4432                           
  4433                           ; 1 bytes @ 0x0
  4434  0000D8                     	ds	25
  4435                           
  4436                           	psect	cstackCOMRAM
  4437  000021                     __pcstackCOMRAM:
  4438                           	opt callstack 0
  4439  000021                     ??_ADCC_ThresholdISR:
  4440  000021                     
  4441                           ; 1 bytes @ 0x0
  4442  000021                     	ds	5
  4443  000026                     ??_TMR6_ISR:
  4444                           
  4445                           ; 1 bytes @ 0x5
  4446  000026                     	ds	1
  4447  000027                     ??_INT1_ISR:
  4448  000027                     
  4449                           ; 1 bytes @ 0x6
  4450  000027                     	ds	4
  4451  00002B                     ??_TMR5_ISR:
  4452                           
  4453                           ; 1 bytes @ 0xA
  4454  00002B                     	ds	15
  4455                           
  4456 ;;
  4457 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4458 ;;
  4459 ;; *************** function _main *****************
  4460 ;; Defined at:
  4461 ;;		line 189 in file "main.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;		None
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  esr_temp        4  [STACK] float 
  4466 ;;  i_esr           2  [STACK] unsigned short 
  4467 ;;  shape           1  [STACK] unsigned char 
  4468 ;;  inp_index       1  [STACK] unsigned char 
  4469 ;;  k               1  [STACK] unsigned char 
  4470 ;;  j               1  [STACK] unsigned char 
  4471 ;;  i               1  [STACK] unsigned char 
  4472 ;;  mode            1  [STACK] enum E17179
  4473 ;;  i_ror           1  [STACK] unsigned char 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1  [STACK] void 
  4476 ;; Registers used:
  4477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4487 ;;Total ram usage:        0 bytes
  4488 ;; Hardware stack levels required when called:   29
  4489 ;; This function calls:
  4490 ;;		_SYSTEM_Initialize
  4491 ;;		_StartTimer
  4492 ;;		_TimerDone
  4493 ;;		_WaitMs
  4494 ;;		___fladd
  4495 ;;		___flge
  4496 ;;		___fltol
  4497 ;;		_calc_model_data
  4498 ;;		_calc_ror_data
  4499 ;;		_check_adc_scan
  4500 ;;		_check_enter_button
  4501 ;;		_check_help
  4502 ;;		_clear_adc_scan
  4503 ;;		_clear_hid_pflags
  4504 ;;		_conv_raw_result
  4505 ;;		_convert_adc_data
  4506 ;;		_current_sensor_cal
  4507 ;;		_eaDogM_WriteCommand
  4508 ;;		_esr_check
  4509 ;;		_fabsf
  4510 ;;		_get_raw_result
  4511 ;;		_get_switch
  4512 ;;		_get_vterm_ptr
  4513 ;;		_hid_display
  4514 ;;		_init_bsoc
  4515 ;;		_init_display
  4516 ;;		_init_port_dma
  4517 ;;		_lp_filter
  4518 ;;		_mode_lamp_dim
  4519 ;;		_read_cal_data
  4520 ;;		_set_dac
  4521 ;;		_set_dac_a
  4522 ;;		_set_dac_b
  4523 ;;		_set_display_info
  4524 ;;		_set_load_relay_one
  4525 ;;		_set_load_relay_two
  4526 ;;		_set_vterm
  4527 ;;		_spinners
  4528 ;;		_sprintf
  4529 ;;		_srand
  4530 ;;		_start_adc_scan
  4531 ;;		_start_switch_handler
  4532 ;;		_static_soc
  4533 ;;		_update_cal_data
  4534 ;;		_update_hist_data
  4535 ;;		_update_lcd
  4536 ;;		_wait_lcd_done
  4537 ;; This function is called by:
  4538 ;;		Startup code after reset
  4539 ;; This function uses a reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text0
  4543  010000                     __ptext0:
  4544                           	opt callstack 0
  4545  010000                     _main:
  4546                           	opt callstack 0
  4547                           
  4548                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4549  010000  0E11               	movlw	17
  4550  010002  26E1               	addwf	fsr1l,f,c
  4551  010004  0E00               	movlw	0
  4552  010006  22E2               	addwfc	fsr1h,f,c
  4553                           
  4554                           ;main.c: 191:  UI_STATES mode;;main.c: 192:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4555                           ;stkvar	_inp_index @ sp[(-17)+11]
  4556                           
  4557                           ;incstack = 0
  4558  010008  0EFA               	movlw	-6
  4559  01000A  6AE3               	clrf	plusw1,c
  4560                           
  4561                           ;stkvar	_i @ sp[(-17)+14]
  4562  01000C  0EFD               	movlw	-3
  4563  01000E  6AE3               	clrf	plusw1,c
  4564                           
  4565                           ;stkvar	_j @ sp[(-17)+13]
  4566  010010  0EFC               	movlw	-4
  4567  010012  6AE3               	clrf	plusw1,c
  4568  010014  2AE3               	incf	plusw1,f,c
  4569                           
  4570                           ;stkvar	_k @ sp[(-17)+12]
  4571  010016  0EFB               	movlw	-5
  4572  010018  6AE3               	clrf	plusw1,c
  4573  01001A  82E3               	bsf	plusw1,1,c
  4574                           
  4575                           ;main.c: 195:  SYSTEM_Initialize();
  4576  01001C  EC48  F0E2         	call	_SYSTEM_Initialize	;wreg free
  4577                           
  4578                           ; BSR set to: 60
  4579                           ;main.c: 198:  (INTCON0bits.GIEH = 1);
  4580  010020  8ED2               	bsf	210,7,c	;volatile
  4581                           
  4582                           ; BSR set to: 60
  4583                           ;main.c: 201:  (INTCON0bits.GIEL = 1);
  4584  010022  8CD2               	bsf	210,6,c	;volatile
  4585                           
  4586                           ; BSR set to: 60
  4587                           ;main.c: 203:  V.ui_state = UI_STATE_INIT;
  4588  010024  0101               	movlb	1	; () banked
  4589  010026  6B07               	clrf	_V& (0+255),b	;volatile
  4590                           
  4591                           ; BSR set to: 1
  4592                           ;main.c: 208:  WaitMs(300);
  4593  010028  0E2C               	movlw	44
  4594  01002A  6EE6               	movwf	postinc1,c
  4595  01002C  0E01               	movlw	1
  4596  01002E  6EE6               	movwf	postinc1,c
  4597  010030  EC08  F0E5         	call	_WaitMs	;wreg free
  4598                           
  4599                           ;main.c: 209:  if (PORTBbits.RB0) {
  4600  010034  A0CB               	btfss	203,0,c	;volatile
  4601  010036  D004               	goto	l14394
  4602                           
  4603                           ;main.c: 210:   mode = UI_STATE_HOST;
  4604                           ;stkvar	_mode @ sp[(-17)+15]
  4605  010038  0EFE               	movlw	-2
  4606  01003A  6AE3               	clrf	plusw1,c
  4607  01003C  2AE3               	incf	plusw1,f,c
  4608                           
  4609                           ;main.c: 211:  } else {
  4610  01003E  D004               	goto	l14396
  4611  010040                     l14394:
  4612                           
  4613                           ;main.c: 212:   mode = UI_STATE_LOG;
  4614                           ;stkvar	_mode @ sp[(-17)+15]
  4615  010040  0EFE               	movlw	-2
  4616  010042  6AE3               	clrf	plusw1,c
  4617  010044  80E3               	bsf	plusw1,0,c
  4618  010046  82E3               	bsf	plusw1,1,c	;indir
  4619  010048                     l14396:
  4620                           
  4621                           ;main.c: 215:  if (mode == UI_STATE_HOST) {
  4622                           ;stkvar	_mode @ sp[(-17)+15]
  4623  010048  0EFE               	movlw	-2
  4624  01004A  04E3               	decf	plusw1,w,c
  4625  01004C  A4D8               	btfss	status,2,c
  4626  01004E  D007               	goto	l1437
  4627                           
  4628                           ;main.c: 216:   do { LATDbits.LATD0 = 1; } while(0);
  4629  010050  80BD               	bsf	189,0,c	;volatile
  4630                           
  4631                           ;main.c: 217:   V.mode_pwm = 70;
  4632  010052  0E00               	movlw	0
  4633  010054  0101               	movlb	1	; () banked
  4634  010056  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4635  010058  0E46               	movlw	70
  4636  01005A  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4637                           
  4638                           ;main.c: 218:  } else {
  4639  01005C  D004               	goto	l14400
  4640  01005E                     l1437:
  4641  01005E  90BD               	bcf	189,0,c	;volatile
  4642                           
  4643                           ;main.c: 220:   V.mode_pwm = 0;
  4644  010060  0101               	movlb	1	; () banked
  4645  010062  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4646  010064  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4647  010066                     l14400:
  4648                           
  4649                           ; BSR set to: 1
  4650                           ;main.c: 222:  mode_lamp_dim(V.mode_pwm);
  4651  010066  0060  F673  FFE6   	movff	_V+149,postinc1
  4652  01006C  0060  F677  FFE6   	movff	_V+150,postinc1
  4653  010072  ECDF  F0E8         	call	_mode_lamp_dim	;wreg free
  4654  010076  D3A4               	goto	l14550
  4655  010078                     l14402:
  4656                           
  4657                           ; BSR set to: 1
  4658                           ;main.c: 230:    init_port_dma();
  4659  010078  ECBE  F0E5         	call	_init_port_dma	;wreg free
  4660                           
  4661                           ; BSR set to: 59
  4662                           ;main.c: 232:    init_display();
  4663  01007C  EC53  F0D5         	call	_init_display	;wreg free
  4664                           
  4665                           ; BSR set to: 61
  4666                           ;main.c: 233:    eaDogM_WriteCommand(0b00001100);
  4667  010080  0E0C               	movlw	12
  4668  010082  6EE6               	movwf	postinc1,c
  4669  010084  EC5C  F0E9         	call	_eaDogM_WriteCommand	;wreg free
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;main.c: 234:    set_dac();
  4673  010088  EC68  F0D9         	call	_set_dac	;wreg free
  4674                           
  4675                           ;main.c: 238:    set_load_relay_one(1);
  4676  01008C  0E01               	movlw	1
  4677  01008E  6EE6               	movwf	postinc1,c
  4678  010090  EC3C  F0E9         	call	_set_load_relay_one	;wreg free
  4679                           
  4680                           ;main.c: 239:    set_load_relay_two(1);
  4681  010094  0E01               	movlw	1
  4682  010096  6EE6               	movwf	postinc1,c
  4683  010098  EC34  F0E9         	call	_set_load_relay_two	;wreg free
  4684                           
  4685                           ;main.c: 241:    V.ui_state = mode;
  4686                           ;stkvar	_mode @ sp[(-17)+15]
  4687  01009C  0EFE               	movlw	-2
  4688  01009E  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4689                           
  4690                           ;main.c: 242:    srand(1957);
  4691  0100A4  0EA5               	movlw	165
  4692  0100A6  6EE6               	movwf	postinc1,c
  4693  0100A8  0E07               	movlw	7
  4694  0100AA  6EE6               	movwf	postinc1,c
  4695  0100AC  EC23  F0E5         	call	_srand	;wreg free
  4696                           
  4697                           ; BSR set to: 1
  4698                           ;main.c: 243:    set_vterm(0);
  4699  0100B0  0E00               	movlw	0
  4700  0100B2  6EE6               	movwf	postinc1,c
  4701  0100B4  EC97  F0E8         	call	_set_vterm	;wreg free
  4702                           
  4703                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4704  0100B8  0E8C               	movlw	low STR_1
  4705  0100BA  6EE6               	movwf	postinc1,c
  4706  0100BC  0EFE               	movlw	high STR_1
  4707  0100BE  6EE6               	movwf	postinc1,c
  4708  0100C0  0E00               	movlw	0
  4709  0100C2  6EE6               	movwf	postinc1,c
  4710  0100C4  0E00               	movlw	0
  4711  0100C6  6EE6               	movwf	postinc1,c
  4712  0100C8  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  4713  0100CC  0060  F007  FFE6   	movff	btemp,postinc1
  4714  0100D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4715  0100D8  0E04               	movlw	4
  4716  0100DA  6EE6               	movwf	postinc1,c
  4717  0100DC  ECCE  F0D4         	call	_sprintf	;wreg free
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.21");
  4721  0100E0  0ED2               	movlw	low STR_3
  4722  0100E2  6EE6               	movwf	postinc1,c
  4723  0100E4  0EFF               	movlw	high STR_3
  4724  0100E6  6EE6               	movwf	postinc1,c
  4725  0100E8  0E62               	movlw	low STR_2
  4726  0100EA  6EE6               	movwf	postinc1,c
  4727  0100EC  0EFE               	movlw	high STR_2
  4728  0100EE  6EE6               	movwf	postinc1,c
  4729  0100F0  0E00               	movlw	0
  4730  0100F2  6EE6               	movwf	postinc1,c
  4731  0100F4  0E01               	movlw	1
  4732  0100F6  6EE6               	movwf	postinc1,c
  4733  0100F8  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  4734  0100FC  0060  F007  FFE6   	movff	btemp,postinc1
  4735  010102  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4736  010108  0E06               	movlw	6
  4737  01010A  6EE6               	movwf	postinc1,c
  4738  01010C  ECCE  F0D4         	call	_sprintf	;wreg free
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4742  010110  0EF9               	movlw	low STR_4
  4743  010112  6EE6               	movwf	postinc1,c
  4744  010114  0EFD               	movlw	high STR_4
  4745  010116  6EE6               	movwf	postinc1,c
  4746  010118  0E00               	movlw	0
  4747  01011A  6EE6               	movwf	postinc1,c
  4748  01011C  0E02               	movlw	2
  4749  01011E  6EE6               	movwf	postinc1,c
  4750  010120  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  4751  010124  0060  F007  FFE6   	movff	btemp,postinc1
  4752  01012A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4753  010130  0E04               	movlw	4
  4754  010132  6EE6               	movwf	postinc1,c
  4755  010134  ECCE  F0D4         	call	_sprintf	;wreg free
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4759  010138  0E45               	movlw	low (STR_14+1)
  4760  01013A  6EE6               	movwf	postinc1,c
  4761  01013C  0EFC               	movlw	high (STR_14+1)
  4762  01013E  6EE6               	movwf	postinc1,c
  4763  010140  0E02               	movlw	2
  4764  010142  6EE6               	movwf	postinc1,c
  4765  010144  0E00               	movlw	0
  4766  010146  6EE6               	movwf	postinc1,c
  4767  010148  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  4768  01014C  0060  F007  FFE6   	movff	btemp,postinc1
  4769  010152  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4770  010158  0E04               	movlw	4
  4771  01015A  6EE6               	movwf	postinc1,c
  4772  01015C  ECCE  F0D4         	call	_sprintf	;wreg free
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4776  010160  0E45               	movlw	low (STR_14+1)
  4777  010162  6EE6               	movwf	postinc1,c
  4778  010164  0EFC               	movlw	high (STR_14+1)
  4779  010166  6EE6               	movwf	postinc1,c
  4780  010168  0E02               	movlw	2
  4781  01016A  6EE6               	movwf	postinc1,c
  4782  01016C  0E01               	movlw	1
  4783  01016E  6EE6               	movwf	postinc1,c
  4784  010170  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  4785  010174  0060  F007  FFE6   	movff	btemp,postinc1
  4786  01017A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4787  010180  0E04               	movlw	4
  4788  010182  6EE6               	movwf	postinc1,c
  4789  010184  ECCE  F0D4         	call	_sprintf	;wreg free
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4793  010188  0E45               	movlw	low (STR_14+1)
  4794  01018A  6EE6               	movwf	postinc1,c
  4795  01018C  0EFC               	movlw	high (STR_14+1)
  4796  01018E  6EE6               	movwf	postinc1,c
  4797  010190  0E02               	movlw	2
  4798  010192  6EE6               	movwf	postinc1,c
  4799  010194  0E02               	movlw	2
  4800  010196  6EE6               	movwf	postinc1,c
  4801  010198  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  4802  01019C  0060  F007  FFE6   	movff	btemp,postinc1
  4803  0101A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4804  0101A8  0E04               	movlw	4
  4805  0101AA  6EE6               	movwf	postinc1,c
  4806  0101AC  ECCE  F0D4         	call	_sprintf	;wreg free
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;main.c: 250:    update_lcd(0);
  4810  0101B0  0E00               	movlw	0
  4811  0101B2  6EE6               	movwf	postinc1,c
  4812  0101B4  EC46  F0D4         	call	_update_lcd	;wreg free
  4813                           
  4814                           ;main.c: 251:    WaitMs(1000);
  4815  0101B8  0EE8               	movlw	232
  4816  0101BA  6EE6               	movwf	postinc1,c
  4817  0101BC  0E03               	movlw	3
  4818  0101BE  6EE6               	movwf	postinc1,c
  4819  0101C0  EC08  F0E5         	call	_WaitMs	;wreg free
  4820                           
  4821                           ;main.c: 252:    StartTimer(TMR_DISPLAY, 250);
  4822  0101C4  0EFA               	movlw	250
  4823  0101C6  6EE6               	movwf	postinc1,c
  4824  0101C8  0E00               	movlw	0
  4825  0101CA  6EE6               	movwf	postinc1,c
  4826  0101CC  0E0A               	movlw	10
  4827  0101CE  6EE6               	movwf	postinc1,c
  4828  0101D0  EC14  F0E4         	call	_StartTimer	;wreg free
  4829                           
  4830                           ;main.c: 253:    StartTimer(TMR_ADC, 200);
  4831  0101D4  0EC8               	movlw	200
  4832  0101D6  6EE6               	movwf	postinc1,c
  4833  0101D8  0E00               	movlw	0
  4834  0101DA  6EE6               	movwf	postinc1,c
  4835  0101DC  0E01               	movlw	1
  4836  0101DE  6EE6               	movwf	postinc1,c
  4837  0101E0  EC14  F0E4         	call	_StartTimer	;wreg free
  4838                           
  4839                           ;main.c: 254:    StartTimer(TMR_INFO, 3000);
  4840  0101E4  0EB8               	movlw	184
  4841  0101E6  6EE6               	movwf	postinc1,c
  4842  0101E8  0E0B               	movlw	11
  4843  0101EA  6EE6               	movwf	postinc1,c
  4844  0101EC  0E07               	movlw	7
  4845  0101EE  6EE6               	movwf	postinc1,c
  4846  0101F0  EC14  F0E4         	call	_StartTimer	;wreg free
  4847                           
  4848                           ;main.c: 255:    StartTimer(TMR_FLIPPER, 1500);
  4849  0101F4  0EDC               	movlw	220
  4850  0101F6  6EE6               	movwf	postinc1,c
  4851  0101F8  0E05               	movlw	5
  4852  0101FA  6EE6               	movwf	postinc1,c
  4853  0101FC  0E0B               	movlw	11
  4854  0101FE  6EE6               	movwf	postinc1,c
  4855  010200  EC14  F0E4         	call	_StartTimer	;wreg free
  4856                           
  4857                           ;main.c: 256:    StartTimer(TMR_HELPDIS, 3000);
  4858  010204  0EB8               	movlw	184
  4859  010206  6EE6               	movwf	postinc1,c
  4860  010208  0E0B               	movlw	11
  4861  01020A  6EE6               	movwf	postinc1,c
  4862  01020C  0E09               	movlw	9
  4863  01020E  6EE6               	movwf	postinc1,c
  4864  010210  EC14  F0E4         	call	_StartTimer	;wreg free
  4865                           
  4866                           ;main.c: 258:    start_adc_scan();
  4867  010214  EC80  F0E0         	call	_start_adc_scan	;wreg free
  4868                           
  4869                           ;main.c: 259:    start_switch_handler();
  4870  010218  EC59  F0E8         	call	_start_switch_handler	;wreg free
  4871                           
  4872                           ; BSR set to: 57
  4873                           ;main.c: 260:    WaitMs(1000);
  4874  01021C  0EE8               	movlw	232
  4875  01021E  6EE6               	movwf	postinc1,c
  4876  010220  0E03               	movlw	3
  4877  010222  6EE6               	movwf	postinc1,c
  4878  010224  EC08  F0E5         	call	_WaitMs	;wreg free
  4879                           
  4880                           ;main.c: 265:    if (read_cal_data()) {
  4881  010228  EC14  F0C6         	call	_read_cal_data	;wreg free
  4882  01022C  5001               	movf	btemp^0,w,c
  4883  01022E  B4D8               	btfsc	status,2,c
  4884  010230  D01F               	goto	l14460
  4885                           
  4886                           ;main.c: 266:     update_cal_data();
  4887  010232  ECCB  F0E1         	call	_update_cal_data	;wreg free
  4888                           
  4889                           ; BSR set to: 2
  4890                           ;main.c: 267:     update_hist_data(1, &C.hist[0]);
  4891  010236  0EB8               	movlw	low (_C+185)
  4892  010238  6EE6               	movwf	postinc1,c
  4893  01023A  0E09               	movlw	high (_C+185)
  4894  01023C  6EE6               	movwf	postinc1,c
  4895  01023E  0E01               	movlw	1
  4896  010240  6EE6               	movwf	postinc1,c
  4897  010242  EC43  F0DF         	call	_update_hist_data	;wreg free
  4898                           
  4899                           ;main.c: 268:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  4900  010246  0EE0               	movlw	low STR_8
  4901  010248  6EE6               	movwf	postinc1,c
  4902  01024A  0EFE               	movlw	high STR_8
  4903  01024C  6EE6               	movwf	postinc1,c
  4904  01024E  0E00               	movlw	0
  4905  010250  6EE6               	movwf	postinc1,c
  4906  010252  0E02               	movlw	2
  4907  010254  6EE6               	movwf	postinc1,c
  4908  010256  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  4909  01025A  0060  F007  FFE6   	movff	btemp,postinc1
  4910  010260  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4911  010266  0E04               	movlw	4
  4912  010268  6EE6               	movwf	postinc1,c
  4913  01026A  ECCE  F0D4         	call	_sprintf	;wreg free
  4914                           
  4915                           ;main.c: 269:    } else {
  4916  01026E  D014               	goto	l1443
  4917  010270                     l14460:
  4918                           
  4919                           ;main.c: 270:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  4920  010270  0E34               	movlw	low STR_9
  4921  010272  6EE6               	movwf	postinc1,c
  4922  010274  0EFF               	movlw	high STR_9
  4923  010276  6EE6               	movwf	postinc1,c
  4924  010278  0E00               	movlw	0
  4925  01027A  6EE6               	movwf	postinc1,c
  4926  01027C  0E02               	movlw	2
  4927  01027E  6EE6               	movwf	postinc1,c
  4928  010280  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  4929  010284  0060  F007  FFE6   	movff	btemp,postinc1
  4930  01028A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4931  010290  0E04               	movlw	4
  4932  010292  6EE6               	movwf	postinc1,c
  4933  010294  ECCE  F0D4         	call	_sprintf	;wreg free
  4934  010298                     l1443:
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;main.c: 272:    update_lcd(0);
  4938  010298  0E00               	movlw	0
  4939  01029A  6EE6               	movwf	postinc1,c
  4940  01029C  EC46  F0D4         	call	_update_lcd	;wreg free
  4941                           
  4942                           ;main.c: 273:    WaitMs(2000);
  4943  0102A0  0ED0               	movlw	208
  4944  0102A2  6EE6               	movwf	postinc1,c
  4945  0102A4  0E07               	movlw	7
  4946  0102A6  6EE6               	movwf	postinc1,c
  4947  0102A8  EC08  F0E5         	call	_WaitMs	;wreg free
  4948                           
  4949                           ;main.c: 275:    i_ror = 1;
  4950                           ;stkvar	_i_ror @ sp[(-17)+16]
  4951  0102AC  0EFF               	movlw	-1
  4952  0102AE  6AE3               	clrf	plusw1,c
  4953  0102B0  2AE3               	incf	plusw1,f,c
  4954  0102B2                     l14466:
  4955                           
  4956                           ;main.c: 277:     calc_ror_data();
  4957  0102B2  EC72  F0C9         	call	_calc_ror_data	;wreg free
  4958                           
  4959                           ;main.c: 278:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4960  0102B6  0E00               	movlw	0
  4961  0102B8  6EE6               	movwf	postinc1,c
  4962  0102BA  0E04               	movlw	4
  4963  0102BC  6EE6               	movwf	postinc1,c
  4964  0102BE  EC28  F0AA         	call	_conv_raw_result	;wreg free
  4965  0102C2  0060  F007  FFE6   	movff	btemp,postinc1
  4966  0102C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4967  0102CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4968  0102D4  0060  F013  FFE6   	movff	btemp+3,postinc1
  4969  0102DA  0EE4               	movlw	low STR_10
  4970  0102DC  6EE6               	movwf	postinc1,c
  4971  0102DE  0EFD               	movlw	high STR_10
  4972  0102E0  6EE6               	movwf	postinc1,c
  4973  0102E2  0E00               	movlw	0
  4974  0102E4  6EE6               	movwf	postinc1,c
  4975  0102E6  0E01               	movlw	1
  4976  0102E8  6EE6               	movwf	postinc1,c
  4977  0102EA  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  4978  0102EE  0060  F007  FFE6   	movff	btemp,postinc1
  4979  0102F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4980  0102FA  0E08               	movlw	8
  4981  0102FC  6EE6               	movwf	postinc1,c
  4982  0102FE  ECCE  F0D4         	call	_sprintf	;wreg free
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;main.c: 279:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4986  010302  EE22  F16B         	lfsr	2,_C+108	;volatile
  4987  010306  006F FF7B FFE6     	movff	postinc2,postinc1
  4988  01030C  006F FF7B FFE6     	movff	postinc2,postinc1
  4989  010312  006F FF7B FFE6     	movff	postinc2,postinc1
  4990  010318  006F FF7B FFE6     	movff	postinc2,postinc1
  4991                           
  4992                           ;stkvar	_i_ror @ sp[(-21)+16]
  4993  01031E  0EFB               	movlw	-5
  4994  010320  50E3               	movf	plusw1,w,c
  4995  010322  6EE6               	movwf	postinc1,c
  4996  010324  0E00               	movlw	0
  4997  010326  6EE6               	movwf	postinc1,c
  4998  010328  0E00               	movlw	0
  4999  01032A  6EE6               	movwf	postinc1,c
  5000  01032C  0E05               	movlw	5
  5001  01032E  6EE6               	movwf	postinc1,c
  5002  010330  ECC8  F0D5         	call	_spinners	;wreg free
  5003  010334  5001               	movf	btemp^0,w,c
  5004  010336  6EE6               	movwf	postinc1,c
  5005  010338  0E00               	movlw	0
  5006  01033A  6EE6               	movwf	postinc1,c
  5007  01033C  0E9F               	movlw	low STR_11
  5008  01033E  6EE6               	movwf	postinc1,c
  5009  010340  0EFB               	movlw	high STR_11
  5010  010342  6EE6               	movwf	postinc1,c
  5011  010344  0E00               	movlw	0
  5012  010346  6EE6               	movwf	postinc1,c
  5013  010348  0E02               	movlw	2
  5014  01034A  6EE6               	movwf	postinc1,c
  5015  01034C  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5016  010350  0060  F007  FFE6   	movff	btemp,postinc1
  5017  010356  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5018  01035C  0E0C               	movlw	12
  5019  01035E  6EE6               	movwf	postinc1,c
  5020  010360  ECCE  F0D4         	call	_sprintf	;wreg free
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;main.c: 280:     update_lcd(0);
  5024  010364  0E00               	movlw	0
  5025  010366  6EE6               	movwf	postinc1,c
  5026  010368  EC46  F0D4         	call	_update_lcd	;wreg free
  5027                           
  5028                           ;main.c: 281:     clear_adc_scan();
  5029  01036C  ECB9  F0E9         	call	_clear_adc_scan	;wreg free
  5030                           
  5031                           ; BSR set to: 2
  5032                           ;main.c: 282:     start_adc_scan();
  5033  010370  EC80  F0E0         	call	_start_adc_scan	;wreg free
  5034                           
  5035                           ;main.c: 283:     WaitMs(2000);
  5036  010374  0ED0               	movlw	208
  5037  010376  6EE6               	movwf	postinc1,c
  5038  010378  0E07               	movlw	7
  5039  01037A  6EE6               	movwf	postinc1,c
  5040  01037C  EC08  F0E5         	call	_WaitMs	;wreg free
  5041                           
  5042                           ;main.c: 286:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5043                           ;stkvar	_i_ror @ sp[(-17)+16]
  5044  010380  0EFF               	movlw	-1
  5045  010382  006F FF8C  F00C    	movff	plusw1,btemp+11
  5046  010388  2A0C               	incf	(btemp+11)^0,f,c
  5047  01038A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5048  010390  060C               	decf	(btemp+11)^0,f,c
  5049  010392  0E1E               	movlw	30
  5050  010394  600C               	cpfslt	(btemp+11)^0,c
  5051  010396  D01A               	goto	u13800
  5052  010398  EE22  F16B         	lfsr	2,_C+108	;volatile
  5053  01039C  006F FF7B FFE6     	movff	postinc2,postinc1
  5054  0103A2  006F FF7B FFE6     	movff	postinc2,postinc1
  5055  0103A8  006F FF7B FFE6     	movff	postinc2,postinc1
  5056  0103AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5057  0103B4  0E42               	movlw	66
  5058  0103B6  6EE6               	movwf	postinc1,c
  5059  0103B8  0E60               	movlw	96
  5060  0103BA  6EE6               	movwf	postinc1,c
  5061  0103BC  0E65               	movlw	101
  5062  0103BE  6EE6               	movwf	postinc1,c
  5063  0103C0  0E3C               	movlw	60
  5064  0103C2  6EE6               	movwf	postinc1,c
  5065  0103C4  EC67  F0CC         	call	___flge	;wreg free
  5066  0103C8  A001               	btfss	btemp& (0+255),0,c
  5067  0103CA  D773               	goto	l14466
  5068  0103CC                     u13800:
  5069                           
  5070                           ;main.c: 288:    static_soc();
  5071  0103CC  EC44  F0E1         	call	_static_soc	;wreg free
  5072                           
  5073                           ;main.c: 289:    init_bsoc();
  5074  0103D0  ECB6  F0C0         	call	_init_bsoc	;wreg free
  5075                           
  5076                           ;main.c: 290:    set_load_relay_one(0);
  5077  0103D4  0E00               	movlw	0
  5078  0103D6  6EE6               	movwf	postinc1,c
  5079  0103D8  EC3C  F0E9         	call	_set_load_relay_one	;wreg free
  5080                           
  5081                           ;main.c: 291:    set_load_relay_two(0);
  5082  0103DC  0E00               	movlw	0
  5083  0103DE  6EE6               	movwf	postinc1,c
  5084  0103E0  EC34  F0E9         	call	_set_load_relay_two	;wreg free
  5085                           
  5086                           ;main.c: 292:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  5087  0103E4  EE22  F1B5         	lfsr	2,_C+182	;volatile
  5088  0103E8  006F FF78  F00B    	movff	postinc2,btemp+10
  5089  0103EE  006F FF74  F00C    	movff	postdec2,btemp+11
  5090  0103F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5091  0103FA  0060  F033  FFE6   	movff	btemp+11,postinc1
  5092  010400  0E70               	movlw	low STR_12
  5093  010402  6EE6               	movwf	postinc1,c
  5094  010404  0EFC               	movlw	high STR_12
  5095  010406  6EE6               	movwf	postinc1,c
  5096  010408  0E00               	movlw	0
  5097  01040A  6EE6               	movwf	postinc1,c
  5098  01040C  0E00               	movlw	0
  5099  01040E  6EE6               	movwf	postinc1,c
  5100  010410  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5101  010414  0060  F007  FFE6   	movff	btemp,postinc1
  5102  01041A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5103  010420  0E06               	movlw	6
  5104  010422  6EE6               	movwf	postinc1,c
  5105  010424  ECCE  F0D4         	call	_sprintf	;wreg free
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;main.c: 293:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  5109  010428  EE22  F18F         	lfsr	2,_C+144	;volatile
  5110  01042C  006F FF7B FFE6     	movff	postinc2,postinc1
  5111  010432  006F FF7B FFE6     	movff	postinc2,postinc1
  5112  010438  006F FF7B FFE6     	movff	postinc2,postinc1
  5113  01043E  006F FF7B FFE6     	movff	postinc2,postinc1
  5114  010444  0E4C               	movlw	low STR_13
  5115  010446  6EE6               	movwf	postinc1,c
  5116  010448  0EFD               	movlw	high STR_13
  5117  01044A  6EE6               	movwf	postinc1,c
  5118  01044C  0E00               	movlw	0
  5119  01044E  6EE6               	movwf	postinc1,c
  5120  010450  0E01               	movlw	1
  5121  010452  6EE6               	movwf	postinc1,c
  5122  010454  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5123  010458  0060  F007  FFE6   	movff	btemp,postinc1
  5124  01045E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5125  010464  0E08               	movlw	8
  5126  010466  6EE6               	movwf	postinc1,c
  5127  010468  ECCE  F0D4         	call	_sprintf	;wreg free
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;main.c: 294:    sprintf(get_vterm_ptr(2, 0), "                     ");
  5131  01046C  0E44               	movlw	low STR_14
  5132  01046E  6EE6               	movwf	postinc1,c
  5133  010470  0EFC               	movlw	high STR_14
  5134  010472  6EE6               	movwf	postinc1,c
  5135  010474  0E00               	movlw	0
  5136  010476  6EE6               	movwf	postinc1,c
  5137  010478  0E02               	movlw	2
  5138  01047A  6EE6               	movwf	postinc1,c
  5139  01047C  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5140  010480  0060  F007  FFE6   	movff	btemp,postinc1
  5141  010486  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5142  01048C  0E04               	movlw	4
  5143  01048E  6EE6               	movwf	postinc1,c
  5144  010490  ECCE  F0D4         	call	_sprintf	;wreg free
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;main.c: 295:    update_lcd(0);
  5148  010494  0E00               	movlw	0
  5149  010496  6EE6               	movwf	postinc1,c
  5150  010498  EC46  F0D4         	call	_update_lcd	;wreg free
  5151                           
  5152                           ;main.c: 296:    WaitMs(2000);
  5153  01049C  0ED0               	movlw	208
  5154  01049E  6EE6               	movwf	postinc1,c
  5155  0104A0  0E07               	movlw	7
  5156  0104A2  6EE6               	movwf	postinc1,c
  5157  0104A4  EC08  F0E5         	call	_WaitMs	;wreg free
  5158                           
  5159                           ;main.c: 297:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  5160  0104A8  0E0E               	movlw	low STR_15
  5161  0104AA  6EE6               	movwf	postinc1,c
  5162  0104AC  0EFE               	movlw	high STR_15
  5163  0104AE  6EE6               	movwf	postinc1,c
  5164  0104B0  0E00               	movlw	0
  5165  0104B2  6EE6               	movwf	postinc1,c
  5166  0104B4  0E00               	movlw	0
  5167  0104B6  6EE6               	movwf	postinc1,c
  5168  0104B8  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5169  0104BC  0060  F007  FFE6   	movff	btemp,postinc1
  5170  0104C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5171  0104C8  0E04               	movlw	4
  5172  0104CA  6EE6               	movwf	postinc1,c
  5173  0104CC  ECCE  F0D4         	call	_sprintf	;wreg free
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;main.c: 298:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  5177  0104D0  0E23               	movlw	low STR_16
  5178  0104D2  6EE6               	movwf	postinc1,c
  5179  0104D4  0EFE               	movlw	high STR_16
  5180  0104D6  6EE6               	movwf	postinc1,c
  5181  0104D8  0E00               	movlw	0
  5182  0104DA  6EE6               	movwf	postinc1,c
  5183  0104DC  0E01               	movlw	1
  5184  0104DE  6EE6               	movwf	postinc1,c
  5185  0104E0  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5186  0104E4  0060  F007  FFE6   	movff	btemp,postinc1
  5187  0104EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5188  0104F0  0E04               	movlw	4
  5189  0104F2  6EE6               	movwf	postinc1,c
  5190  0104F4  ECCE  F0D4         	call	_sprintf	;wreg free
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;main.c: 299:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  5194  0104F8  0EF5               	movlw	low STR_17
  5195  0104FA  6EE6               	movwf	postinc1,c
  5196  0104FC  0EFE               	movlw	high STR_17
  5197  0104FE  6EE6               	movwf	postinc1,c
  5198  010500  0E00               	movlw	0
  5199  010502  6EE6               	movwf	postinc1,c
  5200  010504  0E02               	movlw	2
  5201  010506  6EE6               	movwf	postinc1,c
  5202  010508  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5203  01050C  0060  F007  FFE6   	movff	btemp,postinc1
  5204  010512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5205  010518  0E04               	movlw	4
  5206  01051A  6EE6               	movwf	postinc1,c
  5207  01051C  ECCE  F0D4         	call	_sprintf	;wreg free
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;main.c: 300:    update_lcd(0);
  5211  010520  0E00               	movlw	0
  5212  010522  6EE6               	movwf	postinc1,c
  5213  010524  EC46  F0D4         	call	_update_lcd	;wreg free
  5214                           
  5215                           ;main.c: 301:    uint16_t i_esr = 1;
  5216  010528  0E01               	movlw	1
  5217  01052A  6E0B               	movwf	(btemp+10)^0,c
  5218  01052C  0E00               	movlw	0
  5219  01052E  6E0C               	movwf	(btemp+11)^0,c
  5220                           
  5221                           ;stkvar	_i_esr @ sp[(-17)+8]
  5222  010530  0EF7               	movlw	-9
  5223  010532  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5224  010538  0EF8               	movlw	-8
  5225  01053A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5226                           
  5227                           ;main.c: 303:    float esr_temp;;main.c: 304:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5228  010540  D06D               	goto	l14526
  5229  010542                     l14514:
  5230                           
  5231                           ;main.c: 305:     WaitMs(110);
  5232  010542  0E6E               	movlw	110
  5233  010544  6EE6               	movwf	postinc1,c
  5234  010546  0E00               	movlw	0
  5235  010548  6EE6               	movwf	postinc1,c
  5236  01054A  EC08  F0E5         	call	_WaitMs	;wreg free
  5237                           
  5238                           ;main.c: 306:     shape = (uint8_t) fabsf(esr_temp);
  5239                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5240  01054E  0EF3               	movlw	-13
  5241  010550  006F FF8F FFE6     	movff	plusw1,postinc1
  5242  010556  006F FF8F FFE6     	movff	plusw1,postinc1
  5243  01055C  006F FF8F FFE6     	movff	plusw1,postinc1
  5244  010562  006F FF8F FFE6     	movff	plusw1,postinc1
  5245  010568  ECC3  F0D9         	call	_fabsf	;wreg free
  5246  01056C  0060  F007  FFE6   	movff	btemp,postinc1
  5247  010572  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5248  010578  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5249  01057E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5250  010584  ECAE  F0CB         	call	___fltol	;wreg free
  5251  010588  0060  F004  F00C   	movff	btemp,btemp+11
  5252                           
  5253                           ;stkvar	_shape @ sp[(-17)+10]
  5254  01058E  0EF9               	movlw	-7
  5255  010590  0060  F033  FFE3   	movff	btemp+11,plusw1
  5256                           
  5257                           ;main.c: 307:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  5258  010596  0E00               	movlw	0
  5259  010598  6EE6               	movwf	postinc1,c
  5260                           
  5261                           ;stkvar	_shape @ sp[(-18)+10]
  5262  01059A  0EF8               	movlw	-8
  5263  01059C  50E3               	movf	plusw1,w,c
  5264  01059E  6EE6               	movwf	postinc1,c
  5265  0105A0  ECC8  F0D5         	call	_spinners	;wreg free
  5266  0105A4  5001               	movf	btemp^0,w,c
  5267  0105A6  6EE6               	movwf	postinc1,c
  5268  0105A8  0E00               	movlw	0
  5269  0105AA  6EE6               	movwf	postinc1,c
  5270  0105AC  0E00               	movlw	0
  5271  0105AE  6EE6               	movwf	postinc1,c
  5272  0105B0  0E00               	movlw	0
  5273  0105B2  6EE6               	movwf	postinc1,c
  5274  0105B4  ECC8  F0D5         	call	_spinners	;wreg free
  5275  0105B8  5001               	movf	btemp^0,w,c
  5276  0105BA  6EE6               	movwf	postinc1,c
  5277  0105BC  0E00               	movlw	0
  5278  0105BE  6EE6               	movwf	postinc1,c
  5279  0105C0  0EB6               	movlw	low STR_18
  5280  0105C2  6EE6               	movwf	postinc1,c
  5281  0105C4  0EFE               	movlw	high STR_18
  5282  0105C6  6EE6               	movwf	postinc1,c
  5283  0105C8  0E00               	movlw	0
  5284  0105CA  6EE6               	movwf	postinc1,c
  5285  0105CC  0E02               	movlw	2
  5286  0105CE  6EE6               	movwf	postinc1,c
  5287  0105D0  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5288  0105D4  0060  F007  FFE6   	movff	btemp,postinc1
  5289  0105DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5290  0105E0  0E08               	movlw	8
  5291  0105E2  6EE6               	movwf	postinc1,c
  5292  0105E4  ECCE  F0D4         	call	_sprintf	;wreg free
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;main.c: 308:     update_lcd(0);
  5296  0105E8  0E00               	movlw	0
  5297  0105EA  6EE6               	movwf	postinc1,c
  5298  0105EC  EC46  F0D4         	call	_update_lcd	;wreg free
  5299                           
  5300                           ;main.c: 310:     if (i_esr++ > 512)
  5301                           ;stkvar	_i_esr @ sp[(-17)+8]
  5302  0105F0  50E1               	movf	fsr1l,w,c
  5303  0105F2  0FF7               	addlw	-9
  5304  0105F4  6ED9               	movwf	fsr2l,c
  5305  0105F6  50E2               	movf	fsr1h,w,c
  5306  0105F8  6EDA               	movwf	fsr2h,c
  5307  0105FA  0EFF               	movlw	255
  5308  0105FC  22DA               	addwfc	fsr2h,f,c
  5309  0105FE  006F FF7C  F00B    	movff	indf2,btemp+10
  5310  010604  0E01               	movlw	1
  5311  010606  26DE               	addwf	postinc2,f,c
  5312  010608  006F FF7C  F00C    	movff	indf2,btemp+11
  5313  01060E  0E00               	movlw	0
  5314  010610  22DD               	addwfc	postdec2,f,c
  5315  010612  040B               	decf	(btemp+10)^0,w,c
  5316  010614  0E02               	movlw	2
  5317  010616  580C               	subwfb	(btemp+11)^0,w,c
  5318  010618  B0D8               	btfsc	status,0,c
  5319  01061A  D017               	goto	u13820
  5320  01061C                     l14526:
  5321                           
  5322                           ;main.c: 304:    while ((esr_temp = esr_check(0)) < 0.0) {
  5323  01061C  0E00               	movlw	0
  5324  01061E  6EE6               	movwf	postinc1,c
  5325  010620  EC71  F0BB         	call	_esr_check	;wreg free
  5326                           
  5327                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5328  010624  0EF3               	movlw	-13
  5329  010626  0060  F007  FFE3   	movff	btemp,plusw1
  5330  01062C  0EF4               	movlw	-12
  5331  01062E  0060  F00B  FFE3   	movff	btemp+1,plusw1
  5332  010634  0EF5               	movlw	-11
  5333  010636  0060  F00F  FFE3   	movff	btemp+2,plusw1
  5334  01063C  0EF6               	movlw	-10
  5335  01063E  0060  F013  FFE3   	movff	btemp+3,plusw1
  5336  010644  0EF6               	movlw	-10
  5337  010646  BEE3               	btfsc	plusw1,7,c
  5338  010648  D77C               	goto	l14514
  5339  01064A                     u13820:
  5340                           
  5341                           ;main.c: 313:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5342  01064A  EE22  F187         	lfsr	2,_C+136	;volatile
  5343  01064E  006F FF7B FFE6     	movff	postinc2,postinc1
  5344  010654  006F FF7B FFE6     	movff	postinc2,postinc1
  5345  01065A  006F FF7B FFE6     	movff	postinc2,postinc1
  5346  010660  006F FF7B FFE6     	movff	postinc2,postinc1
  5347  010666  0E5A               	movlw	low STR_19
  5348  010668  6EE6               	movwf	postinc1,c
  5349  01066A  0EFC               	movlw	high STR_19
  5350  01066C  6EE6               	movwf	postinc1,c
  5351  01066E  0E00               	movlw	0
  5352  010670  6EE6               	movwf	postinc1,c
  5353  010672  0E00               	movlw	0
  5354  010674  6EE6               	movwf	postinc1,c
  5355  010676  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5356  01067A  0060  F007  FFE6   	movff	btemp,postinc1
  5357  010680  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5358  010686  0E08               	movlw	8
  5359  010688  6EE6               	movwf	postinc1,c
  5360  01068A  ECCE  F0D4         	call	_sprintf	;wreg free
  5361                           
  5362                           ;main.c: 314:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5363  01068E  EE22  F225         	lfsr	2,_C+294	;volatile
  5364  010692  006F FF7B FFE6     	movff	postinc2,postinc1
  5365  010698  006F FF7B FFE6     	movff	postinc2,postinc1
  5366  01069E  006F FF7B FFE6     	movff	postinc2,postinc1
  5367  0106A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5368  0106AA  EE22  F231         	lfsr	2,_C+306	;volatile
  5369  0106AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5370  0106B4  006F FF7B FFE6     	movff	postinc2,postinc1
  5371  0106BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5372  0106C0  006F FF7B FFE6     	movff	postinc2,postinc1
  5373  0106C6  0E6B               	movlw	low STR_20
  5374  0106C8  6EE6               	movwf	postinc1,c
  5375  0106CA  0EFB               	movlw	high STR_20
  5376  0106CC  6EE6               	movwf	postinc1,c
  5377  0106CE  0E00               	movlw	0
  5378  0106D0  6EE6               	movwf	postinc1,c
  5379  0106D2  0E01               	movlw	1
  5380  0106D4  6EE6               	movwf	postinc1,c
  5381  0106D6  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5382  0106DA  0060  F007  FFE6   	movff	btemp,postinc1
  5383  0106E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5384  0106E6  0E0C               	movlw	12
  5385  0106E8  6EE6               	movwf	postinc1,c
  5386  0106EA  ECCE  F0D4         	call	_sprintf	;wreg free
  5387                           
  5388                           ;main.c: 315:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5389  0106EE  EE22  F229         	lfsr	2,_C+298	;volatile
  5390  0106F2  006F FF7B FFE6     	movff	postinc2,postinc1
  5391  0106F8  006F FF7B FFE6     	movff	postinc2,postinc1
  5392  0106FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5393  010704  006F FF7B FFE6     	movff	postinc2,postinc1
  5394  01070A  EE22  F235         	lfsr	2,_C+310	;volatile
  5395  01070E  006F FF7B FFE6     	movff	postinc2,postinc1
  5396  010714  006F FF7B FFE6     	movff	postinc2,postinc1
  5397  01071A  006F FF7B FFE6     	movff	postinc2,postinc1
  5398  010720  006F FF7B FFE6     	movff	postinc2,postinc1
  5399  010726  0E85               	movlw	low STR_21
  5400  010728  6EE6               	movwf	postinc1,c
  5401  01072A  0EFB               	movlw	high STR_21
  5402  01072C  6EE6               	movwf	postinc1,c
  5403  01072E  0E00               	movlw	0
  5404  010730  6EE6               	movwf	postinc1,c
  5405  010732  0E02               	movlw	2
  5406  010734  6EE6               	movwf	postinc1,c
  5407  010736  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5408  01073A  0060  F007  FFE6   	movff	btemp,postinc1
  5409  010740  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5410  010746  0E0C               	movlw	12
  5411  010748  6EE6               	movwf	postinc1,c
  5412  01074A  ECCE  F0D4         	call	_sprintf	;wreg free
  5413                           
  5414                           ;main.c: 316:    update_lcd(0);
  5415  01074E  0E00               	movlw	0
  5416  010750  6EE6               	movwf	postinc1,c
  5417  010752  EC46  F0D4         	call	_update_lcd	;wreg free
  5418                           
  5419                           ;main.c: 317:    WaitMs(4000);
  5420  010756  0EA0               	movlw	160
  5421  010758  6EE6               	movwf	postinc1,c
  5422  01075A  0E0F               	movlw	15
  5423  01075C  6EE6               	movwf	postinc1,c
  5424  01075E  EC08  F0E5         	call	_WaitMs	;wreg free
  5425                           
  5426                           ;main.c: 318:    V.sensor_set = get_switch(SCALIB);
  5427  010762  0E04               	movlw	4
  5428  010764  6EE6               	movwf	postinc1,c
  5429  010766  EC35  F0E6         	call	_get_switch	;wreg free
  5430  01076A  5001               	movf	btemp^0,w,c
  5431  01076C  B4D8               	btfsc	status,2,c
  5432  01076E  D002               	goto	u13830
  5433  010770  0E01               	movlw	1
  5434  010772  D001               	goto	u13840
  5435  010774                     u13830:
  5436  010774  0E00               	movlw	0
  5437  010776                     u13840:
  5438  010776  0101               	movlb	1	; () banked
  5439  010778  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  5440                           
  5441                           ; BSR set to: 1
  5442                           ;main.c: 319:    WaitMs(1000);
  5443  01077A  0EE8               	movlw	232
  5444  01077C  6EE6               	movwf	postinc1,c
  5445  01077E  0E03               	movlw	3
  5446  010780  6EE6               	movwf	postinc1,c
  5447  010782  EC08  F0E5         	call	_WaitMs	;wreg free
  5448                           
  5449                           ;main.c: 320:    if (V.sensor_set && get_switch(SCALIB)) {
  5450  010786  0101               	movlb	1	; () banked
  5451  010788  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
  5452  01078A  B4D8               	btfsc	status,2,c
  5453  01078C  D00F               	goto	l14544
  5454                           
  5455                           ; BSR set to: 1
  5456  01078E  0E04               	movlw	4
  5457  010790  6EE6               	movwf	postinc1,c
  5458  010792  EC35  F0E6         	call	_get_switch	;wreg free
  5459  010796  5001               	movf	btemp^0,w,c
  5460  010798  B4D8               	btfsc	status,2,c
  5461  01079A  D008               	goto	l14544
  5462                           
  5463                           ;main.c: 321:     current_sensor_cal();
  5464  01079C  ECC6  F0AE         	call	_current_sensor_cal	;wreg free
  5465                           
  5466                           ;main.c: 322:     WaitMs(4000);
  5467  0107A0  0EA0               	movlw	160
  5468  0107A2  6EE6               	movwf	postinc1,c
  5469  0107A4  0E0F               	movlw	15
  5470  0107A6  6EE6               	movwf	postinc1,c
  5471  0107A8  EC08  F0E5         	call	_WaitMs	;wreg free
  5472  0107AC                     l14544:
  5473                           
  5474                           ;main.c: 324:    V.sensor_set = 0;
  5475  0107AC  0101               	movlb	1	; () banked
  5476  0107AE  6BB5               	clrf	(_V+174)& (0+255),b	;volatile
  5477                           
  5478                           ; BSR set to: 1
  5479                           ;main.c: 325:    V.system_stable = 1;
  5480  0107B0  0E01               	movlw	1
  5481  0107B2  6FB6               	movwf	(_V+175)& (0+255),b	;volatile
  5482                           
  5483                           ;main.c: 326:    break;
  5484  0107B4  D01C               	goto	l14552
  5485  0107B6                     l1456:
  5486                           
  5487                           ; BSR set to: 1
  5488                           ;main.c: 332:    P.SYSTEM_STABLE = 1;
  5489  0107B6  0100               	movlb	0	; () banked
  5490  0107B8  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  5491                           
  5492                           ;main.c: 333:    break;
  5493  0107BA  D019               	goto	l14552
  5494  0107BC                     l1458:
  5495                           
  5496                           ; BSR set to: 1
  5497                           ;main.c: 336:    V.ui_state = UI_STATE_INIT;
  5498  0107BC  6B07               	clrf	_V& (0+255),b	;volatile
  5499                           
  5500                           ;main.c: 337:    break;
  5501  0107BE  D017               	goto	l14552
  5502  0107C0                     l14550:
  5503  0107C0  0101               	movlb	1	; () banked
  5504  0107C2  5107               	movf	_V& (0+255),w,b	;volatile
  5505  0107C4  6E0B               	movwf	(btemp+10)^0,c
  5506  0107C6  6A0C               	clrf	(btemp+11)^0,c
  5507                           
  5508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5509                           ; Switch size 1, requested type "simple"
  5510                           ; Number of cases is 1, Range of values is 0 to 0
  5511                           ; switch strategies available:
  5512                           ; Name         Instructions Cycles
  5513                           ; simple_byte            4     3 (average)
  5514                           ;	Chosen strategy is simple_byte
  5515  0107C8  500C               	movf	(btemp+11)^0,w,c
  5516  0107CA  0A00               	xorlw	0	; case 0
  5517  0107CC  A4D8               	btfss	status,2,c
  5518  0107CE  D7F6               	goto	l1458
  5519                           
  5520                           ; BSR set to: 1
  5521                           ; Switch size 1, requested type "simple"
  5522                           ; Number of cases is 5, Range of values is 0 to 5
  5523                           ; switch strategies available:
  5524                           ; Name         Instructions Cycles
  5525                           ; simple_byte           16     9 (average)
  5526                           ;	Chosen strategy is simple_byte
  5527  0107D0  500B               	movf	(btemp+10)^0,w,c
  5528  0107D2  0A00               	xorlw	0	; case 0
  5529  0107D4  B4D8               	btfsc	status,2,c
  5530  0107D6  D450               	goto	l14402
  5531  0107D8  0A01               	xorlw	1	; case 1
  5532  0107DA  B4D8               	btfsc	status,2,c
  5533  0107DC  D008               	goto	l14552
  5534  0107DE  0A02               	xorlw	2	; case 3
  5535  0107E0  B4D8               	btfsc	status,2,c
  5536  0107E2  D005               	goto	l14552
  5537  0107E4  0A07               	xorlw	7	; case 4
  5538  0107E6  B4D8               	btfsc	status,2,c
  5539  0107E8  D7E6               	goto	l1456
  5540  0107EA  0A01               	xorlw	1	; case 5
  5541  0107EC  D7E7               	goto	l1458
  5542  0107EE                     l14552:
  5543                           
  5544                           ;main.c: 340:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5545  0107EE  0E01               	movlw	1
  5546  0107F0  6EE6               	movwf	postinc1,c
  5547  0107F2  ECA1  F0E6         	call	_TimerDone	;wreg free
  5548  0107F6  5001               	movf	btemp^0,w,c
  5549  0107F8  B4D8               	btfsc	status,2,c
  5550  0107FA  D013               	goto	l14564
  5551  0107FC  ECA2  F0E9         	call	_check_adc_scan	;wreg free
  5552  010800  5001               	movf	btemp^0,w,c
  5553  010802  B4D8               	btfsc	status,2,c
  5554  010804  D00E               	goto	l14564
  5555                           
  5556                           ;main.c: 344:    convert_adc_data();
  5557  010806  EC0C  F0D9         	call	_convert_adc_data	;wreg free
  5558                           
  5559                           ;main.c: 348:    clear_adc_scan();
  5560  01080A  ECB9  F0E9         	call	_clear_adc_scan	;wreg free
  5561                           
  5562                           ; BSR set to: 2
  5563                           ;main.c: 349:    start_adc_scan();
  5564  01080E  EC80  F0E0         	call	_start_adc_scan	;wreg free
  5565                           
  5566                           ;main.c: 350:    StartTimer(TMR_ADC, 200);
  5567  010812  0EC8               	movlw	200
  5568  010814  6EE6               	movwf	postinc1,c
  5569  010816  0E00               	movlw	0
  5570  010818  6EE6               	movwf	postinc1,c
  5571  01081A  0E01               	movlw	1
  5572  01081C  6EE6               	movwf	postinc1,c
  5573  01081E  EC14  F0E4         	call	_StartTimer	;wreg free
  5574  010822                     l14564:
  5575                           
  5576                           ;main.c: 357:   if (TimerDone(TMR_DISPLAY)) {
  5577                           
  5578                           ;main.c: 353:   if (V.ticks) {
  5579  010822  0E0A               	movlw	10
  5580  010824  6EE6               	movwf	postinc1,c
  5581  010826  ECA1  F0E6         	call	_TimerDone	;wreg free
  5582  01082A  5001               	movf	btemp^0,w,c
  5583  01082C  B4D8               	btfsc	status,2,c
  5584  01082E  EFBE  F088         	goto	l14648
  5585                           
  5586                           ;main.c: 358:    if (TimerDone(TMR_HELPDIS)) {
  5587  010832  0E09               	movlw	9
  5588  010834  6EE6               	movwf	postinc1,c
  5589  010836  ECA1  F0E6         	call	_TimerDone	;wreg free
  5590  01083A  5001               	movf	btemp^0,w,c
  5591  01083C  B4D8               	btfsc	status,2,c
  5592  01083E  D004               	goto	l14572
  5593                           
  5594                           ;main.c: 359:     set_display_info(DIS_STR);
  5595  010840  0E00               	movlw	0
  5596  010842  6EE6               	movwf	postinc1,c
  5597  010844  ECA6  F0E8         	call	_set_display_info	;wreg free
  5598  010848                     l14572:
  5599                           
  5600                           ;main.c: 361:    calc_model_data();
  5601  010848  EC00  F0B1         	call	_calc_model_data	;wreg free
  5602                           
  5603                           ; BSR set to: 57
  5604                           ;main.c: 368:     hid_display(&H);
  5605                           
  5606                           ;main.c: 363:    if (0) {
  5607  01084C  0EF1               	movlw	_H& (0+255)
  5608  01084E  6EE6               	movwf	postinc1,c
  5609  010850  EC86  F0D1         	call	_hid_display	;wreg free
  5610                           
  5611                           ;main.c: 369:     switch (H.hid_display) {
  5612  010854  EF55  F088         	goto	l14620
  5613  010858                     l1466:
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;main.c: 371:      V.calib = 0;
  5617  010858  0101               	movlb	1	; () banked
  5618  01085A  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5619                           
  5620                           ; BSR set to: 1
  5621                           ;main.c: 372:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  5622  01085C  EE22  F239         	lfsr	2,_C+314	;volatile
  5623  010860  50DF               	movf	indf2,w,c
  5624  010862  A4D8               	btfss	status,2,c
  5625  010864  D002               	goto	l14582
  5626                           
  5627                           ; BSR set to: 1
  5628  010866  0E20               	movlw	32
  5629  010868  D001               	goto	L1
  5630  01086A                     l14582:
  5631                           
  5632                           ; BSR set to: 1
  5633  01086A  0E44               	movlw	68
  5634  01086C                     L1:
  5635  01086C  6E0B               	movwf	(btemp+10)^0,c
  5636  01086E  0E00               	movlw	0
  5637  010870  6E0C               	movwf	(btemp+11)^0,c
  5638                           
  5639                           ;stkvar	_main$3989 @ sp[(-17)+2]
  5640  010872  0EF1               	movlw	-15
  5641  010874  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5642  01087A  0EF2               	movlw	-14
  5643  01087C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5644                           
  5645                           ; BSR set to: 1
  5646  010882  EE22  F17B         	lfsr	2,_C+124	;volatile
  5647  010886  006F FF7B FFE6     	movff	postinc2,postinc1
  5648  01088C  006F FF7B FFE6     	movff	postinc2,postinc1
  5649  010892  006F FF7B FFE6     	movff	postinc2,postinc1
  5650  010898  006F FF7B FFE6     	movff	postinc2,postinc1
  5651                           
  5652                           ;stkvar	_main$3989 @ sp[(-21)+2]
  5653  01089E  0EED               	movlw	-19
  5654  0108A0  006F FF8F FFE6     	movff	plusw1,postinc1
  5655  0108A6  006F FF8F FFE6     	movff	plusw1,postinc1
  5656  0108AC  0E36               	movlw	low STR_25
  5657  0108AE  6EE6               	movwf	postinc1,c
  5658  0108B0  0EFD               	movlw	high STR_25
  5659  0108B2  6EE6               	movwf	postinc1,c
  5660  0108B4  0E00               	movlw	0
  5661  0108B6  6EE6               	movwf	postinc1,c
  5662  0108B8  0E00               	movlw	0
  5663  0108BA  6EE6               	movwf	postinc1,c
  5664  0108BC  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5665  0108C0  0060  F007  FFE6   	movff	btemp,postinc1
  5666  0108C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5667  0108CC  0E0A               	movlw	10
  5668  0108CE  6EE6               	movwf	postinc1,c
  5669  0108D0  ECCE  F0D4         	call	_sprintf	;wreg free
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;main.c: 373:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5673  0108D4  EE22  F173         	lfsr	2,_C+116	;volatile
  5674  0108D8  006F FF7B FFE6     	movff	postinc2,postinc1
  5675  0108DE  006F FF7B FFE6     	movff	postinc2,postinc1
  5676  0108E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5677  0108EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5678  0108F0  0E20               	movlw	low STR_26
  5679  0108F2  6EE6               	movwf	postinc1,c
  5680  0108F4  0EFD               	movlw	high STR_26
  5681  0108F6  6EE6               	movwf	postinc1,c
  5682  0108F8  0E00               	movlw	0
  5683  0108FA  6EE6               	movwf	postinc1,c
  5684  0108FC  0E01               	movlw	1
  5685  0108FE  6EE6               	movwf	postinc1,c
  5686  010900  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5687  010904  0060  F007  FFE6   	movff	btemp,postinc1
  5688  01090A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5689  010910  0E08               	movlw	8
  5690  010912  6EE6               	movwf	postinc1,c
  5691  010914  ECCE  F0D4         	call	_sprintf	;wreg free
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;main.c: 374:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5695  010918  EE22  F177         	lfsr	2,_C+120	;volatile
  5696  01091C  006F FF7B FFE6     	movff	postinc2,postinc1
  5697  010922  006F FF7B FFE6     	movff	postinc2,postinc1
  5698  010928  006F FF7B FFE6     	movff	postinc2,postinc1
  5699  01092E  006F FF7B FFE6     	movff	postinc2,postinc1
  5700  010934  0E0A               	movlw	low STR_27
  5701  010936  6EE6               	movwf	postinc1,c
  5702  010938  0EFD               	movlw	high STR_27
  5703  01093A  6EE6               	movwf	postinc1,c
  5704  01093C  0E00               	movlw	0
  5705  01093E  6EE6               	movwf	postinc1,c
  5706  010940  0E02               	movlw	2
  5707  010942  6EE6               	movwf	postinc1,c
  5708  010944  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5709  010948  0060  F007  FFE6   	movff	btemp,postinc1
  5710  01094E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5711  010954  0E08               	movlw	8
  5712  010956  6EE6               	movwf	postinc1,c
  5713  010958  ECCE  F0D4         	call	_sprintf	;wreg free
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;main.c: 376:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5717  01095C  EE22  F239         	lfsr	2,_C+314	;volatile
  5718  010960  50DF               	movf	indf2,w,c
  5719  010962  A4D8               	btfss	status,2,c
  5720  010964  D002               	goto	l14594
  5721                           
  5722                           ; BSR set to: 0
  5723  010966  0E20               	movlw	32
  5724  010968  D001               	goto	L2
  5725  01096A                     l14594:
  5726                           
  5727                           ; BSR set to: 0
  5728  01096A  0E44               	movlw	68
  5729  01096C                     L2:
  5730  01096C  6E0B               	movwf	(btemp+10)^0,c
  5731  01096E  0E00               	movlw	0
  5732  010970  6E0C               	movwf	(btemp+11)^0,c
  5733                           
  5734                           ;stkvar	_main$3993 @ sp[(-17)+0]
  5735  010972  0EEF               	movlw	-17
  5736  010974  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5737  01097A  0EF0               	movlw	-16
  5738  01097C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5739                           
  5740                           ; BSR set to: 0
  5741  010982  EE22  F1A7         	lfsr	2,_C+168	;volatile
  5742  010986  006F FF7B FFE6     	movff	postinc2,postinc1
  5743  01098C  006F FF7B FFE6     	movff	postinc2,postinc1
  5744  010992  006F FF7B FFE6     	movff	postinc2,postinc1
  5745  010998  006F FF7B FFE6     	movff	postinc2,postinc1
  5746                           
  5747                           ;stkvar	_main$3993 @ sp[(-21)+0]
  5748  01099E  0EEB               	movlw	-21
  5749  0109A0  006F FF8F FFE6     	movff	plusw1,postinc1
  5750  0109A6  006F FF8F FFE6     	movff	plusw1,postinc1
  5751  0109AC  0EF4               	movlw	low STR_28
  5752  0109AE  6EE6               	movwf	postinc1,c
  5753  0109B0  0EFC               	movlw	high STR_28
  5754  0109B2  6EE6               	movwf	postinc1,c
  5755  0109B4  0E01               	movlw	1
  5756  0109B6  6EE6               	movwf	postinc1,c
  5757  0109B8  0E00               	movlw	0
  5758  0109BA  6EE6               	movwf	postinc1,c
  5759  0109BC  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5760  0109C0  0060  F007  FFE6   	movff	btemp,postinc1
  5761  0109C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5762  0109CC  0E0A               	movlw	10
  5763  0109CE  6EE6               	movwf	postinc1,c
  5764  0109D0  ECCE  F0D4         	call	_sprintf	;wreg free
  5765                           
  5766                           ; BSR set to: 0
  5767                           ;main.c: 377:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5768  0109D4  EE22  F1AF         	lfsr	2,_C+176	;volatile
  5769  0109D8  006F FF7B FFE6     	movff	postinc2,postinc1
  5770  0109DE  006F FF7B FFE6     	movff	postinc2,postinc1
  5771  0109E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5772  0109EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5773  0109F0  0EDE               	movlw	low STR_29
  5774  0109F2  6EE6               	movwf	postinc1,c
  5775  0109F4  0EFC               	movlw	high STR_29
  5776  0109F6  6EE6               	movwf	postinc1,c
  5777  0109F8  0E01               	movlw	1
  5778  0109FA  6EE6               	movwf	postinc1,c
  5779  0109FC  0E01               	movlw	1
  5780  0109FE  6EE6               	movwf	postinc1,c
  5781  010A00  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5782  010A04  0060  F007  FFE6   	movff	btemp,postinc1
  5783  010A0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5784  010A10  0E08               	movlw	8
  5785  010A12  6EE6               	movwf	postinc1,c
  5786  010A14  ECCE  F0D4         	call	_sprintf	;wreg free
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;main.c: 378:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5790  010A18  EE22  F1AB         	lfsr	2,_C+172	;volatile
  5791  010A1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5792  010A22  006F FF7B FFE6     	movff	postinc2,postinc1
  5793  010A28  006F FF7B FFE6     	movff	postinc2,postinc1
  5794  010A2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5795  010A34  0EC8               	movlw	low STR_30
  5796  010A36  6EE6               	movwf	postinc1,c
  5797  010A38  0EFC               	movlw	high STR_30
  5798  010A3A  6EE6               	movwf	postinc1,c
  5799  010A3C  0E01               	movlw	1
  5800  010A3E  6EE6               	movwf	postinc1,c
  5801  010A40  0E02               	movlw	2
  5802  010A42  6EE6               	movwf	postinc1,c
  5803  010A44  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5804  010A48  0060  F007  FFE6   	movff	btemp,postinc1
  5805  010A4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5806  010A54  0E08               	movlw	8
  5807  010A56  6EE6               	movwf	postinc1,c
  5808  010A58  ECCE  F0D4         	call	_sprintf	;wreg free
  5809                           
  5810                           ;main.c: 379:      break;
  5811  010A5C  D33C               	goto	l14622
  5812  010A5E                     l1476:
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;main.c: 381:      V.calib = 0;
  5816  010A5E  0101               	movlb	1	; () banked
  5817  010A60  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5818                           
  5819                           ; BSR set to: 1
  5820                           ;main.c: 382:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5821  010A62  EE22  F103         	lfsr	2,_C+4	;volatile
  5822  010A66  006F FF7B FFE6     	movff	postinc2,postinc1
  5823  010A6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5824  010A72  006F FF7B FFE6     	movff	postinc2,postinc1
  5825  010A78  006F FF7B FFE6     	movff	postinc2,postinc1
  5826  010A7E  EE22  F113         	lfsr	2,_C+20	;volatile
  5827  010A82  006F FF7B FFE6     	movff	postinc2,postinc1
  5828  010A88  006F FF7B FFE6     	movff	postinc2,postinc1
  5829  010A8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5830  010A94  006F FF7B FFE6     	movff	postinc2,postinc1
  5831  010A9A  0E8E               	movlw	low STR_31
  5832  010A9C  6EE6               	movwf	postinc1,c
  5833  010A9E  0EFD               	movlw	high STR_31
  5834  010AA0  6EE6               	movwf	postinc1,c
  5835  010AA2  0E00               	movlw	0
  5836  010AA4  6EE6               	movwf	postinc1,c
  5837  010AA6  0E00               	movlw	0
  5838  010AA8  6EE6               	movwf	postinc1,c
  5839  010AAA  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5840  010AAE  0060  F007  FFE6   	movff	btemp,postinc1
  5841  010AB4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5842  010ABA  0E0C               	movlw	12
  5843  010ABC  6EE6               	movwf	postinc1,c
  5844  010ABE  ECCE  F0D4         	call	_sprintf	;wreg free
  5845                           
  5846                           ;main.c: 383:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5847  010AC2  EE22  F0FF         	lfsr	2,_C
  5848  010AC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5849  010ACC  006F FF7B FFE6     	movff	postinc2,postinc1
  5850  010AD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5851  010AD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5852  010ADE  EE22  F10F         	lfsr	2,_C+16	;volatile
  5853  010AE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5854  010AE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5855  010AEE  006F FF7B FFE6     	movff	postinc2,postinc1
  5856  010AF4  006F FF7B FFE6     	movff	postinc2,postinc1
  5857  010AFA  0E62               	movlw	low STR_32
  5858  010AFC  6EE6               	movwf	postinc1,c
  5859  010AFE  0EFD               	movlw	high STR_32
  5860  010B00  6EE6               	movwf	postinc1,c
  5861  010B02  0E00               	movlw	0
  5862  010B04  6EE6               	movwf	postinc1,c
  5863  010B06  0E01               	movlw	1
  5864  010B08  6EE6               	movwf	postinc1,c
  5865  010B0A  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5866  010B0E  0060  F007  FFE6   	movff	btemp,postinc1
  5867  010B14  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5868  010B1A  0E0C               	movlw	12
  5869  010B1C  6EE6               	movwf	postinc1,c
  5870  010B1E  ECCE  F0D4         	call	_sprintf	;wreg free
  5871                           
  5872                           ;main.c: 384:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5873  010B22  EE22  F13F         	lfsr	2,_C+64	;volatile
  5874  010B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5875  010B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5876  010B32  006F FF7B FFE6     	movff	postinc2,postinc1
  5877  010B38  006F FF7B FFE6     	movff	postinc2,postinc1
  5878  010B3E  EE22  F107         	lfsr	2,_C+8	;volatile
  5879  010B42  006F FF7B FFE6     	movff	postinc2,postinc1
  5880  010B48  006F FF7B FFE6     	movff	postinc2,postinc1
  5881  010B4E  006F FF7B FFE6     	movff	postinc2,postinc1
  5882  010B54  006F FF7B FFE6     	movff	postinc2,postinc1
  5883  010B5A  0E78               	movlw	low STR_33
  5884  010B5C  6EE6               	movwf	postinc1,c
  5885  010B5E  0EFD               	movlw	high STR_33
  5886  010B60  6EE6               	movwf	postinc1,c
  5887  010B62  0E00               	movlw	0
  5888  010B64  6EE6               	movwf	postinc1,c
  5889  010B66  0E02               	movlw	2
  5890  010B68  6EE6               	movwf	postinc1,c
  5891  010B6A  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5892  010B6E  0060  F007  FFE6   	movff	btemp,postinc1
  5893  010B74  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5894  010B7A  0E0C               	movlw	12
  5895  010B7C  6EE6               	movwf	postinc1,c
  5896  010B7E  ECCE  F0D4         	call	_sprintf	;wreg free
  5897                           
  5898                           ;main.c: 386:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5899  010B82  EE22  F19F         	lfsr	2,_C+160	;volatile
  5900  010B86  006F FF7B FFE6     	movff	postinc2,postinc1
  5901  010B8C  006F FF7B FFE6     	movff	postinc2,postinc1
  5902  010B92  006F FF7B FFE6     	movff	postinc2,postinc1
  5903  010B98  006F FF7B FFE6     	movff	postinc2,postinc1
  5904  010B9E  0E86               	movlw	low STR_34
  5905  010BA0  6EE6               	movwf	postinc1,c
  5906  010BA2  0EFC               	movlw	high STR_34
  5907  010BA4  6EE6               	movwf	postinc1,c
  5908  010BA6  0E01               	movlw	1
  5909  010BA8  6EE6               	movwf	postinc1,c
  5910  010BAA  0E00               	movlw	0
  5911  010BAC  6EE6               	movwf	postinc1,c
  5912  010BAE  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5913  010BB2  0060  F007  FFE6   	movff	btemp,postinc1
  5914  010BB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5915  010BBE  0E08               	movlw	8
  5916  010BC0  6EE6               	movwf	postinc1,c
  5917  010BC2  ECCE  F0D4         	call	_sprintf	;wreg free
  5918                           
  5919                           ;main.c: 387:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5920  010BC6  EE22  F1A3         	lfsr	2,_C+164	;volatile
  5921  010BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  5922  010BD0  006F FF7B FFE6     	movff	postinc2,postinc1
  5923  010BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5924  010BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5925  010BE2  0E9C               	movlw	low STR_35
  5926  010BE4  6EE6               	movwf	postinc1,c
  5927  010BE6  0EFC               	movlw	high STR_35
  5928  010BE8  6EE6               	movwf	postinc1,c
  5929  010BEA  0E01               	movlw	1
  5930  010BEC  6EE6               	movwf	postinc1,c
  5931  010BEE  0E01               	movlw	1
  5932  010BF0  6EE6               	movwf	postinc1,c
  5933  010BF2  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5934  010BF6  0060  F007  FFE6   	movff	btemp,postinc1
  5935  010BFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5936  010C02  0E08               	movlw	8
  5937  010C04  6EE6               	movwf	postinc1,c
  5938  010C06  ECCE  F0D4         	call	_sprintf	;wreg free
  5939                           
  5940                           ;main.c: 388:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5941  010C0A  EE22  F1A3         	lfsr	2,_C+164	;volatile
  5942  010C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5943  010C14  006F FF7B FFE6     	movff	postinc2,postinc1
  5944  010C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5945  010C20  006F FF7B FFE6     	movff	postinc2,postinc1
  5946  010C26  EE22  F19F         	lfsr	2,_C+160	;volatile
  5947  010C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5948  010C30  006F FF7B FFE6     	movff	postinc2,postinc1
  5949  010C36  006F FF7B FFE6     	movff	postinc2,postinc1
  5950  010C3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5951  010C42  EC8D  F0A3         	call	___fladd	;wreg free
  5952  010C46  0060  F007  FFE6   	movff	btemp,postinc1
  5953  010C4C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5954  010C52  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5955  010C58  0060  F013  FFE6   	movff	btemp+3,postinc1
  5956  010C5E  0EB2               	movlw	low STR_36
  5957  010C60  6EE6               	movwf	postinc1,c
  5958  010C62  0EFC               	movlw	high STR_36
  5959  010C64  6EE6               	movwf	postinc1,c
  5960  010C66  0E01               	movlw	1
  5961  010C68  6EE6               	movwf	postinc1,c
  5962  010C6A  0E02               	movlw	2
  5963  010C6C  6EE6               	movwf	postinc1,c
  5964  010C6E  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5965  010C72  0060  F007  FFE6   	movff	btemp,postinc1
  5966  010C78  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5967  010C7E  0E08               	movlw	8
  5968  010C80  6EE6               	movwf	postinc1,c
  5969  010C82  ECCE  F0D4         	call	_sprintf	;wreg free
  5970                           
  5971                           ;main.c: 389:      break;
  5972  010C86  D227               	goto	l14622
  5973  010C88                     l1477:
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;main.c: 391:      V.calib = 0;
  5977  010C88  0101               	movlb	1	; () banked
  5978  010C8A  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5979                           
  5980                           ; BSR set to: 1
  5981                           ;main.c: 392:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5982  010C8C  EE22  F17F         	lfsr	2,_C+128	;volatile
  5983  010C90  006F FF7B FFE6     	movff	postinc2,postinc1
  5984  010C96  006F FF7B FFE6     	movff	postinc2,postinc1
  5985  010C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5986  010CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5987  010CA8  0EE8               	movlw	low STR_37
  5988  010CAA  6EE6               	movwf	postinc1,c
  5989  010CAC  0EFB               	movlw	high STR_37
  5990  010CAE  6EE6               	movwf	postinc1,c
  5991  010CB0  0E00               	movlw	0
  5992  010CB2  6EE6               	movwf	postinc1,c
  5993  010CB4  0E00               	movlw	0
  5994  010CB6  6EE6               	movwf	postinc1,c
  5995  010CB8  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  5996  010CBC  0060  F007  FFE6   	movff	btemp,postinc1
  5997  010CC2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5998  010CC8  0E08               	movlw	8
  5999  010CCA  6EE6               	movwf	postinc1,c
  6000  010CCC  ECCE  F0D4         	call	_sprintf	;wreg free
  6001                           
  6002                           ;main.c: 393:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  6003  010CD0  EE22  F193         	lfsr	2,_C+148	;volatile
  6004  010CD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6005  010CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6006  010CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  6007  010CE6  006F FF7B FFE6     	movff	postinc2,postinc1
  6008  010CEC  EE22  F18F         	lfsr	2,_C+144	;volatile
  6009  010CF0  006F FF7B FFE6     	movff	postinc2,postinc1
  6010  010CF6  006F FF7B FFE6     	movff	postinc2,postinc1
  6011  010CFC  006F FF7B FFE6     	movff	postinc2,postinc1
  6012  010D02  006F FF7B FFE6     	movff	postinc2,postinc1
  6013  010D08  0E2D               	movlw	low STR_38
  6014  010D0A  6EE6               	movwf	postinc1,c
  6015  010D0C  0EFC               	movlw	high STR_38
  6016  010D0E  6EE6               	movwf	postinc1,c
  6017  010D10  0E00               	movlw	0
  6018  010D12  6EE6               	movwf	postinc1,c
  6019  010D14  0E01               	movlw	1
  6020  010D16  6EE6               	movwf	postinc1,c
  6021  010D18  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  6022  010D1C  0060  F007  FFE6   	movff	btemp,postinc1
  6023  010D22  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6024  010D28  0E0C               	movlw	12
  6025  010D2A  6EE6               	movwf	postinc1,c
  6026  010D2C  ECCE  F0D4         	call	_sprintf	;wreg free
  6027                           
  6028                           ;main.c: 394:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6029  010D30  EE22  F10F         	lfsr	2,_C+16	;volatile
  6030  010D34  006F FF7B FFE6     	movff	postinc2,postinc1
  6031  010D3A  006F FF7B FFE6     	movff	postinc2,postinc1
  6032  010D40  006F FF7B FFE6     	movff	postinc2,postinc1
  6033  010D46  006F FF7B FFE6     	movff	postinc2,postinc1
  6034  010D4C  EE22  F1B3         	lfsr	2,_C+180	;volatile
  6035  010D50  006F FF78  F00B    	movff	postinc2,btemp+10
  6036  010D56  006F FF74  F00C    	movff	postdec2,btemp+11
  6037  010D5C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6038  010D62  0060  F033  FFE6   	movff	btemp+11,postinc1
  6039  010D68  EE22  F1B5         	lfsr	2,_C+182	;volatile
  6040  010D6C  006F FF78  F00B    	movff	postinc2,btemp+10
  6041  010D72  006F FF74  F00C    	movff	postdec2,btemp+11
  6042  010D78  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6043  010D7E  0060  F033  FFE6   	movff	btemp+11,postinc1
  6044  010D84  0E00               	movlw	0
  6045  010D86  6EE6               	movwf	postinc1,c
  6046  010D88  0E05               	movlw	5
  6047  010D8A  6EE6               	movwf	postinc1,c
  6048  010D8C  ECC8  F0D5         	call	_spinners	;wreg free
  6049  010D90  5001               	movf	btemp^0,w,c
  6050  010D92  6EE6               	movwf	postinc1,c
  6051  010D94  0E00               	movlw	0
  6052  010D96  6EE6               	movwf	postinc1,c
  6053  010D98  0E4E               	movlw	low STR_39
  6054  010D9A  6EE6               	movwf	postinc1,c
  6055  010D9C  0EFB               	movlw	high STR_39
  6056  010D9E  6EE6               	movwf	postinc1,c
  6057  010DA0  0E00               	movlw	0
  6058  010DA2  6EE6               	movwf	postinc1,c
  6059  010DA4  0E02               	movlw	2
  6060  010DA6  6EE6               	movwf	postinc1,c
  6061  010DA8  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  6062  010DAC  0060  F007  FFE6   	movff	btemp,postinc1
  6063  010DB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6064  010DB8  0E0E               	movlw	14
  6065  010DBA  6EE6               	movwf	postinc1,c
  6066  010DBC  ECCE  F0D4         	call	_sprintf	;wreg free
  6067                           
  6068                           ;main.c: 396:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  6069  010DC0  EE22  F187         	lfsr	2,_C+136	;volatile
  6070  010DC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6071  010DCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6072  010DD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6073  010DD6  006F FF7B FFE6     	movff	postinc2,postinc1
  6074  010DDC  0ED1               	movlw	low STR_40
  6075  010DDE  6EE6               	movwf	postinc1,c
  6076  010DE0  0EFB               	movlw	high STR_40
  6077  010DE2  6EE6               	movwf	postinc1,c
  6078  010DE4  0E01               	movlw	1
  6079  010DE6  6EE6               	movwf	postinc1,c
  6080  010DE8  0E00               	movlw	0
  6081  010DEA  6EE6               	movwf	postinc1,c
  6082  010DEC  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  6083  010DF0  0060  F007  FFE6   	movff	btemp,postinc1
  6084  010DF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6085  010DFC  0E08               	movlw	8
  6086  010DFE  6EE6               	movwf	postinc1,c
  6087  010E00  ECCE  F0D4         	call	_sprintf	;wreg free
  6088                           
  6089                           ;main.c: 397:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  6090  010E04  EE22  F225         	lfsr	2,_C+294	;volatile
  6091  010E08  006F FF7B FFE6     	movff	postinc2,postinc1
  6092  010E0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6093  010E14  006F FF7B FFE6     	movff	postinc2,postinc1
  6094  010E1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6095  010E20  EE22  F231         	lfsr	2,_C+306	;volatile
  6096  010E24  006F FF7B FFE6     	movff	postinc2,postinc1
  6097  010E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  6098  010E30  006F FF7B FFE6     	movff	postinc2,postinc1
  6099  010E36  006F FF7B FFE6     	movff	postinc2,postinc1
  6100  010E3C  0EFF               	movlw	low STR_41
  6101  010E3E  6EE6               	movwf	postinc1,c
  6102  010E40  0EFB               	movlw	high STR_41
  6103  010E42  6EE6               	movwf	postinc1,c
  6104  010E44  0E01               	movlw	1
  6105  010E46  6EE6               	movwf	postinc1,c
  6106  010E48  0E01               	movlw	1
  6107  010E4A  6EE6               	movwf	postinc1,c
  6108  010E4C  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  6109  010E50  0060  F007  FFE6   	movff	btemp,postinc1
  6110  010E56  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6111  010E5C  0E0C               	movlw	12
  6112  010E5E  6EE6               	movwf	postinc1,c
  6113  010E60  ECCE  F0D4         	call	_sprintf	;wreg free
  6114                           
  6115                           ;main.c: 398:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  6116  010E64  EE22  F229         	lfsr	2,_C+298	;volatile
  6117  010E68  006F FF7B FFE6     	movff	postinc2,postinc1
  6118  010E6E  006F FF7B FFE6     	movff	postinc2,postinc1
  6119  010E74  006F FF7B FFE6     	movff	postinc2,postinc1
  6120  010E7A  006F FF7B FFE6     	movff	postinc2,postinc1
  6121  010E80  EE22  F235         	lfsr	2,_C+310	;volatile
  6122  010E84  006F FF7B FFE6     	movff	postinc2,postinc1
  6123  010E8A  006F FF7B FFE6     	movff	postinc2,postinc1
  6124  010E90  006F FF7B FFE6     	movff	postinc2,postinc1
  6125  010E96  006F FF7B FFE6     	movff	postinc2,postinc1
  6126  010E9C  0E16               	movlw	low STR_42
  6127  010E9E  6EE6               	movwf	postinc1,c
  6128  010EA0  0EFC               	movlw	high STR_42
  6129  010EA2  6EE6               	movwf	postinc1,c
  6130  010EA4  0E01               	movlw	1
  6131  010EA6  6EE6               	movwf	postinc1,c
  6132  010EA8  0E02               	movlw	2
  6133  010EAA  6EE6               	movwf	postinc1,c
  6134  010EAC  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  6135  010EB0  0060  F007  FFE6   	movff	btemp,postinc1
  6136  010EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6137  010EBC  0E0C               	movlw	12
  6138  010EBE  6EE6               	movwf	postinc1,c
  6139  010EC0  ECCE  F0D4         	call	_sprintf	;wreg free
  6140                           
  6141                           ;main.c: 399:      break;
  6142  010EC4  D108               	goto	l14622
  6143  010EC6                     l14606:
  6144                           
  6145                           ; BSR set to: 0
  6146                           ;main.c: 401:      if (!V.calib) {
  6147  010EC6  0101               	movlb	1	; () banked
  6148  010EC8  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  6149  010ECA  A4D8               	btfss	status,2,c
  6150  010ECC  D02D               	goto	l14610
  6151                           
  6152                           ; BSR set to: 1
  6153                           ;main.c: 402:       lp_filter(0.0, i, -1);
  6154  010ECE  0EFF               	movlw	255
  6155  010ED0  6EE6               	movwf	postinc1,c
  6156                           
  6157                           ;stkvar	_i @ sp[(-18)+14]
  6158  010ED2  0EFC               	movlw	-4
  6159  010ED4  50E3               	movf	plusw1,w,c
  6160  010ED6  6EE6               	movwf	postinc1,c
  6161  010ED8  0E00               	movlw	0
  6162  010EDA  6EE6               	movwf	postinc1,c
  6163  010EDC  0E00               	movlw	0
  6164  010EDE  6EE6               	movwf	postinc1,c
  6165  010EE0  0E00               	movlw	0
  6166  010EE2  6EE6               	movwf	postinc1,c
  6167  010EE4  0E00               	movlw	0
  6168  010EE6  6EE6               	movwf	postinc1,c
  6169  010EE8  ECF9  F0C6         	call	_lp_filter	;wreg free
  6170                           
  6171                           ;main.c: 403:       lp_filter(0.0, j, -1);
  6172  010EEC  0EFF               	movlw	255
  6173  010EEE  6EE6               	movwf	postinc1,c
  6174                           
  6175                           ;stkvar	_j @ sp[(-18)+13]
  6176  010EF0  0EFB               	movlw	-5
  6177  010EF2  50E3               	movf	plusw1,w,c
  6178  010EF4  6EE6               	movwf	postinc1,c
  6179  010EF6  0E00               	movlw	0
  6180  010EF8  6EE6               	movwf	postinc1,c
  6181  010EFA  0E00               	movlw	0
  6182  010EFC  6EE6               	movwf	postinc1,c
  6183  010EFE  0E00               	movlw	0
  6184  010F00  6EE6               	movwf	postinc1,c
  6185  010F02  0E00               	movlw	0
  6186  010F04  6EE6               	movwf	postinc1,c
  6187  010F06  ECF9  F0C6         	call	_lp_filter	;wreg free
  6188                           
  6189                           ;main.c: 404:       lp_filter(0.0, k, -1);
  6190  010F0A  0EFF               	movlw	255
  6191  010F0C  6EE6               	movwf	postinc1,c
  6192                           
  6193                           ;stkvar	_k @ sp[(-18)+12]
  6194  010F0E  0EFA               	movlw	-6
  6195  010F10  50E3               	movf	plusw1,w,c
  6196  010F12  6EE6               	movwf	postinc1,c
  6197  010F14  0E00               	movlw	0
  6198  010F16  6EE6               	movwf	postinc1,c
  6199  010F18  0E00               	movlw	0
  6200  010F1A  6EE6               	movwf	postinc1,c
  6201  010F1C  0E00               	movlw	0
  6202  010F1E  6EE6               	movwf	postinc1,c
  6203  010F20  0E00               	movlw	0
  6204  010F22  6EE6               	movwf	postinc1,c
  6205  010F24  ECF9  F0C6         	call	_lp_filter	;wreg free
  6206  010F28                     l14610:
  6207                           
  6208                           ;main.c: 406:      V.calib = 1;
  6209  010F28  0E01               	movlw	1
  6210  010F2A  0101               	movlb	1	; () banked
  6211  010F2C  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6212                           
  6213                           ; BSR set to: 1
  6214                           ;main.c: 407:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6215                           ;stkvar	_inp_index @ sp[(-17)+11]
  6216  010F2E  0EFA               	movlw	-6
  6217  010F30  50E3               	movf	plusw1,w,c
  6218  010F32  6EE6               	movwf	postinc1,c
  6219  010F34  0E00               	movlw	0
  6220  010F36  6EE6               	movwf	postinc1,c
  6221                           
  6222                           ;stkvar	_i @ sp[(-19)+14]
  6223  010F38  0EFB               	movlw	-5
  6224  010F3A  50E3               	movf	plusw1,w,c
  6225  010F3C  0D04               	mullw	4
  6226  010F3E  0EFF               	movlw	low _C
  6227  010F40  24F3               	addwf	243,w,c
  6228  010F42  6ED9               	movwf	fsr2l,c
  6229  010F44  0E08               	movlw	high _C
  6230  010F46  20F4               	addwfc	prodh,w,c
  6231  010F48  6EDA               	movwf	fsr2h,c
  6232  010F4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6233  010F50  006F FF7B FFE6     	movff	postinc2,postinc1
  6234  010F56  006F FF7B FFE6     	movff	postinc2,postinc1
  6235  010F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  6236                           
  6237                           ;stkvar	_i @ sp[(-23)+14]
  6238  010F62  0EF7               	movlw	-9
  6239  010F64  50E3               	movf	plusw1,w,c
  6240  010F66  6EE6               	movwf	postinc1,c
  6241  010F68  EC37  F0E8         	call	_get_raw_result	;wreg free
  6242  010F6C  0060  F007  FFE6   	movff	btemp,postinc1
  6243  010F72  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6244  010F78  0EA4               	movlw	low STR_43
  6245  010F7A  6EE6               	movwf	postinc1,c
  6246  010F7C  0EFD               	movlw	high STR_43
  6247  010F7E  6EE6               	movwf	postinc1,c
  6248  010F80  0E00               	movlw	0
  6249  010F82  6EE6               	movwf	postinc1,c
  6250  010F84  0E00               	movlw	0
  6251  010F86  6EE6               	movwf	postinc1,c
  6252  010F88  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  6253  010F8C  0060  F007  FFE6   	movff	btemp,postinc1
  6254  010F92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6255  010F98  0E0C               	movlw	12
  6256  010F9A  6EE6               	movwf	postinc1,c
  6257  010F9C  ECCE  F0D4         	call	_sprintf	;wreg free
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;main.c: 408:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6261                           ;stkvar	_inp_index @ sp[(-17)+11]
  6262  010FA0  0EFA               	movlw	-6
  6263  010FA2  50E3               	movf	plusw1,w,c
  6264  010FA4  6E0B               	movwf	(btemp+10)^0,c
  6265  010FA6  6A0C               	clrf	(btemp+11)^0,c
  6266  010FA8  0E01               	movlw	1
  6267  010FAA  260B               	addwf	(btemp+10)^0,f,c
  6268  010FAC  0E00               	movlw	0
  6269  010FAE  220C               	addwfc	(btemp+11)^0,f,c
  6270  010FB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6271  010FB6  0060  F033  FFE6   	movff	btemp+11,postinc1
  6272                           
  6273                           ;stkvar	_j @ sp[(-19)+13]
  6274  010FBC  0EFA               	movlw	-6
  6275  010FBE  50E3               	movf	plusw1,w,c
  6276  010FC0  0D04               	mullw	4
  6277  010FC2  0EFF               	movlw	low _C
  6278  010FC4  24F3               	addwf	243,w,c
  6279  010FC6  6ED9               	movwf	fsr2l,c
  6280  010FC8  0E08               	movlw	high _C
  6281  010FCA  20F4               	addwfc	prodh,w,c
  6282  010FCC  6EDA               	movwf	fsr2h,c
  6283  010FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  6284  010FD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6285  010FDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6286  010FE0  006F FF7B FFE6     	movff	postinc2,postinc1
  6287                           
  6288                           ;stkvar	_j @ sp[(-23)+13]
  6289  010FE6  0EF6               	movlw	-10
  6290  010FE8  50E3               	movf	plusw1,w,c
  6291  010FEA  6EE6               	movwf	postinc1,c
  6292  010FEC  EC37  F0E8         	call	_get_raw_result	;wreg free
  6293  010FF0  0060  F007  FFE6   	movff	btemp,postinc1
  6294  010FF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6295  010FFC  0EA4               	movlw	low STR_43
  6296  010FFE  6EE6               	movwf	postinc1,c
  6297  011000  0EFD               	movlw	high STR_43
  6298  011002  6EE6               	movwf	postinc1,c
  6299  011004  0E00               	movlw	0
  6300  011006  6EE6               	movwf	postinc1,c
  6301  011008  0E01               	movlw	1
  6302  01100A  6EE6               	movwf	postinc1,c
  6303  01100C  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  6304  011010  0060  F007  FFE6   	movff	btemp,postinc1
  6305  011016  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6306  01101C  0E0C               	movlw	12
  6307  01101E  6EE6               	movwf	postinc1,c
  6308  011020  ECCE  F0D4         	call	_sprintf	;wreg free
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;main.c: 409:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  6312                           ;stkvar	_inp_index @ sp[(-17)+11]
  6313  011024  0EFA               	movlw	-6
  6314  011026  50E3               	movf	plusw1,w,c
  6315  011028  6E0B               	movwf	(btemp+10)^0,c
  6316  01102A  6A0C               	clrf	(btemp+11)^0,c
  6317  01102C  0E02               	movlw	2
  6318  01102E  260B               	addwf	(btemp+10)^0,f,c
  6319  011030  0E00               	movlw	0
  6320  011032  220C               	addwfc	(btemp+11)^0,f,c
  6321  011034  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6322  01103A  0060  F033  FFE6   	movff	btemp+11,postinc1
  6323                           
  6324                           ;stkvar	_k @ sp[(-19)+12]
  6325  011040  0EF9               	movlw	-7
  6326  011042  50E3               	movf	plusw1,w,c
  6327  011044  0D04               	mullw	4
  6328  011046  0EFF               	movlw	low _C
  6329  011048  24F3               	addwf	243,w,c
  6330  01104A  6ED9               	movwf	fsr2l,c
  6331  01104C  0E08               	movlw	high _C
  6332  01104E  20F4               	addwfc	prodh,w,c
  6333  011050  6EDA               	movwf	fsr2h,c
  6334  011052  006F FF7B FFE6     	movff	postinc2,postinc1
  6335  011058  006F FF7B FFE6     	movff	postinc2,postinc1
  6336  01105E  006F FF7B FFE6     	movff	postinc2,postinc1
  6337  011064  006F FF7B FFE6     	movff	postinc2,postinc1
  6338                           
  6339                           ;stkvar	_k @ sp[(-23)+12]
  6340  01106A  0EF5               	movlw	-11
  6341  01106C  50E3               	movf	plusw1,w,c
  6342  01106E  6EE6               	movwf	postinc1,c
  6343  011070  EC37  F0E8         	call	_get_raw_result	;wreg free
  6344  011074  0060  F007  FFE6   	movff	btemp,postinc1
  6345  01107A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6346  011080  0EA4               	movlw	low STR_43
  6347  011082  6EE6               	movwf	postinc1,c
  6348  011084  0EFD               	movlw	high STR_43
  6349  011086  6EE6               	movwf	postinc1,c
  6350  011088  0E00               	movlw	0
  6351  01108A  6EE6               	movwf	postinc1,c
  6352  01108C  0E02               	movlw	2
  6353  01108E  6EE6               	movwf	postinc1,c
  6354  011090  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
  6355  011094  0060  F007  FFE6   	movff	btemp,postinc1
  6356  01109A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6357  0110A0  0E0C               	movlw	12
  6358  0110A2  6EE6               	movwf	postinc1,c
  6359  0110A4  ECCE  F0D4         	call	_sprintf	;wreg free
  6360                           
  6361                           ;main.c: 410:      break;
  6362  0110A8  D016               	goto	l14622
  6363  0110AA                     l14620:
  6364  0110AA  0100               	movlb	0	; () banked
  6365  0110AC  51F1               	movf	_H& (0+255),w,b
  6366  0110AE  6E0B               	movwf	(btemp+10)^0,c
  6367  0110B0  6A0C               	clrf	(btemp+11)^0,c
  6368                           
  6369                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6370                           ; Switch size 1, requested type "simple"
  6371                           ; Number of cases is 1, Range of values is 0 to 0
  6372                           ; switch strategies available:
  6373                           ; Name         Instructions Cycles
  6374                           ; simple_byte            4     3 (average)
  6375                           ;	Chosen strategy is simple_byte
  6376  0110B2  500C               	movf	(btemp+11)^0,w,c
  6377  0110B4  0A00               	xorlw	0	; case 0
  6378  0110B6  A4D8               	btfss	status,2,c
  6379  0110B8  D00E               	goto	l14622
  6380                           
  6381                           ; BSR set to: 0
  6382                           ; Switch size 1, requested type "simple"
  6383                           ; Number of cases is 4, Range of values is 0 to 3
  6384                           ; switch strategies available:
  6385                           ; Name         Instructions Cycles
  6386                           ; simple_byte           13     7 (average)
  6387                           ;	Chosen strategy is simple_byte
  6388  0110BA  500B               	movf	(btemp+10)^0,w,c
  6389  0110BC  0A00               	xorlw	0	; case 0
  6390  0110BE  B4D8               	btfsc	status,2,c
  6391  0110C0  D4CE               	goto	l1476
  6392  0110C2  0A01               	xorlw	1	; case 1
  6393  0110C4  B4D8               	btfsc	status,2,c
  6394  0110C6  EF2C  F084         	goto	l1466
  6395  0110CA  0A03               	xorlw	3	; case 2
  6396  0110CC  B4D8               	btfsc	status,2,c
  6397  0110CE  D5DC               	goto	l1477
  6398  0110D0  0A01               	xorlw	1	; case 3
  6399  0110D2  B4D8               	btfsc	status,2,c
  6400  0110D4  D6F8               	goto	l14606
  6401  0110D6                     l14622:
  6402                           
  6403                           ; BSR set to: 0
  6404                           ;main.c: 414:     clear_hid_pflags(&H);
  6405  0110D6  0EF1               	movlw	_H& (0+255)
  6406  0110D8  6EE6               	movwf	postinc1,c
  6407  0110DA  EC71  F0E5         	call	_clear_hid_pflags	;wreg free
  6408                           
  6409                           ;main.c: 416:    StartTimer(TMR_DISPLAY, 250);
  6410  0110DE  0EFA               	movlw	250
  6411  0110E0  6EE6               	movwf	postinc1,c
  6412  0110E2  0E00               	movlw	0
  6413  0110E4  6EE6               	movwf	postinc1,c
  6414  0110E6  0E0A               	movlw	10
  6415  0110E8  6EE6               	movwf	postinc1,c
  6416  0110EA  EC14  F0E4         	call	_StartTimer	;wreg free
  6417                           
  6418                           ;main.c: 417:    V.enter = check_enter_button(&H);
  6419  0110EE  0EF1               	movlw	_H& (0+255)
  6420  0110F0  6EE6               	movwf	postinc1,c
  6421  0110F2  EC34  F0E4         	call	_check_enter_button	;wreg free
  6422  0110F6  5001               	movf	btemp^0,w,c
  6423  0110F8  0101               	movlb	1	; () banked
  6424  0110FA  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  6425                           
  6426                           ; BSR set to: 1
  6427                           ;main.c: 418:    if (V.enter && (H.hid_display != HID_AUX)) {
  6428  0110FC  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6429  0110FE  B4D8               	btfsc	status,2,c
  6430  011100  D013               	goto	l14636
  6431                           
  6432                           ; BSR set to: 1
  6433  011102  0E03               	movlw	3
  6434  011104  0100               	movlb	0	; () banked
  6435  011106  19F1               	xorwf	_H& (0+255),w,b
  6436  011108  B4D8               	btfsc	status,2,c
  6437  01110A  D00E               	goto	l14636
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;main.c: 419:     V.enter = 0;
  6441  01110C  0101               	movlb	1	; () banked
  6442  01110E  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6443                           
  6444                           ; BSR set to: 1
  6445                           ;main.c: 420:     V.screen = ~V.screen;
  6446  011110  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6447  011112  D002               	goto	u13960
  6448  011114  0E01               	movlw	1
  6449  011116  D001               	goto	u13966
  6450  011118                     u13960:
  6451  011118  0E00               	movlw	0
  6452  01111A                     u13966:
  6453  01111A  0AFF               	xorlw	255
  6454  01111C  6E0C               	movwf	(btemp+11)^0,c
  6455  01111E  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  6456  011120  180C               	xorwf	(btemp+11)^0,w,c
  6457  011122  0BFE               	andlw	-2
  6458  011124  180C               	xorwf	(btemp+11)^0,w,c
  6459  011126  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  6460  011128                     l14636:
  6461                           
  6462                           ;main.c: 422:    set_vterm(V.screen);
  6463  011128  0101               	movlb	1	; () banked
  6464  01112A  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6465  01112C  D002               	goto	u13970
  6466  01112E  0E01               	movlw	1
  6467  011130  D001               	goto	u13976
  6468  011132                     u13970:
  6469  011132  0E00               	movlw	0
  6470  011134                     u13976:
  6471  011134  6EE6               	movwf	postinc1,c
  6472  011136  EC97  F0E8         	call	_set_vterm	;wreg free
  6473                           
  6474                           ;main.c: 423:    update_lcd(V.screen);
  6475  01113A  0101               	movlb	1	; () banked
  6476  01113C  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6477  01113E  D002               	goto	u13980
  6478  011140  0E01               	movlw	1
  6479  011142  D001               	goto	u13986
  6480  011144                     u13980:
  6481  011144  0E00               	movlw	0
  6482  011146                     u13986:
  6483  011146  6EE6               	movwf	postinc1,c
  6484  011148  EC46  F0D4         	call	_update_lcd	;wreg free
  6485                           
  6486                           ;main.c: 425:    wait_lcd_done();
  6487  01114C  EC26  F0E8         	call	_wait_lcd_done	;wreg free
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;main.c: 426:    set_dac_a(3.333);
  6491  011150  0EDF               	movlw	223
  6492  011152  6EE6               	movwf	postinc1,c
  6493  011154  0E4F               	movlw	79
  6494  011156  6EE6               	movwf	postinc1,c
  6495  011158  0E55               	movlw	85
  6496  01115A  6EE6               	movwf	postinc1,c
  6497  01115C  0E40               	movlw	64
  6498  01115E  6EE6               	movwf	postinc1,c
  6499  011160  EC57  F0E5         	call	_set_dac_a	;wreg free
  6500                           
  6501                           ;main.c: 427:    set_dac_b(6.666);
  6502  011164  0EDF               	movlw	223
  6503  011166  6EE6               	movwf	postinc1,c
  6504  011168  0E4F               	movlw	79
  6505  01116A  6EE6               	movwf	postinc1,c
  6506  01116C  0ED5               	movlw	213
  6507  01116E  6EE6               	movwf	postinc1,c
  6508  011170  0E40               	movlw	64
  6509  011172  6EE6               	movwf	postinc1,c
  6510  011174  EC3D  F0E5         	call	_set_dac_b	;wreg free
  6511                           
  6512                           ;main.c: 428:    set_dac();
  6513  011178  EC68  F0D9         	call	_set_dac	;wreg free
  6514  01117C                     l14648:
  6515                           
  6516                           ;main.c: 434:   check_help(V.flipper);
  6517  01117C  0101               	movlb	1	; () banked
  6518  01117E  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6519  011180  6EE6               	movwf	postinc1,c
  6520  011182  EC09  F0C4         	call	_check_help	;wreg free
  6521                           
  6522                           ;main.c: 436:   if (V.enter) {
  6523  011186  0101               	movlb	1	; () banked
  6524  011188  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6525  01118A  B4D8               	btfsc	status,2,c
  6526  01118C  D062               	goto	l1482
  6527                           
  6528                           ; BSR set to: 1
  6529                           ;main.c: 437:    V.enter = 0;
  6530  01118E  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6531                           
  6532                           ;main.c: 438:    V.calib = 0;
  6533  011190  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6534                           
  6535                           ; BSR set to: 1
  6536                           ;main.c: 439:    inp_index += 3;
  6537                           ;stkvar	_inp_index @ sp[(-17)+11]
  6538  011192  0EFA               	movlw	-6
  6539  011194  006F FF8C  F001    	movff	plusw1,btemp
  6540  01119A  0E03               	movlw	3
  6541  01119C  2601               	addwf	btemp^0,f,c
  6542  01119E  0EFA               	movlw	-6
  6543  0111A0  0060  F007  FFE3   	movff	btemp,plusw1
  6544                           
  6545                           ;main.c: 440:    if (inp_index > 9)
  6546                           ;stkvar	_inp_index @ sp[(-17)+11]
  6547  0111A6  0EFA               	movlw	-6
  6548  0111A8  006F FF8C  F001    	movff	plusw1,btemp
  6549  0111AE  0E09               	movlw	9
  6550  0111B0  6401               	cpfsgt	btemp^0,c
  6551  0111B2  D03A               	goto	l14676
  6552                           
  6553                           ; BSR set to: 1
  6554                           ;main.c: 441:     inp_index = 0;
  6555                           ;stkvar	_inp_index @ sp[(-17)+11]
  6556  0111B4  0EFA               	movlw	-6
  6557  0111B6  6AE3               	clrf	plusw1,c
  6558  0111B8  D037               	goto	l14676
  6559  0111BA                     l14658:
  6560                           
  6561                           ; BSR set to: 1
  6562                           ;main.c: 444:     i = C_BATT;
  6563                           ;stkvar	_i @ sp[(-17)+14]
  6564  0111BA  0EFD               	movlw	-3
  6565  0111BC  6AE3               	clrf	plusw1,c
  6566                           
  6567                           ; BSR set to: 1
  6568                           ;main.c: 445:     j = C_PV;
  6569                           ;stkvar	_j @ sp[(-17)+13]
  6570  0111BE  0EFC               	movlw	-4
  6571  0111C0  6AE3               	clrf	plusw1,c
  6572  0111C2  2AE3               	incf	plusw1,f,c
  6573                           
  6574                           ; BSR set to: 1
  6575                           ;main.c: 446:     k = V_CC;
  6576                           ;stkvar	_k @ sp[(-17)+12]
  6577  0111C4  0EFB               	movlw	-5
  6578  0111C6  6AE3               	clrf	plusw1,c
  6579  0111C8  82E3               	bsf	plusw1,1,c
  6580                           
  6581                           ;main.c: 447:     break;
  6582  0111CA  D043               	goto	l1482
  6583  0111CC                     l14664:
  6584                           
  6585                           ; BSR set to: 1
  6586                           ;main.c: 449:     i = V_BAT;
  6587                           ;stkvar	_i @ sp[(-17)+14]
  6588  0111CC  0EFD               	movlw	-3
  6589  0111CE  6AE3               	clrf	plusw1,c
  6590  0111D0  84E3               	bsf	plusw1,2,c
  6591                           
  6592                           ;main.c: 450:     j = V_PV;
  6593                           ;stkvar	_j @ sp[(-17)+13]
  6594  0111D2  0EFC               	movlw	-4
  6595  0111D4  6AE3               	clrf	plusw1,c
  6596  0111D6  80E3               	bsf	plusw1,0,c
  6597  0111D8  84E3               	bsf	plusw1,2,c	;indir
  6598                           
  6599                           ;main.c: 451:     k = V_CBUS;
  6600                           ;stkvar	_k @ sp[(-17)+12]
  6601  0111DA  0EFB               	movlw	-5
  6602  0111DC  6AE3               	clrf	plusw1,c
  6603  0111DE  82E3               	bsf	plusw1,1,c
  6604  0111E0  84E3               	bsf	plusw1,2,c	;indir
  6605                           
  6606                           ;main.c: 452:     break;
  6607  0111E2  D037               	goto	l1482
  6608  0111E4                     l14666:
  6609                           
  6610                           ; BSR set to: 1
  6611                           ;main.c: 454:     i = V_BBAT;
  6612                           ;stkvar	_i @ sp[(-17)+14]
  6613  0111E4  0EFD               	movlw	-3
  6614  0111E6  6AE3               	clrf	plusw1,c
  6615  0111E8  82E3               	bsf	plusw1,1,c
  6616  0111EA  86E3               	bsf	plusw1,3,c	;indir
  6617                           
  6618                           ; BSR set to: 1
  6619                           ;main.c: 455:     j = V_TEMP;
  6620  0111EC  0E0B               	movlw	11
  6621  0111EE  6E0C               	movwf	(btemp+11)^0,c
  6622                           
  6623                           ;stkvar	_j @ sp[(-17)+13]
  6624  0111F0  0EFC               	movlw	-4
  6625  0111F2  0060  F033  FFE3   	movff	btemp+11,plusw1
  6626                           
  6627                           ; BSR set to: 1
  6628                           ;main.c: 456:     k = V_INVERTER;
  6629                           ;stkvar	_k @ sp[(-17)+12]
  6630  0111F8  0EFB               	movlw	-5
  6631  0111FA  6AE3               	clrf	plusw1,c
  6632  0111FC  84E3               	bsf	plusw1,2,c
  6633  0111FE  86E3               	bsf	plusw1,3,c	;indir
  6634                           
  6635                           ;main.c: 457:     break;
  6636  011200  D028               	goto	l1482
  6637  011202                     l14672:
  6638                           
  6639                           ; BSR set to: 1
  6640                           ;main.c: 459:     i = V_LIGHT_SENSOR;
  6641  011202  0E0D               	movlw	13
  6642  011204  6E0C               	movwf	(btemp+11)^0,c
  6643                           
  6644                           ;stkvar	_i @ sp[(-17)+14]
  6645  011206  0EFD               	movlw	-3
  6646  011208  0060  F033  FFE3   	movff	btemp+11,plusw1
  6647                           
  6648                           ;main.c: 460:     j = V_LIGHT_SENSOR;
  6649  01120E  0E0D               	movlw	13
  6650  011210  6E0C               	movwf	(btemp+11)^0,c
  6651                           
  6652                           ;stkvar	_j @ sp[(-17)+13]
  6653  011212  0EFC               	movlw	-4
  6654  011214  0060  F033  FFE3   	movff	btemp+11,plusw1
  6655                           
  6656                           ;main.c: 461:     k = V_LIGHT_SENSOR;
  6657  01121A  0E0D               	movlw	13
  6658  01121C  6E0C               	movwf	(btemp+11)^0,c
  6659                           
  6660                           ;stkvar	_k @ sp[(-17)+12]
  6661  01121E  0EFB               	movlw	-5
  6662  011220  0060  F033  FFE3   	movff	btemp+11,plusw1
  6663                           
  6664                           ;main.c: 462:     break;
  6665  011226  D015               	goto	l1482
  6666  011228                     l14676:
  6667                           
  6668                           ; BSR set to: 1
  6669                           ;stkvar	_inp_index @ sp[(-17)+11]
  6670  011228  0EFA               	movlw	-6
  6671  01122A  50E3               	movf	plusw1,w,c
  6672  01122C  6E0B               	movwf	(btemp+10)^0,c
  6673  01122E  6A0C               	clrf	(btemp+11)^0,c
  6674                           
  6675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6676                           ; Switch size 1, requested type "simple"
  6677                           ; Number of cases is 1, Range of values is 0 to 0
  6678                           ; switch strategies available:
  6679                           ; Name         Instructions Cycles
  6680                           ; simple_byte            4     3 (average)
  6681                           ;	Chosen strategy is simple_byte
  6682  011230  500C               	movf	(btemp+11)^0,w,c
  6683  011232  0A00               	xorlw	0	; case 0
  6684  011234  A4D8               	btfss	status,2,c
  6685  011236  D00D               	goto	l1482
  6686                           
  6687                           ; BSR set to: 1
  6688                           ; Switch size 1, requested type "simple"
  6689                           ; Number of cases is 4, Range of values is 0 to 9
  6690                           ; switch strategies available:
  6691                           ; Name         Instructions Cycles
  6692                           ; simple_byte           13     7 (average)
  6693                           ;	Chosen strategy is simple_byte
  6694  011238  500B               	movf	(btemp+10)^0,w,c
  6695  01123A  0A00               	xorlw	0	; case 0
  6696  01123C  B4D8               	btfsc	status,2,c
  6697  01123E  D7BD               	goto	l14658
  6698  011240  0A03               	xorlw	3	; case 3
  6699  011242  B4D8               	btfsc	status,2,c
  6700  011244  D7C3               	goto	l14664
  6701  011246  0A05               	xorlw	5	; case 6
  6702  011248  B4D8               	btfsc	status,2,c
  6703  01124A  D7CC               	goto	l14666
  6704  01124C  0A0F               	xorlw	15	; case 9
  6705  01124E  B4D8               	btfsc	status,2,c
  6706  011250  D7D8               	goto	l14672
  6707  011252                     l1482:
  6708                           
  6709                           ; BSR set to: 1
  6710                           ;main.c: 471:   if (V.set_sequ) {
  6711  011252  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6712  011254  EFE0  F083         	goto	l14550
  6713                           
  6714                           ; BSR set to: 1
  6715                           ;main.c: 472:    if (TimerDone(TMR_INFO)) {
  6716  011258  0E07               	movlw	7
  6717  01125A  6EE6               	movwf	postinc1,c
  6718  01125C  ECA1  F0E6         	call	_TimerDone	;wreg free
  6719  011260  5001               	movf	btemp^0,w,c
  6720  011262  B4D8               	btfsc	status,2,c
  6721  011264  D00C               	goto	l14686
  6722                           
  6723                           ;main.c: 473:     V.set_sequ = 0;
  6724  011266  0101               	movlb	1	; () banked
  6725  011268  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6726                           
  6727                           ; BSR set to: 1
  6728                           ;main.c: 474:     set_vterm(0);
  6729  01126A  0E00               	movlw	0
  6730  01126C  6EE6               	movwf	postinc1,c
  6731  01126E  EC97  F0E8         	call	_set_vterm	;wreg free
  6732                           
  6733                           ;main.c: 475:     update_lcd(0);
  6734  011272  0E00               	movlw	0
  6735  011274  6EE6               	movwf	postinc1,c
  6736  011276  EC46  F0D4         	call	_update_lcd	;wreg free
  6737                           
  6738                           ;main.c: 476:    } else {
  6739  01127A  EFE0  F083         	goto	l14550
  6740  01127E                     l14686:
  6741                           
  6742                           ;main.c: 477:     set_vterm(2);
  6743  01127E  0E02               	movlw	2
  6744  011280  6EE6               	movwf	postinc1,c
  6745  011282  EC97  F0E8         	call	_set_vterm	;wreg free
  6746                           
  6747                           ;main.c: 478:     update_lcd(2);
  6748  011286  0E02               	movlw	2
  6749  011288  6EE6               	movwf	postinc1,c
  6750  01128A  EC46  F0D4         	call	_update_lcd	;wreg free
  6751  01128E  EFE0  F083         	goto	l14550
  6752  011292                     __end_of_main:
  6753                           	opt callstack 0
  6754                           
  6755 ;; *************** function _update_hist_data *****************
  6756 ;; Defined at:
  6757 ;;		line 454 in file "daq.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;  mode            1  [STACK] const _Bool 
  6760 ;;  hist            2  [STACK] PTR volatile struct hist
  6761 ;;		 -> C.hist(109), C(323), 
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;		None
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  1  [STACK] void 
  6766 ;; Registers used:
  6767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  6768 ;; Tracked objects:
  6769 ;;		On entry : 3F/2
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6777 ;;Total ram usage:        0 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; Hardware stack levels required when called:   15
  6780 ;; This function calls:
  6781 ;;		Nothing
  6782 ;; This function is called by:
  6783 ;;		_main
  6784 ;; This function uses a reentrant model
  6785 ;;
  6786                           
  6787                           	psect	text1
  6788  01BE86                     __ptext1:
  6789                           	opt callstack 0
  6790  01BE86                     _update_hist_data:
  6791                           	opt callstack 15
  6792                           
  6793                           ;daq.c: 454: void update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 45
      +                          5: {;daq.c: 456:  if (hist == ((void*)0))
  6794                           ;stkvar	_hist @ sp[(0)+-3]
  6795                           
  6796                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6797                           ;incstack = 0
  6798  01BE86  0EFD               	movlw	-3
  6799  01BE88  006F FF8C  F001    	movff	plusw1,btemp
  6800  01BE8E  0EFE               	movlw	-2
  6801  01BE90  50E3               	movf	plusw1,w,c
  6802  01BE92  1001               	iorwf	btemp^0,w,c
  6803  01BE94  B4D8               	btfsc	status,2,c
  6804  01BE96  D02A               	goto	l2069
  6805                           
  6806                           ;daq.c: 459:  if (mode) {
  6807                           ;stkvar	_mode @ sp[(0)+-1]
  6808  01BE98  0EFF               	movlw	-1
  6809  01BE9A  50E3               	movf	plusw1,w,c
  6810  01BE9C  B4D8               	btfsc	status,2,c
  6811  01BE9E  D014               	goto	l12014
  6812                           
  6813                           ;daq.c: 460:   if (R.hist_save)
  6814  01BEA0  0102               	movlb	2	; () banked
  6815  01BEA2  A1A3               	btfss	(_R+163)& (0+255),0,b	;volatile
  6816  01BEA4  D023               	goto	l2069
  6817                           
  6818                           ; BSR set to: 2
  6819                           ;daq.c: 461:    R.H = *hist;
  6820                           ;stkvar	_hist @ sp[(0)+-3]
  6821  01BEA6  0EFD               	movlw	-3
  6822  01BEA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6823  01BEAE  0EFE               	movlw	-2
  6824  01BEB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6825  01BEB6  EE00  F236         	lfsr	0,_R+54	;volatile
  6826  01BEBA  0E6C               	movlw	108
  6827  01BEBC                     u11101:
  6828  01BEBC  006F FF6F FFEB     	movff	plusw2,plusw0
  6829  01BEC2  06E8               	decf	wreg,f,c
  6830  01BEC4  E2FB               	bc	u11101
  6831  01BEC6  D012               	goto	l2069
  6832  01BEC8                     l12014:
  6833                           
  6834                           ;daq.c: 463:   *hist = R.H;
  6835  01BEC8  EE20  F236         	lfsr	2,_R+54	;volatile
  6836                           
  6837                           ;stkvar	_hist @ sp[(0)+-3]
  6838  01BECC  0EFD               	movlw	-3
  6839  01BECE  006F FF8F FFE9     	movff	plusw1,fsr0l
  6840  01BED4  0EFE               	movlw	-2
  6841  01BED6  006F FF8F FFEA     	movff	plusw1,fsr0h
  6842  01BEDC  0E6C               	movlw	108
  6843  01BEDE                     u11111:
  6844  01BEDE  006F FF6F FFEB     	movff	plusw2,plusw0
  6845  01BEE4  06E8               	decf	wreg,f,c
  6846  01BEE6  E2FB               	bc	u11111
  6847                           
  6848                           ;daq.c: 464:   R.hist_save = 1;
  6849  01BEE8  0102               	movlb	2	; () banked
  6850  01BEEA  81A3               	bsf	(_R+163)& (0+255),0,b	;volatile
  6851  01BEEC                     l2069:
  6852                           
  6853                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  6854  01BEEC  52E5               	movf	postdec1,f,c
  6855  01BEEE  52E5               	movf	postdec1,f,c
  6856  01BEF0  52E5               	movf	postdec1,f,c
  6857  01BEF2  0012               	return		;funcret
  6858  01BEF4                     __end_of_update_hist_data:
  6859                           	opt callstack 0
  6860                           
  6861 ;; *************** function _update_cal_data *****************
  6862 ;; Defined at:
  6863 ;;		line 435 in file "daq.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;		None
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;		None
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  1  [STACK] void 
  6870 ;; Registers used:
  6871 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/39
  6874 ;;		On exit  : 3F/2
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6881 ;;Total ram usage:        0 bytes
  6882 ;; Hardware stack levels used:    1
  6883 ;; Hardware stack levels required when called:   15
  6884 ;; This function calls:
  6885 ;;		Nothing
  6886 ;; This function is called by:
  6887 ;;		_main
  6888 ;; This function uses a reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text2
  6892  01C396                     __ptext2:
  6893                           	opt callstack 0
  6894  01C396                     _update_cal_data:
  6895                           	opt callstack 15
  6896                           
  6897                           ;daq.c: 437:  R = r_cal;
  6898                           
  6899                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6900                           ;incstack = 0
  6901  01C396  EE21  F000         	lfsr	2,_r_cal
  6902  01C39A  EE00  F200         	lfsr	0,_R	;volatile
  6903  01C39E  0EA6               	movlw	166
  6904  01C3A0                     u11041:
  6905  01C3A0  006F FF7B FFEE     	movff	postinc2,postinc0
  6906  01C3A6  06E8               	decf	wreg,f,c
  6907  01C3A8  E2FB               	bc	u11041
  6908  01C3AA  0EA7               	movlw	167
  6909  01C3AC  5ED9               	subwf	fsr2l,f,c
  6910  01C3AE  5EE9               	subwf	fsr0l,f,c
  6911                           
  6912                           ;daq.c: 438:  if (!R.c_zero_cal) {
  6913  01C3B0  0102               	movlb	2	; () banked
  6914  01C3B2  B3A3               	btfsc	(_R+163)& (0+255),1,b	;volatile
  6915  01C3B4  D008               	goto	l12000
  6916                           
  6917                           ; BSR set to: 2
  6918                           ;daq.c: 439:   R.n_offset[0] = 3938;
  6919  01C3B6  0E0F               	movlw	15
  6920  01C3B8  6F27               	movwf	(_R+39)& (0+255),b	;volatile
  6921  01C3BA  0E62               	movlw	98
  6922  01C3BC  6F26               	movwf	(_R+38)& (0+255),b	;volatile
  6923                           
  6924                           ;daq.c: 440:   R.n_offset[1] = 4004;
  6925  01C3BE  0E0F               	movlw	15
  6926  01C3C0  6F29               	movwf	(_R+41)& (0+255),b	;volatile
  6927  01C3C2  0EA4               	movlw	164
  6928  01C3C4  6F28               	movwf	(_R+40)& (0+255),b	;volatile
  6929  01C3C6                     l12000:
  6930                           
  6931                           ; BSR set to: 2
  6932                           ;daq.c: 444:  if (!R.c_scale_cal) {
  6933  01C3C6  B5A3               	btfsc	(_R+163)& (0+255),2,b	;volatile
  6934  01C3C8  0012               	return	
  6935                           
  6936                           ; BSR set to: 2
  6937                           ;daq.c: 445:   R.n_scalar[0] = 0.0862000;
  6938  01C3CA  0EA0               	movlw	160
  6939  01C3CC  6F2A               	movwf	(_R+42)& (0+255),b	;volatile
  6940  01C3CE  0E89               	movlw	137
  6941  01C3D0  6F2B               	movwf	(_R+43)& (0+255),b	;volatile
  6942  01C3D2  0EB0               	movlw	176
  6943  01C3D4  6F2C               	movwf	(_R+44)& (0+255),b	;volatile
  6944  01C3D6  0E3D               	movlw	61
  6945  01C3D8  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  6946                           
  6947                           ;daq.c: 446:   R.n_scalar[1] = 0.0361010;
  6948  01C3DA  0EA4               	movlw	164
  6949  01C3DC  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  6950  01C3DE  0EDE               	movlw	222
  6951  01C3E0  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
  6952  01C3E2  0E13               	movlw	19
  6953  01C3E4  6F30               	movwf	(_R+48)& (0+255),b	;volatile
  6954  01C3E6  0E3D               	movlw	61
  6955  01C3E8  6F31               	movwf	(_R+49)& (0+255),b	;volatile
  6956                           
  6957                           ; BSR set to: 2
  6958                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  6959  01C3EA  0012               	return		;funcret
  6960  01C3EC                     __end_of_update_cal_data:
  6961                           	opt callstack 0
  6962                           
  6963 ;; *************** function _static_soc *****************
  6964 ;; Defined at:
  6965 ;;		line 117 in file "mbmc.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;		None
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;		None
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  1  [STACK] void 
  6972 ;; Registers used:
  6973 ;;		wreg, fsr2l, fsr2h
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/2
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6983 ;;Total ram usage:        0 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:   15
  6986 ;; This function calls:
  6987 ;;		Nothing
  6988 ;; This function is called by:
  6989 ;;		_main
  6990 ;; This function uses a reentrant model
  6991 ;;
  6992                           
  6993                           	psect	text3
  6994  01C288                     __ptext3:
  6995                           	opt callstack 0
  6996  01C288                     _static_soc:
  6997                           	opt callstack 15
  6998                           
  6999                           ;mbmc.c: 119:  C.runtime = 120;
  7000                           
  7001                           ; BSR set to: 2
  7002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7003                           ;incstack = 0
  7004  01C288  0E78               	movlw	120
  7005  01C28A  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
  7006  01C290  0E00               	movlw	0
  7007  01C292  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
  7008                           
  7009                           ;mbmc.c: 120:  C.soc = 100;
  7010  01C298  0E64               	movlw	100
  7011  01C29A  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
  7012  01C2A0  0E00               	movlw	0
  7013  01C2A2  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
  7014                           
  7015                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  7016  01C2A8  EE22  F18B         	lfsr	2,_C+140	;volatile
  7017  01C2AC  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
  7018  01C2B2  006F FF78  F990    	movff	postinc2,_C+145	;volatile
  7019  01C2B8  006F FF78  F991    	movff	postinc2,_C+146	;volatile
  7020  01C2BE  006F FF74  F992    	movff	postdec2,_C+147	;volatile
  7021                           
  7022                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  7023  01C2C4  EE22  F18F         	lfsr	2,_C+144	;volatile
  7024  01C2C8  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  7025  01C2CE  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  7026  01C2D4  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  7027  01C2DA  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  7028                           
  7029                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7030  01C2E0  0012               	return		;funcret
  7031  01C2E2                     __end_of_static_soc:
  7032                           	opt callstack 0
  7033                           
  7034 ;; *************** function _start_switch_handler *****************
  7035 ;; Defined at:
  7036 ;;		line 125 in file "dio.c"
  7037 ;; Parameters:    Size  Location     Type
  7038 ;;		None
  7039 ;; Auto vars:     Size  Location     Type
  7040 ;;		None
  7041 ;; Return value:  Size  Location     Type
  7042 ;;                  1  [STACK] void 
  7043 ;; Registers used:
  7044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7045 ;; Tracked objects:
  7046 ;;		On entry : 3/2
  7047 ;;		On exit  : 3F/39
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7054 ;;Total ram usage:        0 bytes
  7055 ;; Hardware stack levels used:    1
  7056 ;; Hardware stack levels required when called:   16
  7057 ;; This function calls:
  7058 ;;		_INT1_SetInterruptHandler
  7059 ;; This function is called by:
  7060 ;;		_main
  7061 ;; This function uses a reentrant model
  7062 ;;
  7063                           
  7064                           	psect	text4
  7065  01D0B2                     __ptext4:
  7066                           	opt callstack 0
  7067  01D0B2                     _start_switch_handler:
  7068                           	opt callstack 14
  7069                           
  7070                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  7071                           
  7072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7073                           ;incstack = 0
  7074  01D0B2  0139               	movlb	57	; () banked
  7075  01D0B4  9195               	bcf	149,0,b	;volatile
  7076                           
  7077                           ; BSR set to: 57
  7078                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  7079  01D0B6  0E38               	movlw	low _switch_handler
  7080  01D0B8  6EE6               	movwf	postinc1,c
  7081  01D0BA  0E9E               	movlw	high _switch_handler
  7082  01D0BC  6EE6               	movwf	postinc1,c
  7083  01D0BE  0E01               	movlw	low (_switch_handler shr (0+16))
  7084  01D0C0  6EE6               	movwf	postinc1,c
  7085  01D0C2  EC2D  F0E7         	call	_INT1_SetInterruptHandler	;wreg free
  7086                           
  7087                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  7088  01D0C6  0E02               	movlw	2
  7089  01D0C8  0101               	movlb	1	; () banked
  7090  01D0CA  6FEA               	movwf	(_S+35)& (0+255),b	;volatile
  7091                           
  7092                           ; BSR set to: 1
  7093                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  7094  01D0CC  0139               	movlb	57	; () banked
  7095  01D0CE  8195               	bsf	149,0,b	;volatile
  7096                           
  7097                           ; BSR set to: 57
  7098                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7099  01D0D0  0012               	return		;funcret
  7100  01D0D2                     __end_of_start_switch_handler:
  7101                           	opt callstack 0
  7102                           
  7103 ;; *************** function _srand *****************
  7104 ;; Defined at:
  7105 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  s               2  [STACK] unsigned int 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;		None
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  1  [STACK] void 
  7112 ;; Registers used:
  7113 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 3F/1
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7123 ;;Total ram usage:        0 bytes
  7124 ;; Hardware stack levels used:    1
  7125 ;; Hardware stack levels required when called:   15
  7126 ;; This function calls:
  7127 ;;		Nothing
  7128 ;; This function is called by:
  7129 ;;		_main
  7130 ;; This function uses a reentrant model
  7131 ;;
  7132                           
  7133                           	psect	text5
  7134  01CA46                     __ptext5:
  7135                           	opt callstack 0
  7136  01CA46                     _srand:
  7137                           	opt callstack 15
  7138                           
  7139                           ;stkvar	_s @ sp[(0)+-2]
  7140                           
  7141                           ; BSR set to: 57
  7142                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7143                           ;incstack = 0
  7144  01CA46  0EFE               	movlw	-2
  7145  01CA48  50E3               	movf	plusw1,w,c
  7146  01CA4A  0FFF               	addlw	255
  7147  01CA4C  6E0B               	movwf	(btemp+10)^0,c
  7148  01CA4E  0EFF               	movlw	-1
  7149  01CA50  006F FF8C  F00C    	movff	plusw1,btemp+11
  7150  01CA56  0EFF               	movlw	255
  7151  01CA58  220C               	addwfc	(btemp+11)^0,f,c
  7152  01CA5A  0060  F02C  F1F0   	movff	btemp+10,_seed
  7153  01CA60  0060  F030  F1F1   	movff	btemp+11,_seed+1
  7154  01CA66  0101               	movlb	1	; () banked
  7155  01CA68  6BF2               	clrf	(_seed+2)& (0+255),b
  7156  01CA6A  6BF3               	clrf	(_seed+3)& (0+255),b
  7157  01CA6C  6BF4               	clrf	(_seed+4)& (0+255),b
  7158  01CA6E  6BF5               	clrf	(_seed+5)& (0+255),b
  7159  01CA70  6BF6               	clrf	(_seed+6)& (0+255),b
  7160  01CA72  6BF7               	clrf	(_seed+7)& (0+255),b
  7161                           
  7162                           ; BSR set to: 1
  7163                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  7164  01CA74  52E5               	movf	postdec1,f,c
  7165  01CA76  52E5               	movf	postdec1,f,c
  7166  01CA78  0012               	return		;funcret
  7167  01CA7A                     __end_of_srand:
  7168                           	opt callstack 0
  7169                           
  7170 ;; *************** function _set_dac_b *****************
  7171 ;; Defined at:
  7172 ;;		line 306 in file "daq.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;  voltage         4  [STACK] const float 
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;		None
  7177 ;; Return value:  Size  Location     Type
  7178 ;;                  2  [STACK] unsigned short 
  7179 ;; Registers used:
  7180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7181 ;; Tracked objects:
  7182 ;;		On entry : 0/0
  7183 ;;		On exit  : 0/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7190 ;;Total ram usage:        0 bytes
  7191 ;; Hardware stack levels used:    1
  7192 ;; Hardware stack levels required when called:   17
  7193 ;; This function calls:
  7194 ;;		_convert_dac_raw
  7195 ;; This function is called by:
  7196 ;;		_main
  7197 ;; This function uses a reentrant model
  7198 ;;
  7199                           
  7200                           	psect	text6
  7201  01CA7A                     __ptext6:
  7202                           	opt callstack 0
  7203  01CA7A                     _set_dac_b:
  7204                           	opt callstack 13
  7205                           
  7206                           ;daq.c: 306: uint16_t set_dac_b(const float voltage);daq.c: 307: {;daq.c: 308:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  7207                           ;stkvar	_voltage @ sp[(0)+-4]
  7208                           
  7209                           ; BSR set to: 1
  7210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7211                           ;incstack = 0
  7212  01CA7A  0EFC               	movlw	-4
  7213  01CA7C  006F FF8F FFE6     	movff	plusw1,postinc1
  7214  01CA82  006F FF8F FFE6     	movff	plusw1,postinc1
  7215  01CA88  006F FF8F FFE6     	movff	plusw1,postinc1
  7216  01CA8E  006F FF8F FFE6     	movff	plusw1,postinc1
  7217  01CA94  ECA4  F0D2         	call	_convert_dac_raw	;wreg free
  7218  01CA98  0060  F004  F222   	movff	btemp,_R+34	;volatile
  7219  01CA9E  0060  F008  F223   	movff	btemp+1,_R+35	;volatile
  7220                           
  7221                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7222                           
  7223                           ;daq.c: 309:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  7224  01CAA4  52E5               	movf	postdec1,f,c
  7225  01CAA6  52E5               	movf	postdec1,f,c
  7226  01CAA8  52E5               	movf	postdec1,f,c
  7227  01CAAA  52E5               	movf	postdec1,f,c
  7228  01CAAC  0012               	return		;funcret
  7229  01CAAE                     __end_of_set_dac_b:
  7230                           	opt callstack 0
  7231                           
  7232 ;; *************** function _set_dac_a *****************
  7233 ;; Defined at:
  7234 ;;		line 297 in file "daq.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  voltage         4  [STACK] const float 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;		None
  7239 ;; Return value:  Size  Location     Type
  7240 ;;                  2  [STACK] unsigned short 
  7241 ;; Registers used:
  7242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7243 ;; Tracked objects:
  7244 ;;		On entry : 3F/0
  7245 ;;		On exit  : 0/0
  7246 ;;		Unchanged: 0/0
  7247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7252 ;;Total ram usage:        0 bytes
  7253 ;; Hardware stack levels used:    1
  7254 ;; Hardware stack levels required when called:   17
  7255 ;; This function calls:
  7256 ;;		_convert_dac_raw
  7257 ;; This function is called by:
  7258 ;;		_main
  7259 ;; This function uses a reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text7
  7263  01CAAE                     __ptext7:
  7264                           	opt callstack 0
  7265  01CAAE                     _set_dac_a:
  7266                           	opt callstack 13
  7267                           
  7268                           ;daq.c: 297: uint16_t set_dac_a(const float voltage);daq.c: 298: {;daq.c: 299:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  7269                           ;stkvar	_voltage @ sp[(0)+-4]
  7270                           
  7271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7272                           ;incstack = 0
  7273  01CAAE  0EFC               	movlw	-4
  7274  01CAB0  006F FF8F FFE6     	movff	plusw1,postinc1
  7275  01CAB6  006F FF8F FFE6     	movff	plusw1,postinc1
  7276  01CABC  006F FF8F FFE6     	movff	plusw1,postinc1
  7277  01CAC2  006F FF8F FFE6     	movff	plusw1,postinc1
  7278  01CAC8  ECA4  F0D2         	call	_convert_dac_raw	;wreg free
  7279  01CACC  0060  F004  F220   	movff	btemp,_R+32	;volatile
  7280  01CAD2  0060  F008  F221   	movff	btemp+1,_R+33	;volatile
  7281                           
  7282                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7283                           
  7284                           ;daq.c: 300:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  7285  01CAD8  52E5               	movf	postdec1,f,c
  7286  01CADA  52E5               	movf	postdec1,f,c
  7287  01CADC  52E5               	movf	postdec1,f,c
  7288  01CADE  52E5               	movf	postdec1,f,c
  7289  01CAE0  0012               	return		;funcret
  7290  01CAE2                     __end_of_set_dac_a:
  7291                           	opt callstack 0
  7292                           
  7293 ;; *************** function _convert_dac_raw *****************
  7294 ;; Defined at:
  7295 ;;		line 279 in file "daq.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;  voltage         4  [STACK] float 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;		None
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  2  [STACK] unsigned short 
  7302 ;; Registers used:
  7303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7313 ;;Total ram usage:        0 bytes
  7314 ;; Hardware stack levels used:    1
  7315 ;; Hardware stack levels required when called:   16
  7316 ;; This function calls:
  7317 ;;		___fldiv
  7318 ;;		___flge
  7319 ;;		___fltol
  7320 ;; This function is called by:
  7321 ;;		_set_dac_a
  7322 ;;		_set_dac_b
  7323 ;; This function uses a reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text8
  7327  01A548                     __ptext8:
  7328                           	opt callstack 0
  7329  01A548                     _convert_dac_raw:
  7330                           	opt callstack 13
  7331                           
  7332                           ;daq.c: 279: static uint16_t convert_dac_raw(float voltage);daq.c: 280: {;daq.c: 284:  i
      +                          f (voltage < 0.001)
  7333                           
  7334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7335                           ;incstack = 0
  7336  01A548  0E6F               	movlw	111
  7337  01A54A  6EE6               	movwf	postinc1,c
  7338  01A54C  0E12               	movlw	18
  7339  01A54E  6EE6               	movwf	postinc1,c
  7340  01A550  0E83               	movlw	131
  7341  01A552  6EE6               	movwf	postinc1,c
  7342  01A554  0E3A               	movlw	58
  7343  01A556  6EE6               	movwf	postinc1,c
  7344                           
  7345                           ;stkvar	_voltage @ sp[(-4)+-4]
  7346  01A558  0EF8               	movlw	-8
  7347  01A55A  006F FF8F FFE6     	movff	plusw1,postinc1
  7348  01A560  006F FF8F FFE6     	movff	plusw1,postinc1
  7349  01A566  006F FF8F FFE6     	movff	plusw1,postinc1
  7350  01A56C  006F FF8F FFE6     	movff	plusw1,postinc1
  7351  01A572  EC67  F0CC         	call	___flge	;wreg free
  7352  01A576  B001               	btfsc	btemp& (0+255),0,c
  7353  01A578  D018               	goto	l11534
  7354                           
  7355                           ;daq.c: 285:   voltage = 0.001;
  7356  01A57A  0E6F               	movlw	111
  7357  01A57C  6E09               	movwf	(btemp+8)^0,c
  7358  01A57E  0E12               	movlw	18
  7359  01A580  6E0A               	movwf	(btemp+9)^0,c
  7360  01A582  0E83               	movlw	131
  7361  01A584  6E0B               	movwf	(btemp+10)^0,c
  7362  01A586  0E3A               	movlw	58
  7363  01A588  6E0C               	movwf	(btemp+11)^0,c
  7364                           
  7365                           ;stkvar	_voltage @ sp[(0)+-4]
  7366  01A58A  0EFC               	movlw	-4
  7367  01A58C  0060  F027  FFE3   	movff	btemp+8,plusw1
  7368  01A592  0EFD               	movlw	-3
  7369  01A594  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7370  01A59A  0EFE               	movlw	-2
  7371  01A59C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7372  01A5A2  0EFF               	movlw	-1
  7373  01A5A4  0060  F033  FFE3   	movff	btemp+11,plusw1
  7374  01A5AA                     l11534:
  7375                           
  7376                           ;daq.c: 286:  if (voltage > 10.0)
  7377                           ;stkvar	_voltage @ sp[(0)+-4]
  7378  01A5AA  0EFC               	movlw	-4
  7379  01A5AC  006F FF8F FFE6     	movff	plusw1,postinc1
  7380  01A5B2  006F FF8F FFE6     	movff	plusw1,postinc1
  7381  01A5B8  006F FF8F FFE6     	movff	plusw1,postinc1
  7382  01A5BE  006F FF8F FFE6     	movff	plusw1,postinc1
  7383  01A5C4  0E00               	movlw	0
  7384  01A5C6  6EE6               	movwf	postinc1,c
  7385  01A5C8  0E00               	movlw	0
  7386  01A5CA  6EE6               	movwf	postinc1,c
  7387  01A5CC  0E20               	movlw	32
  7388  01A5CE  6EE6               	movwf	postinc1,c
  7389  01A5D0  0E41               	movlw	65
  7390  01A5D2  6EE6               	movwf	postinc1,c
  7391  01A5D4  EC67  F0CC         	call	___flge	;wreg free
  7392  01A5D8  B001               	btfsc	btemp& (0+255),0,c
  7393  01A5DA  D018               	goto	l11538
  7394                           
  7395                           ;daq.c: 287:   voltage = 10.0;
  7396  01A5DC  0E00               	movlw	0
  7397  01A5DE  6E09               	movwf	(btemp+8)^0,c
  7398  01A5E0  0E00               	movlw	0
  7399  01A5E2  6E0A               	movwf	(btemp+9)^0,c
  7400  01A5E4  0E20               	movlw	32
  7401  01A5E6  6E0B               	movwf	(btemp+10)^0,c
  7402  01A5E8  0E41               	movlw	65
  7403  01A5EA  6E0C               	movwf	(btemp+11)^0,c
  7404                           
  7405                           ;stkvar	_voltage @ sp[(0)+-4]
  7406  01A5EC  0EFC               	movlw	-4
  7407  01A5EE  0060  F027  FFE3   	movff	btemp+8,plusw1
  7408  01A5F4  0EFD               	movlw	-3
  7409  01A5F6  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7410  01A5FC  0EFE               	movlw	-2
  7411  01A5FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7412  01A604  0EFF               	movlw	-1
  7413  01A606  0060  F033  FFE3   	movff	btemp+11,plusw1
  7414  01A60C                     l11538:
  7415                           
  7416                           ;daq.c: 291:  return(uint16_t) (voltage / 0.002442);
  7417  01A60C  0EF6               	movlw	246
  7418  01A60E  6EE6               	movwf	postinc1,c
  7419  01A610  0E09               	movlw	9
  7420  01A612  6EE6               	movwf	postinc1,c
  7421  01A614  0E20               	movlw	32
  7422  01A616  6EE6               	movwf	postinc1,c
  7423  01A618  0E3B               	movlw	59
  7424  01A61A  6EE6               	movwf	postinc1,c
  7425                           
  7426                           ;stkvar	_voltage @ sp[(-4)+-4]
  7427  01A61C  0EF8               	movlw	-8
  7428  01A61E  006F FF8F FFE6     	movff	plusw1,postinc1
  7429  01A624  006F FF8F FFE6     	movff	plusw1,postinc1
  7430  01A62A  006F FF8F FFE6     	movff	plusw1,postinc1
  7431  01A630  006F FF8F FFE6     	movff	plusw1,postinc1
  7432  01A636  EC6B  F0A7         	call	___fldiv	;wreg free
  7433  01A63A  0060  F007  FFE6   	movff	btemp,postinc1
  7434  01A640  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7435  01A646  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7436  01A64C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7437  01A652  ECAE  F0CB         	call	___fltol	;wreg free
  7438                           
  7439                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  7440  01A656  52E5               	movf	postdec1,f,c
  7441  01A658  52E5               	movf	postdec1,f,c
  7442  01A65A  52E5               	movf	postdec1,f,c
  7443  01A65C  52E5               	movf	postdec1,f,c
  7444  01A65E  0012               	return		;funcret
  7445  01A660                     __end_of_convert_dac_raw:
  7446                           	opt callstack 0
  7447                           
  7448 ;; *************** function _set_dac *****************
  7449 ;; Defined at:
  7450 ;;		line 255 in file "daq.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;		None
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;		None
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  1  [STACK] void 
  7457 ;; Registers used:
  7458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7468 ;;Total ram usage:        0 bytes
  7469 ;; Hardware stack levels used:    1
  7470 ;; Hardware stack levels required when called:   16
  7471 ;; This function calls:
  7472 ;;		_SPI1_Exchange8bit
  7473 ;;		_dac_spi_control
  7474 ;; This function is called by:
  7475 ;;		_main
  7476 ;; This function uses a reentrant model
  7477 ;;
  7478                           
  7479                           	psect	text9
  7480  01B2D0                     __ptext9:
  7481                           	opt callstack 0
  7482  01B2D0                     _set_dac:
  7483                           	opt callstack 14
  7484                           
  7485                           ;daq.c: 257:  while (!SPI1STATUSbits.TXBE);
  7486                           
  7487                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7488                           ;incstack = 0
  7489  01B2D0  013D               	movlb	61	; () banked
  7490  01B2D2  AB17               	btfss	23,5,b	;volatile
  7491  01B2D4  D7FD               	goto	_set_dac
  7492                           
  7493                           ; BSR set to: 61
  7494                           
  7495                           ;daq.c: 258:  do { LATCbits.LATC2 = 1; } while(0);
  7496  01B2D6  84BC               	bsf	188,2,c	;volatile
  7497                           
  7498                           ; BSR set to: 61
  7499                           
  7500                           ;daq.c: 259:  do { LATCbits.LATC0 = 1; } while(0);
  7501  01B2D8  80BC               	bsf	188,0,c	;volatile
  7502                           
  7503                           ; BSR set to: 61
  7504                           ;daq.c: 260:  dac_spi_control(1);
  7505  01B2DA  0E01               	movlw	1
  7506  01B2DC  6EE6               	movwf	postinc1,c
  7507  01B2DE  ECCA  F0DE         	call	_dac_spi_control	;wreg free
  7508                           
  7509                           ;daq.c: 261:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  7510  01B2E2  C220  F224         	movff	_R+32,_R+36	;volatile
  7511                           
  7512                           ;daq.c: 262:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  7513  01B2E6  EE20  F220         	lfsr	2,_R+32	;volatile
  7514  01B2EA  006F FF78  F00B    	movff	postinc2,btemp+10
  7515  01B2F0  006F FF74  F00C    	movff	postdec2,btemp+11
  7516  01B2F6  0060  F030  F00B   	movff	btemp+11,btemp+10
  7517  01B2FC  6A0C               	clrf	(btemp+11)^0,c
  7518  01B2FE  0E0F               	movlw	15
  7519  01B300  160B               	andwf	(btemp+10)^0,f,c
  7520  01B302  0102               	movlb	2	; () banked
  7521  01B304  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  7522  01B306  180B               	xorwf	(btemp+10)^0,w,c
  7523  01B308  0BF0               	andlw	-16
  7524  01B30A  180B               	xorwf	(btemp+10)^0,w,c
  7525  01B30C  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  7526                           
  7527                           ; BSR set to: 2
  7528                           ;daq.c: 263:  R.max5322_cmd.map.cont = 0b0100;
  7529  01B30E  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  7530  01B310  0B0F               	andlw	-241
  7531  01B312  0940               	iorlw	64
  7532  01B314  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  7533                           
  7534                           ; BSR set to: 2
  7535  01B316  90BF               	bcf	191,0,c	;volatile
  7536                           
  7537                           ; BSR set to: 2
  7538                           ;daq.c: 265:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7539  01B318  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  7540  01B31A  6EE6               	movwf	postinc1,c
  7541  01B31C  EC79  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7542                           
  7543                           ; BSR set to: 57
  7544                           ;daq.c: 266:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7545  01B320  0102               	movlb	2	; () banked
  7546  01B322  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  7547  01B324  6EE6               	movwf	postinc1,c
  7548  01B326  EC79  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7549                           
  7550                           ; BSR set to: 57
  7551  01B32A  80BF               	bsf	191,0,c	;volatile
  7552                           
  7553                           ; BSR set to: 57
  7554                           ;daq.c: 268:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  7555  01B32C  C222  F224         	movff	_R+34,_R+36	;volatile
  7556                           
  7557                           ; BSR set to: 57
  7558                           ;daq.c: 269:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  7559  01B330  EE20  F222         	lfsr	2,_R+34	;volatile
  7560  01B334  006F FF78  F00B    	movff	postinc2,btemp+10
  7561  01B33A  006F FF74  F00C    	movff	postdec2,btemp+11
  7562  01B340  0060  F030  F00B   	movff	btemp+11,btemp+10
  7563  01B346  6A0C               	clrf	(btemp+11)^0,c
  7564  01B348  0E0F               	movlw	15
  7565  01B34A  160B               	andwf	(btemp+10)^0,f,c
  7566  01B34C  0102               	movlb	2	; () banked
  7567  01B34E  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  7568  01B350  180B               	xorwf	(btemp+10)^0,w,c
  7569  01B352  0BF0               	andlw	-16
  7570  01B354  180B               	xorwf	(btemp+10)^0,w,c
  7571  01B356  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  7572                           
  7573                           ; BSR set to: 2
  7574                           ;daq.c: 270:  R.max5322_cmd.map.cont = 0b0101;
  7575  01B358  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  7576  01B35A  0B0F               	andlw	-241
  7577  01B35C  0950               	iorlw	80
  7578  01B35E  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  7579                           
  7580                           ; BSR set to: 2
  7581  01B360  90BF               	bcf	191,0,c	;volatile
  7582                           
  7583                           ; BSR set to: 2
  7584                           ;daq.c: 272:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7585  01B362  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  7586  01B364  6EE6               	movwf	postinc1,c
  7587  01B366  EC79  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7588                           
  7589                           ; BSR set to: 57
  7590                           ;daq.c: 273:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7591  01B36A  0102               	movlb	2	; () banked
  7592  01B36C  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  7593  01B36E  6EE6               	movwf	postinc1,c
  7594  01B370  EC79  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7595  01B374                     l2006:
  7596  01B374  013D               	movlb	61	; () banked
  7597  01B376  AB17               	btfss	23,5,b	;volatile
  7598  01B378  D7FD               	goto	l2006
  7599                           
  7600                           ; BSR set to: 61
  7601                           
  7602                           ;daq.c: 275:  do { LATFbits.LATF0 = 1; } while(0);
  7603  01B37A  80BF               	bsf	191,0,c	;volatile
  7604                           
  7605                           ; BSR set to: 61
  7606                           ;daq.c: 276:  dac_spi_control(0);
  7607  01B37C  0E00               	movlw	0
  7608  01B37E  6EE6               	movwf	postinc1,c
  7609  01B380  ECCA  F0DE         	call	_dac_spi_control	;wreg free
  7610                           
  7611                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  7612  01B384  0012               	return		;funcret
  7613  01B386                     __end_of_set_dac:
  7614                           	opt callstack 0
  7615                           
  7616 ;; *************** function _dac_spi_control *****************
  7617 ;; Defined at:
  7618 ;;		line 207 in file "daq.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;  set             1  [STACK] _Bool 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;		None
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  1  [STACK] void 
  7625 ;; Registers used:
  7626 ;;		wreg, fsr1l, fsr1h, status,2
  7627 ;; Tracked objects:
  7628 ;;		On entry : 3F/3D
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7636 ;;Total ram usage:        0 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:   15
  7639 ;; This function calls:
  7640 ;;		Nothing
  7641 ;; This function is called by:
  7642 ;;		_set_dac
  7643 ;; This function uses a reentrant model
  7644 ;;
  7645                           
  7646                           	psect	text10
  7647  01BD94                     __ptext10:
  7648                           	opt callstack 0
  7649  01BD94                     _dac_spi_control:
  7650                           	opt callstack 14
  7651                           
  7652                           ;daq.c: 207: void dac_spi_control(_Bool set);daq.c: 208: {;daq.c: 209:  static _Bool ini
      +                          t = 0;;daq.c: 210:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 212:  if (set) {
  7653                           ;stkvar	_set @ sp[(0)+-1]
  7654                           
  7655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7656                           ;incstack = 0
  7657  01BD94  0EFF               	movlw	-1
  7658  01BD96  50E3               	movf	plusw1,w,c
  7659  01BD98  B4D8               	btfsc	status,2,c
  7660  01BD9A  D022               	goto	l11526
  7661                           
  7662                           ;daq.c: 213:   SPI1CON0bits.EN = 0;
  7663  01BD9C  013D               	movlb	61	; () banked
  7664  01BD9E  9F14               	bcf	20,7,b	;volatile
  7665                           
  7666                           ; BSR set to: 61
  7667                           ;daq.c: 214:   if (!init) {
  7668  01BDA0  5043               	movf	dac_spi_control@init^0,w,c
  7669  01BDA2  A4D8               	btfss	status,2,c
  7670  01BDA4  D011               	goto	l11514
  7671                           
  7672                           ; BSR set to: 61
  7673                           ;daq.c: 215:    init = 1;
  7674  01BDA6  0E01               	movlw	1
  7675  01BDA8  6E43               	movwf	dac_spi_control@init^0,c
  7676                           
  7677                           ; BSR set to: 61
  7678                           ;daq.c: 216:    S0 = SPI1CON0;
  7679  01BDAA  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7680                           
  7681                           ; BSR set to: 61
  7682                           ;daq.c: 217:    S1 = SPI1CON1;
  7683  01BDB0  006F F454  F0CE    	movff	15637,dac_spi_control@S1	;volatile
  7684                           
  7685                           ; BSR set to: 61
  7686                           ;daq.c: 218:    S2 = SPI1CON2;
  7687  01BDB6  006F F458  F0CD    	movff	15638,dac_spi_control@S2	;volatile
  7688                           
  7689                           ; BSR set to: 61
  7690                           ;daq.c: 219:    SC = SPI1CLK;
  7691  01BDBC  006F F470  F0CC    	movff	15644,dac_spi_control@SC	;volatile
  7692                           
  7693                           ; BSR set to: 61
  7694                           ;daq.c: 220:    SB = SPI1BAUD;
  7695  01BDC2  006F F464  F0CB    	movff	15641,dac_spi_control@SB	;volatile
  7696  01BDC8                     l11514:
  7697                           
  7698                           ; BSR set to: 61
  7699                           ;daq.c: 226:   SPI1CON1 = 0x00;
  7700  01BDC8  6B15               	clrf	21,b	;volatile
  7701                           
  7702                           ; BSR set to: 61
  7703                           ;daq.c: 227:   SPI1CON1bits.CKE = 1;
  7704  01BDCA  8D15               	bsf	21,6,b	;volatile
  7705                           
  7706                           ; BSR set to: 61
  7707                           ;daq.c: 228:   SPI1CON1bits.CKP = 0;
  7708  01BDCC  9B15               	bcf	21,5,b	;volatile
  7709                           
  7710                           ; BSR set to: 61
  7711                           ;daq.c: 229:   SPI1CON1bits.SMP = 0;
  7712  01BDCE  9F15               	bcf	21,7,b	;volatile
  7713                           
  7714                           ;daq.c: 231:   SPI1CON2 = 0x03;
  7715  01BDD0  0E03               	movlw	3
  7716  01BDD2  6F16               	movwf	22,b	;volatile
  7717                           
  7718                           ;daq.c: 233:   SPI1BAUD = 0x0f;
  7719  01BDD4  0E0F               	movlw	15
  7720  01BDD6  6F19               	movwf	25,b	;volatile
  7721                           
  7722                           ; BSR set to: 61
  7723                           ;daq.c: 235:   SPI1CLK = 0x00;
  7724  01BDD8  6B1C               	clrf	28,b	;volatile
  7725                           
  7726                           ;daq.c: 237:   SPI1CON0 = 0x83;
  7727  01BDDA  0E83               	movlw	131
  7728  01BDDC  6F14               	movwf	20,b	;volatile
  7729  01BDDE  D014               	goto	L3
  7730  01BDE0                     l11526:
  7731                           
  7732                           ;daq.c: 240:   if (init) {
  7733  01BDE0  5043               	movf	dac_spi_control@init^0,w,c
  7734  01BDE2  B4D8               	btfsc	status,2,c
  7735  01BDE4  D012               	goto	l1990
  7736                           
  7737                           ;daq.c: 244:    SPI1CON0bits.EN = 0;
  7738  01BDE6  013D               	movlb	61	; () banked
  7739  01BDE8  9F14               	bcf	20,7,b	;volatile
  7740                           
  7741                           ;daq.c: 245:    SPI1CON1 = S1;
  7742  01BDEA  0060  F33B  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7743                           
  7744                           ;daq.c: 246:    SPI1CON2 = S2;
  7745  01BDF0  0060  F337  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7746                           
  7747                           ;daq.c: 247:    SPI1CLK = SC;
  7748  01BDF6  0060  F333  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7749                           
  7750                           ;daq.c: 248:    SPI1BAUD = SB;
  7751  01BDFC  0060  F32F  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7752                           
  7753                           ;daq.c: 249:    SPI1CON0 = S0;
  7754  01BE02  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7755  01BE08                     L3:
  7756                           
  7757                           ;daq.c: 250:    SPI1CON0bits.EN = 1;
  7758  01BE08  8F14               	bsf	20,7,b	;volatile
  7759  01BE0A                     l1990:
  7760                           
  7761                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7762  01BE0A  52E5               	movf	postdec1,f,c
  7763  01BE0C  0012               	return		;funcret
  7764  01BE0E                     __end_of_dac_spi_control:
  7765                           	opt callstack 0
  7766                           
  7767 ;; *************** function _read_cal_data *****************
  7768 ;; Defined at:
  7769 ;;		line 368 in file "daq.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;		None
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;  x               2  [STACK] unsigned short 
  7774 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  7775 ;;		 -> r_cal(167), 
  7776 ;;  y               2  [STACK] unsigned short 
  7777 ;;  crcVal_save     1  [STACK] unsigned char 
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  1  [STACK] _Bool 
  7780 ;; Registers used:
  7781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/39
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7791 ;;Total ram usage:        0 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:   17
  7794 ;; This function calls:
  7795 ;;		_CRC_8BitDataWrite
  7796 ;;		_CRC_CalculatedResultGet
  7797 ;;		_CRC_Initialize
  7798 ;;		_CRC_IsBusy
  7799 ;;		_CRC_Start
  7800 ;;		_DATAEE_ReadByte
  7801 ;; This function is called by:
  7802 ;;		_main
  7803 ;; This function uses a reentrant model
  7804 ;;
  7805                           
  7806                           	psect	text11
  7807  018C28                     __ptext11:
  7808                           	opt callstack 0
  7809  018C28                     _read_cal_data:
  7810                           	opt callstack 0
  7811                           
  7812                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7813  018C28  0E07               	movlw	7
  7814  018C2A  26E1               	addwf	fsr1l,f,c
  7815  018C2C  0E00               	movlw	0
  7816  018C2E  22E2               	addwfc	fsr1h,f,c
  7817                           
  7818                           ;daq.c: 370:  uint16_t x = 0, y;
  7819                           ;stkvar	_x @ sp[(-7)+0]
  7820                           
  7821                           ;incstack = 0
  7822  018C30  0EF9               	movlw	-7
  7823  018C32  6AE3               	clrf	plusw1,c
  7824  018C34  0EFA               	movlw	-6
  7825  018C36  6AE3               	clrf	plusw1,c
  7826                           
  7827                           ;daq.c: 371:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 373:  y = sizeof(r_cal);
  7828  018C38  0EA7               	movlw	167
  7829  018C3A  6E0B               	movwf	(btemp+10)^0,c
  7830  018C3C  0E00               	movlw	0
  7831  018C3E  6E0C               	movwf	(btemp+11)^0,c
  7832                           
  7833                           ;stkvar	_y @ sp[(-7)+4]
  7834  018C40  0EFD               	movlw	-3
  7835  018C42  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7836  018C48  0EFE               	movlw	-2
  7837  018C4A  0060  F033  FFE3   	movff	btemp+11,plusw1
  7838                           
  7839                           ;daq.c: 374:  r_cal_ptr = (uint8_t*) & r_cal;
  7840                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7841  018C50  0E04               	movlw	high _r_cal
  7842  018C52  6E01               	movwf	btemp^0,c
  7843  018C54  0EFC               	movlw	-4
  7844  018C56  0060  F007  FFE3   	movff	btemp,plusw1
  7845  018C5C  0E00               	movlw	low _r_cal
  7846  018C5E  6E01               	movwf	btemp^0,c
  7847  018C60  0EFB               	movlw	-5
  7848  018C62  0060  F007  FFE3   	movff	btemp,plusw1
  7849                           
  7850                           ;daq.c: 376:  CRC_Initialize();
  7851  018C68  EC38  F0DD         	call	_CRC_Initialize	;wreg free
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;daq.c: 379:  CRC_Start();
  7855  018C6C  ECB6  F0E9         	call	_CRC_Start	;wreg free
  7856  018C70                     l11960:
  7857                           
  7858                           ;daq.c: 382:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  7859                           ;stkvar	_x @ sp[(-7)+0]
  7860  018C70  0EF9               	movlw	-7
  7861  018C72  006F FF8F FFE6     	movff	plusw1,postinc1
  7862  018C78  006F FF8F FFE6     	movff	plusw1,postinc1
  7863  018C7E  ECA5  F0E5         	call	_DATAEE_ReadByte	;wreg free
  7864                           
  7865                           ;stkvar	_x @ sp[(-7)+0]
  7866  018C82  0EF9               	movlw	-7
  7867  018C84  006F FF8C  F00B    	movff	plusw1,btemp+10
  7868  018C8A  0EFA               	movlw	-6
  7869  018C8C  006F FF8C  F00C    	movff	plusw1,btemp+11
  7870                           
  7871                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7872  018C92  0EFB               	movlw	-5
  7873  018C94  006F FF8C  F009    	movff	plusw1,btemp+8
  7874  018C9A  0EFC               	movlw	-4
  7875  018C9C  006F FF8C  F00A    	movff	plusw1,btemp+9
  7876  018CA2  500B               	movf	(btemp+10)^0,w,c
  7877  018CA4  2409               	addwf	(btemp+8)^0,w,c
  7878  018CA6  6ED9               	movwf	fsr2l,c
  7879  018CA8  500C               	movf	(btemp+11)^0,w,c
  7880  018CAA  200A               	addwfc	(btemp+9)^0,w,c
  7881  018CAC  6EDA               	movwf	fsr2h,c
  7882  018CAE  0060  F007  FFDF   	movff	btemp,indf2
  7883                           
  7884                           ;daq.c: 383:  } while (++x < y);
  7885                           ;stkvar	_y @ sp[(-7)+4]
  7886  018CB4  0EFD               	movlw	-3
  7887  018CB6  006F FF8C  F00B    	movff	plusw1,btemp+10
  7888  018CBC  0EFE               	movlw	-2
  7889  018CBE  006F FF8C  F00C    	movff	plusw1,btemp+11
  7890                           
  7891                           ;stkvar	_x @ sp[(-7)+0]
  7892  018CC4  0EF9               	movlw	-7
  7893  018CC6  50E3               	movf	plusw1,w,c
  7894  018CC8  0F01               	addlw	1
  7895  018CCA  6E01               	movwf	btemp^0,c
  7896  018CCC  0EF9               	movlw	-7
  7897  018CCE  0060  F007  FFE3   	movff	btemp,plusw1
  7898  018CD4  6A01               	clrf	btemp^0,c
  7899  018CD6  0EFA               	movlw	-6
  7900  018CD8  50E3               	movf	plusw1,w,c
  7901  018CDA  2001               	addwfc	btemp^0,w,c
  7902  018CDC  6E01               	movwf	btemp^0,c
  7903  018CDE  0EFA               	movlw	-6
  7904  018CE0  0060  F007  FFE3   	movff	btemp,plusw1
  7905  018CE6  0EF9               	movlw	-7
  7906  018CE8  006F FF8C  F009    	movff	plusw1,btemp+8
  7907  018CEE  0EFA               	movlw	-6
  7908  018CF0  006F FF8C  F00A    	movff	plusw1,btemp+9
  7909  018CF6  500B               	movf	(btemp+10)^0,w,c
  7910  018CF8  5C09               	subwf	(btemp+8)^0,w,c
  7911  018CFA  500C               	movf	(btemp+11)^0,w,c
  7912  018CFC  580A               	subwfb	(btemp+9)^0,w,c
  7913  018CFE  A0D8               	btfss	status,0,c
  7914  018D00  D7B7               	goto	l11960
  7915                           
  7916                           ;daq.c: 384:  crcVal_save = r_cal.crc;
  7917                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  7918  018D02  0EFF               	movlw	-1
  7919  018D04  0061  F29B  FFE3   	movff	_r_cal+166,plusw1
  7920                           
  7921                           ;daq.c: 386:  if (r_cal.checkmark == 0x1957) {
  7922  018D0A  0E57               	movlw	87
  7923  018D0C  0104               	movlb	4	; () banked
  7924  018D0E  19A4               	xorwf	(_r_cal+164)& (0+255),w,b
  7925  018D10  E163               	bnz	l11980
  7926  018D12  0E19               	movlw	25
  7927  018D14  19A5               	xorwf	(_r_cal+165)& (0+255),w,b
  7928  018D16  A4D8               	btfss	status,2,c
  7929  018D18  D05F               	goto	u11030
  7930                           
  7931                           ; BSR set to: 4
  7932                           ;daq.c: 387:   r_cal.crc = 0x42;
  7933  018D1A  0E42               	movlw	66
  7934  018D1C  6FA6               	movwf	(_r_cal+166)& (0+255),b
  7935                           
  7936                           ; BSR set to: 4
  7937                           ;daq.c: 388:   x = 0;
  7938                           ;stkvar	_x @ sp[(-7)+0]
  7939  018D1E  0EF9               	movlw	-7
  7940  018D20  6AE3               	clrf	plusw1,c
  7941  018D22  0EFA               	movlw	-6
  7942  018D24  6AE3               	clrf	plusw1,c
  7943  018D26                     l11972:
  7944                           
  7945                           ;daq.c: 391:    CRC_8BitDataWrite(r_cal_ptr[x]);
  7946                           ;stkvar	_x @ sp[(-7)+0]
  7947  018D26  0EF9               	movlw	-7
  7948  018D28  006F FF8C  F00B    	movff	plusw1,btemp+10
  7949  018D2E  0EFA               	movlw	-6
  7950  018D30  006F FF8C  F00C    	movff	plusw1,btemp+11
  7951                           
  7952                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7953  018D36  0EFB               	movlw	-5
  7954  018D38  006F FF8C  F009    	movff	plusw1,btemp+8
  7955  018D3E  0EFC               	movlw	-4
  7956  018D40  006F FF8C  F00A    	movff	plusw1,btemp+9
  7957  018D46  500B               	movf	(btemp+10)^0,w,c
  7958  018D48  2409               	addwf	(btemp+8)^0,w,c
  7959  018D4A  6ED9               	movwf	fsr2l,c
  7960  018D4C  500C               	movf	(btemp+11)^0,w,c
  7961  018D4E  200A               	addwfc	(btemp+9)^0,w,c
  7962  018D50  6EDA               	movwf	fsr2h,c
  7963  018D52  50DF               	movf	indf2,w,c
  7964  018D54  6EE6               	movwf	postinc1,c
  7965  018D56  EC22  F0E9         	call	_CRC_8BitDataWrite	;wreg free
  7966  018D5A                     l11974:
  7967  018D5A  EC44  F0E9         	call	_CRC_IsBusy	;wreg free
  7968  018D5E  5001               	movf	btemp^0,w,c
  7969  018D60  A4D8               	btfss	status,2,c
  7970  018D62  D7FB               	goto	l11974
  7971                           
  7972                           ;daq.c: 393:   } while (++x < y);
  7973                           ;stkvar	_y @ sp[(-7)+4]
  7974  018D64  0EFD               	movlw	-3
  7975  018D66  006F FF8C  F00B    	movff	plusw1,btemp+10
  7976  018D6C  0EFE               	movlw	-2
  7977  018D6E  006F FF8C  F00C    	movff	plusw1,btemp+11
  7978                           
  7979                           ;stkvar	_x @ sp[(-7)+0]
  7980  018D74  0EF9               	movlw	-7
  7981  018D76  50E3               	movf	plusw1,w,c
  7982  018D78  0F01               	addlw	1
  7983  018D7A  6E01               	movwf	btemp^0,c
  7984  018D7C  0EF9               	movlw	-7
  7985  018D7E  0060  F007  FFE3   	movff	btemp,plusw1
  7986  018D84  6A01               	clrf	btemp^0,c
  7987  018D86  0EFA               	movlw	-6
  7988  018D88  50E3               	movf	plusw1,w,c
  7989  018D8A  2001               	addwfc	btemp^0,w,c
  7990  018D8C  6E01               	movwf	btemp^0,c
  7991  018D8E  0EFA               	movlw	-6
  7992  018D90  0060  F007  FFE3   	movff	btemp,plusw1
  7993  018D96  0EF9               	movlw	-7
  7994  018D98  006F FF8C  F009    	movff	plusw1,btemp+8
  7995  018D9E  0EFA               	movlw	-6
  7996  018DA0  006F FF8C  F00A    	movff	plusw1,btemp+9
  7997  018DA6  500B               	movf	(btemp+10)^0,w,c
  7998  018DA8  5C09               	subwf	(btemp+8)^0,w,c
  7999  018DAA  500C               	movf	(btemp+11)^0,w,c
  8000  018DAC  580A               	subwfb	(btemp+9)^0,w,c
  8001  018DAE  A0D8               	btfss	status,0,c
  8002  018DB0  D7BA               	goto	l11972
  8003                           
  8004                           ;daq.c: 394:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  8005  018DB2  0E00               	movlw	0
  8006  018DB4  6EE6               	movwf	postinc1,c
  8007  018DB6  0E00               	movlw	0
  8008  018DB8  6EE6               	movwf	postinc1,c
  8009  018DBA  0E00               	movlw	0
  8010  018DBC  6EE6               	movwf	postinc1,c
  8011  018DBE  ECF5  F0CA         	call	_CRC_CalculatedResultGet	;wreg free
  8012                           
  8013                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8014  018DC2  0EFF               	movlw	-1
  8015  018DC4  50E3               	movf	plusw1,w,c
  8016  018DC6  6E0B               	movwf	(btemp+10)^0,c
  8017  018DC8  6A0C               	clrf	(btemp+11)^0,c
  8018  018DCA  500B               	movf	(btemp+10)^0,w,c
  8019  018DCC  1801               	xorwf	btemp^0,w,c
  8020  018DCE  E104               	bnz	u11030
  8021  018DD0  500C               	movf	(btemp+11)^0,w,c
  8022  018DD2  1802               	xorwf	(btemp+1)^0,w,c
  8023  018DD4  B4D8               	btfsc	status,2,c
  8024  018DD6  D002               	goto	l11988
  8025  018DD8                     u11030:
  8026  018DD8                     l11980:
  8027                           
  8028                           ;daq.c: 395:    return 0;
  8029  018DD8  0E00               	movlw	0
  8030  018DDA  D005               	goto	L4
  8031  018DDC                     l11988:
  8032                           
  8033                           ;daq.c: 399:  r_cal.crc = crcVal_save;
  8034                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8035  018DDC  0EFF               	movlw	-1
  8036  018DDE  006F FF8C  F4A6    	movff	plusw1,_r_cal+166
  8037                           
  8038                           ;daq.c: 400:  return 1;
  8039  018DE4  0E01               	movlw	1
  8040  018DE6                     L4:
  8041  018DE6  6E01               	movwf	btemp^0,c
  8042                           
  8043                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8044  018DE8  0EF9               	movlw	249
  8045  018DEA  26E1               	addwf	fsr1l,f,c
  8046  018DEC  0EFF               	movlw	255
  8047  018DEE  22E2               	addwfc	fsr1h,f,c
  8048  018DF0  0012               	return		;funcret
  8049  018DF2                     __end_of_read_cal_data:
  8050                           	opt callstack 0
  8051                           
  8052 ;; *************** function _DATAEE_ReadByte *****************
  8053 ;; Defined at:
  8054 ;;		line 194 in file "mcc_generated_files/memory.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  bAdd            2  [STACK] unsigned short 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;		None
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  1  [STACK] unsigned char 
  8061 ;; Registers used:
  8062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/39
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8072 ;;Total ram usage:        0 bytes
  8073 ;; Hardware stack levels used:    1
  8074 ;; Hardware stack levels required when called:   15
  8075 ;; This function calls:
  8076 ;;		Nothing
  8077 ;; This function is called by:
  8078 ;;		_read_cal_data
  8079 ;; This function uses a reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text12
  8083  01CB4A                     __ptext12:
  8084                           	opt callstack 0
  8085  01CB4A                     _DATAEE_ReadByte:
  8086                           	opt callstack 14
  8087                           
  8088                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  8089                           ;stkvar	_bAdd @ sp[(0)+-2]
  8090                           
  8091                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8092                           ;incstack = 0
  8093  01CB4A  0EFF               	movlw	255
  8094  01CB4C  24E1               	addwf	fsr1l,w,c
  8095  01CB4E  6ED9               	movwf	fsr2l,c
  8096  01CB50  0EFF               	movlw	255
  8097  01CB52  20E2               	addwfc	fsr1h,w,c
  8098  01CB54  6EDA               	movwf	fsr2h,c
  8099  01CB56  50DF               	movf	indf2,w,c
  8100  01CB58  0B03               	andlw	3
  8101  01CB5A  0139               	movlb	57	; () banked
  8102  01CB5C  6FE1               	movwf	225,b	;volatile
  8103                           
  8104                           ; BSR set to: 57
  8105                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  8106                           ;stkvar	_bAdd @ sp[(0)+-2]
  8107  01CB5E  0EFE               	movlw	-2
  8108  01CB60  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  8109                           
  8110                           ; BSR set to: 57
  8111                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  8112  01CB66  0E3F               	movlw	-193
  8113  01CB68  17E5               	andwf	229,f,b	;volsfr
  8114                           
  8115                           ; BSR set to: 57
  8116                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  8117  01CB6A  81E5               	bsf	229,0,b	;volsfr
  8118                           
  8119                           ; BSR set to: 57
  8120                           ;mcc_generated_files/memory.c: 200:     __nop();
  8121  01CB6C  F000               	nop	
  8122                           
  8123                           ;mcc_generated_files/memory.c: 201:     __nop();
  8124  01CB6E  F000               	nop	
  8125                           
  8126                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  8127  01CB70  006E F78C  F001    	movff	14819,btemp	;volatile
  8128                           
  8129                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  8130  01CB76  52E5               	movf	postdec1,f,c
  8131  01CB78  52E5               	movf	postdec1,f,c
  8132  01CB7A  0012               	return		;funcret
  8133  01CB7C                     __end_of_DATAEE_ReadByte:
  8134                           	opt callstack 0
  8135                           
  8136 ;; *************** function _init_port_dma *****************
  8137 ;; Defined at:
  8138 ;;		line 104 in file "eadog.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;		None
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;		None
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  1  [STACK] void 
  8145 ;; Registers used:
  8146 ;;		wreg, status,2
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/1
  8149 ;;		On exit  : 3F/3B
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8156 ;;Total ram usage:        0 bytes
  8157 ;; Hardware stack levels used:    1
  8158 ;; Hardware stack levels required when called:   15
  8159 ;; This function calls:
  8160 ;;		Nothing
  8161 ;; This function is called by:
  8162 ;;		_main
  8163 ;; This function uses a reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text13
  8167  01CB7C                     __ptext13:
  8168                           	opt callstack 0
  8169  01CB7C                     _init_port_dma:
  8170                           	opt callstack 15
  8171                           
  8172                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  8173                           
  8174                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8175                           ;incstack = 0
  8176  01CB7C  0E3F               	movlw	-193
  8177  01CB7E  013B               	movlb	59	; () banked
  8178  01CB80  17DD               	andwf	221,f,b	;volatile
  8179                           
  8180                           ; BSR set to: 59
  8181                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  8182  01CB82  9BDD               	bcf	221,5,b	;volatile
  8183                           
  8184                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  8185  01CB84  51DD               	movf	221,w,b	;volatile
  8186  01CB86  0BF9               	andlw	-7
  8187  01CB88  0902               	iorlw	2
  8188  01CB8A  6FDD               	movwf	221,b	;volatile
  8189                           
  8190                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  8191  01CB8C  0EE7               	movlw	-25
  8192  01CB8E  17DD               	andwf	221,f,b	;volatile
  8193                           
  8194                           ; BSR set to: 59
  8195                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  8196  01CB90  81DD               	bsf	221,0,b	;volatile
  8197                           
  8198                           ; BSR set to: 59
  8199                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  8200  01CB92  9DDC               	bcf	220,6,b	;volatile
  8201                           
  8202                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  8203  01CB94  0E3D               	movlw	61
  8204  01CB96  6FD1               	movwf	209,b	;volatile
  8205  01CB98  0EEA               	movlw	234
  8206  01CB9A  6FD0               	movwf	208,b	;volatile
  8207                           
  8208                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  8209  01CB9C  0EFF               	movlw	low _port_data
  8210  01CB9E  6FD9               	movwf	217,b	;volatile
  8211  01CBA0  0E06               	movlw	high _port_data
  8212  01CBA2  6FDA               	movwf	218,b	;volatile
  8213  01CBA4  0E00               	movlw	low (_port_data shr (0+16))
  8214  01CBA6  6FDB               	movwf	219,b	;volatile
  8215                           
  8216                           ; BSR set to: 59
  8217                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  8218  01CBA8  9BDC               	bcf	220,5,b	;volatile
  8219                           
  8220                           ; BSR set to: 59
  8221                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8222  01CBAA  0012               	return		;funcret
  8223  01CBAC                     __end_of_init_port_dma:
  8224                           	opt callstack 0
  8225                           
  8226 ;; *************** function _init_display *****************
  8227 ;; Defined at:
  8228 ;;		line 38 in file "eadog.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;		None
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;		None
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1  [STACK] void 
  8235 ;; Registers used:
  8236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8237 ;; Tracked objects:
  8238 ;;		On entry : 3F/3B
  8239 ;;		On exit  : 3F/3D
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8246 ;;Total ram usage:        0 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:   17
  8249 ;; This function calls:
  8250 ;;		_ringBufS_init
  8251 ;;		_send_lcd_cmd
  8252 ;;		_send_lcd_cmd_long
  8253 ;;		_send_lcd_data
  8254 ;;		_wdtdelay
  8255 ;; This function is called by:
  8256 ;;		_main
  8257 ;; This function uses a reentrant model
  8258 ;;
  8259                           
  8260                           	psect	text14
  8261  01AAA6                     __ptext14:
  8262                           	opt callstack 0
  8263  01AAA6                     _init_display:
  8264                           	opt callstack 13
  8265                           
  8266                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  8267                           
  8268                           ; BSR set to: 59
  8269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8270                           ;incstack = 0
  8271  01AAA6  0EA7               	movlw	low _ring_buf1
  8272  01AAA8  0100               	movlb	0	; () banked
  8273  01AAAA  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  8274  01AAAC  0E04               	movlw	high _ring_buf1
  8275  01AAAE  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  8276                           
  8277                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  8278  01AAB0  0E00               	movlw	low _ring_buf2
  8279  01AAB2  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  8280  01AAB4  0E05               	movlw	high _ring_buf2
  8281  01AAB6  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  8282                           
  8283                           ; BSR set to: 0
  8284                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  8285  01AAB8  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  8286  01AABE  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  8287  01AAC4  EC8D  F0E6         	call	_ringBufS_init	;wreg free
  8288                           
  8289                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  8290  01AAC8  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  8291  01AACE  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  8292  01AAD4  EC8D  F0E6         	call	_ringBufS_init	;wreg free
  8293                           
  8294                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  8295  01AAD8  84BE               	bsf	190,2,c	;volatile
  8296                           
  8297                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  8298  01AADA  013D               	movlb	61	; () banked
  8299  01AADC  9F14               	bcf	20,7,b	;volatile
  8300                           
  8301                           ; BSR set to: 61
  8302                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  8303  01AADE  0E20               	movlw	32
  8304  01AAE0  6F15               	movwf	21,b	;volatile
  8305                           
  8306                           ; BSR set to: 61
  8307                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  8308  01AAE2  0E03               	movlw	3
  8309  01AAE4  6F16               	movwf	22,b	;volatile
  8310                           
  8311                           ; BSR set to: 61
  8312                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  8313  01AAE6  0E04               	movlw	4
  8314  01AAE8  6F19               	movwf	25,b	;volatile
  8315                           
  8316                           ; BSR set to: 61
  8317                           ;eadog.c: 55:  SPI1CLK = 0x02;
  8318  01AAEA  0E02               	movlw	2
  8319  01AAEC  6F1C               	movwf	28,b	;volatile
  8320                           
  8321                           ; BSR set to: 61
  8322                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  8323  01AAEE  0E83               	movlw	131
  8324  01AAF0  6F14               	movwf	20,b	;volatile
  8325                           
  8326                           ; BSR set to: 61
  8327                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  8328  01AAF2  8F14               	bsf	20,7,b	;volatile
  8329                           
  8330                           ; BSR set to: 61
  8331                           ;eadog.c: 60:  wdtdelay(350000);
  8332  01AAF4  0E30               	movlw	48
  8333  01AAF6  6EE6               	movwf	postinc1,c
  8334  01AAF8  0E57               	movlw	87
  8335  01AAFA  6EE6               	movwf	postinc1,c
  8336  01AAFC  0E05               	movlw	5
  8337  01AAFE  6EE6               	movwf	postinc1,c
  8338  01AB00  0E00               	movlw	0
  8339  01AB02  6EE6               	movwf	postinc1,c
  8340  01AB04  EC71  F0E1         	call	_wdtdelay	;wreg free
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  8344  01AB08  0E46               	movlw	70
  8345  01AB0A  6EE6               	movwf	postinc1,c
  8346  01AB0C  ECD4  F0E3         	call	_send_lcd_cmd_long	;wreg free
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  8350  01AB10  0E41               	movlw	65
  8351  01AB12  6EE6               	movwf	postinc1,c
  8352  01AB14  ECF4  F0E3         	call	_send_lcd_cmd	;wreg free
  8353                           
  8354                           ; BSR set to: 0
  8355                           ;eadog.c: 63:  wdtdelay(80);
  8356  01AB18  0E50               	movlw	80
  8357  01AB1A  6EE6               	movwf	postinc1,c
  8358  01AB1C  0E00               	movlw	0
  8359  01AB1E  6EE6               	movwf	postinc1,c
  8360  01AB20  0E00               	movlw	0
  8361  01AB22  6EE6               	movwf	postinc1,c
  8362  01AB24  0E00               	movlw	0
  8363  01AB26  6EE6               	movwf	postinc1,c
  8364  01AB28  EC71  F0E1         	call	_wdtdelay	;wreg free
  8365                           
  8366                           ; BSR set to: 0
  8367                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  8368  01AB2C  0E53               	movlw	83
  8369  01AB2E  6EE6               	movwf	postinc1,c
  8370  01AB30  ECF4  F0E3         	call	_send_lcd_cmd	;wreg free
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;eadog.c: 65:  send_lcd_data(2);
  8374  01AB34  0E02               	movlw	2
  8375  01AB36  6EE6               	movwf	postinc1,c
  8376  01AB38  ECBA  F0E7         	call	_send_lcd_data	;wreg free
  8377                           
  8378                           ; BSR set to: 0
  8379                           ;eadog.c: 66:  wdtdelay(80);
  8380  01AB3C  0E50               	movlw	80
  8381  01AB3E  6EE6               	movwf	postinc1,c
  8382  01AB40  0E00               	movlw	0
  8383  01AB42  6EE6               	movwf	postinc1,c
  8384  01AB44  0E00               	movlw	0
  8385  01AB46  6EE6               	movwf	postinc1,c
  8386  01AB48  0E00               	movlw	0
  8387  01AB4A  6EE6               	movwf	postinc1,c
  8388  01AB4C  EC71  F0E1         	call	_wdtdelay	;wreg free
  8389                           
  8390                           ; BSR set to: 0
  8391                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  8392  01AB50  0E51               	movlw	81
  8393  01AB52  6EE6               	movwf	postinc1,c
  8394  01AB54  ECD4  F0E3         	call	_send_lcd_cmd_long	;wreg free
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  8398  01AB58  013D               	movlb	61	; () banked
  8399  01AB5A  9F14               	bcf	20,7,b	;volatile
  8400                           
  8401                           ; BSR set to: 61
  8402                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  8403  01AB5C  0E02               	movlw	2
  8404  01AB5E  6F16               	movwf	22,b	;volatile
  8405                           
  8406                           ; BSR set to: 61
  8407                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  8408  01AB60  8F14               	bsf	20,7,b	;volatile
  8409                           
  8410                           ; BSR set to: 61
  8411                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  8412  01AB62  931A               	bcf	26,1,b	;volatile
  8413                           
  8414                           ; BSR set to: 61
  8415                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  8416  01AB64  0E3F               	movlw	-193
  8417  01AB66  013B               	movlb	59	; () banked
  8418  01AB68  17FD               	andwf	253,f,b	;volatile
  8419                           
  8420                           ; BSR set to: 59
  8421                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  8422  01AB6A  9BFD               	bcf	253,5,b	;volatile
  8423                           
  8424                           ; BSR set to: 59
  8425                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  8426  01AB6C  51FD               	movf	253,w,b	;volatile
  8427  01AB6E  0BF9               	andlw	-7
  8428  01AB70  0902               	iorlw	2
  8429  01AB72  6FFD               	movwf	253,b	;volatile
  8430                           
  8431                           ; BSR set to: 59
  8432                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  8433  01AB74  0EE7               	movlw	-25
  8434  01AB76  17FD               	andwf	253,f,b	;volatile
  8435                           
  8436                           ; BSR set to: 59
  8437                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  8438  01AB78  81FD               	bsf	253,0,b	;volatile
  8439                           
  8440                           ; BSR set to: 59
  8441                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  8442  01AB7A  0EA7               	movlw	low _ring_buf1
  8443  01AB7C  6FF9               	movwf	249,b	;volatile
  8444  01AB7E  0E04               	movlw	high _ring_buf1
  8445  01AB80  6FFA               	movwf	250,b	;volatile
  8446  01AB82  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8447  01AB84  6FFB               	movwf	251,b	;volatile
  8448                           
  8449                           ; BSR set to: 59
  8450                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  8451  01AB86  9BFC               	bcf	252,5,b	;volatile
  8452                           
  8453                           ; BSR set to: 59
  8454                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  8455  01AB88  013D               	movlb	61	; () banked
  8456  01AB8A  831A               	bsf	26,1,b	;volatile
  8457                           
  8458                           ; BSR set to: 61
  8459                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  8460  01AB8C  94BE               	bcf	190,2,c	;volatile
  8461                           
  8462                           ; BSR set to: 61
  8463                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8464  01AB8E  0012               	return		;funcret
  8465  01AB90                     __end_of_init_display:
  8466                           	opt callstack 0
  8467                           
  8468 ;; *************** function _send_lcd_data *****************
  8469 ;; Defined at:
  8470 ;;		line 123 in file "eadog.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;  data            1  [STACK] const unsigned char 
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;		None
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1  [STACK] void 
  8477 ;; Registers used:
  8478 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8479 ;; Tracked objects:
  8480 ;;		On entry : 3F/0
  8481 ;;		On exit  : 3F/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8488 ;;Total ram usage:        0 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:   16
  8491 ;; This function calls:
  8492 ;;		_SPI1_Exchange8bit
  8493 ;;		_wdtdelay
  8494 ;; This function is called by:
  8495 ;;		_init_display
  8496 ;; This function uses a reentrant model
  8497 ;;
  8498                           
  8499                           	psect	text15
  8500  01CF74                     __ptext15:
  8501                           	opt callstack 0
  8502  01CF74                     _send_lcd_data:
  8503                           	opt callstack 13
  8504                           
  8505                           ; BSR set to: 61
  8506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8507                           ;incstack = 0
  8508                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  8509  01CF74  94BC               	bcf	188,2,c	;volatile
  8510                           
  8511                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  8512                           ;stkvar	_data @ sp[(0)+-1]
  8513  01CF76  0EFF               	movlw	-1
  8514  01CF78  50E3               	movf	plusw1,w,c
  8515  01CF7A  6EE6               	movwf	postinc1,c
  8516  01CF7C  EC79  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8517                           
  8518                           ; BSR set to: 57
  8519                           ;eadog.c: 127:  wdtdelay(8);
  8520  01CF80  0E08               	movlw	8
  8521  01CF82  6EE6               	movwf	postinc1,c
  8522  01CF84  0E00               	movlw	0
  8523  01CF86  6EE6               	movwf	postinc1,c
  8524  01CF88  0E00               	movlw	0
  8525  01CF8A  6EE6               	movwf	postinc1,c
  8526  01CF8C  0E00               	movlw	0
  8527  01CF8E  6EE6               	movwf	postinc1,c
  8528  01CF90  EC71  F0E1         	call	_wdtdelay	;wreg free
  8529                           
  8530                           ; BSR set to: 0
  8531                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  8532  01CF94  52E5               	movf	postdec1,f,c
  8533  01CF96  0012               	return		;funcret
  8534  01CF98                     __end_of_send_lcd_data:
  8535                           	opt callstack 0
  8536                           
  8537 ;; *************** function _send_lcd_cmd_long *****************
  8538 ;; Defined at:
  8539 ;;		line 139 in file "eadog.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;  cmd             1  [STACK] const unsigned char 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;		None
  8544 ;; Return value:  Size  Location     Type
  8545 ;;                  1  [STACK] void 
  8546 ;; Registers used:
  8547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8548 ;; Tracked objects:
  8549 ;;		On entry : 3F/0
  8550 ;;		On exit  : 3F/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8557 ;;Total ram usage:        0 bytes
  8558 ;; Hardware stack levels used:    1
  8559 ;; Hardware stack levels required when called:   16
  8560 ;; This function calls:
  8561 ;;		_SPI1_Exchange8bit
  8562 ;;		_wdtdelay
  8563 ;; This function is called by:
  8564 ;;		_init_display
  8565 ;; This function uses a reentrant model
  8566 ;;
  8567                           
  8568                           	psect	text16
  8569  01C7A8                     __ptext16:
  8570                           	opt callstack 0
  8571  01C7A8                     _send_lcd_cmd_long:
  8572                           	opt callstack 13
  8573                           
  8574                           ; BSR set to: 0
  8575                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8576                           ;incstack = 0
  8577                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  8578  01C7A8  94BC               	bcf	188,2,c	;volatile
  8579                           
  8580                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  8581  01C7AA  0EFE               	movlw	254
  8582  01C7AC  6EE6               	movwf	postinc1,c
  8583  01C7AE  EC79  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8584                           
  8585                           ; BSR set to: 57
  8586                           ;eadog.c: 143:  wdtdelay(8);
  8587  01C7B2  0E08               	movlw	8
  8588  01C7B4  6EE6               	movwf	postinc1,c
  8589  01C7B6  0E00               	movlw	0
  8590  01C7B8  6EE6               	movwf	postinc1,c
  8591  01C7BA  0E00               	movlw	0
  8592  01C7BC  6EE6               	movwf	postinc1,c
  8593  01C7BE  0E00               	movlw	0
  8594  01C7C0  6EE6               	movwf	postinc1,c
  8595  01C7C2  EC71  F0E1         	call	_wdtdelay	;wreg free
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  8599                           ;stkvar	_cmd @ sp[(0)+-1]
  8600  01C7C6  0EFF               	movlw	-1
  8601  01C7C8  50E3               	movf	plusw1,w,c
  8602  01C7CA  6EE6               	movwf	postinc1,c
  8603  01C7CC  EC79  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8604                           
  8605                           ;eadog.c: 145:  wdtdelay(800);
  8606  01C7D0  0E20               	movlw	32
  8607  01C7D2  6EE6               	movwf	postinc1,c
  8608  01C7D4  0E03               	movlw	3
  8609  01C7D6  6EE6               	movwf	postinc1,c
  8610  01C7D8  0E00               	movlw	0
  8611  01C7DA  6EE6               	movwf	postinc1,c
  8612  01C7DC  0E00               	movlw	0
  8613  01C7DE  6EE6               	movwf	postinc1,c
  8614  01C7E0  EC71  F0E1         	call	_wdtdelay	;wreg free
  8615                           
  8616                           ; BSR set to: 0
  8617                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8618  01C7E4  52E5               	movf	postdec1,f,c
  8619  01C7E6  0012               	return		;funcret
  8620  01C7E8                     __end_of_send_lcd_cmd_long:
  8621                           	opt callstack 0
  8622                           
  8623 ;; *************** function _send_lcd_cmd *****************
  8624 ;; Defined at:
  8625 ;;		line 130 in file "eadog.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;  cmd             1  [STACK] const unsigned char 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;		None
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  1  [STACK] void 
  8632 ;; Registers used:
  8633 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8634 ;; Tracked objects:
  8635 ;;		On entry : 3F/0
  8636 ;;		On exit  : 3F/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8643 ;;Total ram usage:        0 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:   16
  8646 ;; This function calls:
  8647 ;;		_SPI1_Exchange8bit
  8648 ;;		_wdtdelay
  8649 ;; This function is called by:
  8650 ;;		_init_display
  8651 ;; This function uses a reentrant model
  8652 ;;
  8653                           
  8654                           	psect	text17
  8655  01C7E8                     __ptext17:
  8656                           	opt callstack 0
  8657  01C7E8                     _send_lcd_cmd:
  8658                           	opt callstack 13
  8659                           
  8660                           ; BSR set to: 0
  8661                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8662                           ;incstack = 0
  8663                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  8664  01C7E8  94BC               	bcf	188,2,c	;volatile
  8665                           
  8666                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  8667  01C7EA  0EFE               	movlw	254
  8668  01C7EC  6EE6               	movwf	postinc1,c
  8669  01C7EE  EC79  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8670                           
  8671                           ; BSR set to: 57
  8672                           ;eadog.c: 134:  wdtdelay(8);
  8673  01C7F2  0E08               	movlw	8
  8674  01C7F4  6EE6               	movwf	postinc1,c
  8675  01C7F6  0E00               	movlw	0
  8676  01C7F8  6EE6               	movwf	postinc1,c
  8677  01C7FA  0E00               	movlw	0
  8678  01C7FC  6EE6               	movwf	postinc1,c
  8679  01C7FE  0E00               	movlw	0
  8680  01C800  6EE6               	movwf	postinc1,c
  8681  01C802  EC71  F0E1         	call	_wdtdelay	;wreg free
  8682                           
  8683                           ; BSR set to: 0
  8684                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  8685                           ;stkvar	_cmd @ sp[(0)+-1]
  8686  01C806  0EFF               	movlw	-1
  8687  01C808  50E3               	movf	plusw1,w,c
  8688  01C80A  6EE6               	movwf	postinc1,c
  8689  01C80C  EC79  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8690                           
  8691                           ;eadog.c: 136:  wdtdelay(8);
  8692  01C810  0E08               	movlw	8
  8693  01C812  6EE6               	movwf	postinc1,c
  8694  01C814  0E00               	movlw	0
  8695  01C816  6EE6               	movwf	postinc1,c
  8696  01C818  0E00               	movlw	0
  8697  01C81A  6EE6               	movwf	postinc1,c
  8698  01C81C  0E00               	movlw	0
  8699  01C81E  6EE6               	movwf	postinc1,c
  8700  01C820  EC71  F0E1         	call	_wdtdelay	;wreg free
  8701                           
  8702                           ; BSR set to: 0
  8703                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8704  01C824  52E5               	movf	postdec1,f,c
  8705  01C826  0012               	return		;funcret
  8706  01C828                     __end_of_send_lcd_cmd:
  8707                           	opt callstack 0
  8708                           
  8709 ;; *************** function _SPI1_Exchange8bit *****************
  8710 ;; Defined at:
  8711 ;;		line 79 in file "mcc_generated_files/spi1.c"
  8712 ;; Parameters:    Size  Location     Type
  8713 ;;  data            1  [STACK] unsigned char 
  8714 ;; Auto vars:     Size  Location     Type
  8715 ;;		None
  8716 ;; Return value:  Size  Location     Type
  8717 ;;                  1  [STACK] unsigned char 
  8718 ;; Registers used:
  8719 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  8720 ;; Tracked objects:
  8721 ;;		On entry : 0/2
  8722 ;;		On exit  : 3F/39
  8723 ;;		Unchanged: 0/0
  8724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8729 ;;Total ram usage:        0 bytes
  8730 ;; Hardware stack levels used:    1
  8731 ;; Hardware stack levels required when called:   15
  8732 ;; This function calls:
  8733 ;;		Nothing
  8734 ;; This function is called by:
  8735 ;;		_send_lcd_data
  8736 ;;		_send_lcd_cmd
  8737 ;;		_send_lcd_cmd_long
  8738 ;;		_set_dac
  8739 ;; This function uses a reentrant model
  8740 ;;
  8741                           
  8742                           	psect	text18
  8743  01D0F2                     __ptext18:
  8744                           	opt callstack 0
  8745  01D0F2                     _SPI1_Exchange8bit:
  8746                           	opt callstack 14
  8747                           
  8748                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8749                           
  8750                           ; BSR set to: 0
  8751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8752                           ;incstack = 0
  8753  01D0F2  0E01               	movlw	1
  8754  01D0F4  013D               	movlb	61	; () banked
  8755  01D0F6  6F12               	movwf	18,b	;volatile
  8756                           
  8757                           ; BSR set to: 61
  8758                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  8759                           ;stkvar	_data @ sp[(0)+-1]
  8760  01D0F8  0EFF               	movlw	-1
  8761  01D0FA  006F FF8F FD11     	movff	plusw1,15633	;volatile
  8762  01D100                     l809:
  8763                           
  8764                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  8765  01D100  0139               	movlb	57	; () banked
  8766  01D102  A9A2               	btfss	162,4,b	;volatile
  8767  01D104  D7FD               	goto	l809
  8768                           
  8769                           ; BSR set to: 57
  8770                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  8771  01D106  006F F440  F001    	movff	15632,btemp	;volatile
  8772                           
  8773                           ; BSR set to: 57
  8774                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8775  01D10C  52E5               	movf	postdec1,f,c
  8776  01D10E  0012               	return		;funcret
  8777  01D110                     __end_of_SPI1_Exchange8bit:
  8778                           	opt callstack 0
  8779                           
  8780 ;; *************** function _ringBufS_init *****************
  8781 ;; Defined at:
  8782 ;;		line 22 in file "ringbufs.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;  _this           2  [STACK] PTR volatile struct ring
  8785 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;		None
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  1  [STACK] void 
  8790 ;; Registers used:
  8791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8801 ;;Total ram usage:        0 bytes
  8802 ;; Hardware stack levels used:    1
  8803 ;; Hardware stack levels required when called:   16
  8804 ;; This function calls:
  8805 ;;		_memset
  8806 ;; This function is called by:
  8807 ;;		_init_display
  8808 ;; This function uses a reentrant model
  8809 ;;
  8810                           
  8811                           	psect	text19
  8812  01CD1A                     __ptext19:
  8813                           	opt callstack 0
  8814  01CD1A                     _ringBufS_init:
  8815                           	opt callstack 13
  8816                           
  8817                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  8818                           
  8819                           ; BSR set to: 57
  8820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8821                           ;incstack = 0
  8822  01CD1A  0E43               	movlw	67
  8823  01CD1C  6EE6               	movwf	postinc1,c
  8824  01CD1E  0E00               	movlw	0
  8825  01CD20  6EE6               	movwf	postinc1,c
  8826  01CD22  0E00               	movlw	0
  8827  01CD24  6EE6               	movwf	postinc1,c
  8828  01CD26  0E00               	movlw	0
  8829  01CD28  6EE6               	movwf	postinc1,c
  8830                           
  8831                           ;stkvar	__this @ sp[(-4)+-2]
  8832  01CD2A  0EFA               	movlw	-6
  8833  01CD2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8834  01CD32  006F FF8F FFE6     	movff	plusw1,postinc1
  8835  01CD38  ECFB  F0B9         	call	_memset	;wreg free
  8836                           
  8837                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8838  01CD3C  52E5               	movf	postdec1,f,c
  8839  01CD3E  52E5               	movf	postdec1,f,c
  8840  01CD40  0012               	return		;funcret
  8841  01CD42                     __end_of_ringBufS_init:
  8842                           	opt callstack 0
  8843                           
  8844 ;; *************** function _init_bsoc *****************
  8845 ;; Defined at:
  8846 ;;		line 110 in file "bsoc.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;		None
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;		None
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1  [STACK] void 
  8853 ;; Registers used:
  8854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/2
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8864 ;;Total ram usage:        0 bytes
  8865 ;; Hardware stack levels used:    1
  8866 ;; Hardware stack levels required when called:   18
  8867 ;; This function calls:
  8868 ;;		_TMR3_SetInterruptHandler
  8869 ;;		_Volts_to_SOC
  8870 ;;		___fldiv
  8871 ;;		___flmul
  8872 ;;		___fltol
  8873 ;;		___xxtofl
  8874 ;;		_conv_raw_result
  8875 ;; This function is called by:
  8876 ;;		_main
  8877 ;; This function uses a reentrant model
  8878 ;;
  8879                           
  8880                           	psect	text20
  8881  01816C                     __ptext20:
  8882                           	opt callstack 0
  8883  01816C                     _init_bsoc:
  8884                           	opt callstack 12
  8885                           
  8886                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  8887                           
  8888                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8889                           ;incstack = 0
  8890  01816C  0E00               	movlw	0
  8891  01816E  6EE6               	movwf	postinc1,c
  8892  018170  0E00               	movlw	0
  8893  018172  6EE6               	movwf	postinc1,c
  8894  018174  0E7A               	movlw	122
  8895  018176  6EE6               	movwf	postinc1,c
  8896  018178  0E44               	movlw	68
  8897  01817A  6EE6               	movwf	postinc1,c
  8898  01817C  0E00               	movlw	0
  8899  01817E  6EE6               	movwf	postinc1,c
  8900  018180  0E04               	movlw	4
  8901  018182  6EE6               	movwf	postinc1,c
  8902  018184  EC28  F0AA         	call	_conv_raw_result	;wreg free
  8903  018188  0060  F007  FFE6   	movff	btemp,postinc1
  8904  01818E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8905  018194  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8906  01819A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8907  0181A0  ECAE  F0CB         	call	___fltol	;wreg free
  8908  0181A4  0060  F007  FFE6   	movff	btemp,postinc1
  8909  0181AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8910  0181B0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8911  0181B6  0060  F013  FFE6   	movff	btemp+3,postinc1
  8912  0181BC  0E00               	movlw	0
  8913  0181BE  6EE6               	movwf	postinc1,c
  8914  0181C0  EC12  F0C5         	call	___xxtofl	;wreg free
  8915  0181C4  0060  F007  FFE6   	movff	btemp,postinc1
  8916  0181CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8917  0181D0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8918  0181D6  0060  F013  FFE6   	movff	btemp+3,postinc1
  8919  0181DC  EC78  F09F         	call	___flmul	;wreg free
  8920  0181E0  0060  F007  FFE6   	movff	btemp,postinc1
  8921  0181E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8922  0181EC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8923  0181F2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8924  0181F8  ECAE  F0CB         	call	___fltol	;wreg free
  8925  0181FC  0060  F007  FFE6   	movff	btemp,postinc1
  8926  018202  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8927  018208  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8928  01820E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8929  018214  ECAF  F0D8         	call	_Volts_to_SOC	;wreg free
  8930  018218  0060  F004  F9B5   	movff	btemp,_C+182	;volatile
  8931  01821E  0060  F008  F9B6   	movff	btemp+1,_C+183	;volatile
  8932                           
  8933                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  8934  018224  EE22  F18B         	lfsr	2,_C+140	;volatile
  8935  018228  006F FF7B FFE6     	movff	postinc2,postinc1
  8936  01822E  006F FF7B FFE6     	movff	postinc2,postinc1
  8937  018234  006F FF7B FFE6     	movff	postinc2,postinc1
  8938  01823A  006F FF7B FFE6     	movff	postinc2,postinc1
  8939  018240  0E00               	movlw	0
  8940  018242  6EE6               	movwf	postinc1,c
  8941  018244  0E00               	movlw	0
  8942  018246  6EE6               	movwf	postinc1,c
  8943  018248  0EC8               	movlw	200
  8944  01824A  6EE6               	movwf	postinc1,c
  8945  01824C  0E42               	movlw	66
  8946  01824E  6EE6               	movwf	postinc1,c
  8947  018250  0E00               	movlw	0
  8948  018252  6EE6               	movwf	postinc1,c
  8949  018254  0E00               	movlw	0
  8950  018256  6EE6               	movwf	postinc1,c
  8951  018258  0E7A               	movlw	122
  8952  01825A  6EE6               	movwf	postinc1,c
  8953  01825C  0E44               	movlw	68
  8954  01825E  6EE6               	movwf	postinc1,c
  8955  018260  0E00               	movlw	0
  8956  018262  6EE6               	movwf	postinc1,c
  8957  018264  0E04               	movlw	4
  8958  018266  6EE6               	movwf	postinc1,c
  8959  018268  EC28  F0AA         	call	_conv_raw_result	;wreg free
  8960  01826C  0060  F007  FFE6   	movff	btemp,postinc1
  8961  018272  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8962  018278  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8963  01827E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8964  018284  ECAE  F0CB         	call	___fltol	;wreg free
  8965  018288  0060  F007  FFE6   	movff	btemp,postinc1
  8966  01828E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8967  018294  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8968  01829A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8969  0182A0  0E00               	movlw	0
  8970  0182A2  6EE6               	movwf	postinc1,c
  8971  0182A4  EC12  F0C5         	call	___xxtofl	;wreg free
  8972  0182A8  0060  F007  FFE6   	movff	btemp,postinc1
  8973  0182AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8974  0182B4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8975  0182BA  0060  F013  FFE6   	movff	btemp+3,postinc1
  8976  0182C0  EC78  F09F         	call	___flmul	;wreg free
  8977  0182C4  0060  F007  FFE6   	movff	btemp,postinc1
  8978  0182CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8979  0182D0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8980  0182D6  0060  F013  FFE6   	movff	btemp+3,postinc1
  8981  0182DC  ECAE  F0CB         	call	___fltol	;wreg free
  8982  0182E0  0060  F007  FFE6   	movff	btemp,postinc1
  8983  0182E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8984  0182EC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8985  0182F2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8986  0182F8  ECAF  F0D8         	call	_Volts_to_SOC	;wreg free
  8987  0182FC  0060  F004  F00B   	movff	btemp,btemp+10
  8988  018302  0060  F008  F00C   	movff	btemp+1,btemp+11
  8989  018308  500B               	movf	(btemp+10)^0,w,c
  8990  01830A  6E05               	movwf	(btemp+4)^0,c
  8991  01830C  500C               	movf	(btemp+11)^0,w,c
  8992  01830E  6E06               	movwf	(btemp+5)^0,c
  8993  018310  6A07               	clrf	(btemp+6)^0,c
  8994  018312  6A08               	clrf	(btemp+7)^0,c
  8995  018314  0060  F017  FFE6   	movff	btemp+4,postinc1
  8996  01831A  0060  F01B  FFE6   	movff	btemp+5,postinc1
  8997  018320  0060  F01F  FFE6   	movff	btemp+6,postinc1
  8998  018326  0060  F023  FFE6   	movff	btemp+7,postinc1
  8999  01832C  0E00               	movlw	0
  9000  01832E  6EE6               	movwf	postinc1,c
  9001  018330  EC12  F0C5         	call	___xxtofl	;wreg free
  9002  018334  0060  F007  FFE6   	movff	btemp,postinc1
  9003  01833A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9004  018340  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9005  018346  0060  F013  FFE6   	movff	btemp+3,postinc1
  9006  01834C  EC6B  F0A7         	call	___fldiv	;wreg free
  9007  018350  0060  F007  FFE6   	movff	btemp,postinc1
  9008  018356  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9009  01835C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9010  018362  0060  F013  FFE6   	movff	btemp+3,postinc1
  9011  018368  EC78  F09F         	call	___flmul	;wreg free
  9012  01836C  0060  F004  F98F   	movff	btemp,_C+144	;volatile
  9013  018372  0060  F008  F990   	movff	btemp+1,_C+145	;volatile
  9014  018378  0060  F00C  F991   	movff	btemp+2,_C+146	;volatile
  9015  01837E  0060  F010  F992   	movff	btemp+3,_C+147	;volatile
  9016                           
  9017                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  9018  018384  EE22  F18F         	lfsr	2,_C+144	;volatile
  9019  018388  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  9020  01838E  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  9021  018394  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  9022  01839A  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  9023                           
  9024                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  9025  0183A0  0E82               	movlw	low _calc_bsoc
  9026  0183A2  6EE6               	movwf	postinc1,c
  9027  0183A4  0E34               	movlw	high _calc_bsoc
  9028  0183A6  6EE6               	movwf	postinc1,c
  9029  0183A8  0E01               	movlw	low (_calc_bsoc shr (0+16))
  9030  0183AA  6EE6               	movwf	postinc1,c
  9031  0183AC  EC19  F0E7         	call	_TMR3_SetInterruptHandler	;wreg free
  9032                           
  9033                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9034  0183B0  0012               	return		;funcret
  9035  0183B2                     __end_of_init_bsoc:
  9036                           	opt callstack 0
  9037                           
  9038 ;; *************** function _Volts_to_SOC *****************
  9039 ;; Defined at:
  9040 ;;		line 175 in file "bsoc.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;  cvoltage        4  [STACK] const unsigned long 
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;  soc             2  [STACK] unsigned short 
  9045 ;;  slot            1  [STACK] unsigned char 
  9046 ;; Return value:  Size  Location     Type
  9047 ;;                  2  [STACK] unsigned short 
  9048 ;; Registers used:
  9049 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9050 ;; Tracked objects:
  9051 ;;		On entry : 0/2
  9052 ;;		On exit  : 0/0
  9053 ;;		Unchanged: 0/0
  9054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9059 ;;Total ram usage:        0 bytes
  9060 ;; Hardware stack levels used:    1
  9061 ;; Hardware stack levels required when called:   15
  9062 ;; This function calls:
  9063 ;;		Nothing
  9064 ;; This function is called by:
  9065 ;;		_init_bsoc
  9066 ;; This function uses a reentrant model
  9067 ;;
  9068                           
  9069                           	psect	text21
  9070  01B15E                     __ptext21:
  9071                           	opt callstack 0
  9072  01B15E                     _Volts_to_SOC:
  9073                           	opt callstack 0
  9074                           
  9075                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9076  01B15E  52E6               	movf	postinc1,f,c
  9077  01B160  52E6               	movf	postinc1,f,c
  9078  01B162  52E6               	movf	postinc1,f,c
  9079                           
  9080                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  9081                           ;stkvar	_soc @ sp[(-3)+0]
  9082                           
  9083                           ;incstack = 0
  9084  01B164  0EFD               	movlw	-3
  9085  01B166  6AE3               	clrf	plusw1,c
  9086  01B168  0EFE               	movlw	-2
  9087  01B16A  6AE3               	clrf	plusw1,c
  9088                           
  9089                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  9090                           ;stkvar	_slot @ sp[(-3)+2]
  9091  01B16C  0EFF               	movlw	-1
  9092  01B16E  6AE3               	clrf	plusw1,c
  9093  01B170                     l11702:
  9094                           
  9095                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  9096                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  9097                           ;stkvar	_slot @ sp[(-3)+2]
  9098  01B170  0EFF               	movlw	-1
  9099  01B172  50E3               	movf	plusw1,w,c
  9100  01B174  0D08               	mullw	8
  9101  01B176  0EE3               	movlw	low _BVSOC_TABLE
  9102  01B178  24F3               	addwf	243,w,c
  9103  01B17A  6EF6               	movwf	tblptrl,c
  9104  01B17C  0EF8               	movlw	high _BVSOC_TABLE
  9105  01B17E  20F4               	addwfc	244,w,c
  9106  01B180  6EF7               	movwf	tblptrh,c
  9107  01B182                     	if	1	;There are 3 active tblptr bytes
  9108  01B182  6AF8               	clrf	tblptru,c
  9109  01B184  0E00               	movlw	low (__mediumconst shr (0+16))
  9110  01B186  22F8               	addwfc	tblptru,f,c
  9111  01B188                     	endif
  9112  01B188  0EF9               	movlw	-7
  9113  01B18A  50E3               	movf	plusw1,w,c
  9114  01B18C  0009               	tblrd		*+
  9115  01B18E  5CF5               	subwf	tablat,w,c
  9116  01B190  0EFA               	movlw	-6
  9117  01B192  50E3               	movf	plusw1,w,c
  9118  01B194  0009               	tblrd		*+
  9119  01B196  58F5               	subwfb	tablat,w,c
  9120  01B198  0EFB               	movlw	-5
  9121  01B19A  50E3               	movf	plusw1,w,c
  9122  01B19C  0009               	tblrd		*+
  9123  01B19E  58F5               	subwfb	tablat,w,c
  9124  01B1A0  0EFC               	movlw	-4
  9125  01B1A2  50E3               	movf	plusw1,w,c
  9126  01B1A4  0009               	tblrd		*+
  9127  01B1A6  58F5               	subwfb	tablat,w,c
  9128  01B1A8  B0D8               	btfsc	status,0,c
  9129  01B1AA  D020               	goto	l11706
  9130                           
  9131                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  9132                           ;stkvar	_slot @ sp[(-3)+2]
  9133  01B1AC  0EFF               	movlw	-1
  9134  01B1AE  50E3               	movf	plusw1,w,c
  9135  01B1B0  0D08               	mullw	8
  9136  01B1B2  0E04               	movlw	4
  9137  01B1B4  26F3               	addwf	243,f,c
  9138  01B1B6  0E00               	movlw	0
  9139  01B1B8  22F4               	addwfc	244,f,c
  9140  01B1BA  0EE3               	movlw	low _BVSOC_TABLE
  9141  01B1BC  24F3               	addwf	243,w,c
  9142  01B1BE  6EF6               	movwf	tblptrl,c
  9143  01B1C0  0EF8               	movlw	high _BVSOC_TABLE
  9144  01B1C2  20F4               	addwfc	244,w,c
  9145  01B1C4  6EF7               	movwf	tblptrh,c
  9146  01B1C6                     	if	1	;There are 3 active tblptr bytes
  9147  01B1C6  6AF8               	clrf	tblptru,c
  9148  01B1C8  0E00               	movlw	low (__mediumconst shr (0+16))
  9149  01B1CA  22F8               	addwfc	tblptru,f,c
  9150  01B1CC                     	endif
  9151  01B1CC  0009               	tblrd		*+
  9152  01B1CE  006F FFD4  F00B    	movff	tablat,btemp+10
  9153  01B1D4  0009               	tblrd		*+
  9154  01B1D6  006F FFD4  F00C    	movff	tablat,btemp+11
  9155                           
  9156                           ;stkvar	_soc @ sp[(-3)+0]
  9157  01B1DC  0EFD               	movlw	-3
  9158  01B1DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9159  01B1E4  0EFE               	movlw	-2
  9160  01B1E6  0060  F033  FFE3   	movff	btemp+11,plusw1
  9161  01B1EC                     l11706:
  9162                           
  9163                           ;bsoc.c: 187:  }
  9164                           ;stkvar	_slot @ sp[(-3)+2]
  9165  01B1EC  0EFF               	movlw	-1
  9166  01B1EE  2AE3               	incf	plusw1,f,c
  9167                           
  9168                           ;stkvar	_slot @ sp[(-3)+2]
  9169  01B1F0  0EFF               	movlw	-1
  9170  01B1F2  006F FF8C  F001    	movff	plusw1,btemp
  9171  01B1F8  0E19               	movlw	25
  9172  01B1FA  6401               	cpfsgt	btemp^0,c
  9173  01B1FC  D7B9               	goto	l11702
  9174                           
  9175                           ;bsoc.c: 188:  return soc;
  9176                           ;stkvar	_soc @ sp[(-3)+0]
  9177  01B1FE  0EFD               	movlw	-3
  9178  01B200  006F FF8C  F001    	movff	plusw1,btemp
  9179  01B206  0EFE               	movlw	-2
  9180  01B208  006F FF8C  F002    	movff	plusw1,btemp+1
  9181                           
  9182                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  9183  01B20E  0EF9               	movlw	249
  9184  01B210  26E1               	addwf	fsr1l,f,c
  9185  01B212  0EFF               	movlw	255
  9186  01B214  22E2               	addwfc	fsr1h,f,c
  9187  01B216  0012               	return		;funcret
  9188  01B218                     __end_of_Volts_to_SOC:
  9189                           	opt callstack 0
  9190                           
  9191 ;; *************** function _hid_display *****************
  9192 ;; Defined at:
  9193 ;;		line 22 in file "hid.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  h               1  [STACK] PTR struct H_data
  9196 ;;		 -> H(9), 
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;		None
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  1  [STACK] PTR struct H_data
  9201 ;; Registers used:
  9202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  9203 ;; Tracked objects:
  9204 ;;		On entry : 3F/39
  9205 ;;		On exit  : 0/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9212 ;;Total ram usage:        0 bytes
  9213 ;; Hardware stack levels used:    1
  9214 ;; Hardware stack levels required when called:   17
  9215 ;; This function calls:
  9216 ;;		_hid_input
  9217 ;; This function is called by:
  9218 ;;		_main
  9219 ;; This function uses a reentrant model
  9220 ;;
  9221                           
  9222                           	psect	text22
  9223  01A30C                     __ptext22:
  9224                           	opt callstack 0
  9225  01A30C                     _hid_display:
  9226                           	opt callstack 13
  9227                           
  9228                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  9229                           ;stkvar	_h @ sp[(0)+-1]
  9230                           
  9231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9232                           ;incstack = 0
  9233  01A30C  0EFF               	movlw	-1
  9234  01A30E  50E3               	movf	plusw1,w,c
  9235  01A310  6EE6               	movwf	postinc1,c
  9236  01A312  ECAD  F0D6         	call	_hid_input	;wreg free
  9237                           
  9238                           ;hid.c: 26:  switch (h->h_state) {
  9239  01A316  D076               	goto	l12278
  9240  01A318                     l12252:
  9241                           
  9242                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  9243                           ;stkvar	_h @ sp[(0)+-1]
  9244  01A318  0EFF               	movlw	-1
  9245  01A31A  50E3               	movf	plusw1,w,c
  9246  01A31C  6ED9               	movwf	fsr2l,c
  9247  01A31E  6ADA               	clrf	fsr2h,c
  9248  01A320  0E01               	movlw	1
  9249  01A322  26D9               	addwf	fsr2l,f,c
  9250  01A324  0E01               	movlw	1
  9251  01A326  6EDF               	movwf	indf2,c
  9252                           
  9253                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  9254                           ;stkvar	_h @ sp[(0)+-1]
  9255  01A328  0EFF               	movlw	-1
  9256  01A32A  50E3               	movf	plusw1,w,c
  9257  01A32C  6ED9               	movwf	fsr2l,c
  9258  01A32E  6ADA               	clrf	fsr2h,c
  9259  01A330  0E00               	movlw	0
  9260  01A332  6EDF               	movwf	indf2,c
  9261                           
  9262                           ;hid.c: 30:   h->wait_enter = 1;
  9263                           ;stkvar	_h @ sp[(0)+-1]
  9264  01A334  0EFF               	movlw	-1
  9265  01A336  50E3               	movf	plusw1,w,c
  9266  01A338  6ED9               	movwf	fsr2l,c
  9267  01A33A  6ADA               	clrf	fsr2h,c
  9268  01A33C  0E04               	movlw	4
  9269  01A33E  26D9               	addwf	fsr2l,f,c
  9270  01A340  0E01               	movlw	1
  9271  01A342  6EDF               	movwf	indf2,c
  9272                           
  9273                           ;hid.c: 31:   h->wait_select = 1;
  9274                           ;stkvar	_h @ sp[(0)+-1]
  9275  01A344  0EFF               	movlw	-1
  9276  01A346  50E3               	movf	plusw1,w,c
  9277  01A348  6ED9               	movwf	fsr2l,c
  9278  01A34A  6ADA               	clrf	fsr2h,c
  9279  01A34C  0E02               	movlw	2
  9280  01A34E  26D9               	addwf	fsr2l,f,c
  9281  01A350  0E01               	movlw	1
  9282  01A352  6EDF               	movwf	indf2,c
  9283                           
  9284                           ;hid.c: 32:   h->wait_calib = 1;
  9285                           ;stkvar	_h @ sp[(0)+-1]
  9286  01A354  0EFF               	movlw	-1
  9287  01A356  50E3               	movf	plusw1,w,c
  9288  01A358  6ED9               	movwf	fsr2l,c
  9289  01A35A  6ADA               	clrf	fsr2h,c
  9290  01A35C  0E06               	movlw	6
  9291  01A35E  26D9               	addwf	fsr2l,f,c
  9292  01A360  0E01               	movlw	1
  9293  01A362  6EDF               	movwf	indf2,c
  9294                           
  9295                           ;hid.c: 33:   h->select_p = SW_OFF;
  9296                           ;stkvar	_h @ sp[(0)+-1]
  9297  01A364  0EFF               	movlw	-1
  9298  01A366  50E3               	movf	plusw1,w,c
  9299  01A368  6ED9               	movwf	fsr2l,c
  9300  01A36A  6ADA               	clrf	fsr2h,c
  9301  01A36C  0E03               	movlw	3
  9302  01A36E  26D9               	addwf	fsr2l,f,c
  9303  01A370  0E00               	movlw	0
  9304  01A372  6EDF               	movwf	indf2,c
  9305                           
  9306                           ;hid.c: 34:   h->enter_p = SW_OFF;
  9307                           ;stkvar	_h @ sp[(0)+-1]
  9308  01A374  0EFF               	movlw	-1
  9309  01A376  50E3               	movf	plusw1,w,c
  9310  01A378  6ED9               	movwf	fsr2l,c
  9311  01A37A  6ADA               	clrf	fsr2h,c
  9312  01A37C  0E05               	movlw	5
  9313  01A37E  26D9               	addwf	fsr2l,f,c
  9314  01A380  0E00               	movlw	0
  9315  01A382  6EDF               	movwf	indf2,c
  9316                           
  9317                           ;hid.c: 35:   h->calib_p = SW_OFF;
  9318                           ;stkvar	_h @ sp[(0)+-1]
  9319  01A384  0EFF               	movlw	-1
  9320  01A386  50E3               	movf	plusw1,w,c
  9321  01A388  6ED9               	movwf	fsr2l,c
  9322  01A38A  6ADA               	clrf	fsr2h,c
  9323  01A38C  0E07               	movlw	7
  9324  01A38E  26D9               	addwf	fsr2l,f,c
  9325  01A390  0E00               	movlw	0
  9326  01A392  D036               	goto	L5
  9327  01A394                     l12268:
  9328                           
  9329                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  9330                           ;stkvar	_h @ sp[(0)+-1]
  9331  01A394  0EFF               	movlw	-1
  9332  01A396  50E3               	movf	plusw1,w,c
  9333  01A398  6ED9               	movwf	fsr2l,c
  9334  01A39A  6ADA               	clrf	fsr2h,c
  9335  01A39C  0E02               	movlw	2
  9336  01A39E  26D9               	addwf	fsr2l,f,c
  9337  01A3A0  50DF               	movf	indf2,w,c
  9338  01A3A2  A4D8               	btfss	status,2,c
  9339  01A3A4  D042               	goto	l2239
  9340                           
  9341                           ;stkvar	_h @ sp[(0)+-1]
  9342  01A3A6  0EFF               	movlw	-1
  9343  01A3A8  50E3               	movf	plusw1,w,c
  9344  01A3AA  6ED9               	movwf	fsr2l,c
  9345  01A3AC  6ADA               	clrf	fsr2h,c
  9346  01A3AE  0E03               	movlw	3
  9347  01A3B0  26D9               	addwf	fsr2l,f,c
  9348  01A3B2  50DF               	movf	indf2,w,c
  9349  01A3B4  A4D8               	btfss	status,2,c
  9350  01A3B6  D039               	goto	l2239
  9351                           
  9352                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  9353                           ;stkvar	_h @ sp[(0)+-1]
  9354  01A3B8  0EFF               	movlw	-1
  9355  01A3BA  50E3               	movf	plusw1,w,c
  9356  01A3BC  6ED9               	movwf	fsr2l,c
  9357  01A3BE  6ADA               	clrf	fsr2h,c
  9358  01A3C0  0E08               	movlw	8
  9359  01A3C2  26D9               	addwf	fsr2l,f,c
  9360                           
  9361                           ;stkvar	_h @ sp[(0)+-1]
  9362  01A3C4  0EFF               	movlw	-1
  9363  01A3C6  50E3               	movf	plusw1,w,c
  9364  01A3C8  6EE9               	movwf	fsr0l,c
  9365  01A3CA  6AEA               	clrf	fsr0h,c
  9366  01A3CC  0E08               	movlw	8
  9367  01A3CE  26E9               	addwf	fsr0l,f,c
  9368  01A3D0  2AEF               	incf	indf0,f,c
  9369  01A3D2  50EF               	movf	indf0,w,c
  9370  01A3D4  0B03               	andlw	3
  9371  01A3D6  6EDF               	movwf	indf2,c
  9372                           
  9373                           ;hid.c: 41:    h->hid_display = h->sequence;
  9374                           ;stkvar	_h @ sp[(0)+-1]
  9375  01A3D8  0EFF               	movlw	-1
  9376  01A3DA  50E3               	movf	plusw1,w,c
  9377  01A3DC  6ED9               	movwf	fsr2l,c
  9378  01A3DE  6ADA               	clrf	fsr2h,c
  9379  01A3E0  0E08               	movlw	8
  9380  01A3E2  26D9               	addwf	fsr2l,f,c
  9381                           
  9382                           ;stkvar	_h @ sp[(0)+-1]
  9383  01A3E4  0EFF               	movlw	-1
  9384  01A3E6  50E3               	movf	plusw1,w,c
  9385  01A3E8  6EE9               	movwf	fsr0l,c
  9386  01A3EA  6AEA               	clrf	fsr0h,c
  9387  01A3EC  006F FF7F FFEF     	movff	indf2,indf0
  9388                           
  9389                           ;hid.c: 42:    h->wait_select = 1;
  9390                           ;stkvar	_h @ sp[(0)+-1]
  9391  01A3F2  0EFF               	movlw	-1
  9392  01A3F4  50E3               	movf	plusw1,w,c
  9393  01A3F6  6ED9               	movwf	fsr2l,c
  9394  01A3F8  6ADA               	clrf	fsr2h,c
  9395  01A3FA  0E02               	movlw	2
  9396  01A3FC  26D9               	addwf	fsr2l,f,c
  9397  01A3FE  0E01               	movlw	1
  9398  01A400                     L5:
  9399  01A400  6EDF               	movwf	indf2,c
  9400  01A402  D013               	goto	l2239
  9401  01A404                     l12278:
  9402                           
  9403                           ;stkvar	_h @ sp[(0)+-1]
  9404  01A404  0EFF               	movlw	-1
  9405  01A406  50E3               	movf	plusw1,w,c
  9406  01A408  6ED9               	movwf	fsr2l,c
  9407  01A40A  6ADA               	clrf	fsr2h,c
  9408  01A40C  0E01               	movlw	1
  9409  01A40E  26D9               	addwf	fsr2l,f,c
  9410  01A410  50DF               	movf	indf2,w,c
  9411  01A412  6E0B               	movwf	(btemp+10)^0,c
  9412  01A414  6A0C               	clrf	(btemp+11)^0,c
  9413                           
  9414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9415                           ; Switch size 1, requested type "simple"
  9416                           ; Number of cases is 1, Range of values is 0 to 0
  9417                           ; switch strategies available:
  9418                           ; Name         Instructions Cycles
  9419                           ; simple_byte            4     3 (average)
  9420                           ;	Chosen strategy is simple_byte
  9421  01A416  500C               	movf	(btemp+11)^0,w,c
  9422  01A418  0A00               	xorlw	0	; case 0
  9423  01A41A  A4D8               	btfss	status,2,c
  9424  01A41C  D7BB               	goto	l12268
  9425                           
  9426                           ; Switch size 1, requested type "simple"
  9427                           ; Number of cases is 2, Range of values is 0 to 1
  9428                           ; switch strategies available:
  9429                           ; Name         Instructions Cycles
  9430                           ; simple_byte            7     4 (average)
  9431                           ;	Chosen strategy is simple_byte
  9432  01A41E  500B               	movf	(btemp+10)^0,w,c
  9433  01A420  0A00               	xorlw	0	; case 0
  9434  01A422  B4D8               	btfsc	status,2,c
  9435  01A424  D779               	goto	l12252
  9436  01A426  0A01               	xorlw	1	; case 1
  9437  01A428  D7B5               	goto	l12268
  9438  01A42A                     l2239:
  9439                           
  9440                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  9441  01A42A  52E5               	movf	postdec1,f,c
  9442  01A42C  0012               	return		;funcret
  9443  01A42E                     __end_of_hid_display:
  9444                           	opt callstack 0
  9445                           
  9446 ;; *************** function _hid_input *****************
  9447 ;; Defined at:
  9448 ;;		line 3 in file "hid.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;  h               1  [STACK] PTR struct H_data
  9451 ;;		 -> H(9), 
  9452 ;; Auto vars:     Size  Location     Type
  9453 ;;		None
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  1  [STACK] PTR struct H_data
  9456 ;; Registers used:
  9457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  9458 ;; Tracked objects:
  9459 ;;		On entry : 0/39
  9460 ;;		On exit  : 0/0
  9461 ;;		Unchanged: 0/0
  9462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9467 ;;Total ram usage:        0 bytes
  9468 ;; Hardware stack levels used:    1
  9469 ;; Hardware stack levels required when called:   16
  9470 ;; This function calls:
  9471 ;;		_get_switch
  9472 ;; This function is called by:
  9473 ;;		_hid_display
  9474 ;; This function uses a reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text23
  9478  01AD5A                     __ptext23:
  9479                           	opt callstack 0
  9480  01AD5A                     _hid_input:
  9481                           	opt callstack 13
  9482                           
  9483                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  9484                           
  9485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9486                           ;incstack = 0
  9487  01AD5A  0E02               	movlw	2
  9488  01AD5C  6EE6               	movwf	postinc1,c
  9489  01AD5E  EC35  F0E6         	call	_get_switch	;wreg free
  9490  01AD62  5001               	movf	btemp^0,w,c
  9491  01AD64  B4D8               	btfsc	status,2,c
  9492  01AD66  D01C               	goto	l11606
  9493                           
  9494                           ;hid.c: 6:   h->wait_select = 0;
  9495                           ;stkvar	_h @ sp[(0)+-1]
  9496  01AD68  0EFF               	movlw	-1
  9497  01AD6A  50E3               	movf	plusw1,w,c
  9498  01AD6C  6ED9               	movwf	fsr2l,c
  9499  01AD6E  6ADA               	clrf	fsr2h,c
  9500  01AD70  0E02               	movlw	2
  9501  01AD72  26D9               	addwf	fsr2l,f,c
  9502  01AD74  0E00               	movlw	0
  9503  01AD76  6EDF               	movwf	indf2,c
  9504                           
  9505                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  9506  01AD78  0E02               	movlw	2
  9507  01AD7A  6EE6               	movwf	postinc1,c
  9508  01AD7C  EC35  F0E6         	call	_get_switch	;wreg free
  9509  01AD80  5001               	movf	btemp^0,w,c
  9510  01AD82  B4D8               	btfsc	status,2,c
  9511  01AD84  D003               	goto	u10570
  9512  01AD86  6A0C               	clrf	(btemp+11)^0,c
  9513  01AD88  2A0C               	incf	(btemp+11)^0,f,c
  9514  01AD8A  D001               	goto	u10588
  9515  01AD8C                     u10570:
  9516  01AD8C  6A0C               	clrf	(btemp+11)^0,c
  9517  01AD8E                     u10588:
  9518                           
  9519                           ;stkvar	_h @ sp[(0)+-1]
  9520  01AD8E  0EFF               	movlw	-1
  9521  01AD90  50E3               	movf	plusw1,w,c
  9522  01AD92  6ED9               	movwf	fsr2l,c
  9523  01AD94  6ADA               	clrf	fsr2h,c
  9524  01AD96  0E03               	movlw	3
  9525  01AD98  26D9               	addwf	fsr2l,f,c
  9526  01AD9A  0060  F033  FFDF   	movff	btemp+11,indf2
  9527  01ADA0                     l11606:
  9528                           
  9529                           ;hid.c: 10:  if (get_switch(SENTER)) {
  9530  01ADA0  0E03               	movlw	3
  9531  01ADA2  6EE6               	movwf	postinc1,c
  9532  01ADA4  EC35  F0E6         	call	_get_switch	;wreg free
  9533  01ADA8  5001               	movf	btemp^0,w,c
  9534  01ADAA  B4D8               	btfsc	status,2,c
  9535  01ADAC  D01C               	goto	l11612
  9536                           
  9537                           ;hid.c: 11:   h->wait_enter = 0;
  9538                           ;stkvar	_h @ sp[(0)+-1]
  9539  01ADAE  0EFF               	movlw	-1
  9540  01ADB0  50E3               	movf	plusw1,w,c
  9541  01ADB2  6ED9               	movwf	fsr2l,c
  9542  01ADB4  6ADA               	clrf	fsr2h,c
  9543  01ADB6  0E04               	movlw	4
  9544  01ADB8  26D9               	addwf	fsr2l,f,c
  9545  01ADBA  0E00               	movlw	0
  9546  01ADBC  6EDF               	movwf	indf2,c
  9547                           
  9548                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  9549  01ADBE  0E03               	movlw	3
  9550  01ADC0  6EE6               	movwf	postinc1,c
  9551  01ADC2  EC35  F0E6         	call	_get_switch	;wreg free
  9552  01ADC6  5001               	movf	btemp^0,w,c
  9553  01ADC8  B4D8               	btfsc	status,2,c
  9554  01ADCA  D003               	goto	u10600
  9555  01ADCC  6A0C               	clrf	(btemp+11)^0,c
  9556  01ADCE  2A0C               	incf	(btemp+11)^0,f,c
  9557  01ADD0  D001               	goto	u10618
  9558  01ADD2                     u10600:
  9559  01ADD2  6A0C               	clrf	(btemp+11)^0,c
  9560  01ADD4                     u10618:
  9561                           
  9562                           ;stkvar	_h @ sp[(0)+-1]
  9563  01ADD4  0EFF               	movlw	-1
  9564  01ADD6  50E3               	movf	plusw1,w,c
  9565  01ADD8  6ED9               	movwf	fsr2l,c
  9566  01ADDA  6ADA               	clrf	fsr2h,c
  9567  01ADDC  0E05               	movlw	5
  9568  01ADDE  26D9               	addwf	fsr2l,f,c
  9569  01ADE0  0060  F033  FFDF   	movff	btemp+11,indf2
  9570  01ADE6                     l11612:
  9571                           
  9572                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  9573  01ADE6  0E04               	movlw	4
  9574  01ADE8  6EE6               	movwf	postinc1,c
  9575  01ADEA  EC35  F0E6         	call	_get_switch	;wreg free
  9576  01ADEE  5001               	movf	btemp^0,w,c
  9577  01ADF0  B4D8               	btfsc	status,2,c
  9578  01ADF2  D01C               	goto	l2230
  9579                           
  9580                           ;hid.c: 16:   h->wait_calib = 0;
  9581                           ;stkvar	_h @ sp[(0)+-1]
  9582  01ADF4  0EFF               	movlw	-1
  9583  01ADF6  50E3               	movf	plusw1,w,c
  9584  01ADF8  6ED9               	movwf	fsr2l,c
  9585  01ADFA  6ADA               	clrf	fsr2h,c
  9586  01ADFC  0E06               	movlw	6
  9587  01ADFE  26D9               	addwf	fsr2l,f,c
  9588  01AE00  0E00               	movlw	0
  9589  01AE02  6EDF               	movwf	indf2,c
  9590                           
  9591                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  9592  01AE04  0E04               	movlw	4
  9593  01AE06  6EE6               	movwf	postinc1,c
  9594  01AE08  EC35  F0E6         	call	_get_switch	;wreg free
  9595  01AE0C  5001               	movf	btemp^0,w,c
  9596  01AE0E  B4D8               	btfsc	status,2,c
  9597  01AE10  D003               	goto	u10630
  9598  01AE12  6A0C               	clrf	(btemp+11)^0,c
  9599  01AE14  2A0C               	incf	(btemp+11)^0,f,c
  9600  01AE16  D001               	goto	u10648
  9601  01AE18                     u10630:
  9602  01AE18  6A0C               	clrf	(btemp+11)^0,c
  9603  01AE1A                     u10648:
  9604                           
  9605                           ;stkvar	_h @ sp[(0)+-1]
  9606  01AE1A  0EFF               	movlw	-1
  9607  01AE1C  50E3               	movf	plusw1,w,c
  9608  01AE1E  6ED9               	movwf	fsr2l,c
  9609  01AE20  6ADA               	clrf	fsr2h,c
  9610  01AE22  0E07               	movlw	7
  9611  01AE24  26D9               	addwf	fsr2l,f,c
  9612  01AE26  0060  F033  FFDF   	movff	btemp+11,indf2
  9613  01AE2C                     l2230:
  9614                           
  9615                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9616  01AE2C  52E5               	movf	postdec1,f,c
  9617  01AE2E  0012               	return		;funcret
  9618  01AE30                     __end_of_hid_input:
  9619                           	opt callstack 0
  9620                           
  9621 ;; *************** function _esr_check *****************
  9622 ;; Defined at:
  9623 ;;		line 197 in file "bsoc.c"
  9624 ;; Parameters:    Size  Location     Type
  9625 ;;  fsm             1  [STACK] const unsigned char 
  9626 ;; Auto vars:     Size  Location     Type
  9627 ;;		None
  9628 ;; Return value:  Size  Location     Type
  9629 ;;                  4  [STACK] float 
  9630 ;; Registers used:
  9631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9632 ;; Tracked objects:
  9633 ;;		On entry : 0/0
  9634 ;;		On exit  : 0/0
  9635 ;;		Unchanged: 0/0
  9636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9641 ;;Total ram usage:        0 bytes
  9642 ;; Hardware stack levels used:    1
  9643 ;; Hardware stack levels required when called:   18
  9644 ;; This function calls:
  9645 ;;		_StartTimer
  9646 ;;		_TimerDone
  9647 ;;		___fldiv
  9648 ;;		___flsub
  9649 ;;		_conv_raw_result
  9650 ;;		_fabsf
  9651 ;;		_set_load_relay_one
  9652 ;;		_set_load_relay_two
  9653 ;;		_update_adc_result
  9654 ;; This function is called by:
  9655 ;;		_main
  9656 ;; This function uses a reentrant model
  9657 ;;
  9658                           
  9659                           	psect	text24
  9660  0176E2                     __ptext24:
  9661                           	opt callstack 0
  9662  0176E2                     _esr_check:
  9663                           	opt callstack 12
  9664                           
  9665                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  9666                           ;stkvar	_fsm @ sp[(0)+-1]
  9667                           
  9668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9669                           ;incstack = 0
  9670  0176E2  0EFF               	movlw	-1
  9671  0176E4  50E3               	movf	plusw1,w,c
  9672  0176E6  B4D8               	btfsc	status,2,c
  9673  0176E8  D149               	goto	l12112
  9674                           
  9675                           ;bsoc.c: 202:   esr_state = 0;
  9676  0176EA  0100               	movlb	0	; () banked
  9677  0176EC  6BCA               	clrf	esr_check@esr_state& (0+255),b
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;bsoc.c: 203:   return -10.0;
  9681  0176EE  0E00               	movlw	0
  9682  0176F0  6E01               	movwf	btemp^0,c
  9683  0176F2  0E00               	movlw	0
  9684  0176F4  6E02               	movwf	(btemp+1)^0,c
  9685  0176F6  0E20               	movlw	32
  9686  0176F8  6E03               	movwf	(btemp+2)^0,c
  9687  0176FA  0EC1               	movlw	193
  9688  0176FC  D15B               	goto	L6
  9689  0176FE                     l12044:
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  9693  0176FE  0E10               	movlw	16
  9694  017700  6EE6               	movwf	postinc1,c
  9695  017702  0E27               	movlw	39
  9696  017704  6EE6               	movwf	postinc1,c
  9697  017706  0E0C               	movlw	12
  9698  017708  6EE6               	movwf	postinc1,c
  9699  01770A  EC14  F0E4         	call	_StartTimer	;wreg free
  9700  01770E                     l12046:
  9701                           
  9702                           ;bsoc.c: 209:   esr_state++;
  9703  01770E  0100               	movlb	0	; () banked
  9704  017710  2BCA               	incf	esr_check@esr_state& (0+255),f,b
  9705                           
  9706                           ;bsoc.c: 210:   break;
  9707  017712  D149               	goto	l12114
  9708  017714                     l12048:
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;bsoc.c: 215:   set_load_relay_one(0);
  9712  017714  0E00               	movlw	0
  9713  017716  6EE6               	movwf	postinc1,c
  9714  017718  EC3C  F0E9         	call	_set_load_relay_one	;wreg free
  9715                           
  9716                           ;bsoc.c: 216:   set_load_relay_two(0);
  9717  01771C  0E00               	movlw	0
  9718  01771E  6EE6               	movwf	postinc1,c
  9719  017720  EC34  F0E9         	call	_set_load_relay_two	;wreg free
  9720                           
  9721                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  9722  017724  0E0C               	movlw	12
  9723  017726  6EE6               	movwf	postinc1,c
  9724  017728  ECA1  F0E6         	call	_TimerDone	;wreg free
  9725  01772C  5001               	movf	btemp^0,w,c
  9726  01772E  B4D8               	btfsc	status,2,c
  9727  017730  D009               	goto	l12054
  9728                           
  9729                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  9730  017732  0E10               	movlw	16
  9731  017734  6EE6               	movwf	postinc1,c
  9732  017736  0E27               	movlw	39
  9733  017738  6EE6               	movwf	postinc1,c
  9734  01773A  0E0C               	movlw	12
  9735  01773C  6EE6               	movwf	postinc1,c
  9736  01773E  EC14  F0E4         	call	_StartTimer	;wreg free
  9737                           
  9738                           ;bsoc.c: 219:   } else {
  9739  017742  D006               	goto	l12058
  9740  017744                     l12054:
  9741                           
  9742                           ;bsoc.c: 220:    return -2.0;
  9743  017744  0E00               	movlw	0
  9744  017746  6E01               	movwf	btemp^0,c
  9745  017748  0E00               	movlw	0
  9746  01774A  6E02               	movwf	(btemp+1)^0,c
  9747  01774C  0E00               	movlw	0
  9748  01774E  D066               	goto	L8
  9749  017750                     l12058:
  9750                           
  9751                           ;bsoc.c: 225:   update_adc_result();
  9752  017750  ECB3  F0E4         	call	_update_adc_result	;wreg free
  9753                           
  9754                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  9755  017754  0E00               	movlw	0
  9756  017756  6EE6               	movwf	postinc1,c
  9757  017758  0E04               	movlw	4
  9758  01775A  6EE6               	movwf	postinc1,c
  9759  01775C  EC28  F0AA         	call	_conv_raw_result	;wreg free
  9760  017760  0060  F004  FA2D   	movff	btemp,_C+302	;volatile
  9761  017766  0060  F008  FA2E   	movff	btemp+1,_C+303	;volatile
  9762  01776C  0060  F00C  FA2F   	movff	btemp+2,_C+304	;volatile
  9763  017772  0060  F010  FA30   	movff	btemp+3,_C+305	;volatile
  9764  017778  D7CA               	goto	l12046
  9765  01777A                     l12064:
  9766                           
  9767                           ; BSR set to: 0
  9768                           ;bsoc.c: 230:   set_load_relay_one(1);
  9769  01777A  0E01               	movlw	1
  9770  01777C  6EE6               	movwf	postinc1,c
  9771  01777E  EC3C  F0E9         	call	_set_load_relay_one	;wreg free
  9772                           
  9773                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  9774  017782  0E0C               	movlw	12
  9775  017784  6EE6               	movwf	postinc1,c
  9776  017786  ECA1  F0E6         	call	_TimerDone	;wreg free
  9777  01778A  5001               	movf	btemp^0,w,c
  9778  01778C  B4D8               	btfsc	status,2,c
  9779  01778E  D009               	goto	l12070
  9780                           
  9781                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  9782  017790  0E10               	movlw	16
  9783  017792  6EE6               	movwf	postinc1,c
  9784  017794  0E27               	movlw	39
  9785  017796  6EE6               	movwf	postinc1,c
  9786  017798  0E0C               	movlw	12
  9787  01779A  6EE6               	movwf	postinc1,c
  9788  01779C  EC14  F0E4         	call	_StartTimer	;wreg free
  9789                           
  9790                           ;bsoc.c: 233:   } else {
  9791  0177A0  D006               	goto	l12074
  9792  0177A2                     l12070:
  9793                           
  9794                           ;bsoc.c: 234:    return -3.0;
  9795  0177A2  0E00               	movlw	0
  9796  0177A4  6E01               	movwf	btemp^0,c
  9797  0177A6  0E00               	movlw	0
  9798  0177A8  6E02               	movwf	(btemp+1)^0,c
  9799  0177AA  0E40               	movlw	64
  9800  0177AC  D037               	goto	L8
  9801  0177AE                     l12074:
  9802                           
  9803                           ;bsoc.c: 237:   update_adc_result();
  9804  0177AE  ECB3  F0E4         	call	_update_adc_result	;wreg free
  9805                           
  9806                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  9807  0177B2  0E00               	movlw	0
  9808  0177B4  6EE6               	movwf	postinc1,c
  9809  0177B6  0E04               	movlw	4
  9810  0177B8  6EE6               	movwf	postinc1,c
  9811  0177BA  EC28  F0AA         	call	_conv_raw_result	;wreg free
  9812  0177BE  0060  F004  FA31   	movff	btemp,_C+306	;volatile
  9813  0177C4  0060  F008  FA32   	movff	btemp+1,_C+307	;volatile
  9814  0177CA  0060  F00C  FA33   	movff	btemp+2,_C+308	;volatile
  9815  0177D0  0060  F010  FA34   	movff	btemp+3,_C+309	;volatile
  9816                           
  9817                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  9818  0177D6  0E00               	movlw	0
  9819  0177D8  6EE6               	movwf	postinc1,c
  9820  0177DA  0E00               	movlw	0
  9821  0177DC  6EE6               	movwf	postinc1,c
  9822  0177DE  EC28  F0AA         	call	_conv_raw_result	;wreg free
  9823  0177E2  0060  F004  FA25   	movff	btemp,_C+294	;volatile
  9824  0177E8  0060  F008  FA26   	movff	btemp+1,_C+295	;volatile
  9825  0177EE  0060  F00C  FA27   	movff	btemp+2,_C+296	;volatile
  9826  0177F4  0060  F010  FA28   	movff	btemp+3,_C+297	;volatile
  9827  0177FA  D789               	goto	l12046
  9828  0177FC                     l12082:
  9829                           
  9830                           ; BSR set to: 0
  9831                           ;bsoc.c: 243:   set_load_relay_two(1);
  9832  0177FC  0E01               	movlw	1
  9833  0177FE  6EE6               	movwf	postinc1,c
  9834  017800  EC34  F0E9         	call	_set_load_relay_two	;wreg free
  9835                           
  9836                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  9837  017804  0E0C               	movlw	12
  9838  017806  6EE6               	movwf	postinc1,c
  9839  017808  ECA1  F0E6         	call	_TimerDone	;wreg free
  9840  01780C  5001               	movf	btemp^0,w,c
  9841  01780E  A4D8               	btfss	status,2,c
  9842  017810  D008               	goto	l12090
  9843                           
  9844                           ;bsoc.c: 245:    return -4.0;
  9845  017812  0E00               	movlw	0
  9846  017814  6E01               	movwf	btemp^0,c
  9847  017816  0E00               	movlw	0
  9848  017818  6E02               	movwf	(btemp+1)^0,c
  9849  01781A  0E80               	movlw	128
  9850  01781C                     L8:
  9851  01781C  6E03               	movwf	(btemp+2)^0,c
  9852  01781E  0EC0               	movlw	192
  9853  017820  D0C9               	goto	L6
  9854  017822                     l12090:
  9855                           
  9856                           ;bsoc.c: 247:   update_adc_result();
  9857  017822  ECB3  F0E4         	call	_update_adc_result	;wreg free
  9858                           
  9859                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  9860  017826  0E00               	movlw	0
  9861  017828  6EE6               	movwf	postinc1,c
  9862  01782A  0E04               	movlw	4
  9863  01782C  6EE6               	movwf	postinc1,c
  9864  01782E  EC28  F0AA         	call	_conv_raw_result	;wreg free
  9865  017832  0060  F004  FA35   	movff	btemp,_C+310	;volatile
  9866  017838  0060  F008  FA36   	movff	btemp+1,_C+311	;volatile
  9867  01783E  0060  F00C  FA37   	movff	btemp+2,_C+312	;volatile
  9868  017844  0060  F010  FA38   	movff	btemp+3,_C+313	;volatile
  9869                           
  9870                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  9871  01784A  0E00               	movlw	0
  9872  01784C  6EE6               	movwf	postinc1,c
  9873  01784E  0E00               	movlw	0
  9874  017850  6EE6               	movwf	postinc1,c
  9875  017852  EC28  F0AA         	call	_conv_raw_result	;wreg free
  9876  017856  0060  F004  FA29   	movff	btemp,_C+298	;volatile
  9877  01785C  0060  F008  FA2A   	movff	btemp+1,_C+299	;volatile
  9878  017862  0060  F00C  FA2B   	movff	btemp+2,_C+300	;volatile
  9879  017868  0060  F010  FA2C   	movff	btemp+3,_C+301	;volatile
  9880                           
  9881                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  9882  01786E  EE22  F229         	lfsr	2,_C+298	;volatile
  9883  017872  006F FF7B FFE6     	movff	postinc2,postinc1
  9884  017878  006F FF7B FFE6     	movff	postinc2,postinc1
  9885  01787E  006F FF7B FFE6     	movff	postinc2,postinc1
  9886  017884  006F FF7B FFE6     	movff	postinc2,postinc1
  9887  01788A  EE22  F225         	lfsr	2,_C+294	;volatile
  9888  01788E  006F FF7B FFE6     	movff	postinc2,postinc1
  9889  017894  006F FF7B FFE6     	movff	postinc2,postinc1
  9890  01789A  006F FF7B FFE6     	movff	postinc2,postinc1
  9891  0178A0  006F FF7B FFE6     	movff	postinc2,postinc1
  9892  0178A6  EC6E  F0E3         	call	___flsub	;wreg free
  9893  0178AA  0060  F007  FFE6   	movff	btemp,postinc1
  9894  0178B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9895  0178B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9896  0178BC  0060  F013  FFE6   	movff	btemp+3,postinc1
  9897  0178C2  EE22  F235         	lfsr	2,_C+310	;volatile
  9898  0178C6  006F FF7B FFE6     	movff	postinc2,postinc1
  9899  0178CC  006F FF7B FFE6     	movff	postinc2,postinc1
  9900  0178D2  006F FF7B FFE6     	movff	postinc2,postinc1
  9901  0178D8  006F FF7B FFE6     	movff	postinc2,postinc1
  9902  0178DE  EE22  F231         	lfsr	2,_C+306	;volatile
  9903  0178E2  006F FF7B FFE6     	movff	postinc2,postinc1
  9904  0178E8  006F FF7B FFE6     	movff	postinc2,postinc1
  9905  0178EE  006F FF7B FFE6     	movff	postinc2,postinc1
  9906  0178F4  006F FF7B FFE6     	movff	postinc2,postinc1
  9907  0178FA  EC6E  F0E3         	call	___flsub	;wreg free
  9908  0178FE  0060  F007  FFE6   	movff	btemp,postinc1
  9909  017904  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9910  01790A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9911  017910  0060  F013  FFE6   	movff	btemp+3,postinc1
  9912  017916  EC6B  F0A7         	call	___fldiv	;wreg free
  9913  01791A  0060  F007  FFE6   	movff	btemp,postinc1
  9914  017920  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9915  017926  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9916  01792C  0060  F013  FFE6   	movff	btemp+3,postinc1
  9917  017932  ECC3  F0D9         	call	_fabsf	;wreg free
  9918  017936  0060  F004  F987   	movff	btemp,_C+136	;volatile
  9919  01793C  0060  F008  F988   	movff	btemp+1,_C+137	;volatile
  9920  017942  0060  F00C  F989   	movff	btemp+2,_C+138	;volatile
  9921  017948  0060  F010  F98A   	movff	btemp+3,_C+139	;volatile
  9922                           
  9923                           ;bsoc.c: 252:   set_load_relay_one(0);
  9924  01794E  0E00               	movlw	0
  9925  017950  6EE6               	movwf	postinc1,c
  9926  017952  EC3C  F0E9         	call	_set_load_relay_one	;wreg free
  9927                           
  9928                           ;bsoc.c: 253:   set_load_relay_two(0);
  9929  017956  0E00               	movlw	0
  9930  017958  6EE6               	movwf	postinc1,c
  9931  01795A  EC34  F0E9         	call	_set_load_relay_two	;wreg free
  9932                           
  9933                           ;bsoc.c: 254:   esr_state = 0;
  9934  01795E  0100               	movlb	0	; () banked
  9935  017960  6BCA               	clrf	esr_check@esr_state& (0+255),b
  9936                           
  9937                           ; BSR set to: 0
  9938                           ;bsoc.c: 255:   return C.esr;
  9939  017962  0062  F61C  F001   	movff	_C+136,btemp	;volatile
  9940  017968  0062  F620  F002   	movff	_C+137,btemp+1	;volatile
  9941  01796E  0062  F624  F003   	movff	_C+138,btemp+2	;volatile
  9942  017974  0062  F628  F004   	movff	_C+139,btemp+3	;volatile
  9943  01797A  D01D               	goto	l2355
  9944  01797C                     l12112:
  9945  01797C  0100               	movlb	0	; () banked
  9946  01797E  51CA               	movf	esr_check@esr_state& (0+255),w,b
  9947  017980  6E0B               	movwf	(btemp+10)^0,c
  9948  017982  6A0C               	clrf	(btemp+11)^0,c
  9949                           
  9950                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9951                           ; Switch size 1, requested type "simple"
  9952                           ; Number of cases is 1, Range of values is 0 to 0
  9953                           ; switch strategies available:
  9954                           ; Name         Instructions Cycles
  9955                           ; simple_byte            4     3 (average)
  9956                           ;	Chosen strategy is simple_byte
  9957  017984  500C               	movf	(btemp+11)^0,w,c
  9958  017986  0A00               	xorlw	0	; case 0
  9959  017988  A4D8               	btfss	status,2,c
  9960  01798A  D00D               	goto	l12114
  9961                           
  9962                           ; BSR set to: 0
  9963                           ; Switch size 1, requested type "simple"
  9964                           ; Number of cases is 4, Range of values is 0 to 3
  9965                           ; switch strategies available:
  9966                           ; Name         Instructions Cycles
  9967                           ; simple_byte           13     7 (average)
  9968                           ;	Chosen strategy is simple_byte
  9969  01798C  500B               	movf	(btemp+10)^0,w,c
  9970  01798E  0A00               	xorlw	0	; case 0
  9971  017990  B4D8               	btfsc	status,2,c
  9972  017992  D6B5               	goto	l12044
  9973  017994  0A01               	xorlw	1	; case 1
  9974  017996  B4D8               	btfsc	status,2,c
  9975  017998  D6BD               	goto	l12048
  9976  01799A  0A03               	xorlw	3	; case 2
  9977  01799C  B4D8               	btfsc	status,2,c
  9978  01799E  D6ED               	goto	l12064
  9979  0179A0  0A01               	xorlw	1	; case 3
  9980  0179A2  B4D8               	btfsc	status,2,c
  9981  0179A4  D72B               	goto	l12082
  9982  0179A6                     l12114:
  9983                           
  9984                           ; BSR set to: 0
  9985                           ;bsoc.c: 260:  return -1.0;
  9986  0179A6  0E00               	movlw	0
  9987  0179A8  6E01               	movwf	btemp^0,c
  9988  0179AA  0E00               	movlw	0
  9989  0179AC  6E02               	movwf	(btemp+1)^0,c
  9990  0179AE  0E80               	movlw	128
  9991  0179B0  6E03               	movwf	(btemp+2)^0,c
  9992  0179B2  0EBF               	movlw	191
  9993  0179B4                     L6:
  9994  0179B4  6E04               	movwf	(btemp+3)^0,c
  9995  0179B6                     l2355:
  9996                           
  9997                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9998  0179B6  52E5               	movf	postdec1,f,c
  9999  0179B8  0012               	return		;funcret
 10000  0179BA                     __end_of_esr_check:
 10001                           	opt callstack 0
 10002                           
 10003 ;; *************** function _update_adc_result *****************
 10004 ;; Defined at:
 10005 ;;		line 109 in file "daq.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;		None
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;		None
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1  [STACK] _Bool 
 10012 ;; Registers used:
 10013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10023 ;;Total ram usage:        0 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; Hardware stack levels required when called:   17
 10026 ;; This function calls:
 10027 ;;		_StartTimer
 10028 ;;		_TimerDone
 10029 ;;		_check_adc_scan
 10030 ;;		_clear_adc_scan
 10031 ;;		_start_adc_scan
 10032 ;; This function is called by:
 10033 ;;		_esr_check
 10034 ;; This function uses a reentrant model
 10035 ;;
 10036                           
 10037                           	psect	text25
 10038  01C966                     __ptext25:
 10039                           	opt callstack 0
 10040  01C966                     _update_adc_result:
 10041                           	opt callstack 12
 10042                           
 10043                           ;daq.c: 111:  if (R.done) {
 10044                           
 10045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10046                           ;incstack = 0
 10047  01C966  0102               	movlb	2	; () banked
 10048  01C968  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 10049  01C96A  B4D8               	btfsc	status,2,c
 10050  01C96C  0012               	return	
 10051                           
 10052                           ; BSR set to: 2
 10053                           ;daq.c: 112:   clear_adc_scan();
 10054  01C96E  ECB9  F0E9         	call	_clear_adc_scan	;wreg free
 10055                           
 10056                           ; BSR set to: 2
 10057                           ;daq.c: 113:   start_adc_scan();
 10058  01C972  EC80  F0E0         	call	_start_adc_scan	;wreg free
 10059                           
 10060                           ;daq.c: 114:   StartTimer(TMR_ADC, 200);
 10061  01C976  0EC8               	movlw	200
 10062  01C978  6EE6               	movwf	postinc1,c
 10063  01C97A  0E00               	movlw	0
 10064  01C97C  6EE6               	movwf	postinc1,c
 10065  01C97E  0E01               	movlw	1
 10066  01C980  6EE6               	movwf	postinc1,c
 10067  01C982  EC14  F0E4         	call	_StartTimer	;wreg free
 10068  01C986                     l11490:
 10069  01C986  0E01               	movlw	1
 10070  01C988  6EE6               	movwf	postinc1,c
 10071  01C98A  ECA1  F0E6         	call	_TimerDone	;wreg free
 10072  01C98E  5001               	movf	btemp^0,w,c
 10073  01C990  A4D8               	btfss	status,2,c
 10074  01C992  0012               	return	
 10075  01C994  ECA2  F0E9         	call	_check_adc_scan	;wreg free
 10076  01C998  5001               	movf	btemp^0,w,c
 10077  01C99A  A4D8               	btfss	status,2,c
 10078  01C99C  0012               	return	
 10079  01C99E  D7F3               	goto	l11490
 10080  01C9A0                     __end_of_update_adc_result:
 10081                           	opt callstack 0
 10082                           
 10083 ;; *************** function _check_adc_scan *****************
 10084 ;; Defined at:
 10085 ;;		line 93 in file "daq.c"
 10086 ;; Parameters:    Size  Location     Type
 10087 ;;		None
 10088 ;; Auto vars:     Size  Location     Type
 10089 ;;		None
 10090 ;; Return value:  Size  Location     Type
 10091 ;;                  1  [STACK] _Bool 
 10092 ;; Registers used:
 10093 ;;		btemp
 10094 ;; Tracked objects:
 10095 ;;		On entry : 0/1
 10096 ;;		On exit  : 0/0
 10097 ;;		Unchanged: 0/0
 10098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10103 ;;Total ram usage:        0 bytes
 10104 ;; Hardware stack levels used:    1
 10105 ;; Hardware stack levels required when called:   15
 10106 ;; This function calls:
 10107 ;;		Nothing
 10108 ;; This function is called by:
 10109 ;;		_main
 10110 ;;		_update_adc_result
 10111 ;; This function uses a reentrant model
 10112 ;;
 10113                           
 10114                           	psect	text26
 10115  01D344                     __ptext26:
 10116                           	opt callstack 0
 10117  01D344                     _check_adc_scan:
 10118                           	opt callstack 13
 10119                           
 10120                           ;daq.c: 95:  return R.done;
 10121                           
 10122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10123                           ;incstack = 0
 10124  01D344  0060  F8D4  F001   	movff	_R+53,btemp	;volatile
 10125                           
 10126                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10127  01D34A  0012               	return		;funcret
 10128  01D34C                     __end_of_check_adc_scan:
 10129                           	opt callstack 0
 10130                           
 10131 ;; *************** function _set_load_relay_two *****************
 10132 ;; Defined at:
 10133 ;;		line 130 in file "mbmc.c"
 10134 ;; Parameters:    Size  Location     Type
 10135 ;;  mode            1  [STACK] const _Bool 
 10136 ;; Auto vars:     Size  Location     Type
 10137 ;;		None
 10138 ;; Return value:  Size  Location     Type
 10139 ;;                  1  [STACK] void 
 10140 ;; Registers used:
 10141 ;;		wreg, fsr1l, fsr1h
 10142 ;; Tracked objects:
 10143 ;;		On entry : 0/0
 10144 ;;		On exit  : 0/0
 10145 ;;		Unchanged: 0/0
 10146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10151 ;;Total ram usage:        0 bytes
 10152 ;; Hardware stack levels used:    1
 10153 ;; Hardware stack levels required when called:   15
 10154 ;; This function calls:
 10155 ;;		Nothing
 10156 ;; This function is called by:
 10157 ;;		_main
 10158 ;;		_esr_check
 10159 ;; This function uses a reentrant model
 10160 ;;
 10161                           
 10162                           	psect	text27
 10163  01D268                     __ptext27:
 10164                           	opt callstack 0
 10165  01D268                     _set_load_relay_two:
 10166                           	opt callstack 15
 10167                           
 10168                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
 10169                           ;stkvar	_mode @ sp[(0)+-1]
 10170                           
 10171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10172                           ;incstack = 0
 10173  01D268  0EFF               	movlw	-1
 10174  01D26A  B0E3               	btfsc	plusw1,0,c
 10175  01D26C  D002               	bra	u10215
 10176  01D26E  9ABD               	bcf	189,5,c	;volatile
 10177  01D270  D001               	bra	u10216
 10178  01D272                     u10215:
 10179  01D272  8ABD               	bsf	189,5,c	;volatile
 10180  01D274                     u10216:
 10181                           
 10182                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10183  01D274  52E5               	movf	postdec1,f,c
 10184  01D276  0012               	return		;funcret
 10185  01D278                     __end_of_set_load_relay_two:
 10186                           	opt callstack 0
 10187                           
 10188 ;; *************** function _set_load_relay_one *****************
 10189 ;; Defined at:
 10190 ;;		line 125 in file "mbmc.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;  mode            1  [STACK] const _Bool 
 10193 ;; Auto vars:     Size  Location     Type
 10194 ;;		None
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  1  [STACK] void 
 10197 ;; Registers used:
 10198 ;;		wreg, fsr1l, fsr1h
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 0/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10208 ;;Total ram usage:        0 bytes
 10209 ;; Hardware stack levels used:    1
 10210 ;; Hardware stack levels required when called:   15
 10211 ;; This function calls:
 10212 ;;		Nothing
 10213 ;; This function is called by:
 10214 ;;		_main
 10215 ;;		_esr_check
 10216 ;; This function uses a reentrant model
 10217 ;;
 10218                           
 10219                           	psect	text28
 10220  01D278                     __ptext28:
 10221                           	opt callstack 0
 10222  01D278                     _set_load_relay_one:
 10223                           	opt callstack 15
 10224                           
 10225                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
 10226                           ;stkvar	_mode @ sp[(0)+-1]
 10227                           
 10228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10229                           ;incstack = 0
 10230  01D278  0EFF               	movlw	-1
 10231  01D27A  B0E3               	btfsc	plusw1,0,c
 10232  01D27C  D002               	bra	u10205
 10233  01D27E  98BD               	bcf	189,4,c	;volatile
 10234  01D280  D001               	bra	u10206
 10235  01D282                     u10205:
 10236  01D282  88BD               	bsf	189,4,c	;volatile
 10237  01D284                     u10206:
 10238                           
 10239                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10240  01D284  52E5               	movf	postdec1,f,c
 10241  01D286  0012               	return		;funcret
 10242  01D288                     __end_of_set_load_relay_one:
 10243                           	opt callstack 0
 10244                           
 10245 ;; *************** function _eaDogM_WriteCommand *****************
 10246 ;; Defined at:
 10247 ;;		line 385 in file "eadog.c"
 10248 ;; Parameters:    Size  Location     Type
 10249 ;;  cmd             1  [STACK] const unsigned char 
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;		None
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  1  [STACK] void 
 10254 ;; Registers used:
 10255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10256 ;; Tracked objects:
 10257 ;;		On entry : 3F/3D
 10258 ;;		On exit  : 3F/0
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10265 ;;Total ram usage:        0 bytes
 10266 ;; Hardware stack levels used:    1
 10267 ;; Hardware stack levels required when called:   26
 10268 ;; This function calls:
 10269 ;;		_send_lcd_cmd_dma
 10270 ;; This function is called by:
 10271 ;;		_main
 10272 ;; This function uses a reentrant model
 10273 ;;
 10274                           
 10275                           	psect	text29
 10276  01D2B8                     __ptext29:
 10277                           	opt callstack 0
 10278  01D2B8                     _eaDogM_WriteCommand:
 10279                           	opt callstack 4
 10280                           
 10281                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
 10282                           ;stkvar	_cmd @ sp[(0)+-1]
 10283                           
 10284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10285                           ;incstack = 0
 10286  01D2B8  0EFF               	movlw	-1
 10287  01D2BA  50E3               	movf	plusw1,w,c
 10288  01D2BC  6EE6               	movwf	postinc1,c
 10289  01D2BE  EC88  F0E8         	call	_send_lcd_cmd_dma	;wreg free
 10290                           
 10291                           ; BSR set to: 0
 10292                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 10293  01D2C2  52E5               	movf	postdec1,f,c
 10294  01D2C4  0012               	return		;funcret
 10295  01D2C6                     __end_of_eaDogM_WriteCommand:
 10296                           	opt callstack 0
 10297                           
 10298 ;; *************** function _current_sensor_cal *****************
 10299 ;; Defined at:
 10300 ;;		line 484 in file "main.c"
 10301 ;; Parameters:    Size  Location     Type
 10302 ;;		None
 10303 ;; Auto vars:     Size  Location     Type
 10304 ;;  cp              4  [STACK] unsigned long 
 10305 ;;  cb              4  [STACK] unsigned long 
 10306 ;;  x               1  [STACK] unsigned char 
 10307 ;; Return value:  Size  Location     Type
 10308 ;;                  1  [STACK] _Bool 
 10309 ;; Registers used:
 10310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10311 ;; Tracked objects:
 10312 ;;		On entry : 0/1
 10313 ;;		On exit  : 0/0
 10314 ;;		Unchanged: 0/0
 10315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10320 ;;Total ram usage:        0 bytes
 10321 ;; Hardware stack levels used:    1
 10322 ;; Hardware stack levels required when called:   28
 10323 ;; This function calls:
 10324 ;;		_WaitMs
 10325 ;;		_cal_current_zero
 10326 ;;		_clear_adc_scan
 10327 ;;		_get_raw_result
 10328 ;;		_get_switch
 10329 ;;		_get_vterm_ptr
 10330 ;;		_spinners
 10331 ;;		_sprintf
 10332 ;;		_start_adc_scan
 10333 ;;		_update_lcd
 10334 ;;		_write_cal_data
 10335 ;; This function is called by:
 10336 ;;		_main
 10337 ;; This function uses a reentrant model
 10338 ;;
 10339                           
 10340                           	psect	text30
 10341  015D8C                     __ptext30:
 10342                           	opt callstack 0
 10343  015D8C                     _current_sensor_cal:
 10344                           	opt callstack 0
 10345                           
 10346                           ; BSR set to: 0
 10347                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10348  015D8C  0E09               	movlw	9
 10349  015D8E  26E1               	addwf	fsr1l,f,c
 10350  015D90  0E00               	movlw	0
 10351  015D92  22E2               	addwfc	fsr1h,f,c
 10352                           
 10353                           ;main.c: 486:  uint8_t x = 0;
 10354                           ;stkvar	_x @ sp[(-9)+8]
 10355                           
 10356                           ;incstack = 0
 10357  015D94  0EFF               	movlw	-1
 10358  015D96  6AE3               	clrf	plusw1,c
 10359                           
 10360                           ;main.c: 487:  uint32_t cb = 0, cp = 0;
 10361                           ;stkvar	_cb @ sp[(-9)+4]
 10362  015D98  0EFB               	movlw	-5
 10363  015D9A  6AE3               	clrf	plusw1,c
 10364  015D9C  0EFC               	movlw	-4
 10365  015D9E  6AE3               	clrf	plusw1,c
 10366  015DA0  0EFD               	movlw	-3
 10367  015DA2  6AE3               	clrf	plusw1,c
 10368  015DA4  0EFE               	movlw	-2
 10369  015DA6  6AE3               	clrf	plusw1,c
 10370                           
 10371                           ;stkvar	_cp @ sp[(-9)+0]
 10372  015DA8  0EF7               	movlw	-9
 10373  015DAA  6AE3               	clrf	plusw1,c
 10374  015DAC  0EF8               	movlw	-8
 10375  015DAE  6AE3               	clrf	plusw1,c
 10376  015DB0  0EF9               	movlw	-7
 10377  015DB2  6AE3               	clrf	plusw1,c
 10378  015DB4  0EFA               	movlw	-6
 10379  015DB6  6AE3               	clrf	plusw1,c
 10380                           
 10381                           ;main.c: 489:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10382  015DB8  0EA1               	movlw	low STR_46
 10383  015DBA  6EE6               	movwf	postinc1,c
 10384  015DBC  0EFE               	movlw	high STR_46
 10385  015DBE  6EE6               	movwf	postinc1,c
 10386  015DC0  0E00               	movlw	0
 10387  015DC2  6EE6               	movwf	postinc1,c
 10388  015DC4  0E00               	movlw	0
 10389  015DC6  6EE6               	movwf	postinc1,c
 10390  015DC8  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 10391  015DCC  0060  F007  FFE6   	movff	btemp,postinc1
 10392  015DD2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10393  015DD8  0E04               	movlw	4
 10394  015DDA  6EE6               	movwf	postinc1,c
 10395  015DDC  ECCE  F0D4         	call	_sprintf	;wreg free
 10396                           
 10397                           ; BSR set to: 0
 10398                           ;main.c: 490:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero         ");
 10399  015DE0  0E4D               	movlw	low STR_47
 10400  015DE2  6EE6               	movwf	postinc1,c
 10401  015DE4  0EFE               	movlw	high STR_47
 10402  015DE6  6EE6               	movwf	postinc1,c
 10403  015DE8  0E00               	movlw	0
 10404  015DEA  6EE6               	movwf	postinc1,c
 10405  015DEC  0E01               	movlw	1
 10406  015DEE  6EE6               	movwf	postinc1,c
 10407  015DF0  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 10408  015DF4  0060  F007  FFE6   	movff	btemp,postinc1
 10409  015DFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10410  015E00  0E04               	movlw	4
 10411  015E02  6EE6               	movwf	postinc1,c
 10412  015E04  ECCE  F0D4         	call	_sprintf	;wreg free
 10413                           
 10414                           ; BSR set to: 0
 10415                           ;main.c: 491:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 10416  015E08  0E38               	movlw	low STR_48
 10417  015E0A  6EE6               	movwf	postinc1,c
 10418  015E0C  0EFE               	movlw	high STR_48
 10419  015E0E  6EE6               	movwf	postinc1,c
 10420  015E10  0E00               	movlw	0
 10421  015E12  6EE6               	movwf	postinc1,c
 10422  015E14  0E02               	movlw	2
 10423  015E16  6EE6               	movwf	postinc1,c
 10424  015E18  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 10425  015E1C  0060  F007  FFE6   	movff	btemp,postinc1
 10426  015E22  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10427  015E28  0E04               	movlw	4
 10428  015E2A  6EE6               	movwf	postinc1,c
 10429  015E2C  ECCE  F0D4         	call	_sprintf	;wreg free
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;main.c: 492:  update_lcd(0);
 10433  015E30  0E00               	movlw	0
 10434  015E32  6EE6               	movwf	postinc1,c
 10435  015E34  EC46  F0D4         	call	_update_lcd	;wreg free
 10436                           
 10437                           ;main.c: 493:  WaitMs(2000);
 10438  015E38  0ED0               	movlw	208
 10439  015E3A  6EE6               	movwf	postinc1,c
 10440  015E3C  0E07               	movlw	7
 10441  015E3E  6EE6               	movwf	postinc1,c
 10442  015E40  EC08  F0E5         	call	_WaitMs	;wreg free
 10443  015E44                     l14254:
 10444                           
 10445                           ;main.c: 495:   if (++x > 64)
 10446                           ;stkvar	_x @ sp[(-9)+8]
 10447  015E44  0EFF               	movlw	-1
 10448  015E46  2AE3               	incf	plusw1,f,c
 10449  015E48  0EFF               	movlw	-1
 10450  015E4A  006F FF8C  F001    	movff	plusw1,btemp
 10451  015E50  0E40               	movlw	64
 10452  015E52  6401               	cpfsgt	btemp^0,c
 10453  015E54  D001               	goto	l14258
 10454  015E56  D1CF               	goto	l1501
 10455  015E58                     l14258:
 10456                           
 10457                           ;main.c: 497:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 10458  015E58  0E00               	movlw	0
 10459  015E5A  6EE6               	movwf	postinc1,c
 10460  015E5C  0E04               	movlw	4
 10461  015E5E  6EE6               	movwf	postinc1,c
 10462  015E60  ECC8  F0D5         	call	_spinners	;wreg free
 10463  015E64  5001               	movf	btemp^0,w,c
 10464  015E66  6EE6               	movwf	postinc1,c
 10465  015E68  0E00               	movlw	0
 10466  015E6A  6EE6               	movwf	postinc1,c
 10467  015E6C  0E49               	movlw	low STR_49
 10468  015E6E  6EE6               	movwf	postinc1,c
 10469  015E70  0EFF               	movlw	high STR_49
 10470  015E72  6EE6               	movwf	postinc1,c
 10471  015E74  0E00               	movlw	0
 10472  015E76  6EE6               	movwf	postinc1,c
 10473  015E78  0E02               	movlw	2
 10474  015E7A  6EE6               	movwf	postinc1,c
 10475  015E7C  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 10476  015E80  0060  F007  FFE6   	movff	btemp,postinc1
 10477  015E86  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10478  015E8C  0E06               	movlw	6
 10479  015E8E  6EE6               	movwf	postinc1,c
 10480  015E90  ECCE  F0D4         	call	_sprintf	;wreg free
 10481                           
 10482                           ;main.c: 498:   update_lcd(0);
 10483  015E94  0E00               	movlw	0
 10484  015E96  6EE6               	movwf	postinc1,c
 10485  015E98  EC46  F0D4         	call	_update_lcd	;wreg free
 10486                           
 10487                           ;main.c: 499:   WaitMs(100);
 10488  015E9C  0E64               	movlw	100
 10489  015E9E  6EE6               	movwf	postinc1,c
 10490  015EA0  0E00               	movlw	0
 10491  015EA2  6EE6               	movwf	postinc1,c
 10492  015EA4  EC08  F0E5         	call	_WaitMs	;wreg free
 10493                           
 10494                           ;main.c: 500:  } while (get_switch(SCALIB));
 10495  015EA8  0E04               	movlw	4
 10496  015EAA  6EE6               	movwf	postinc1,c
 10497  015EAC  EC35  F0E6         	call	_get_switch	;wreg free
 10498  015EB0  5001               	movf	btemp^0,w,c
 10499  015EB2  A4D8               	btfss	status,2,c
 10500  015EB4  D7C7               	goto	l14254
 10501                           
 10502                           ;main.c: 502:  x = 0;
 10503                           ;stkvar	_x @ sp[(-9)+8]
 10504  015EB6  0EFF               	movlw	-1
 10505  015EB8  6AE3               	clrf	plusw1,c
 10506  015EBA                     l14266:
 10507                           
 10508                           ;main.c: 504:   cb += get_raw_result(C_BATT);
 10509  015EBA  0E00               	movlw	0
 10510  015EBC  6EE6               	movwf	postinc1,c
 10511  015EBE  EC37  F0E8         	call	_get_raw_result	;wreg free
 10512                           
 10513                           ;stkvar	_cb @ sp[(-9)+4]
 10514  015EC2  50E1               	movf	fsr1l,w,c
 10515  015EC4  0FFB               	addlw	-5
 10516  015EC6  6ED9               	movwf	fsr2l,c
 10517  015EC8  50E2               	movf	fsr1h,w,c
 10518  015ECA  6EDA               	movwf	fsr2h,c
 10519  015ECC  0EFF               	movlw	255
 10520  015ECE  22DA               	addwfc	fsr2h,f,c
 10521  015ED0  5001               	movf	btemp^0,w,c
 10522  015ED2  26DE               	addwf	postinc2,f,c
 10523  015ED4  5002               	movf	(btemp+1)^0,w,c
 10524  015ED6  22DE               	addwfc	postinc2,f,c
 10525  015ED8  0E00               	movlw	0
 10526  015EDA  22DE               	addwfc	postinc2,f,c
 10527  015EDC  22DE               	addwfc	postinc2,f,c
 10528                           
 10529                           ;main.c: 505:   cp += get_raw_result(C_PV);
 10530  015EDE  0E01               	movlw	1
 10531  015EE0  6EE6               	movwf	postinc1,c
 10532  015EE2  EC37  F0E8         	call	_get_raw_result	;wreg free
 10533                           
 10534                           ;stkvar	_cp @ sp[(-9)+0]
 10535  015EE6  50E1               	movf	fsr1l,w,c
 10536  015EE8  0FF7               	addlw	-9
 10537  015EEA  6ED9               	movwf	fsr2l,c
 10538  015EEC  50E2               	movf	fsr1h,w,c
 10539  015EEE  6EDA               	movwf	fsr2h,c
 10540  015EF0  0EFF               	movlw	255
 10541  015EF2  22DA               	addwfc	fsr2h,f,c
 10542  015EF4  5001               	movf	btemp^0,w,c
 10543  015EF6  26DE               	addwf	postinc2,f,c
 10544  015EF8  5002               	movf	(btemp+1)^0,w,c
 10545  015EFA  22DE               	addwfc	postinc2,f,c
 10546  015EFC  0E00               	movlw	0
 10547  015EFE  22DE               	addwfc	postinc2,f,c
 10548  015F00  22DE               	addwfc	postinc2,f,c
 10549                           
 10550                           ;main.c: 506:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 10551  015F02  0ECB               	movlw	low STR_50
 10552  015F04  6EE6               	movwf	postinc1,c
 10553  015F06  0EFE               	movlw	high STR_50
 10554  015F08  6EE6               	movwf	postinc1,c
 10555  015F0A  0E00               	movlw	0
 10556  015F0C  6EE6               	movwf	postinc1,c
 10557  015F0E  0E00               	movlw	0
 10558  015F10  6EE6               	movwf	postinc1,c
 10559  015F12  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 10560  015F16  0060  F007  FFE6   	movff	btemp,postinc1
 10561  015F1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10562  015F22  0E04               	movlw	4
 10563  015F24  6EE6               	movwf	postinc1,c
 10564  015F26  ECCE  F0D4         	call	_sprintf	;wreg free
 10565                           
 10566                           ; BSR set to: 0
 10567                           ;main.c: 507:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10568  015F2A  0E01               	movlw	1
 10569  015F2C  6EE6               	movwf	postinc1,c
 10570  015F2E  EC37  F0E8         	call	_get_raw_result	;wreg free
 10571  015F32  0060  F007  FFE6   	movff	btemp,postinc1
 10572  015F38  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10573  015F3E  0E00               	movlw	0
 10574  015F40  6EE6               	movwf	postinc1,c
 10575  015F42  EC37  F0E8         	call	_get_raw_result	;wreg free
 10576  015F46  0060  F007  FFE6   	movff	btemp,postinc1
 10577  015F4C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10578  015F52  0EBA               	movlw	low STR_51
 10579  015F54  6EE6               	movwf	postinc1,c
 10580  015F56  0EFD               	movlw	high STR_51
 10581  015F58  6EE6               	movwf	postinc1,c
 10582  015F5A  0E00               	movlw	0
 10583  015F5C  6EE6               	movwf	postinc1,c
 10584  015F5E  0E01               	movlw	1
 10585  015F60  6EE6               	movwf	postinc1,c
 10586  015F62  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 10587  015F66  0060  F007  FFE6   	movff	btemp,postinc1
 10588  015F6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10589  015F72  0E08               	movlw	8
 10590  015F74  6EE6               	movwf	postinc1,c
 10591  015F76  ECCE  F0D4         	call	_sprintf	;wreg free
 10592                           
 10593                           ; BSR set to: 0
 10594                           ;main.c: 508:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 10595                           ;stkvar	_x @ sp[(-9)+8]
 10596  015F7A  0EFF               	movlw	-1
 10597  015F7C  50E3               	movf	plusw1,w,c
 10598  015F7E  6EE6               	movwf	postinc1,c
 10599  015F80  0E00               	movlw	0
 10600  015F82  6EE6               	movwf	postinc1,c
 10601  015F84  0E1F               	movlw	low STR_52
 10602  015F86  6EE6               	movwf	postinc1,c
 10603  015F88  0EFF               	movlw	high STR_52
 10604  015F8A  6EE6               	movwf	postinc1,c
 10605  015F8C  0E00               	movlw	0
 10606  015F8E  6EE6               	movwf	postinc1,c
 10607  015F90  0E02               	movlw	2
 10608  015F92  6EE6               	movwf	postinc1,c
 10609  015F94  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 10610  015F98  0060  F007  FFE6   	movff	btemp,postinc1
 10611  015F9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10612  015FA4  0E06               	movlw	6
 10613  015FA6  6EE6               	movwf	postinc1,c
 10614  015FA8  ECCE  F0D4         	call	_sprintf	;wreg free
 10615                           
 10616                           ; BSR set to: 0
 10617                           ;main.c: 509:   update_lcd(0);
 10618  015FAC  0E00               	movlw	0
 10619  015FAE  6EE6               	movwf	postinc1,c
 10620  015FB0  EC46  F0D4         	call	_update_lcd	;wreg free
 10621                           
 10622                           ;main.c: 510:   clear_adc_scan();
 10623  015FB4  ECB9  F0E9         	call	_clear_adc_scan	;wreg free
 10624                           
 10625                           ; BSR set to: 2
 10626                           ;main.c: 511:   start_adc_scan();
 10627  015FB8  EC80  F0E0         	call	_start_adc_scan	;wreg free
 10628                           
 10629                           ;main.c: 512:   WaitMs(100);
 10630  015FBC  0E64               	movlw	100
 10631  015FBE  6EE6               	movwf	postinc1,c
 10632  015FC0  0E00               	movlw	0
 10633  015FC2  6EE6               	movwf	postinc1,c
 10634  015FC4  EC08  F0E5         	call	_WaitMs	;wreg free
 10635                           
 10636                           ;main.c: 513:  } while (++x < 64);
 10637                           ;stkvar	_x @ sp[(-9)+8]
 10638  015FC8  0EFF               	movlw	-1
 10639  015FCA  2AE3               	incf	plusw1,f,c
 10640  015FCC  0EFF               	movlw	-1
 10641  015FCE  006F FF8C  F001    	movff	plusw1,btemp
 10642  015FD4  0E3F               	movlw	63
 10643  015FD6  6401               	cpfsgt	btemp^0,c
 10644  015FD8  D770               	goto	l14266
 10645                           
 10646                           ;main.c: 514:  cb = cb >> 6;
 10647  015FDA  0E06               	movlw	6
 10648  015FDC  6E0C               	movwf	(btemp+11)^0,c
 10649                           
 10650                           ;stkvar	_cb @ sp[(-9)+4]
 10651  015FDE  50E1               	movf	fsr1l,w,c
 10652  015FE0  0FFB               	addlw	-5
 10653  015FE2  6ED9               	movwf	fsr2l,c
 10654  015FE4  50E2               	movf	fsr1h,w,c
 10655  015FE6  6EDA               	movwf	fsr2h,c
 10656  015FE8  0EFF               	movlw	255
 10657  015FEA  22DA               	addwfc	fsr2h,f,c
 10658  015FEC  280C               	incf	(btemp+11)^0,w,c
 10659  015FEE  52DE               	movf	postinc2,f,c
 10660  015FF0  D007               	goto	u13640
 10661  015FF2                     u13645:
 10662  015FF2  52DE               	movf	postinc2,f,c
 10663  015FF4  52DE               	movf	postinc2,f,c
 10664  015FF6  90D8               	bcf	status,0,c
 10665  015FF8  32DD               	rrcf	postdec2,f,c
 10666  015FFA  32DD               	rrcf	postdec2,f,c
 10667  015FFC  32DD               	rrcf	postdec2,f,c
 10668  015FFE  32DE               	rrcf	postinc2,f,c
 10669  016000                     u13640:
 10670  016000  2EE8               	decfsz	wreg,f,c
 10671  016002  D7F7               	goto	u13645
 10672                           
 10673                           ;main.c: 515:  cp = cp >> 6;
 10674  016004  0E06               	movlw	6
 10675  016006  6E0C               	movwf	(btemp+11)^0,c
 10676                           
 10677                           ;stkvar	_cp @ sp[(-9)+0]
 10678  016008  50E1               	movf	fsr1l,w,c
 10679  01600A  0FF7               	addlw	-9
 10680  01600C  6ED9               	movwf	fsr2l,c
 10681  01600E  50E2               	movf	fsr1h,w,c
 10682  016010  6EDA               	movwf	fsr2h,c
 10683  016012  0EFF               	movlw	255
 10684  016014  22DA               	addwfc	fsr2h,f,c
 10685  016016  280C               	incf	(btemp+11)^0,w,c
 10686  016018  52DE               	movf	postinc2,f,c
 10687  01601A  D007               	goto	u13650
 10688  01601C                     u13655:
 10689  01601C  52DE               	movf	postinc2,f,c
 10690  01601E  52DE               	movf	postinc2,f,c
 10691  016020  90D8               	bcf	status,0,c
 10692  016022  32DD               	rrcf	postdec2,f,c
 10693  016024  32DD               	rrcf	postdec2,f,c
 10694  016026  32DD               	rrcf	postdec2,f,c
 10695  016028  32DE               	rrcf	postinc2,f,c
 10696  01602A                     u13650:
 10697  01602A  2EE8               	decfsz	wreg,f,c
 10698  01602C  D7F7               	goto	u13655
 10699                           
 10700                           ;main.c: 517:  if (cal_current_zero(0, cb, cp)) {
 10701                           ;stkvar	_cp @ sp[(-9)+0]
 10702  01602E  0EF7               	movlw	-9
 10703  016030  006F FF8F FFE6     	movff	plusw1,postinc1
 10704  016036  006F FF8F FFE6     	movff	plusw1,postinc1
 10705                           
 10706                           ;stkvar	_cb @ sp[(-11)+4]
 10707  01603C  0EF9               	movlw	-7
 10708  01603E  006F FF8F FFE6     	movff	plusw1,postinc1
 10709  016044  006F FF8F FFE6     	movff	plusw1,postinc1
 10710  01604A  0E00               	movlw	0
 10711  01604C  6EE6               	movwf	postinc1,c
 10712  01604E  EC5D  F0DC         	call	_cal_current_zero	;wreg free
 10713  016052  5001               	movf	btemp^0,w,c
 10714  016054  B4D8               	btfsc	status,2,c
 10715  016056  D075               	goto	l14304
 10716                           
 10717                           ;main.c: 518:   cal_current_zero(1, cb, cp);
 10718                           ;stkvar	_cp @ sp[(-9)+0]
 10719  016058  0EF7               	movlw	-9
 10720  01605A  006F FF8F FFE6     	movff	plusw1,postinc1
 10721  016060  006F FF8F FFE6     	movff	plusw1,postinc1
 10722                           
 10723                           ;stkvar	_cb @ sp[(-11)+4]
 10724  016066  0EF9               	movlw	-7
 10725  016068  006F FF8F FFE6     	movff	plusw1,postinc1
 10726  01606E  006F FF8F FFE6     	movff	plusw1,postinc1
 10727  016074  0E01               	movlw	1
 10728  016076  6EE6               	movwf	postinc1,c
 10729  016078  EC5D  F0DC         	call	_cal_current_zero	;wreg free
 10730                           
 10731                           ;main.c: 519:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10732  01607C  0EA1               	movlw	low STR_46
 10733  01607E  6EE6               	movwf	postinc1,c
 10734  016080  0EFE               	movlw	high STR_46
 10735  016082  6EE6               	movwf	postinc1,c
 10736  016084  0E00               	movlw	0
 10737  016086  6EE6               	movwf	postinc1,c
 10738  016088  0E00               	movlw	0
 10739  01608A  6EE6               	movwf	postinc1,c
 10740  01608C  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 10741  016090  0060  F007  FFE6   	movff	btemp,postinc1
 10742  016096  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10743  01609C  0E04               	movlw	4
 10744  01609E  6EE6               	movwf	postinc1,c
 10745  0160A0  ECCE  F0D4         	call	_sprintf	;wreg free
 10746                           
 10747                           ; BSR set to: 0
 10748                           ;main.c: 520:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", cb, cp);
 10749                           ;stkvar	_cp @ sp[(-9)+0]
 10750  0160A4  0EF7               	movlw	-9
 10751  0160A6  006F FF8F FFE6     	movff	plusw1,postinc1
 10752  0160AC  006F FF8F FFE6     	movff	plusw1,postinc1
 10753  0160B2  006F FF8F FFE6     	movff	plusw1,postinc1
 10754  0160B8  006F FF8F FFE6     	movff	plusw1,postinc1
 10755                           
 10756                           ;stkvar	_cb @ sp[(-13)+4]
 10757  0160BE  0EF7               	movlw	-9
 10758  0160C0  006F FF8F FFE6     	movff	plusw1,postinc1
 10759  0160C6  006F FF8F FFE6     	movff	plusw1,postinc1
 10760  0160CC  006F FF8F FFE6     	movff	plusw1,postinc1
 10761  0160D2  006F FF8F FFE6     	movff	plusw1,postinc1
 10762  0160D8  0ECF               	movlw	low STR_54
 10763  0160DA  6EE6               	movwf	postinc1,c
 10764  0160DC  0EFD               	movlw	high STR_54
 10765  0160DE  6EE6               	movwf	postinc1,c
 10766  0160E0  0E00               	movlw	0
 10767  0160E2  6EE6               	movwf	postinc1,c
 10768  0160E4  0E01               	movlw	1
 10769  0160E6  6EE6               	movwf	postinc1,c
 10770  0160E8  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 10771  0160EC  0060  F007  FFE6   	movff	btemp,postinc1
 10772  0160F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10773  0160F8  0E0C               	movlw	12
 10774  0160FA  6EE6               	movwf	postinc1,c
 10775  0160FC  ECCE  F0D4         	call	_sprintf	;wreg free
 10776                           
 10777                           ; BSR set to: 0
 10778                           ;main.c: 521:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 10779  016100  0E77               	movlw	low STR_55
 10780  016102  6EE6               	movwf	postinc1,c
 10781  016104  0EFE               	movlw	high STR_55
 10782  016106  6EE6               	movwf	postinc1,c
 10783  016108  0E00               	movlw	0
 10784  01610A  6EE6               	movwf	postinc1,c
 10785  01610C  0E02               	movlw	2
 10786  01610E  6EE6               	movwf	postinc1,c
 10787  016110  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 10788  016114  0060  F007  FFE6   	movff	btemp,postinc1
 10789  01611A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10790  016120  0E04               	movlw	4
 10791  016122  6EE6               	movwf	postinc1,c
 10792  016124  ECCE  F0D4         	call	_sprintf	;wreg free
 10793                           
 10794                           ; BSR set to: 0
 10795                           ;main.c: 522:   update_lcd(0);
 10796  016128  0E00               	movlw	0
 10797  01612A  6EE6               	movwf	postinc1,c
 10798  01612C  EC46  F0D4         	call	_update_lcd	;wreg free
 10799                           
 10800                           ;main.c: 523:   WaitMs(2000);
 10801  016130  0ED0               	movlw	208
 10802  016132  6EE6               	movwf	postinc1,c
 10803  016134  0E07               	movlw	7
 10804  016136  6EE6               	movwf	postinc1,c
 10805  016138  EC08  F0E5         	call	_WaitMs	;wreg free
 10806                           
 10807                           ;main.c: 524:   write_cal_data();
 10808  01613C  ECC9  F0CD         	call	_write_cal_data	;wreg free
 10809                           
 10810                           ;main.c: 525:  } else {
 10811  016140  D05A               	goto	l1501
 10812  016142                     l14304:
 10813                           
 10814                           ;main.c: 526:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10815  016142  0EA1               	movlw	low STR_46
 10816  016144  6EE6               	movwf	postinc1,c
 10817  016146  0EFE               	movlw	high STR_46
 10818  016148  6EE6               	movwf	postinc1,c
 10819  01614A  0E00               	movlw	0
 10820  01614C  6EE6               	movwf	postinc1,c
 10821  01614E  0E00               	movlw	0
 10822  016150  6EE6               	movwf	postinc1,c
 10823  016152  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 10824  016156  0060  F007  FFE6   	movff	btemp,postinc1
 10825  01615C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10826  016162  0E04               	movlw	4
 10827  016164  6EE6               	movwf	postinc1,c
 10828  016166  ECCE  F0D4         	call	_sprintf	;wreg free
 10829                           
 10830                           ;main.c: 527:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10831  01616A  0E01               	movlw	1
 10832  01616C  6EE6               	movwf	postinc1,c
 10833  01616E  EC37  F0E8         	call	_get_raw_result	;wreg free
 10834  016172  0060  F007  FFE6   	movff	btemp,postinc1
 10835  016178  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10836  01617E  0E00               	movlw	0
 10837  016180  6EE6               	movwf	postinc1,c
 10838  016182  EC37  F0E8         	call	_get_raw_result	;wreg free
 10839  016186  0060  F007  FFE6   	movff	btemp,postinc1
 10840  01618C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10841  016192  0ECF               	movlw	low STR_54
 10842  016194  6EE6               	movwf	postinc1,c
 10843  016196  0EFD               	movlw	high STR_54
 10844  016198  6EE6               	movwf	postinc1,c
 10845  01619A  0E00               	movlw	0
 10846  01619C  6EE6               	movwf	postinc1,c
 10847  01619E  0E01               	movlw	1
 10848  0161A0  6EE6               	movwf	postinc1,c
 10849  0161A2  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 10850  0161A6  0060  F007  FFE6   	movff	btemp,postinc1
 10851  0161AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10852  0161B2  0E08               	movlw	8
 10853  0161B4  6EE6               	movwf	postinc1,c
 10854  0161B6  ECCE  F0D4         	call	_sprintf	;wreg free
 10855                           
 10856                           ;main.c: 528:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range   ");
 10857  0161BA  0E0A               	movlw	low STR_58
 10858  0161BC  6EE6               	movwf	postinc1,c
 10859  0161BE  0EFF               	movlw	high STR_58
 10860  0161C0  6EE6               	movwf	postinc1,c
 10861  0161C2  0E00               	movlw	0
 10862  0161C4  6EE6               	movwf	postinc1,c
 10863  0161C6  0E02               	movlw	2
 10864  0161C8  6EE6               	movwf	postinc1,c
 10865  0161CA  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 10866  0161CE  0060  F007  FFE6   	movff	btemp,postinc1
 10867  0161D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10868  0161DA  0E04               	movlw	4
 10869  0161DC  6EE6               	movwf	postinc1,c
 10870  0161DE  ECCE  F0D4         	call	_sprintf	;wreg free
 10871                           
 10872                           ;main.c: 529:   update_lcd(0);
 10873  0161E2  0E00               	movlw	0
 10874  0161E4  6EE6               	movwf	postinc1,c
 10875  0161E6  EC46  F0D4         	call	_update_lcd	;wreg free
 10876                           
 10877                           ;main.c: 530:   WaitMs(2000);
 10878  0161EA  0ED0               	movlw	208
 10879  0161EC  6EE6               	movwf	postinc1,c
 10880  0161EE  0E07               	movlw	7
 10881  0161F0  6EE6               	movwf	postinc1,c
 10882  0161F2  EC08  F0E5         	call	_WaitMs	;wreg free
 10883  0161F6                     l1501:
 10884                           
 10885                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 10886  0161F6  0EF7               	movlw	247
 10887  0161F8  26E1               	addwf	fsr1l,f,c
 10888  0161FA  0EFF               	movlw	255
 10889  0161FC  22E2               	addwfc	fsr1h,f,c
 10890  0161FE  0012               	return		;funcret
 10891  016200                     __end_of_current_sensor_cal:
 10892                           	opt callstack 0
 10893                           
 10894 ;; *************** function _write_cal_data *****************
 10895 ;; Defined at:
 10896 ;;		line 406 in file "daq.c"
 10897 ;; Parameters:    Size  Location     Type
 10898 ;;		None
 10899 ;; Auto vars:     Size  Location     Type
 10900 ;;  x               2  [STACK] unsigned short 
 10901 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 10902 ;;		 -> R(167), 
 10903 ;;  y               2  [STACK] unsigned short 
 10904 ;;  crcVal          1  [STACK] unsigned char 
 10905 ;; Return value:  Size  Location     Type
 10906 ;;                  1  [STACK] void 
 10907 ;; Registers used:
 10908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 10909 ;; Tracked objects:
 10910 ;;		On entry : 0/0
 10911 ;;		On exit  : 0/0
 10912 ;;		Unchanged: 0/0
 10913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10918 ;;Total ram usage:        0 bytes
 10919 ;; Hardware stack levels used:    1
 10920 ;; Hardware stack levels required when called:   17
 10921 ;; This function calls:
 10922 ;;		_CRC_8BitDataWrite
 10923 ;;		_CRC_CalculatedResultGet
 10924 ;;		_CRC_Initialize
 10925 ;;		_CRC_IsBusy
 10926 ;;		_CRC_Start
 10927 ;;		_DATAEE_WriteByte
 10928 ;; This function is called by:
 10929 ;;		_current_sensor_cal
 10930 ;; This function uses a reentrant model
 10931 ;;
 10932                           
 10933                           	psect	text31
 10934  019B92                     __ptext31:
 10935                           	opt callstack 0
 10936  019B92                     _write_cal_data:
 10937                           	opt callstack 0
 10938                           
 10939                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10940  019B92  0E07               	movlw	7
 10941  019B94  26E1               	addwf	fsr1l,f,c
 10942  019B96  0E00               	movlw	0
 10943  019B98  22E2               	addwfc	fsr1h,f,c
 10944                           
 10945                           ;daq.c: 408:  uint16_t x = 0, y;
 10946                           ;stkvar	_x @ sp[(-7)+0]
 10947                           
 10948                           ;incstack = 0
 10949  019B9A  0EF9               	movlw	-7
 10950  019B9C  6AE3               	clrf	plusw1,c
 10951  019B9E  0EFA               	movlw	-6
 10952  019BA0  6AE3               	clrf	plusw1,c
 10953                           
 10954                           ;daq.c: 409:  uint8_t *r_cal_ptr, crcVal;;daq.c: 411:  y = sizeof(R);
 10955  019BA2  0EA7               	movlw	167
 10956  019BA4  6E0B               	movwf	(btemp+10)^0,c
 10957  019BA6  0E00               	movlw	0
 10958  019BA8  6E0C               	movwf	(btemp+11)^0,c
 10959                           
 10960                           ;stkvar	_y @ sp[(-7)+4]
 10961  019BAA  0EFD               	movlw	-3
 10962  019BAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10963  019BB2  0EFE               	movlw	-2
 10964  019BB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 10965                           
 10966                           ;daq.c: 412:  R.crc = 0x42;
 10967  019BBA  0E42               	movlw	66
 10968  019BBC  0102               	movlb	2	; () banked
 10969  019BBE  6FA6               	movwf	(_R+166)& (0+255),b	;volatile
 10970                           
 10971                           ; BSR set to: 2
 10972                           ;daq.c: 413:  r_cal_ptr = (uint8_t*) & R;
 10973                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 10974  019BC0  0E02               	movlw	high _R
 10975  019BC2  6E01               	movwf	btemp^0,c
 10976  019BC4  0EFC               	movlw	-4
 10977  019BC6  0060  F007  FFE3   	movff	btemp,plusw1
 10978  019BCC  0E00               	movlw	low _R
 10979  019BCE  6E01               	movwf	btemp^0,c
 10980  019BD0  0EFB               	movlw	-5
 10981  019BD2  0060  F007  FFE3   	movff	btemp,plusw1
 10982                           
 10983                           ; BSR set to: 2
 10984                           ;daq.c: 414:  R.checkmark = 0x1957;
 10985  019BD8  0E19               	movlw	25
 10986  019BDA  6FA5               	movwf	(_R+165)& (0+255),b	;volatile
 10987  019BDC  0E57               	movlw	87
 10988  019BDE  6FA4               	movwf	(_R+164)& (0+255),b	;volatile
 10989                           
 10990                           ; BSR set to: 2
 10991                           ;daq.c: 416:  CRC_Initialize();
 10992  019BE0  EC38  F0DD         	call	_CRC_Initialize	;wreg free
 10993                           
 10994                           ; BSR set to: 0
 10995                           ;daq.c: 419:  CRC_Start();
 10996  019BE4  ECB6  F0E9         	call	_CRC_Start	;wreg free
 10997  019BE8                     l11404:
 10998                           
 10999                           ;daq.c: 422:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 11000                           ;stkvar	_x @ sp[(-7)+0]
 11001  019BE8  0EF9               	movlw	-7
 11002  019BEA  006F FF8C  F00B    	movff	plusw1,btemp+10
 11003  019BF0  0EFA               	movlw	-6
 11004  019BF2  006F FF8C  F00C    	movff	plusw1,btemp+11
 11005                           
 11006                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 11007  019BF8  0EFB               	movlw	-5
 11008  019BFA  006F FF8C  F009    	movff	plusw1,btemp+8
 11009  019C00  0EFC               	movlw	-4
 11010  019C02  006F FF8C  F00A    	movff	plusw1,btemp+9
 11011  019C08  500B               	movf	(btemp+10)^0,w,c
 11012  019C0A  2409               	addwf	(btemp+8)^0,w,c
 11013  019C0C  6ED9               	movwf	fsr2l,c
 11014  019C0E  500C               	movf	(btemp+11)^0,w,c
 11015  019C10  200A               	addwfc	(btemp+9)^0,w,c
 11016  019C12  6EDA               	movwf	fsr2h,c
 11017  019C14  50DF               	movf	indf2,w,c
 11018  019C16  6EE6               	movwf	postinc1,c
 11019                           
 11020                           ;stkvar	_x @ sp[(-8)+0]
 11021  019C18  0EF8               	movlw	-8
 11022  019C1A  006F FF8F FFE6     	movff	plusw1,postinc1
 11023  019C20  006F FF8F FFE6     	movff	plusw1,postinc1
 11024  019C26  EC19  F0E0         	call	_DATAEE_WriteByte	;wreg free
 11025                           
 11026                           ;daq.c: 423:   CRC_8BitDataWrite(r_cal_ptr[x]);
 11027                           ;stkvar	_x @ sp[(-7)+0]
 11028  019C2A  0EF9               	movlw	-7
 11029  019C2C  006F FF8C  F00B    	movff	plusw1,btemp+10
 11030  019C32  0EFA               	movlw	-6
 11031  019C34  006F FF8C  F00C    	movff	plusw1,btemp+11
 11032                           
 11033                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 11034  019C3A  0EFB               	movlw	-5
 11035  019C3C  006F FF8C  F009    	movff	plusw1,btemp+8
 11036  019C42  0EFC               	movlw	-4
 11037  019C44  006F FF8C  F00A    	movff	plusw1,btemp+9
 11038  019C4A  500B               	movf	(btemp+10)^0,w,c
 11039  019C4C  2409               	addwf	(btemp+8)^0,w,c
 11040  019C4E  6ED9               	movwf	fsr2l,c
 11041  019C50  500C               	movf	(btemp+11)^0,w,c
 11042  019C52  200A               	addwfc	(btemp+9)^0,w,c
 11043  019C54  6EDA               	movwf	fsr2h,c
 11044  019C56  50DF               	movf	indf2,w,c
 11045  019C58  6EE6               	movwf	postinc1,c
 11046  019C5A  EC22  F0E9         	call	_CRC_8BitDataWrite	;wreg free
 11047  019C5E                     l11408:
 11048  019C5E  EC44  F0E9         	call	_CRC_IsBusy	;wreg free
 11049  019C62  5001               	movf	btemp^0,w,c
 11050  019C64  A4D8               	btfss	status,2,c
 11051  019C66  D7FB               	goto	l11408
 11052                           
 11053                           ;daq.c: 425:  } while (++x < y);
 11054                           ;stkvar	_y @ sp[(-7)+4]
 11055  019C68  0EFD               	movlw	-3
 11056  019C6A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11057  019C70  0EFE               	movlw	-2
 11058  019C72  006F FF8C  F00C    	movff	plusw1,btemp+11
 11059                           
 11060                           ;stkvar	_x @ sp[(-7)+0]
 11061  019C78  0EF9               	movlw	-7
 11062  019C7A  50E3               	movf	plusw1,w,c
 11063  019C7C  0F01               	addlw	1
 11064  019C7E  6E01               	movwf	btemp^0,c
 11065  019C80  0EF9               	movlw	-7
 11066  019C82  0060  F007  FFE3   	movff	btemp,plusw1
 11067  019C88  6A01               	clrf	btemp^0,c
 11068  019C8A  0EFA               	movlw	-6
 11069  019C8C  50E3               	movf	plusw1,w,c
 11070  019C8E  2001               	addwfc	btemp^0,w,c
 11071  019C90  6E01               	movwf	btemp^0,c
 11072  019C92  0EFA               	movlw	-6
 11073  019C94  0060  F007  FFE3   	movff	btemp,plusw1
 11074  019C9A  0EF9               	movlw	-7
 11075  019C9C  006F FF8C  F009    	movff	plusw1,btemp+8
 11076  019CA2  0EFA               	movlw	-6
 11077  019CA4  006F FF8C  F00A    	movff	plusw1,btemp+9
 11078  019CAA  500B               	movf	(btemp+10)^0,w,c
 11079  019CAC  5C09               	subwf	(btemp+8)^0,w,c
 11080  019CAE  500C               	movf	(btemp+11)^0,w,c
 11081  019CB0  580A               	subwfb	(btemp+9)^0,w,c
 11082  019CB2  A0D8               	btfss	status,0,c
 11083  019CB4  D799               	goto	l11404
 11084                           
 11085                           ;daq.c: 427:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 11086  019CB6  0E00               	movlw	0
 11087  019CB8  6EE6               	movwf	postinc1,c
 11088  019CBA  0E00               	movlw	0
 11089  019CBC  6EE6               	movwf	postinc1,c
 11090  019CBE  0E00               	movlw	0
 11091  019CC0  6EE6               	movwf	postinc1,c
 11092  019CC2  ECF5  F0CA         	call	_CRC_CalculatedResultGet	;wreg free
 11093                           
 11094                           ;stkvar	_crcVal @ sp[(-7)+6]
 11095  019CC6  0EFF               	movlw	-1
 11096  019CC8  0060  F007  FFE3   	movff	btemp,plusw1
 11097                           
 11098                           ;daq.c: 429:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 11099                           ;stkvar	_crcVal @ sp[(-7)+6]
 11100  019CCE  0EFF               	movlw	-1
 11101  019CD0  50E3               	movf	plusw1,w,c
 11102  019CD2  6EE6               	movwf	postinc1,c
 11103  019CD4  0EA6               	movlw	166
 11104  019CD6  6EE6               	movwf	postinc1,c
 11105  019CD8  0E00               	movlw	0
 11106  019CDA  6EE6               	movwf	postinc1,c
 11107  019CDC  EC19  F0E0         	call	_DATAEE_WriteByte	;wreg free
 11108                           
 11109                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11110  019CE0  0EF9               	movlw	249
 11111  019CE2  26E1               	addwf	fsr1l,f,c
 11112  019CE4  0EFF               	movlw	255
 11113  019CE6  22E2               	addwfc	fsr1h,f,c
 11114  019CE8  0012               	return		;funcret
 11115  019CEA                     __end_of_write_cal_data:
 11116                           	opt callstack 0
 11117                           
 11118 ;; *************** function _DATAEE_WriteByte *****************
 11119 ;; Defined at:
 11120 ;;		line 172 in file "mcc_generated_files/memory.c"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;  bAdd            2  [STACK] unsigned short 
 11123 ;;  bData           1  [STACK] unsigned char 
 11124 ;; Auto vars:     Size  Location     Type
 11125 ;;  GIEBitValue     1  [STACK] unsigned char 
 11126 ;; Return value:  Size  Location     Type
 11127 ;;                  1  [STACK] void 
 11128 ;; Registers used:
 11129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 11130 ;; Tracked objects:
 11131 ;;		On entry : 0/39
 11132 ;;		On exit  : 0/0
 11133 ;;		Unchanged: 0/0
 11134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11139 ;;Total ram usage:        0 bytes
 11140 ;; Hardware stack levels used:    1
 11141 ;; Hardware stack levels required when called:   15
 11142 ;; This function calls:
 11143 ;;		Nothing
 11144 ;; This function is called by:
 11145 ;;		_write_cal_data
 11146 ;; This function uses a reentrant model
 11147 ;;
 11148                           
 11149                           	psect	text32
 11150  01C032                     __ptext32:
 11151                           	opt callstack 0
 11152  01C032                     _DATAEE_WriteByte:
 11153                           	opt callstack 0
 11154                           
 11155                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11156  01C032  52E6               	movf	postinc1,f,c
 11157                           
 11158                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 11159                           
 11160                           ;incstack = 0
 11161  01C034  AED2               	btfss	210,7,c	;volatile
 11162  01C036  D003               	goto	u9840
 11163  01C038  6A0C               	clrf	(btemp+11)^0,c
 11164  01C03A  2A0C               	incf	(btemp+11)^0,f,c
 11165  01C03C  D001               	goto	u9848
 11166  01C03E                     u9840:
 11167  01C03E  6A0C               	clrf	(btemp+11)^0,c
 11168  01C040                     u9848:
 11169                           
 11170                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 11171  01C040  0EFF               	movlw	-1
 11172  01C042  0060  F033  FFE3   	movff	btemp+11,plusw1
 11173                           
 11174                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 11175                           ;stkvar	_bAdd @ sp[(-1)+-2]
 11176  01C048  0EFE               	movlw	254
 11177  01C04A  24E1               	addwf	fsr1l,w,c
 11178  01C04C  6ED9               	movwf	fsr2l,c
 11179  01C04E  0EFF               	movlw	255
 11180  01C050  20E2               	addwfc	fsr1h,w,c
 11181  01C052  6EDA               	movwf	fsr2h,c
 11182  01C054  50DF               	movf	indf2,w,c
 11183  01C056  0B03               	andlw	3
 11184  01C058  0139               	movlb	57	; () banked
 11185  01C05A  6FE1               	movwf	225,b	;volatile
 11186                           
 11187                           ; BSR set to: 57
 11188                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 11189                           ;stkvar	_bAdd @ sp[(-1)+-2]
 11190  01C05C  0EFD               	movlw	-3
 11191  01C05E  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 11192                           
 11193                           ; BSR set to: 57
 11194                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 11195                           ;stkvar	_bData @ sp[(-1)+-3]
 11196  01C064  0EFC               	movlw	-4
 11197  01C066  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 11198                           
 11199                           ; BSR set to: 57
 11200                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 11201  01C06C  0E3F               	movlw	-193
 11202  01C06E  17E5               	andwf	229,f,b	;volsfr
 11203                           
 11204                           ; BSR set to: 57
 11205                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 11206  01C070  85E5               	bsf	229,2,b	;volsfr
 11207                           
 11208                           ; BSR set to: 57
 11209                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 11210  01C072  9ED2               	bcf	210,7,c	;volatile
 11211                           
 11212                           ; BSR set to: 57
 11213                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 11214  01C074  0E55               	movlw	85
 11215  01C076  6FE6               	movwf	230,b	;volsfr
 11216                           
 11217                           ; BSR set to: 57
 11218                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 11219  01C078  0EAA               	movlw	170
 11220  01C07A  6FE6               	movwf	230,b	;volsfr
 11221                           
 11222                           ; BSR set to: 57
 11223                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 11224  01C07C  83E5               	bsf	229,1,b	;volsfr
 11225  01C07E                     l942:
 11226                           
 11227                           ; BSR set to: 57
 11228                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 11229  01C07E  B3E5               	btfsc	229,1,b	;volsfr
 11230  01C080  D7FE               	goto	l942
 11231                           
 11232                           ; BSR set to: 57
 11233                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 11234  01C082  95E5               	bcf	229,2,b	;volsfr
 11235                           
 11236                           ; BSR set to: 57
 11237                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 11238                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 11239  01C084  0EFF               	movlw	-1
 11240  01C086  B0E3               	btfsc	plusw1,0,c
 11241  01C088  D002               	bra	u9865
 11242  01C08A  9ED2               	bcf	210,7,c	;volatile
 11243  01C08C  D001               	bra	u9866
 11244  01C08E                     u9865:
 11245  01C08E  8ED2               	bsf	210,7,c	;volatile
 11246  01C090                     u9866:
 11247                           
 11248                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 11249  01C090  52E5               	movf	postdec1,f,c
 11250  01C092  52E5               	movf	postdec1,f,c
 11251  01C094  52E5               	movf	postdec1,f,c
 11252  01C096  52E5               	movf	postdec1,f,c
 11253  01C098  0012               	return		;funcret
 11254  01C09A                     __end_of_DATAEE_WriteByte:
 11255                           	opt callstack 0
 11256                           
 11257 ;; *************** function _CRC_Start *****************
 11258 ;; Defined at:
 11259 ;;		line 119 in file "mcc_generated_files/crc.c"
 11260 ;; Parameters:    Size  Location     Type
 11261 ;;		None
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;		None
 11264 ;; Return value:  Size  Location     Type
 11265 ;;                  1  [STACK] void 
 11266 ;; Registers used:
 11267 ;;		None
 11268 ;; Tracked objects:
 11269 ;;		On entry : 3F/0
 11270 ;;		On exit  : 3F/39
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11277 ;;Total ram usage:        0 bytes
 11278 ;; Hardware stack levels used:    1
 11279 ;; Hardware stack levels required when called:   15
 11280 ;; This function calls:
 11281 ;;		Nothing
 11282 ;; This function is called by:
 11283 ;;		_read_cal_data
 11284 ;;		_write_cal_data
 11285 ;; This function uses a reentrant model
 11286 ;;
 11287                           
 11288                           	psect	text33
 11289  01D36C                     __ptext33:
 11290                           	opt callstack 0
 11291  01D36C                     _CRC_Start:
 11292                           	opt callstack 14
 11293                           
 11294                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 11295                           
 11296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11297                           ;incstack = 0
 11298  01D36C  0139               	movlb	57	; () banked
 11299  01D36E  8D68               	bsf	104,6,b	;volatile
 11300                           
 11301                           ; BSR set to: 57
 11302                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11303  01D370  0012               	return		;funcret
 11304  01D372                     __end_of_CRC_Start:
 11305                           	opt callstack 0
 11306                           
 11307 ;; *************** function _CRC_IsBusy *****************
 11308 ;; Defined at:
 11309 ;;		line 201 in file "mcc_generated_files/crc.c"
 11310 ;; Parameters:    Size  Location     Type
 11311 ;;		None
 11312 ;; Auto vars:     Size  Location     Type
 11313 ;;		None
 11314 ;; Return value:  Size  Location     Type
 11315 ;;                  1  [STACK] _Bool 
 11316 ;; Registers used:
 11317 ;;		btemp
 11318 ;; Tracked objects:
 11319 ;;		On entry : 0/39
 11320 ;;		On exit  : 0/0
 11321 ;;		Unchanged: 0/0
 11322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11327 ;;Total ram usage:        0 bytes
 11328 ;; Hardware stack levels used:    1
 11329 ;; Hardware stack levels required when called:   15
 11330 ;; This function calls:
 11331 ;;		Nothing
 11332 ;; This function is called by:
 11333 ;;		_read_cal_data
 11334 ;;		_write_cal_data
 11335 ;; This function uses a reentrant model
 11336 ;;
 11337                           
 11338                           	psect	text34
 11339  01D288                     __ptext34:
 11340                           	opt callstack 0
 11341  01D288                     _CRC_IsBusy:
 11342                           	opt callstack 14
 11343                           
 11344                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 11345                           
 11346                           ; BSR set to: 57
 11347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11348                           ;incstack = 0
 11349  01D288  0139               	movlb	57	; () banked
 11350  01D28A  AB68               	btfss	104,5,b	;volatile
 11351  01D28C  D003               	goto	u10050
 11352  01D28E  6A01               	clrf	btemp^0,c
 11353  01D290  2A01               	incf	btemp^0,f,c
 11354  01D292  0012               	return	
 11355  01D294                     u10050:
 11356  01D294  6A01               	clrf	btemp^0,c
 11357                           
 11358                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 11359  01D296  0012               	return		;funcret
 11360  01D298                     __end_of_CRC_IsBusy:
 11361                           	opt callstack 0
 11362                           
 11363 ;; *************** function _CRC_CalculatedResultGet *****************
 11364 ;; Defined at:
 11365 ;;		line 159 in file "mcc_generated_files/crc.c"
 11366 ;; Parameters:    Size  Location     Type
 11367 ;;  reverse         1  [STACK] _Bool 
 11368 ;;  xorValue        2  [STACK] unsigned short 
 11369 ;; Auto vars:     Size  Location     Type
 11370 ;;  result          2  [STACK] unsigned short 
 11371 ;;  mask            2  [STACK] unsigned short 
 11372 ;; Return value:  Size  Location     Type
 11373 ;;                  2  [STACK] unsigned short 
 11374 ;; Registers used:
 11375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 11376 ;; Tracked objects:
 11377 ;;		On entry : 0/39
 11378 ;;		On exit  : 0/0
 11379 ;;		Unchanged: 0/0
 11380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11385 ;;Total ram usage:        0 bytes
 11386 ;; Hardware stack levels used:    1
 11387 ;; Hardware stack levels required when called:   16
 11388 ;; This function calls:
 11389 ;;		_CRC_ReverseValue
 11390 ;; This function is called by:
 11391 ;;		_read_cal_data
 11392 ;;		_write_cal_data
 11393 ;; This function uses a reentrant model
 11394 ;;
 11395                           
 11396                           	psect	text35
 11397  0195EA                     __ptext35:
 11398                           	opt callstack 0
 11399  0195EA                     _CRC_CalculatedResultGet:
 11400                           	opt callstack 0
 11401                           
 11402                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11403  0195EA  52E6               	movf	postinc1,f,c
 11404  0195EC  52E6               	movf	postinc1,f,c
 11405  0195EE  52E6               	movf	postinc1,f,c
 11406  0195F0  52E6               	movf	postinc1,f,c
 11407                           
 11408                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 11409                           
 11410                           ;incstack = 0
 11411  0195F2  0139               	movlb	57	; () banked
 11412  0195F4  9D68               	bcf	104,6,b	;volatile
 11413                           
 11414                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 11415  0195F6  9DA0               	bcf	160,6,b	;volatile
 11416                           
 11417                           ; BSR set to: 57
 11418                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 11419  0195F8  5169               	movf	105,w,b	;volatile
 11420  0195FA  0B0F               	andlw	15
 11421  0195FC  6E0C               	movwf	(btemp+11)^0,c
 11422  0195FE  3A0C               	swapf	(btemp+11)^0,f,c
 11423  019600  5169               	movf	105,w,b	;volatile
 11424  019602  180C               	xorwf	(btemp+11)^0,w,c
 11425  019604  0B0F               	andlw	-241
 11426  019606  180C               	xorwf	(btemp+11)^0,w,c
 11427  019608  6F69               	movwf	105,b	;volatile
 11428                           
 11429                           ; BSR set to: 57
 11430                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 11431  01960A  0E08               	movlw	8
 11432  01960C  0100               	movlb	0	; () banked
 11433  01960E  65D6               	cpfsgt	(_crcObj+1)& (0+255),b
 11434  019610  D003               	goto	l1282
 11435                           
 11436                           ; BSR set to: 0
 11437                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 11438  019612  0139               	movlb	57	; () banked
 11439  019614  6B61               	clrf	97,b	;volatile
 11440  019616  D001               	goto	L9
 11441  019618                     l1282:
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 11445  019618  0139               	movlb	57	; () banked
 11446  01961A                     L9:
 11447  01961A  6B60               	clrf	96,b	;volatile
 11448                           
 11449                           ; BSR set to: 57
 11450                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 11451                           
 11452                           ;mcc_generated_files/crc.c: 176:      }
 11453  01961C  8D68               	bsf	104,6,b	;volatile
 11454  01961E                     l1284:
 11455                           
 11456                           ; BSR set to: 57
 11457  01961E  ADA0               	btfss	160,6,b	;volatile
 11458  019620  D7FE               	goto	l1284
 11459                           
 11460                           ; BSR set to: 57
 11461                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 11462  019622  9DA0               	bcf	160,6,b	;volatile
 11463                           
 11464                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 11465  019624  9D68               	bcf	104,6,b	;volatile
 11466                           
 11467                           ; BSR set to: 57
 11468                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 11469  019626  0060  F354  F00C   	movff	_crcObj,btemp+11
 11470  01962C  0EFF               	movlw	255
 11471  01962E  260C               	addwf	(btemp+11)^0,f,c
 11472  019630  3A0C               	swapf	(btemp+11)^0,f,c
 11473  019632  5169               	movf	105,w,b	;volatile
 11474  019634  180C               	xorwf	(btemp+11)^0,w,c
 11475  019636  0B0F               	andlw	-241
 11476  019638  180C               	xorwf	(btemp+11)^0,w,c
 11477  01963A  6F69               	movwf	105,b	;volatile
 11478                           
 11479                           ; BSR set to: 57
 11480                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 11481  01963C  5162               	movf	98,w,b	;volatile
 11482  01963E  006E F58C  F001    	movff	14691,btemp	;volatile
 11483  019644  6A02               	clrf	(btemp+1)^0,c
 11484  019646  0060  F004  F002   	movff	btemp,btemp+1
 11485  01964C  6A01               	clrf	btemp^0,c
 11486  01964E  1201               	iorwf	btemp^0,f,c
 11487  019650  0E00               	movlw	0
 11488  019652  1202               	iorwf	(btemp+1)^0,f,c
 11489                           
 11490                           ;stkvar	_result @ sp[(-4)+0]
 11491  019654  0EFC               	movlw	-4
 11492  019656  0060  F007  FFE3   	movff	btemp,plusw1
 11493  01965C  0EFD               	movlw	-3
 11494  01965E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11495                           
 11496                           ; BSR set to: 57
 11497                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 11498  019664  0E10               	movlw	16
 11499  019666  0100               	movlb	0	; () banked
 11500  019668  61D6               	cpfslt	(_crcObj+1)& (0+255),b
 11501  01966A  D03A               	goto	l10736
 11502                           
 11503                           ; BSR set to: 0
 11504                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 11505  01966C  0EFF               	movlw	255
 11506  01966E  6E0B               	movwf	(btemp+10)^0,c
 11507  019670  0EFF               	movlw	255
 11508  019672  6E0C               	movwf	(btemp+11)^0,c
 11509  019674  0060  F358  F00A   	movff	_crcObj+1,btemp+9
 11510  01967A  0E01               	movlw	1
 11511  01967C  6E07               	movwf	(btemp+6)^0,c
 11512  01967E  0E00               	movlw	0
 11513  019680  6E08               	movwf	(btemp+7)^0,c
 11514  019682  2A0A               	incf	(btemp+9)^0,f,c
 11515  019684  D003               	goto	u10034
 11516  019686                     u10035:
 11517  019686  90D8               	bcf	status,0,c
 11518  019688  3607               	rlcf	(btemp+6)^0,f,c
 11519  01968A  3608               	rlcf	(btemp+7)^0,f,c
 11520  01968C                     u10034:
 11521  01968C  2E0A               	decfsz	(btemp+9)^0,f,c
 11522  01968E  D7FB               	goto	u10035
 11523  019690  500B               	movf	(btemp+10)^0,w,c
 11524  019692  2607               	addwf	(btemp+6)^0,f,c
 11525  019694  500C               	movf	(btemp+11)^0,w,c
 11526  019696  2208               	addwfc	(btemp+7)^0,f,c
 11527                           
 11528                           ;stkvar	_mask @ sp[(-4)+2]
 11529  019698  0EFE               	movlw	-2
 11530  01969A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 11531  0196A0  0EFF               	movlw	-1
 11532  0196A2  0060  F023  FFE3   	movff	btemp+7,plusw1
 11533                           
 11534                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 11535                           ;stkvar	_mask @ sp[(-4)+2]
 11536  0196A8  0EFE               	movlw	-2
 11537  0196AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 11538  0196B0  0EFF               	movlw	-1
 11539  0196B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 11540                           
 11541                           ;stkvar	_result @ sp[(-4)+0]
 11542  0196B8  0EFC               	movlw	-4
 11543  0196BA  006F FF8C  F001    	movff	plusw1,btemp
 11544  0196C0  500B               	movf	(btemp+10)^0,w,c
 11545  0196C2  1601               	andwf	btemp^0,f,c
 11546  0196C4  0EFC               	movlw	-4
 11547  0196C6  0060  F007  FFE3   	movff	btemp,plusw1
 11548  0196CC  0EFD               	movlw	-3
 11549  0196CE  006F FF8C  F001    	movff	plusw1,btemp
 11550  0196D4  500C               	movf	(btemp+11)^0,w,c
 11551  0196D6  1601               	andwf	btemp^0,f,c
 11552  0196D8  0EFD               	movlw	-3
 11553  0196DA  0060  F007  FFE3   	movff	btemp,plusw1
 11554  0196E0                     l10736:
 11555                           
 11556                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 11557                           ;stkvar	_reverse @ sp[(-4)+-1]
 11558  0196E0  0EFB               	movlw	-5
 11559  0196E2  50E3               	movf	plusw1,w,c
 11560  0196E4  B4D8               	btfsc	status,2,c
 11561  0196E6  D011               	goto	l10740
 11562                           
 11563                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 11564                           ;stkvar	_result @ sp[(-4)+0]
 11565  0196E8  0EFC               	movlw	-4
 11566  0196EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11567  0196F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11568  0196F6  EC82  F0D7         	call	_CRC_ReverseValue	;wreg free
 11569                           
 11570                           ;stkvar	_result @ sp[(-4)+0]
 11571  0196FA  0EFC               	movlw	-4
 11572  0196FC  0060  F007  FFE3   	movff	btemp,plusw1
 11573  019702  0EFD               	movlw	-3
 11574  019704  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11575  01970A                     l10740:
 11576                           
 11577                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 11578                           ;stkvar	_xorValue @ sp[(-4)+-3]
 11579  01970A  0EF9               	movlw	-7
 11580  01970C  006F FF8C  F00B    	movff	plusw1,btemp+10
 11581  019712  0EFA               	movlw	-6
 11582  019714  006F FF8C  F00C    	movff	plusw1,btemp+11
 11583                           
 11584                           ;stkvar	_result @ sp[(-4)+0]
 11585  01971A  0EFC               	movlw	-4
 11586  01971C  006F FF8C  F001    	movff	plusw1,btemp
 11587  019722  500B               	movf	(btemp+10)^0,w,c
 11588  019724  1A01               	xorwf	btemp^0,f,c
 11589  019726  0EFC               	movlw	-4
 11590  019728  0060  F007  FFE3   	movff	btemp,plusw1
 11591  01972E  0EFD               	movlw	-3
 11592  019730  006F FF8C  F001    	movff	plusw1,btemp
 11593  019736  500C               	movf	(btemp+11)^0,w,c
 11594  019738  1A01               	xorwf	btemp^0,f,c
 11595  01973A  0EFD               	movlw	-3
 11596  01973C  0060  F007  FFE3   	movff	btemp,plusw1
 11597                           
 11598                           ;mcc_generated_files/crc.c: 198:     return result;
 11599                           ;stkvar	_result @ sp[(-4)+0]
 11600  019742  0EFC               	movlw	-4
 11601  019744  006F FF8C  F001    	movff	plusw1,btemp
 11602  01974A  0EFD               	movlw	-3
 11603  01974C  006F FF8C  F002    	movff	plusw1,btemp+1
 11604                           
 11605                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 11606  019752  0EF9               	movlw	249
 11607  019754  26E1               	addwf	fsr1l,f,c
 11608  019756  0EFF               	movlw	255
 11609  019758  22E2               	addwfc	fsr1h,f,c
 11610  01975A  0012               	return		;funcret
 11611  01975C                     __end_of_CRC_CalculatedResultGet:
 11612                           	opt callstack 0
 11613                           
 11614 ;; *************** function _CRC_ReverseValue *****************
 11615 ;; Defined at:
 11616 ;;		line 138 in file "mcc_generated_files/crc.c"
 11617 ;; Parameters:    Size  Location     Type
 11618 ;;  crc             2  [STACK] unsigned short 
 11619 ;; Auto vars:     Size  Location     Type
 11620 ;;  mask            2  [STACK] unsigned short 
 11621 ;;  reverse         2  [STACK] unsigned short 
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  2  [STACK] unsigned short 
 11624 ;; Registers used:
 11625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11626 ;; Tracked objects:
 11627 ;;		On entry : 0/0
 11628 ;;		On exit  : 0/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11635 ;;Total ram usage:        0 bytes
 11636 ;; Hardware stack levels used:    1
 11637 ;; Hardware stack levels required when called:   15
 11638 ;; This function calls:
 11639 ;;		Nothing
 11640 ;; This function is called by:
 11641 ;;		_CRC_CalculatedResultGet
 11642 ;; This function uses a reentrant model
 11643 ;;
 11644                           
 11645                           	psect	text36
 11646  01AF04                     __ptext36:
 11647                           	opt callstack 0
 11648  01AF04                     _CRC_ReverseValue:
 11649                           	opt callstack 0
 11650                           
 11651                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11652  01AF04  52E6               	movf	postinc1,f,c
 11653  01AF06  52E6               	movf	postinc1,f,c
 11654  01AF08  52E6               	movf	postinc1,f,c
 11655  01AF0A  52E6               	movf	postinc1,f,c
 11656                           
 11657                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 11658                           
 11659                           ;incstack = 0
 11660  01AF0C  0E01               	movlw	1
 11661  01AF0E  6E0B               	movwf	(btemp+10)^0,c
 11662  01AF10  0E00               	movlw	0
 11663  01AF12  6E0C               	movwf	(btemp+11)^0,c
 11664                           
 11665                           ;stkvar	_mask @ sp[(-4)+0]
 11666  01AF14  0EFC               	movlw	-4
 11667  01AF16  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11668  01AF1C  0EFD               	movlw	-3
 11669  01AF1E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11670                           
 11671                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 11672  01AF24  0060  F358  F00C   	movff	_crcObj+1,btemp+11
 11673  01AF2A  0EFF               	movlw	255
 11674  01AF2C  260C               	addwf	(btemp+11)^0,f,c
 11675                           
 11676                           ;stkvar	_mask @ sp[(-4)+0]
 11677  01AF2E  50E1               	movf	fsr1l,w,c
 11678  01AF30  0FFC               	addlw	-4
 11679  01AF32  6ED9               	movwf	fsr2l,c
 11680  01AF34  50E2               	movf	fsr1h,w,c
 11681  01AF36  6EDA               	movwf	fsr2h,c
 11682  01AF38  0EFF               	movlw	255
 11683  01AF3A  22DA               	addwfc	fsr2h,f,c
 11684  01AF3C  280C               	incf	(btemp+11)^0,w,c
 11685  01AF3E  D003               	goto	u9640
 11686  01AF40                     u9645:
 11687  01AF40  90D8               	bcf	status,0,c
 11688  01AF42  36DE               	rlcf	postinc2,f,c
 11689  01AF44  36DD               	rlcf	postdec2,f,c
 11690  01AF46                     u9640:
 11691  01AF46  2EE8               	decfsz	wreg,f,c
 11692  01AF48  D7FB               	goto	u9645
 11693                           
 11694                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 11695                           ;stkvar	_reverse @ sp[(-4)+2]
 11696  01AF4A  0EFE               	movlw	-2
 11697  01AF4C  6AE3               	clrf	plusw1,c
 11698  01AF4E  0EFF               	movlw	-1
 11699  01AF50  6AE3               	clrf	plusw1,c
 11700                           
 11701                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11702  01AF52  D029               	goto	l10454
 11703  01AF54                     l10446:
 11704                           
 11705                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 11706                           ;stkvar	_crc @ sp[(-4)+-2]
 11707  01AF54  0EFA               	movlw	-6
 11708  01AF56  A0E3               	btfss	plusw1,0,c
 11709  01AF58  D01C               	goto	l10450
 11710                           
 11711                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 11712                           ;stkvar	_mask @ sp[(-4)+0]
 11713  01AF5A  0EFC               	movlw	-4
 11714  01AF5C  006F FF8C  F00B    	movff	plusw1,btemp+10
 11715  01AF62  0EFD               	movlw	-3
 11716  01AF64  006F FF8C  F00C    	movff	plusw1,btemp+11
 11717                           
 11718                           ;stkvar	_reverse @ sp[(-4)+2]
 11719  01AF6A  0EFE               	movlw	-2
 11720  01AF6C  006F FF8C  F001    	movff	plusw1,btemp
 11721  01AF72  500B               	movf	(btemp+10)^0,w,c
 11722  01AF74  1201               	iorwf	btemp^0,f,c
 11723  01AF76  0EFE               	movlw	-2
 11724  01AF78  0060  F007  FFE3   	movff	btemp,plusw1
 11725  01AF7E  0EFF               	movlw	-1
 11726  01AF80  006F FF8C  F001    	movff	plusw1,btemp
 11727  01AF86  500C               	movf	(btemp+11)^0,w,c
 11728  01AF88  1201               	iorwf	btemp^0,f,c
 11729  01AF8A  0EFF               	movlw	-1
 11730  01AF8C  0060  F007  FFE3   	movff	btemp,plusw1
 11731  01AF92                     l10450:
 11732                           
 11733                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 11734                           ;stkvar	_mask @ sp[(-4)+0]
 11735  01AF92  90D8               	bcf	status,0,c
 11736  01AF94  0EFD               	movlw	-3
 11737  01AF96  32E3               	rrcf	plusw1,f,c
 11738  01AF98  0EFC               	movlw	-4
 11739  01AF9A  32E3               	rrcf	plusw1,f,c
 11740                           
 11741                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 11742                           ;stkvar	_crc @ sp[(-4)+-2]
 11743  01AF9C  90D8               	bcf	status,0,c
 11744  01AF9E  0EFB               	movlw	-5
 11745  01AFA0  32E3               	rrcf	plusw1,f,c
 11746  01AFA2  0EFA               	movlw	-6
 11747  01AFA4  32E3               	rrcf	plusw1,f,c
 11748  01AFA6                     l10454:
 11749                           
 11750                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11751                           ;stkvar	_crc @ sp[(-4)+-2]
 11752  01AFA6  0EFA               	movlw	-6
 11753  01AFA8  006F FF8C  F001    	movff	plusw1,btemp
 11754  01AFAE  0EFB               	movlw	-5
 11755  01AFB0  50E3               	movf	plusw1,w,c
 11756  01AFB2  1001               	iorwf	btemp^0,w,c
 11757  01AFB4  A4D8               	btfss	status,2,c
 11758  01AFB6  D7CE               	goto	l10446
 11759                           
 11760                           ;mcc_generated_files/crc.c: 156:     return reverse;
 11761                           ;stkvar	_reverse @ sp[(-4)+2]
 11762  01AFB8  0EFE               	movlw	-2
 11763  01AFBA  006F FF8C  F001    	movff	plusw1,btemp
 11764  01AFC0  0EFF               	movlw	-1
 11765  01AFC2  006F FF8C  F002    	movff	plusw1,btemp+1
 11766                           
 11767                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 11768  01AFC8  0EFA               	movlw	250
 11769  01AFCA  26E1               	addwf	fsr1l,f,c
 11770  01AFCC  0EFF               	movlw	255
 11771  01AFCE  22E2               	addwfc	fsr1h,f,c
 11772  01AFD0  0012               	return		;funcret
 11773  01AFD2                     __end_of_CRC_ReverseValue:
 11774                           	opt callstack 0
 11775                           
 11776 ;; *************** function _CRC_8BitDataWrite *****************
 11777 ;; Defined at:
 11778 ;;		line 125 in file "mcc_generated_files/crc.c"
 11779 ;; Parameters:    Size  Location     Type
 11780 ;;  data            1  [STACK] unsigned char 
 11781 ;; Auto vars:     Size  Location     Type
 11782 ;;		None
 11783 ;; Return value:  Size  Location     Type
 11784 ;;                  1  [STACK] _Bool 
 11785 ;; Registers used:
 11786 ;;		fsr1l, fsr1h
 11787 ;; Tracked objects:
 11788 ;;		On entry : 0/4
 11789 ;;		On exit  : 3F/39
 11790 ;;		Unchanged: 0/0
 11791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11796 ;;Total ram usage:        0 bytes
 11797 ;; Hardware stack levels used:    1
 11798 ;; Hardware stack levels required when called:   15
 11799 ;; This function calls:
 11800 ;;		Nothing
 11801 ;; This function is called by:
 11802 ;;		_read_cal_data
 11803 ;;		_write_cal_data
 11804 ;; This function uses a reentrant model
 11805 ;;
 11806                           
 11807                           	psect	text37
 11808  01D244                     __ptext37:
 11809                           	opt callstack 0
 11810  01D244                     _CRC_8BitDataWrite:
 11811                           	opt callstack 14
 11812                           
 11813                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 11814                           
 11815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11816                           ;incstack = 0
 11817  01D244  0139               	movlb	57	; () banked
 11818  01D246  B168               	btfsc	104,0,b	;volatile
 11819  01D248  D004               	goto	l1271
 11820                           
 11821                           ; BSR set to: 57
 11822                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 11823                           ;stkvar	_data @ sp[(0)+-1]
 11824  01D24A  0EFF               	movlw	-1
 11825  01D24C  006F FF8F F960     	movff	plusw1,14688	;volatile
 11826  01D252                     l1271:
 11827                           
 11828                           ; BSR set to: 57
 11829                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 11830  01D252  52E5               	movf	postdec1,f,c
 11831  01D254  0012               	return		;funcret
 11832  01D256                     __end_of_CRC_8BitDataWrite:
 11833                           	opt callstack 0
 11834                           
 11835 ;; *************** function _start_adc_scan *****************
 11836 ;; Defined at:
 11837 ;;		line 70 in file "daq.c"
 11838 ;; Parameters:    Size  Location     Type
 11839 ;;		None
 11840 ;; Auto vars:     Size  Location     Type
 11841 ;;		None
 11842 ;; Return value:  Size  Location     Type
 11843 ;;                  1  [STACK] _Bool 
 11844 ;; Registers used:
 11845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11846 ;; Tracked objects:
 11847 ;;		On entry : 0/0
 11848 ;;		On exit  : 3/2
 11849 ;;		Unchanged: 0/0
 11850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11855 ;;Total ram usage:        0 bytes
 11856 ;; Hardware stack levels used:    1
 11857 ;; Hardware stack levels required when called:   16
 11858 ;; This function calls:
 11859 ;;		_ADCC_DischargeSampleCapacitor
 11860 ;;		_ADCC_SetADIInterruptHandler
 11861 ;;		_ADCC_SetADTIInterruptHandler
 11862 ;;		_ADCC_StartConversion
 11863 ;; This function is called by:
 11864 ;;		_main
 11865 ;;		_current_sensor_cal
 11866 ;;		_update_adc_result
 11867 ;; This function uses a reentrant model
 11868 ;;
 11869                           
 11870                           	psect	text38
 11871  01C100                     __ptext38:
 11872                           	opt callstack 0
 11873  01C100                     _start_adc_scan:
 11874                           	opt callstack 14
 11875                           
 11876                           ;daq.c: 72:  if (R.done)
 11877                           
 11878                           ; BSR set to: 57
 11879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11880                           ;incstack = 0
 11881  01C100  0102               	movlb	2	; () banked
 11882  01C102  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 11883  01C104  A4D8               	btfss	status,2,c
 11884  01C106  0012               	return	
 11885                           
 11886                           ; BSR set to: 2
 11887                           ;daq.c: 75:  R.scan_index = 0;
 11888  01C108  6B32               	clrf	(_R+50)& (0+255),b	;volatile
 11889                           
 11890                           ; BSR set to: 2
 11891                           ;daq.c: 76:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 11892  01C10A  013A               	movlb	58	; () banked
 11893  01C10C  5140               	movf	64,w,b	;volatile
 11894  01C10E  006E F940  F001    	movff	14928,btemp	;volatile
 11895  01C114  6A02               	clrf	(btemp+1)^0,c
 11896  01C116  0060  F004  F002   	movff	btemp,btemp+1
 11897  01C11C  6A01               	clrf	btemp^0,c
 11898  01C11E  2601               	addwf	btemp^0,f,c
 11899  01C120  0E00               	movlw	0
 11900  01C122  2202               	addwfc	(btemp+1)^0,f,c
 11901  01C124  0E77               	movlw	119
 11902  01C126  1401               	andwf	btemp^0,w,c
 11903  01C128  0102               	movlb	2	; () banked
 11904  01C12A  6F33               	movwf	(_R+51)& (0+255),b	;volatile
 11905  01C12C  0E3C               	movlw	60
 11906  01C12E  1402               	andwf	(btemp+1)^0,w,c
 11907  01C130  6F34               	movwf	(_R+52)& (0+255),b	;volatile
 11908                           
 11909                           ; BSR set to: 2
 11910                           ;daq.c: 77:  ADCC_SetADIInterruptHandler(adc_int_handler);
 11911  01C132  0E9A               	movlw	low _adc_int_handler
 11912  01C134  6EE6               	movwf	postinc1,c
 11913  01C136  0ED3               	movlw	high _adc_int_handler
 11914  01C138  6EE6               	movwf	postinc1,c
 11915  01C13A  0E01               	movlw	low (_adc_int_handler shr (0+16))
 11916  01C13C  6EE6               	movwf	postinc1,c
 11917  01C13E  EC69  F0E7         	call	_ADCC_SetADIInterruptHandler	;wreg free
 11918                           
 11919                           ;daq.c: 78:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 11920  01C142  0E92               	movlw	low _adc_int_t_handler
 11921  01C144  6EE6               	movwf	postinc1,c
 11922  01C146  0EBC               	movlw	high _adc_int_t_handler
 11923  01C148  6EE6               	movwf	postinc1,c
 11924  01C14A  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
 11925  01C14C  6EE6               	movwf	postinc1,c
 11926  01C14E  EC55  F0E7         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 11927                           
 11928                           ;daq.c: 79:  ADCC_DischargeSampleCapacitor();
 11929  01C152  ECA6  F0E9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 11930                           
 11931                           ; BSR set to: 62
 11932                           ;daq.c: 80:  ADCC_StartConversion(R.scan_index & 0xf);
 11933  01C156  0102               	movlb	2	; () banked
 11934  01C158  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 11935  01C15A  0B0F               	andlw	15
 11936  01C15C  6EE6               	movwf	postinc1,c
 11937  01C15E  EC2B  F0E9         	call	_ADCC_StartConversion	;wreg free
 11938                           
 11939                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11940  01C162  0012               	return		;funcret
 11941  01C164                     __end_of_start_adc_scan:
 11942                           	opt callstack 0
 11943                           
 11944 ;; *************** function _ADCC_StartConversion *****************
 11945 ;; Defined at:
 11946 ;;		line 128 in file "mcc_generated_files/adcc.c"
 11947 ;; Parameters:    Size  Location     Type
 11948 ;;  channel         1  [STACK] enum E16136
 11949 ;; Auto vars:     Size  Location     Type
 11950 ;;		None
 11951 ;; Return value:  Size  Location     Type
 11952 ;;                  1  [STACK] void 
 11953 ;; Registers used:
 11954 ;;		fsr1l, fsr1h
 11955 ;; Tracked objects:
 11956 ;;		On entry : 3F/2
 11957 ;;		On exit  : 3F/3E
 11958 ;;		Unchanged: 0/0
 11959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11964 ;;Total ram usage:        0 bytes
 11965 ;; Hardware stack levels used:    1
 11966 ;; Hardware stack levels required when called:   15
 11967 ;; This function calls:
 11968 ;;		Nothing
 11969 ;; This function is called by:
 11970 ;;		_start_adc_scan
 11971 ;;		_adc_int_t_handler
 11972 ;; This function uses a reentrant model
 11973 ;;
 11974                           
 11975                           	psect	text39
 11976  01D256                     __ptext39:
 11977                           	opt callstack 0
 11978  01D256                     _ADCC_StartConversion:
 11979                           	opt callstack 0
 11980                           
 11981                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 11982                           ;stkvar	_channel @ sp[(0)+-1]
 11983                           
 11984                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11985                           ;incstack = 0
 11986 ;; hardware stack exceeded
 11987  01D256  0EFF               	movlw	-1
 11988  01D258  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 11989                           
 11990                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 11991  01D25E  013E               	movlb	62	; () banked
 11992  01D260  8FF8               	bsf	248,7,b	;volatile
 11993                           
 11994                           ; BSR set to: 62
 11995                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 11996  01D262  81F8               	bsf	248,0,b	;volatile
 11997                           
 11998                           ; BSR set to: 62
 11999                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 12000  01D264  52E5               	movf	postdec1,f,c
 12001  01D266  0012               	return		;funcret
 12002  01D268                     __end_of_ADCC_StartConversion:
 12003                           	opt callstack 0
 12004                           
 12005 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 12006 ;; Defined at:
 12007 ;;		line 189 in file "mcc_generated_files/adcc.c"
 12008 ;; Parameters:    Size  Location     Type
 12009 ;;		None
 12010 ;; Auto vars:     Size  Location     Type
 12011 ;;		None
 12012 ;; Return value:  Size  Location     Type
 12013 ;;                  1  [STACK] void 
 12014 ;; Registers used:
 12015 ;;		wreg, status,2
 12016 ;; Tracked objects:
 12017 ;;		On entry : 0/2
 12018 ;;		On exit  : 3F/3E
 12019 ;;		Unchanged: 0/0
 12020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12025 ;;Total ram usage:        0 bytes
 12026 ;; Hardware stack levels used:    1
 12027 ;; Hardware stack levels required when called:   15
 12028 ;; This function calls:
 12029 ;;		Nothing
 12030 ;; This function is called by:
 12031 ;;		_start_adc_scan
 12032 ;;		_adc_int_t_handler
 12033 ;; This function uses a reentrant model
 12034 ;;
 12035                           
 12036                           	psect	text40
 12037  01D34C                     __ptext40:
 12038                           	opt callstack 0
 12039  01D34C                     _ADCC_DischargeSampleCapacitor:
 12040                           	opt callstack 0
 12041                           
 12042                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 12043                           
 12044                           ; BSR set to: 62
 12045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12046                           ;incstack = 0
 12047 ;; hardware stack exceeded
 12048  01D34C  0E3B               	movlw	59
 12049  01D34E  013E               	movlb	62	; () banked
 12050  01D350  6FF1               	movwf	241,b	;volatile
 12051                           
 12052                           ; BSR set to: 62
 12053                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 12054  01D352  0012               	return		;funcret
 12055  01D354                     __end_of_ADCC_DischargeSampleCapacitor:
 12056                           	opt callstack 0
 12057                           
 12058 ;; *************** function _spinners *****************
 12059 ;; Defined at:
 12060 ;;		line 146 in file "mbmc.c"
 12061 ;; Parameters:    Size  Location     Type
 12062 ;;  shape           1  [STACK] unsigned char 
 12063 ;;  reset           1  [STACK] const unsigned char 
 12064 ;; Auto vars:     Size  Location     Type
 12065 ;;  c               1  [STACK] unsigned char 
 12066 ;; Return value:  Size  Location     Type
 12067 ;;                  1  [STACK] unsigned char 
 12068 ;; Registers used:
 12069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 12070 ;; Tracked objects:
 12071 ;;		On entry : 0/0
 12072 ;;		On exit  : 0/0
 12073 ;;		Unchanged: 0/0
 12074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12079 ;;Total ram usage:        0 bytes
 12080 ;; Hardware stack levels used:    1
 12081 ;; Hardware stack levels required when called:   16
 12082 ;; This function calls:
 12083 ;;		_strlen
 12084 ;; This function is called by:
 12085 ;;		_main
 12086 ;;		_current_sensor_cal
 12087 ;; This function uses a reentrant model
 12088 ;;
 12089                           
 12090                           	psect	text41
 12091  01AB90                     __ptext41:
 12092                           	opt callstack 0
 12093  01AB90                     _spinners:
 12094                           	opt callstack 0
 12095                           
 12096                           ; BSR set to: 62
 12097                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12098  01AB90  52E6               	movf	postinc1,f,c
 12099                           
 12100                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
 12101                           ;stkvar	_shape @ sp[(-1)+-1]
 12102                           
 12103                           ;incstack = 0
 12104  01AB92  0EFE               	movlw	-2
 12105  01AB94  006F FF8C  F001    	movff	plusw1,btemp
 12106  01AB9A  0E05               	movlw	5
 12107  01AB9C  6401               	cpfsgt	btemp^0,c
 12108  01AB9E  D002               	goto	l2147
 12109                           
 12110                           ;mbmc.c: 152:   shape = 0;
 12111                           ;stkvar	_shape @ sp[(-1)+-1]
 12112  01ABA0  0EFE               	movlw	-2
 12113  01ABA2  6AE3               	clrf	plusw1,c
 12114  01ABA4                     l2147:
 12115                           
 12116                           ;mbmc.c: 153:  if (reset)
 12117                           ;stkvar	_reset @ sp[(-1)+-2]
 12118  01ABA4  0EFD               	movlw	-3
 12119  01ABA6  50E3               	movf	plusw1,w,c
 12120  01ABA8  B4D8               	btfsc	status,2,c
 12121  01ABAA  D00A               	goto	l14060
 12122                           
 12123                           ;mbmc.c: 154:   s[shape] = 0;
 12124                           ;stkvar	_shape @ sp[(-1)+-1]
 12125  01ABAC  0EFE               	movlw	-2
 12126  01ABAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 12127  01ABB4  500C               	movf	(btemp+11)^0,w,c
 12128  01ABB6  0F74               	addlw	low spinners@s
 12129  01ABB8  6ED9               	movwf	fsr2l,c
 12130  01ABBA  6ADA               	clrf	fsr2h,c
 12131  01ABBC  0E00               	movlw	0
 12132  01ABBE  6EDF               	movwf	indf2,c
 12133  01ABC0                     l14060:
 12134                           
 12135                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
 12136                           ;stkvar	_shape @ sp[(-1)+-1]
 12137  01ABC0  0EFE               	movlw	-2
 12138  01ABC2  50E3               	movf	plusw1,w,c
 12139  01ABC4  0D14               	mullw	20
 12140  01ABC6  0E43               	movlw	low _spin
 12141  01ABC8  6E0B               	movwf	(btemp+10)^0,c
 12142  01ABCA  0EFA               	movlw	high _spin
 12143  01ABCC  6E0C               	movwf	(btemp+11)^0,c
 12144  01ABCE  50F3               	movf	243,w,c
 12145  01ABD0  260B               	addwf	(btemp+10)^0,f,c
 12146  01ABD2  50F4               	movf	244,w,c
 12147  01ABD4  220C               	addwfc	(btemp+11)^0,f,c
 12148                           
 12149                           ;stkvar	_shape @ sp[(-1)+-1]
 12150  01ABD6  0EFE               	movlw	-2
 12151  01ABD8  006F FF8C  F00A    	movff	plusw1,btemp+9
 12152  01ABDE  500A               	movf	(btemp+9)^0,w,c
 12153  01ABE0  0F74               	addlw	low spinners@s
 12154  01ABE2  6ED9               	movwf	fsr2l,c
 12155  01ABE4  6ADA               	clrf	fsr2h,c
 12156  01ABE6  50DF               	movf	indf2,w,c
 12157  01ABE8  260B               	addwf	(btemp+10)^0,f,c
 12158  01ABEA  0E00               	movlw	0
 12159  01ABEC  220C               	addwfc	(btemp+11)^0,f,c
 12160  01ABEE  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12161  01ABF4  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12162  01ABFA                     	if	0	;tblptru may be non-zero
 12163  01ABFA                     	endif
 12164  01ABFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12165  01ABFA  0E00               	movlw	low (__mediumconst shr (0+16))
 12166  01ABFC  6EF8               	movwf	tblptru,c
 12167  01ABFE                     	endif
 12168                           
 12169                           ;stkvar	_c @ sp[(-1)+0]
 12170  01ABFE  0008               	tblrd		*
 12171  01AC00  0EFF               	movlw	-1
 12172  01AC02  006F FFD7 FFE3     	movff	tablat,plusw1
 12173                           
 12174                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
 12175                           ;stkvar	_shape @ sp[(-1)+-1]
 12176  01AC08  0EFE               	movlw	-2
 12177  01AC0A  50E3               	movf	plusw1,w,c
 12178  01AC0C  0D14               	mullw	20
 12179  01AC0E  0E43               	movlw	low _spin
 12180  01AC10  6E0B               	movwf	(btemp+10)^0,c
 12181  01AC12  0EFA               	movlw	high _spin
 12182  01AC14  6E0C               	movwf	(btemp+11)^0,c
 12183  01AC16  50F3               	movf	243,w,c
 12184  01AC18  260B               	addwf	(btemp+10)^0,f,c
 12185  01AC1A  50F4               	movf	244,w,c
 12186  01AC1C  220C               	addwfc	(btemp+11)^0,f,c
 12187  01AC1E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12188  01AC24  0060  F033  FFE6   	movff	btemp+11,postinc1
 12189  01AC2A  ECC0  F0DB         	call	_strlen	;wreg free
 12190                           
 12191                           ;stkvar	_shape @ sp[(-1)+-1]
 12192  01AC2E  0EFE               	movlw	-2
 12193  01AC30  006F FF8C  F00C    	movff	plusw1,btemp+11
 12194  01AC36  500C               	movf	(btemp+11)^0,w,c
 12195  01AC38  0F74               	addlw	low spinners@s
 12196  01AC3A  6ED9               	movwf	fsr2l,c
 12197  01AC3C  6ADA               	clrf	fsr2h,c
 12198  01AC3E  2ADF               	incf	indf2,f,c
 12199  01AC40  50DF               	movf	indf2,w,c
 12200  01AC42  6E0B               	movwf	(btemp+10)^0,c
 12201  01AC44  6A0C               	clrf	(btemp+11)^0,c
 12202  01AC46  5001               	movf	btemp^0,w,c
 12203  01AC48  5C0B               	subwf	(btemp+10)^0,w,c
 12204  01AC4A  5002               	movf	(btemp+1)^0,w,c
 12205  01AC4C  580C               	subwfb	(btemp+11)^0,w,c
 12206  01AC4E  A0D8               	btfss	status,0,c
 12207  01AC50  D00A               	goto	l14066
 12208                           
 12209                           ;mbmc.c: 157:   s[shape] = 0;
 12210                           ;stkvar	_shape @ sp[(-1)+-1]
 12211  01AC52  0EFE               	movlw	-2
 12212  01AC54  006F FF8C  F00C    	movff	plusw1,btemp+11
 12213  01AC5A  500C               	movf	(btemp+11)^0,w,c
 12214  01AC5C  0F74               	addlw	low spinners@s
 12215  01AC5E  6ED9               	movwf	fsr2l,c
 12216  01AC60  6ADA               	clrf	fsr2h,c
 12217  01AC62  0E00               	movlw	0
 12218  01AC64  6EDF               	movwf	indf2,c
 12219  01AC66                     l14066:
 12220                           
 12221                           ;mbmc.c: 158:  return c;
 12222                           ;stkvar	_c @ sp[(-1)+0]
 12223  01AC66  0EFF               	movlw	-1
 12224  01AC68  006F FF8C  F001    	movff	plusw1,btemp
 12225                           
 12226                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 12227  01AC6E  52E5               	movf	postdec1,f,c
 12228  01AC70  52E5               	movf	postdec1,f,c
 12229  01AC72  52E5               	movf	postdec1,f,c
 12230  01AC74  0012               	return		;funcret
 12231  01AC76                     __end_of_spinners:
 12232                           	opt callstack 0
 12233                           
 12234 ;; *************** function _get_switch *****************
 12235 ;; Defined at:
 12236 ;;		line 18 in file "dio.c"
 12237 ;; Parameters:    Size  Location     Type
 12238 ;;  i               1  [STACK] const unsigned char 
 12239 ;; Auto vars:     Size  Location     Type
 12240 ;;		None
 12241 ;; Return value:  Size  Location     Type
 12242 ;;                  1  [STACK] enum E17187
 12243 ;; Registers used:
 12244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 12245 ;; Tracked objects:
 12246 ;;		On entry : 0/0
 12247 ;;		On exit  : 0/0
 12248 ;;		Unchanged: 0/0
 12249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12254 ;;Total ram usage:        0 bytes
 12255 ;; Hardware stack levels used:    1
 12256 ;; Hardware stack levels required when called:   15
 12257 ;; This function calls:
 12258 ;;		Nothing
 12259 ;; This function is called by:
 12260 ;;		_main
 12261 ;;		_current_sensor_cal
 12262 ;;		_hid_input
 12263 ;; This function uses a reentrant model
 12264 ;;
 12265                           
 12266                           	psect	text42
 12267  01CC6A                     __ptext42:
 12268                           	opt callstack 0
 12269  01CC6A                     _get_switch:
 12270                           	opt callstack 13
 12271                           
 12272                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 12273                           ;stkvar	_i @ sp[(0)+-1]
 12274                           
 12275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12276                           ;incstack = 0
 12277  01CC6A  0EFF               	movlw	-1
 12278  01CC6C  006F FF8C  F001    	movff	plusw1,btemp
 12279  01CC72  0E05               	movlw	5
 12280  01CC74  6401               	cpfsgt	btemp^0,c
 12281  01CC76  D002               	goto	l10806
 12282                           
 12283                           ;dio.c: 21:   return SW_OFF;
 12284  01CC78  0E00               	movlw	0
 12285  01CC7A  D00A               	goto	L10
 12286  01CC7C                     l10806:
 12287                           
 12288                           ;dio.c: 23:  return S.button[i].sw;
 12289                           ;stkvar	_i @ sp[(0)+-1]
 12290  01CC7C  0EFF               	movlw	-1
 12291  01CC7E  50E3               	movf	plusw1,w,c
 12292  01CC80  0D05               	mullw	5
 12293  01CC82  0EC7               	movlw	low _S
 12294  01CC84  24F3               	addwf	243,w,c
 12295  01CC86  6ED9               	movwf	fsr2l,c
 12296  01CC88  0E01               	movlw	high _S
 12297  01CC8A  20F4               	addwfc	prodh,w,c
 12298  01CC8C  6EDA               	movwf	fsr2h,c
 12299  01CC8E  50DF               	movf	indf2,w,c
 12300  01CC90                     L10:
 12301  01CC90  6E01               	movwf	btemp^0,c
 12302                           
 12303                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 12304  01CC92  52E5               	movf	postdec1,f,c
 12305  01CC94  0012               	return		;funcret
 12306  01CC96                     __end_of_get_switch:
 12307                           	opt callstack 0
 12308                           
 12309 ;; *************** function _clear_adc_scan *****************
 12310 ;; Defined at:
 12311 ;;		line 101 in file "daq.c"
 12312 ;; Parameters:    Size  Location     Type
 12313 ;;		None
 12314 ;; Auto vars:     Size  Location     Type
 12315 ;;		None
 12316 ;; Return value:  Size  Location     Type
 12317 ;;                  1  [STACK] void 
 12318 ;; Registers used:
 12319 ;;		None
 12320 ;; Tracked objects:
 12321 ;;		On entry : 0/0
 12322 ;;		On exit  : 3F/2
 12323 ;;		Unchanged: 0/0
 12324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12329 ;;Total ram usage:        0 bytes
 12330 ;; Hardware stack levels used:    1
 12331 ;; Hardware stack levels required when called:   15
 12332 ;; This function calls:
 12333 ;;		Nothing
 12334 ;; This function is called by:
 12335 ;;		_main
 12336 ;;		_current_sensor_cal
 12337 ;;		_update_adc_result
 12338 ;; This function uses a reentrant model
 12339 ;;
 12340                           
 12341                           	psect	text43
 12342  01D372                     __ptext43:
 12343                           	opt callstack 0
 12344  01D372                     _clear_adc_scan:
 12345                           	opt callstack 13
 12346                           
 12347                           ;daq.c: 103:  R.done = 0;
 12348                           
 12349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12350                           ;incstack = 0
 12351  01D372  0102               	movlb	2	; () banked
 12352  01D374  6B35               	clrf	(_R+53)& (0+255),b	;volatile
 12353                           
 12354                           ; BSR set to: 2
 12355                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12356  01D376  0012               	return		;funcret
 12357  01D378                     __end_of_clear_adc_scan:
 12358                           	opt callstack 0
 12359                           
 12360 ;; *************** function _cal_current_zero *****************
 12361 ;; Defined at:
 12362 ;;		line 327 in file "daq.c"
 12363 ;; Parameters:    Size  Location     Type
 12364 ;;  mode            1  [STACK] const _Bool 
 12365 ;;  cb              2  [STACK] const short 
 12366 ;;  cp              2  [STACK] const short 
 12367 ;; Auto vars:     Size  Location     Type
 12368 ;;		None
 12369 ;; Return value:  Size  Location     Type
 12370 ;;                  1  [STACK] _Bool 
 12371 ;; Registers used:
 12372 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 12373 ;; Tracked objects:
 12374 ;;		On entry : 0/2
 12375 ;;		On exit  : 0/0
 12376 ;;		Unchanged: 0/0
 12377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12382 ;;Total ram usage:        0 bytes
 12383 ;; Hardware stack levels used:    1
 12384 ;; Hardware stack levels required when called:   16
 12385 ;; This function calls:
 12386 ;;		_check_range
 12387 ;; This function is called by:
 12388 ;;		_current_sensor_cal
 12389 ;; This function uses a reentrant model
 12390 ;;
 12391                           
 12392                           	psect	text44
 12393  01B8BA                     __ptext44:
 12394                           	opt callstack 0
 12395  01B8BA                     _cal_current_zero:
 12396                           	opt callstack 13
 12397                           
 12398                           ;daq.c: 327: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 328: {;daq.c: 330:  if (!check_range(cb, 100, 4000))
 12399                           
 12400                           ; BSR set to: 2
 12401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12402                           ;incstack = 0
 12403  01B8BA  0EA0               	movlw	160
 12404  01B8BC  6EE6               	movwf	postinc1,c
 12405  01B8BE  0E0F               	movlw	15
 12406  01B8C0  6EE6               	movwf	postinc1,c
 12407  01B8C2  0E64               	movlw	100
 12408  01B8C4  6EE6               	movwf	postinc1,c
 12409  01B8C6  0E00               	movlw	0
 12410  01B8C8  6EE6               	movwf	postinc1,c
 12411                           
 12412                           ;stkvar	_cb @ sp[(-4)+-3]
 12413  01B8CA  0EF9               	movlw	-7
 12414  01B8CC  006F FF8F FFE6     	movff	plusw1,postinc1
 12415  01B8D2  006F FF8F FFE6     	movff	plusw1,postinc1
 12416  01B8D8  EC8A  F0DE         	call	_check_range	;wreg free
 12417  01B8DC  5001               	movf	btemp^0,w,c
 12418  01B8DE  A4D8               	btfss	status,2,c
 12419  01B8E0  D002               	goto	l11370
 12420  01B8E2                     u10310:
 12421                           
 12422                           ;daq.c: 331:   return 0;
 12423  01B8E2  0E00               	movlw	0
 12424  01B8E4  D019               	goto	L11
 12425  01B8E6                     l11370:
 12426                           
 12427                           ;daq.c: 333:  if (!check_range(cp, 100, 4000))
 12428  01B8E6  0EA0               	movlw	160
 12429  01B8E8  6EE6               	movwf	postinc1,c
 12430  01B8EA  0E0F               	movlw	15
 12431  01B8EC  6EE6               	movwf	postinc1,c
 12432  01B8EE  0E64               	movlw	100
 12433  01B8F0  6EE6               	movwf	postinc1,c
 12434  01B8F2  0E00               	movlw	0
 12435  01B8F4  6EE6               	movwf	postinc1,c
 12436                           
 12437                           ;stkvar	_cp @ sp[(-4)+-5]
 12438  01B8F6  0EF7               	movlw	-9
 12439  01B8F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12440  01B8FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12441  01B904  EC8A  F0DE         	call	_check_range	;wreg free
 12442  01B908  5001               	movf	btemp^0,w,c
 12443  01B90A  B4D8               	btfsc	status,2,c
 12444  01B90C  D7EA               	goto	u10310
 12445                           
 12446                           ;daq.c: 336:  if (!mode)
 12447                           ;stkvar	_mode @ sp[(0)+-1]
 12448  01B90E  0EFF               	movlw	-1
 12449  01B910  50E3               	movf	plusw1,w,c
 12450  01B912  A4D8               	btfss	status,2,c
 12451  01B914  D003               	goto	l11382
 12452  01B916                     u10330:
 12453                           
 12454                           ;daq.c: 337:   return 1;
 12455  01B916  0E01               	movlw	1
 12456  01B918                     L11:
 12457  01B918  6E01               	movwf	btemp^0,c
 12458  01B91A  D013               	goto	l2031
 12459  01B91C                     l11382:
 12460                           
 12461                           ;daq.c: 339:  R.n_offset[0] = cb;
 12462                           ;stkvar	_cb @ sp[(0)+-3]
 12463  01B91C  0EFD               	movlw	-3
 12464  01B91E  006F FF8C  F226    	movff	plusw1,_R+38	;volatile
 12465  01B924  0EFE               	movlw	-2
 12466  01B926  006F FF8C  F227    	movff	plusw1,_R+39	;volatile
 12467                           
 12468                           ;daq.c: 340:  R.n_offset[1] = cp;
 12469                           ;stkvar	_cp @ sp[(0)+-5]
 12470  01B92C  0EFB               	movlw	-5
 12471  01B92E  006F FF8C  F228    	movff	plusw1,_R+40	;volatile
 12472  01B934  0EFC               	movlw	-4
 12473  01B936  006F FF8C  F229    	movff	plusw1,_R+41	;volatile
 12474                           
 12475                           ;daq.c: 341:  R.c_zero_cal = 1;
 12476  01B93C  0102               	movlb	2	; () banked
 12477  01B93E  83A3               	bsf	(_R+163)& (0+255),1,b	;volatile
 12478  01B940  D7EA               	goto	u10330
 12479  01B942                     l2031:
 12480                           
 12481                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 12482  01B942  0EFB               	movlw	251
 12483  01B944  26E1               	addwf	fsr1l,f,c
 12484  01B946  0EFF               	movlw	255
 12485  01B948  22E2               	addwfc	fsr1h,f,c
 12486  01B94A  0012               	return		;funcret
 12487  01B94C                     __end_of_cal_current_zero:
 12488                           	opt callstack 0
 12489                           
 12490 ;; *************** function _check_range *****************
 12491 ;; Defined at:
 12492 ;;		line 315 in file "daq.c"
 12493 ;; Parameters:    Size  Location     Type
 12494 ;;  value           2  [STACK] const short 
 12495 ;;  window          2  [STACK] const short 
 12496 ;;  standard        2  [STACK] const short 
 12497 ;; Auto vars:     Size  Location     Type
 12498 ;;		None
 12499 ;; Return value:  Size  Location     Type
 12500 ;;                  1  [STACK] _Bool 
 12501 ;; Registers used:
 12502 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 12503 ;; Tracked objects:
 12504 ;;		On entry : 0/2
 12505 ;;		On exit  : 0/0
 12506 ;;		Unchanged: 0/0
 12507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12512 ;;Total ram usage:        0 bytes
 12513 ;; Hardware stack levels used:    1
 12514 ;; Hardware stack levels required when called:   15
 12515 ;; This function calls:
 12516 ;;		Nothing
 12517 ;; This function is called by:
 12518 ;;		_cal_current_zero
 12519 ;; This function uses a reentrant model
 12520 ;;
 12521                           
 12522                           	psect	text45
 12523  01BD14                     __ptext45:
 12524                           	opt callstack 0
 12525  01BD14                     _check_range:
 12526                           	opt callstack 13
 12527                           
 12528                           ;daq.c: 315: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 316: {;daq.c: 317:  if (value > (standard + window))
 12529                           ;stkvar	_value @ sp[(0)+-2]
 12530                           ;stkvar	_window @ sp[(0)+-4]
 12531                           ;stkvar	_standard @ sp[(0)+-6]
 12532                           
 12533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12534                           ;incstack = 0
 12535  01BD14  0EFA               	movlw	-6
 12536  01BD16  006F FF8C  F00B    	movff	plusw1,btemp+10
 12537  01BD1C  0EFB               	movlw	-5
 12538  01BD1E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12539  01BD24  0EFC               	movlw	-4
 12540  01BD26  50E3               	movf	plusw1,w,c
 12541  01BD28  260B               	addwf	(btemp+10)^0,f,c
 12542  01BD2A  0EFD               	movlw	-3
 12543  01BD2C  50E3               	movf	plusw1,w,c
 12544  01BD2E  220C               	addwfc	(btemp+11)^0,f,c
 12545  01BD30  0EFE               	movlw	-2
 12546  01BD32  50E3               	movf	plusw1,w,c
 12547  01BD34  5C0B               	subwf	(btemp+10)^0,w,c
 12548  01BD36  500C               	movf	(btemp+11)^0,w,c
 12549  01BD38  0A80               	xorlw	128
 12550  01BD3A  6E01               	movwf	btemp^0,c
 12551  01BD3C  0EFF               	movlw	-1
 12552  01BD3E  50E3               	movf	plusw1,w,c
 12553  01BD40  0A80               	xorlw	128
 12554  01BD42  5801               	subwfb	btemp^0,w,c
 12555  01BD44  B0D8               	btfsc	status,0,c
 12556  01BD46  D002               	goto	l10864
 12557  01BD48                     u10100:
 12558                           
 12559                           ;daq.c: 318:   return 0;
 12560  01BD48  0E00               	movlw	0
 12561  01BD4A  D01E               	goto	L12
 12562  01BD4C                     l10864:
 12563                           
 12564                           ;daq.c: 319:  if (value < (standard - window))
 12565                           ;stkvar	_window @ sp[(0)+-4]
 12566                           ;stkvar	_standard @ sp[(0)+-6]
 12567  01BD4C  0EFA               	movlw	-6
 12568  01BD4E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12569  01BD54  0EFB               	movlw	-5
 12570  01BD56  006F FF8C  F00C    	movff	plusw1,btemp+11
 12571  01BD5C  0EFC               	movlw	-4
 12572  01BD5E  50E3               	movf	plusw1,w,c
 12573  01BD60  5E0B               	subwf	(btemp+10)^0,f,c
 12574  01BD62  0EFD               	movlw	-3
 12575  01BD64  50E3               	movf	plusw1,w,c
 12576  01BD66  5A0C               	subwfb	(btemp+11)^0,f,c
 12577                           
 12578                           ;stkvar	_value @ sp[(0)+-2]
 12579  01BD68  0EFE               	movlw	-2
 12580  01BD6A  006F FF8C  F001    	movff	plusw1,btemp
 12581  01BD70  500B               	movf	(btemp+10)^0,w,c
 12582  01BD72  5C01               	subwf	btemp^0,w,c
 12583  01BD74  0EFF               	movlw	-1
 12584  01BD76  50E3               	movf	plusw1,w,c
 12585  01BD78  0A80               	xorlw	128
 12586  01BD7A  6E01               	movwf	btemp^0,c
 12587  01BD7C  500C               	movf	(btemp+11)^0,w,c
 12588  01BD7E  0A80               	xorlw	128
 12589  01BD80  5801               	subwfb	btemp^0,w,c
 12590  01BD82  A0D8               	btfss	status,0,c
 12591  01BD84  D7E1               	goto	u10100
 12592                           
 12593                           ;daq.c: 321:  return 1;
 12594  01BD86  0E01               	movlw	1
 12595  01BD88                     L12:
 12596  01BD88  6E01               	movwf	btemp^0,c
 12597                           
 12598                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 12599  01BD8A  0EFA               	movlw	250
 12600  01BD8C  26E1               	addwf	fsr1l,f,c
 12601  01BD8E  0EFF               	movlw	255
 12602  01BD90  22E2               	addwfc	fsr1h,f,c
 12603  01BD92  0012               	return		;funcret
 12604  01BD94                     __end_of_check_range:
 12605                           	opt callstack 0
 12606                           
 12607 ;; *************** function _convert_adc_data *****************
 12608 ;; Defined at:
 12609 ;;		line 51 in file "mbmc.c"
 12610 ;; Parameters:    Size  Location     Type
 12611 ;;		None
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;  i               1  [STACK] unsigned char 
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  1  [STACK] void 
 12616 ;; Registers used:
 12617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/1
 12620 ;;		On exit  : 0/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12627 ;;Total ram usage:        0 bytes
 12628 ;; Hardware stack levels used:    1
 12629 ;; Hardware stack levels required when called:   18
 12630 ;; This function calls:
 12631 ;;		_conv_raw_result
 12632 ;;		_lp_filter
 12633 ;; This function is called by:
 12634 ;;		_main
 12635 ;; This function uses a reentrant model
 12636 ;;
 12637                           
 12638                           	psect	text46
 12639  01B218                     __ptext46:
 12640                           	opt callstack 0
 12641  01B218                     _convert_adc_data:
 12642                           	opt callstack 0
 12643                           
 12644                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12645  01B218  52E6               	movf	postinc1,f,c
 12646                           
 12647                           ;mbmc.c: 53:  uint8_t i = 0;
 12648                           ;stkvar	_i @ sp[(-1)+0]
 12649                           
 12650                           ;incstack = 0
 12651  01B21A  0EFF               	movlw	-1
 12652  01B21C  6AE3               	clrf	plusw1,c
 12653  01B21E                     l12198:
 12654                           
 12655                           ;mbmc.c: 56:   if (V.calib) {
 12656  01B21E  0101               	movlb	1	; () banked
 12657  01B220  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 12658  01B222  B4D8               	btfsc	status,2,c
 12659  01B224  D01B               	goto	l12202
 12660                           
 12661                           ; BSR set to: 1
 12662                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 12663  01B226  0E01               	movlw	1
 12664  01B228  6EE6               	movwf	postinc1,c
 12665                           
 12666                           ;stkvar	_i @ sp[(-2)+0]
 12667  01B22A  0EFE               	movlw	-2
 12668  01B22C  50E3               	movf	plusw1,w,c
 12669  01B22E  6EE6               	movwf	postinc1,c
 12670  01B230  0E01               	movlw	1
 12671  01B232  6EE6               	movwf	postinc1,c
 12672                           
 12673                           ;stkvar	_i @ sp[(-4)+0]
 12674  01B234  0EFC               	movlw	-4
 12675  01B236  50E3               	movf	plusw1,w,c
 12676  01B238  6EE6               	movwf	postinc1,c
 12677  01B23A  EC28  F0AA         	call	_conv_raw_result	;wreg free
 12678  01B23E  0060  F007  FFE6   	movff	btemp,postinc1
 12679  01B244  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12680  01B24A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12681  01B250  0060  F013  FFE6   	movff	btemp+3,postinc1
 12682  01B256  ECF9  F0C6         	call	_lp_filter	;wreg free
 12683  01B25A  D01A               	goto	L13
 12684  01B25C                     l12202:
 12685                           
 12686                           ; BSR set to: 1
 12687                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 12688  01B25C  0E00               	movlw	0
 12689  01B25E  6EE6               	movwf	postinc1,c
 12690                           
 12691                           ;stkvar	_i @ sp[(-2)+0]
 12692  01B260  0EFE               	movlw	-2
 12693  01B262  50E3               	movf	plusw1,w,c
 12694  01B264  6EE6               	movwf	postinc1,c
 12695  01B266  0E00               	movlw	0
 12696  01B268  6EE6               	movwf	postinc1,c
 12697                           
 12698                           ;stkvar	_i @ sp[(-4)+0]
 12699  01B26A  0EFC               	movlw	-4
 12700  01B26C  50E3               	movf	plusw1,w,c
 12701  01B26E  6EE6               	movwf	postinc1,c
 12702  01B270  EC28  F0AA         	call	_conv_raw_result	;wreg free
 12703  01B274  0060  F007  FFE6   	movff	btemp,postinc1
 12704  01B27A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12705  01B280  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12706  01B286  0060  F013  FFE6   	movff	btemp+3,postinc1
 12707  01B28C  ECF9  F0C6         	call	_lp_filter	;wreg free
 12708  01B290                     L13:
 12709                           
 12710                           ;stkvar	_i @ sp[(-1)+0]
 12711  01B290  0EFF               	movlw	-1
 12712  01B292  50E3               	movf	plusw1,w,c
 12713  01B294  0D04               	mullw	4
 12714  01B296  0EFF               	movlw	low _C
 12715  01B298  24F3               	addwf	243,w,c
 12716  01B29A  6ED9               	movwf	fsr2l,c
 12717  01B29C  0E08               	movlw	high _C
 12718  01B29E  20F4               	addwfc	prodh,w,c
 12719  01B2A0  6EDA               	movwf	fsr2h,c
 12720  01B2A2  0060  F007  FFDE   	movff	btemp,postinc2
 12721  01B2A8  0060  F00B  FFDE   	movff	btemp+1,postinc2
 12722  01B2AE  0060  F00F  FFDE   	movff	btemp+2,postinc2
 12723  01B2B4  0060  F013  FFDE   	movff	btemp+3,postinc2
 12724                           
 12725                           ;mbmc.c: 61:  } while (++i < 16);
 12726                           ;stkvar	_i @ sp[(-1)+0]
 12727  01B2BA  0EFF               	movlw	-1
 12728  01B2BC  2AE3               	incf	plusw1,f,c
 12729  01B2BE  0EFF               	movlw	-1
 12730  01B2C0  006F FF8C  F001    	movff	plusw1,btemp
 12731  01B2C6  0E0F               	movlw	15
 12732  01B2C8  6401               	cpfsgt	btemp^0,c
 12733  01B2CA  D7A9               	goto	l12198
 12734                           
 12735                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12736  01B2CC  52E5               	movf	postdec1,f,c
 12737  01B2CE  0012               	return		;funcret
 12738  01B2D0                     __end_of_convert_adc_data:
 12739                           	opt callstack 0
 12740                           
 12741 ;; *************** function _clear_hid_pflags *****************
 12742 ;; Defined at:
 12743 ;;		line 67 in file "hid.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;  h               1  [STACK] PTR struct H_data
 12746 ;;		 -> H(9), 
 12747 ;; Auto vars:     Size  Location     Type
 12748 ;;		None
 12749 ;; Return value:  Size  Location     Type
 12750 ;;                  1  [STACK] void 
 12751 ;; Registers used:
 12752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12753 ;; Tracked objects:
 12754 ;;		On entry : 3F/0
 12755 ;;		On exit  : 0/0
 12756 ;;		Unchanged: 0/0
 12757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12762 ;;Total ram usage:        0 bytes
 12763 ;; Hardware stack levels used:    1
 12764 ;; Hardware stack levels required when called:   15
 12765 ;; This function calls:
 12766 ;;		Nothing
 12767 ;; This function is called by:
 12768 ;;		_main
 12769 ;; This function uses a reentrant model
 12770 ;;
 12771                           
 12772                           	psect	text47
 12773  01CAE2                     __ptext47:
 12774                           	opt callstack 0
 12775  01CAE2                     _clear_hid_pflags:
 12776                           	opt callstack 15
 12777                           
 12778                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 12779                           ;stkvar	_h @ sp[(0)+-1]
 12780                           
 12781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12782                           ;incstack = 0
 12783  01CAE2  0EFF               	movlw	-1
 12784  01CAE4  50E3               	movf	plusw1,w,c
 12785  01CAE6  6ED9               	movwf	fsr2l,c
 12786  01CAE8  6ADA               	clrf	fsr2h,c
 12787  01CAEA  0E03               	movlw	3
 12788  01CAEC  26D9               	addwf	fsr2l,f,c
 12789  01CAEE  0E00               	movlw	0
 12790  01CAF0  6EDF               	movwf	indf2,c
 12791                           
 12792                           ;hid.c: 70:  h->enter_p = SW_OFF;
 12793                           ;stkvar	_h @ sp[(0)+-1]
 12794  01CAF2  0EFF               	movlw	-1
 12795  01CAF4  50E3               	movf	plusw1,w,c
 12796  01CAF6  6ED9               	movwf	fsr2l,c
 12797  01CAF8  6ADA               	clrf	fsr2h,c
 12798  01CAFA  0E05               	movlw	5
 12799  01CAFC  26D9               	addwf	fsr2l,f,c
 12800  01CAFE  0E00               	movlw	0
 12801  01CB00  6EDF               	movwf	indf2,c
 12802                           
 12803                           ;hid.c: 71:  h->calib_p = SW_OFF;
 12804                           ;stkvar	_h @ sp[(0)+-1]
 12805  01CB02  0EFF               	movlw	-1
 12806  01CB04  50E3               	movf	plusw1,w,c
 12807  01CB06  6ED9               	movwf	fsr2l,c
 12808  01CB08  6ADA               	clrf	fsr2h,c
 12809  01CB0A  0E07               	movlw	7
 12810  01CB0C  26D9               	addwf	fsr2l,f,c
 12811  01CB0E  0E00               	movlw	0
 12812  01CB10  6EDF               	movwf	indf2,c
 12813                           
 12814                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 12815  01CB12  52E5               	movf	postdec1,f,c
 12816  01CB14  0012               	return		;funcret
 12817  01CB16                     __end_of_clear_hid_pflags:
 12818                           	opt callstack 0
 12819                           
 12820 ;; *************** function _check_help *****************
 12821 ;; Defined at:
 12822 ;;		line 40 in file "mconfig.c"
 12823 ;; Parameters:    Size  Location     Type
 12824 ;;  flipper         1  [STACK] const _Bool 
 12825 ;; Auto vars:     Size  Location     Type
 12826 ;;  estatus         1    0        _Bool 
 12827 ;; Return value:  Size  Location     Type
 12828 ;;                  1  [STACK] _Bool 
 12829 ;; Registers used:
 12830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12831 ;; Tracked objects:
 12832 ;;		On entry : 3F/1
 12833 ;;		On exit  : 0/0
 12834 ;;		Unchanged: 0/0
 12835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12840 ;;Total ram usage:        0 bytes
 12841 ;; Hardware stack levels used:    1
 12842 ;; Hardware stack levels required when called:   28
 12843 ;; This function calls:
 12844 ;;		_StartTimer
 12845 ;;		_TimerDone
 12846 ;;		_display_help
 12847 ;;		_display_info
 12848 ;;		_get_vterm_ptr
 12849 ;;		_help_button
 12850 ;;		_mode_lamp_bright
 12851 ;;		_mode_lamp_dim
 12852 ;;		_set_display_info
 12853 ;;		_set_temp_display_help
 12854 ;;		_set_vterm
 12855 ;;		_sprintf
 12856 ;;		_update_lcd
 12857 ;;		_vterm_dump
 12858 ;; This function is called by:
 12859 ;;		_main
 12860 ;; This function uses a reentrant model
 12861 ;;
 12862                           
 12863                           	psect	text48
 12864  018812                     __ptext48:
 12865                           	opt callstack 0
 12866  018812                     _check_help:
 12867                           	opt callstack 2
 12868                           
 12869                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 12870                           
 12871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12872                           ;incstack = 0
 12873  018812  ECD0  F0E4         	call	_help_button	;wreg free
 12874  018816  5001               	movf	btemp^0,w,c
 12875  018818  B4D8               	btfsc	status,2,c
 12876  01881A  D0D0               	goto	l14346
 12877  01881C  ECAA  F0E9         	call	_display_info	;wreg free
 12878  018820  0401               	decf	btemp^0,w,c
 12879  018822  B4D8               	btfsc	status,2,c
 12880  018824  D0CB               	goto	l14346
 12881                           
 12882                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 12883  018826  0EDC               	movlw	220
 12884  018828  6EE6               	movwf	postinc1,c
 12885  01882A  0E05               	movlw	5
 12886  01882C  6EE6               	movwf	postinc1,c
 12887  01882E  0E0B               	movlw	11
 12888  018830  6EE6               	movwf	postinc1,c
 12889  018832  EC14  F0E4         	call	_StartTimer	;wreg free
 12890                           
 12891                           ;mconfig.c: 48:   if (V.debug)
 12892  018836  0101               	movlb	1	; () banked
 12893  018838  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
 12894                           
 12895                           ; BSR set to: 1
 12896                           ;mconfig.c: 49:    vterm_dump();
 12897  01883A  EC5D  F0D0         	call	_vterm_dump	;wreg free
 12898                           
 12899                           ;mconfig.c: 51:   set_vterm(1);
 12900  01883E  0E01               	movlw	1
 12901  018840  6EE6               	movwf	postinc1,c
 12902  018842  EC97  F0E8         	call	_set_vterm	;wreg free
 12903                           
 12904                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 12905  018846  ECAA  F0E9         	call	_display_info	;wreg free
 12906  01884A  5001               	movf	btemp^0,w,c
 12907  01884C  6EE6               	movwf	postinc1,c
 12908  01884E  EC4C  F0E9         	call	_set_temp_display_help	;wreg free
 12909                           
 12910                           ; BSR set to: 1
 12911                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 12912  018852  0E01               	movlw	1
 12913  018854  6EE6               	movwf	postinc1,c
 12914  018856  ECA6  F0E8         	call	_set_display_info	;wreg free
 12915                           
 12916                           ;mconfig.c: 54:   if (flipper) {
 12917                           ;stkvar	_flipper @ sp[(0)+-1]
 12918  01885A  0EFF               	movlw	-1
 12919  01885C  50E3               	movf	plusw1,w,c
 12920  01885E  B4D8               	btfsc	status,2,c
 12921  018860  D019               	goto	l14332
 12922                           
 12923                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 12924  018862  0EB3               	movlw	low STR_61
 12925  018864  6EE6               	movwf	postinc1,c
 12926  018866  0EFF               	movlw	high STR_61
 12927  018868  6EE6               	movwf	postinc1,c
 12928  01886A  0E5D               	movlw	low STR_63
 12929  01886C  6EE6               	movwf	postinc1,c
 12930  01886E  0EFF               	movlw	high STR_63
 12931  018870  6EE6               	movwf	postinc1,c
 12932  018872  0E01               	movlw	1
 12933  018874  6EE6               	movwf	postinc1,c
 12934  018876  0E00               	movlw	0
 12935  018878  6EE6               	movwf	postinc1,c
 12936  01887A  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 12937  01887E  0060  F007  FFE6   	movff	btemp,postinc1
 12938  018884  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12939  01888A  0E06               	movlw	6
 12940  01888C  6EE6               	movwf	postinc1,c
 12941  01888E  ECCE  F0D4         	call	_sprintf	;wreg free
 12942                           
 12943                           ;mconfig.c: 56:   } else {
 12944  018892  D018               	goto	l1802
 12945  018894                     l14332:
 12946                           
 12947                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 12948  018894  0EC9               	movlw	low STR_62
 12949  018896  6EE6               	movwf	postinc1,c
 12950  018898  0EFF               	movlw	high STR_62
 12951  01889A  6EE6               	movwf	postinc1,c
 12952  01889C  0E5D               	movlw	low STR_63
 12953  01889E  6EE6               	movwf	postinc1,c
 12954  0188A0  0EFF               	movlw	high STR_63
 12955  0188A2  6EE6               	movwf	postinc1,c
 12956  0188A4  0E01               	movlw	1
 12957  0188A6  6EE6               	movwf	postinc1,c
 12958  0188A8  0E00               	movlw	0
 12959  0188AA  6EE6               	movwf	postinc1,c
 12960  0188AC  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 12961  0188B0  0060  F007  FFE6   	movff	btemp,postinc1
 12962  0188B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12963  0188BC  0E06               	movlw	6
 12964  0188BE  6EE6               	movwf	postinc1,c
 12965  0188C0  ECCE  F0D4         	call	_sprintf	;wreg free
 12966  0188C4                     l1802:
 12967                           
 12968                           ; BSR set to: 0
 12969                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 12970  0188C4  0101               	movlb	1	; () banked
 12971  0188C6  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 12972  0188C8  32E8               	rrcf	wreg,f,c
 12973  0188CA  32E8               	rrcf	wreg,f,c
 12974  0188CC  0B03               	andlw	3
 12975  0188CE  0D24               	mullw	36
 12976  0188D0  0E12               	movlw	18
 12977  0188D2  26F3               	addwf	243,f,c
 12978  0188D4  0E00               	movlw	0
 12979  0188D6  22F4               	addwfc	244,f,c
 12980  0188D8  0EB3               	movlw	low _T
 12981  0188DA  6E0B               	movwf	(btemp+10)^0,c
 12982  0188DC  0EF9               	movlw	high _T
 12983  0188DE  6E0C               	movwf	(btemp+11)^0,c
 12984  0188E0  50F3               	movf	243,w,c
 12985  0188E2  260B               	addwf	(btemp+10)^0,f,c
 12986  0188E4  50F4               	movf	244,w,c
 12987  0188E6  220C               	addwfc	(btemp+11)^0,f,c
 12988  0188E8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12989  0188EE  0060  F033  FFE6   	movff	btemp+11,postinc1
 12990  0188F4  0EBF               	movlw	low STR_65
 12991  0188F6  6EE6               	movwf	postinc1,c
 12992  0188F8  0EFF               	movlw	high STR_65
 12993  0188FA  6EE6               	movwf	postinc1,c
 12994  0188FC  0E01               	movlw	1
 12995  0188FE  6EE6               	movwf	postinc1,c
 12996  018900  0E01               	movlw	1
 12997  018902  6EE6               	movwf	postinc1,c
 12998  018904  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 12999  018908  0060  F007  FFE6   	movff	btemp,postinc1
 13000  01890E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13001  018914  0E06               	movlw	6
 13002  018916  6EE6               	movwf	postinc1,c
 13003  018918  ECCE  F0D4         	call	_sprintf	;wreg free
 13004                           
 13005                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 13006  01891C  0101               	movlb	1	; () banked
 13007  01891E  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 13008  018920  32E8               	rrcf	wreg,f,c
 13009  018922  32E8               	rrcf	wreg,f,c
 13010  018924  0B03               	andlw	3
 13011  018926  0D24               	mullw	36
 13012  018928  0EB3               	movlw	low _T
 13013  01892A  6E0B               	movwf	(btemp+10)^0,c
 13014  01892C  0EF9               	movlw	high _T
 13015  01892E  6E0C               	movwf	(btemp+11)^0,c
 13016  018930  50F3               	movf	243,w,c
 13017  018932  260B               	addwf	(btemp+10)^0,f,c
 13018  018934  50F4               	movf	244,w,c
 13019  018936  220C               	addwfc	(btemp+11)^0,f,c
 13020  018938  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13021  01893E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13022  018944  0EBF               	movlw	low STR_65
 13023  018946  6EE6               	movwf	postinc1,c
 13024  018948  0EFF               	movlw	high STR_65
 13025  01894A  6EE6               	movwf	postinc1,c
 13026  01894C  0E01               	movlw	1
 13027  01894E  6EE6               	movwf	postinc1,c
 13028  018950  0E02               	movlw	2
 13029  018952  6EE6               	movwf	postinc1,c
 13030  018954  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 13031  018958  0060  F007  FFE6   	movff	btemp,postinc1
 13032  01895E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13033  018964  0E06               	movlw	6
 13034  018966  6EE6               	movwf	postinc1,c
 13035  018968  ECCE  F0D4         	call	_sprintf	;wreg free
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;mconfig.c: 61:   V.help_id++;
 13039  01896C  EE20  F1A2         	lfsr	2,_V+155	;volatile
 13040  018970  38DF               	swapf	223,w,c
 13041  018972  6E0C               	movwf	(btemp+11)^0,c
 13042  018974  320C               	rrcf	(btemp+11)^0,f,c
 13043  018976  300C               	rrcf	(btemp+11)^0,w,c
 13044  018978  0B03               	andlw	3
 13045  01897A  6E0C               	movwf	(btemp+11)^0,c
 13046  01897C  2A0C               	incf	(btemp+11)^0,f,c
 13047  01897E  3A0C               	swapf	(btemp+11)^0,f,c
 13048  018980  360C               	rlcf	(btemp+11)^0,f,c
 13049  018982  360C               	rlcf	(btemp+11)^0,f,c
 13050  018984  50DF               	movf	223,w,c
 13051  018986  180C               	xorwf	(btemp+11)^0,w,c
 13052  018988  0B3F               	andlw	-193
 13053  01898A  180C               	xorwf	(btemp+11)^0,w,c
 13054  01898C  6EDF               	movwf	223,c
 13055                           
 13056                           ; BSR set to: 0
 13057                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 13058  01898E  0EB8               	movlw	184
 13059  018990  6EE6               	movwf	postinc1,c
 13060  018992  0E0B               	movlw	11
 13061  018994  6EE6               	movwf	postinc1,c
 13062  018996  0E09               	movlw	9
 13063  018998  6EE6               	movwf	postinc1,c
 13064  01899A  EC14  F0E4         	call	_StartTimer	;wreg free
 13065                           
 13066                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 13067  01899E  0EB8               	movlw	184
 13068  0189A0  6EE6               	movwf	postinc1,c
 13069  0189A2  0E0B               	movlw	11
 13070  0189A4  6EE6               	movwf	postinc1,c
 13071  0189A6  0E07               	movlw	7
 13072  0189A8  6EE6               	movwf	postinc1,c
 13073  0189AA  EC14  F0E4         	call	_StartTimer	;wreg free
 13074                           
 13075                           ;mconfig.c: 64:   mode_lamp_bright();
 13076  0189AE  EC63  F0E9         	call	_mode_lamp_bright	;wreg free
 13077                           
 13078                           ;mconfig.c: 65:   update_lcd(1);
 13079  0189B2  0E01               	movlw	1
 13080  0189B4  6EE6               	movwf	postinc1,c
 13081  0189B6  EC46  F0D4         	call	_update_lcd	;wreg free
 13082                           
 13083                           ;mconfig.c: 67:  } else {
 13084  0189BA  D032               	goto	l1803
 13085  0189BC                     l14346:
 13086                           
 13087                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 13088  0189BC  0E09               	movlw	9
 13089  0189BE  6EE6               	movwf	postinc1,c
 13090  0189C0  ECA1  F0E6         	call	_TimerDone	;wreg free
 13091  0189C4  5001               	movf	btemp^0,w,c
 13092  0189C6  B4D8               	btfsc	status,2,c
 13093  0189C8  D02B               	goto	l1803
 13094                           
 13095                           ;mconfig.c: 69:    set_vterm(0);
 13096  0189CA  0E00               	movlw	0
 13097  0189CC  6EE6               	movwf	postinc1,c
 13098  0189CE  EC97  F0E8         	call	_set_vterm	;wreg free
 13099                           
 13100                           ;mconfig.c: 70:    V.help = 0;
 13101  0189D2  0101               	movlb	1	; () banked
 13102  0189D4  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 13103                           
 13104                           ; BSR set to: 1
 13105                           ;mconfig.c: 71:    set_display_info(display_help());
 13106  0189D6  ECAE  F0E9         	call	_display_help	;wreg free
 13107  0189DA  5001               	movf	btemp^0,w,c
 13108  0189DC  6EE6               	movwf	postinc1,c
 13109  0189DE  ECA6  F0E8         	call	_set_display_info	;wreg free
 13110                           
 13111                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 13112  0189E2  0060  F673  FFE6   	movff	_V+149,postinc1
 13113  0189E8  0060  F677  FFE6   	movff	_V+150,postinc1
 13114  0189EE  ECDF  F0E8         	call	_mode_lamp_dim	;wreg free
 13115                           
 13116                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 13117  0189F2  0E0B               	movlw	11
 13118  0189F4  6EE6               	movwf	postinc1,c
 13119  0189F6  ECA1  F0E6         	call	_TimerDone	;wreg free
 13120  0189FA  5001               	movf	btemp^0,w,c
 13121  0189FC  B4D8               	btfsc	status,2,c
 13122  0189FE  D010               	goto	l1803
 13123                           
 13124                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 13125  018A00  0101               	movlb	1	; () banked
 13126  018A02  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 13127  018A04  A4D8               	btfss	status,2,c
 13128  018A06  D002               	goto	u13730
 13129  018A08  0E01               	movlw	1
 13130  018A0A  D001               	goto	u13740
 13131  018A0C                     u13730:
 13132  018A0C  0E00               	movlw	0
 13133  018A0E                     u13740:
 13134  018A0E  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 13135                           
 13136                           ; BSR set to: 1
 13137                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 13138  018A10  0EDC               	movlw	220
 13139  018A12  6EE6               	movwf	postinc1,c
 13140  018A14  0E05               	movlw	5
 13141  018A16  6EE6               	movwf	postinc1,c
 13142  018A18  0E0B               	movlw	11
 13143  018A1A  6EE6               	movwf	postinc1,c
 13144  018A1C  EC14  F0E4         	call	_StartTimer	;wreg free
 13145  018A20                     l1803:
 13146                           
 13147                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 13148  018A20  52E5               	movf	postdec1,f,c
 13149  018A22  0012               	return		;funcret
 13150  018A24                     __end_of_check_help:
 13151                           	opt callstack 0
 13152                           
 13153 ;; *************** function _vterm_dump *****************
 13154 ;; Defined at:
 13155 ;;		line 121 in file "mconfig.c"
 13156 ;; Parameters:    Size  Location     Type
 13157 ;;		None
 13158 ;; Auto vars:     Size  Location     Type
 13159 ;;		None
 13160 ;; Return value:  Size  Location     Type
 13161 ;;                  1  [STACK] void 
 13162 ;; Registers used:
 13163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13164 ;; Tracked objects:
 13165 ;;		On entry : 3F/1
 13166 ;;		On exit  : 0/0
 13167 ;;		Unchanged: 0/0
 13168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13173 ;;Total ram usage:        0 bytes
 13174 ;; Hardware stack levels used:    1
 13175 ;; Hardware stack levels required when called:   27
 13176 ;; This function calls:
 13177 ;;		_WaitMs
 13178 ;;		_eaDogM_WriteStringAtPos
 13179 ;;		_get_vterm_ptr
 13180 ;;		_sprintf
 13181 ;;		_wait_lcd_done
 13182 ;; This function is called by:
 13183 ;;		_check_help
 13184 ;; This function uses a reentrant model
 13185 ;;
 13186                           
 13187                           	psect	text49
 13188  01A0BA                     __ptext49:
 13189                           	opt callstack 0
 13190  01A0BA                     _vterm_dump:
 13191                           	opt callstack 2
 13192                           
 13193                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 13194                           
 13195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13196                           ;incstack = 0
 13197  01A0BA  0E01               	movlw	1
 13198  01A0BC  6EE6               	movwf	postinc1,c
 13199  01A0BE  0E00               	movlw	0
 13200  01A0C0  6EE6               	movwf	postinc1,c
 13201  01A0C2  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 13202  01A0C6  0060  F007  FFE6   	movff	btemp,postinc1
 13203  01A0CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13204  01A0D2  0E00               	movlw	0
 13205  01A0D4  6EE6               	movwf	postinc1,c
 13206  01A0D6  0E00               	movlw	0
 13207  01A0D8  6EE6               	movwf	postinc1,c
 13208  01A0DA  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 13209  01A0DE  0060  F007  FFE6   	movff	btemp,postinc1
 13210  01A0E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13211  01A0EA  0EA4               	movlw	low STR_67
 13212  01A0EC  6EE6               	movwf	postinc1,c
 13213  01A0EE  0EFF               	movlw	high STR_67
 13214  01A0F0  6EE6               	movwf	postinc1,c
 13215  01A0F2  0E08               	movlw	low (_V+1)
 13216  01A0F4  6EE6               	movwf	postinc1,c
 13217  01A0F6  0E01               	movlw	high (_V+1)
 13218  01A0F8  6EE6               	movwf	postinc1,c
 13219  01A0FA  0E08               	movlw	8
 13220  01A0FC  6EE6               	movwf	postinc1,c
 13221  01A0FE  ECCE  F0D4         	call	_sprintf	;wreg free
 13222                           
 13223                           ; BSR set to: 0
 13224                           ;mconfig.c: 124:  wait_lcd_done();
 13225  01A102  EC26  F0E8         	call	_wait_lcd_done	;wreg free
 13226                           
 13227                           ; BSR set to: 0
 13228                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 13229  01A106  0E08               	movlw	low (_V+1)
 13230  01A108  6EE6               	movwf	postinc1,c
 13231  01A10A  0E01               	movlw	high (_V+1)
 13232  01A10C  6EE6               	movwf	postinc1,c
 13233  01A10E  0E00               	movlw	0
 13234  01A110  6EE6               	movwf	postinc1,c
 13235  01A112  0E00               	movlw	0
 13236  01A114  6EE6               	movwf	postinc1,c
 13237  01A116  ECC5  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
 13238                           
 13239                           ; BSR set to: 59
 13240                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 13241  01A11A  0E01               	movlw	1
 13242  01A11C  6EE6               	movwf	postinc1,c
 13243  01A11E  0E01               	movlw	1
 13244  01A120  6EE6               	movwf	postinc1,c
 13245  01A122  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 13246  01A126  0060  F007  FFE6   	movff	btemp,postinc1
 13247  01A12C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13248  01A132  0E00               	movlw	0
 13249  01A134  6EE6               	movwf	postinc1,c
 13250  01A136  0E01               	movlw	1
 13251  01A138  6EE6               	movwf	postinc1,c
 13252  01A13A  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 13253  01A13E  0060  F007  FFE6   	movff	btemp,postinc1
 13254  01A144  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13255  01A14A  0EA4               	movlw	low STR_67
 13256  01A14C  6EE6               	movwf	postinc1,c
 13257  01A14E  0EFF               	movlw	high STR_67
 13258  01A150  6EE6               	movwf	postinc1,c
 13259  01A152  0E08               	movlw	low (_V+1)
 13260  01A154  6EE6               	movwf	postinc1,c
 13261  01A156  0E01               	movlw	high (_V+1)
 13262  01A158  6EE6               	movwf	postinc1,c
 13263  01A15A  0E08               	movlw	8
 13264  01A15C  6EE6               	movwf	postinc1,c
 13265  01A15E  ECCE  F0D4         	call	_sprintf	;wreg free
 13266                           
 13267                           ; BSR set to: 0
 13268                           ;mconfig.c: 127:  wait_lcd_done();
 13269  01A162  EC26  F0E8         	call	_wait_lcd_done	;wreg free
 13270                           
 13271                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 13272  01A166  0E08               	movlw	low (_V+1)
 13273  01A168  6EE6               	movwf	postinc1,c
 13274  01A16A  0E01               	movlw	high (_V+1)
 13275  01A16C  6EE6               	movwf	postinc1,c
 13276  01A16E  0E00               	movlw	0
 13277  01A170  6EE6               	movwf	postinc1,c
 13278  01A172  0E01               	movlw	1
 13279  01A174  6EE6               	movwf	postinc1,c
 13280  01A176  ECC5  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
 13281                           
 13282                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 13283  01A17A  0E01               	movlw	1
 13284  01A17C  6EE6               	movwf	postinc1,c
 13285  01A17E  0E02               	movlw	2
 13286  01A180  6EE6               	movwf	postinc1,c
 13287  01A182  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 13288  01A186  0060  F007  FFE6   	movff	btemp,postinc1
 13289  01A18C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13290  01A192  0E00               	movlw	0
 13291  01A194  6EE6               	movwf	postinc1,c
 13292  01A196  0E02               	movlw	2
 13293  01A198  6EE6               	movwf	postinc1,c
 13294  01A19A  EC1E  F0E6         	call	_get_vterm_ptr	;wreg free
 13295  01A19E  0060  F007  FFE6   	movff	btemp,postinc1
 13296  01A1A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13297  01A1AA  0EA4               	movlw	low STR_67
 13298  01A1AC  6EE6               	movwf	postinc1,c
 13299  01A1AE  0EFF               	movlw	high STR_67
 13300  01A1B0  6EE6               	movwf	postinc1,c
 13301  01A1B2  0E08               	movlw	low (_V+1)
 13302  01A1B4  6EE6               	movwf	postinc1,c
 13303  01A1B6  0E01               	movlw	high (_V+1)
 13304  01A1B8  6EE6               	movwf	postinc1,c
 13305  01A1BA  0E08               	movlw	8
 13306  01A1BC  6EE6               	movwf	postinc1,c
 13307  01A1BE  ECCE  F0D4         	call	_sprintf	;wreg free
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;mconfig.c: 130:  wait_lcd_done();
 13311  01A1C2  EC26  F0E8         	call	_wait_lcd_done	;wreg free
 13312                           
 13313                           ; BSR set to: 0
 13314                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 13315  01A1C6  0E08               	movlw	low (_V+1)
 13316  01A1C8  6EE6               	movwf	postinc1,c
 13317  01A1CA  0E01               	movlw	high (_V+1)
 13318  01A1CC  6EE6               	movwf	postinc1,c
 13319  01A1CE  0E00               	movlw	0
 13320  01A1D0  6EE6               	movwf	postinc1,c
 13321  01A1D2  0E02               	movlw	2
 13322  01A1D4  6EE6               	movwf	postinc1,c
 13323  01A1D6  ECC5  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
 13324                           
 13325                           ; BSR set to: 59
 13326                           ;mconfig.c: 132:  WaitMs(3000);
 13327  01A1DA  0EB8               	movlw	184
 13328  01A1DC  6EE6               	movwf	postinc1,c
 13329  01A1DE  0E0B               	movlw	11
 13330  01A1E0  6EE6               	movwf	postinc1,c
 13331  01A1E2  EC08  F0E5         	call	_WaitMs	;wreg free
 13332                           
 13333                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 13334  01A1E6  0012               	return		;funcret
 13335  01A1E8                     __end_of_vterm_dump:
 13336                           	opt callstack 0
 13337                           
 13338 ;; *************** function _sprintf *****************
 13339 ;; Defined at:
 13340 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 13341 ;; Parameters:    Size  Location     Type
 13342 ;;  s               2  [STACK] PTR unsigned char 
 13343 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 13344 ;;  fmt             2  [STACK] PTR const unsigned char 
 13345 ;;		 -> STR_80(127), STR_78(3), STR_77(3), STR_76(19), 
 13346 ;;		 -> STR_75(19), STR_74(19), STR_73(19), STR_72(19), 
 13347 ;;		 -> STR_71(19), STR_70(24), STR_69(15), STR_68(15), 
 13348 ;;		 -> STR_67(15), STR_66(10), STR_65(10), STR_64(19), 
 13349 ;;		 -> STR_63(19), STR_58(21), STR_57(21), STR_56(21), 
 13350 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 13351 ;;		 -> STR_51(21), STR_50(21), STR_49(20), STR_48(21), 
 13352 ;;		 -> STR_47(21), STR_46(21), STR_45(22), STR_44(22), 
 13353 ;;		 -> STR_43(22), STR_42(23), STR_41(23), STR_40(23), 
 13354 ;;		 -> STR_39(29), STR_38(23), STR_37(23), STR_36(22), 
 13355 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 13356 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 13357 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(17), 
 13358 ;;		 -> STR_23(16), STR_22(16), STR_21(26), STR_20(26), 
 13359 ;;		 -> STR_19(22), STR_18(21), STR_17(21), STR_16(21), 
 13360 ;;		 -> STR_15(21), STR_14(22), STR_13(22), STR_12(22), 
 13361 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 13362 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 13363 ;;		 -> STR_2(21), STR_1(21), 
 13364 ;; Auto vars:     Size  Location     Type
 13365 ;;  f               6  [STACK] struct _IO_FILE
 13366 ;;  ap              2  [STACK] PTR void [1]
 13367 ;;		 -> ?_printf(2), ?_sprintf(2), 
 13368 ;;  ret             2    0        int 
 13369 ;; Return value:  Size  Location     Type
 13370 ;;                  2  [STACK] int 
 13371 ;; Registers used:
 13372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13373 ;; Tracked objects:
 13374 ;;		On entry : 0/1
 13375 ;;		On exit  : 3F/0
 13376 ;;		Unchanged: 0/0
 13377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13382 ;;Total ram usage:        0 bytes
 13383 ;; Hardware stack levels used:    1
 13384 ;; Hardware stack levels required when called:   23
 13385 ;; This function calls:
 13386 ;;		_vfprintf
 13387 ;; This function is called by:
 13388 ;;		_main
 13389 ;;		_current_sensor_cal
 13390 ;;		_check_help
 13391 ;;		_vterm_dump
 13392 ;;		_calc_bsoc
 13393 ;; This function uses a reentrant model
 13394 ;;
 13395                           
 13396                           	psect	text50
 13397  01A99C                     __ptext50:
 13398                           	opt callstack 0
 13399  01A99C                     _sprintf:
 13400                           	opt callstack 0
 13401                           
 13402                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13403  01A99C  0E08               	movlw	8
 13404  01A99E  26E1               	addwf	fsr1l,f,c
 13405  01A9A0  0E00               	movlw	0
 13406  01A9A2  22E2               	addwfc	fsr1h,f,c
 13407                           
 13408                           ;incstack = 0
 13409 ;; hardware stack exceeded
 13410  01A9A4  0EFE               	movlw	254
 13411  01A9A6  6E0B               	movwf	(btemp+10)^0,c
 13412  01A9A8  0EFF               	movlw	255
 13413  01A9AA  6E0C               	movwf	(btemp+11)^0,c
 13414                           
 13415                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 13416  01A9AC  0EF5               	movlw	245
 13417  01A9AE  24E1               	addwf	fsr1l,w,c
 13418  01A9B0  6E09               	movwf	(btemp+8)^0,c
 13419  01A9B2  0EFF               	movlw	255
 13420  01A9B4  20E2               	addwfc	fsr1h,w,c
 13421  01A9B6  6E0A               	movwf	(btemp+9)^0,c
 13422  01A9B8  500B               	movf	(btemp+10)^0,w,c
 13423  01A9BA  2609               	addwf	(btemp+8)^0,f,c
 13424  01A9BC  500C               	movf	(btemp+11)^0,w,c
 13425  01A9BE  220A               	addwfc	(btemp+9)^0,f,c
 13426                           
 13427                           ;stkvar	_ap @ sp[(-8)+6]
 13428  01A9C0  0EFF               	movlw	-1
 13429  01A9C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13430  01A9C8  0EFE               	movlw	-2
 13431  01A9CA  0060  F027  FFE3   	movff	btemp+8,plusw1
 13432                           
 13433                           ;stkvar	_s @ sp[(-8)+-3]
 13434  01A9D0  0EF5               	movlw	-11
 13435  01A9D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 13436  01A9D8  0EF6               	movlw	-10
 13437  01A9DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 13438                           
 13439                           ;stkvar	_f @ sp[(-8)+0]
 13440  01A9E0  0EF9               	movlw	-7
 13441  01A9E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 13442  01A9E8  0EF8               	movlw	-8
 13443  01A9EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13444                           
 13445                           ;stkvar	_f @ sp[(-8)+0]
 13446  01A9F0  0EFA               	movlw	250
 13447  01A9F2  24E1               	addwf	fsr1l,w,c
 13448  01A9F4  6ED9               	movwf	fsr2l,c
 13449  01A9F6  0EFF               	movlw	255
 13450  01A9F8  20E2               	addwfc	fsr1h,w,c
 13451  01A9FA  6EDA               	movwf	fsr2h,c
 13452  01A9FC  0E00               	movlw	0
 13453  01A9FE  6EDE               	movwf	postinc2,c
 13454  01AA00  0E00               	movlw	0
 13455  01AA02  6EDD               	movwf	postdec2,c
 13456                           
 13457                           ;stkvar	_f @ sp[(-8)+0]
 13458  01AA04  0EFC               	movlw	252
 13459  01AA06  24E1               	addwf	fsr1l,w,c
 13460  01AA08  6ED9               	movwf	fsr2l,c
 13461  01AA0A  0EFF               	movlw	255
 13462  01AA0C  20E2               	addwfc	fsr1h,w,c
 13463  01AA0E  6EDA               	movwf	fsr2h,c
 13464  01AA10  0E00               	movlw	0
 13465  01AA12  6EDE               	movwf	postinc2,c
 13466  01AA14  0E00               	movlw	0
 13467  01AA16  6EDD               	movwf	postdec2,c
 13468                           
 13469                           ;stkvar	_ap @ sp[(-8)+6]
 13470  01AA18  0EFE               	movlw	254
 13471  01AA1A  24E1               	addwf	fsr1l,w,c
 13472  01AA1C  6E01               	movwf	btemp^0,c
 13473  01AA1E  0EFF               	movlw	255
 13474  01AA20  20E2               	addwfc	fsr1h,w,c
 13475  01AA22  6E02               	movwf	(btemp+1)^0,c
 13476  01AA24  0060  F007  FFE6   	movff	btemp,postinc1
 13477  01AA2A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13478                           
 13479                           ;stkvar	_fmt @ sp[(-10)+-5]
 13480  01AA30  0EF1               	movlw	-15
 13481  01AA32  006F FF8F FFE6     	movff	plusw1,postinc1
 13482  01AA38  006F FF8F FFE6     	movff	plusw1,postinc1
 13483                           
 13484                           ;stkvar	_f @ sp[(-12)+0]
 13485  01AA3E  0EF4               	movlw	244
 13486  01AA40  24E1               	addwf	fsr1l,w,c
 13487  01AA42  6E01               	movwf	btemp^0,c
 13488  01AA44  0EFF               	movlw	255
 13489  01AA46  20E2               	addwfc	fsr1h,w,c
 13490  01AA48  6E02               	movwf	(btemp+1)^0,c
 13491  01AA4A  0060  F007  FFE6   	movff	btemp,postinc1
 13492  01AA50  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13493  01AA56  EC1A  F0DA         	call	_vfprintf	;wreg free
 13494                           
 13495                           ; BSR set to: 0
 13496                           ;stkvar	_f @ sp[(-8)+0]
 13497  01AA5A  0EFA               	movlw	250
 13498  01AA5C  24E1               	addwf	fsr1l,w,c
 13499  01AA5E  6ED9               	movwf	fsr2l,c
 13500  01AA60  0EFF               	movlw	255
 13501  01AA62  20E2               	addwfc	fsr1h,w,c
 13502  01AA64  6EDA               	movwf	fsr2h,c
 13503  01AA66  006F FF78  F00B    	movff	postinc2,btemp+10
 13504  01AA6C  006F FF74  F00C    	movff	postdec2,btemp+11
 13505                           
 13506                           ;stkvar	_s @ sp[(-8)+-3]
 13507  01AA72  0EF5               	movlw	-11
 13508  01AA74  006F FF8C  F009    	movff	plusw1,btemp+8
 13509  01AA7A  0EF6               	movlw	-10
 13510  01AA7C  006F FF8C  F00A    	movff	plusw1,btemp+9
 13511  01AA82  500B               	movf	(btemp+10)^0,w,c
 13512  01AA84  2409               	addwf	(btemp+8)^0,w,c
 13513  01AA86  6ED9               	movwf	fsr2l,c
 13514  01AA88  500C               	movf	(btemp+11)^0,w,c
 13515  01AA8A  200A               	addwfc	(btemp+9)^0,w,c
 13516  01AA8C  6EDA               	movwf	fsr2h,c
 13517  01AA8E  0E00               	movlw	0
 13518  01AA90  6EDF               	movwf	indf2,c
 13519                           
 13520                           ; BSR set to: 0
 13521                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 13522  01AA92  0EF8               	movlw	248
 13523  01AA94  26E1               	addwf	fsr1l,f,c
 13524  01AA96  0EFF               	movlw	255
 13525  01AA98  22E2               	addwfc	fsr1h,f,c
 13526  01AA9A  52E5               	movf	postdec1,f,c
 13527  01AA9C  50E7               	movf	indf1,w,c
 13528  01AA9E  5EE1               	subwf	fsr1l,f,c
 13529  01AAA0  0E00               	movlw	0
 13530  01AAA2  5AE2               	subwfb	fsr1h,f,c
 13531  01AAA4  0012               	return		;funcret
 13532  01AAA6                     __end_of_sprintf:
 13533                           	opt callstack 0
 13534                           
 13535 ;; *************** function _get_vterm_ptr *****************
 13536 ;; Defined at:
 13537 ;;		line 116 in file "mconfig.c"
 13538 ;; Parameters:    Size  Location     Type
 13539 ;;  line            1  [STACK] const unsigned char 
 13540 ;;  vterm           1  [STACK] const unsigned char 
 13541 ;; Auto vars:     Size  Location     Type
 13542 ;;		None
 13543 ;; Return value:  Size  Location     Type
 13544 ;;                  2  [STACK] PTR unsigned char 
 13545 ;; Registers used:
 13546 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 13547 ;; Tracked objects:
 13548 ;;		On entry : 0/1
 13549 ;;		On exit  : 0/0
 13550 ;;		Unchanged: 0/0
 13551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13556 ;;Total ram usage:        0 bytes
 13557 ;; Hardware stack levels used:    1
 13558 ;; Hardware stack levels required when called:   15
 13559 ;; This function calls:
 13560 ;;		Nothing
 13561 ;; This function is called by:
 13562 ;;		_main
 13563 ;;		_current_sensor_cal
 13564 ;;		_check_help
 13565 ;;		_vterm_dump
 13566 ;; This function uses a reentrant model
 13567 ;;
 13568                           
 13569                           	psect	text51
 13570  01CC3C                     __ptext51:
 13571                           	opt callstack 0
 13572  01CC3C                     _get_vterm_ptr:
 13573                           	opt callstack 15
 13574                           
 13575                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 13576                           ;stkvar	_vterm @ sp[(0)+-2]
 13577                           
 13578                           ; BSR set to: 0
 13579                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13580                           ;incstack = 0
 13581  01CC3C  0EFE               	movlw	-2
 13582  01CC3E  50E3               	movf	plusw1,w,c
 13583  01CC40  0B03               	andlw	3
 13584  01CC42  0D78               	mullw	120
 13585  01CC44  0E42               	movlw	low _D
 13586  01CC46  6E01               	movwf	btemp^0,c
 13587  01CC48  0E0A               	movlw	high _D
 13588  01CC4A  6E02               	movwf	(btemp+1)^0,c
 13589  01CC4C  50F3               	movf	243,w,c
 13590  01CC4E  2601               	addwf	btemp^0,f,c
 13591  01CC50  50F4               	movf	244,w,c
 13592  01CC52  2202               	addwfc	(btemp+1)^0,f,c
 13593                           
 13594                           ;stkvar	_line @ sp[(0)+-1]
 13595  01CC54  0EFF               	movlw	-1
 13596  01CC56  50E3               	movf	plusw1,w,c
 13597  01CC58  0B03               	andlw	3
 13598  01CC5A  0D28               	mullw	40
 13599  01CC5C  50F3               	movf	243,w,c
 13600  01CC5E  2601               	addwf	btemp^0,f,c
 13601  01CC60  50F4               	movf	244,w,c
 13602  01CC62  2202               	addwfc	(btemp+1)^0,f,c
 13603                           
 13604                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 13605  01CC64  52E5               	movf	postdec1,f,c
 13606  01CC66  52E5               	movf	postdec1,f,c
 13607  01CC68  0012               	return		;funcret
 13608  01CC6A                     __end_of_get_vterm_ptr:
 13609                           	opt callstack 0
 13610                           
 13611 ;; *************** function _WaitMs *****************
 13612 ;; Defined at:
 13613 ;;		line 32 in file "timers.c"
 13614 ;; Parameters:    Size  Location     Type
 13615 ;;  numMilliseco    2  [STACK] const unsigned short 
 13616 ;; Auto vars:     Size  Location     Type
 13617 ;;		None
 13618 ;; Return value:  Size  Location     Type
 13619 ;;                  1  [STACK] void 
 13620 ;; Registers used:
 13621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 13622 ;; Tracked objects:
 13623 ;;		On entry : 0/1
 13624 ;;		On exit  : 0/0
 13625 ;;		Unchanged: 0/0
 13626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13631 ;;Total ram usage:        0 bytes
 13632 ;; Hardware stack levels used:    1
 13633 ;; Hardware stack levels required when called:   16
 13634 ;; This function calls:
 13635 ;;		_StartTimer
 13636 ;;		_TimerDone
 13637 ;; This function is called by:
 13638 ;;		_main
 13639 ;;		_current_sensor_cal
 13640 ;;		_vterm_dump
 13641 ;; This function uses a reentrant model
 13642 ;;
 13643                           
 13644                           	psect	text52
 13645  01CA10                     __ptext52:
 13646                           	opt callstack 0
 13647  01CA10                     _WaitMs:
 13648                           	opt callstack 13
 13649                           
 13650                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 13651                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 13652                           
 13653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13654                           ;incstack = 0
 13655  01CA10  0EFE               	movlw	-2
 13656  01CA12  006F FF8F FFE6     	movff	plusw1,postinc1
 13657  01CA18  006F FF8F FFE6     	movff	plusw1,postinc1
 13658  01CA1E  0E00               	movlw	0
 13659  01CA20  6EE6               	movwf	postinc1,c
 13660  01CA22  EC14  F0E4         	call	_StartTimer	;wreg free
 13661                           
 13662                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 13663  01CA26  D005               	goto	l10752
 13664  01CA28                     l1734:
 13665                           
 13666                           ;timers.c: 36:   __nop();
 13667  01CA28  F000               	nop	
 13668                           
 13669                           ;timers.c: 37:   __nop();
 13670  01CA2A  F000               	nop	
 13671                           
 13672                           ;timers.c: 38:   __nop();
 13673  01CA2C  F000               	nop	
 13674                           
 13675                           ;timers.c: 39:   __nop();
 13676  01CA2E  F000               	nop	
 13677  01CA30  0004               	clrwdt		;# 
 13678  01CA32                     l10752:
 13679                           
 13680                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 13681  01CA32  0E00               	movlw	0
 13682  01CA34  6EE6               	movwf	postinc1,c
 13683  01CA36  ECA1  F0E6         	call	_TimerDone	;wreg free
 13684  01CA3A  5001               	movf	btemp^0,w,c
 13685  01CA3C  B4D8               	btfsc	status,2,c
 13686  01CA3E  D7F4               	goto	l1734
 13687                           
 13688                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 13689  01CA40  52E5               	movf	postdec1,f,c
 13690  01CA42  52E5               	movf	postdec1,f,c
 13691  01CA44  0012               	return		;funcret
 13692  01CA46                     __end_of_WaitMs:
 13693                           	opt callstack 0
 13694                           
 13695 ;; *************** function _update_lcd *****************
 13696 ;; Defined at:
 13697 ;;		line 85 in file "mconfig.c"
 13698 ;; Parameters:    Size  Location     Type
 13699 ;;  vterm           1  [STACK] unsigned char 
 13700 ;; Auto vars:     Size  Location     Type
 13701 ;;		None
 13702 ;; Return value:  Size  Location     Type
 13703 ;;                  1  [STACK] unsigned char 
 13704 ;; Registers used:
 13705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13706 ;; Tracked objects:
 13707 ;;		On entry : 0/0
 13708 ;;		On exit  : 0/0
 13709 ;;		Unchanged: 0/0
 13710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13715 ;;Total ram usage:        0 bytes
 13716 ;; Hardware stack levels used:    1
 13717 ;; Hardware stack levels required when called:   27
 13718 ;; This function calls:
 13719 ;;		_eaDogM_WriteStringAtPos
 13720 ;;		_wait_lcd_done
 13721 ;; This function is called by:
 13722 ;;		_main
 13723 ;;		_current_sensor_cal
 13724 ;;		_check_help
 13725 ;; This function uses a reentrant model
 13726 ;;
 13727                           
 13728                           	psect	text53
 13729  01A88C                     __ptext53:
 13730                           	opt callstack 0
 13731  01A88C                     _update_lcd:
 13732                           	opt callstack 3
 13733                           
 13734                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 13735                           ;stkvar	_vterm @ sp[(0)+-1]
 13736                           
 13737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13738                           ;incstack = 0
 13739  01A88C  0EFF               	movlw	-1
 13740  01A88E  006F FF8C  F001    	movff	plusw1,btemp
 13741  01A894  0E03               	movlw	3
 13742  01A896  1601               	andwf	btemp^0,f,c
 13743  01A898  0EFF               	movlw	-1
 13744  01A89A  0060  F007  FFE3   	movff	btemp,plusw1
 13745                           
 13746                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 13747  01A8A0  EE23  F022         	lfsr	2,_D+480
 13748  01A8A4  A0DF               	btfss	indf2,0,c
 13749  01A8A6  D004               	goto	l14038
 13750                           
 13751                           ;stkvar	_vterm @ sp[(0)+-1]
 13752  01A8A8  0EFF               	movlw	-1
 13753  01A8AA  50E3               	movf	plusw1,w,c
 13754  01A8AC  B4D8               	btfsc	status,2,c
 13755  01A8AE  D074               	goto	l1810
 13756  01A8B0                     l14038:
 13757                           
 13758                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 13759                           ;stkvar	_vterm @ sp[(0)+-1]
 13760  01A8B0  0EFF               	movlw	-1
 13761  01A8B2  50E3               	movf	plusw1,w,c
 13762  01A8B4  0D78               	mullw	120
 13763  01A8B6  0E56               	movlw	low (_D+20)
 13764  01A8B8  24F3               	addwf	243,w,c
 13765  01A8BA  6ED9               	movwf	fsr2l,c
 13766  01A8BC  0E0A               	movlw	high (_D+20)
 13767  01A8BE  20F4               	addwfc	prodh,w,c
 13768  01A8C0  6EDA               	movwf	fsr2h,c
 13769  01A8C2  0E00               	movlw	0
 13770  01A8C4  6EDF               	movwf	indf2,c
 13771                           
 13772                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 13773                           ;stkvar	_vterm @ sp[(0)+-1]
 13774  01A8C6  0EFF               	movlw	-1
 13775  01A8C8  50E3               	movf	plusw1,w,c
 13776  01A8CA  0D78               	mullw	120
 13777  01A8CC  0E7E               	movlw	low (_D+60)
 13778  01A8CE  24F3               	addwf	243,w,c
 13779  01A8D0  6ED9               	movwf	fsr2l,c
 13780  01A8D2  0E0A               	movlw	high (_D+60)
 13781  01A8D4  20F4               	addwfc	prodh,w,c
 13782  01A8D6  6EDA               	movwf	fsr2h,c
 13783  01A8D8  0E00               	movlw	0
 13784  01A8DA  6EDF               	movwf	indf2,c
 13785                           
 13786                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 13787                           ;stkvar	_vterm @ sp[(0)+-1]
 13788  01A8DC  0EFF               	movlw	-1
 13789  01A8DE  50E3               	movf	plusw1,w,c
 13790  01A8E0  0D78               	mullw	120
 13791  01A8E2  0EA6               	movlw	low (_D+100)
 13792  01A8E4  24F3               	addwf	243,w,c
 13793  01A8E6  6ED9               	movwf	fsr2l,c
 13794  01A8E8  0E0A               	movlw	high (_D+100)
 13795  01A8EA  20F4               	addwfc	prodh,w,c
 13796  01A8EC  6EDA               	movwf	fsr2h,c
 13797  01A8EE  0E00               	movlw	0
 13798  01A8F0  6EDF               	movwf	indf2,c
 13799                           
 13800                           ;mconfig.c: 95:  wait_lcd_done();
 13801  01A8F2  EC26  F0E8         	call	_wait_lcd_done	;wreg free
 13802                           
 13803                           ; BSR set to: 0
 13804                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 13805                           ;stkvar	_vterm @ sp[(0)+-1]
 13806  01A8F6  0EFF               	movlw	-1
 13807  01A8F8  50E3               	movf	plusw1,w,c
 13808  01A8FA  0D78               	mullw	120
 13809  01A8FC  0E42               	movlw	low _D
 13810  01A8FE  6E0B               	movwf	(btemp+10)^0,c
 13811  01A900  0E0A               	movlw	high _D
 13812  01A902  6E0C               	movwf	(btemp+11)^0,c
 13813  01A904  50F3               	movf	243,w,c
 13814  01A906  260B               	addwf	(btemp+10)^0,f,c
 13815  01A908  50F4               	movf	244,w,c
 13816  01A90A  220C               	addwfc	(btemp+11)^0,f,c
 13817  01A90C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13818  01A912  0060  F033  FFE6   	movff	btemp+11,postinc1
 13819  01A918  0E00               	movlw	0
 13820  01A91A  6EE6               	movwf	postinc1,c
 13821  01A91C  0E00               	movlw	0
 13822  01A91E  6EE6               	movwf	postinc1,c
 13823  01A920  ECC5  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
 13824                           
 13825                           ; BSR set to: 59
 13826                           ;mconfig.c: 97:  wait_lcd_done();
 13827  01A924  EC26  F0E8         	call	_wait_lcd_done	;wreg free
 13828                           
 13829                           ; BSR set to: 0
 13830                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 13831                           ;stkvar	_vterm @ sp[(0)+-1]
 13832  01A928  0EFF               	movlw	-1
 13833  01A92A  50E3               	movf	plusw1,w,c
 13834  01A92C  0D78               	mullw	120
 13835  01A92E  0E42               	movlw	low _D
 13836  01A930  6E0B               	movwf	(btemp+10)^0,c
 13837  01A932  0E0A               	movlw	high _D
 13838  01A934  6E0C               	movwf	(btemp+11)^0,c
 13839  01A936  0E28               	movlw	40
 13840  01A938  260B               	addwf	(btemp+10)^0,f,c
 13841  01A93A  0E00               	movlw	0
 13842  01A93C  220C               	addwfc	(btemp+11)^0,f,c
 13843  01A93E  50F3               	movf	243,w,c
 13844  01A940  260B               	addwf	(btemp+10)^0,f,c
 13845  01A942  50F4               	movf	244,w,c
 13846  01A944  220C               	addwfc	(btemp+11)^0,f,c
 13847  01A946  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13848  01A94C  0060  F033  FFE6   	movff	btemp+11,postinc1
 13849  01A952  0E00               	movlw	0
 13850  01A954  6EE6               	movwf	postinc1,c
 13851  01A956  0E01               	movlw	1
 13852  01A958  6EE6               	movwf	postinc1,c
 13853  01A95A  ECC5  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
 13854                           
 13855                           ; BSR set to: 59
 13856                           ;mconfig.c: 99:  wait_lcd_done();
 13857  01A95E  EC26  F0E8         	call	_wait_lcd_done	;wreg free
 13858                           
 13859                           ; BSR set to: 0
 13860                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 13861                           ;stkvar	_vterm @ sp[(0)+-1]
 13862  01A962  0EFF               	movlw	-1
 13863  01A964  50E3               	movf	plusw1,w,c
 13864  01A966  0D78               	mullw	120
 13865  01A968  0E42               	movlw	low _D
 13866  01A96A  6E0B               	movwf	(btemp+10)^0,c
 13867  01A96C  0E0A               	movlw	high _D
 13868  01A96E  6E0C               	movwf	(btemp+11)^0,c
 13869  01A970  0E50               	movlw	80
 13870  01A972  260B               	addwf	(btemp+10)^0,f,c
 13871  01A974  0E00               	movlw	0
 13872  01A976  220C               	addwfc	(btemp+11)^0,f,c
 13873  01A978  50F3               	movf	243,w,c
 13874  01A97A  260B               	addwf	(btemp+10)^0,f,c
 13875  01A97C  50F4               	movf	244,w,c
 13876  01A97E  220C               	addwfc	(btemp+11)^0,f,c
 13877  01A980  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13878  01A986  0060  F033  FFE6   	movff	btemp+11,postinc1
 13879  01A98C  0E00               	movlw	0
 13880  01A98E  6EE6               	movwf	postinc1,c
 13881  01A990  0E02               	movlw	2
 13882  01A992  6EE6               	movwf	postinc1,c
 13883  01A994  ECC5  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
 13884  01A998                     l1810:
 13885                           
 13886                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 13887  01A998  52E5               	movf	postdec1,f,c
 13888  01A99A  0012               	return		;funcret
 13889  01A99C                     __end_of_update_lcd:
 13890                           	opt callstack 0
 13891                           
 13892 ;; *************** function _eaDogM_WriteStringAtPos *****************
 13893 ;; Defined at:
 13894 ;;		line 195 in file "eadog.c"
 13895 ;; Parameters:    Size  Location     Type
 13896 ;;  r               1  [STACK] const unsigned char 
 13897 ;;  c               1  [STACK] const unsigned char 
 13898 ;;  strPtr          2  [STACK] PTR unsigned char 
 13899 ;;		 -> D.lcd(480), D(482), V(192), 
 13900 ;; Auto vars:     Size  Location     Type
 13901 ;;  row             1  [STACK] unsigned char 
 13902 ;; Return value:  Size  Location     Type
 13903 ;;                  1  [STACK] void 
 13904 ;; Registers used:
 13905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13906 ;; Tracked objects:
 13907 ;;		On entry : 3F/0
 13908 ;;		On exit  : 3F/3B
 13909 ;;		Unchanged: 0/0
 13910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13915 ;;Total ram usage:        0 bytes
 13916 ;; Hardware stack levels used:    1
 13917 ;; Hardware stack levels required when called:   26
 13918 ;; This function calls:
 13919 ;;		_eaDogM_WriteString
 13920 ;;		_send_lcd_cmd_dma
 13921 ;;		_send_lcd_data_dma
 13922 ;;		_wait_lcd_done
 13923 ;;		_wdtdelay
 13924 ;; This function is called by:
 13925 ;;		_update_lcd
 13926 ;;		_vterm_dump
 13927 ;; This function uses a reentrant model
 13928 ;;
 13929                           
 13930                           	psect	text54
 13931  01B58A                     __ptext54:
 13932                           	opt callstack 0
 13933  01B58A                     _eaDogM_WriteStringAtPos:
 13934                           	opt callstack 0
 13935                           
 13936                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13937  01B58A  52E6               	movf	postinc1,f,c
 13938                           
 13939                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 13940                           
 13941                           ;incstack = 0
 13942  01B58C  D014               	goto	l14014
 13943  01B58E                     l14002:
 13944                           
 13945                           ;eadog.c: 201:   row = 0x40;
 13946                           ;stkvar	_row @ sp[(-1)+0]
 13947  01B58E  0EFF               	movlw	-1
 13948  01B590  6AE3               	clrf	plusw1,c
 13949  01B592  8CE3               	bsf	plusw1,6,c
 13950                           
 13951                           ;eadog.c: 202:   break;
 13952  01B594  D026               	goto	l14016
 13953  01B596                     l14004:
 13954                           
 13955                           ;eadog.c: 204:   row = 0x14;
 13956                           ;stkvar	_row @ sp[(-1)+0]
 13957  01B596  0EFF               	movlw	-1
 13958  01B598  6AE3               	clrf	plusw1,c
 13959  01B59A  84E3               	bsf	plusw1,2,c
 13960  01B59C  88E3               	bsf	plusw1,4,c	;indir
 13961                           
 13962                           ;eadog.c: 205:   break;
 13963  01B59E  D021               	goto	l14016
 13964  01B5A0                     l14006:
 13965                           
 13966                           ;eadog.c: 207:   row = 0x54;
 13967  01B5A0  0E54               	movlw	84
 13968  01B5A2  6E0C               	movwf	(btemp+11)^0,c
 13969                           
 13970                           ;stkvar	_row @ sp[(-1)+0]
 13971  01B5A4  0EFF               	movlw	-1
 13972  01B5A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 13973                           
 13974                           ;eadog.c: 208:   break;
 13975  01B5AC  D01A               	goto	l14016
 13976  01B5AE                     l14008:
 13977                           
 13978                           ;eadog.c: 210:   row = 0x1;
 13979                           ;stkvar	_row @ sp[(-1)+0]
 13980  01B5AE  0EFF               	movlw	-1
 13981  01B5B0  6AE3               	clrf	plusw1,c
 13982  01B5B2  2AE3               	incf	plusw1,f,c
 13983                           
 13984                           ;eadog.c: 211:   break;
 13985  01B5B4  D016               	goto	l14016
 13986  01B5B6                     l14014:
 13987                           
 13988                           ;stkvar	_r @ sp[(-1)+-1]
 13989  01B5B6  0EFE               	movlw	-2
 13990  01B5B8  50E3               	movf	plusw1,w,c
 13991  01B5BA  6E0B               	movwf	(btemp+10)^0,c
 13992  01B5BC  6A0C               	clrf	(btemp+11)^0,c
 13993                           
 13994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13995                           ; Switch size 1, requested type "simple"
 13996                           ; Number of cases is 1, Range of values is 0 to 0
 13997                           ; switch strategies available:
 13998                           ; Name         Instructions Cycles
 13999                           ; simple_byte            4     3 (average)
 14000                           ;	Chosen strategy is simple_byte
 14001  01B5BE  500C               	movf	(btemp+11)^0,w,c
 14002  01B5C0  0A00               	xorlw	0	; case 0
 14003  01B5C2  A4D8               	btfss	status,2,c
 14004  01B5C4  D7E4               	goto	l14002
 14005                           
 14006                           ; Switch size 1, requested type "simple"
 14007                           ; Number of cases is 4, Range of values is 0 to 3
 14008                           ; switch strategies available:
 14009                           ; Name         Instructions Cycles
 14010                           ; simple_byte           13     7 (average)
 14011                           ;	Chosen strategy is simple_byte
 14012  01B5C6  500B               	movf	(btemp+10)^0,w,c
 14013  01B5C8  0A00               	xorlw	0	; case 0
 14014  01B5CA  B4D8               	btfsc	status,2,c
 14015  01B5CC  D7E0               	goto	l14002
 14016  01B5CE  0A01               	xorlw	1	; case 1
 14017  01B5D0  B4D8               	btfsc	status,2,c
 14018  01B5D2  D7E1               	goto	l14004
 14019  01B5D4  0A03               	xorlw	3	; case 2
 14020  01B5D6  B4D8               	btfsc	status,2,c
 14021  01B5D8  D7E3               	goto	l14006
 14022  01B5DA  0A01               	xorlw	1	; case 3
 14023  01B5DC  B4D8               	btfsc	status,2,c
 14024  01B5DE  D7E7               	goto	l14008
 14025  01B5E0  D7D6               	goto	l14002
 14026  01B5E2                     l14016:
 14027                           
 14028                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 14029  01B5E2  0E45               	movlw	69
 14030  01B5E4  6EE6               	movwf	postinc1,c
 14031  01B5E6  EC88  F0E8         	call	_send_lcd_cmd_dma	;wreg free
 14032                           
 14033                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 14034                           ;stkvar	_c @ sp[(-1)+-2]
 14035  01B5EA  0EFD               	movlw	-3
 14036  01B5EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 14037                           
 14038                           ;stkvar	_row @ sp[(-1)+0]
 14039  01B5F2  0EFF               	movlw	-1
 14040  01B5F4  50E3               	movf	plusw1,w,c
 14041  01B5F6  240C               	addwf	(btemp+11)^0,w,c
 14042  01B5F8  6EE6               	movwf	postinc1,c
 14043  01B5FA  EC96  F0E2         	call	_send_lcd_data_dma	;wreg free
 14044                           
 14045                           ; BSR set to: 59
 14046                           ;eadog.c: 218:  wait_lcd_done();
 14047  01B5FE  EC26  F0E8         	call	_wait_lcd_done	;wreg free
 14048                           
 14049                           ; BSR set to: 0
 14050                           ;eadog.c: 219:  wdtdelay(8);
 14051  01B602  0E08               	movlw	8
 14052  01B604  6EE6               	movwf	postinc1,c
 14053  01B606  0E00               	movlw	0
 14054  01B608  6EE6               	movwf	postinc1,c
 14055  01B60A  0E00               	movlw	0
 14056  01B60C  6EE6               	movwf	postinc1,c
 14057  01B60E  0E00               	movlw	0
 14058  01B610  6EE6               	movwf	postinc1,c
 14059  01B612  EC71  F0E1         	call	_wdtdelay	;wreg free
 14060                           
 14061                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 14062                           ;stkvar	_strPtr @ sp[(-1)+-4]
 14063  01B616  0EFB               	movlw	-5
 14064  01B618  006F FF8F FFE6     	movff	plusw1,postinc1
 14065  01B61E  006F FF8F FFE6     	movff	plusw1,postinc1
 14066  01B624  EC6D  F0DB         	call	_eaDogM_WriteString	;wreg free
 14067                           
 14068                           ; BSR set to: 59
 14069                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 14070  01B628  0EFB               	movlw	251
 14071  01B62A  26E1               	addwf	fsr1l,f,c
 14072  01B62C  0EFF               	movlw	255
 14073  01B62E  22E2               	addwfc	fsr1h,f,c
 14074  01B630  0012               	return		;funcret
 14075  01B632                     __end_of_eaDogM_WriteStringAtPos:
 14076                           	opt callstack 0
 14077                           
 14078 ;; *************** function _send_lcd_cmd_dma *****************
 14079 ;; Defined at:
 14080 ;;		line 171 in file "eadog.c"
 14081 ;; Parameters:    Size  Location     Type
 14082 ;;  strPtr          1  [STACK] const unsigned char 
 14083 ;; Auto vars:     Size  Location     Type
 14084 ;;		None
 14085 ;; Return value:  Size  Location     Type
 14086 ;;                  1  [STACK] void 
 14087 ;; Registers used:
 14088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14089 ;; Tracked objects:
 14090 ;;		On entry : 0/3D
 14091 ;;		On exit  : 3F/0
 14092 ;;		Unchanged: 0/0
 14093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14098 ;;Total ram usage:        0 bytes
 14099 ;; Hardware stack levels used:    1
 14100 ;; Hardware stack levels required when called:   25
 14101 ;; This function calls:
 14102 ;;		_send_lcd_data_dma
 14103 ;;		_wait_lcd_done
 14104 ;; This function is called by:
 14105 ;;		_eaDogM_WriteStringAtPos
 14106 ;;		_eaDogM_WriteCommand
 14107 ;; This function uses a reentrant model
 14108 ;;
 14109                           
 14110                           	psect	text55
 14111  01D110                     __ptext55:
 14112                           	opt callstack 0
 14113  01D110                     _send_lcd_cmd_dma:
 14114                           	opt callstack 3
 14115                           
 14116                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 14117                           
 14118                           ; BSR set to: 59
 14119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14120                           ;incstack = 0
 14121  01D110  0EFE               	movlw	254
 14122  01D112  6EE6               	movwf	postinc1,c
 14123  01D114  EC96  F0E2         	call	_send_lcd_data_dma	;wreg free
 14124                           
 14125                           ; BSR set to: 59
 14126                           ;eadog.c: 174:  wait_lcd_done();
 14127  01D118  EC26  F0E8         	call	_wait_lcd_done	;wreg free
 14128                           
 14129                           ; BSR set to: 0
 14130                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 14131                           ;stkvar	_strPtr @ sp[(0)+-1]
 14132  01D11C  0EFF               	movlw	-1
 14133  01D11E  50E3               	movf	plusw1,w,c
 14134  01D120  6EE6               	movwf	postinc1,c
 14135  01D122  EC96  F0E2         	call	_send_lcd_data_dma	;wreg free
 14136                           
 14137                           ;eadog.c: 176:  wait_lcd_done();
 14138  01D126  EC26  F0E8         	call	_wait_lcd_done	;wreg free
 14139                           
 14140                           ; BSR set to: 0
 14141                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 14142  01D12A  52E5               	movf	postdec1,f,c
 14143  01D12C  0012               	return		;funcret
 14144  01D12E                     __end_of_send_lcd_cmd_dma:
 14145                           	opt callstack 0
 14146                           
 14147 ;; *************** function _wait_lcd_done *****************
 14148 ;; Defined at:
 14149 ;;		line 444 in file "eadog.c"
 14150 ;; Parameters:    Size  Location     Type
 14151 ;;		None
 14152 ;; Auto vars:     Size  Location     Type
 14153 ;;		None
 14154 ;; Return value:  Size  Location     Type
 14155 ;;                  1  [STACK] void 
 14156 ;; Registers used:
 14157 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 14158 ;; Tracked objects:
 14159 ;;		On entry : 0/1
 14160 ;;		On exit  : 3F/0
 14161 ;;		Unchanged: 0/0
 14162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14167 ;;Total ram usage:        0 bytes
 14168 ;; Hardware stack levels used:    1
 14169 ;; Hardware stack levels required when called:   16
 14170 ;; This function calls:
 14171 ;;		_wdtdelay
 14172 ;; This function is called by:
 14173 ;;		_main
 14174 ;;		_send_lcd_cmd_dma
 14175 ;;		_eaDogM_WriteStringAtPos
 14176 ;;		_update_lcd
 14177 ;;		_vterm_dump
 14178 ;; This function uses a reentrant model
 14179 ;;
 14180                           
 14181                           	psect	text56
 14182  01D04C                     __ptext56:
 14183                           	opt callstack 0
 14184  01D04C                     _wait_lcd_done:
 14185                           	opt callstack 14
 14186                           
 14187                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 14188                           
 14189                           ; BSR set to: 0
 14190                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14191                           ;incstack = 0
 14192  01D04C  0100               	movlb	0	; () banked
 14193  01D04E  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 14194  01D050  D7FD               	goto	_wait_lcd_done
 14195  01D052                     u9210:
 14196  01D052  013D               	movlb	61	; () banked
 14197  01D054  AB17               	btfss	23,5,b	;volatile
 14198  01D056  D7FD               	goto	u9210
 14199                           
 14200                           ; BSR set to: 61
 14201                           ;eadog.c: 448:  wdtdelay(50);
 14202  01D058  0E32               	movlw	50
 14203  01D05A  6EE6               	movwf	postinc1,c
 14204  01D05C  0E00               	movlw	0
 14205  01D05E  6EE6               	movwf	postinc1,c
 14206  01D060  0E00               	movlw	0
 14207  01D062  6EE6               	movwf	postinc1,c
 14208  01D064  0E00               	movlw	0
 14209  01D066  6EE6               	movwf	postinc1,c
 14210  01D068  EC71  F0E1         	call	_wdtdelay	;wreg free
 14211                           
 14212                           ; BSR set to: 0
 14213                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 14214  01D06C  0012               	return		;funcret
 14215  01D06E                     __end_of_wait_lcd_done:
 14216                           	opt callstack 0
 14217                           
 14218 ;; *************** function _wdtdelay *****************
 14219 ;; Defined at:
 14220 ;;		line 23 in file "eadog.c"
 14221 ;; Parameters:    Size  Location     Type
 14222 ;;  delay           4  [STACK] const unsigned long 
 14223 ;; Auto vars:     Size  Location     Type
 14224 ;;		None
 14225 ;; Return value:  Size  Location     Type
 14226 ;;                  1  [STACK] void 
 14227 ;; Registers used:
 14228 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 14229 ;; Tracked objects:
 14230 ;;		On entry : 2/3D
 14231 ;;		On exit  : 3F/0
 14232 ;;		Unchanged: 0/0
 14233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14238 ;;Total ram usage:        0 bytes
 14239 ;; Hardware stack levels used:    1
 14240 ;; Hardware stack levels required when called:   15
 14241 ;; This function calls:
 14242 ;;		Nothing
 14243 ;; This function is called by:
 14244 ;;		_init_display
 14245 ;;		_send_lcd_data
 14246 ;;		_send_lcd_cmd
 14247 ;;		_send_lcd_cmd_long
 14248 ;;		_eaDogM_WriteStringAtPos
 14249 ;;		_wait_lcd_done
 14250 ;; This function uses a reentrant model
 14251 ;;
 14252                           
 14253                           	psect	text57
 14254  01C2E2                     __ptext57:
 14255                           	opt callstack 0
 14256  01C2E2                     _wdtdelay:
 14257                           	opt callstack 14
 14258                           
 14259                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 14260                           
 14261                           ; BSR set to: 0
 14262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14263                           ;incstack = 0
 14264  01C2E2  0100               	movlb	0	; () banked
 14265  01C2E4  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 14266  01C2E6  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 14267  01C2E8  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 14268  01C2EA  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 14269  01C2EC                     l1587:
 14270                           
 14271                           ; BSR set to: 0
 14272                           ;eadog.c: 28:   __nop();
 14273  01C2EC  F000               	nop	
 14274  01C2EE  0004               	clrwdt		;# 
 14275                           
 14276                           ;eadog.c: 30:  };
 14277  01C2F0  0E01               	movlw	1
 14278  01C2F2  0100               	movlb	0	; () banked
 14279  01C2F4  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 14280  01C2F6  0E00               	movlw	0
 14281  01C2F8  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 14282  01C2FA  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 14283  01C2FC  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 14284                           
 14285                           ; BSR set to: 0
 14286                           ;stkvar	_delay @ sp[(0)+-4]
 14287  01C2FE  0EFC               	movlw	-4
 14288  01C300  006F FF8C  F001    	movff	plusw1,btemp
 14289  01C306  519A               	movf	wdtdelay@dcount& (0+255),w,b
 14290  01C308  5C01               	subwf	btemp^0,w,c
 14291  01C30A  0EFD               	movlw	-3
 14292  01C30C  006F FF8C  F001    	movff	plusw1,btemp
 14293  01C312  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 14294  01C314  5801               	subwfb	btemp^0,w,c
 14295  01C316  0EFE               	movlw	-2
 14296  01C318  006F FF8C  F001    	movff	plusw1,btemp
 14297  01C31E  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 14298  01C320  5801               	subwfb	btemp^0,w,c
 14299  01C322  0EFF               	movlw	-1
 14300  01C324  006F FF8C  F001    	movff	plusw1,btemp
 14301  01C32A  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 14302  01C32C  5801               	subwfb	btemp^0,w,c
 14303  01C32E  B0D8               	btfsc	status,0,c
 14304  01C330  D7DD               	goto	l1587
 14305                           
 14306                           ; BSR set to: 0
 14307                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 14308  01C332  52E5               	movf	postdec1,f,c
 14309  01C334  52E5               	movf	postdec1,f,c
 14310  01C336  52E5               	movf	postdec1,f,c
 14311  01C338  52E5               	movf	postdec1,f,c
 14312  01C33A  0012               	return		;funcret
 14313  01C33C                     __end_of_wdtdelay:
 14314                           	opt callstack 0
 14315                           
 14316 ;; *************** function _send_lcd_data_dma *****************
 14317 ;; Defined at:
 14318 ;;		line 182 in file "eadog.c"
 14319 ;; Parameters:    Size  Location     Type
 14320 ;;  strPtr          1  [STACK] const unsigned char 
 14321 ;; Auto vars:     Size  Location     Type
 14322 ;;		None
 14323 ;; Return value:  Size  Location     Type
 14324 ;;                  1  [STACK] void 
 14325 ;; Registers used:
 14326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14327 ;; Tracked objects:
 14328 ;;		On entry : 0/0
 14329 ;;		On exit  : 3F/3B
 14330 ;;		Unchanged: 0/0
 14331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14336 ;;Total ram usage:        0 bytes
 14337 ;; Hardware stack levels used:    1
 14338 ;; Hardware stack levels required when called:   24
 14339 ;; This function calls:
 14340 ;;		_printf
 14341 ;;		_ringBufS_flush
 14342 ;;		_start_lcd
 14343 ;;		_wait_lcd_set
 14344 ;; This function is called by:
 14345 ;;		_send_lcd_cmd_dma
 14346 ;;		_eaDogM_WriteStringAtPos
 14347 ;; This function uses a reentrant model
 14348 ;;
 14349                           
 14350                           	psect	text58
 14351  01C52C                     __ptext58:
 14352                           	opt callstack 0
 14353  01C52C                     _send_lcd_data_dma:
 14354                           	opt callstack 4
 14355                           
 14356                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 14357                           
 14358                           ; BSR set to: 0
 14359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14360                           ;incstack = 0
 14361  01C52C  ECBC  F0E9         	call	_wait_lcd_set	;wreg free
 14362                           
 14363                           ; BSR set to: 0
 14364                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 14365  01C530  0E00               	movlw	0
 14366  01C532  6EE6               	movwf	postinc1,c
 14367  01C534  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 14368  01C53A  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 14369  01C540  ECA6  F0DC         	call	_ringBufS_flush	;wreg free
 14370  01C544  94BC               	bcf	188,2,c	;volatile
 14371                           
 14372                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 14373  01C546  013B               	movlb	59	; () banked
 14374  01C548  9FFC               	bcf	252,7,b	;volatile
 14375                           
 14376                           ; BSR set to: 59
 14377                           ;eadog.c: 189:  DMA1SSZ = 1;
 14378  01C54A  0E00               	movlw	0
 14379  01C54C  6FF8               	movwf	248,b	;volatile
 14380  01C54E  0E01               	movlw	1
 14381  01C550  6FF7               	movwf	247,b	;volatile
 14382                           
 14383                           ; BSR set to: 59
 14384                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 14385  01C552  8FFC               	bsf	252,7,b	;volatile
 14386                           
 14387                           ; BSR set to: 59
 14388                           ;eadog.c: 191:  printf("%c", strPtr);
 14389                           ;stkvar	_strPtr @ sp[(0)+-1]
 14390  01C554  0EFF               	movlw	-1
 14391  01C556  50E3               	movf	plusw1,w,c
 14392  01C558  6EE6               	movwf	postinc1,c
 14393  01C55A  0E00               	movlw	0
 14394  01C55C  6EE6               	movwf	postinc1,c
 14395  01C55E  0EF9               	movlw	low STR_60
 14396  01C560  6EE6               	movwf	postinc1,c
 14397  01C562  0EFF               	movlw	high STR_60
 14398  01C564  6EE6               	movwf	postinc1,c
 14399  01C566  0E04               	movlw	4
 14400  01C568  6EE6               	movwf	postinc1,c
 14401  01C56A  ECB2  F0E0         	call	_printf	;wreg free
 14402                           
 14403                           ; BSR set to: 0
 14404                           ;eadog.c: 192:  start_lcd();
 14405  01C56E  ECBF  F0E9         	call	_start_lcd	;wreg free
 14406                           
 14407                           ; BSR set to: 59
 14408                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 14409  01C572  52E5               	movf	postdec1,f,c
 14410  01C574  0012               	return		;funcret
 14411  01C576                     __end_of_send_lcd_data_dma:
 14412                           	opt callstack 0
 14413                           
 14414 ;; *************** function _eaDogM_WriteString *****************
 14415 ;; Defined at:
 14416 ;;		line 151 in file "eadog.c"
 14417 ;; Parameters:    Size  Location     Type
 14418 ;;  strPtr          2  [STACK] PTR unsigned char 
 14419 ;;		 -> D.lcd(480), D(482), V(192), 
 14420 ;; Auto vars:     Size  Location     Type
 14421 ;;		None
 14422 ;; Return value:  Size  Location     Type
 14423 ;;                  1  [STACK] void 
 14424 ;; Registers used:
 14425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14426 ;; Tracked objects:
 14427 ;;		On entry : 3F/0
 14428 ;;		On exit  : 3F/3B
 14429 ;;		Unchanged: 0/0
 14430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14435 ;;Total ram usage:        0 bytes
 14436 ;; Hardware stack levels used:    1
 14437 ;; Hardware stack levels required when called:   24
 14438 ;; This function calls:
 14439 ;;		_printf
 14440 ;;		_ringBufS_flush
 14441 ;;		_start_lcd
 14442 ;;		_strlen
 14443 ;;		_wait_lcd_set
 14444 ;; This function is called by:
 14445 ;;		_eaDogM_WriteStringAtPos
 14446 ;; This function uses a reentrant model
 14447 ;;
 14448                           
 14449                           	psect	text59
 14450  01B6DA                     __ptext59:
 14451                           	opt callstack 0
 14452  01B6DA                     _eaDogM_WriteString:
 14453                           	opt callstack 4
 14454                           
 14455                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 14456                           
 14457                           ; BSR set to: 59
 14458                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14459                           ;incstack = 0
 14460  01B6DA  ECBC  F0E9         	call	_wait_lcd_set	;wreg free
 14461                           
 14462                           ; BSR set to: 0
 14463                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 14464  01B6DE  0E00               	movlw	0
 14465  01B6E0  6EE6               	movwf	postinc1,c
 14466  01B6E2  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 14467  01B6E8  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 14468  01B6EE  ECA6  F0DC         	call	_ringBufS_flush	;wreg free
 14469  01B6F2  94BC               	bcf	188,2,c	;volatile
 14470                           
 14471                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 14472                           ;stkvar	_strPtr @ sp[(0)+-2]
 14473  01B6F4  0EFE               	movlw	-2
 14474  01B6F6  006F FF8F FFE6     	movff	plusw1,postinc1
 14475  01B6FC  006F FF8F FFE6     	movff	plusw1,postinc1
 14476  01B702  ECC0  F0DB         	call	_strlen	;wreg free
 14477  01B706  5002               	movf	(btemp+1)^0,w,c
 14478  01B708  E104               	bnz	u13380
 14479  01B70A  0E41               	movlw	65
 14480  01B70C  5C01               	subwf	btemp^0,w,c
 14481  01B70E  A0D8               	btfss	status,0,c
 14482  01B710  D010               	goto	l13958
 14483  01B712                     u13380:
 14484                           
 14485                           ;stkvar	_strPtr @ sp[(0)+-2]
 14486  01B712  0EFE               	movlw	-2
 14487  01B714  006F FF8C  F00B    	movff	plusw1,btemp+10
 14488  01B71A  0EFF               	movlw	-1
 14489  01B71C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14490  01B722  0E40               	movlw	64
 14491  01B724  240B               	addwf	(btemp+10)^0,w,c
 14492  01B726  6ED9               	movwf	fsr2l,c
 14493  01B728  0E00               	movlw	0
 14494  01B72A  200C               	addwfc	(btemp+11)^0,w,c
 14495  01B72C  6EDA               	movwf	fsr2h,c
 14496  01B72E  0E00               	movlw	0
 14497  01B730  6EDF               	movwf	indf2,c
 14498  01B732                     l13958:
 14499                           
 14500                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 14501  01B732  013B               	movlb	59	; () banked
 14502  01B734  9FFC               	bcf	252,7,b	;volatile
 14503                           
 14504                           ; BSR set to: 59
 14505                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 14506                           ;stkvar	_strPtr @ sp[(0)+-2]
 14507  01B736  0EFE               	movlw	-2
 14508  01B738  006F FF8F FFE6     	movff	plusw1,postinc1
 14509  01B73E  006F FF8F FFE6     	movff	plusw1,postinc1
 14510  01B744  ECC0  F0DB         	call	_strlen	;wreg free
 14511  01B748  0060  F007  FBF7   	movff	btemp,15351	;volatile
 14512  01B74E  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 14513                           
 14514                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 14515  01B754  013B               	movlb	59	; () banked
 14516  01B756  8FFC               	bsf	252,7,b	;volatile
 14517                           
 14518                           ; BSR set to: 59
 14519                           ;eadog.c: 161:  printf("%s", strPtr);
 14520                           ;stkvar	_strPtr @ sp[(0)+-2]
 14521  01B758  0EFE               	movlw	-2
 14522  01B75A  006F FF8F FFE6     	movff	plusw1,postinc1
 14523  01B760  006F FF8F FFE6     	movff	plusw1,postinc1
 14524  01B766  0EFC               	movlw	low STR_59
 14525  01B768  6EE6               	movwf	postinc1,c
 14526  01B76A  0EFF               	movlw	high STR_59
 14527  01B76C  6EE6               	movwf	postinc1,c
 14528  01B76E  0E04               	movlw	4
 14529  01B770  6EE6               	movwf	postinc1,c
 14530  01B772  ECB2  F0E0         	call	_printf	;wreg free
 14531                           
 14532                           ; BSR set to: 0
 14533                           ;eadog.c: 162:  start_lcd();
 14534  01B776  ECBF  F0E9         	call	_start_lcd	;wreg free
 14535                           
 14536                           ; BSR set to: 59
 14537                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 14538  01B77A  52E5               	movf	postdec1,f,c
 14539  01B77C  52E5               	movf	postdec1,f,c
 14540  01B77E  0012               	return		;funcret
 14541  01B780                     __end_of_eaDogM_WriteString:
 14542                           	opt callstack 0
 14543                           
 14544 ;; *************** function _wait_lcd_set *****************
 14545 ;; Defined at:
 14546 ;;		line 434 in file "eadog.c"
 14547 ;; Parameters:    Size  Location     Type
 14548 ;;		None
 14549 ;; Auto vars:     Size  Location     Type
 14550 ;;		None
 14551 ;; Return value:  Size  Location     Type
 14552 ;;                  1  [STACK] void 
 14553 ;; Registers used:
 14554 ;;		None
 14555 ;; Tracked objects:
 14556 ;;		On entry : 0/0
 14557 ;;		On exit  : 3F/0
 14558 ;;		Unchanged: 0/0
 14559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14564 ;;Total ram usage:        0 bytes
 14565 ;; Hardware stack levels used:    1
 14566 ;; Hardware stack levels required when called:   15
 14567 ;; This function calls:
 14568 ;;		Nothing
 14569 ;; This function is called by:
 14570 ;;		_eaDogM_WriteString
 14571 ;;		_send_lcd_data_dma
 14572 ;; This function uses a reentrant model
 14573 ;;
 14574                           
 14575                           	psect	text60
 14576  01D378                     __ptext60:
 14577                           	opt callstack 0
 14578  01D378                     _wait_lcd_set:
 14579                           	opt callstack 12
 14580                           
 14581                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 14582                           
 14583                           ; BSR set to: 59
 14584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14585                           ;incstack = 0
 14586  01D378  0100               	movlb	0	; () banked
 14587  01D37A  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 14588                           
 14589                           ; BSR set to: 0
 14590                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 14591  01D37C  0012               	return		;funcret
 14592  01D37E                     __end_of_wait_lcd_set:
 14593                           	opt callstack 0
 14594                           
 14595 ;; *************** function _start_lcd *****************
 14596 ;; Defined at:
 14597 ;;		line 429 in file "eadog.c"
 14598 ;; Parameters:    Size  Location     Type
 14599 ;;		None
 14600 ;; Auto vars:     Size  Location     Type
 14601 ;;		None
 14602 ;; Return value:  Size  Location     Type
 14603 ;;                  1  [STACK] void 
 14604 ;; Registers used:
 14605 ;;		None
 14606 ;; Tracked objects:
 14607 ;;		On entry : 3F/0
 14608 ;;		On exit  : 3F/3B
 14609 ;;		Unchanged: 0/0
 14610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14615 ;;Total ram usage:        0 bytes
 14616 ;; Hardware stack levels used:    1
 14617 ;; Hardware stack levels required when called:   15
 14618 ;; This function calls:
 14619 ;;		Nothing
 14620 ;; This function is called by:
 14621 ;;		_eaDogM_WriteString
 14622 ;;		_send_lcd_data_dma
 14623 ;; This function uses a reentrant model
 14624 ;;
 14625                           
 14626                           	psect	text61
 14627  01D37E                     __ptext61:
 14628                           	opt callstack 0
 14629  01D37E                     _start_lcd:
 14630                           	opt callstack 12
 14631                           
 14632                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 14633                           
 14634                           ; BSR set to: 0
 14635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14636                           ;incstack = 0
 14637  01D37E  013B               	movlb	59	; () banked
 14638  01D380  8DFC               	bsf	252,6,b	;volatile
 14639                           
 14640                           ; BSR set to: 59
 14641                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 14642  01D382  0012               	return		;funcret
 14643  01D384                     __end_of_start_lcd:
 14644                           	opt callstack 0
 14645                           
 14646 ;; *************** function _ringBufS_flush *****************
 14647 ;; Defined at:
 14648 ;;		line 76 in file "ringbufs.c"
 14649 ;; Parameters:    Size  Location     Type
 14650 ;;  _this           2  [STACK] PTR struct ringBufS_t
 14651 ;;		 -> ring_buf1(67), 
 14652 ;;  clearBuffer     1  [STACK] const char 
 14653 ;; Auto vars:     Size  Location     Type
 14654 ;;		None
 14655 ;; Return value:  Size  Location     Type
 14656 ;;                  1  [STACK] void 
 14657 ;; Registers used:
 14658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 14659 ;; Tracked objects:
 14660 ;;		On entry : 3F/0
 14661 ;;		On exit  : 0/0
 14662 ;;		Unchanged: 0/0
 14663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14668 ;;Total ram usage:        0 bytes
 14669 ;; Hardware stack levels used:    1
 14670 ;; Hardware stack levels required when called:   16
 14671 ;; This function calls:
 14672 ;;		_memset
 14673 ;; This function is called by:
 14674 ;;		_eaDogM_WriteString
 14675 ;;		_send_lcd_data_dma
 14676 ;; This function uses a reentrant model
 14677 ;;
 14678                           
 14679                           	psect	text62
 14680  01B94C                     __ptext62:
 14681                           	opt callstack 0
 14682  01B94C                     _ringBufS_flush:
 14683                           	opt callstack 11
 14684                           
 14685                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 14686                           ;stkvar	__this @ sp[(0)+-2]
 14687                           
 14688                           ; BSR set to: 59
 14689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14690                           ;incstack = 0
 14691  01B94C  0EFE               	movlw	-2
 14692  01B94E  006F FF8C  F00B    	movff	plusw1,btemp+10
 14693  01B954  0EFF               	movlw	-1
 14694  01B956  006F FF8C  F00C    	movff	plusw1,btemp+11
 14695  01B95C  0E42               	movlw	66
 14696  01B95E  240B               	addwf	(btemp+10)^0,w,c
 14697  01B960  6ED9               	movwf	fsr2l,c
 14698  01B962  0E00               	movlw	0
 14699  01B964  200C               	addwfc	(btemp+11)^0,w,c
 14700  01B966  6EDA               	movwf	fsr2h,c
 14701  01B968  0E00               	movlw	0
 14702  01B96A  6EDF               	movwf	indf2,c
 14703                           
 14704                           ;ringbufs.c: 79:  _this->head = 0;
 14705                           ;stkvar	__this @ sp[(0)+-2]
 14706  01B96C  0EFE               	movlw	-2
 14707  01B96E  006F FF8C  F00B    	movff	plusw1,btemp+10
 14708  01B974  0EFF               	movlw	-1
 14709  01B976  006F FF8C  F00C    	movff	plusw1,btemp+11
 14710  01B97C  0E40               	movlw	64
 14711  01B97E  240B               	addwf	(btemp+10)^0,w,c
 14712  01B980  6ED9               	movwf	fsr2l,c
 14713  01B982  0E00               	movlw	0
 14714  01B984  200C               	addwfc	(btemp+11)^0,w,c
 14715  01B986  6EDA               	movwf	fsr2h,c
 14716  01B988  0E00               	movlw	0
 14717  01B98A  6EDF               	movwf	indf2,c
 14718                           
 14719                           ;ringbufs.c: 80:  _this->tail = 0;
 14720                           ;stkvar	__this @ sp[(0)+-2]
 14721  01B98C  0EFE               	movlw	-2
 14722  01B98E  006F FF8C  F00B    	movff	plusw1,btemp+10
 14723  01B994  0EFF               	movlw	-1
 14724  01B996  006F FF8C  F00C    	movff	plusw1,btemp+11
 14725  01B99C  0E41               	movlw	65
 14726  01B99E  240B               	addwf	(btemp+10)^0,w,c
 14727  01B9A0  6ED9               	movwf	fsr2l,c
 14728  01B9A2  0E00               	movlw	0
 14729  01B9A4  200C               	addwfc	(btemp+11)^0,w,c
 14730  01B9A6  6EDA               	movwf	fsr2h,c
 14731  01B9A8  0E00               	movlw	0
 14732  01B9AA  6EDF               	movwf	indf2,c
 14733                           
 14734                           ;ringbufs.c: 81:  if (clearBuffer) {
 14735                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 14736  01B9AC  0EFD               	movlw	-3
 14737  01B9AE  50E3               	movf	plusw1,w,c
 14738  01B9B0  B4D8               	btfsc	status,2,c
 14739  01B9B2  D011               	goto	l1719
 14740                           
 14741                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 14742  01B9B4  0E40               	movlw	64
 14743  01B9B6  6EE6               	movwf	postinc1,c
 14744  01B9B8  0E00               	movlw	0
 14745  01B9BA  6EE6               	movwf	postinc1,c
 14746  01B9BC  0E00               	movlw	0
 14747  01B9BE  6EE6               	movwf	postinc1,c
 14748  01B9C0  0E00               	movlw	0
 14749  01B9C2  6EE6               	movwf	postinc1,c
 14750                           
 14751                           ;stkvar	__this @ sp[(-4)+-2]
 14752  01B9C4  0EFA               	movlw	-6
 14753  01B9C6  006F FF8F FFE6     	movff	plusw1,postinc1
 14754  01B9CC  006F FF8F FFE6     	movff	plusw1,postinc1
 14755  01B9D2  ECFB  F0B9         	call	_memset	;wreg free
 14756  01B9D6                     l1719:
 14757                           
 14758                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 14759  01B9D6  52E5               	movf	postdec1,f,c
 14760  01B9D8  52E5               	movf	postdec1,f,c
 14761  01B9DA  52E5               	movf	postdec1,f,c
 14762  01B9DC  0012               	return		;funcret
 14763  01B9DE                     __end_of_ringBufS_flush:
 14764                           	opt callstack 0
 14765                           
 14766 ;; *************** function _memset *****************
 14767 ;; Defined at:
 14768 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 14769 ;; Parameters:    Size  Location     Type
 14770 ;;  dest            2  [STACK] PTR void 
 14771 ;;		 -> ring_buf2(67), ring_buf1(67), 
 14772 ;;  c               2  [STACK] int 
 14773 ;;  n               2  [STACK] unsigned int 
 14774 ;; Auto vars:     Size  Location     Type
 14775 ;;  s               2  [STACK] PTR unsigned char 
 14776 ;;		 -> ring_buf2(67), ring_buf1(67), 
 14777 ;;  k               2  [STACK] unsigned int 
 14778 ;; Return value:  Size  Location     Type
 14779 ;;                  2  [STACK] PTR void 
 14780 ;; Registers used:
 14781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 14782 ;; Tracked objects:
 14783 ;;		On entry : 0/0
 14784 ;;		On exit  : 0/0
 14785 ;;		Unchanged: 0/0
 14786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14791 ;;Total ram usage:        0 bytes
 14792 ;; Hardware stack levels used:    1
 14793 ;; Hardware stack levels required when called:   15
 14794 ;; This function calls:
 14795 ;;		Nothing
 14796 ;; This function is called by:
 14797 ;;		_ringBufS_init
 14798 ;;		_ringBufS_flush
 14799 ;; This function uses a reentrant model
 14800 ;;
 14801                           
 14802                           	psect	text63
 14803  0173F6                     __ptext63:
 14804                           	opt callstack 0
 14805  0173F6                     _memset:
 14806                           	opt callstack 0
 14807                           
 14808                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14809  0173F6  52E6               	movf	postinc1,f,c
 14810  0173F8  52E6               	movf	postinc1,f,c
 14811  0173FA  52E6               	movf	postinc1,f,c
 14812  0173FC  52E6               	movf	postinc1,f,c
 14813                           
 14814                           ;stkvar	_dest @ sp[(-4)+-2]
 14815                           
 14816                           ;incstack = 0
 14817  0173FE  0EFA               	movlw	-6
 14818  017400  006F FF8C  F00B    	movff	plusw1,btemp+10
 14819  017406  0EFB               	movlw	-5
 14820  017408  006F FF8C  F00C    	movff	plusw1,btemp+11
 14821                           
 14822                           ;stkvar	_s @ sp[(-4)+0]
 14823  01740E  0EFD               	movlw	-3
 14824  017410  0060  F033  FFE3   	movff	btemp+11,plusw1
 14825  017416  0EFC               	movlw	-4
 14826  017418  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14827                           
 14828                           ;stkvar	_n @ sp[(-4)+-6]
 14829  01741E  0EF6               	movlw	-10
 14830  017420  006F FF8C  F001    	movff	plusw1,btemp
 14831  017426  0EF7               	movlw	-9
 14832  017428  50E3               	movf	plusw1,w,c
 14833  01742A  1001               	iorwf	btemp^0,w,c
 14834  01742C  B4D8               	btfsc	status,2,c
 14835  01742E  D154               	goto	u11930
 14836                           
 14837                           ;stkvar	_c @ sp[(-4)+-4]
 14838                           ;stkvar	_s @ sp[(-4)+0]
 14839  017430  0EFC               	movlw	-4
 14840  017432  006F FF8F FFD9     	movff	plusw1,fsr2l
 14841  017438  0EFD               	movlw	-3
 14842  01743A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14843  017440  0EF8               	movlw	-8
 14844  017442  006F FF8F FFDF     	movff	plusw1,indf2
 14845                           
 14846                           ;stkvar	_c @ sp[(-4)+-4]
 14847                           ;stkvar	_n @ sp[(-4)+-6]
 14848                           ;stkvar	_s @ sp[(-4)+0]
 14849  017448  0EFC               	movlw	-4
 14850  01744A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14851  017450  0EFD               	movlw	-3
 14852  017452  006F FF8C  F00C    	movff	plusw1,btemp+11
 14853  017458  0EF6               	movlw	-10
 14854  01745A  50E3               	movf	plusw1,w,c
 14855  01745C  260B               	addwf	(btemp+10)^0,f,c
 14856  01745E  0EF7               	movlw	-9
 14857  017460  50E3               	movf	plusw1,w,c
 14858  017462  220C               	addwfc	(btemp+11)^0,f,c
 14859  017464  0EFF               	movlw	255
 14860  017466  240B               	addwf	(btemp+10)^0,w,c
 14861  017468  6ED9               	movwf	fsr2l,c
 14862  01746A  0EFF               	movlw	255
 14863  01746C  200C               	addwfc	(btemp+11)^0,w,c
 14864  01746E  6EDA               	movwf	fsr2h,c
 14865  017470  0EF8               	movlw	-8
 14866  017472  006F FF8F FFDF     	movff	plusw1,indf2
 14867                           
 14868                           ;stkvar	_n @ sp[(-4)+-6]
 14869  017478  0EF7               	movlw	-9
 14870  01747A  50E3               	movf	plusw1,w,c
 14871  01747C  E108               	bnz	l13110
 14872  01747E  0EF6               	movlw	-10
 14873  017480  006F FF8C  F001    	movff	plusw1,btemp
 14874  017486  0E03               	movlw	3
 14875  017488  5E01               	subwf	btemp^0,f,c
 14876  01748A  A0D8               	btfss	status,0,c
 14877  01748C  D125               	goto	u11930
 14878  01748E                     l13110:
 14879                           
 14880                           ;stkvar	_c @ sp[(-4)+-4]
 14881                           ;stkvar	_s @ sp[(-4)+0]
 14882  01748E  0EFC               	movlw	-4
 14883  017490  006F FF8C  F00B    	movff	plusw1,btemp+10
 14884  017496  0EFD               	movlw	-3
 14885  017498  006F FF8C  F00C    	movff	plusw1,btemp+11
 14886  01749E  0E01               	movlw	1
 14887  0174A0  240B               	addwf	(btemp+10)^0,w,c
 14888  0174A2  6ED9               	movwf	fsr2l,c
 14889  0174A4  0E00               	movlw	0
 14890  0174A6  200C               	addwfc	(btemp+11)^0,w,c
 14891  0174A8  6EDA               	movwf	fsr2h,c
 14892  0174AA  0EF8               	movlw	-8
 14893  0174AC  006F FF8F FFDF     	movff	plusw1,indf2
 14894                           
 14895                           ;stkvar	_c @ sp[(-4)+-4]
 14896                           ;stkvar	_s @ sp[(-4)+0]
 14897  0174B2  0EFC               	movlw	-4
 14898  0174B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 14899  0174BA  0EFD               	movlw	-3
 14900  0174BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 14901  0174C2  0E02               	movlw	2
 14902  0174C4  240B               	addwf	(btemp+10)^0,w,c
 14903  0174C6  6ED9               	movwf	fsr2l,c
 14904  0174C8  0E00               	movlw	0
 14905  0174CA  200C               	addwfc	(btemp+11)^0,w,c
 14906  0174CC  6EDA               	movwf	fsr2h,c
 14907  0174CE  0EF8               	movlw	-8
 14908  0174D0  006F FF8F FFDF     	movff	plusw1,indf2
 14909                           
 14910                           ;stkvar	_c @ sp[(-4)+-4]
 14911                           ;stkvar	_n @ sp[(-4)+-6]
 14912                           ;stkvar	_s @ sp[(-4)+0]
 14913  0174D6  0EFC               	movlw	-4
 14914  0174D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 14915  0174DE  0EFD               	movlw	-3
 14916  0174E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14917  0174E6  0EF6               	movlw	-10
 14918  0174E8  50E3               	movf	plusw1,w,c
 14919  0174EA  260B               	addwf	(btemp+10)^0,f,c
 14920  0174EC  0EF7               	movlw	-9
 14921  0174EE  50E3               	movf	plusw1,w,c
 14922  0174F0  220C               	addwfc	(btemp+11)^0,f,c
 14923  0174F2  0EFE               	movlw	254
 14924  0174F4  240B               	addwf	(btemp+10)^0,w,c
 14925  0174F6  6ED9               	movwf	fsr2l,c
 14926  0174F8  0EFF               	movlw	255
 14927  0174FA  200C               	addwfc	(btemp+11)^0,w,c
 14928  0174FC  6EDA               	movwf	fsr2h,c
 14929  0174FE  0EF8               	movlw	-8
 14930  017500  006F FF8F FFDF     	movff	plusw1,indf2
 14931                           
 14932                           ;stkvar	_c @ sp[(-4)+-4]
 14933                           ;stkvar	_n @ sp[(-4)+-6]
 14934                           ;stkvar	_s @ sp[(-4)+0]
 14935  017506  0EFC               	movlw	-4
 14936  017508  006F FF8C  F00B    	movff	plusw1,btemp+10
 14937  01750E  0EFD               	movlw	-3
 14938  017510  006F FF8C  F00C    	movff	plusw1,btemp+11
 14939  017516  0EF6               	movlw	-10
 14940  017518  50E3               	movf	plusw1,w,c
 14941  01751A  260B               	addwf	(btemp+10)^0,f,c
 14942  01751C  0EF7               	movlw	-9
 14943  01751E  50E3               	movf	plusw1,w,c
 14944  017520  220C               	addwfc	(btemp+11)^0,f,c
 14945  017522  0EFD               	movlw	253
 14946  017524  240B               	addwf	(btemp+10)^0,w,c
 14947  017526  6ED9               	movwf	fsr2l,c
 14948  017528  0EFF               	movlw	255
 14949  01752A  200C               	addwfc	(btemp+11)^0,w,c
 14950  01752C  6EDA               	movwf	fsr2h,c
 14951  01752E  0EF8               	movlw	-8
 14952  017530  006F FF8F FFDF     	movff	plusw1,indf2
 14953                           
 14954                           ;stkvar	_n @ sp[(-4)+-6]
 14955  017536  0EF7               	movlw	-9
 14956  017538  50E3               	movf	plusw1,w,c
 14957  01753A  E108               	bnz	l13116
 14958  01753C  0EF6               	movlw	-10
 14959  01753E  006F FF8C  F001    	movff	plusw1,btemp
 14960  017544  0E07               	movlw	7
 14961  017546  5E01               	subwf	btemp^0,f,c
 14962  017548  A0D8               	btfss	status,0,c
 14963  01754A  D0C6               	goto	u11930
 14964  01754C                     l13116:
 14965                           
 14966                           ;stkvar	_c @ sp[(-4)+-4]
 14967                           ;stkvar	_s @ sp[(-4)+0]
 14968  01754C  0EFC               	movlw	-4
 14969  01754E  006F FF8C  F00B    	movff	plusw1,btemp+10
 14970  017554  0EFD               	movlw	-3
 14971  017556  006F FF8C  F00C    	movff	plusw1,btemp+11
 14972  01755C  0E03               	movlw	3
 14973  01755E  240B               	addwf	(btemp+10)^0,w,c
 14974  017560  6ED9               	movwf	fsr2l,c
 14975  017562  0E00               	movlw	0
 14976  017564  200C               	addwfc	(btemp+11)^0,w,c
 14977  017566  6EDA               	movwf	fsr2h,c
 14978  017568  0EF8               	movlw	-8
 14979  01756A  006F FF8F FFDF     	movff	plusw1,indf2
 14980                           
 14981                           ;stkvar	_c @ sp[(-4)+-4]
 14982                           ;stkvar	_n @ sp[(-4)+-6]
 14983                           ;stkvar	_s @ sp[(-4)+0]
 14984  017570  0EFC               	movlw	-4
 14985  017572  006F FF8C  F00B    	movff	plusw1,btemp+10
 14986  017578  0EFD               	movlw	-3
 14987  01757A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14988  017580  0EF6               	movlw	-10
 14989  017582  50E3               	movf	plusw1,w,c
 14990  017584  260B               	addwf	(btemp+10)^0,f,c
 14991  017586  0EF7               	movlw	-9
 14992  017588  50E3               	movf	plusw1,w,c
 14993  01758A  220C               	addwfc	(btemp+11)^0,f,c
 14994  01758C  0EFC               	movlw	252
 14995  01758E  240B               	addwf	(btemp+10)^0,w,c
 14996  017590  6ED9               	movwf	fsr2l,c
 14997  017592  0EFF               	movlw	255
 14998  017594  200C               	addwfc	(btemp+11)^0,w,c
 14999  017596  6EDA               	movwf	fsr2h,c
 15000  017598  0EF8               	movlw	-8
 15001  01759A  006F FF8F FFDF     	movff	plusw1,indf2
 15002                           
 15003                           ;stkvar	_n @ sp[(-4)+-6]
 15004  0175A0  0EF7               	movlw	-9
 15005  0175A2  50E3               	movf	plusw1,w,c
 15006  0175A4  E108               	bnz	l13122
 15007  0175A6  0EF6               	movlw	-10
 15008  0175A8  006F FF8C  F001    	movff	plusw1,btemp
 15009  0175AE  0E09               	movlw	9
 15010  0175B0  5E01               	subwf	btemp^0,f,c
 15011  0175B2  A0D8               	btfss	status,0,c
 15012  0175B4  D091               	goto	u11930
 15013  0175B6                     l13122:
 15014                           
 15015                           ;stkvar	_s @ sp[(-4)+0]
 15016  0175B6  0EFC               	movlw	-4
 15017  0175B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 15018  0175BE  1E0B               	comf	(btemp+10)^0,f,c
 15019  0175C0  0EFD               	movlw	-3
 15020  0175C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 15021  0175C8  1E0C               	comf	(btemp+11)^0,f,c
 15022  0175CA  2A0B               	incf	(btemp+10)^0,f,c
 15023  0175CC  B4D8               	btfsc	status,2,c
 15024  0175CE  2A0C               	incf	(btemp+11)^0,f,c
 15025  0175D0  0E03               	movlw	3
 15026  0175D2  160B               	andwf	(btemp+10)^0,f,c
 15027  0175D4  0E00               	movlw	0
 15028  0175D6  160C               	andwf	(btemp+11)^0,f,c
 15029                           
 15030                           ;stkvar	_k @ sp[(-4)+2]
 15031  0175D8  0EFE               	movlw	-2
 15032  0175DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15033  0175E0  0EFF               	movlw	-1
 15034  0175E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15035                           
 15036                           ;stkvar	_k @ sp[(-4)+2]
 15037                           ;stkvar	_s @ sp[(-4)+0]
 15038  0175E8  0EFC               	movlw	-4
 15039  0175EA  50E3               	movf	plusw1,w,c
 15040  0175EC  6E01               	movwf	btemp^0,c
 15041  0175EE  0EFE               	movlw	-2
 15042  0175F0  50E3               	movf	plusw1,w,c
 15043  0175F2  2601               	addwf	btemp^0,f,c
 15044  0175F4  0EFC               	movlw	-4
 15045  0175F6  0060  F007  FFE3   	movff	btemp,plusw1
 15046  0175FC  0EFD               	movlw	-3
 15047  0175FE  50E3               	movf	plusw1,w,c
 15048  017600  6E01               	movwf	btemp^0,c
 15049  017602  0EFF               	movlw	-1
 15050  017604  50E3               	movf	plusw1,w,c
 15051  017606  2201               	addwfc	btemp^0,f,c
 15052  017608  0EFD               	movlw	-3
 15053  01760A  0060  F007  FFE3   	movff	btemp,plusw1
 15054                           
 15055                           ;stkvar	_k @ sp[(-4)+2]
 15056                           ;stkvar	_n @ sp[(-4)+-6]
 15057  017610  0EF6               	movlw	-10
 15058  017612  50E3               	movf	plusw1,w,c
 15059  017614  6E01               	movwf	btemp^0,c
 15060  017616  0EFE               	movlw	-2
 15061  017618  50E3               	movf	plusw1,w,c
 15062  01761A  5E01               	subwf	btemp^0,f,c
 15063  01761C  0EF6               	movlw	-10
 15064  01761E  0060  F007  FFE3   	movff	btemp,plusw1
 15065  017624  0EF7               	movlw	-9
 15066  017626  50E3               	movf	plusw1,w,c
 15067  017628  6E01               	movwf	btemp^0,c
 15068  01762A  0EFF               	movlw	-1
 15069  01762C  50E3               	movf	plusw1,w,c
 15070  01762E  5A01               	subwfb	btemp^0,f,c
 15071  017630  0EF7               	movlw	-9
 15072  017632  0060  F007  FFE3   	movff	btemp,plusw1
 15073  017638  0EFC               	movlw	252
 15074  01763A  6E0B               	movwf	(btemp+10)^0,c
 15075  01763C  0EFF               	movlw	255
 15076  01763E  6E0C               	movwf	(btemp+11)^0,c
 15077                           
 15078                           ;stkvar	_n @ sp[(-4)+-6]
 15079  017640  0EF6               	movlw	-10
 15080  017642  006F FF8C  F001    	movff	plusw1,btemp
 15081  017648  500B               	movf	(btemp+10)^0,w,c
 15082  01764A  1601               	andwf	btemp^0,f,c
 15083  01764C  0EF6               	movlw	-10
 15084  01764E  0060  F007  FFE3   	movff	btemp,plusw1
 15085  017654  0EF7               	movlw	-9
 15086  017656  006F FF8C  F001    	movff	plusw1,btemp
 15087  01765C  500C               	movf	(btemp+11)^0,w,c
 15088  01765E  1601               	andwf	btemp^0,f,c
 15089  017660  0EF7               	movlw	-9
 15090  017662  D02E               	goto	L14
 15091  017664                     l13130:
 15092                           
 15093                           ;stkvar	_c @ sp[(-4)+-4]
 15094                           ;stkvar	_s @ sp[(-4)+0]
 15095  017664  0EFC               	movlw	-4
 15096  017666  006F FF8F FFD9     	movff	plusw1,fsr2l
 15097  01766C  0EFD               	movlw	-3
 15098  01766E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15099  017674  0EF8               	movlw	-8
 15100  017676  006F FF8F FFDF     	movff	plusw1,indf2
 15101                           
 15102                           ;stkvar	_n @ sp[(-4)+-6]
 15103  01767C  0EF6               	movlw	-10
 15104  01767E  006F FF8C  F001    	movff	plusw1,btemp
 15105  017684  0E01               	movlw	1
 15106  017686  5E01               	subwf	btemp^0,f,c
 15107  017688  0EF6               	movlw	-10
 15108  01768A  0060  F007  FFE3   	movff	btemp,plusw1
 15109  017690  0EF7               	movlw	-9
 15110  017692  006F FF8C  F001    	movff	plusw1,btemp
 15111  017698  0E00               	movlw	0
 15112  01769A  5A01               	subwfb	btemp^0,f,c
 15113  01769C  0EF7               	movlw	-9
 15114  01769E  0060  F007  FFE3   	movff	btemp,plusw1
 15115                           
 15116                           ;stkvar	_s @ sp[(-4)+0]
 15117  0176A4  0EFC               	movlw	-4
 15118  0176A6  50E3               	movf	plusw1,w,c
 15119  0176A8  0F01               	addlw	1
 15120  0176AA  6E01               	movwf	btemp^0,c
 15121  0176AC  0EFC               	movlw	-4
 15122  0176AE  0060  F007  FFE3   	movff	btemp,plusw1
 15123  0176B4  6A01               	clrf	btemp^0,c
 15124  0176B6  0EFD               	movlw	-3
 15125  0176B8  50E3               	movf	plusw1,w,c
 15126  0176BA  2001               	addwfc	btemp^0,w,c
 15127  0176BC  6E01               	movwf	btemp^0,c
 15128  0176BE  0EFD               	movlw	-3
 15129  0176C0                     L14:
 15130  0176C0  0060  F007  FFE3   	movff	btemp,plusw1
 15131                           
 15132                           ;stkvar	_n @ sp[(-4)+-6]
 15133  0176C6  0EF6               	movlw	-10
 15134  0176C8  006F FF8C  F001    	movff	plusw1,btemp
 15135  0176CE  0EF7               	movlw	-9
 15136  0176D0  50E3               	movf	plusw1,w,c
 15137  0176D2  1001               	iorwf	btemp^0,w,c
 15138  0176D4  A4D8               	btfss	status,2,c
 15139  0176D6  D7C6               	goto	l13130
 15140  0176D8                     u11930:
 15141                           
 15142                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 15143  0176D8  0EF6               	movlw	246
 15144  0176DA  26E1               	addwf	fsr1l,f,c
 15145  0176DC  0EFF               	movlw	255
 15146  0176DE  22E2               	addwfc	fsr1h,f,c
 15147  0176E0  0012               	return		;funcret
 15148  0176E2                     __end_of_memset:
 15149                           	opt callstack 0
 15150                           
 15151 ;; *************** function _printf *****************
 15152 ;; Defined at:
 15153 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 15154 ;; Parameters:    Size  Location     Type
 15155 ;;  fmt             2  [STACK] PTR const unsigned char 
 15156 ;;		 -> STR_60(3), STR_59(3), 
 15157 ;; Auto vars:     Size  Location     Type
 15158 ;;  ap              2  [STACK] PTR void [1]
 15159 ;;		 -> ?_printf(2), ?_sprintf(2), 
 15160 ;;  ret             2    0        int 
 15161 ;; Return value:  Size  Location     Type
 15162 ;;                  2  [STACK] int 
 15163 ;; Registers used:
 15164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15165 ;; Tracked objects:
 15166 ;;		On entry : 3F/3B
 15167 ;;		On exit  : 3F/0
 15168 ;;		Unchanged: 0/0
 15169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15174 ;;Total ram usage:        0 bytes
 15175 ;; Hardware stack levels used:    1
 15176 ;; Hardware stack levels required when called:   23
 15177 ;; This function calls:
 15178 ;;		_vfprintf
 15179 ;; This function is called by:
 15180 ;;		_eaDogM_WriteString
 15181 ;;		_send_lcd_data_dma
 15182 ;; This function uses a reentrant model
 15183 ;;
 15184                           
 15185                           	psect	text64
 15186  01C164                     __ptext64:
 15187                           	opt callstack 0
 15188  01C164                     _printf:
 15189                           	opt callstack 0
 15190                           
 15191                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15192  01C164  52E6               	movf	postinc1,f,c
 15193  01C166  52E6               	movf	postinc1,f,c
 15194                           
 15195                           ;stkvar	?_printf @ sp[(-2)+-3]
 15196                           
 15197                           ;incstack = 0
 15198  01C168  0EFB               	movlw	251
 15199  01C16A  24E1               	addwf	fsr1l,w,c
 15200  01C16C  6E0B               	movwf	(btemp+10)^0,c
 15201  01C16E  0EFF               	movlw	255
 15202  01C170  20E2               	addwfc	fsr1h,w,c
 15203  01C172  6E0C               	movwf	(btemp+11)^0,c
 15204                           
 15205                           ;stkvar	_ap @ sp[(-2)+0]
 15206  01C174  0EFF               	movlw	-1
 15207  01C176  0060  F033  FFE3   	movff	btemp+11,plusw1
 15208  01C17C  0EFE               	movlw	-2
 15209  01C17E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15210                           
 15211                           ;stkvar	_ap @ sp[(-2)+0]
 15212  01C184  0EFE               	movlw	254
 15213  01C186  24E1               	addwf	fsr1l,w,c
 15214  01C188  6E01               	movwf	btemp^0,c
 15215  01C18A  0EFF               	movlw	255
 15216  01C18C  20E2               	addwfc	fsr1h,w,c
 15217  01C18E  6E02               	movwf	(btemp+1)^0,c
 15218  01C190  0060  F007  FFE6   	movff	btemp,postinc1
 15219  01C196  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15220                           
 15221                           ;stkvar	_fmt @ sp[(-4)+-3]
 15222  01C19C  0EF9               	movlw	-7
 15223  01C19E  006F FF8F FFE6     	movff	plusw1,postinc1
 15224  01C1A4  006F FF8F FFE6     	movff	plusw1,postinc1
 15225  01C1AA  0E00               	movlw	0
 15226  01C1AC  6EE6               	movwf	postinc1,c
 15227  01C1AE  0E00               	movlw	0
 15228  01C1B0  6EE6               	movwf	postinc1,c
 15229  01C1B2  EC1A  F0DA         	call	_vfprintf	;wreg free
 15230                           
 15231                           ; BSR set to: 0
 15232                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 15233  01C1B6  52E5               	movf	postdec1,f,c
 15234  01C1B8  52E5               	movf	postdec1,f,c
 15235  01C1BA  52E5               	movf	postdec1,f,c
 15236  01C1BC  50E7               	movf	indf1,w,c
 15237  01C1BE  5EE1               	subwf	fsr1l,f,c
 15238  01C1C0  0E00               	movlw	0
 15239  01C1C2  5AE2               	subwfb	fsr1h,f,c
 15240  01C1C4  0012               	return		;funcret
 15241  01C1C6                     __end_of_printf:
 15242                           	opt callstack 0
 15243                           
 15244 ;; *************** function _vfprintf *****************
 15245 ;; Defined at:
 15246 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15247 ;; Parameters:    Size  Location     Type
 15248 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15249 ;;		 -> f(6), NULL(0), 
 15250 ;;  fmt             2  [STACK] PTR const unsigned char 
 15251 ;;		 -> STR_80(127), STR_78(3), STR_77(3), STR_76(19), 
 15252 ;;		 -> STR_75(19), STR_74(19), STR_73(19), STR_72(19), 
 15253 ;;		 -> STR_71(19), STR_70(24), STR_69(15), STR_68(15), 
 15254 ;;		 -> STR_67(15), STR_66(10), STR_65(10), STR_64(19), 
 15255 ;;		 -> STR_63(19), STR_60(3), STR_59(3), STR_58(21), 
 15256 ;;		 -> STR_57(21), STR_56(21), STR_55(21), STR_54(21), 
 15257 ;;		 -> STR_53(21), STR_52(21), STR_51(21), STR_50(21), 
 15258 ;;		 -> STR_49(20), STR_48(21), STR_47(21), STR_46(21), 
 15259 ;;		 -> STR_45(22), STR_44(22), STR_43(22), STR_42(23), 
 15260 ;;		 -> STR_41(23), STR_40(23), STR_39(29), STR_38(23), 
 15261 ;;		 -> STR_37(23), STR_36(22), STR_35(22), STR_34(22), 
 15262 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 15263 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 15264 ;;		 -> STR_25(22), STR_24(17), STR_23(16), STR_22(16), 
 15265 ;;		 -> STR_21(26), STR_20(26), STR_19(22), STR_18(21), 
 15266 ;;		 -> STR_17(21), STR_16(21), STR_15(21), STR_14(22), 
 15267 ;;		 -> STR_13(22), STR_12(22), STR_11(26), STR_10(21), 
 15268 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 15269 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 15270 ;;  ap              2  [STACK] PTR PTR void 
 15271 ;;		 -> ap(2), ap(2), 
 15272 ;; Auto vars:     Size  Location     Type
 15273 ;;  cfmt            2  [STACK] PTR unsigned char 
 15274 ;;		 -> STR_80(127), STR_78(3), STR_77(3), STR_76(19), 
 15275 ;;		 -> STR_75(19), STR_74(19), STR_73(19), STR_72(19), 
 15276 ;;		 -> STR_71(19), STR_70(24), STR_69(15), STR_68(15), 
 15277 ;;		 -> STR_67(15), STR_66(10), STR_65(10), STR_64(19), 
 15278 ;;		 -> STR_63(19), STR_60(3), STR_59(3), STR_58(21), 
 15279 ;;		 -> STR_57(21), STR_56(21), STR_55(21), STR_54(21), 
 15280 ;;		 -> STR_53(21), STR_52(21), STR_51(21), STR_50(21), 
 15281 ;;		 -> STR_49(20), STR_48(21), STR_47(21), STR_46(21), 
 15282 ;;		 -> STR_45(22), STR_44(22), STR_43(22), STR_42(23), 
 15283 ;;		 -> STR_41(23), STR_40(23), STR_39(29), STR_38(23), 
 15284 ;;		 -> STR_37(23), STR_36(22), STR_35(22), STR_34(22), 
 15285 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 15286 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 15287 ;;		 -> STR_25(22), STR_24(17), STR_23(16), STR_22(16), 
 15288 ;;		 -> STR_21(26), STR_20(26), STR_19(22), STR_18(21), 
 15289 ;;		 -> STR_17(21), STR_16(21), STR_15(21), STR_14(22), 
 15290 ;;		 -> STR_13(22), STR_12(22), STR_11(26), STR_10(21), 
 15291 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 15292 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 15293 ;; Return value:  Size  Location     Type
 15294 ;;                  2  [STACK] int 
 15295 ;; Registers used:
 15296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15297 ;; Tracked objects:
 15298 ;;		On entry : 0/1
 15299 ;;		On exit  : 3F/0
 15300 ;;		Unchanged: 0/0
 15301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15306 ;;Total ram usage:        0 bytes
 15307 ;; Hardware stack levels used:    1
 15308 ;; Hardware stack levels required when called:   22
 15309 ;; This function calls:
 15310 ;;		_vfpfcnvrt
 15311 ;; This function is called by:
 15312 ;;		_sprintf
 15313 ;;		_printf
 15314 ;; This function uses a reentrant model
 15315 ;;
 15316                           
 15317                           	psect	text65
 15318  01B434                     __ptext65:
 15319                           	opt callstack 0
 15320  01B434                     _vfprintf:
 15321                           	opt callstack 0
 15322                           
 15323                           ; BSR set to: 0
 15324                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15325  01B434  52E6               	movf	postinc1,f,c
 15326  01B436  52E6               	movf	postinc1,f,c
 15327                           
 15328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 15329                           ;stkvar	_fmt @ sp[(-2)+-4]
 15330                           
 15331                           ;incstack = 0
 15332 ;; hardware stack exceeded
 15333  01B438  0EFA               	movlw	-6
 15334  01B43A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15335  01B440  0EFB               	movlw	-5
 15336  01B442  006F FF8C  F00C    	movff	plusw1,btemp+11
 15337                           
 15338                           ;stkvar	_cfmt @ sp[(-2)+0]
 15339  01B448  0EFF               	movlw	-1
 15340  01B44A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15341  01B450  0EFE               	movlw	-2
 15342  01B452  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15343                           
 15344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 15345  01B458  0100               	movlb	0	; () banked
 15346  01B45A  6BC0               	clrf	_nout& (0+255),b
 15347  01B45C  6BC1               	clrf	(_nout+1)& (0+255),b
 15348                           
 15349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 15350  01B45E  D021               	goto	l13980
 15351  01B460                     l13978:
 15352                           
 15353                           ; BSR set to: 0
 15354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 15355                           ;stkvar	_ap @ sp[(-2)+-6]
 15356  01B460  0EF8               	movlw	-8
 15357  01B462  006F FF8F FFE6     	movff	plusw1,postinc1
 15358  01B468  006F FF8F FFE6     	movff	plusw1,postinc1
 15359                           
 15360                           ;stkvar	_cfmt @ sp[(-4)+0]
 15361  01B46E  0EFC               	movlw	252
 15362  01B470  24E1               	addwf	fsr1l,w,c
 15363  01B472  6E01               	movwf	btemp^0,c
 15364  01B474  0EFF               	movlw	255
 15365  01B476  20E2               	addwfc	fsr1h,w,c
 15366  01B478  6E02               	movwf	(btemp+1)^0,c
 15367  01B47A  0060  F007  FFE6   	movff	btemp,postinc1
 15368  01B480  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15369                           
 15370                           ;stkvar	_fp @ sp[(-6)+-2]
 15371  01B486  0EF8               	movlw	-8
 15372  01B488  006F FF8F FFE6     	movff	plusw1,postinc1
 15373  01B48E  006F FF8F FFE6     	movff	plusw1,postinc1
 15374  01B494  EC6B  F092         	call	_vfpfcnvrt	;wreg free
 15375  01B498  5001               	movf	btemp^0,w,c
 15376  01B49A  0100               	movlb	0	; () banked
 15377  01B49C  27C0               	addwf	_nout& (0+255),f,b
 15378  01B49E  5002               	movf	(btemp+1)^0,w,c
 15379  01B4A0  23C1               	addwfc	(_nout+1)& (0+255),f,b
 15380  01B4A2                     l13980:
 15381                           
 15382                           ; BSR set to: 0
 15383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 15384                           ;stkvar	_cfmt @ sp[(-2)+0]
 15385  01B4A2  50E1               	movf	fsr1l,w,c
 15386  01B4A4  0FFE               	addlw	-2
 15387  01B4A6  6ED9               	movwf	fsr2l,c
 15388  01B4A8  50E2               	movf	fsr1h,w,c
 15389  01B4AA  6EDA               	movwf	fsr2h,c
 15390  01B4AC  0EFF               	movlw	255
 15391  01B4AE  22DA               	addwfc	fsr2h,f,c
 15392  01B4B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 15393  01B4B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 15394  01B4BC                     	if	0	;tblptru may be non-zero
 15395  01B4BC                     	endif
 15396  01B4BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15397  01B4BC  0E00               	movlw	low (__mediumconst shr (0+16))
 15398  01B4BE  6EF8               	movwf	tblptru,c
 15399  01B4C0                     	endif
 15400  01B4C0  0008               	tblrd		*
 15401  01B4C2  50F5               	movf	tablat,w,c
 15402  01B4C4  0900               	iorlw	0
 15403  01B4C6  A4D8               	btfss	status,2,c
 15404  01B4C8  D7CB               	goto	l13978
 15405                           
 15406                           ; BSR set to: 0
 15407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 15408  01B4CA  0060  F300  F001   	movff	_nout,btemp
 15409  01B4D0  0060  F304  F002   	movff	_nout+1,btemp+1
 15410                           
 15411                           ; BSR set to: 0
 15412                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 15413  01B4D6  0EF8               	movlw	248
 15414  01B4D8  26E1               	addwf	fsr1l,f,c
 15415  01B4DA  0EFF               	movlw	255
 15416  01B4DC  22E2               	addwfc	fsr1h,f,c
 15417  01B4DE  0012               	return		;funcret
 15418  01B4E0                     __end_of_vfprintf:
 15419                           	opt callstack 0
 15420                           
 15421 ;; *************** function _vfpfcnvrt *****************
 15422 ;; Defined at:
 15423 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15424 ;; Parameters:    Size  Location     Type
 15425 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15426 ;;		 -> f(6), NULL(0), 
 15427 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 15428 ;;		 -> cfmt(2), 
 15429 ;;  ap              2  [STACK] PTR PTR void 
 15430 ;;		 -> ap(2), ap(2), 
 15431 ;; Auto vars:     Size  Location     Type
 15432 ;;  llu             8  [STACK] unsigned long long 
 15433 ;;  ll              8  [STACK] long long 
 15434 ;;  f               4  [STACK] long long 
 15435 ;;  ct              3  [STACK] unsigned char [3]
 15436 ;;  vp              3    0        PTR void 
 15437 ;;  cp              2  [STACK] PTR unsigned char 
 15438 ;;		 -> ?_printf(2), ?_sprintf(2), STR_62(9), STR_61(12), 
 15439 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 15440 ;;		 -> V(192), 
 15441 ;;  i               2    0        int 
 15442 ;;  done            2    0        int 
 15443 ;;  c               1  [STACK] unsigned char 
 15444 ;; Return value:  Size  Location     Type
 15445 ;;                  2  [STACK] int 
 15446 ;; Registers used:
 15447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15448 ;; Tracked objects:
 15449 ;;		On entry : 0/0
 15450 ;;		On exit  : 0/0
 15451 ;;		Unchanged: 0/0
 15452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15457 ;;Total ram usage:        0 bytes
 15458 ;; Hardware stack levels used:    1
 15459 ;; Hardware stack levels required when called:   21
 15460 ;; This function calls:
 15461 ;;		_atoi
 15462 ;;		_ctoa
 15463 ;;		_dtoa
 15464 ;;		_efgtoa
 15465 ;;		_fputc
 15466 ;;		_isdigit
 15467 ;;		_isupper
 15468 ;;		_stoa
 15469 ;;		_strncmp
 15470 ;;		_tolower
 15471 ;;		_utoa
 15472 ;;		_xtoa
 15473 ;; This function is called by:
 15474 ;;		_vfprintf
 15475 ;; This function uses a reentrant model
 15476 ;;
 15477                           
 15478                           	psect	text66
 15479  0124D6                     __ptext66:
 15480                           	opt callstack 0
 15481  0124D6                     _vfpfcnvrt:
 15482                           	opt callstack 0
 15483                           
 15484                           ; BSR set to: 0
 15485                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15486  0124D6  0E20               	movlw	32
 15487  0124D8  26E1               	addwf	fsr1l,f,c
 15488  0124DA  0E00               	movlw	0
 15489  0124DC  22E2               	addwfc	fsr1h,f,c
 15490                           
 15491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 15492                           ;stkvar	_fmt @ sp[(-32)+-4]
 15493                           
 15494                           ;incstack = 0
 15495 ;; hardware stack exceeded
 15496  0124DE  0EDC               	movlw	-36
 15497  0124E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15498  0124E6  0EDD               	movlw	-35
 15499  0124E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15500  0124EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 15501  0124F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 15502  0124FA                     	if	0	;tblptru may be non-zero
 15503  0124FA                     	endif
 15504  0124FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15505  0124FA  0E00               	movlw	low (__mediumconst shr (0+16))
 15506  0124FC  6EF8               	movwf	tblptru,c
 15507  0124FE                     	endif
 15508  0124FE  0008               	tblrd		*
 15509  012500  50F5               	movf	tablat,w,c
 15510  012502  0A25               	xorlw	37
 15511  012504  A4D8               	btfss	status,2,c
 15512  012506  EF12  F09A         	goto	l13940
 15513                           
 15514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 15515                           ;stkvar	_fmt @ sp[(-32)+-4]
 15516  01250A  0EDC               	movlw	-36
 15517  01250C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15518  012512  0EDD               	movlw	-35
 15519  012514  006F FF8F FFDA     	movff	plusw1,fsr2h
 15520  01251A  2ADE               	incf	postinc2,f,c
 15521  01251C  0E00               	movlw	0
 15522  01251E  22DD               	addwfc	postdec2,f,c
 15523                           
 15524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 15525  012520  6A3A               	clrf	_width^0,c
 15526  012522  6A3B               	clrf	(_width+1)^0,c
 15527  012524  6A3E               	clrf	_flags^0,c
 15528  012526  6A3F               	clrf	(_flags+1)^0,c
 15529                           
 15530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 15531  012528  683C               	setf	_prec^0,c
 15532  01252A  683D               	setf	(_prec+1)^0,c
 15533                           
 15534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 15535                           ;stkvar	_fmt @ sp[(-32)+-4]
 15536  01252C  0EDC               	movlw	-36
 15537  01252E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15538  012534  0EDD               	movlw	-35
 15539  012536  006F FF8F FFDA     	movff	plusw1,fsr2h
 15540  01253C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15541  012542  006F FF77 FFF7     	movff	postdec2,tblptrh
 15542  012548                     	if	0	;tblptru may be non-zero
 15543  012548                     	endif
 15544  012548                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15545  012548  0E00               	movlw	low (__mediumconst shr (0+16))
 15546  01254A  6EF8               	movwf	tblptru,c
 15547  01254C                     	endif
 15548  01254C  0008               	tblrd		*
 15549  01254E  50F5               	movf	tablat,w,c
 15550  012550  0A2A               	xorlw	42
 15551  012552  A4D8               	btfss	status,2,c
 15552  012554  D031               	goto	l13758
 15553                           
 15554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 15555                           ;stkvar	_fmt @ sp[(-32)+-4]
 15556  012556  0EDC               	movlw	-36
 15557  012558  006F FF8F FFD9     	movff	plusw1,fsr2l
 15558  01255E  0EDD               	movlw	-35
 15559  012560  006F FF8F FFDA     	movff	plusw1,fsr2h
 15560  012566  2ADE               	incf	postinc2,f,c
 15561  012568  0E00               	movlw	0
 15562  01256A  22DD               	addwfc	postdec2,f,c
 15563                           
 15564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 15565                           ;stkvar	_ap @ sp[(-32)+-6]
 15566  01256C  0EDA               	movlw	-38
 15567  01256E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15568  012574  0EDB               	movlw	-37
 15569  012576  006F FF8F FFDA     	movff	plusw1,fsr2h
 15570  01257C  0E02               	movlw	2
 15571  01257E  5EDE               	subwf	postinc2,f,c
 15572  012580  0E00               	movlw	0
 15573  012582  5ADD               	subwfb	postdec2,f,c
 15574  012584  006F FF78  F00B    	movff	postinc2,btemp+10
 15575  01258A  006F FF74  F00C    	movff	postdec2,btemp+11
 15576  012590  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15577  012596  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15578  01259C  006F FF78  F03A    	movff	postinc2,_width
 15579  0125A2  006F FF74  F03B    	movff	postdec2,_width+1
 15580                           
 15581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 15582  0125A8  AE3B               	btfss	(_width+1)^0,7,c
 15583  0125AA  D066               	goto	u13120
 15584                           
 15585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 15586  0125AC  803E               	bsf	_flags^0,0,c
 15587                           
 15588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 15589  0125AE  6C3A               	negf	_width^0,c
 15590  0125B0  1E3B               	comf	(_width+1)^0,f,c
 15591  0125B2  B0D8               	btfsc	status,0,c
 15592  0125B4  2A3B               	incf	(_width+1)^0,f,c
 15593  0125B6  D060               	goto	u13120
 15594  0125B8                     l13758:
 15595                           
 15596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 15597                           ;stkvar	_fmt @ sp[(-32)+-4]
 15598  0125B8  0EDC               	movlw	-36
 15599  0125BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15600  0125C0  0EDD               	movlw	-35
 15601  0125C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15602  0125C8  006F FF78  F00B    	movff	postinc2,btemp+10
 15603  0125CE  006F FF74  F00C    	movff	postdec2,btemp+11
 15604  0125D4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15605  0125DA  0060  F033  FFE6   	movff	btemp+11,postinc1
 15606  0125E0  EC7C  F0BF         	call	_atoi	;wreg free
 15607  0125E4  0060  F004  F03A   	movff	btemp,_width
 15608  0125EA  0060  F008  F03B   	movff	btemp+1,_width+1
 15609                           
 15610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15611  0125F0  D00B               	goto	l13762
 15612  0125F2                     l13760:
 15613                           
 15614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 15615                           ;stkvar	_fmt @ sp[(-32)+-4]
 15616  0125F2  0EDC               	movlw	-36
 15617  0125F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 15618  0125FA  0EDD               	movlw	-35
 15619  0125FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 15620  012602  2ADE               	incf	postinc2,f,c
 15621  012604  0E00               	movlw	0
 15622  012606  22DD               	addwfc	postdec2,f,c
 15623  012608                     l13762:
 15624  012608  0ED0               	movlw	208
 15625  01260A  6E0B               	movwf	(btemp+10)^0,c
 15626  01260C  0EFF               	movlw	255
 15627  01260E  6E0C               	movwf	(btemp+11)^0,c
 15628                           
 15629                           ;stkvar	_fmt @ sp[(-32)+-4]
 15630  012610  0EDC               	movlw	-36
 15631  012612  006F FF8F FFD9     	movff	plusw1,fsr2l
 15632  012618  0EDD               	movlw	-35
 15633  01261A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15634  012620  006F FF7B FFF6     	movff	postinc2,tblptrl
 15635  012626  006F FF77 FFF7     	movff	postdec2,tblptrh
 15636  01262C                     	if	0	;tblptru may be non-zero
 15637  01262C                     	endif
 15638  01262C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15639  01262C  0E00               	movlw	low (__mediumconst shr (0+16))
 15640  01262E  6EF8               	movwf	tblptru,c
 15641  012630                     	endif
 15642  012630  0008               	tblrd		*
 15643  012632  50F5               	movf	tablat,w,c
 15644  012634  6E09               	movwf	(btemp+8)^0,c
 15645  012636  6A0A               	clrf	(btemp+9)^0,c
 15646  012638  500B               	movf	(btemp+10)^0,w,c
 15647  01263A  2609               	addwf	(btemp+8)^0,f,c
 15648  01263C  500C               	movf	(btemp+11)^0,w,c
 15649  01263E  220A               	addwfc	(btemp+9)^0,f,c
 15650  012640  500A               	movf	(btemp+9)^0,w,c
 15651  012642  E106               	bnz	u13100
 15652  012644  0E0A               	movlw	10
 15653  012646  5C09               	subwf	(btemp+8)^0,w,c
 15654  012648  B0D8               	btfsc	status,0,c
 15655  01264A  D002               	goto	u13100
 15656  01264C  0E01               	movlw	1
 15657  01264E  D001               	goto	u13110
 15658  012650                     u13100:
 15659  012650  0E00               	movlw	0
 15660  012652                     u13110:
 15661  012652  6E0B               	movwf	(btemp+10)^0,c
 15662  012654  6A0C               	clrf	(btemp+11)^0,c
 15663                           
 15664                           ;stkvar	_vfpfcnvrt$6809 @ sp[(-32)+4]
 15665  012656  0EE4               	movlw	-28
 15666  012658  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15667  01265E  0EE5               	movlw	-27
 15668  012660  0060  F033  FFE3   	movff	btemp+11,plusw1
 15669                           
 15670                           ;stkvar	_vfpfcnvrt$6809 @ sp[(-32)+4]
 15671  012666  0EE4               	movlw	-28
 15672  012668  006F FF8C  F001    	movff	plusw1,btemp
 15673  01266E  0EE5               	movlw	-27
 15674  012670  50E3               	movf	plusw1,w,c
 15675  012672  1001               	iorwf	btemp^0,w,c
 15676  012674  A4D8               	btfss	status,2,c
 15677  012676  D7BD               	goto	l13760
 15678  012678                     u13120:
 15679                           
 15680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 15681                           ;stkvar	_fmt @ sp[(-32)+-4]
 15682  012678  0EDC               	movlw	-36
 15683  01267A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15684  012680  0EDD               	movlw	-35
 15685  012682  006F FF8F FFDA     	movff	plusw1,fsr2h
 15686  012688  006F FF7B FFF6     	movff	postinc2,tblptrl
 15687  01268E  006F FF77 FFF7     	movff	postdec2,tblptrh
 15688  012694                     	if	0	;tblptru may be non-zero
 15689  012694                     	endif
 15690  012694                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15691  012694  0E00               	movlw	low (__mediumconst shr (0+16))
 15692  012696  6EF8               	movwf	tblptru,c
 15693  012698                     	endif
 15694  012698  0008               	tblrd		*
 15695  01269A  50F5               	movf	tablat,w,c
 15696  01269C  0A2E               	xorlw	46
 15697  01269E  A4D8               	btfss	status,2,c
 15698  0126A0  D0AC               	goto	u13170
 15699                           
 15700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 15701  0126A2  6A3C               	clrf	_prec^0,c
 15702  0126A4  6A3D               	clrf	(_prec+1)^0,c
 15703                           
 15704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 15705                           ;stkvar	_fmt @ sp[(-32)+-4]
 15706  0126A6  0EDC               	movlw	-36
 15707  0126A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15708  0126AE  0EDD               	movlw	-35
 15709  0126B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15710  0126B6  2ADE               	incf	postinc2,f,c
 15711  0126B8  0E00               	movlw	0
 15712  0126BA  22DD               	addwfc	postdec2,f,c
 15713                           
 15714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 15715                           ;stkvar	_fmt @ sp[(-32)+-4]
 15716  0126BC  0EDC               	movlw	-36
 15717  0126BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15718  0126C4  0EDD               	movlw	-35
 15719  0126C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15720  0126CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 15721  0126D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15722  0126D8                     	if	0	;tblptru may be non-zero
 15723  0126D8                     	endif
 15724  0126D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15725  0126D8  0E00               	movlw	low (__mediumconst shr (0+16))
 15726  0126DA  6EF8               	movwf	tblptru,c
 15727  0126DC                     	endif
 15728  0126DC  0008               	tblrd		*
 15729  0126DE  50F5               	movf	tablat,w,c
 15730  0126E0  0A2A               	xorlw	42
 15731  0126E2  A4D8               	btfss	status,2,c
 15732  0126E4  D02A               	goto	l13780
 15733                           
 15734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 15735                           ;stkvar	_fmt @ sp[(-32)+-4]
 15736  0126E6  0EDC               	movlw	-36
 15737  0126E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15738  0126EE  0EDD               	movlw	-35
 15739  0126F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15740  0126F6  2ADE               	incf	postinc2,f,c
 15741  0126F8  0E00               	movlw	0
 15742  0126FA  22DD               	addwfc	postdec2,f,c
 15743                           
 15744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 15745                           ;stkvar	_ap @ sp[(-32)+-6]
 15746  0126FC  0EDA               	movlw	-38
 15747  0126FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15748  012704  0EDB               	movlw	-37
 15749  012706  006F FF8F FFDA     	movff	plusw1,fsr2h
 15750  01270C  0E02               	movlw	2
 15751  01270E  5EDE               	subwf	postinc2,f,c
 15752  012710  0E00               	movlw	0
 15753  012712  5ADD               	subwfb	postdec2,f,c
 15754  012714  006F FF78  F00B    	movff	postinc2,btemp+10
 15755  01271A  006F FF74  F00C    	movff	postdec2,btemp+11
 15756  012720  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15757  012726  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15758  01272C  006F FF78  F03C    	movff	postinc2,_prec
 15759  012732  006F FF74  F03D    	movff	postdec2,_prec+1
 15760                           
 15761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 15762  012738  D060               	goto	u13170
 15763  01273A                     l13780:
 15764                           
 15765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 15766                           ;stkvar	_fmt @ sp[(-32)+-4]
 15767  01273A  0EDC               	movlw	-36
 15768  01273C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15769  012742  0EDD               	movlw	-35
 15770  012744  006F FF8F FFDA     	movff	plusw1,fsr2h
 15771  01274A  006F FF78  F00B    	movff	postinc2,btemp+10
 15772  012750  006F FF74  F00C    	movff	postdec2,btemp+11
 15773  012756  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15774  01275C  0060  F033  FFE6   	movff	btemp+11,postinc1
 15775  012762  EC7C  F0BF         	call	_atoi	;wreg free
 15776  012766  0060  F004  F03C   	movff	btemp,_prec
 15777  01276C  0060  F008  F03D   	movff	btemp+1,_prec+1
 15778                           
 15779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15780  012772  D00B               	goto	l13784
 15781  012774                     l13782:
 15782                           
 15783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 15784                           ;stkvar	_fmt @ sp[(-32)+-4]
 15785  012774  0EDC               	movlw	-36
 15786  012776  006F FF8F FFD9     	movff	plusw1,fsr2l
 15787  01277C  0EDD               	movlw	-35
 15788  01277E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15789  012784  2ADE               	incf	postinc2,f,c
 15790  012786  0E00               	movlw	0
 15791  012788  22DD               	addwfc	postdec2,f,c
 15792  01278A                     l13784:
 15793  01278A  0ED0               	movlw	208
 15794  01278C  6E0B               	movwf	(btemp+10)^0,c
 15795  01278E  0EFF               	movlw	255
 15796  012790  6E0C               	movwf	(btemp+11)^0,c
 15797                           
 15798                           ;stkvar	_fmt @ sp[(-32)+-4]
 15799  012792  0EDC               	movlw	-36
 15800  012794  006F FF8F FFD9     	movff	plusw1,fsr2l
 15801  01279A  0EDD               	movlw	-35
 15802  01279C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15803  0127A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 15804  0127A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 15805  0127AE                     	if	0	;tblptru may be non-zero
 15806  0127AE                     	endif
 15807  0127AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15808  0127AE  0E00               	movlw	low (__mediumconst shr (0+16))
 15809  0127B0  6EF8               	movwf	tblptru,c
 15810  0127B2                     	endif
 15811  0127B2  0008               	tblrd		*
 15812  0127B4  50F5               	movf	tablat,w,c
 15813  0127B6  6E09               	movwf	(btemp+8)^0,c
 15814  0127B8  6A0A               	clrf	(btemp+9)^0,c
 15815  0127BA  500B               	movf	(btemp+10)^0,w,c
 15816  0127BC  2609               	addwf	(btemp+8)^0,f,c
 15817  0127BE  500C               	movf	(btemp+11)^0,w,c
 15818  0127C0  220A               	addwfc	(btemp+9)^0,f,c
 15819  0127C2  500A               	movf	(btemp+9)^0,w,c
 15820  0127C4  E106               	bnz	u13150
 15821  0127C6  0E0A               	movlw	10
 15822  0127C8  5C09               	subwf	(btemp+8)^0,w,c
 15823  0127CA  B0D8               	btfsc	status,0,c
 15824  0127CC  D002               	goto	u13150
 15825  0127CE  0E01               	movlw	1
 15826  0127D0  D001               	goto	u13160
 15827  0127D2                     u13150:
 15828  0127D2  0E00               	movlw	0
 15829  0127D4                     u13160:
 15830  0127D4  6E0B               	movwf	(btemp+10)^0,c
 15831  0127D6  6A0C               	clrf	(btemp+11)^0,c
 15832                           
 15833                           ;stkvar	_vfpfcnvrt$6810 @ sp[(-32)+0]
 15834  0127D8  0EE0               	movlw	-32
 15835  0127DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15836  0127E0  0EE1               	movlw	-31
 15837  0127E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15838                           
 15839                           ;stkvar	_vfpfcnvrt$6810 @ sp[(-32)+0]
 15840  0127E8  0EE0               	movlw	-32
 15841  0127EA  006F FF8C  F001    	movff	plusw1,btemp
 15842  0127F0  0EE1               	movlw	-31
 15843  0127F2  50E3               	movf	plusw1,w,c
 15844  0127F4  1001               	iorwf	btemp^0,w,c
 15845  0127F6  A4D8               	btfss	status,2,c
 15846  0127F8  D7BD               	goto	l13782
 15847  0127FA                     u13170:
 15848                           
 15849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 15850                           ;stkvar	_fmt @ sp[(-32)+-4]
 15851  0127FA  0EDC               	movlw	-36
 15852  0127FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15853  012802  0EDD               	movlw	-35
 15854  012804  006F FF8F FFDA     	movff	plusw1,fsr2h
 15855  01280A  006F FF7B FFF6     	movff	postinc2,tblptrl
 15856  012810  006F FF77 FFF7     	movff	postdec2,tblptrh
 15857  012816                     	if	0	;tblptru may be non-zero
 15858  012816                     	endif
 15859  012816                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15860  012816  0E00               	movlw	low (__mediumconst shr (0+16))
 15861  012818  6EF8               	movwf	tblptru,c
 15862  01281A                     	endif
 15863  01281A  0008               	tblrd		*
 15864  01281C  50F5               	movf	tablat,w,c
 15865  01281E  6EE6               	movwf	postinc1,c
 15866  012820  0E00               	movlw	0
 15867  012822  6EE6               	movwf	postinc1,c
 15868  012824  EC07  F0DE         	call	_tolower	;wreg free
 15869                           
 15870                           ;stkvar	_ct @ sp[(-32)+26]
 15871  012828  0EFA               	movlw	-6
 15872  01282A  0060  F007  FFE3   	movff	btemp,plusw1
 15873                           
 15874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 15875                           ;stkvar	_ct @ sp[(-32)+26]
 15876  012830  0EFA               	movlw	-6
 15877  012832  50E3               	movf	plusw1,w,c
 15878  012834  B4D8               	btfsc	status,2,c
 15879  012836  D05B               	goto	l13800
 15880                           
 15881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 15882                           ;stkvar	_ct @ sp[(-32)+26]
 15883  012838  0EFB               	movlw	251
 15884  01283A  24E1               	addwf	fsr1l,w,c
 15885  01283C  6ED9               	movwf	fsr2l,c
 15886  01283E  0EFF               	movlw	255
 15887  012840  20E2               	addwfc	fsr1h,w,c
 15888  012842  6EDA               	movwf	fsr2h,c
 15889                           
 15890                           ;stkvar	_fmt @ sp[(-32)+-4]
 15891  012844  0EDC               	movlw	-36
 15892  012846  006F FF8F FFE9     	movff	plusw1,fsr0l
 15893  01284C  0EDD               	movlw	-35
 15894  01284E  006F FF8F FFEA     	movff	plusw1,fsr0h
 15895  012854  006F FFB8  F00B    	movff	postinc0,btemp+10
 15896  01285A  006F FFB4  F00C    	movff	postdec0,btemp+11
 15897  012860  0E01               	movlw	1
 15898  012862  260B               	addwf	(btemp+10)^0,f,c
 15899  012864  0E00               	movlw	0
 15900  012866  220C               	addwfc	(btemp+11)^0,f,c
 15901  012868  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15902  01286E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15903  012874                     	if	0	;tblptru may be non-zero
 15904  012874                     	endif
 15905  012874                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15906  012874  0E00               	movlw	low (__mediumconst shr (0+16))
 15907  012876  6EF8               	movwf	tblptru,c
 15908  012878                     	endif
 15909  012878  0008               	tblrd		*
 15910  01287A  50F5               	movf	tablat,w,c
 15911  01287C  6EE6               	movwf	postinc1,c
 15912  01287E  0E00               	movlw	0
 15913  012880  6EE6               	movwf	postinc1,c
 15914  012882  EC07  F0DE         	call	_tolower	;wreg free
 15915  012886  5001               	movf	btemp^0,w,c
 15916  012888  6EDF               	movwf	indf2,c
 15917                           
 15918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 15919                           ;stkvar	_ct @ sp[(-32)+26]
 15920  01288A  0EFB               	movlw	251
 15921  01288C  24E1               	addwf	fsr1l,w,c
 15922  01288E  6ED9               	movwf	fsr2l,c
 15923  012890  0EFF               	movlw	255
 15924  012892  20E2               	addwfc	fsr1h,w,c
 15925  012894  6EDA               	movwf	fsr2h,c
 15926  012896  50DF               	movf	indf2,w,c
 15927  012898  B4D8               	btfsc	status,2,c
 15928  01289A  D029               	goto	l13800
 15929                           
 15930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 15931                           ;stkvar	_ct @ sp[(-32)+26]
 15932  01289C  0EFC               	movlw	252
 15933  01289E  24E1               	addwf	fsr1l,w,c
 15934  0128A0  6ED9               	movwf	fsr2l,c
 15935  0128A2  0EFF               	movlw	255
 15936  0128A4  20E2               	addwfc	fsr1h,w,c
 15937  0128A6  6EDA               	movwf	fsr2h,c
 15938                           
 15939                           ;stkvar	_fmt @ sp[(-32)+-4]
 15940  0128A8  0EDC               	movlw	-36
 15941  0128AA  006F FF8F FFE9     	movff	plusw1,fsr0l
 15942  0128B0  0EDD               	movlw	-35
 15943  0128B2  006F FF8F FFEA     	movff	plusw1,fsr0h
 15944  0128B8  006F FFB8  F00B    	movff	postinc0,btemp+10
 15945  0128BE  006F FFB4  F00C    	movff	postdec0,btemp+11
 15946  0128C4  0E02               	movlw	2
 15947  0128C6  260B               	addwf	(btemp+10)^0,f,c
 15948  0128C8  0E00               	movlw	0
 15949  0128CA  220C               	addwfc	(btemp+11)^0,f,c
 15950  0128CC  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15951  0128D2  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15952  0128D8                     	if	0	;tblptru may be non-zero
 15953  0128D8                     	endif
 15954  0128D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15955  0128D8  0E00               	movlw	low (__mediumconst shr (0+16))
 15956  0128DA  6EF8               	movwf	tblptru,c
 15957  0128DC                     	endif
 15958  0128DC  0008               	tblrd		*
 15959  0128DE  50F5               	movf	tablat,w,c
 15960  0128E0  6EE6               	movwf	postinc1,c
 15961  0128E2  0E00               	movlw	0
 15962  0128E4  6EE6               	movwf	postinc1,c
 15963  0128E6  EC07  F0DE         	call	_tolower	;wreg free
 15964  0128EA  5001               	movf	btemp^0,w,c
 15965  0128EC  6EDF               	movwf	indf2,c
 15966  0128EE                     l13800:
 15967                           
 15968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 15969                           ;stkvar	_fmt @ sp[(-32)+-4]
 15970  0128EE  0EDC               	movlw	-36
 15971  0128F0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15972  0128F6  0EDD               	movlw	-35
 15973  0128F8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15974  0128FE  006F FF7B FFF6     	movff	postinc2,tblptrl
 15975  012904  006F FF77 FFF7     	movff	postdec2,tblptrh
 15976  01290A                     	if	0	;tblptru may be non-zero
 15977  01290A                     	endif
 15978  01290A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15979  01290A  0E00               	movlw	low (__mediumconst shr (0+16))
 15980  01290C  6EF8               	movwf	tblptru,c
 15981  01290E                     	endif
 15982  01290E  0008               	tblrd		*
 15983  012910  50F5               	movf	tablat,w,c
 15984  012912  0A63               	xorlw	99
 15985  012914  A4D8               	btfss	status,2,c
 15986  012916  D037               	goto	l13810
 15987                           
 15988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 15989                           ;stkvar	_fmt @ sp[(-32)+-4]
 15990  012918  0EDC               	movlw	-36
 15991  01291A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15992  012920  0EDD               	movlw	-35
 15993  012922  006F FF8F FFDA     	movff	plusw1,fsr2h
 15994  012928  2ADE               	incf	postinc2,f,c
 15995  01292A  0E00               	movlw	0
 15996  01292C  22DD               	addwfc	postdec2,f,c
 15997                           
 15998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 15999                           ;stkvar	_ap @ sp[(-32)+-6]
 16000  01292E  0EDA               	movlw	-38
 16001  012930  006F FF8F FFD9     	movff	plusw1,fsr2l
 16002  012936  0EDB               	movlw	-37
 16003  012938  006F FF8F FFDA     	movff	plusw1,fsr2h
 16004  01293E  0E02               	movlw	2
 16005  012940  5EDE               	subwf	postinc2,f,c
 16006  012942  0E00               	movlw	0
 16007  012944  5ADD               	subwfb	postdec2,f,c
 16008  012946  006F FF78  F00B    	movff	postinc2,btemp+10
 16009  01294C  006F FF74  F00C    	movff	postdec2,btemp+11
 16010  012952  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16011  012958  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16012  01295E  50DF               	movf	indf2,w,c
 16013  012960  6E0C               	movwf	(btemp+11)^0,c
 16014                           
 16015                           ;stkvar	_c @ sp[(-32)+31]
 16016  012962  0EFF               	movlw	-1
 16017  012964  0060  F033  FFE3   	movff	btemp+11,plusw1
 16018                           
 16019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 16020                           ;stkvar	_c @ sp[(-32)+31]
 16021  01296A  0EFF               	movlw	-1
 16022  01296C  50E3               	movf	plusw1,w,c
 16023  01296E  6EE6               	movwf	postinc1,c
 16024                           
 16025                           ;stkvar	_fp @ sp[(-33)+-2]
 16026  012970  0EDD               	movlw	-35
 16027  012972  006F FF8F FFE6     	movff	plusw1,postinc1
 16028  012978  006F FF8F FFE6     	movff	plusw1,postinc1
 16029  01297E  EC81  F0DD         	call	_ctoa	;wreg free
 16030  012982  EF3C  F09A         	goto	l2638
 16031  012986                     l13810:
 16032                           
 16033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 16034                           ;stkvar	_fmt @ sp[(-32)+-4]
 16035  012986  0EDC               	movlw	-36
 16036  012988  006F FF8F FFD9     	movff	plusw1,fsr2l
 16037  01298E  0EDD               	movlw	-35
 16038  012990  006F FF8F FFDA     	movff	plusw1,fsr2h
 16039  012996  006F FF7B FFF6     	movff	postinc2,tblptrl
 16040  01299C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16041  0129A2                     	if	0	;tblptru may be non-zero
 16042  0129A2                     	endif
 16043  0129A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16044  0129A2  0E00               	movlw	low (__mediumconst shr (0+16))
 16045  0129A4  6EF8               	movwf	tblptru,c
 16046  0129A6                     	endif
 16047  0129A6  0008               	tblrd		*
 16048  0129A8  50F5               	movf	tablat,w,c
 16049  0129AA  0A64               	xorlw	100
 16050  0129AC  B4D8               	btfsc	status,2,c
 16051  0129AE  D015               	goto	u13220
 16052                           
 16053                           ;stkvar	_fmt @ sp[(-32)+-4]
 16054  0129B0  0EDC               	movlw	-36
 16055  0129B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16056  0129B8  0EDD               	movlw	-35
 16057  0129BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16058  0129C0  006F FF7B FFF6     	movff	postinc2,tblptrl
 16059  0129C6  006F FF77 FFF7     	movff	postdec2,tblptrh
 16060  0129CC                     	if	0	;tblptru may be non-zero
 16061  0129CC                     	endif
 16062  0129CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16063  0129CC  0E00               	movlw	low (__mediumconst shr (0+16))
 16064  0129CE  6EF8               	movwf	tblptru,c
 16065  0129D0                     	endif
 16066  0129D0  0008               	tblrd		*
 16067  0129D2  50F5               	movf	tablat,w,c
 16068  0129D4  0A69               	xorlw	105
 16069  0129D6  A4D8               	btfss	status,2,c
 16070  0129D8  D076               	goto	l13822
 16071  0129DA                     u13220:
 16072                           
 16073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 16074                           ;stkvar	_fmt @ sp[(-32)+-4]
 16075  0129DA  0EDC               	movlw	-36
 16076  0129DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 16077  0129E2  0EDD               	movlw	-35
 16078  0129E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 16079  0129EA  2ADE               	incf	postinc2,f,c
 16080  0129EC  0E00               	movlw	0
 16081  0129EE  22DD               	addwfc	postdec2,f,c
 16082                           
 16083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 16084                           ;stkvar	_ap @ sp[(-32)+-6]
 16085  0129F0  0EDA               	movlw	-38
 16086  0129F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16087  0129F8  0EDB               	movlw	-37
 16088  0129FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16089  012A00  0E02               	movlw	2
 16090  012A02  5EDE               	subwf	postinc2,f,c
 16091  012A04  0E00               	movlw	0
 16092  012A06  5ADD               	subwfb	postdec2,f,c
 16093  012A08  006F FF78  F00B    	movff	postinc2,btemp+10
 16094  012A0E  006F FF74  F00C    	movff	postdec2,btemp+11
 16095  012A14  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16096  012A1A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16097  012A20  006F FF78  F00B    	movff	postinc2,btemp+10
 16098  012A26  006F FF74  F00C    	movff	postdec2,btemp+11
 16099                           
 16100                           ;stkvar	_ll @ sp[(-32)+14]
 16101  012A2C  0EEE               	movlw	-18
 16102  012A2E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16103  012A34  0EEF               	movlw	-17
 16104  012A36  0060  F033  FFE3   	movff	btemp+11,plusw1
 16105  012A3C  6A01               	clrf	btemp^0,c
 16106  012A3E  BEE3               	btfsc	plusw1,7,c
 16107  012A40  6801               	setf	btemp^0,c
 16108  012A42  0EF0               	movlw	-16
 16109  012A44  0060  F007  FFE3   	movff	btemp,plusw1
 16110  012A4A  0EF1               	movlw	-15
 16111  012A4C  0060  F007  FFE3   	movff	btemp,plusw1
 16112  012A52  0EF2               	movlw	-14
 16113  012A54  0060  F007  FFE3   	movff	btemp,plusw1
 16114  012A5A  0EF3               	movlw	-13
 16115  012A5C  0060  F007  FFE3   	movff	btemp,plusw1
 16116  012A62  0EF4               	movlw	-12
 16117  012A64  0060  F007  FFE3   	movff	btemp,plusw1
 16118  012A6A  0EF5               	movlw	-11
 16119  012A6C  0060  F007  FFE3   	movff	btemp,plusw1
 16120  012A72                     l13818:
 16121                           
 16122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 16123                           ;stkvar	_ll @ sp[(-32)+14]
 16124  012A72  50E1               	movf	fsr1l,w,c
 16125  012A74  0FEE               	addlw	-18
 16126  012A76  6ED9               	movwf	fsr2l,c
 16127  012A78  50E2               	movf	fsr1h,w,c
 16128  012A7A  6EDA               	movwf	fsr2h,c
 16129  012A7C  0EFF               	movlw	255
 16130  012A7E  22DA               	addwfc	fsr2h,f,c
 16131  012A80  006F FF7B FFE6     	movff	postinc2,postinc1
 16132  012A86  006F FF7B FFE6     	movff	postinc2,postinc1
 16133  012A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 16134  012A92  006F FF7B FFE6     	movff	postinc2,postinc1
 16135  012A98  006F FF7B FFE6     	movff	postinc2,postinc1
 16136  012A9E  006F FF7B FFE6     	movff	postinc2,postinc1
 16137  012AA4  006F FF7B FFE6     	movff	postinc2,postinc1
 16138  012AAA  006F FF7B FFE6     	movff	postinc2,postinc1
 16139                           
 16140                           ;stkvar	_fp @ sp[(-40)+-2]
 16141  012AB0  0ED6               	movlw	-42
 16142  012AB2  006F FF8F FFE6     	movff	plusw1,postinc1
 16143  012AB8  006F FF8F FFE6     	movff	plusw1,postinc1
 16144  012ABE  EC86  F0AC         	call	_dtoa	;wreg free
 16145  012AC2  EF3C  F09A         	goto	l2638
 16146  012AC6                     l13822:
 16147                           
 16148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 16149  012AC6  0E02               	movlw	2
 16150  012AC8  6EE6               	movwf	postinc1,c
 16151  012ACA  0E00               	movlw	0
 16152  012ACC  6EE6               	movwf	postinc1,c
 16153  012ACE  0EEA               	movlw	low STR_89
 16154  012AD0  6EE6               	movwf	postinc1,c
 16155  012AD2  0EFF               	movlw	high STR_89
 16156  012AD4  6EE6               	movwf	postinc1,c
 16157                           
 16158                           ;stkvar	_fmt @ sp[(-36)+-4]
 16159  012AD6  0ED8               	movlw	-40
 16160  012AD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16161  012ADE  0ED9               	movlw	-39
 16162  012AE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16163  012AE6  006F FF78  F00B    	movff	postinc2,btemp+10
 16164  012AEC  006F FF74  F00C    	movff	postdec2,btemp+11
 16165  012AF2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16166  012AF8  0060  F033  FFE6   	movff	btemp+11,postinc1
 16167  012AFE  ECF9  F0C2         	call	_strncmp	;wreg free
 16168  012B02  5001               	movf	btemp^0,w,c
 16169  012B04  1002               	iorwf	(btemp+1)^0,w,c
 16170  012B06  B4D8               	btfsc	status,2,c
 16171  012B08  D022               	goto	u13240
 16172  012B0A  0E02               	movlw	2
 16173  012B0C  6EE6               	movwf	postinc1,c
 16174  012B0E  0E00               	movlw	0
 16175  012B10  6EE6               	movwf	postinc1,c
 16176  012B12  0EF0               	movlw	low STR_93
 16177  012B14  6EE6               	movwf	postinc1,c
 16178  012B16  0EFF               	movlw	high STR_93
 16179  012B18  6EE6               	movwf	postinc1,c
 16180                           
 16181                           ;stkvar	_fmt @ sp[(-36)+-4]
 16182  012B1A  0ED8               	movlw	-40
 16183  012B1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16184  012B22  0ED9               	movlw	-39
 16185  012B24  006F FF8F FFDA     	movff	plusw1,fsr2h
 16186  012B2A  006F FF78  F00B    	movff	postinc2,btemp+10
 16187  012B30  006F FF74  F00C    	movff	postdec2,btemp+11
 16188  012B36  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16189  012B3C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16190  012B42  ECF9  F0C2         	call	_strncmp	;wreg free
 16191  012B46  5001               	movf	btemp^0,w,c
 16192  012B48  1002               	iorwf	(btemp+1)^0,w,c
 16193  012B4A  A4D8               	btfss	status,2,c
 16194  012B4C  D069               	goto	l13834
 16195  012B4E                     u13240:
 16196                           
 16197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 16198                           ;stkvar	_fmt @ sp[(-32)+-4]
 16199  012B4E  0EDC               	movlw	-36
 16200  012B50  006F FF8F FFD9     	movff	plusw1,fsr2l
 16201  012B56  0EDD               	movlw	-35
 16202  012B58  006F FF8F FFDA     	movff	plusw1,fsr2h
 16203  012B5E  0E02               	movlw	2
 16204  012B60  26DE               	addwf	postinc2,f,c
 16205  012B62  0E00               	movlw	0
 16206  012B64  22DD               	addwfc	postdec2,f,c
 16207                           
 16208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 16209                           ;stkvar	_ap @ sp[(-32)+-6]
 16210  012B66  0EDA               	movlw	-38
 16211  012B68  006F FF8F FFD9     	movff	plusw1,fsr2l
 16212  012B6E  0EDB               	movlw	-37
 16213  012B70  006F FF8F FFDA     	movff	plusw1,fsr2h
 16214  012B76  0E04               	movlw	4
 16215  012B78  5EDE               	subwf	postinc2,f,c
 16216  012B7A  0E00               	movlw	0
 16217  012B7C  5ADD               	subwfb	postdec2,f,c
 16218  012B7E  006F FF78  F00B    	movff	postinc2,btemp+10
 16219  012B84  006F FF74  F00C    	movff	postdec2,btemp+11
 16220  012B8A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16221  012B90  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16222  012B96  006F FF78  F009    	movff	postinc2,btemp+8
 16223  012B9C  006F FF78  F00A    	movff	postinc2,btemp+9
 16224  012BA2  006F FF78  F00B    	movff	postinc2,btemp+10
 16225  012BA8  006F FF78  F00C    	movff	postinc2,btemp+11
 16226  012BAE  0060  F024  F011   	movff	btemp+8,btemp+16
 16227  012BB4  0060  F028  F012   	movff	btemp+9,btemp+17
 16228  012BBA  0060  F02C  F013   	movff	btemp+10,btemp+18
 16229  012BC0  0060  F030  F014   	movff	btemp+11,btemp+19
 16230  012BC6  6A15               	clrf	(btemp+20)^0,c
 16231  012BC8  BE14               	btfsc	(btemp+19)^0,7,c
 16232  012BCA  6815               	setf	(btemp+20)^0,c
 16233  012BCC  0060  F054  F016   	movff	btemp+20,btemp+21
 16234  012BD2  0060  F054  F017   	movff	btemp+20,btemp+22
 16235  012BD8  0060  F054  F018   	movff	btemp+20,btemp+23
 16236                           
 16237                           ;stkvar	_ll @ sp[(-32)+14]
 16238  012BDE  0EEE               	movlw	-18
 16239  012BE0  0060  F047  FFE3   	movff	btemp+16,plusw1
 16240  012BE6  0EEF               	movlw	-17
 16241  012BE8  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16242  012BEE  0EF0               	movlw	-16
 16243  012BF0  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16244  012BF6  0EF1               	movlw	-15
 16245  012BF8  0060  F053  FFE3   	movff	btemp+19,plusw1
 16246  012BFE  0EF2               	movlw	-14
 16247  012C00  0060  F057  FFE3   	movff	btemp+20,plusw1
 16248  012C06  0EF3               	movlw	-13
 16249  012C08  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16250  012C0E  0EF4               	movlw	-12
 16251  012C10  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16252  012C16  0EF5               	movlw	-11
 16253  012C18  0060  F063  FFE3   	movff	btemp+23,plusw1
 16254  012C1E  D729               	goto	l13818
 16255  012C20                     l13834:
 16256                           
 16257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 16258                           ;stkvar	_ct @ sp[(-32)+26]
 16259  012C20  0EFA               	movlw	-6
 16260  012C22  006F FF8C  F001    	movff	plusw1,btemp
 16261  012C28  0E66               	movlw	102
 16262  012C2A  1801               	xorwf	btemp^0,w,c
 16263  012C2C  A4D8               	btfss	status,2,c
 16264  012C2E  D06E               	goto	l13846
 16265                           
 16266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 16267                           ;stkvar	_fmt @ sp[(-32)+-4]
 16268  012C30  0EDC               	movlw	-36
 16269  012C32  006F FF8F FFD9     	movff	plusw1,fsr2l
 16270  012C38  0EDD               	movlw	-35
 16271  012C3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16272  012C40  006F FF7B FFF6     	movff	postinc2,tblptrl
 16273  012C46  006F FF77 FFF7     	movff	postdec2,tblptrh
 16274  012C4C                     	if	0	;tblptru may be non-zero
 16275  012C4C                     	endif
 16276  012C4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16277  012C4C  0E00               	movlw	low (__mediumconst shr (0+16))
 16278  012C4E  6EF8               	movwf	tblptru,c
 16279  012C50                     	endif
 16280                           
 16281                           ;stkvar	_c @ sp[(-32)+31]
 16282  012C50  0008               	tblrd		*
 16283  012C52  0EFF               	movlw	-1
 16284  012C54  006F FFD7 FFE3     	movff	tablat,plusw1
 16285                           
 16286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 16287                           ;stkvar	_fmt @ sp[(-32)+-4]
 16288  012C5A  0EDC               	movlw	-36
 16289  012C5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16290  012C62  0EDD               	movlw	-35
 16291  012C64  006F FF8F FFDA     	movff	plusw1,fsr2h
 16292  012C6A  2ADE               	incf	postinc2,f,c
 16293  012C6C  0E00               	movlw	0
 16294  012C6E  22DD               	addwfc	postdec2,f,c
 16295                           
 16296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 16297                           ;stkvar	_ap @ sp[(-32)+-6]
 16298  012C70  0EDA               	movlw	-38
 16299  012C72  006F FF8F FFD9     	movff	plusw1,fsr2l
 16300  012C78  0EDB               	movlw	-37
 16301  012C7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16302  012C80  0E04               	movlw	4
 16303  012C82  5EDE               	subwf	postinc2,f,c
 16304  012C84  0E00               	movlw	0
 16305  012C86  5ADD               	subwfb	postdec2,f,c
 16306  012C88  006F FF78  F00B    	movff	postinc2,btemp+10
 16307  012C8E  006F FF74  F00C    	movff	postdec2,btemp+11
 16308  012C94  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16309  012C9A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16310  012CA0  006F FF78  F009    	movff	postinc2,btemp+8
 16311  012CA6  006F FF78  F00A    	movff	postinc2,btemp+9
 16312  012CAC  006F FF78  F00B    	movff	postinc2,btemp+10
 16313  012CB2  006F FF78  F00C    	movff	postinc2,btemp+11
 16314                           
 16315                           ;stkvar	_f @ sp[(-32)+22]
 16316  012CB8  0EF6               	movlw	-10
 16317  012CBA  0060  F027  FFE3   	movff	btemp+8,plusw1
 16318  012CC0  0EF7               	movlw	-9
 16319  012CC2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16320  012CC8  0EF8               	movlw	-8
 16321  012CCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16322  012CD0  0EF9               	movlw	-7
 16323  012CD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16324  012CD8                     l13842:
 16325                           
 16326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 16327                           ;stkvar	_c @ sp[(-32)+31]
 16328  012CD8  0EFF               	movlw	-1
 16329  012CDA  50E3               	movf	plusw1,w,c
 16330  012CDC  6EE6               	movwf	postinc1,c
 16331                           
 16332                           ;stkvar	_f @ sp[(-33)+22]
 16333  012CDE  0EF5               	movlw	-11
 16334  012CE0  006F FF8F FFE6     	movff	plusw1,postinc1
 16335  012CE6  006F FF8F FFE6     	movff	plusw1,postinc1
 16336  012CEC  006F FF8F FFE6     	movff	plusw1,postinc1
 16337  012CF2  006F FF8F FFE6     	movff	plusw1,postinc1
 16338                           
 16339                           ;stkvar	_fp @ sp[(-37)+-2]
 16340  012CF8  0ED9               	movlw	-39
 16341  012CFA  006F FF8F FFE6     	movff	plusw1,postinc1
 16342  012D00  006F FF8F FFE6     	movff	plusw1,postinc1
 16343  012D06  EC49  F089         	call	_efgtoa	;wreg free
 16344  012D0A  D3B6               	goto	l2638
 16345  012D0C                     l13846:
 16346                           
 16347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 16348  012D0C  0E02               	movlw	2
 16349  012D0E  6EE6               	movwf	postinc1,c
 16350  012D10  0E00               	movlw	0
 16351  012D12  6EE6               	movwf	postinc1,c
 16352  012D14  0EED               	movlw	low STR_98
 16353  012D16  6EE6               	movwf	postinc1,c
 16354  012D18  0EFF               	movlw	high STR_98
 16355  012D1A  6EE6               	movwf	postinc1,c
 16356                           
 16357                           ;stkvar	_ct @ sp[(-36)+26]
 16358  012D1C  0EF6               	movlw	246
 16359  012D1E  24E1               	addwf	fsr1l,w,c
 16360  012D20  6E01               	movwf	btemp^0,c
 16361  012D22  0EFF               	movlw	255
 16362  012D24  20E2               	addwfc	fsr1h,w,c
 16363  012D26  6E02               	movwf	(btemp+1)^0,c
 16364  012D28  0060  F007  FFE6   	movff	btemp,postinc1
 16365  012D2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16366  012D34  ECF9  F0C2         	call	_strncmp	;wreg free
 16367  012D38  5001               	movf	btemp^0,w,c
 16368  012D3A  1002               	iorwf	(btemp+1)^0,w,c
 16369  012D3C  A4D8               	btfss	status,2,c
 16370  012D3E  D096               	goto	l13866
 16371                           
 16372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 16373                           ;stkvar	_fmt @ sp[(-32)+-4]
 16374  012D40  0EDC               	movlw	-36
 16375  012D42  006F FF8F FFD9     	movff	plusw1,fsr2l
 16376  012D48  0EDD               	movlw	-35
 16377  012D4A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16378  012D50  006F FF78  F00B    	movff	postinc2,btemp+10
 16379  012D56  006F FF74  F00C    	movff	postdec2,btemp+11
 16380  012D5C  0E01               	movlw	1
 16381  012D5E  260B               	addwf	(btemp+10)^0,f,c
 16382  012D60  0E00               	movlw	0
 16383  012D62  220C               	addwfc	(btemp+11)^0,f,c
 16384  012D64  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16385  012D6A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16386  012D70                     	if	0	;tblptru may be non-zero
 16387  012D70                     	endif
 16388  012D70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16389  012D70  0E00               	movlw	low (__mediumconst shr (0+16))
 16390  012D72  6EF8               	movwf	tblptru,c
 16391  012D74                     	endif
 16392                           
 16393                           ;stkvar	_c @ sp[(-32)+31]
 16394  012D74  0008               	tblrd		*
 16395  012D76  0EFF               	movlw	-1
 16396  012D78  006F FFD7 FFE3     	movff	tablat,plusw1
 16397  012D7E  0EBF               	movlw	191
 16398  012D80  6E0B               	movwf	(btemp+10)^0,c
 16399  012D82  0EFF               	movlw	255
 16400  012D84  6E0C               	movwf	(btemp+11)^0,c
 16401                           
 16402                           ;stkvar	_fmt @ sp[(-32)+-4]
 16403  012D86  0EDC               	movlw	-36
 16404  012D88  006F FF8F FFD9     	movff	plusw1,fsr2l
 16405  012D8E  0EDD               	movlw	-35
 16406  012D90  006F FF8F FFDA     	movff	plusw1,fsr2h
 16407  012D96  006F FF7B FFF6     	movff	postinc2,tblptrl
 16408  012D9C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16409  012DA2                     	if	0	;tblptru may be non-zero
 16410  012DA2                     	endif
 16411  012DA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16412  012DA2  0E00               	movlw	low (__mediumconst shr (0+16))
 16413  012DA4  6EF8               	movwf	tblptru,c
 16414  012DA6                     	endif
 16415  012DA6  0008               	tblrd		*
 16416  012DA8  50F5               	movf	tablat,w,c
 16417  012DAA  6E09               	movwf	(btemp+8)^0,c
 16418  012DAC  6A0A               	clrf	(btemp+9)^0,c
 16419  012DAE  500B               	movf	(btemp+10)^0,w,c
 16420  012DB0  2609               	addwf	(btemp+8)^0,f,c
 16421  012DB2  500C               	movf	(btemp+11)^0,w,c
 16422  012DB4  220A               	addwfc	(btemp+9)^0,f,c
 16423  012DB6  500A               	movf	(btemp+9)^0,w,c
 16424  012DB8  E106               	bnz	u13270
 16425  012DBA  0E1A               	movlw	26
 16426  012DBC  5C09               	subwf	(btemp+8)^0,w,c
 16427  012DBE  B0D8               	btfsc	status,0,c
 16428  012DC0  D002               	goto	u13270
 16429  012DC2  0E01               	movlw	1
 16430  012DC4  D001               	goto	u13280
 16431  012DC6                     u13270:
 16432  012DC6  0E00               	movlw	0
 16433  012DC8                     u13280:
 16434  012DC8  6E0B               	movwf	(btemp+10)^0,c
 16435  012DCA  6A0C               	clrf	(btemp+11)^0,c
 16436                           
 16437                           ;stkvar	_vfpfcnvrt$6821 @ sp[(-32)+2]
 16438  012DCC  0EE2               	movlw	-30
 16439  012DCE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16440  012DD4  0EE3               	movlw	-29
 16441  012DD6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16442                           
 16443                           ;stkvar	_vfpfcnvrt$6821 @ sp[(-32)+2]
 16444  012DDC  0EE2               	movlw	-30
 16445  012DDE  006F FF8C  F001    	movff	plusw1,btemp
 16446  012DE4  0EE3               	movlw	-29
 16447  012DE6  50E3               	movf	plusw1,w,c
 16448  012DE8  1001               	iorwf	btemp^0,w,c
 16449                           
 16450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 16451                           ;stkvar	_ap @ sp[(-32)+-6]
 16452                           
 16453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 16454                           
 16455                           ;stkvar	_f @ sp[(-32)+22]
 16456                           
 16457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 16458                           ;stkvar	_ap @ sp[(-32)+-6]
 16459  012DEA  0EDA               	movlw	-38
 16460  012DEC  006F FF8F FFD9     	movff	plusw1,fsr2l
 16461  012DF2  0EDB               	movlw	-37
 16462  012DF4  006F FF8F FFDA     	movff	plusw1,fsr2h
 16463  012DFA  0E04               	movlw	4
 16464  012DFC  5EDE               	subwf	postinc2,f,c
 16465  012DFE  0E00               	movlw	0
 16466  012E00  5ADD               	subwfb	postdec2,f,c
 16467  012E02  006F FF78  F00B    	movff	postinc2,btemp+10
 16468  012E08  006F FF74  F00C    	movff	postdec2,btemp+11
 16469  012E0E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16470  012E14  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16471  012E1A  006F FF78  F009    	movff	postinc2,btemp+8
 16472  012E20  006F FF78  F00A    	movff	postinc2,btemp+9
 16473  012E26  006F FF78  F00B    	movff	postinc2,btemp+10
 16474  012E2C  006F FF78  F00C    	movff	postinc2,btemp+11
 16475                           
 16476                           ;stkvar	_f @ sp[(-32)+22]
 16477  012E32  0EF6               	movlw	-10
 16478  012E34  0060  F027  FFE3   	movff	btemp+8,plusw1
 16479  012E3A  0EF7               	movlw	-9
 16480  012E3C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16481  012E42  0EF8               	movlw	-8
 16482  012E44  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16483  012E4A  0EF9               	movlw	-7
 16484  012E4C  0060  F033  FFE3   	movff	btemp+11,plusw1
 16485                           
 16486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 16487                           ;stkvar	_fmt @ sp[(-32)+-4]
 16488  012E52  0EDC               	movlw	-36
 16489  012E54  006F FF8F FFD9     	movff	plusw1,fsr2l
 16490  012E5A  0EDD               	movlw	-35
 16491  012E5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16492  012E62  0E02               	movlw	2
 16493  012E64  26DE               	addwf	postinc2,f,c
 16494  012E66  0E00               	movlw	0
 16495  012E68  22DD               	addwfc	postdec2,f,c
 16496  012E6A  D736               	goto	l13842
 16497  012E6C                     l13866:
 16498                           
 16499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 16500                           ;stkvar	_fmt @ sp[(-32)+-4]
 16501  012E6C  0EDC               	movlw	-36
 16502  012E6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16503  012E74  0EDD               	movlw	-35
 16504  012E76  006F FF8F FFDA     	movff	plusw1,fsr2h
 16505  012E7C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16506  012E82  006F FF77 FFF7     	movff	postdec2,tblptrh
 16507  012E88                     	if	0	;tblptru may be non-zero
 16508  012E88                     	endif
 16509  012E88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16510  012E88  0E00               	movlw	low (__mediumconst shr (0+16))
 16511  012E8A  6EF8               	movwf	tblptru,c
 16512  012E8C                     	endif
 16513  012E8C  0008               	tblrd		*
 16514  012E8E  50F5               	movf	tablat,w,c
 16515  012E90  0A73               	xorlw	115
 16516  012E92  A4D8               	btfss	status,2,c
 16517  012E94  D042               	goto	l13876
 16518                           
 16519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 16520                           ;stkvar	_fmt @ sp[(-32)+-4]
 16521  012E96  0EDC               	movlw	-36
 16522  012E98  006F FF8F FFD9     	movff	plusw1,fsr2l
 16523  012E9E  0EDD               	movlw	-35
 16524  012EA0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16525  012EA6  2ADE               	incf	postinc2,f,c
 16526  012EA8  0E00               	movlw	0
 16527  012EAA  22DD               	addwfc	postdec2,f,c
 16528                           
 16529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 16530                           ;stkvar	_ap @ sp[(-32)+-6]
 16531  012EAC  0EDA               	movlw	-38
 16532  012EAE  006F FF8F FFD9     	movff	plusw1,fsr2l
 16533  012EB4  0EDB               	movlw	-37
 16534  012EB6  006F FF8F FFDA     	movff	plusw1,fsr2h
 16535  012EBC  0E02               	movlw	2
 16536  012EBE  5EDE               	subwf	postinc2,f,c
 16537  012EC0  0E00               	movlw	0
 16538  012EC2  5ADD               	subwfb	postdec2,f,c
 16539  012EC4  006F FF78  F00B    	movff	postinc2,btemp+10
 16540  012ECA  006F FF74  F00C    	movff	postdec2,btemp+11
 16541  012ED0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16542  012ED6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16543  012EDC  006F FF78  F00B    	movff	postinc2,btemp+10
 16544  012EE2  006F FF74  F00C    	movff	postdec2,btemp+11
 16545                           
 16546                           ;stkvar	_cp @ sp[(-32)+29]
 16547  012EE8  0EFE               	movlw	-2
 16548  012EEA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16549  012EF0  0EFD               	movlw	-3
 16550  012EF2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16551                           
 16552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 16553                           ;stkvar	_cp @ sp[(-32)+29]
 16554  012EF8  0EFD               	movlw	-3
 16555  012EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 16556  012F00  006F FF8F FFE6     	movff	plusw1,postinc1
 16557                           
 16558                           ;stkvar	_fp @ sp[(-34)+-2]
 16559  012F06  0EDC               	movlw	-36
 16560  012F08  006F FF8F FFE6     	movff	plusw1,postinc1
 16561  012F0E  006F FF8F FFE6     	movff	plusw1,postinc1
 16562  012F14  ECDD  F0BC         	call	_stoa	;wreg free
 16563  012F18  D2AF               	goto	l2638
 16564  012F1A                     l13876:
 16565                           
 16566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 16567                           ;stkvar	_fmt @ sp[(-32)+-4]
 16568  012F1A  0EDC               	movlw	-36
 16569  012F1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16570  012F22  0EDD               	movlw	-35
 16571  012F24  006F FF8F FFDA     	movff	plusw1,fsr2h
 16572  012F2A  006F FF7B FFF6     	movff	postinc2,tblptrl
 16573  012F30  006F FF77 FFF7     	movff	postdec2,tblptrh
 16574  012F36                     	if	0	;tblptru may be non-zero
 16575  012F36                     	endif
 16576  012F36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16577  012F36  0E00               	movlw	low (__mediumconst shr (0+16))
 16578  012F38  6EF8               	movwf	tblptru,c
 16579  012F3A                     	endif
 16580  012F3A  0008               	tblrd		*
 16581  012F3C  50F5               	movf	tablat,w,c
 16582  012F3E  0A75               	xorlw	117
 16583  012F40  A4D8               	btfss	status,2,c
 16584  012F42  D07C               	goto	l13886
 16585                           
 16586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 16587                           ;stkvar	_fmt @ sp[(-32)+-4]
 16588  012F44  0EDC               	movlw	-36
 16589  012F46  006F FF8F FFD9     	movff	plusw1,fsr2l
 16590  012F4C  0EDD               	movlw	-35
 16591  012F4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16592  012F54  2ADE               	incf	postinc2,f,c
 16593  012F56  0E00               	movlw	0
 16594  012F58  22DD               	addwfc	postdec2,f,c
 16595                           
 16596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 16597                           ;stkvar	_ap @ sp[(-32)+-6]
 16598  012F5A  0EDA               	movlw	-38
 16599  012F5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16600  012F62  0EDB               	movlw	-37
 16601  012F64  006F FF8F FFDA     	movff	plusw1,fsr2h
 16602  012F6A  0E02               	movlw	2
 16603  012F6C  5EDE               	subwf	postinc2,f,c
 16604  012F6E  0E00               	movlw	0
 16605  012F70  5ADD               	subwfb	postdec2,f,c
 16606  012F72  006F FF78  F00B    	movff	postinc2,btemp+10
 16607  012F78  006F FF74  F00C    	movff	postdec2,btemp+11
 16608  012F7E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16609  012F84  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16610  012F8A  006F FF78  F00B    	movff	postinc2,btemp+10
 16611  012F90  006F FF74  F00C    	movff	postdec2,btemp+11
 16612  012F96  500B               	movf	(btemp+10)^0,w,c
 16613  012F98  6E11               	movwf	(btemp+16)^0,c
 16614  012F9A  500C               	movf	(btemp+11)^0,w,c
 16615  012F9C  6E12               	movwf	(btemp+17)^0,c
 16616  012F9E  6A13               	clrf	(btemp+18)^0,c
 16617  012FA0  6A14               	clrf	(btemp+19)^0,c
 16618  012FA2  6A15               	clrf	(btemp+20)^0,c
 16619  012FA4  6A16               	clrf	(btemp+21)^0,c
 16620  012FA6  6A17               	clrf	(btemp+22)^0,c
 16621  012FA8  6A18               	clrf	(btemp+23)^0,c
 16622                           
 16623                           ;stkvar	_llu @ sp[(-32)+6]
 16624  012FAA  0EE6               	movlw	-26
 16625  012FAC  0060  F047  FFE3   	movff	btemp+16,plusw1
 16626  012FB2  0EE7               	movlw	-25
 16627  012FB4  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16628  012FBA  0EE8               	movlw	-24
 16629  012FBC  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16630  012FC2  0EE9               	movlw	-23
 16631  012FC4  0060  F053  FFE3   	movff	btemp+19,plusw1
 16632  012FCA  0EEA               	movlw	-22
 16633  012FCC  0060  F057  FFE3   	movff	btemp+20,plusw1
 16634  012FD2  0EEB               	movlw	-21
 16635  012FD4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16636  012FDA  0EEC               	movlw	-20
 16637  012FDC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16638  012FE2  0EED               	movlw	-19
 16639  012FE4  0060  F063  FFE3   	movff	btemp+23,plusw1
 16640                           
 16641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 16642                           ;stkvar	_llu @ sp[(-32)+6]
 16643  012FEA  50E1               	movf	fsr1l,w,c
 16644  012FEC  0FE6               	addlw	-26
 16645  012FEE  6ED9               	movwf	fsr2l,c
 16646  012FF0  50E2               	movf	fsr1h,w,c
 16647  012FF2  6EDA               	movwf	fsr2h,c
 16648  012FF4  0EFF               	movlw	255
 16649  012FF6  22DA               	addwfc	fsr2h,f,c
 16650  012FF8  006F FF7B FFE6     	movff	postinc2,postinc1
 16651  012FFE  006F FF7B FFE6     	movff	postinc2,postinc1
 16652  013004  006F FF7B FFE6     	movff	postinc2,postinc1
 16653  01300A  006F FF7B FFE6     	movff	postinc2,postinc1
 16654  013010  006F FF7B FFE6     	movff	postinc2,postinc1
 16655  013016  006F FF7B FFE6     	movff	postinc2,postinc1
 16656  01301C  006F FF7B FFE6     	movff	postinc2,postinc1
 16657  013022  006F FF7B FFE6     	movff	postinc2,postinc1
 16658                           
 16659                           ;stkvar	_fp @ sp[(-40)+-2]
 16660  013028  0ED6               	movlw	-42
 16661  01302A  006F FF8F FFE6     	movff	plusw1,postinc1
 16662  013030  006F FF8F FFE6     	movff	plusw1,postinc1
 16663  013036  EC5B  F0B8         	call	_utoa	;wreg free
 16664  01303A  D21E               	goto	l2638
 16665  01303C                     l13886:
 16666                           
 16667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 16668  01303C  0E02               	movlw	2
 16669  01303E  6EE6               	movwf	postinc1,c
 16670  013040  0E00               	movlw	0
 16671  013042  6EE6               	movwf	postinc1,c
 16672  013044  0EF3               	movlw	low STR_103
 16673  013046  6EE6               	movwf	postinc1,c
 16674  013048  0EFF               	movlw	high STR_103
 16675  01304A  6EE6               	movwf	postinc1,c
 16676                           
 16677                           ;stkvar	_fmt @ sp[(-36)+-4]
 16678  01304C  0ED8               	movlw	-40
 16679  01304E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16680  013054  0ED9               	movlw	-39
 16681  013056  006F FF8F FFDA     	movff	plusw1,fsr2h
 16682  01305C  006F FF78  F00B    	movff	postinc2,btemp+10
 16683  013062  006F FF74  F00C    	movff	postdec2,btemp+11
 16684  013068  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16685  01306E  0060  F033  FFE6   	movff	btemp+11,postinc1
 16686  013074  ECF9  F0C2         	call	_strncmp	;wreg free
 16687  013078  5001               	movf	btemp^0,w,c
 16688  01307A  1002               	iorwf	(btemp+1)^0,w,c
 16689  01307C  A4D8               	btfss	status,2,c
 16690  01307E  D039               	goto	l13896
 16691                           
 16692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 16693                           ;stkvar	_fmt @ sp[(-32)+-4]
 16694  013080  0EDC               	movlw	-36
 16695  013082  006F FF8F FFD9     	movff	plusw1,fsr2l
 16696  013088  0EDD               	movlw	-35
 16697  01308A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16698  013090  0E02               	movlw	2
 16699  013092  26DE               	addwf	postinc2,f,c
 16700  013094  0E00               	movlw	0
 16701  013096  22DD               	addwfc	postdec2,f,c
 16702                           
 16703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 16704                           ;stkvar	_ap @ sp[(-32)+-6]
 16705  013098  0EDA               	movlw	-38
 16706  01309A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16707  0130A0  0EDB               	movlw	-37
 16708  0130A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16709  0130A8  0E04               	movlw	4
 16710  0130AA  5EDE               	subwf	postinc2,f,c
 16711  0130AC  0E00               	movlw	0
 16712  0130AE  5ADD               	subwfb	postdec2,f,c
 16713  0130B0  006F FF78  F00B    	movff	postinc2,btemp+10
 16714  0130B6  006F FF74  F00C    	movff	postdec2,btemp+11
 16715  0130BC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16716  0130C2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16717  0130C8  006F FF78  F009    	movff	postinc2,btemp+8
 16718  0130CE  006F FF78  F00A    	movff	postinc2,btemp+9
 16719  0130D4  006F FF78  F00B    	movff	postinc2,btemp+10
 16720  0130DA  006F FF78  F00C    	movff	postinc2,btemp+11
 16721  0130E0  5009               	movf	(btemp+8)^0,w,c
 16722  0130E2  6E11               	movwf	(btemp+16)^0,c
 16723  0130E4  500A               	movf	(btemp+9)^0,w,c
 16724  0130E6  6E12               	movwf	(btemp+17)^0,c
 16725  0130E8  500B               	movf	(btemp+10)^0,w,c
 16726  0130EA  6E13               	movwf	(btemp+18)^0,c
 16727  0130EC  500C               	movf	(btemp+11)^0,w,c
 16728  0130EE  6E14               	movwf	(btemp+19)^0,c
 16729  0130F0  D758               	goto	L15
 16730  0130F2                     l13896:
 16731                           
 16732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 16733                           ;stkvar	_fmt @ sp[(-32)+-4]
 16734  0130F2  0EDC               	movlw	-36
 16735  0130F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 16736  0130FA  0EDD               	movlw	-35
 16737  0130FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 16738  013102  006F FF7B FFF6     	movff	postinc2,tblptrl
 16739  013108  006F FF77 FFF7     	movff	postdec2,tblptrh
 16740  01310E                     	if	0	;tblptru may be non-zero
 16741  01310E                     	endif
 16742  01310E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16743  01310E  0E00               	movlw	low (__mediumconst shr (0+16))
 16744  013110  6EF8               	movwf	tblptru,c
 16745  013112                     	endif
 16746  013112  0008               	tblrd		*
 16747  013114  50F5               	movf	tablat,w,c
 16748  013116  0A78               	xorlw	120
 16749  013118  B4D8               	btfsc	status,2,c
 16750  01311A  D015               	goto	u13340
 16751                           
 16752                           ;stkvar	_fmt @ sp[(-32)+-4]
 16753  01311C  0EDC               	movlw	-36
 16754  01311E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16755  013124  0EDD               	movlw	-35
 16756  013126  006F FF8F FFDA     	movff	plusw1,fsr2h
 16757  01312C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16758  013132  006F FF77 FFF7     	movff	postdec2,tblptrh
 16759  013138                     	if	0	;tblptru may be non-zero
 16760  013138                     	endif
 16761  013138                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16762  013138  0E00               	movlw	low (__mediumconst shr (0+16))
 16763  01313A  6EF8               	movwf	tblptru,c
 16764  01313C                     	endif
 16765  01313C  0008               	tblrd		*
 16766  01313E  50F5               	movf	tablat,w,c
 16767  013140  0A58               	xorlw	88
 16768  013142  A4D8               	btfss	status,2,c
 16769  013144  D094               	goto	l13910
 16770  013146                     u13340:
 16771                           
 16772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 16773                           ;stkvar	_fmt @ sp[(-32)+-4]
 16774  013146  0EDC               	movlw	-36
 16775  013148  006F FF8F FFD9     	movff	plusw1,fsr2l
 16776  01314E  0EDD               	movlw	-35
 16777  013150  006F FF8F FFDA     	movff	plusw1,fsr2h
 16778  013156  006F FF7B FFF6     	movff	postinc2,tblptrl
 16779  01315C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16780  013162                     	if	0	;tblptru may be non-zero
 16781  013162                     	endif
 16782  013162                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16783  013162  0E00               	movlw	low (__mediumconst shr (0+16))
 16784  013164  6EF8               	movwf	tblptru,c
 16785  013166                     	endif
 16786                           
 16787                           ;stkvar	_c @ sp[(-32)+31]
 16788  013166  0008               	tblrd		*
 16789  013168  0EFF               	movlw	-1
 16790  01316A  006F FFD7 FFE3     	movff	tablat,plusw1
 16791                           
 16792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 16793                           ;stkvar	_fmt @ sp[(-32)+-4]
 16794  013170  0EDC               	movlw	-36
 16795  013172  006F FF8F FFD9     	movff	plusw1,fsr2l
 16796  013178  0EDD               	movlw	-35
 16797  01317A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16798  013180  2ADE               	incf	postinc2,f,c
 16799  013182  0E00               	movlw	0
 16800  013184  22DD               	addwfc	postdec2,f,c
 16801                           
 16802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 16803                           ;stkvar	_ap @ sp[(-32)+-6]
 16804  013186  0EDA               	movlw	-38
 16805  013188  006F FF8F FFD9     	movff	plusw1,fsr2l
 16806  01318E  0EDB               	movlw	-37
 16807  013190  006F FF8F FFDA     	movff	plusw1,fsr2h
 16808  013196  0E02               	movlw	2
 16809  013198  5EDE               	subwf	postinc2,f,c
 16810  01319A  0E00               	movlw	0
 16811  01319C  5ADD               	subwfb	postdec2,f,c
 16812  01319E  006F FF78  F00B    	movff	postinc2,btemp+10
 16813  0131A4  006F FF74  F00C    	movff	postdec2,btemp+11
 16814  0131AA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16815  0131B0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16816  0131B6  006F FF78  F00B    	movff	postinc2,btemp+10
 16817  0131BC  006F FF74  F00C    	movff	postdec2,btemp+11
 16818  0131C2  500B               	movf	(btemp+10)^0,w,c
 16819  0131C4  6E11               	movwf	(btemp+16)^0,c
 16820  0131C6  500C               	movf	(btemp+11)^0,w,c
 16821  0131C8  6E12               	movwf	(btemp+17)^0,c
 16822  0131CA  6A13               	clrf	(btemp+18)^0,c
 16823  0131CC  6A14               	clrf	(btemp+19)^0,c
 16824  0131CE  6A15               	clrf	(btemp+20)^0,c
 16825  0131D0  6A16               	clrf	(btemp+21)^0,c
 16826  0131D2  6A17               	clrf	(btemp+22)^0,c
 16827  0131D4  6A18               	clrf	(btemp+23)^0,c
 16828                           
 16829                           ;stkvar	_llu @ sp[(-32)+6]
 16830  0131D6  0EE6               	movlw	-26
 16831  0131D8  0060  F047  FFE3   	movff	btemp+16,plusw1
 16832  0131DE  0EE7               	movlw	-25
 16833  0131E0  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16834  0131E6  0EE8               	movlw	-24
 16835  0131E8  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16836  0131EE  0EE9               	movlw	-23
 16837  0131F0  0060  F053  FFE3   	movff	btemp+19,plusw1
 16838  0131F6  0EEA               	movlw	-22
 16839  0131F8  0060  F057  FFE3   	movff	btemp+20,plusw1
 16840  0131FE  0EEB               	movlw	-21
 16841  013200  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16842  013206  0EEC               	movlw	-20
 16843  013208  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16844  01320E  0EED               	movlw	-19
 16845  013210  0060  F063  FFE3   	movff	btemp+23,plusw1
 16846                           
 16847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 16848                           ;stkvar	_c @ sp[(-32)+31]
 16849  013216  0EFF               	movlw	-1
 16850  013218  50E3               	movf	plusw1,w,c
 16851  01321A  6EE6               	movwf	postinc1,c
 16852                           
 16853                           ;stkvar	_llu @ sp[(-33)+6]
 16854  01321C  50E1               	movf	fsr1l,w,c
 16855  01321E  0FE5               	addlw	-27
 16856  013220  6ED9               	movwf	fsr2l,c
 16857  013222  50E2               	movf	fsr1h,w,c
 16858  013224  6EDA               	movwf	fsr2h,c
 16859  013226  0EFF               	movlw	255
 16860  013228  22DA               	addwfc	fsr2h,f,c
 16861  01322A  006F FF7B FFE6     	movff	postinc2,postinc1
 16862  013230  006F FF7B FFE6     	movff	postinc2,postinc1
 16863  013236  006F FF7B FFE6     	movff	postinc2,postinc1
 16864  01323C  006F FF7B FFE6     	movff	postinc2,postinc1
 16865  013242  006F FF7B FFE6     	movff	postinc2,postinc1
 16866  013248  006F FF7B FFE6     	movff	postinc2,postinc1
 16867  01324E  006F FF7B FFE6     	movff	postinc2,postinc1
 16868  013254  006F FF7B FFE6     	movff	postinc2,postinc1
 16869                           
 16870                           ;stkvar	_fp @ sp[(-41)+-2]
 16871  01325A  0ED5               	movlw	-43
 16872  01325C  006F FF8F FFE6     	movff	plusw1,postinc1
 16873  013262  006F FF8F FFE6     	movff	plusw1,postinc1
 16874  013268  EC26  F0B3         	call	_xtoa	;wreg free
 16875  01326C  D105               	goto	l2638
 16876  01326E                     l13910:
 16877                           
 16878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 16879  01326E  0E02               	movlw	2
 16880  013270  6EE6               	movwf	postinc1,c
 16881  013272  0E00               	movlw	0
 16882  013274  6EE6               	movwf	postinc1,c
 16883  013276  0EF6               	movlw	low STR_108
 16884  013278  6EE6               	movwf	postinc1,c
 16885  01327A  0EFF               	movlw	high STR_108
 16886  01327C  6EE6               	movwf	postinc1,c
 16887                           
 16888                           ;stkvar	_fmt @ sp[(-36)+-4]
 16889  01327E  0ED8               	movlw	-40
 16890  013280  006F FF8F FFD9     	movff	plusw1,fsr2l
 16891  013286  0ED9               	movlw	-39
 16892  013288  006F FF8F FFDA     	movff	plusw1,fsr2h
 16893  01328E  006F FF78  F00B    	movff	postinc2,btemp+10
 16894  013294  006F FF74  F00C    	movff	postdec2,btemp+11
 16895  01329A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16896  0132A0  0060  F033  FFE6   	movff	btemp+11,postinc1
 16897  0132A6  ECF9  F0C2         	call	_strncmp	;wreg free
 16898  0132AA  5001               	movf	btemp^0,w,c
 16899  0132AC  1002               	iorwf	(btemp+1)^0,w,c
 16900  0132AE  B4D8               	btfsc	status,2,c
 16901  0132B0  D022               	goto	u13360
 16902  0132B2  0E02               	movlw	2
 16903  0132B4  6EE6               	movwf	postinc1,c
 16904  0132B6  0E00               	movlw	0
 16905  0132B8  6EE6               	movwf	postinc1,c
 16906  0132BA  0EE7               	movlw	low STR_112
 16907  0132BC  6EE6               	movwf	postinc1,c
 16908  0132BE  0EFF               	movlw	high STR_112
 16909  0132C0  6EE6               	movwf	postinc1,c
 16910                           
 16911                           ;stkvar	_fmt @ sp[(-36)+-4]
 16912  0132C2  0ED8               	movlw	-40
 16913  0132C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 16914  0132CA  0ED9               	movlw	-39
 16915  0132CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 16916  0132D2  006F FF78  F00B    	movff	postinc2,btemp+10
 16917  0132D8  006F FF74  F00C    	movff	postdec2,btemp+11
 16918  0132DE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16919  0132E4  0060  F033  FFE6   	movff	btemp+11,postinc1
 16920  0132EA  ECF9  F0C2         	call	_strncmp	;wreg free
 16921  0132EE  5001               	movf	btemp^0,w,c
 16922  0132F0  1002               	iorwf	(btemp+1)^0,w,c
 16923  0132F2  A4D8               	btfss	status,2,c
 16924  0132F4  D058               	goto	l13924
 16925  0132F6                     u13360:
 16926                           
 16927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 16928                           ;stkvar	_fmt @ sp[(-32)+-4]
 16929  0132F6  0EDC               	movlw	-36
 16930  0132F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16931  0132FE  0EDD               	movlw	-35
 16932  013300  006F FF8F FFDA     	movff	plusw1,fsr2h
 16933  013306  006F FF78  F00B    	movff	postinc2,btemp+10
 16934  01330C  006F FF74  F00C    	movff	postdec2,btemp+11
 16935  013312  0E01               	movlw	1
 16936  013314  260B               	addwf	(btemp+10)^0,f,c
 16937  013316  0E00               	movlw	0
 16938  013318  220C               	addwfc	(btemp+11)^0,f,c
 16939  01331A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16940  013320  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16941  013326                     	if	0	;tblptru may be non-zero
 16942  013326                     	endif
 16943  013326                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16944  013326  0E00               	movlw	low (__mediumconst shr (0+16))
 16945  013328  6EF8               	movwf	tblptru,c
 16946  01332A                     	endif
 16947                           
 16948                           ;stkvar	_c @ sp[(-32)+31]
 16949  01332A  0008               	tblrd		*
 16950  01332C  0EFF               	movlw	-1
 16951  01332E  006F FFD7 FFE3     	movff	tablat,plusw1
 16952                           
 16953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 16954                           ;stkvar	_fmt @ sp[(-32)+-4]
 16955  013334  0EDC               	movlw	-36
 16956  013336  006F FF8F FFD9     	movff	plusw1,fsr2l
 16957  01333C  0EDD               	movlw	-35
 16958  01333E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16959  013344  0E02               	movlw	2
 16960  013346  26DE               	addwf	postinc2,f,c
 16961  013348  0E00               	movlw	0
 16962  01334A  22DD               	addwfc	postdec2,f,c
 16963                           
 16964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 16965                           ;stkvar	_ap @ sp[(-32)+-6]
 16966  01334C  0EDA               	movlw	-38
 16967  01334E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16968  013354  0EDB               	movlw	-37
 16969  013356  006F FF8F FFDA     	movff	plusw1,fsr2h
 16970  01335C  0E04               	movlw	4
 16971  01335E  5EDE               	subwf	postinc2,f,c
 16972  013360  0E00               	movlw	0
 16973  013362  5ADD               	subwfb	postdec2,f,c
 16974  013364  006F FF78  F00B    	movff	postinc2,btemp+10
 16975  01336A  006F FF74  F00C    	movff	postdec2,btemp+11
 16976  013370  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16977  013376  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16978  01337C  006F FF78  F009    	movff	postinc2,btemp+8
 16979  013382  006F FF78  F00A    	movff	postinc2,btemp+9
 16980  013388  006F FF78  F00B    	movff	postinc2,btemp+10
 16981  01338E  006F FF78  F00C    	movff	postinc2,btemp+11
 16982  013394  5009               	movf	(btemp+8)^0,w,c
 16983  013396  6E11               	movwf	(btemp+16)^0,c
 16984  013398  500A               	movf	(btemp+9)^0,w,c
 16985  01339A  6E12               	movwf	(btemp+17)^0,c
 16986  01339C  500B               	movf	(btemp+10)^0,w,c
 16987  01339E  6E13               	movwf	(btemp+18)^0,c
 16988  0133A0  500C               	movf	(btemp+11)^0,w,c
 16989  0133A2  6E14               	movwf	(btemp+19)^0,c
 16990  0133A4  D714               	goto	L16
 16991  0133A6                     l13924:
 16992                           
 16993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 16994                           ;stkvar	_fmt @ sp[(-32)+-4]
 16995  0133A6  0EDC               	movlw	-36
 16996  0133A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16997  0133AE  0EDD               	movlw	-35
 16998  0133B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16999  0133B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 17000  0133BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 17001  0133C2                     	if	0	;tblptru may be non-zero
 17002  0133C2                     	endif
 17003  0133C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17004  0133C2  0E00               	movlw	low (__mediumconst shr (0+16))
 17005  0133C4  6EF8               	movwf	tblptru,c
 17006  0133C6                     	endif
 17007  0133C6  0008               	tblrd		*
 17008  0133C8  50F5               	movf	tablat,w,c
 17009  0133CA  0A25               	xorlw	37
 17010  0133CC  A4D8               	btfss	status,2,c
 17011  0133CE  D01A               	goto	l13934
 17012                           
 17013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 17014                           ;stkvar	_fmt @ sp[(-32)+-4]
 17015  0133D0  0EDC               	movlw	-36
 17016  0133D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 17017  0133D8  0EDD               	movlw	-35
 17018  0133DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 17019  0133E0  2ADE               	incf	postinc2,f,c
 17020  0133E2  0E00               	movlw	0
 17021  0133E4  22DD               	addwfc	postdec2,f,c
 17022                           
 17023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 17024                           ;stkvar	_fp @ sp[(-32)+-2]
 17025  0133E6  0EDE               	movlw	-34
 17026  0133E8  006F FF8F FFE6     	movff	plusw1,postinc1
 17027  0133EE  006F FF8F FFE6     	movff	plusw1,postinc1
 17028  0133F4  0E25               	movlw	37
 17029  0133F6  6EE6               	movwf	postinc1,c
 17030  0133F8  0E00               	movlw	0
 17031  0133FA  6EE6               	movwf	postinc1,c
 17032  0133FC  ECF4  F0D0         	call	_fputc	;wreg free
 17033  013400                     l13930:
 17034                           
 17035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 17036  013400  0E01               	movlw	1
 17037  013402  D00C               	goto	L17
 17038  013404                     l13934:
 17039                           
 17040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 17041                           ;stkvar	_fmt @ sp[(-32)+-4]
 17042  013404  0EDC               	movlw	-36
 17043  013406  006F FF8F FFD9     	movff	plusw1,fsr2l
 17044  01340C  0EDD               	movlw	-35
 17045  01340E  006F FF8F FFDA     	movff	plusw1,fsr2h
 17046  013414  2ADE               	incf	postinc2,f,c
 17047  013416  0E00               	movlw	0
 17048  013418  22DD               	addwfc	postdec2,f,c
 17049                           
 17050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 17051  01341A  0E00               	movlw	0
 17052  01341C                     L17:
 17053  01341C  6E01               	movwf	btemp^0,c
 17054  01341E  0E00               	movlw	0
 17055  013420  6E02               	movwf	(btemp+1)^0,c
 17056  013422  D02A               	goto	l2638
 17057  013424                     l13940:
 17058                           
 17059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 17060                           ;stkvar	_fp @ sp[(-32)+-2]
 17061  013424  0EDE               	movlw	-34
 17062  013426  006F FF8F FFE6     	movff	plusw1,postinc1
 17063  01342C  006F FF8F FFE6     	movff	plusw1,postinc1
 17064                           
 17065                           ;stkvar	_fmt @ sp[(-34)+-4]
 17066  013432  0EDA               	movlw	-38
 17067  013434  006F FF8F FFD9     	movff	plusw1,fsr2l
 17068  01343A  0EDB               	movlw	-37
 17069  01343C  006F FF8F FFDA     	movff	plusw1,fsr2h
 17070  013442  006F FF7B FFF6     	movff	postinc2,tblptrl
 17071  013448  006F FF77 FFF7     	movff	postdec2,tblptrh
 17072  01344E                     	if	0	;tblptru may be non-zero
 17073  01344E                     	endif
 17074  01344E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17075  01344E  0E00               	movlw	low (__mediumconst shr (0+16))
 17076  013450  6EF8               	movwf	tblptru,c
 17077  013452                     	endif
 17078  013452  0008               	tblrd		*
 17079  013454  50F5               	movf	tablat,w,c
 17080  013456  6EE6               	movwf	postinc1,c
 17081  013458  0E00               	movlw	0
 17082  01345A  6EE6               	movwf	postinc1,c
 17083  01345C  ECF4  F0D0         	call	_fputc	;wreg free
 17084                           
 17085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 17086                           ;stkvar	_fmt @ sp[(-32)+-4]
 17087  013460  0EDC               	movlw	-36
 17088  013462  006F FF8F FFD9     	movff	plusw1,fsr2l
 17089  013468  0EDD               	movlw	-35
 17090  01346A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17091  013470  2ADE               	incf	postinc2,f,c
 17092  013472  0E00               	movlw	0
 17093  013474  22DD               	addwfc	postdec2,f,c
 17094  013476  D7C4               	goto	l13930
 17095  013478                     l2638:
 17096                           
 17097                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 17098  013478  0EDA               	movlw	218
 17099  01347A  26E1               	addwf	fsr1l,f,c
 17100  01347C  0EFF               	movlw	255
 17101  01347E  22E2               	addwfc	fsr1h,f,c
 17102  013480  0012               	return		;funcret
 17103  013482                     __end_of_vfpfcnvrt:
 17104                           	opt callstack 0
 17105                           
 17106 ;; *************** function _xtoa *****************
 17107 ;; Defined at:
 17108 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17109 ;; Parameters:    Size  Location     Type
 17110 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17111 ;;		 -> f(6), NULL(0), 
 17112 ;;  d               8  [STACK] unsigned long long 
 17113 ;;  x               1  [STACK] unsigned char 
 17114 ;; Auto vars:     Size  Location     Type
 17115 ;;  n               8  [STACK] unsigned long long 
 17116 ;;  c               2  [STACK] int 
 17117 ;;  i               2  [STACK] int 
 17118 ;;  w               2  [STACK] int 
 17119 ;;  p               2  [STACK] int 
 17120 ;; Return value:  Size  Location     Type
 17121 ;;                  2  [STACK] int 
 17122 ;; Registers used:
 17123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17124 ;; Tracked objects:
 17125 ;;		On entry : 0/0
 17126 ;;		On exit  : 0/0
 17127 ;;		Unchanged: 0/0
 17128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17133 ;;Total ram usage:        0 bytes
 17134 ;; Hardware stack levels used:    1
 17135 ;; Hardware stack levels required when called:   20
 17136 ;; This function calls:
 17137 ;;		_isalpha
 17138 ;;		_isupper
 17139 ;;		_pad
 17140 ;;		_toupper
 17141 ;; This function is called by:
 17142 ;;		_vfpfcnvrt
 17143 ;; This function uses a reentrant model
 17144 ;;
 17145                           
 17146                           	psect	text67
 17147  01664C                     __ptext67:
 17148                           	opt callstack 0
 17149  01664C                     _xtoa:
 17150                           	opt callstack 0
 17151                           
 17152                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17153  01664C  0E14               	movlw	20
 17154  01664E  26E1               	addwf	fsr1l,f,c
 17155  016650  0E00               	movlw	0
 17156  016652  22E2               	addwfc	fsr1h,f,c
 17157                           
 17158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 17159                           
 17160                           ;incstack = 0
 17161 ;; hardware stack exceeded
 17162  016654  AE3D               	btfss	(_prec+1)^0,7,c
 17163                           
 17164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 17165  016656  923E               	bcf	_flags^0,1,c
 17166                           
 17167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 17168  016658  BE3D               	btfsc	(_prec+1)^0,7,c
 17169  01665A  D005               	goto	u12900
 17170  01665C  503D               	movf	(_prec+1)^0,w,c
 17171  01665E  E110               	bnz	l13660
 17172  016660  043C               	decf	_prec^0,w,c
 17173  016662  B0D8               	btfsc	status,0,c
 17174  016664  D00D               	goto	l13660
 17175  016666                     u12900:
 17176  016666  0E01               	movlw	1
 17177  016668  6E0B               	movwf	(btemp+10)^0,c
 17178  01666A  0E00               	movlw	0
 17179  01666C  6E0C               	movwf	(btemp+11)^0,c
 17180                           
 17181                           ;stkvar	_p @ sp[(-20)+18]
 17182  01666E  0EFE               	movlw	-2
 17183  016670  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17184  016676  0EFF               	movlw	-1
 17185  016678  0060  F033  FFE3   	movff	btemp+11,plusw1
 17186  01667E  D008               	goto	l2588
 17187  016680                     l13660:
 17188                           
 17189                           ;stkvar	_p @ sp[(-20)+18]
 17190  016680  0EFE               	movlw	-2
 17191  016682  0060  F0F3  FFE3   	movff	_prec,plusw1
 17192  016688  0EFF               	movlw	-1
 17193  01668A  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17194  016690                     l2588:
 17195                           
 17196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 17197                           ;stkvar	_w @ sp[(-20)+16]
 17198  016690  0EFC               	movlw	-4
 17199  016692  0060  F0EB  FFE3   	movff	_width,plusw1
 17200  016698  0EFD               	movlw	-3
 17201  01669A  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17202                           
 17203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 17204  0166A0  A83E               	btfss	_flags^0,4,c
 17205  0166A2  D00B               	goto	l13666
 17206                           
 17207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 17208                           ;stkvar	_w @ sp[(-20)+16]
 17209  0166A4  50E1               	movf	fsr1l,w,c
 17210  0166A6  0FFC               	addlw	-4
 17211  0166A8  6ED9               	movwf	fsr2l,c
 17212  0166AA  50E2               	movf	fsr1h,w,c
 17213  0166AC  6EDA               	movwf	fsr2h,c
 17214  0166AE  0EFF               	movlw	255
 17215  0166B0  22DA               	addwfc	fsr2h,f,c
 17216  0166B2  0EFE               	movlw	254
 17217  0166B4  26DE               	addwf	postinc2,f,c
 17218  0166B6  0EFF               	movlw	255
 17219  0166B8  22DD               	addwfc	postdec2,f,c
 17220  0166BA                     l13666:
 17221                           
 17222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 17223                           ;stkvar	_d @ sp[(-20)+-10]
 17224  0166BA  0EE2               	movlw	226
 17225  0166BC  24E1               	addwf	fsr1l,w,c
 17226  0166BE  6ED9               	movwf	fsr2l,c
 17227  0166C0  0EFF               	movlw	255
 17228  0166C2  20E2               	addwfc	fsr1h,w,c
 17229  0166C4  6EDA               	movwf	fsr2h,c
 17230                           
 17231                           ;stkvar	_n @ sp[(-20)+4]
 17232  0166C6  0E08               	movlw	8
 17233  0166C8  6E01               	movwf	btemp^0,c
 17234  0166CA  0EF0               	movlw	-16
 17235  0166CC                     us1292999:
 17236  0166CC  006F FF7B FFE3     	movff	postinc2,plusw1
 17237  0166D2  28E8               	incf	wreg,w,c
 17238  0166D4  2E01               	decfsz	btemp^0,f,c
 17239  0166D6  D7FA               	bra	us1292999
 17240                           
 17241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 17242  0166D8  0E4F               	movlw	79
 17243  0166DA  6E0B               	movwf	(btemp+10)^0,c
 17244  0166DC  0E00               	movlw	0
 17245  0166DE  6E0C               	movwf	(btemp+11)^0,c
 17246                           
 17247                           ;stkvar	_i @ sp[(-20)+14]
 17248  0166E0  0EFA               	movlw	-6
 17249  0166E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17250  0166E8  0EFB               	movlw	-5
 17251  0166EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17252                           
 17253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 17254  0166F0  0103               	movlb	3	; () banked
 17255  0166F2  6BE3               	clrf	(_dbuf+79)& (0+255),b
 17256                           
 17257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17258  0166F4  D0EE               	goto	l13704
 17259  0166F6                     l13672:
 17260                           
 17261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 17262                           ;stkvar	_i @ sp[(-20)+14]
 17263  0166F6  50E1               	movf	fsr1l,w,c
 17264  0166F8  0FFA               	addlw	-6
 17265  0166FA  6ED9               	movwf	fsr2l,c
 17266  0166FC  50E2               	movf	fsr1h,w,c
 17267  0166FE  6EDA               	movwf	fsr2h,c
 17268  016700  0EFF               	movlw	255
 17269  016702  22DA               	addwfc	fsr2h,f,c
 17270  016704  06DE               	decf	postinc2,f,c
 17271  016706  0E00               	movlw	0
 17272  016708  5ADD               	subwfb	postdec2,f,c
 17273                           
 17274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 17275                           ;stkvar	_n @ sp[(-20)+4]
 17276  01670A  0EF0               	movlw	-16
 17277  01670C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17278  016712  0EF1               	movlw	-15
 17279  016714  006F FF8C  F00C    	movff	plusw1,btemp+11
 17280  01671A  0E0F               	movlw	15
 17281  01671C  160B               	andwf	(btemp+10)^0,f,c
 17282  01671E  0E00               	movlw	0
 17283  016720  160C               	andwf	(btemp+11)^0,f,c
 17284                           
 17285                           ;stkvar	_c @ sp[(-20)+12]
 17286  016722  0EF8               	movlw	-8
 17287  016724  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17288  01672A  0EF9               	movlw	-7
 17289  01672C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17290                           
 17291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 17292                           ;stkvar	_c @ sp[(-20)+12]
 17293  016732  0EF9               	movlw	-7
 17294  016734  BEE3               	btfsc	plusw1,7,c
 17295  016736  D00F               	goto	l13680
 17296  016738  0EF9               	movlw	-7
 17297  01673A  50E3               	movf	plusw1,w,c
 17298  01673C  E108               	bnz	u12930
 17299  01673E  0EF8               	movlw	-8
 17300  016740  006F FF8C  F001    	movff	plusw1,btemp
 17301  016746  0E0A               	movlw	10
 17302  016748  5E01               	subwf	btemp^0,f,c
 17303  01674A  A0D8               	btfss	status,0,c
 17304  01674C  D004               	goto	l13680
 17305  01674E                     u12930:
 17306                           
 17307                           ;stkvar	_c @ sp[(-20)+12]
 17308  01674E  0EF8               	movlw	-8
 17309  016750  50E3               	movf	plusw1,w,c
 17310  016752  0F57               	addlw	87
 17311  016754  D003               	goto	L18
 17312  016756                     l13680:
 17313                           
 17314                           ;stkvar	_c @ sp[(-20)+12]
 17315  016756  0EF8               	movlw	-8
 17316  016758  50E3               	movf	plusw1,w,c
 17317  01675A  0F30               	addlw	48
 17318  01675C                     L18:
 17319  01675C  6E0B               	movwf	(btemp+10)^0,c
 17320  01675E  0EF9               	movlw	-7
 17321  016760  006F FF8C  F00C    	movff	plusw1,btemp+11
 17322  016766  0E00               	movlw	0
 17323  016768  220C               	addwfc	(btemp+11)^0,f,c
 17324                           
 17325                           ;stkvar	_c @ sp[(-20)+12]
 17326  01676A  0EF8               	movlw	-8
 17327  01676C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17328  016772  0EF9               	movlw	-7
 17329  016774  0060  F033  FFE3   	movff	btemp+11,plusw1
 17330  01677A  0EBF               	movlw	191
 17331  01677C  6E0B               	movwf	(btemp+10)^0,c
 17332  01677E  0EFF               	movlw	255
 17333  016780  6E0C               	movwf	(btemp+11)^0,c
 17334                           
 17335                           ;stkvar	_x @ sp[(-20)+-11]
 17336  016782  0EE1               	movlw	-31
 17337  016784  50E3               	movf	plusw1,w,c
 17338  016786  6E09               	movwf	(btemp+8)^0,c
 17339  016788  6A0A               	clrf	(btemp+9)^0,c
 17340  01678A  500B               	movf	(btemp+10)^0,w,c
 17341  01678C  2609               	addwf	(btemp+8)^0,f,c
 17342  01678E  500C               	movf	(btemp+11)^0,w,c
 17343  016790  220A               	addwfc	(btemp+9)^0,f,c
 17344  016792  500A               	movf	(btemp+9)^0,w,c
 17345  016794  E106               	bnz	u12940
 17346  016796  0E1A               	movlw	26
 17347  016798  5C09               	subwf	(btemp+8)^0,w,c
 17348  01679A  B0D8               	btfsc	status,0,c
 17349  01679C  D002               	goto	u12940
 17350  01679E  0E01               	movlw	1
 17351  0167A0  D001               	goto	u12950
 17352  0167A2                     u12940:
 17353  0167A2  0E00               	movlw	0
 17354  0167A4                     u12950:
 17355  0167A4  6E0B               	movwf	(btemp+10)^0,c
 17356  0167A6  6A0C               	clrf	(btemp+11)^0,c
 17357                           
 17358                           ;stkvar	_xtoa$6794 @ sp[(-20)+2]
 17359  0167A8  0EEE               	movlw	-18
 17360  0167AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17361  0167B0  0EEF               	movlw	-17
 17362  0167B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17363                           
 17364                           ;stkvar	_xtoa$6794 @ sp[(-20)+2]
 17365  0167B8  0EEE               	movlw	-18
 17366  0167BA  006F FF8C  F001    	movff	plusw1,btemp
 17367  0167C0  0EEF               	movlw	-17
 17368  0167C2  50E3               	movf	plusw1,w,c
 17369  0167C4  1001               	iorwf	btemp^0,w,c
 17370  0167C6  B4D8               	btfsc	status,2,c
 17371  0167C8  D041               	goto	l13696
 17372  0167CA  0E9F               	movlw	159
 17373  0167CC  6E0B               	movwf	(btemp+10)^0,c
 17374  0167CE  0EFF               	movlw	255
 17375  0167D0  6E0C               	movwf	(btemp+11)^0,c
 17376                           
 17377                           ;stkvar	_c @ sp[(-20)+12]
 17378  0167D2  0EF8               	movlw	-8
 17379  0167D4  006F FF8C  F009    	movff	plusw1,btemp+8
 17380  0167DA  0EF9               	movlw	-7
 17381  0167DC  006F FF8C  F00A    	movff	plusw1,btemp+9
 17382  0167E2  0E20               	movlw	32
 17383  0167E4  1209               	iorwf	(btemp+8)^0,f,c
 17384  0167E6  0E00               	movlw	0
 17385  0167E8  120A               	iorwf	(btemp+9)^0,f,c
 17386  0167EA  500B               	movf	(btemp+10)^0,w,c
 17387  0167EC  2609               	addwf	(btemp+8)^0,f,c
 17388  0167EE  500C               	movf	(btemp+11)^0,w,c
 17389  0167F0  220A               	addwfc	(btemp+9)^0,f,c
 17390  0167F2  500A               	movf	(btemp+9)^0,w,c
 17391  0167F4  E106               	bnz	u12970
 17392  0167F6  0E1A               	movlw	26
 17393  0167F8  5C09               	subwf	(btemp+8)^0,w,c
 17394  0167FA  B0D8               	btfsc	status,0,c
 17395  0167FC  D002               	goto	u12970
 17396  0167FE  0E01               	movlw	1
 17397  016800  D001               	goto	u12980
 17398  016802                     u12970:
 17399  016802  0E00               	movlw	0
 17400  016804                     u12980:
 17401  016804  6E0B               	movwf	(btemp+10)^0,c
 17402  016806  6A0C               	clrf	(btemp+11)^0,c
 17403                           
 17404                           ;stkvar	_xtoa$6795 @ sp[(-20)+0]
 17405  016808  0EEC               	movlw	-20
 17406  01680A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17407  016810  0EED               	movlw	-19
 17408  016812  0060  F033  FFE3   	movff	btemp+11,plusw1
 17409                           
 17410                           ;stkvar	_xtoa$6795 @ sp[(-20)+0]
 17411  016818  0EEC               	movlw	-20
 17412  01681A  006F FF8C  F001    	movff	plusw1,btemp
 17413  016820  0EED               	movlw	-19
 17414  016822  50E3               	movf	plusw1,w,c
 17415  016824  1001               	iorwf	btemp^0,w,c
 17416  016826  B4D8               	btfsc	status,2,c
 17417  016828  D011               	goto	l13696
 17418                           
 17419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 17420                           ;stkvar	_c @ sp[(-20)+12]
 17421  01682A  0EF8               	movlw	-8
 17422  01682C  006F FF8F FFE6     	movff	plusw1,postinc1
 17423  016832  006F FF8F FFE6     	movff	plusw1,postinc1
 17424  016838  ECC5  F0DD         	call	_toupper	;wreg free
 17425                           
 17426                           ;stkvar	_c @ sp[(-20)+12]
 17427  01683C  0EF8               	movlw	-8
 17428  01683E  0060  F007  FFE3   	movff	btemp,plusw1
 17429  016844  0EF9               	movlw	-7
 17430  016846  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17431  01684C                     l13696:
 17432                           
 17433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 17434                           ;stkvar	_c @ sp[(-20)+12]
 17435                           ;stkvar	_i @ sp[(-20)+14]
 17436  01684C  0EFA               	movlw	-6
 17437  01684E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17438  016854  0EFB               	movlw	-5
 17439  016856  006F FF8C  F00C    	movff	plusw1,btemp+11
 17440  01685C  0E94               	movlw	low _dbuf
 17441  01685E  240B               	addwf	(btemp+10)^0,w,c
 17442  016860  6ED9               	movwf	fsr2l,c
 17443  016862  0E03               	movlw	high _dbuf
 17444  016864  200C               	addwfc	(btemp+11)^0,w,c
 17445  016866  6EDA               	movwf	fsr2h,c
 17446  016868  0EF8               	movlw	-8
 17447  01686A  006F FF8F FFDF     	movff	plusw1,indf2
 17448                           
 17449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 17450                           ;stkvar	_p @ sp[(-20)+18]
 17451  016870  50E1               	movf	fsr1l,w,c
 17452  016872  0FFE               	addlw	-2
 17453  016874  6ED9               	movwf	fsr2l,c
 17454  016876  50E2               	movf	fsr1h,w,c
 17455  016878  6EDA               	movwf	fsr2h,c
 17456  01687A  0EFF               	movlw	255
 17457  01687C  22DA               	addwfc	fsr2h,f,c
 17458  01687E  06DE               	decf	postinc2,f,c
 17459  016880  0E00               	movlw	0
 17460  016882  5ADD               	subwfb	postdec2,f,c
 17461                           
 17462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 17463                           ;stkvar	_w @ sp[(-20)+16]
 17464  016884  50E1               	movf	fsr1l,w,c
 17465  016886  0FFC               	addlw	-4
 17466  016888  6ED9               	movwf	fsr2l,c
 17467  01688A  50E2               	movf	fsr1h,w,c
 17468  01688C  6EDA               	movwf	fsr2h,c
 17469  01688E  0EFF               	movlw	255
 17470  016890  22DA               	addwfc	fsr2h,f,c
 17471  016892  06DE               	decf	postinc2,f,c
 17472  016894  0E00               	movlw	0
 17473  016896  5ADD               	subwfb	postdec2,f,c
 17474                           
 17475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 17476  016898  0E04               	movlw	4
 17477  01689A  6E0C               	movwf	(btemp+11)^0,c
 17478                           
 17479                           ;stkvar	_n @ sp[(-20)+4]
 17480  01689C  50E1               	movf	fsr1l,w,c
 17481  01689E  0FF0               	addlw	-16
 17482  0168A0  6ED9               	movwf	fsr2l,c
 17483  0168A2  50E2               	movf	fsr1h,w,c
 17484  0168A4  6EDA               	movwf	fsr2h,c
 17485  0168A6  0EFF               	movlw	255
 17486  0168A8  22DA               	addwfc	fsr2h,f,c
 17487  0168AA  280C               	incf	(btemp+11)^0,w,c
 17488  0168AC  52DE               	movf	postinc2,f,c
 17489  0168AE  D00F               	goto	u13000
 17490  0168B0                     u13005:
 17491  0168B0  52DE               	movf	postinc2,f,c
 17492  0168B2  52DE               	movf	postinc2,f,c
 17493  0168B4  52DE               	movf	postinc2,f,c
 17494  0168B6  52DE               	movf	postinc2,f,c
 17495  0168B8  52DE               	movf	postinc2,f,c
 17496  0168BA  52DE               	movf	postinc2,f,c
 17497  0168BC  90D8               	bcf	status,0,c
 17498  0168BE  32DD               	rrcf	postdec2,f,c
 17499  0168C0  32DD               	rrcf	postdec2,f,c
 17500  0168C2  32DD               	rrcf	postdec2,f,c
 17501  0168C4  32DD               	rrcf	postdec2,f,c
 17502  0168C6  32DD               	rrcf	postdec2,f,c
 17503  0168C8  32DD               	rrcf	postdec2,f,c
 17504  0168CA  32DD               	rrcf	postdec2,f,c
 17505  0168CC  32DE               	rrcf	postinc2,f,c
 17506  0168CE                     u13000:
 17507  0168CE  2EE8               	decfsz	wreg,f,c
 17508  0168D0  D7EF               	goto	u13005
 17509  0168D2                     l13704:
 17510                           
 17511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17512                           ;stkvar	_i @ sp[(-20)+14]
 17513  0168D2  0EFB               	movlw	-5
 17514  0168D4  BEE3               	btfsc	plusw1,7,c
 17515  0168D6  D03A               	goto	u13050
 17516  0168D8  0EFB               	movlw	-5
 17517  0168DA  50E3               	movf	plusw1,w,c
 17518  0168DC  E108               	bnz	u13010
 17519  0168DE  0EFA               	movlw	-6
 17520  0168E0  006F FF8C  F001    	movff	plusw1,btemp
 17521  0168E6  0E02               	movlw	2
 17522  0168E8  5E01               	subwf	btemp^0,f,c
 17523  0168EA  A0D8               	btfss	status,0,c
 17524  0168EC  D02F               	goto	u13050
 17525  0168EE                     u13010:
 17526                           
 17527                           ;stkvar	_n @ sp[(-20)+4]
 17528  0168EE  0EF0               	movlw	-16
 17529  0168F0  50E3               	movf	plusw1,w,c
 17530  0168F2  E115               	bnz	u13021
 17531  0168F4  0EF1               	movlw	-15
 17532  0168F6  50E3               	movf	plusw1,w,c
 17533  0168F8  E112               	bnz	u13021
 17534  0168FA  0EF2               	movlw	-14
 17535  0168FC  50E3               	movf	plusw1,w,c
 17536  0168FE  E10F               	bnz	u13021
 17537  016900  0EF3               	movlw	-13
 17538  016902  50E3               	movf	plusw1,w,c
 17539  016904  E10C               	bnz	u13021
 17540  016906  0EF4               	movlw	-12
 17541  016908  50E3               	movf	plusw1,w,c
 17542  01690A  E109               	bnz	u13021
 17543  01690C  0EF5               	movlw	-11
 17544  01690E  50E3               	movf	plusw1,w,c
 17545  016910  E106               	bnz	u13021
 17546  016912  0EF6               	movlw	-10
 17547  016914  50E3               	movf	plusw1,w,c
 17548  016916  E103               	bnz	u13021
 17549  016918  0EF7               	movlw	-9
 17550  01691A  50E3               	movf	plusw1,w,c
 17551  01691C  A4D8               	btfss	status,2,c
 17552  01691E                     u13021:
 17553  01691E  D6EB               	goto	l13672
 17554                           
 17555                           ;stkvar	_p @ sp[(-20)+18]
 17556  016920  0EFF               	movlw	-1
 17557  016922  BEE3               	btfsc	plusw1,7,c
 17558  016924  D007               	goto	u13030
 17559  016926  0EFF               	movlw	-1
 17560  016928  50E3               	movf	plusw1,w,c
 17561  01692A  E103               	bnz	u13031
 17562  01692C  0EFE               	movlw	-2
 17563  01692E  04E3               	decf	plusw1,w,c
 17564  016930  B0D8               	btfsc	status,0,c
 17565  016932                     u13031:
 17566  016932  D6E1               	goto	l13672
 17567  016934                     u13030:
 17568                           
 17569                           ;stkvar	_w @ sp[(-20)+16]
 17570  016934  0EFD               	movlw	-3
 17571  016936  BEE3               	btfsc	plusw1,7,c
 17572  016938  D009               	goto	u13050
 17573  01693A  0EFD               	movlw	-3
 17574  01693C  50E3               	movf	plusw1,w,c
 17575  01693E  E104               	bnz	u13040
 17576  016940  0EFC               	movlw	-4
 17577  016942  04E3               	decf	plusw1,w,c
 17578  016944  A0D8               	btfss	status,0,c
 17579  016946  D002               	goto	u13050
 17580  016948                     u13040:
 17581  016948  B23E               	btfsc	_flags^0,1,c
 17582  01694A  D6D5               	goto	l13672
 17583  01694C                     u13050:
 17584                           
 17585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 17586  01694C  A83E               	btfss	_flags^0,4,c
 17587  01694E  D036               	goto	l13720
 17588                           
 17589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 17590                           ;stkvar	_i @ sp[(-20)+14]
 17591  016950  50E1               	movf	fsr1l,w,c
 17592  016952  0FFA               	addlw	-6
 17593  016954  6ED9               	movwf	fsr2l,c
 17594  016956  50E2               	movf	fsr1h,w,c
 17595  016958  6EDA               	movwf	fsr2h,c
 17596  01695A  0EFF               	movlw	255
 17597  01695C  22DA               	addwfc	fsr2h,f,c
 17598  01695E  06DE               	decf	postinc2,f,c
 17599  016960  0E00               	movlw	0
 17600  016962  5ADD               	subwfb	postdec2,f,c
 17601                           
 17602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 17603                           ;stkvar	_x @ sp[(-20)+-11]
 17604                           ;stkvar	_i @ sp[(-20)+14]
 17605  016964  0EFA               	movlw	-6
 17606  016966  006F FF8C  F00B    	movff	plusw1,btemp+10
 17607  01696C  0EFB               	movlw	-5
 17608  01696E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17609  016974  0E94               	movlw	low _dbuf
 17610  016976  240B               	addwf	(btemp+10)^0,w,c
 17611  016978  6ED9               	movwf	fsr2l,c
 17612  01697A  0E03               	movlw	high _dbuf
 17613  01697C  200C               	addwfc	(btemp+11)^0,w,c
 17614  01697E  6EDA               	movwf	fsr2h,c
 17615  016980  0EE1               	movlw	-31
 17616  016982  006F FF8F FFDF     	movff	plusw1,indf2
 17617                           
 17618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 17619                           ;stkvar	_i @ sp[(-20)+14]
 17620  016988  50E1               	movf	fsr1l,w,c
 17621  01698A  0FFA               	addlw	-6
 17622  01698C  6ED9               	movwf	fsr2l,c
 17623  01698E  50E2               	movf	fsr1h,w,c
 17624  016990  6EDA               	movwf	fsr2h,c
 17625  016992  0EFF               	movlw	255
 17626  016994  22DA               	addwfc	fsr2h,f,c
 17627  016996  06DE               	decf	postinc2,f,c
 17628  016998  0E00               	movlw	0
 17629  01699A  5ADD               	subwfb	postdec2,f,c
 17630                           
 17631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 17632                           ;stkvar	_i @ sp[(-20)+14]
 17633  01699C  0EFA               	movlw	-6
 17634  01699E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17635  0169A4  0EFB               	movlw	-5
 17636  0169A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17637  0169AC  0E94               	movlw	low _dbuf
 17638  0169AE  240B               	addwf	(btemp+10)^0,w,c
 17639  0169B0  6ED9               	movwf	fsr2l,c
 17640  0169B2  0E03               	movlw	high _dbuf
 17641  0169B4  200C               	addwfc	(btemp+11)^0,w,c
 17642  0169B6  6EDA               	movwf	fsr2h,c
 17643  0169B8  0E30               	movlw	48
 17644  0169BA  6EDF               	movwf	indf2,c
 17645  0169BC                     l13720:
 17646                           
 17647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 17648                           ;stkvar	_w @ sp[(-20)+16]
 17649  0169BC  0EFC               	movlw	-4
 17650  0169BE  006F FF8F FFE6     	movff	plusw1,postinc1
 17651  0169C4  006F FF8F FFE6     	movff	plusw1,postinc1
 17652                           
 17653                           ;stkvar	_i @ sp[(-22)+14]
 17654  0169CA  0E94               	movlw	low _dbuf
 17655  0169CC  6E0B               	movwf	(btemp+10)^0,c
 17656  0169CE  0E03               	movlw	high _dbuf
 17657  0169D0  6E0C               	movwf	(btemp+11)^0,c
 17658  0169D2  0EF8               	movlw	-8
 17659  0169D4  50E3               	movf	plusw1,w,c
 17660  0169D6  260B               	addwf	(btemp+10)^0,f,c
 17661  0169D8  0EF9               	movlw	-7
 17662  0169DA  50E3               	movf	plusw1,w,c
 17663  0169DC  220C               	addwfc	(btemp+11)^0,f,c
 17664  0169DE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17665  0169E4  0060  F033  FFE6   	movff	btemp+11,postinc1
 17666                           
 17667                           ;stkvar	_fp @ sp[(-24)+-2]
 17668  0169EA  0EE6               	movlw	-26
 17669  0169EC  006F FF8F FFE6     	movff	plusw1,postinc1
 17670  0169F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17671  0169F8  ECBC  F0D3         	call	_pad	;wreg free
 17672                           
 17673                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 17674  0169FC  0EE1               	movlw	225
 17675  0169FE  26E1               	addwf	fsr1l,f,c
 17676  016A00  0EFF               	movlw	255
 17677  016A02  22E2               	addwfc	fsr1h,f,c
 17678  016A04  0012               	return		;funcret
 17679  016A06                     __end_of_xtoa:
 17680                           	opt callstack 0
 17681                           
 17682 ;; *************** function _toupper *****************
 17683 ;; Defined at:
 17684 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 17685 ;; Parameters:    Size  Location     Type
 17686 ;;  c               2  [STACK] int 
 17687 ;; Auto vars:     Size  Location     Type
 17688 ;;		None
 17689 ;; Return value:  Size  Location     Type
 17690 ;;                  2  [STACK] int 
 17691 ;; Registers used:
 17692 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17693 ;; Tracked objects:
 17694 ;;		On entry : 0/3
 17695 ;;		On exit  : 0/0
 17696 ;;		Unchanged: 0/0
 17697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17702 ;;Total ram usage:        0 bytes
 17703 ;; Hardware stack levels used:    1
 17704 ;; Hardware stack levels required when called:   16
 17705 ;; This function calls:
 17706 ;;		_islower
 17707 ;; This function is called by:
 17708 ;;		_xtoa
 17709 ;; This function uses a reentrant model
 17710 ;;
 17711                           
 17712                           	psect	text68
 17713  01BB8A                     __ptext68:
 17714                           	opt callstack 0
 17715  01BB8A                     _toupper:
 17716                           	opt callstack 0
 17717                           
 17718                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17719  01BB8A  52E6               	movf	postinc1,f,c
 17720  01BB8C  52E6               	movf	postinc1,f,c
 17721                           
 17722                           ;stkvar	_c @ sp[(-2)+-2]
 17723                           
 17724                           ;incstack = 0
 17725 ;; hardware stack exceeded
 17726  01BB8E  0EFC               	movlw	-4
 17727  01BB90  50E3               	movf	plusw1,w,c
 17728  01BB92  0F9F               	addlw	159
 17729  01BB94  6E0B               	movwf	(btemp+10)^0,c
 17730  01BB96  0EFD               	movlw	-3
 17731  01BB98  006F FF8C  F00C    	movff	plusw1,btemp+11
 17732  01BB9E  0EFF               	movlw	255
 17733  01BBA0  220C               	addwfc	(btemp+11)^0,f,c
 17734  01BBA2  500C               	movf	(btemp+11)^0,w,c
 17735  01BBA4  E106               	bnz	u6790
 17736  01BBA6  0E1A               	movlw	26
 17737  01BBA8  5C0B               	subwf	(btemp+10)^0,w,c
 17738  01BBAA  B0D8               	btfsc	status,0,c
 17739  01BBAC  D002               	goto	u6790
 17740  01BBAE  0E01               	movlw	1
 17741  01BBB0  D001               	goto	u6800
 17742  01BBB2                     u6790:
 17743  01BBB2  0E00               	movlw	0
 17744  01BBB4                     u6800:
 17745  01BBB4  6E0B               	movwf	(btemp+10)^0,c
 17746  01BBB6  6A0C               	clrf	(btemp+11)^0,c
 17747                           
 17748                           ;stkvar	_toupper$7601 @ sp[(-2)+0]
 17749  01BBB8  0EFE               	movlw	-2
 17750  01BBBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17751  01BBC0  0EFF               	movlw	-1
 17752  01BBC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17753                           
 17754                           ;stkvar	_toupper$7601 @ sp[(-2)+0]
 17755  01BBC8  0EFE               	movlw	-2
 17756  01BBCA  006F FF8C  F001    	movff	plusw1,btemp
 17757  01BBD0  0EFF               	movlw	-1
 17758  01BBD2  50E3               	movf	plusw1,w,c
 17759  01BBD4  1001               	iorwf	btemp^0,w,c
 17760  01BBD6  B4D8               	btfsc	status,2,c
 17761  01BBD8  D00D               	goto	l8866
 17762                           
 17763                           ;stkvar	_c @ sp[(-2)+-2]
 17764  01BBDA  0EFC               	movlw	-4
 17765  01BBDC  006F FF8C  F001    	movff	plusw1,btemp
 17766  01BBE2  0EFD               	movlw	-3
 17767  01BBE4  006F FF8C  F002    	movff	plusw1,btemp+1
 17768  01BBEA  0E5F               	movlw	95
 17769  01BBEC  1601               	andwf	btemp^0,f,c
 17770  01BBEE  0E00               	movlw	0
 17771  01BBF0  1602               	andwf	(btemp+1)^0,f,c
 17772  01BBF2  D008               	goto	l3755
 17773  01BBF4                     l8866:
 17774                           
 17775                           ;stkvar	_c @ sp[(-2)+-2]
 17776  01BBF4  0EFC               	movlw	-4
 17777  01BBF6  006F FF8C  F001    	movff	plusw1,btemp
 17778  01BBFC  0EFD               	movlw	-3
 17779  01BBFE  006F FF8C  F002    	movff	plusw1,btemp+1
 17780  01BC04                     l3755:
 17781                           
 17782                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17783  01BC04  52E5               	movf	postdec1,f,c
 17784  01BC06  52E5               	movf	postdec1,f,c
 17785  01BC08  52E5               	movf	postdec1,f,c
 17786  01BC0A  52E5               	movf	postdec1,f,c
 17787  01BC0C  0012               	return		;funcret
 17788  01BC0E                     __end_of_toupper:
 17789                           	opt callstack 0
 17790                           
 17791 ;; *************** function _islower *****************
 17792 ;; Defined at:
 17793 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 17794 ;; Parameters:    Size  Location     Type
 17795 ;;  c               2  [STACK] int 
 17796 ;; Auto vars:     Size  Location     Type
 17797 ;;		None
 17798 ;; Return value:  Size  Location     Type
 17799 ;;                  2  [STACK] int 
 17800 ;; Registers used:
 17801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17802 ;; Tracked objects:
 17803 ;;		On entry : 0/0
 17804 ;;		On exit  : 0/0
 17805 ;;		Unchanged: 0/0
 17806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17811 ;;Total ram usage:        0 bytes
 17812 ;; Hardware stack levels used:    1
 17813 ;; Hardware stack levels required when called:   15
 17814 ;; This function calls:
 17815 ;;		Nothing
 17816 ;; This function is called by:
 17817 ;;		_toupper
 17818 ;; This function uses a reentrant model
 17819 ;;
 17820                           
 17821                           	psect	text69
 17822  01CBAC                     __ptext69:
 17823                           	opt callstack 0
 17824  01CBAC                     _islower:
 17825                           	opt callstack 0
 17826                           
 17827                           ;stkvar	_c @ sp[(0)+-2]
 17828                           
 17829                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17830                           ;incstack = 0
 17831 ;; hardware stack exceeded
 17832  01CBAC  0EFE               	movlw	-2
 17833  01CBAE  50E3               	movf	plusw1,w,c
 17834  01CBB0  0F9F               	addlw	159
 17835  01CBB2  6E0B               	movwf	(btemp+10)^0,c
 17836  01CBB4  0EFF               	movlw	-1
 17837  01CBB6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17838  01CBBC  0EFF               	movlw	255
 17839  01CBBE  220C               	addwfc	(btemp+11)^0,f,c
 17840  01CBC0  500C               	movf	(btemp+11)^0,w,c
 17841  01CBC2  E106               	bnz	u6430
 17842  01CBC4  0E1A               	movlw	26
 17843  01CBC6  5C0B               	subwf	(btemp+10)^0,w,c
 17844  01CBC8  B0D8               	btfsc	status,0,c
 17845  01CBCA  D002               	goto	u6430
 17846  01CBCC  0E01               	movlw	1
 17847  01CBCE  D001               	goto	u6440
 17848  01CBD0                     u6430:
 17849  01CBD0  0E00               	movlw	0
 17850  01CBD2                     u6440:
 17851  01CBD2  6E01               	movwf	btemp^0,c
 17852  01CBD4  6A02               	clrf	(btemp+1)^0,c
 17853                           
 17854                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17855  01CBD6  52E5               	movf	postdec1,f,c
 17856  01CBD8  52E5               	movf	postdec1,f,c
 17857  01CBDA  0012               	return		;funcret
 17858  01CBDC                     __end_of_islower:
 17859                           	opt callstack 0
 17860                           
 17861 ;; *************** function _isalpha *****************
 17862 ;; Defined at:
 17863 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 17864 ;; Parameters:    Size  Location     Type
 17865 ;;  c               2  [STACK] int 
 17866 ;; Auto vars:     Size  Location     Type
 17867 ;;		None
 17868 ;; Return value:  Size  Location     Type
 17869 ;;                  2  [STACK] int 
 17870 ;; Registers used:
 17871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 17872 ;; Tracked objects:
 17873 ;;		On entry : 0/0
 17874 ;;		On exit  : 0/0
 17875 ;;		Unchanged: 0/0
 17876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17881 ;;Total ram usage:        0 bytes
 17882 ;; Hardware stack levels used:    1
 17883 ;; Hardware stack levels required when called:   15
 17884 ;; This function calls:
 17885 ;;		Nothing
 17886 ;; This function is called by:
 17887 ;;		_xtoa
 17888 ;; This function uses a reentrant model
 17889 ;;
 17890                           
 17891                           	psect	text70
 17892  01C722                     __ptext70:
 17893                           	opt callstack 0
 17894  01C722                     _isalpha:
 17895                           	opt callstack 0
 17896                           
 17897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17898                           ;incstack = 0
 17899 ;; hardware stack exceeded
 17900  01C722  0E9F               	movlw	159
 17901  01C724  6E0B               	movwf	(btemp+10)^0,c
 17902  01C726  0EFF               	movlw	255
 17903  01C728  6E0C               	movwf	(btemp+11)^0,c
 17904                           
 17905                           ;stkvar	_c @ sp[(0)+-2]
 17906  01C72A  0EFE               	movlw	-2
 17907  01C72C  006F FF8C  F009    	movff	plusw1,btemp+8
 17908  01C732  0EFF               	movlw	-1
 17909  01C734  006F FF8C  F00A    	movff	plusw1,btemp+9
 17910  01C73A  0E20               	movlw	32
 17911  01C73C  1209               	iorwf	(btemp+8)^0,f,c
 17912  01C73E  0E00               	movlw	0
 17913  01C740  120A               	iorwf	(btemp+9)^0,f,c
 17914  01C742  500B               	movf	(btemp+10)^0,w,c
 17915  01C744  2609               	addwf	(btemp+8)^0,f,c
 17916  01C746  500C               	movf	(btemp+11)^0,w,c
 17917  01C748  220A               	addwfc	(btemp+9)^0,f,c
 17918  01C74A  500A               	movf	(btemp+9)^0,w,c
 17919  01C74C  E106               	bnz	u6770
 17920  01C74E  0E1A               	movlw	26
 17921  01C750  5C09               	subwf	(btemp+8)^0,w,c
 17922  01C752  B0D8               	btfsc	status,0,c
 17923  01C754  D002               	goto	u6770
 17924  01C756  0E01               	movlw	1
 17925  01C758  D001               	goto	u6780
 17926  01C75A                     u6770:
 17927  01C75A  0E00               	movlw	0
 17928  01C75C                     u6780:
 17929  01C75C  6E01               	movwf	btemp^0,c
 17930  01C75E  6A02               	clrf	(btemp+1)^0,c
 17931                           
 17932                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17933  01C760  52E5               	movf	postdec1,f,c
 17934  01C762  52E5               	movf	postdec1,f,c
 17935  01C764  0012               	return		;funcret
 17936  01C766                     __end_of_isalpha:
 17937                           	opt callstack 0
 17938                           
 17939 ;; *************** function _utoa *****************
 17940 ;; Defined at:
 17941 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17942 ;; Parameters:    Size  Location     Type
 17943 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17944 ;;		 -> f(6), NULL(0), 
 17945 ;;  d               8  [STACK] unsigned long long 
 17946 ;; Auto vars:     Size  Location     Type
 17947 ;;  n               8  [STACK] unsigned long long 
 17948 ;;  i               2  [STACK] int 
 17949 ;;  w               2  [STACK] int 
 17950 ;;  p               2  [STACK] int 
 17951 ;; Return value:  Size  Location     Type
 17952 ;;                  2  [STACK] int 
 17953 ;; Registers used:
 17954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17955 ;; Tracked objects:
 17956 ;;		On entry : 0/0
 17957 ;;		On exit  : 0/0
 17958 ;;		Unchanged: 0/0
 17959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17964 ;;Total ram usage:        0 bytes
 17965 ;; Hardware stack levels used:    1
 17966 ;; Hardware stack levels required when called:   20
 17967 ;; This function calls:
 17968 ;;		___lodiv
 17969 ;;		___lomod
 17970 ;;		_pad
 17971 ;; This function is called by:
 17972 ;;		_vfpfcnvrt
 17973 ;; This function uses a reentrant model
 17974 ;;
 17975                           
 17976                           	psect	text71
 17977  0170B6                     __ptext71:
 17978                           	opt callstack 0
 17979  0170B6                     _utoa:
 17980                           	opt callstack 0
 17981                           
 17982                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17983  0170B6  0E0E               	movlw	14
 17984  0170B8  26E1               	addwf	fsr1l,f,c
 17985  0170BA  0E00               	movlw	0
 17986  0170BC  22E2               	addwfc	fsr1h,f,c
 17987                           
 17988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 17989                           
 17990                           ;incstack = 0
 17991 ;; hardware stack exceeded
 17992  0170BE  AE3D               	btfss	(_prec+1)^0,7,c
 17993                           
 17994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 17995  0170C0  923E               	bcf	_flags^0,1,c
 17996                           
 17997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 17998  0170C2  BE3D               	btfsc	(_prec+1)^0,7,c
 17999  0170C4  D005               	goto	u12820
 18000  0170C6  503D               	movf	(_prec+1)^0,w,c
 18001  0170C8  E110               	bnz	l13620
 18002  0170CA  043C               	decf	_prec^0,w,c
 18003  0170CC  B0D8               	btfsc	status,0,c
 18004  0170CE  D00D               	goto	l13620
 18005  0170D0                     u12820:
 18006  0170D0  0E01               	movlw	1
 18007  0170D2  6E0B               	movwf	(btemp+10)^0,c
 18008  0170D4  0E00               	movlw	0
 18009  0170D6  6E0C               	movwf	(btemp+11)^0,c
 18010                           
 18011                           ;stkvar	_p @ sp[(-14)+12]
 18012  0170D8  0EFE               	movlw	-2
 18013  0170DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18014  0170E0  0EFF               	movlw	-1
 18015  0170E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18016  0170E8  D008               	goto	l2573
 18017  0170EA                     l13620:
 18018                           
 18019                           ;stkvar	_p @ sp[(-14)+12]
 18020  0170EA  0EFE               	movlw	-2
 18021  0170EC  0060  F0F3  FFE3   	movff	_prec,plusw1
 18022  0170F2  0EFF               	movlw	-1
 18023  0170F4  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 18024  0170FA                     l2573:
 18025                           
 18026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 18027                           ;stkvar	_w @ sp[(-14)+10]
 18028  0170FA  0EFC               	movlw	-4
 18029  0170FC  0060  F0EB  FFE3   	movff	_width,plusw1
 18030  017102  0EFD               	movlw	-3
 18031  017104  0060  F0EF  FFE3   	movff	_width+1,plusw1
 18032                           
 18033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 18034                           ;stkvar	_d @ sp[(-14)+-10]
 18035  01710A  0EE8               	movlw	232
 18036  01710C  24E1               	addwf	fsr1l,w,c
 18037  01710E  6ED9               	movwf	fsr2l,c
 18038  017110  0EFF               	movlw	255
 18039  017112  20E2               	addwfc	fsr1h,w,c
 18040  017114  6EDA               	movwf	fsr2h,c
 18041                           
 18042                           ;stkvar	_n @ sp[(-14)+0]
 18043  017116  0E08               	movlw	8
 18044  017118  6E01               	movwf	btemp^0,c
 18045  01711A  0EF2               	movlw	-14
 18046  01711C                     us1283999:
 18047  01711C  006F FF7B FFE3     	movff	postinc2,plusw1
 18048  017122  28E8               	incf	wreg,w,c
 18049  017124  2E01               	decfsz	btemp^0,f,c
 18050  017126  D7FA               	bra	us1283999
 18051                           
 18052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 18053  017128  0E4F               	movlw	79
 18054  01712A  6E0B               	movwf	(btemp+10)^0,c
 18055  01712C  0E00               	movlw	0
 18056  01712E  6E0C               	movwf	(btemp+11)^0,c
 18057                           
 18058                           ;stkvar	_i @ sp[(-14)+8]
 18059  017130  0EFA               	movlw	-6
 18060  017132  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18061  017138  0EFB               	movlw	-5
 18062  01713A  0060  F033  FFE3   	movff	btemp+11,plusw1
 18063                           
 18064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 18065  017140  0103               	movlb	3	; () banked
 18066  017142  6BE3               	clrf	(_dbuf+79)& (0+255),b
 18067                           
 18068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 18069  017144  D0FB               	goto	l13638
 18070  017146                     l13628:
 18071                           
 18072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 18073                           ;stkvar	_i @ sp[(-14)+8]
 18074  017146  50E1               	movf	fsr1l,w,c
 18075  017148  0FFA               	addlw	-6
 18076  01714A  6ED9               	movwf	fsr2l,c
 18077  01714C  50E2               	movf	fsr1h,w,c
 18078  01714E  6EDA               	movwf	fsr2h,c
 18079  017150  0EFF               	movlw	255
 18080  017152  22DA               	addwfc	fsr2h,f,c
 18081  017154  06DE               	decf	postinc2,f,c
 18082  017156  0E00               	movlw	0
 18083  017158  5ADD               	subwfb	postdec2,f,c
 18084                           
 18085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 18086  01715A  0E0A               	movlw	10
 18087  01715C  6EE6               	movwf	postinc1,c
 18088  01715E  0E00               	movlw	0
 18089  017160  6EE6               	movwf	postinc1,c
 18090  017162  0E00               	movlw	0
 18091  017164  6EE6               	movwf	postinc1,c
 18092  017166  0E00               	movlw	0
 18093  017168  6EE6               	movwf	postinc1,c
 18094  01716A  0E00               	movlw	0
 18095  01716C  6EE6               	movwf	postinc1,c
 18096  01716E  0E00               	movlw	0
 18097  017170  6EE6               	movwf	postinc1,c
 18098  017172  0E00               	movlw	0
 18099  017174  6EE6               	movwf	postinc1,c
 18100  017176  0E00               	movlw	0
 18101  017178  6EE6               	movwf	postinc1,c
 18102                           
 18103                           ;stkvar	_n @ sp[(-22)+0]
 18104  01717A  50E1               	movf	fsr1l,w,c
 18105  01717C  0FEA               	addlw	-22
 18106  01717E  6ED9               	movwf	fsr2l,c
 18107  017180  50E2               	movf	fsr1h,w,c
 18108  017182  6EDA               	movwf	fsr2h,c
 18109  017184  0EFF               	movlw	255
 18110  017186  22DA               	addwfc	fsr2h,f,c
 18111  017188  006F FF7B FFE6     	movff	postinc2,postinc1
 18112  01718E  006F FF7B FFE6     	movff	postinc2,postinc1
 18113  017194  006F FF7B FFE6     	movff	postinc2,postinc1
 18114  01719A  006F FF7B FFE6     	movff	postinc2,postinc1
 18115  0171A0  006F FF7B FFE6     	movff	postinc2,postinc1
 18116  0171A6  006F FF7B FFE6     	movff	postinc2,postinc1
 18117  0171AC  006F FF7B FFE6     	movff	postinc2,postinc1
 18118  0171B2  006F FF7B FFE6     	movff	postinc2,postinc1
 18119  0171B8  ECBD  F0CF         	call	___lomod	;wreg free
 18120  0171BC  52E5               	movf	postdec1,f,c
 18121  0171BE  006F FF9C  F018    	movff	indf1,btemp+23
 18122  0171C4  52E5               	movf	postdec1,f,c
 18123  0171C6  006F FF9C  F017    	movff	indf1,btemp+22
 18124  0171CC  52E5               	movf	postdec1,f,c
 18125  0171CE  006F FF9C  F016    	movff	indf1,btemp+21
 18126  0171D4  52E5               	movf	postdec1,f,c
 18127  0171D6  006F FF9C  F015    	movff	indf1,btemp+20
 18128  0171DC  52E5               	movf	postdec1,f,c
 18129  0171DE  006F FF9C  F014    	movff	indf1,btemp+19
 18130  0171E4  52E5               	movf	postdec1,f,c
 18131  0171E6  006F FF9C  F013    	movff	indf1,btemp+18
 18132  0171EC  52E5               	movf	postdec1,f,c
 18133  0171EE  006F FF9C  F012    	movff	indf1,btemp+17
 18134  0171F4  52E5               	movf	postdec1,f,c
 18135  0171F6  006F FF9C  F011    	movff	indf1,btemp+16
 18136  0171FC  0EF8               	movlw	248
 18137  0171FE  26E1               	addwf	fsr1l,f,c
 18138  017200  0EFF               	movlw	255
 18139  017202  22E2               	addwfc	fsr1h,f,c
 18140  017204  0E30               	movlw	48
 18141  017206  2611               	addwf	(btemp+16)^0,f,c
 18142                           
 18143                           ;stkvar	_i @ sp[(-14)+8]
 18144  017208  0EFA               	movlw	-6
 18145  01720A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18146  017210  0EFB               	movlw	-5
 18147  017212  006F FF8C  F00C    	movff	plusw1,btemp+11
 18148  017218  0E94               	movlw	low _dbuf
 18149  01721A  240B               	addwf	(btemp+10)^0,w,c
 18150  01721C  6ED9               	movwf	fsr2l,c
 18151  01721E  0E03               	movlw	high _dbuf
 18152  017220  200C               	addwfc	(btemp+11)^0,w,c
 18153  017222  6EDA               	movwf	fsr2h,c
 18154  017224  0060  F047  FFDF   	movff	btemp+16,indf2
 18155                           
 18156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 18157                           ;stkvar	_p @ sp[(-14)+12]
 18158  01722A  50E1               	movf	fsr1l,w,c
 18159  01722C  0FFE               	addlw	-2
 18160  01722E  6ED9               	movwf	fsr2l,c
 18161  017230  50E2               	movf	fsr1h,w,c
 18162  017232  6EDA               	movwf	fsr2h,c
 18163  017234  0EFF               	movlw	255
 18164  017236  22DA               	addwfc	fsr2h,f,c
 18165  017238  06DE               	decf	postinc2,f,c
 18166  01723A  0E00               	movlw	0
 18167  01723C  5ADD               	subwfb	postdec2,f,c
 18168                           
 18169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 18170                           ;stkvar	_w @ sp[(-14)+10]
 18171  01723E  50E1               	movf	fsr1l,w,c
 18172  017240  0FFC               	addlw	-4
 18173  017242  6ED9               	movwf	fsr2l,c
 18174  017244  50E2               	movf	fsr1h,w,c
 18175  017246  6EDA               	movwf	fsr2h,c
 18176  017248  0EFF               	movlw	255
 18177  01724A  22DA               	addwfc	fsr2h,f,c
 18178  01724C  06DE               	decf	postinc2,f,c
 18179  01724E  0E00               	movlw	0
 18180  017250  5ADD               	subwfb	postdec2,f,c
 18181                           
 18182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 18183  017252  0E0A               	movlw	10
 18184  017254  6EE6               	movwf	postinc1,c
 18185  017256  0E00               	movlw	0
 18186  017258  6EE6               	movwf	postinc1,c
 18187  01725A  0E00               	movlw	0
 18188  01725C  6EE6               	movwf	postinc1,c
 18189  01725E  0E00               	movlw	0
 18190  017260  6EE6               	movwf	postinc1,c
 18191  017262  0E00               	movlw	0
 18192  017264  6EE6               	movwf	postinc1,c
 18193  017266  0E00               	movlw	0
 18194  017268  6EE6               	movwf	postinc1,c
 18195  01726A  0E00               	movlw	0
 18196  01726C  6EE6               	movwf	postinc1,c
 18197  01726E  0E00               	movlw	0
 18198  017270  6EE6               	movwf	postinc1,c
 18199                           
 18200                           ;stkvar	_n @ sp[(-22)+0]
 18201  017272  50E1               	movf	fsr1l,w,c
 18202  017274  0FEA               	addlw	-22
 18203  017276  6ED9               	movwf	fsr2l,c
 18204  017278  50E2               	movf	fsr1h,w,c
 18205  01727A  6EDA               	movwf	fsr2h,c
 18206  01727C  0EFF               	movlw	255
 18207  01727E  22DA               	addwfc	fsr2h,f,c
 18208  017280  006F FF7B FFE6     	movff	postinc2,postinc1
 18209  017286  006F FF7B FFE6     	movff	postinc2,postinc1
 18210  01728C  006F FF7B FFE6     	movff	postinc2,postinc1
 18211  017292  006F FF7B FFE6     	movff	postinc2,postinc1
 18212  017298  006F FF7B FFE6     	movff	postinc2,postinc1
 18213  01729E  006F FF7B FFE6     	movff	postinc2,postinc1
 18214  0172A4  006F FF7B FFE6     	movff	postinc2,postinc1
 18215  0172AA  006F FF7B FFE6     	movff	postinc2,postinc1
 18216  0172B0  EC35  F0CA         	call	___lodiv	;wreg free
 18217  0172B4  52E5               	movf	postdec1,f,c
 18218  0172B6  006F FF9C  F018    	movff	indf1,btemp+23
 18219  0172BC  52E5               	movf	postdec1,f,c
 18220  0172BE  006F FF9C  F017    	movff	indf1,btemp+22
 18221  0172C4  52E5               	movf	postdec1,f,c
 18222  0172C6  006F FF9C  F016    	movff	indf1,btemp+21
 18223  0172CC  52E5               	movf	postdec1,f,c
 18224  0172CE  006F FF9C  F015    	movff	indf1,btemp+20
 18225  0172D4  52E5               	movf	postdec1,f,c
 18226  0172D6  006F FF9C  F014    	movff	indf1,btemp+19
 18227  0172DC  52E5               	movf	postdec1,f,c
 18228  0172DE  006F FF9C  F013    	movff	indf1,btemp+18
 18229  0172E4  52E5               	movf	postdec1,f,c
 18230  0172E6  006F FF9C  F012    	movff	indf1,btemp+17
 18231  0172EC  52E5               	movf	postdec1,f,c
 18232  0172EE  006F FF9C  F011    	movff	indf1,btemp+16
 18233  0172F4  0EF8               	movlw	248
 18234  0172F6  26E1               	addwf	fsr1l,f,c
 18235  0172F8  0EFF               	movlw	255
 18236  0172FA  22E2               	addwfc	fsr1h,f,c
 18237                           
 18238                           ;stkvar	_n @ sp[(-14)+0]
 18239  0172FC  0EF2               	movlw	-14
 18240  0172FE  0060  F047  FFE3   	movff	btemp+16,plusw1
 18241  017304  0EF3               	movlw	-13
 18242  017306  0060  F04B  FFE3   	movff	btemp+17,plusw1
 18243  01730C  0EF4               	movlw	-12
 18244  01730E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 18245  017314  0EF5               	movlw	-11
 18246  017316  0060  F053  FFE3   	movff	btemp+19,plusw1
 18247  01731C  0EF6               	movlw	-10
 18248  01731E  0060  F057  FFE3   	movff	btemp+20,plusw1
 18249  017324  0EF7               	movlw	-9
 18250  017326  0060  F05B  FFE3   	movff	btemp+21,plusw1
 18251  01732C  0EF8               	movlw	-8
 18252  01732E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 18253  017334  0EF9               	movlw	-7
 18254  017336  0060  F063  FFE3   	movff	btemp+23,plusw1
 18255  01733C                     l13638:
 18256                           
 18257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 18258                           ;stkvar	_i @ sp[(-14)+8]
 18259  01733C  0EFA               	movlw	-6
 18260  01733E  006F FF8C  F001    	movff	plusw1,btemp
 18261  017344  0EFB               	movlw	-5
 18262  017346  50E3               	movf	plusw1,w,c
 18263  017348  1001               	iorwf	btemp^0,w,c
 18264  01734A  B4D8               	btfsc	status,2,c
 18265  01734C  D02F               	goto	u12880
 18266                           
 18267                           ;stkvar	_n @ sp[(-14)+0]
 18268  01734E  0EF2               	movlw	-14
 18269  017350  50E3               	movf	plusw1,w,c
 18270  017352  E115               	bnz	u12851
 18271  017354  0EF3               	movlw	-13
 18272  017356  50E3               	movf	plusw1,w,c
 18273  017358  E112               	bnz	u12851
 18274  01735A  0EF4               	movlw	-12
 18275  01735C  50E3               	movf	plusw1,w,c
 18276  01735E  E10F               	bnz	u12851
 18277  017360  0EF5               	movlw	-11
 18278  017362  50E3               	movf	plusw1,w,c
 18279  017364  E10C               	bnz	u12851
 18280  017366  0EF6               	movlw	-10
 18281  017368  50E3               	movf	plusw1,w,c
 18282  01736A  E109               	bnz	u12851
 18283  01736C  0EF7               	movlw	-9
 18284  01736E  50E3               	movf	plusw1,w,c
 18285  017370  E106               	bnz	u12851
 18286  017372  0EF8               	movlw	-8
 18287  017374  50E3               	movf	plusw1,w,c
 18288  017376  E103               	bnz	u12851
 18289  017378  0EF9               	movlw	-7
 18290  01737A  50E3               	movf	plusw1,w,c
 18291  01737C  A4D8               	btfss	status,2,c
 18292  01737E                     u12851:
 18293  01737E  D6E3               	goto	l13628
 18294                           
 18295                           ;stkvar	_p @ sp[(-14)+12]
 18296  017380  0EFF               	movlw	-1
 18297  017382  BEE3               	btfsc	plusw1,7,c
 18298  017384  D007               	goto	u12860
 18299  017386  0EFF               	movlw	-1
 18300  017388  50E3               	movf	plusw1,w,c
 18301  01738A  E103               	bnz	u12861
 18302  01738C  0EFE               	movlw	-2
 18303  01738E  04E3               	decf	plusw1,w,c
 18304  017390  B0D8               	btfsc	status,0,c
 18305  017392                     u12861:
 18306  017392  D6D9               	goto	l13628
 18307  017394                     u12860:
 18308                           
 18309                           ;stkvar	_w @ sp[(-14)+10]
 18310  017394  0EFD               	movlw	-3
 18311  017396  BEE3               	btfsc	plusw1,7,c
 18312  017398  D009               	goto	u12880
 18313  01739A  0EFD               	movlw	-3
 18314  01739C  50E3               	movf	plusw1,w,c
 18315  01739E  E104               	bnz	u12870
 18316  0173A0  0EFC               	movlw	-4
 18317  0173A2  04E3               	decf	plusw1,w,c
 18318  0173A4  A0D8               	btfss	status,0,c
 18319  0173A6  D002               	goto	u12880
 18320  0173A8                     u12870:
 18321  0173A8  B23E               	btfsc	_flags^0,1,c
 18322  0173AA  D6CD               	goto	l13628
 18323  0173AC                     u12880:
 18324                           
 18325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 18326                           ;stkvar	_w @ sp[(-14)+10]
 18327  0173AC  0EFC               	movlw	-4
 18328  0173AE  006F FF8F FFE6     	movff	plusw1,postinc1
 18329  0173B4  006F FF8F FFE6     	movff	plusw1,postinc1
 18330                           
 18331                           ;stkvar	_i @ sp[(-16)+8]
 18332  0173BA  0E94               	movlw	low _dbuf
 18333  0173BC  6E0B               	movwf	(btemp+10)^0,c
 18334  0173BE  0E03               	movlw	high _dbuf
 18335  0173C0  6E0C               	movwf	(btemp+11)^0,c
 18336  0173C2  0EF8               	movlw	-8
 18337  0173C4  50E3               	movf	plusw1,w,c
 18338  0173C6  260B               	addwf	(btemp+10)^0,f,c
 18339  0173C8  0EF9               	movlw	-7
 18340  0173CA  50E3               	movf	plusw1,w,c
 18341  0173CC  220C               	addwfc	(btemp+11)^0,f,c
 18342  0173CE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18343  0173D4  0060  F033  FFE6   	movff	btemp+11,postinc1
 18344                           
 18345                           ;stkvar	_fp @ sp[(-18)+-2]
 18346  0173DA  0EEC               	movlw	-20
 18347  0173DC  006F FF8F FFE6     	movff	plusw1,postinc1
 18348  0173E2  006F FF8F FFE6     	movff	plusw1,postinc1
 18349  0173E8  ECBC  F0D3         	call	_pad	;wreg free
 18350                           
 18351                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18352  0173EC  0EE8               	movlw	232
 18353  0173EE  26E1               	addwf	fsr1l,f,c
 18354  0173F0  0EFF               	movlw	255
 18355  0173F2  22E2               	addwfc	fsr1h,f,c
 18356  0173F4  0012               	return		;funcret
 18357  0173F6                     __end_of_utoa:
 18358                           	opt callstack 0
 18359                           
 18360 ;; *************** function ___lomod *****************
 18361 ;; Defined at:
 18362 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 18363 ;; Parameters:    Size  Location     Type
 18364 ;;  dividend        8  [STACK] unsigned long long 
 18365 ;;  divisor         8  [STACK] unsigned long long 
 18366 ;; Auto vars:     Size  Location     Type
 18367 ;;  counter         1  [STACK] unsigned char 
 18368 ;; Return value:  Size  Location     Type
 18369 ;;                  8  [STACK] unsigned long long 
 18370 ;; Registers used:
 18371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18372 ;; Tracked objects:
 18373 ;;		On entry : 0/3
 18374 ;;		On exit  : 0/0
 18375 ;;		Unchanged: 0/0
 18376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18381 ;;Total ram usage:        0 bytes
 18382 ;; Hardware stack levels used:    1
 18383 ;; Hardware stack levels required when called:   15
 18384 ;; This function calls:
 18385 ;;		Nothing
 18386 ;; This function is called by:
 18387 ;;		_utoa
 18388 ;; This function uses a reentrant model
 18389 ;;
 18390                           
 18391                           	psect	text72
 18392  019F7A                     __ptext72:
 18393                           	opt callstack 0
 18394  019F7A                     ___lomod:
 18395                           	opt callstack 0
 18396                           
 18397                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18398  019F7A  52E6               	movf	postinc1,f,c
 18399                           
 18400                           ;stkvar	_divisor @ sp[(-1)+-16]
 18401                           
 18402                           ;incstack = 0
 18403 ;; hardware stack exceeded
 18404  019F7C  0EEF               	movlw	-17
 18405  019F7E  50E3               	movf	plusw1,w,c
 18406  019F80  E116               	bnz	u7920
 18407  019F82  0EF0               	movlw	-16
 18408  019F84  50E3               	movf	plusw1,w,c
 18409  019F86  E113               	bnz	u7920
 18410  019F88  0EF1               	movlw	-15
 18411  019F8A  50E3               	movf	plusw1,w,c
 18412  019F8C  E110               	bnz	u7920
 18413  019F8E  0EF2               	movlw	-14
 18414  019F90  50E3               	movf	plusw1,w,c
 18415  019F92  E10D               	bnz	u7920
 18416  019F94  0EF3               	movlw	-13
 18417  019F96  50E3               	movf	plusw1,w,c
 18418  019F98  E10A               	bnz	u7920
 18419  019F9A  0EF4               	movlw	-12
 18420  019F9C  50E3               	movf	plusw1,w,c
 18421  019F9E  E107               	bnz	u7920
 18422  019FA0  0EF5               	movlw	-11
 18423  019FA2  50E3               	movf	plusw1,w,c
 18424  019FA4  E104               	bnz	u7920
 18425  019FA6  0EF6               	movlw	-10
 18426  019FA8  50E3               	movf	plusw1,w,c
 18427  019FAA  B4D8               	btfsc	status,2,c
 18428  019FAC  D075               	goto	u7950
 18429  019FAE                     u7920:
 18430                           
 18431                           ;stkvar	_counter @ sp[(-1)+0]
 18432  019FAE  0EFF               	movlw	-1
 18433  019FB0  6AE3               	clrf	plusw1,c
 18434  019FB2  D012               	goto	L19
 18435  019FB4                     l9476:
 18436                           
 18437                           ;stkvar	_divisor @ sp[(-1)+-16]
 18438  019FB4  90D8               	bcf	status,0,c
 18439  019FB6  0EEF               	movlw	-17
 18440  019FB8  36E3               	rlcf	plusw1,f,c
 18441  019FBA  0EF0               	movlw	-16
 18442  019FBC  36E3               	rlcf	plusw1,f,c
 18443  019FBE  0EF1               	movlw	-15
 18444  019FC0  36E3               	rlcf	plusw1,f,c
 18445  019FC2  0EF2               	movlw	-14
 18446  019FC4  36E3               	rlcf	plusw1,f,c
 18447  019FC6  0EF3               	movlw	-13
 18448  019FC8  36E3               	rlcf	plusw1,f,c
 18449  019FCA  0EF4               	movlw	-12
 18450  019FCC  36E3               	rlcf	plusw1,f,c
 18451  019FCE  0EF5               	movlw	-11
 18452  019FD0  36E3               	rlcf	plusw1,f,c
 18453  019FD2  0EF6               	movlw	-10
 18454  019FD4  36E3               	rlcf	plusw1,f,c
 18455                           
 18456                           ;stkvar	_counter @ sp[(-1)+0]
 18457  019FD6  0EFF               	movlw	-1
 18458  019FD8                     L19:
 18459  019FD8  2AE3               	incf	plusw1,f,c
 18460                           
 18461                           ;stkvar	_divisor @ sp[(-1)+-16]
 18462  019FDA  0EF6               	movlw	-10
 18463  019FDC  AEE3               	btfss	plusw1,7,c
 18464  019FDE  D7EA               	goto	l9476
 18465  019FE0                     u7930:
 18466                           
 18467                           ;stkvar	_divisor @ sp[(-1)+-16]
 18468                           ;stkvar	_dividend @ sp[(-1)+-8]
 18469  019FE0  50E1               	movf	fsr1l,w,c
 18470  019FE2  0FF7               	addlw	-9
 18471  019FE4  6ED9               	movwf	fsr2l,c
 18472  019FE6  50E2               	movf	fsr1h,w,c
 18473  019FE8  6EDA               	movwf	fsr2h,c
 18474  019FEA  0EFF               	movlw	255
 18475  019FEC  22DA               	addwfc	fsr2h,f,c
 18476  019FEE  0EEF               	movlw	-17
 18477  019FF0  50E3               	movf	plusw1,w,c
 18478  019FF2  5CDE               	subwf	postinc2,w,c
 18479  019FF4  0EF0               	movlw	-16
 18480  019FF6  50E3               	movf	plusw1,w,c
 18481  019FF8  58DE               	subwfb	postinc2,w,c
 18482  019FFA  0EF1               	movlw	-15
 18483  019FFC  50E3               	movf	plusw1,w,c
 18484  019FFE  58DE               	subwfb	postinc2,w,c
 18485  01A000  0EF2               	movlw	-14
 18486  01A002  50E3               	movf	plusw1,w,c
 18487  01A004  58DE               	subwfb	postinc2,w,c
 18488  01A006  0EF3               	movlw	-13
 18489  01A008  50E3               	movf	plusw1,w,c
 18490  01A00A  58DE               	subwfb	postinc2,w,c
 18491  01A00C  0EF4               	movlw	-12
 18492  01A00E  50E3               	movf	plusw1,w,c
 18493  01A010  58DE               	subwfb	postinc2,w,c
 18494  01A012  0EF5               	movlw	-11
 18495  01A014  50E3               	movf	plusw1,w,c
 18496  01A016  58DE               	subwfb	postinc2,w,c
 18497  01A018  0EF6               	movlw	-10
 18498  01A01A  50E3               	movf	plusw1,w,c
 18499  01A01C  58DE               	subwfb	postinc2,w,c
 18500  01A01E  A0D8               	btfss	status,0,c
 18501  01A020  D01F               	goto	l9484
 18502                           
 18503                           ;stkvar	_divisor @ sp[(-1)+-16]
 18504                           ;stkvar	_dividend @ sp[(-1)+-8]
 18505  01A022  50E1               	movf	fsr1l,w,c
 18506  01A024  0FF7               	addlw	-9
 18507  01A026  6ED9               	movwf	fsr2l,c
 18508  01A028  50E2               	movf	fsr1h,w,c
 18509  01A02A  6EDA               	movwf	fsr2h,c
 18510  01A02C  0EFF               	movlw	255
 18511  01A02E  22DA               	addwfc	fsr2h,f,c
 18512  01A030  0EEF               	movlw	-17
 18513  01A032  50E3               	movf	plusw1,w,c
 18514  01A034  5EDE               	subwf	postinc2,f,c
 18515  01A036  0EF0               	movlw	-16
 18516  01A038  50E3               	movf	plusw1,w,c
 18517  01A03A  5ADE               	subwfb	postinc2,f,c
 18518  01A03C  0EF1               	movlw	-15
 18519  01A03E  50E3               	movf	plusw1,w,c
 18520  01A040  5ADE               	subwfb	postinc2,f,c
 18521  01A042  0EF2               	movlw	-14
 18522  01A044  50E3               	movf	plusw1,w,c
 18523  01A046  5ADE               	subwfb	postinc2,f,c
 18524  01A048  0EF3               	movlw	-13
 18525  01A04A  50E3               	movf	plusw1,w,c
 18526  01A04C  5ADE               	subwfb	postinc2,f,c
 18527  01A04E  0EF4               	movlw	-12
 18528  01A050  50E3               	movf	plusw1,w,c
 18529  01A052  5ADE               	subwfb	postinc2,f,c
 18530  01A054  0EF5               	movlw	-11
 18531  01A056  50E3               	movf	plusw1,w,c
 18532  01A058  5ADE               	subwfb	postinc2,f,c
 18533  01A05A  0EF6               	movlw	-10
 18534  01A05C  50E3               	movf	plusw1,w,c
 18535  01A05E  5ADE               	subwfb	postinc2,f,c
 18536  01A060                     l9484:
 18537                           
 18538                           ;stkvar	_divisor @ sp[(-1)+-16]
 18539  01A060  90D8               	bcf	status,0,c
 18540  01A062  0EF6               	movlw	-10
 18541  01A064  32E3               	rrcf	plusw1,f,c
 18542  01A066  0EF5               	movlw	-11
 18543  01A068  32E3               	rrcf	plusw1,f,c
 18544  01A06A  0EF4               	movlw	-12
 18545  01A06C  32E3               	rrcf	plusw1,f,c
 18546  01A06E  0EF3               	movlw	-13
 18547  01A070  32E3               	rrcf	plusw1,f,c
 18548  01A072  0EF2               	movlw	-14
 18549  01A074  32E3               	rrcf	plusw1,f,c
 18550  01A076  0EF1               	movlw	-15
 18551  01A078  32E3               	rrcf	plusw1,f,c
 18552  01A07A  0EF0               	movlw	-16
 18553  01A07C  32E3               	rrcf	plusw1,f,c
 18554  01A07E  0EEF               	movlw	-17
 18555  01A080  32E3               	rrcf	plusw1,f,c
 18556                           
 18557                           ;stkvar	_counter @ sp[(-1)+0]
 18558  01A082  0EFF               	movlw	-1
 18559  01A084  50E3               	movf	plusw1,w,c
 18560  01A086  6E01               	movwf	btemp^0,c
 18561  01A088  0E01               	movlw	1
 18562  01A08A  5E01               	subwf	btemp^0,f,c
 18563  01A08C  0EFF               	movlw	-1
 18564  01A08E  0060  F007  FFE3   	movff	btemp,plusw1
 18565  01A094  A4D8               	btfss	status,2,c
 18566  01A096  D7A4               	goto	u7930
 18567  01A098                     u7950:
 18568                           
 18569                           ;stkvar	_dividend @ sp[(-1)+-8]
 18570  01A098  0EF7               	movlw	247
 18571  01A09A  24E1               	addwf	fsr1l,w,c
 18572  01A09C  6ED9               	movwf	fsr2l,c
 18573  01A09E  0EFF               	movlw	255
 18574  01A0A0  20E2               	addwfc	fsr1h,w,c
 18575  01A0A2  6EDA               	movwf	fsr2h,c
 18576                           
 18577                           ;stkvar	?___lomod @ sp[(-1)+-8]
 18578  01A0A4  0E08               	movlw	8
 18579  01A0A6  6E01               	movwf	btemp^0,c
 18580  01A0A8  0EF7               	movlw	-9
 18581  01A0AA                     us796999:
 18582  01A0AA  006F FF7B FFE3     	movff	postinc2,plusw1
 18583  01A0B0  28E8               	incf	wreg,w,c
 18584  01A0B2  2E01               	decfsz	btemp^0,f,c
 18585  01A0B4  D7FA               	bra	us796999
 18586                           
 18587                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18588  01A0B6  52E5               	movf	postdec1,f,c
 18589  01A0B8  0012               	return		;funcret
 18590  01A0BA                     __end_of___lomod:
 18591                           	opt callstack 0
 18592                           
 18593 ;; *************** function ___lodiv *****************
 18594 ;; Defined at:
 18595 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 18596 ;; Parameters:    Size  Location     Type
 18597 ;;  dividend        8  [STACK] unsigned long long 
 18598 ;;  divisor         8  [STACK] unsigned long long 
 18599 ;; Auto vars:     Size  Location     Type
 18600 ;;  quotient        8  [STACK] unsigned long long 
 18601 ;;  counter         1  [STACK] unsigned char 
 18602 ;; Return value:  Size  Location     Type
 18603 ;;                  8  [STACK] unsigned long long 
 18604 ;; Registers used:
 18605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18606 ;; Tracked objects:
 18607 ;;		On entry : 0/3
 18608 ;;		On exit  : 0/0
 18609 ;;		Unchanged: 0/0
 18610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18615 ;;Total ram usage:        0 bytes
 18616 ;; Hardware stack levels used:    1
 18617 ;; Hardware stack levels required when called:   15
 18618 ;; This function calls:
 18619 ;;		Nothing
 18620 ;; This function is called by:
 18621 ;;		_utoa
 18622 ;; This function uses a reentrant model
 18623 ;;
 18624                           
 18625                           	psect	text73
 18626  01946A                     __ptext73:
 18627                           	opt callstack 0
 18628  01946A                     ___lodiv:
 18629                           	opt callstack 0
 18630                           
 18631                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18632  01946A  0E09               	movlw	9
 18633  01946C  26E1               	addwf	fsr1l,f,c
 18634  01946E  0E00               	movlw	0
 18635  019470  22E2               	addwfc	fsr1h,f,c
 18636                           
 18637                           ;stkvar	_quotient @ sp[(-9)+0]
 18638                           
 18639                           ;incstack = 0
 18640 ;; hardware stack exceeded
 18641  019472  0E07               	movlw	7
 18642  019474  6E01               	movwf	btemp^0,c
 18643  019476  0EF7               	movlw	-9
 18644  019478                     u7861:
 18645  019478  6AE3               	clrf	plusw1,c
 18646  01947A  2AE8               	incf	wreg,f,c
 18647  01947C  0601               	decf	btemp^0,f,c
 18648  01947E  E2FC               	bc	u7861
 18649                           
 18650                           ;stkvar	_divisor @ sp[(-9)+-16]
 18651  019480  0EE7               	movlw	-25
 18652  019482  50E3               	movf	plusw1,w,c
 18653  019484  E116               	bnz	u7870
 18654  019486  0EE8               	movlw	-24
 18655  019488  50E3               	movf	plusw1,w,c
 18656  01948A  E113               	bnz	u7870
 18657  01948C  0EE9               	movlw	-23
 18658  01948E  50E3               	movf	plusw1,w,c
 18659  019490  E110               	bnz	u7870
 18660  019492  0EEA               	movlw	-22
 18661  019494  50E3               	movf	plusw1,w,c
 18662  019496  E10D               	bnz	u7870
 18663  019498  0EEB               	movlw	-21
 18664  01949A  50E3               	movf	plusw1,w,c
 18665  01949C  E10A               	bnz	u7870
 18666  01949E  0EEC               	movlw	-20
 18667  0194A0  50E3               	movf	plusw1,w,c
 18668  0194A2  E107               	bnz	u7870
 18669  0194A4  0EED               	movlw	-19
 18670  0194A6  50E3               	movf	plusw1,w,c
 18671  0194A8  E104               	bnz	u7870
 18672  0194AA  0EEE               	movlw	-18
 18673  0194AC  50E3               	movf	plusw1,w,c
 18674  0194AE  B4D8               	btfsc	status,2,c
 18675  0194B0  D088               	goto	u7900
 18676  0194B2                     u7870:
 18677                           
 18678                           ;stkvar	_counter @ sp[(-9)+8]
 18679  0194B2  0EFF               	movlw	-1
 18680  0194B4  6AE3               	clrf	plusw1,c
 18681  0194B6  D012               	goto	L20
 18682  0194B8                     l9452:
 18683                           
 18684                           ;stkvar	_divisor @ sp[(-9)+-16]
 18685  0194B8  90D8               	bcf	status,0,c
 18686  0194BA  0EE7               	movlw	-25
 18687  0194BC  36E3               	rlcf	plusw1,f,c
 18688  0194BE  0EE8               	movlw	-24
 18689  0194C0  36E3               	rlcf	plusw1,f,c
 18690  0194C2  0EE9               	movlw	-23
 18691  0194C4  36E3               	rlcf	plusw1,f,c
 18692  0194C6  0EEA               	movlw	-22
 18693  0194C8  36E3               	rlcf	plusw1,f,c
 18694  0194CA  0EEB               	movlw	-21
 18695  0194CC  36E3               	rlcf	plusw1,f,c
 18696  0194CE  0EEC               	movlw	-20
 18697  0194D0  36E3               	rlcf	plusw1,f,c
 18698  0194D2  0EED               	movlw	-19
 18699  0194D4  36E3               	rlcf	plusw1,f,c
 18700  0194D6  0EEE               	movlw	-18
 18701  0194D8  36E3               	rlcf	plusw1,f,c
 18702                           
 18703                           ;stkvar	_counter @ sp[(-9)+8]
 18704  0194DA  0EFF               	movlw	-1
 18705  0194DC                     L20:
 18706  0194DC  2AE3               	incf	plusw1,f,c
 18707                           
 18708                           ;stkvar	_divisor @ sp[(-9)+-16]
 18709  0194DE  0EEE               	movlw	-18
 18710  0194E0  AEE3               	btfss	plusw1,7,c
 18711  0194E2  D7EA               	goto	l9452
 18712  0194E4                     u7880:
 18713                           
 18714                           ;stkvar	_quotient @ sp[(-9)+0]
 18715  0194E4  90D8               	bcf	status,0,c
 18716  0194E6  0EF7               	movlw	-9
 18717  0194E8  36E3               	rlcf	plusw1,f,c
 18718  0194EA  0EF8               	movlw	-8
 18719  0194EC  36E3               	rlcf	plusw1,f,c
 18720  0194EE  0EF9               	movlw	-7
 18721  0194F0  36E3               	rlcf	plusw1,f,c
 18722  0194F2  0EFA               	movlw	-6
 18723  0194F4  36E3               	rlcf	plusw1,f,c
 18724  0194F6  0EFB               	movlw	-5
 18725  0194F8  36E3               	rlcf	plusw1,f,c
 18726  0194FA  0EFC               	movlw	-4
 18727  0194FC  36E3               	rlcf	plusw1,f,c
 18728  0194FE  0EFD               	movlw	-3
 18729  019500  36E3               	rlcf	plusw1,f,c
 18730  019502  0EFE               	movlw	-2
 18731  019504  36E3               	rlcf	plusw1,f,c
 18732                           
 18733                           ;stkvar	_divisor @ sp[(-9)+-16]
 18734                           ;stkvar	_dividend @ sp[(-9)+-8]
 18735  019506  50E1               	movf	fsr1l,w,c
 18736  019508  0FEF               	addlw	-17
 18737  01950A  6ED9               	movwf	fsr2l,c
 18738  01950C  50E2               	movf	fsr1h,w,c
 18739  01950E  6EDA               	movwf	fsr2h,c
 18740  019510  0EFF               	movlw	255
 18741  019512  22DA               	addwfc	fsr2h,f,c
 18742  019514  0EE7               	movlw	-25
 18743  019516  50E3               	movf	plusw1,w,c
 18744  019518  5CDE               	subwf	postinc2,w,c
 18745  01951A  0EE8               	movlw	-24
 18746  01951C  50E3               	movf	plusw1,w,c
 18747  01951E  58DE               	subwfb	postinc2,w,c
 18748  019520  0EE9               	movlw	-23
 18749  019522  50E3               	movf	plusw1,w,c
 18750  019524  58DE               	subwfb	postinc2,w,c
 18751  019526  0EEA               	movlw	-22
 18752  019528  50E3               	movf	plusw1,w,c
 18753  01952A  58DE               	subwfb	postinc2,w,c
 18754  01952C  0EEB               	movlw	-21
 18755  01952E  50E3               	movf	plusw1,w,c
 18756  019530  58DE               	subwfb	postinc2,w,c
 18757  019532  0EEC               	movlw	-20
 18758  019534  50E3               	movf	plusw1,w,c
 18759  019536  58DE               	subwfb	postinc2,w,c
 18760  019538  0EED               	movlw	-19
 18761  01953A  50E3               	movf	plusw1,w,c
 18762  01953C  58DE               	subwfb	postinc2,w,c
 18763  01953E  0EEE               	movlw	-18
 18764  019540  50E3               	movf	plusw1,w,c
 18765  019542  58DE               	subwfb	postinc2,w,c
 18766  019544  A0D8               	btfss	status,0,c
 18767  019546  D021               	goto	l9464
 18768                           
 18769                           ;stkvar	_divisor @ sp[(-9)+-16]
 18770                           ;stkvar	_dividend @ sp[(-9)+-8]
 18771  019548  50E1               	movf	fsr1l,w,c
 18772  01954A  0FEF               	addlw	-17
 18773  01954C  6ED9               	movwf	fsr2l,c
 18774  01954E  50E2               	movf	fsr1h,w,c
 18775  019550  6EDA               	movwf	fsr2h,c
 18776  019552  0EFF               	movlw	255
 18777  019554  22DA               	addwfc	fsr2h,f,c
 18778  019556  0EE7               	movlw	-25
 18779  019558  50E3               	movf	plusw1,w,c
 18780  01955A  5EDE               	subwf	postinc2,f,c
 18781  01955C  0EE8               	movlw	-24
 18782  01955E  50E3               	movf	plusw1,w,c
 18783  019560  5ADE               	subwfb	postinc2,f,c
 18784  019562  0EE9               	movlw	-23
 18785  019564  50E3               	movf	plusw1,w,c
 18786  019566  5ADE               	subwfb	postinc2,f,c
 18787  019568  0EEA               	movlw	-22
 18788  01956A  50E3               	movf	plusw1,w,c
 18789  01956C  5ADE               	subwfb	postinc2,f,c
 18790  01956E  0EEB               	movlw	-21
 18791  019570  50E3               	movf	plusw1,w,c
 18792  019572  5ADE               	subwfb	postinc2,f,c
 18793  019574  0EEC               	movlw	-20
 18794  019576  50E3               	movf	plusw1,w,c
 18795  019578  5ADE               	subwfb	postinc2,f,c
 18796  01957A  0EED               	movlw	-19
 18797  01957C  50E3               	movf	plusw1,w,c
 18798  01957E  5ADE               	subwfb	postinc2,f,c
 18799  019580  0EEE               	movlw	-18
 18800  019582  50E3               	movf	plusw1,w,c
 18801  019584  5ADE               	subwfb	postinc2,f,c
 18802                           
 18803                           ;stkvar	_quotient @ sp[(-9)+0]
 18804  019586  0EF7               	movlw	-9
 18805  019588  80E3               	bsf	plusw1,0,c
 18806  01958A                     l9464:
 18807                           
 18808                           ;stkvar	_divisor @ sp[(-9)+-16]
 18809  01958A  90D8               	bcf	status,0,c
 18810  01958C  0EEE               	movlw	-18
 18811  01958E  32E3               	rrcf	plusw1,f,c
 18812  019590  0EED               	movlw	-19
 18813  019592  32E3               	rrcf	plusw1,f,c
 18814  019594  0EEC               	movlw	-20
 18815  019596  32E3               	rrcf	plusw1,f,c
 18816  019598  0EEB               	movlw	-21
 18817  01959A  32E3               	rrcf	plusw1,f,c
 18818  01959C  0EEA               	movlw	-22
 18819  01959E  32E3               	rrcf	plusw1,f,c
 18820  0195A0  0EE9               	movlw	-23
 18821  0195A2  32E3               	rrcf	plusw1,f,c
 18822  0195A4  0EE8               	movlw	-24
 18823  0195A6  32E3               	rrcf	plusw1,f,c
 18824  0195A8  0EE7               	movlw	-25
 18825  0195AA  32E3               	rrcf	plusw1,f,c
 18826                           
 18827                           ;stkvar	_counter @ sp[(-9)+8]
 18828  0195AC  0EFF               	movlw	-1
 18829  0195AE  50E3               	movf	plusw1,w,c
 18830  0195B0  6E01               	movwf	btemp^0,c
 18831  0195B2  0E01               	movlw	1
 18832  0195B4  5E01               	subwf	btemp^0,f,c
 18833  0195B6  0EFF               	movlw	-1
 18834  0195B8  0060  F007  FFE3   	movff	btemp,plusw1
 18835  0195BE  A4D8               	btfss	status,2,c
 18836  0195C0  D791               	goto	u7880
 18837  0195C2                     u7900:
 18838                           
 18839                           ;stkvar	_quotient @ sp[(-9)+0]
 18840  0195C2  0EF7               	movlw	247
 18841  0195C4  24E1               	addwf	fsr1l,w,c
 18842  0195C6  6ED9               	movwf	fsr2l,c
 18843  0195C8  0EFF               	movlw	255
 18844  0195CA  20E2               	addwfc	fsr1h,w,c
 18845  0195CC  6EDA               	movwf	fsr2h,c
 18846                           
 18847                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 18848  0195CE  0E08               	movlw	8
 18849  0195D0  6E01               	movwf	btemp^0,c
 18850  0195D2  0EEF               	movlw	-17
 18851  0195D4                     us791999:
 18852  0195D4  006F FF7B FFE3     	movff	postinc2,plusw1
 18853  0195DA  28E8               	incf	wreg,w,c
 18854  0195DC  2E01               	decfsz	btemp^0,f,c
 18855  0195DE  D7FA               	bra	us791999
 18856                           
 18857                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18858  0195E0  0EF7               	movlw	247
 18859  0195E2  26E1               	addwf	fsr1l,f,c
 18860  0195E4  0EFF               	movlw	255
 18861  0195E6  22E2               	addwfc	fsr1h,f,c
 18862  0195E8  0012               	return		;funcret
 18863  0195EA                     __end_of___lodiv:
 18864                           	opt callstack 0
 18865                           
 18866 ;; *************** function _strncmp *****************
 18867 ;; Defined at:
 18868 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 18869 ;; Parameters:    Size  Location     Type
 18870 ;;  _l              2  [STACK] PTR const unsigned char 
 18871 ;;		 -> ct(3), STR_80(127), STR_78(3), STR_77(3), 
 18872 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 18873 ;;		 -> STR_72(19), STR_71(19), STR_70(24), STR_69(15), 
 18874 ;;		 -> STR_68(15), STR_67(15), STR_66(10), STR_65(10), 
 18875 ;;		 -> STR_64(19), STR_63(19), STR_60(3), STR_59(3), 
 18876 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 18877 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 18878 ;;		 -> STR_50(21), STR_49(20), STR_48(21), STR_47(21), 
 18879 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 18880 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 18881 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 18882 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 18883 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 18884 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 18885 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 18886 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 18887 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 18888 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 18889 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 18890 ;;		 -> STR_1(21), 
 18891 ;;  _r              2  [STACK] PTR const unsigned char 
 18892 ;;		 -> STR_114(3), STR_110(3), STR_105(3), STR_100(3), 
 18893 ;;		 -> STR_95(3), STR_91(3), 
 18894 ;;  n               2  [STACK] unsigned int 
 18895 ;; Auto vars:     Size  Location     Type
 18896 ;;  r               2  [STACK] PTR const unsigned char 
 18897 ;;		 -> STR_114(3), STR_110(3), STR_105(3), STR_100(3), 
 18898 ;;		 -> STR_95(3), STR_91(3), 
 18899 ;;  l               2  [STACK] PTR const unsigned char 
 18900 ;;		 -> ct(3), STR_80(127), STR_78(3), STR_77(3), 
 18901 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 18902 ;;		 -> STR_72(19), STR_71(19), STR_70(24), STR_69(15), 
 18903 ;;		 -> STR_68(15), STR_67(15), STR_66(10), STR_65(10), 
 18904 ;;		 -> STR_64(19), STR_63(19), STR_60(3), STR_59(3), 
 18905 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 18906 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 18907 ;;		 -> STR_50(21), STR_49(20), STR_48(21), STR_47(21), 
 18908 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 18909 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 18910 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 18911 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 18912 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 18913 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 18914 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 18915 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 18916 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 18917 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 18918 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 18919 ;;		 -> STR_1(21), 
 18920 ;; Return value:  Size  Location     Type
 18921 ;;                  2  [STACK] int 
 18922 ;; Registers used:
 18923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 18924 ;; Tracked objects:
 18925 ;;		On entry : 0/0
 18926 ;;		On exit  : 0/0
 18927 ;;		Unchanged: 0/0
 18928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18933 ;;Total ram usage:        0 bytes
 18934 ;; Hardware stack levels used:    1
 18935 ;; Hardware stack levels required when called:   15
 18936 ;; This function calls:
 18937 ;;		Nothing
 18938 ;; This function is called by:
 18939 ;;		_vfpfcnvrt
 18940 ;; This function uses a reentrant model
 18941 ;;
 18942                           
 18943                           	psect	text74
 18944  0185F2                     __ptext74:
 18945                           	opt callstack 0
 18946  0185F2                     _strncmp:
 18947                           	opt callstack 0
 18948                           
 18949                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18950  0185F2  52E6               	movf	postinc1,f,c
 18951  0185F4  52E6               	movf	postinc1,f,c
 18952  0185F6  52E6               	movf	postinc1,f,c
 18953  0185F8  52E6               	movf	postinc1,f,c
 18954                           
 18955                           ;stkvar	__l @ sp[(-4)+-2]
 18956                           
 18957                           ;incstack = 0
 18958 ;; hardware stack exceeded
 18959  0185FA  0EFA               	movlw	-6
 18960  0185FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18961  018602  0EFB               	movlw	-5
 18962  018604  006F FF8C  F00C    	movff	plusw1,btemp+11
 18963                           
 18964                           ;stkvar	_l @ sp[(-4)+2]
 18965  01860A  0EFF               	movlw	-1
 18966  01860C  0060  F033  FFE3   	movff	btemp+11,plusw1
 18967  018612  0EFE               	movlw	-2
 18968  018614  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18969                           
 18970                           ;stkvar	__r @ sp[(-4)+-4]
 18971  01861A  0EF8               	movlw	-8
 18972  01861C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18973  018622  0EF9               	movlw	-7
 18974  018624  006F FF8C  F00C    	movff	plusw1,btemp+11
 18975                           
 18976                           ;stkvar	_r @ sp[(-4)+0]
 18977  01862A  0EFD               	movlw	-3
 18978  01862C  0060  F033  FFE3   	movff	btemp+11,plusw1
 18979  018632  0EFC               	movlw	-4
 18980  018634  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18981                           
 18982                           ;stkvar	_n @ sp[(-4)+-6]
 18983  01863A  0EF6               	movlw	-10
 18984  01863C  006F FF8C  F001    	movff	plusw1,btemp
 18985  018642  0E01               	movlw	1
 18986  018644  5E01               	subwf	btemp^0,f,c
 18987  018646  0EF6               	movlw	-10
 18988  018648  0060  F007  FFE3   	movff	btemp,plusw1
 18989  01864E  0EF7               	movlw	-9
 18990  018650  006F FF8C  F001    	movff	plusw1,btemp
 18991  018656  0E00               	movlw	0
 18992  018658  5A01               	subwfb	btemp^0,f,c
 18993  01865A  0EF7               	movlw	-9
 18994  01865C  0060  F007  FFE3   	movff	btemp,plusw1
 18995  018662  0EF6               	movlw	-10
 18996  018664  28E3               	incf	plusw1,w,c
 18997  018666  E13F               	bnz	l10134
 18998  018668  0EF7               	movlw	-9
 18999  01866A  28E3               	incf	plusw1,w,c
 19000  01866C  A4D8               	btfss	status,2,c
 19001  01866E  D03B               	goto	l10134
 19002  018670  0E00               	movlw	0
 19003  018672  6E01               	movwf	btemp^0,c
 19004  018674  0E00               	movlw	0
 19005  018676  6E02               	movwf	(btemp+1)^0,c
 19006  018678  D0C7               	goto	l3727
 19007  01867A                     l10132:
 19008                           
 19009                           ;stkvar	_l @ sp[(-4)+2]
 19010  01867A  0EFE               	movlw	-2
 19011  01867C  50E3               	movf	plusw1,w,c
 19012  01867E  0F01               	addlw	1
 19013  018680  6E01               	movwf	btemp^0,c
 19014  018682  0EFE               	movlw	-2
 19015  018684  0060  F007  FFE3   	movff	btemp,plusw1
 19016  01868A  6A01               	clrf	btemp^0,c
 19017  01868C  0EFF               	movlw	-1
 19018  01868E  50E3               	movf	plusw1,w,c
 19019  018690  2001               	addwfc	btemp^0,w,c
 19020  018692  6E01               	movwf	btemp^0,c
 19021  018694  0EFF               	movlw	-1
 19022  018696  0060  F007  FFE3   	movff	btemp,plusw1
 19023                           
 19024                           ;stkvar	_r @ sp[(-4)+0]
 19025  01869C  0EFC               	movlw	-4
 19026  01869E  50E3               	movf	plusw1,w,c
 19027  0186A0  0F01               	addlw	1
 19028  0186A2  6E01               	movwf	btemp^0,c
 19029  0186A4  0EFC               	movlw	-4
 19030  0186A6  0060  F007  FFE3   	movff	btemp,plusw1
 19031  0186AC  6A01               	clrf	btemp^0,c
 19032  0186AE  0EFD               	movlw	-3
 19033  0186B0  50E3               	movf	plusw1,w,c
 19034  0186B2  2001               	addwfc	btemp^0,w,c
 19035  0186B4  6E01               	movwf	btemp^0,c
 19036  0186B6  0EFD               	movlw	-3
 19037  0186B8  0060  F007  FFE3   	movff	btemp,plusw1
 19038                           
 19039                           ;stkvar	_n @ sp[(-4)+-6]
 19040  0186BE  0EF6               	movlw	-10
 19041  0186C0  006F FF8C  F001    	movff	plusw1,btemp
 19042  0186C6  0E01               	movlw	1
 19043  0186C8  5E01               	subwf	btemp^0,f,c
 19044  0186CA  0EF6               	movlw	-10
 19045  0186CC  0060  F007  FFE3   	movff	btemp,plusw1
 19046  0186D2  0EF7               	movlw	-9
 19047  0186D4  006F FF8C  F001    	movff	plusw1,btemp
 19048  0186DA  0E00               	movlw	0
 19049  0186DC  5A01               	subwfb	btemp^0,f,c
 19050  0186DE  0EF7               	movlw	-9
 19051  0186E0  0060  F007  FFE3   	movff	btemp,plusw1
 19052  0186E6                     l10134:
 19053                           
 19054                           ;stkvar	_l @ sp[(-4)+2]
 19055  0186E6  0EFE               	movlw	-2
 19056  0186E8  006F FF8F FFF6     	movff	plusw1,tblptrl
 19057  0186EE  0EFF               	movlw	-1
 19058  0186F0  006F FF8F FFF7     	movff	plusw1,tblptrh
 19059  0186F6  0E00               	movlw	low (__mediumconst shr (0+16))
 19060  0186F8  6EF8               	movwf	tblptru,c
 19061  0186FA  0E1F               	movlw	(high __ramtop+-1)
 19062  0186FC  64F7               	cpfsgt	tblptrh,c
 19063  0186FE  D003               	bra	u9157
 19064  018700  0008               	tblrd		*
 19065  018702  50F5               	movf	tablat,w,c
 19066  018704  D007               	bra	u9150
 19067  018706                     u9157:
 19068  018706  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19069  01870C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19070  018712  50EF               	movf	indf0,w,c
 19071  018714                     u9150:
 19072  018714  0900               	iorlw	0
 19073  018716  B4D8               	btfsc	status,2,c
 19074  018718  D04A               	goto	u9190
 19075                           
 19076                           ;stkvar	_r @ sp[(-4)+0]
 19077  01871A  50E1               	movf	fsr1l,w,c
 19078  01871C  0FFC               	addlw	-4
 19079  01871E  6ED9               	movwf	fsr2l,c
 19080  018720  50E2               	movf	fsr1h,w,c
 19081  018722  6EDA               	movwf	fsr2h,c
 19082  018724  0EFF               	movlw	255
 19083  018726  22DA               	addwfc	fsr2h,f,c
 19084  018728  006F FF7B FFF6     	movff	postinc2,tblptrl
 19085  01872E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19086  018734                     	if	0	;tblptru may be non-zero
 19087  018734                     	endif
 19088  018734                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19089  018734  0E00               	movlw	low (__mediumconst shr (0+16))
 19090  018736  6EF8               	movwf	tblptru,c
 19091  018738                     	endif
 19092  018738  0008               	tblrd		*
 19093  01873A  50F5               	movf	tablat,w,c
 19094  01873C  0900               	iorlw	0
 19095  01873E  B4D8               	btfsc	status,2,c
 19096  018740  D036               	goto	u9190
 19097                           
 19098                           ;stkvar	_n @ sp[(-4)+-6]
 19099  018742  0EF6               	movlw	-10
 19100  018744  006F FF8C  F001    	movff	plusw1,btemp
 19101  01874A  0EF7               	movlw	-9
 19102  01874C  50E3               	movf	plusw1,w,c
 19103  01874E  1001               	iorwf	btemp^0,w,c
 19104  018750  B4D8               	btfsc	status,2,c
 19105  018752  D02D               	goto	u9190
 19106                           
 19107                           ;stkvar	_r @ sp[(-4)+0]
 19108  018754  50E1               	movf	fsr1l,w,c
 19109  018756  0FFC               	addlw	-4
 19110  018758  6ED9               	movwf	fsr2l,c
 19111  01875A  50E2               	movf	fsr1h,w,c
 19112  01875C  6EDA               	movwf	fsr2h,c
 19113  01875E  0EFF               	movlw	255
 19114  018760  22DA               	addwfc	fsr2h,f,c
 19115  018762  006F FF7B FFF6     	movff	postinc2,tblptrl
 19116  018768  006F FF77 FFF7     	movff	postdec2,tblptrh
 19117  01876E                     	if	0	;tblptru may be non-zero
 19118  01876E                     	endif
 19119  01876E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19120  01876E  0E00               	movlw	low (__mediumconst shr (0+16))
 19121  018770  6EF8               	movwf	tblptru,c
 19122  018772                     	endif
 19123  018772  0008               	tblrd		*
 19124  018774  006F FFD4  F00C    	movff	tablat,btemp+11
 19125                           
 19126                           ;stkvar	_l @ sp[(-4)+2]
 19127  01877A  0EFE               	movlw	-2
 19128  01877C  006F FF8F FFF6     	movff	plusw1,tblptrl
 19129  018782  0EFF               	movlw	-1
 19130  018784  006F FF8F FFF7     	movff	plusw1,tblptrh
 19131  01878A  0E00               	movlw	low (__mediumconst shr (0+16))
 19132  01878C  6EF8               	movwf	tblptru,c
 19133  01878E  0E1F               	movlw	(high __ramtop+-1)
 19134  018790  64F7               	cpfsgt	tblptrh,c
 19135  018792  D003               	bra	u9197
 19136  018794  0008               	tblrd		*
 19137  018796  50F5               	movf	tablat,w,c
 19138  018798  D007               	bra	u9195
 19139  01879A                     u9197:
 19140  01879A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19141  0187A0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19142  0187A6  50EF               	movf	indf0,w,c
 19143  0187A8                     u9195:
 19144  0187A8  180C               	xorwf	(btemp+11)^0,w,c
 19145  0187AA  B4D8               	btfsc	status,2,c
 19146  0187AC  D766               	goto	l10132
 19147  0187AE                     u9190:
 19148                           
 19149                           ;stkvar	_l @ sp[(-4)+2]
 19150  0187AE  0EFE               	movlw	-2
 19151  0187B0  006F FF8F FFF6     	movff	plusw1,tblptrl
 19152  0187B6  0EFF               	movlw	-1
 19153  0187B8  006F FF8F FFF7     	movff	plusw1,tblptrh
 19154  0187BE  0E00               	movlw	low (__mediumconst shr (0+16))
 19155  0187C0  6EF8               	movwf	tblptru,c
 19156  0187C2  0E1F               	movlw	(high __ramtop+-1)
 19157  0187C4  64F7               	cpfsgt	tblptrh,c
 19158  0187C6  D003               	bra	u9207
 19159  0187C8  0008               	tblrd		*
 19160  0187CA  50F5               	movf	tablat,w,c
 19161  0187CC  D007               	bra	u9200
 19162  0187CE                     u9207:
 19163  0187CE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19164  0187D4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19165  0187DA  50EF               	movf	indf0,w,c
 19166  0187DC                     u9200:
 19167  0187DC  6E01               	movwf	btemp^0,c
 19168  0187DE  6A02               	clrf	(btemp+1)^0,c
 19169                           
 19170                           ;stkvar	_r @ sp[(-4)+0]
 19171  0187E0  50E1               	movf	fsr1l,w,c
 19172  0187E2  0FFC               	addlw	-4
 19173  0187E4  6ED9               	movwf	fsr2l,c
 19174  0187E6  50E2               	movf	fsr1h,w,c
 19175  0187E8  6EDA               	movwf	fsr2h,c
 19176  0187EA  0EFF               	movlw	255
 19177  0187EC  22DA               	addwfc	fsr2h,f,c
 19178  0187EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 19179  0187F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 19180  0187FA                     	if	0	;tblptru may be non-zero
 19181  0187FA                     	endif
 19182  0187FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19183  0187FA  0E00               	movlw	low (__mediumconst shr (0+16))
 19184  0187FC  6EF8               	movwf	tblptru,c
 19185  0187FE                     	endif
 19186  0187FE  0008               	tblrd		*
 19187  018800  50F5               	movf	tablat,w,c
 19188  018802  5E01               	subwf	btemp^0,f,c
 19189  018804  0E00               	movlw	0
 19190  018806  5A02               	subwfb	(btemp+1)^0,f,c
 19191  018808                     l3727:
 19192                           
 19193                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 19194  018808  0EF6               	movlw	246
 19195  01880A  26E1               	addwf	fsr1l,f,c
 19196  01880C  0EFF               	movlw	255
 19197  01880E  22E2               	addwfc	fsr1h,f,c
 19198  018810  0012               	return		;funcret
 19199  018812                     __end_of_strncmp:
 19200                           	opt callstack 0
 19201                           
 19202 ;; *************** function _stoa *****************
 19203 ;; Defined at:
 19204 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19205 ;; Parameters:    Size  Location     Type
 19206 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19207 ;;		 -> f(6), NULL(0), 
 19208 ;;  s               2  [STACK] PTR unsigned char 
 19209 ;;		 -> ?_printf(2), ?_sprintf(2), STR_62(9), STR_61(12), 
 19210 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 19211 ;;		 -> V(192), 
 19212 ;; Auto vars:     Size  Location     Type
 19213 ;;  nuls            7  [STACK] unsigned char [7]
 19214 ;;  l               2  [STACK] int 
 19215 ;;  p               2  [STACK] int 
 19216 ;;  cp              2  [STACK] PTR unsigned char 
 19217 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_62(9), 
 19218 ;;		 -> STR_61(12), D.lcd(480), D(482), T(144), 
 19219 ;;		 -> STR_3(5), V(192), 
 19220 ;;  w               2  [STACK] int 
 19221 ;;  i               2  [STACK] int 
 19222 ;; Return value:  Size  Location     Type
 19223 ;;                  2  [STACK] int 
 19224 ;; Registers used:
 19225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19226 ;; Tracked objects:
 19227 ;;		On entry : 0/0
 19228 ;;		On exit  : 0/0
 19229 ;;		Unchanged: 0/0
 19230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19235 ;;Total ram usage:        0 bytes
 19236 ;; Hardware stack levels used:    1
 19237 ;; Hardware stack levels required when called:   18
 19238 ;; This function calls:
 19239 ;;		_fputc
 19240 ;;		_strlen
 19241 ;; This function is called by:
 19242 ;;		_vfpfcnvrt
 19243 ;; This function uses a reentrant model
 19244 ;;
 19245                           
 19246                           	psect	text75
 19247  0179BA                     __ptext75:
 19248                           	opt callstack 0
 19249  0179BA                     _stoa:
 19250                           	opt callstack 0
 19251                           
 19252                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19253  0179BA  0E11               	movlw	17
 19254  0179BC  26E1               	addwf	fsr1l,f,c
 19255  0179BE  0E00               	movlw	0
 19256  0179C0  22E2               	addwfc	fsr1h,f,c
 19257                           
 19258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 19259                           
 19260                           ;incstack = 0
 19261 ;; hardware stack exceeded
 19262  0179C2  EE20  F100         	lfsr	2,stoa@F1166
 19263                           
 19264                           ;stkvar	_nuls @ sp[(-17)+0]
 19265  0179C6  0E07               	movlw	7
 19266  0179C8  6E01               	movwf	btemp^0,c
 19267  0179CA  0EEF               	movlw	-17
 19268  0179CC                     us1271999:
 19269  0179CC  006F FF7B FFE3     	movff	postinc2,plusw1
 19270  0179D2  28E8               	incf	wreg,w,c
 19271  0179D4  2E01               	decfsz	btemp^0,f,c
 19272  0179D6  D7FA               	bra	us1271999
 19273                           
 19274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 19275                           ;stkvar	_s @ sp[(-17)+-4]
 19276  0179D8  0EEB               	movlw	-21
 19277  0179DA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19278  0179E0  0EEC               	movlw	-20
 19279  0179E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 19280                           
 19281                           ;stkvar	_cp @ sp[(-17)+11]
 19282  0179E8  0EFB               	movlw	-5
 19283  0179EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 19284  0179F0  0EFA               	movlw	-6
 19285  0179F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19286                           
 19287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 19288                           ;stkvar	_cp @ sp[(-17)+11]
 19289  0179F8  0EFA               	movlw	-6
 19290  0179FA  006F FF8C  F001    	movff	plusw1,btemp
 19291  017A00  0EFB               	movlw	-5
 19292  017A02  50E3               	movf	plusw1,w,c
 19293  017A04  1001               	iorwf	btemp^0,w,c
 19294  017A06  A4D8               	btfss	status,2,c
 19295  017A08  D00E               	goto	l13568
 19296                           
 19297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 19298                           ;stkvar	_nuls @ sp[(-17)+0]
 19299  017A0A  0EEF               	movlw	239
 19300  017A0C  24E1               	addwf	fsr1l,w,c
 19301  017A0E  6E0B               	movwf	(btemp+10)^0,c
 19302  017A10  0EFF               	movlw	255
 19303  017A12  20E2               	addwfc	fsr1h,w,c
 19304  017A14  6E0C               	movwf	(btemp+11)^0,c
 19305                           
 19306                           ;stkvar	_cp @ sp[(-17)+11]
 19307  017A16  0EFB               	movlw	-5
 19308  017A18  0060  F033  FFE3   	movff	btemp+11,plusw1
 19309  017A1E  0EFA               	movlw	-6
 19310  017A20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19311  017A26                     l13568:
 19312                           
 19313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 19314                           ;stkvar	_cp @ sp[(-17)+11]
 19315  017A26  0EFA               	movlw	-6
 19316  017A28  006F FF8F FFE6     	movff	plusw1,postinc1
 19317  017A2E  006F FF8F FFE6     	movff	plusw1,postinc1
 19318  017A34  ECC0  F0DB         	call	_strlen	;wreg free
 19319                           
 19320                           ;stkvar	_l @ sp[(-17)+7]
 19321  017A38  0EF6               	movlw	-10
 19322  017A3A  0060  F007  FFE3   	movff	btemp,plusw1
 19323  017A40  0EF7               	movlw	-9
 19324  017A42  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19325                           
 19326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 19327                           ;stkvar	_p @ sp[(-17)+9]
 19328  017A48  0EF8               	movlw	-8
 19329  017A4A  0060  F0F3  FFE3   	movff	_prec,plusw1
 19330  017A50  0EF9               	movlw	-7
 19331  017A52  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 19332                           
 19333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 19334                           ;stkvar	_p @ sp[(-17)+9]
 19335  017A58  0EF9               	movlw	-7
 19336  017A5A  BEE3               	btfsc	plusw1,7,c
 19337  017A5C  D023               	goto	l2552
 19338                           
 19339                           ;stkvar	_l @ sp[(-17)+7]
 19340                           ;stkvar	_p @ sp[(-17)+9]
 19341  017A5E  50E1               	movf	fsr1l,w,c
 19342  017A60  0FF8               	addlw	-8
 19343  017A62  6ED9               	movwf	fsr2l,c
 19344  017A64  50E2               	movf	fsr1h,w,c
 19345  017A66  6EDA               	movwf	fsr2h,c
 19346  017A68  0EFF               	movlw	255
 19347  017A6A  22DA               	addwfc	fsr2h,f,c
 19348  017A6C  0EF6               	movlw	-10
 19349  017A6E  50E3               	movf	plusw1,w,c
 19350  017A70  5CDE               	subwf	postinc2,w,c
 19351  017A72  50DE               	movf	postinc2,w,c
 19352  017A74  0A80               	xorlw	128
 19353  017A76  6E01               	movwf	btemp^0,c
 19354  017A78  0EF7               	movlw	-9
 19355  017A7A  50E3               	movf	plusw1,w,c
 19356  017A7C  0A80               	xorlw	128
 19357  017A7E  5801               	subwfb	btemp^0,w,c
 19358  017A80  B0D8               	btfsc	status,0,c
 19359  017A82  D010               	goto	l2552
 19360                           
 19361                           ;stkvar	_p @ sp[(-17)+9]
 19362                           ;stkvar	_l @ sp[(-17)+7]
 19363  017A84  0EF8               	movlw	-8
 19364  017A86  006F FF8C  F001    	movff	plusw1,btemp
 19365  017A8C  0EF6               	movlw	-10
 19366  017A8E  0060  F007  FFE3   	movff	btemp,plusw1
 19367  017A94  0EF9               	movlw	-7
 19368  017A96  006F FF8C  F001    	movff	plusw1,btemp
 19369  017A9C  0EF7               	movlw	-9
 19370  017A9E  0060  F007  FFE3   	movff	btemp,plusw1
 19371  017AA4                     l2552:
 19372                           
 19373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 19374                           ;stkvar	_l @ sp[(-17)+7]
 19375                           ;stkvar	_p @ sp[(-17)+9]
 19376  017AA4  0EF6               	movlw	-10
 19377  017AA6  006F FF8C  F001    	movff	plusw1,btemp
 19378  017AAC  0EF8               	movlw	-8
 19379  017AAE  0060  F007  FFE3   	movff	btemp,plusw1
 19380  017AB4  0EF7               	movlw	-9
 19381  017AB6  006F FF8C  F001    	movff	plusw1,btemp
 19382  017ABC  0EF9               	movlw	-7
 19383  017ABE  0060  F007  FFE3   	movff	btemp,plusw1
 19384                           
 19385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 19386                           ;stkvar	_w @ sp[(-17)+13]
 19387  017AC4  0EFC               	movlw	-4
 19388  017AC6  0060  F0EB  FFE3   	movff	_width,plusw1
 19389  017ACC  0EFD               	movlw	-3
 19390  017ACE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19391                           
 19392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 19393  017AD4  A03E               	btfss	_flags^0,0,c
 19394  017AD6  D01F               	goto	l13588
 19395  017AD8  D031               	goto	u12760
 19396  017ADA                     l13584:
 19397                           
 19398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 19399                           ;stkvar	_fp @ sp[(-17)+-2]
 19400  017ADA  0EED               	movlw	-19
 19401  017ADC  006F FF8F FFE6     	movff	plusw1,postinc1
 19402  017AE2  006F FF8F FFE6     	movff	plusw1,postinc1
 19403  017AE8  0E20               	movlw	32
 19404  017AEA  6EE6               	movwf	postinc1,c
 19405  017AEC  0E00               	movlw	0
 19406  017AEE  6EE6               	movwf	postinc1,c
 19407  017AF0  ECF4  F0D0         	call	_fputc	;wreg free
 19408                           
 19409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 19410                           ;stkvar	_l @ sp[(-17)+7]
 19411  017AF4  0EF6               	movlw	-10
 19412  017AF6  50E3               	movf	plusw1,w,c
 19413  017AF8  0F01               	addlw	1
 19414  017AFA  6E01               	movwf	btemp^0,c
 19415  017AFC  0EF6               	movlw	-10
 19416  017AFE  0060  F007  FFE3   	movff	btemp,plusw1
 19417  017B04  6A01               	clrf	btemp^0,c
 19418  017B06  0EF7               	movlw	-9
 19419  017B08  50E3               	movf	plusw1,w,c
 19420  017B0A  2001               	addwfc	btemp^0,w,c
 19421  017B0C  6E01               	movwf	btemp^0,c
 19422  017B0E  0EF7               	movlw	-9
 19423  017B10  0060  F007  FFE3   	movff	btemp,plusw1
 19424  017B16                     l13588:
 19425                           
 19426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 19427                           ;stkvar	_w @ sp[(-17)+13]
 19428                           ;stkvar	_l @ sp[(-17)+7]
 19429  017B16  50E1               	movf	fsr1l,w,c
 19430  017B18  0FF6               	addlw	-10
 19431  017B1A  6ED9               	movwf	fsr2l,c
 19432  017B1C  50E2               	movf	fsr1h,w,c
 19433  017B1E  6EDA               	movwf	fsr2h,c
 19434  017B20  0EFF               	movlw	255
 19435  017B22  22DA               	addwfc	fsr2h,f,c
 19436  017B24  0EFC               	movlw	-4
 19437  017B26  50E3               	movf	plusw1,w,c
 19438  017B28  5CDE               	subwf	postinc2,w,c
 19439  017B2A  50DE               	movf	postinc2,w,c
 19440  017B2C  0A80               	xorlw	128
 19441  017B2E  6E01               	movwf	btemp^0,c
 19442  017B30  0EFD               	movlw	-3
 19443  017B32  50E3               	movf	plusw1,w,c
 19444  017B34  0A80               	xorlw	128
 19445  017B36  5801               	subwfb	btemp^0,w,c
 19446  017B38  A0D8               	btfss	status,0,c
 19447  017B3A  D7CF               	goto	l13584
 19448  017B3C                     u12760:
 19449                           
 19450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 19451                           ;stkvar	_i @ sp[(-17)+15]
 19452  017B3C  0EFE               	movlw	-2
 19453  017B3E  6AE3               	clrf	plusw1,c
 19454  017B40  0EFF               	movlw	-1
 19455  017B42  6AE3               	clrf	plusw1,c
 19456                           
 19457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 19458  017B44  D045               	goto	l13598
 19459  017B46                     l13592:
 19460                           
 19461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 19462                           ;stkvar	_fp @ sp[(-17)+-2]
 19463  017B46  0EED               	movlw	-19
 19464  017B48  006F FF8F FFE6     	movff	plusw1,postinc1
 19465  017B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 19466                           
 19467                           ;stkvar	_cp @ sp[(-19)+11]
 19468  017B54  0EF8               	movlw	-8
 19469  017B56  006F FF8F FFF6     	movff	plusw1,tblptrl
 19470  017B5C  0EF9               	movlw	-7
 19471  017B5E  006F FF8F FFF7     	movff	plusw1,tblptrh
 19472  017B64  0E00               	movlw	low (__mediumconst shr (0+16))
 19473  017B66  6EF8               	movwf	tblptru,c
 19474  017B68  0E1F               	movlw	(high __ramtop+-1)
 19475  017B6A  64F7               	cpfsgt	tblptrh,c
 19476  017B6C  D003               	bra	u12777
 19477  017B6E  0008               	tblrd		*
 19478  017B70  50F5               	movf	tablat,w,c
 19479  017B72  D007               	bra	u12770
 19480  017B74                     u12777:
 19481  017B74  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19482  017B7A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19483  017B80  50EF               	movf	indf0,w,c
 19484  017B82                     u12770:
 19485  017B82  6EE6               	movwf	postinc1,c
 19486  017B84  0E00               	movlw	0
 19487  017B86  6EE6               	movwf	postinc1,c
 19488  017B88  ECF4  F0D0         	call	_fputc	;wreg free
 19489                           
 19490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 19491                           ;stkvar	_cp @ sp[(-17)+11]
 19492  017B8C  0EFA               	movlw	-6
 19493  017B8E  50E3               	movf	plusw1,w,c
 19494  017B90  0F01               	addlw	1
 19495  017B92  6E01               	movwf	btemp^0,c
 19496  017B94  0EFA               	movlw	-6
 19497  017B96  0060  F007  FFE3   	movff	btemp,plusw1
 19498  017B9C  6A01               	clrf	btemp^0,c
 19499  017B9E  0EFB               	movlw	-5
 19500  017BA0  50E3               	movf	plusw1,w,c
 19501  017BA2  2001               	addwfc	btemp^0,w,c
 19502  017BA4  6E01               	movwf	btemp^0,c
 19503  017BA6  0EFB               	movlw	-5
 19504  017BA8  0060  F007  FFE3   	movff	btemp,plusw1
 19505                           
 19506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 19507                           ;stkvar	_i @ sp[(-17)+15]
 19508  017BAE  0EFE               	movlw	-2
 19509  017BB0  50E3               	movf	plusw1,w,c
 19510  017BB2  0F01               	addlw	1
 19511  017BB4  6E01               	movwf	btemp^0,c
 19512  017BB6  0EFE               	movlw	-2
 19513  017BB8  0060  F007  FFE3   	movff	btemp,plusw1
 19514  017BBE  6A01               	clrf	btemp^0,c
 19515  017BC0  0EFF               	movlw	-1
 19516  017BC2  50E3               	movf	plusw1,w,c
 19517  017BC4  2001               	addwfc	btemp^0,w,c
 19518  017BC6  6E01               	movwf	btemp^0,c
 19519  017BC8  0EFF               	movlw	-1
 19520  017BCA  0060  F007  FFE3   	movff	btemp,plusw1
 19521  017BD0                     l13598:
 19522                           
 19523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 19524                           ;stkvar	_p @ sp[(-17)+9]
 19525                           ;stkvar	_i @ sp[(-17)+15]
 19526  017BD0  50E1               	movf	fsr1l,w,c
 19527  017BD2  0FFE               	addlw	-2
 19528  017BD4  6ED9               	movwf	fsr2l,c
 19529  017BD6  50E2               	movf	fsr1h,w,c
 19530  017BD8  6EDA               	movwf	fsr2h,c
 19531  017BDA  0EFF               	movlw	255
 19532  017BDC  22DA               	addwfc	fsr2h,f,c
 19533  017BDE  0EF8               	movlw	-8
 19534  017BE0  50E3               	movf	plusw1,w,c
 19535  017BE2  5CDE               	subwf	postinc2,w,c
 19536  017BE4  50DE               	movf	postinc2,w,c
 19537  017BE6  0A80               	xorlw	128
 19538  017BE8  6E01               	movwf	btemp^0,c
 19539  017BEA  0EF9               	movlw	-7
 19540  017BEC  50E3               	movf	plusw1,w,c
 19541  017BEE  0A80               	xorlw	128
 19542  017BF0  5801               	subwfb	btemp^0,w,c
 19543  017BF2  A0D8               	btfss	status,0,c
 19544  017BF4  D7A8               	goto	l13592
 19545                           
 19546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 19547  017BF6  B03E               	btfsc	_flags^0,0,c
 19548  017BF8  D01F               	goto	l13606
 19549  017BFA  D031               	goto	u12800
 19550  017BFC                     l13602:
 19551                           
 19552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 19553                           ;stkvar	_fp @ sp[(-17)+-2]
 19554  017BFC  0EED               	movlw	-19
 19555  017BFE  006F FF8F FFE6     	movff	plusw1,postinc1
 19556  017C04  006F FF8F FFE6     	movff	plusw1,postinc1
 19557  017C0A  0E20               	movlw	32
 19558  017C0C  6EE6               	movwf	postinc1,c
 19559  017C0E  0E00               	movlw	0
 19560  017C10  6EE6               	movwf	postinc1,c
 19561  017C12  ECF4  F0D0         	call	_fputc	;wreg free
 19562                           
 19563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 19564                           ;stkvar	_l @ sp[(-17)+7]
 19565  017C16  0EF6               	movlw	-10
 19566  017C18  50E3               	movf	plusw1,w,c
 19567  017C1A  0F01               	addlw	1
 19568  017C1C  6E01               	movwf	btemp^0,c
 19569  017C1E  0EF6               	movlw	-10
 19570  017C20  0060  F007  FFE3   	movff	btemp,plusw1
 19571  017C26  6A01               	clrf	btemp^0,c
 19572  017C28  0EF7               	movlw	-9
 19573  017C2A  50E3               	movf	plusw1,w,c
 19574  017C2C  2001               	addwfc	btemp^0,w,c
 19575  017C2E  6E01               	movwf	btemp^0,c
 19576  017C30  0EF7               	movlw	-9
 19577  017C32  0060  F007  FFE3   	movff	btemp,plusw1
 19578  017C38                     l13606:
 19579                           
 19580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 19581                           ;stkvar	_w @ sp[(-17)+13]
 19582                           ;stkvar	_l @ sp[(-17)+7]
 19583  017C38  50E1               	movf	fsr1l,w,c
 19584  017C3A  0FF6               	addlw	-10
 19585  017C3C  6ED9               	movwf	fsr2l,c
 19586  017C3E  50E2               	movf	fsr1h,w,c
 19587  017C40  6EDA               	movwf	fsr2h,c
 19588  017C42  0EFF               	movlw	255
 19589  017C44  22DA               	addwfc	fsr2h,f,c
 19590  017C46  0EFC               	movlw	-4
 19591  017C48  50E3               	movf	plusw1,w,c
 19592  017C4A  5CDE               	subwf	postinc2,w,c
 19593  017C4C  50DE               	movf	postinc2,w,c
 19594  017C4E  0A80               	xorlw	128
 19595  017C50  6E01               	movwf	btemp^0,c
 19596  017C52  0EFD               	movlw	-3
 19597  017C54  50E3               	movf	plusw1,w,c
 19598  017C56  0A80               	xorlw	128
 19599  017C58  5801               	subwfb	btemp^0,w,c
 19600  017C5A  A0D8               	btfss	status,0,c
 19601  017C5C  D7CF               	goto	l13602
 19602  017C5E                     u12800:
 19603                           
 19604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 19605                           ;stkvar	_l @ sp[(-17)+7]
 19606  017C5E  0EF6               	movlw	-10
 19607  017C60  006F FF8C  F001    	movff	plusw1,btemp
 19608  017C66  0EF7               	movlw	-9
 19609  017C68  006F FF8C  F002    	movff	plusw1,btemp+1
 19610                           
 19611                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19612  017C6E  0EEB               	movlw	235
 19613  017C70  26E1               	addwf	fsr1l,f,c
 19614  017C72  0EFF               	movlw	255
 19615  017C74  22E2               	addwfc	fsr1h,f,c
 19616  017C76  0012               	return		;funcret
 19617  017C78                     __end_of_stoa:
 19618                           	opt callstack 0
 19619                           
 19620 ;; *************** function _efgtoa *****************
 19621 ;; Defined at:
 19622 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19623 ;; Parameters:    Size  Location     Type
 19624 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19625 ;;		 -> f(6), NULL(0), 
 19626 ;;  f               4  [STACK] PTR struct _IO_FILE
 19627 ;;  c               1  [STACK] unsigned char 
 19628 ;; Auto vars:     Size  Location     Type
 19629 ;;  u               4  [STACK] unsigned char 
 19630 ;;  g               4  [STACK] unsigned char 
 19631 ;;  l               4  [STACK] unsigned char 
 19632 ;;  h               4  [STACK] unsigned char 
 19633 ;;  ou              4  [STACK] unsigned char 
 19634 ;;  n               2  [STACK] int 
 19635 ;;  e               2  [STACK] int 
 19636 ;;  i               2  [STACK] int 
 19637 ;;  w               2  [STACK] int 
 19638 ;;  p               2  [STACK] int 
 19639 ;;  sign            2  [STACK] int 
 19640 ;;  d               2  [STACK] int 
 19641 ;;  ne              2  [STACK] int 
 19642 ;;  m               2  [STACK] int 
 19643 ;;  pp              2  [STACK] int 
 19644 ;;  t               2  [STACK] int 
 19645 ;;  mode            1  [STACK] unsigned char 
 19646 ;;  nmode           1  [STACK] unsigned char 
 19647 ;; Return value:  Size  Location     Type
 19648 ;;                  2  [STACK] int 
 19649 ;; Registers used:
 19650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 19651 ;; Tracked objects:
 19652 ;;		On entry : 0/0
 19653 ;;		On exit  : 0/0
 19654 ;;		Unchanged: 0/0
 19655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19660 ;;Total ram usage:        0 bytes
 19661 ;; Hardware stack levels used:    1
 19662 ;; Hardware stack levels required when called:   20
 19663 ;; This function calls:
 19664 ;;		___awdiv
 19665 ;;		___awmod
 19666 ;;		___fladd
 19667 ;;		___fldiv
 19668 ;;		___fleq
 19669 ;;		___flge
 19670 ;;		___flmul
 19671 ;;		___flneg
 19672 ;;		___flsub
 19673 ;;		___fltol
 19674 ;;		___fpclassifyf
 19675 ;;		_floorf
 19676 ;;		_isupper
 19677 ;;		_pad
 19678 ;;		_strcpy
 19679 ;;		_tolower
 19680 ;; This function is called by:
 19681 ;;		_vfpfcnvrt
 19682 ;; This function uses a reentrant model
 19683 ;;
 19684                           
 19685                           	psect	text76
 19686  011292                     __ptext76:
 19687                           	opt callstack 0
 19688  011292                     _efgtoa:
 19689                           	opt callstack 0
 19690                           
 19691                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19692  011292  0E38               	movlw	56
 19693  011294  26E1               	addwf	fsr1l,f,c
 19694  011296  0E00               	movlw	0
 19695  011298  22E2               	addwfc	fsr1h,f,c
 19696                           
 19697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 19698                           ;stkvar	_sign @ sp[(-56)+42]
 19699                           
 19700                           ;incstack = 0
 19701 ;; hardware stack exceeded
 19702  01129A  0EF2               	movlw	-14
 19703  01129C  6AE3               	clrf	plusw1,c
 19704  01129E  0EF3               	movlw	-13
 19705  0112A0  6AE3               	clrf	plusw1,c
 19706                           
 19707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 19708                           ;stkvar	_f @ sp[(-56)+-6]
 19709  0112A2  0EC2               	movlw	-62
 19710  0112A4  006F FF8C  F009    	movff	plusw1,btemp+8
 19711  0112AA  0EC3               	movlw	-61
 19712  0112AC  006F FF8C  F00A    	movff	plusw1,btemp+9
 19713  0112B2  0EC4               	movlw	-60
 19714  0112B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 19715  0112BA  0EC5               	movlw	-59
 19716  0112BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19717                           
 19718                           ;stkvar	_g @ sp[(-56)+16]
 19719  0112C2  0ED8               	movlw	-40
 19720  0112C4  0060  F027  FFE3   	movff	btemp+8,plusw1
 19721  0112CA  0ED9               	movlw	-39
 19722  0112CC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19723  0112D2  0EDA               	movlw	-38
 19724  0112D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19725  0112DA  0EDB               	movlw	-37
 19726  0112DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 19727                           
 19728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 19729                           ;stkvar	_g @ sp[(-56)+16]
 19730  0112E2  0EDB               	movlw	-37
 19731  0112E4  AEE3               	btfss	plusw1,7,c
 19732  0112E6  D02B               	goto	l13266
 19733                           
 19734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 19735  0112E8  0E01               	movlw	1
 19736  0112EA  6E0B               	movwf	(btemp+10)^0,c
 19737  0112EC  0E00               	movlw	0
 19738  0112EE  6E0C               	movwf	(btemp+11)^0,c
 19739                           
 19740                           ;stkvar	_sign @ sp[(-56)+42]
 19741  0112F0  0EF2               	movlw	-14
 19742  0112F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19743  0112F8  0EF3               	movlw	-13
 19744  0112FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 19745                           
 19746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 19747                           ;stkvar	_g @ sp[(-56)+16]
 19748  011300  0ED8               	movlw	-40
 19749  011302  006F FF8F FFE6     	movff	plusw1,postinc1
 19750  011308  006F FF8F FFE6     	movff	plusw1,postinc1
 19751  01130E  006F FF8F FFE6     	movff	plusw1,postinc1
 19752  011314  006F FF8F FFE6     	movff	plusw1,postinc1
 19753  01131A  ECBB  F0E2         	call	___flneg	;wreg free
 19754                           
 19755                           ;stkvar	_g @ sp[(-56)+16]
 19756  01131E  0ED8               	movlw	-40
 19757  011320  0060  F007  FFE3   	movff	btemp,plusw1
 19758  011326  0ED9               	movlw	-39
 19759  011328  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19760  01132E  0EDA               	movlw	-38
 19761  011330  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19762  011336  0EDB               	movlw	-37
 19763  011338  0060  F013  FFE3   	movff	btemp+3,plusw1
 19764  01133E                     l13266:
 19765                           
 19766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 19767                           ;stkvar	_n @ sp[(-56)+32]
 19768  01133E  0EE8               	movlw	-24
 19769  011340  6AE3               	clrf	plusw1,c
 19770  011342  0EE9               	movlw	-23
 19771  011344  6AE3               	clrf	plusw1,c
 19772                           
 19773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 19774                           ;stkvar	_w @ sp[(-56)+38]
 19775  011346  0EEE               	movlw	-18
 19776  011348  0060  F0EB  FFE3   	movff	_width,plusw1
 19777  01134E  0EEF               	movlw	-17
 19778  011350  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19779                           
 19780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 19781                           ;stkvar	_sign @ sp[(-56)+42]
 19782  011356  0EF2               	movlw	-14
 19783  011358  006F FF8C  F001    	movff	plusw1,btemp
 19784  01135E  0EF3               	movlw	-13
 19785  011360  50E3               	movf	plusw1,w,c
 19786  011362  1001               	iorwf	btemp^0,w,c
 19787  011364  A4D8               	btfss	status,2,c
 19788  011366  D002               	goto	u12210
 19789  011368  A43E               	btfss	_flags^0,2,c
 19790  01136A  D036               	goto	l13286
 19791  01136C                     u12210:
 19792                           
 19793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 19794                           ;stkvar	_sign @ sp[(-56)+42]
 19795  01136C  0EF2               	movlw	-14
 19796  01136E  006F FF8C  F001    	movff	plusw1,btemp
 19797  011374  0EF3               	movlw	-13
 19798  011376  50E3               	movf	plusw1,w,c
 19799  011378  1001               	iorwf	btemp^0,w,c
 19800  01137A  A4D8               	btfss	status,2,c
 19801  01137C  D002               	goto	l13278
 19802  01137E  0E2B               	movlw	43
 19803  011380  D001               	goto	L21
 19804  011382                     l13278:
 19805  011382  0E2D               	movlw	45
 19806  011384                     L21:
 19807  011384  6E0B               	movwf	(btemp+10)^0,c
 19808  011386  0E00               	movlw	0
 19809  011388  6E0C               	movwf	(btemp+11)^0,c
 19810                           
 19811                           ;stkvar	_efgtoa$6756 @ sp[(-56)+10]
 19812  01138A  0ED2               	movlw	-46
 19813  01138C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19814  011392  0ED3               	movlw	-45
 19815  011394  0060  F033  FFE3   	movff	btemp+11,plusw1
 19816                           
 19817                           ;stkvar	_efgtoa$6756 @ sp[(-56)+10]
 19818  01139A  0ED2               	movlw	-46
 19819  01139C  006F FF8C  F394    	movff	plusw1,_dbuf
 19820                           
 19821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 19822                           ;stkvar	_n @ sp[(-56)+32]
 19823  0113A2  0EE8               	movlw	-24
 19824  0113A4  50E3               	movf	plusw1,w,c
 19825  0113A6  0F01               	addlw	1
 19826  0113A8  6E01               	movwf	btemp^0,c
 19827  0113AA  0EE8               	movlw	-24
 19828  0113AC  0060  F007  FFE3   	movff	btemp,plusw1
 19829  0113B2  6A01               	clrf	btemp^0,c
 19830  0113B4  0EE9               	movlw	-23
 19831  0113B6  50E3               	movf	plusw1,w,c
 19832  0113B8  2001               	addwfc	btemp^0,w,c
 19833  0113BA  6E01               	movwf	btemp^0,c
 19834  0113BC  0EE9               	movlw	-23
 19835  0113BE  0060  F007  FFE3   	movff	btemp,plusw1
 19836                           
 19837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 19838                           ;stkvar	_w @ sp[(-56)+38]
 19839  0113C4  50E1               	movf	fsr1l,w,c
 19840  0113C6  0FEE               	addlw	-18
 19841  0113C8  6ED9               	movwf	fsr2l,c
 19842  0113CA  50E2               	movf	fsr1h,w,c
 19843  0113CC  6EDA               	movwf	fsr2h,c
 19844  0113CE  0EFF               	movlw	255
 19845  0113D0  22DA               	addwfc	fsr2h,f,c
 19846  0113D2  06DE               	decf	postinc2,f,c
 19847  0113D4  0E00               	movlw	0
 19848  0113D6  5ADD               	subwfb	postdec2,f,c
 19849  0113D8                     l13286:
 19850                           
 19851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 19852                           ;stkvar	_g @ sp[(-56)+16]
 19853  0113D8  0ED8               	movlw	-40
 19854  0113DA  006F FF8F FFE6     	movff	plusw1,postinc1
 19855  0113E0  006F FF8F FFE6     	movff	plusw1,postinc1
 19856  0113E6  006F FF8F FFE6     	movff	plusw1,postinc1
 19857  0113EC  006F FF8F FFE6     	movff	plusw1,postinc1
 19858  0113F2  ECA7  F0C8         	call	___fpclassifyf	;wreg free
 19859  0113F6  0401               	decf	btemp^0,w,c
 19860  0113F8  1002               	iorwf	(btemp+1)^0,w,c
 19861  0113FA  A4D8               	btfss	status,2,c
 19862  0113FC  D076               	goto	l13304
 19863  0113FE  0EBF               	movlw	191
 19864  011400  6E0B               	movwf	(btemp+10)^0,c
 19865  011402  0EFF               	movlw	255
 19866  011404  6E0C               	movwf	(btemp+11)^0,c
 19867                           
 19868                           ;stkvar	_c @ sp[(-56)+-7]
 19869  011406  0EC1               	movlw	-63
 19870  011408  50E3               	movf	plusw1,w,c
 19871  01140A  6E09               	movwf	(btemp+8)^0,c
 19872  01140C  6A0A               	clrf	(btemp+9)^0,c
 19873  01140E  500B               	movf	(btemp+10)^0,w,c
 19874  011410  2609               	addwf	(btemp+8)^0,f,c
 19875  011412  500C               	movf	(btemp+11)^0,w,c
 19876  011414  220A               	addwfc	(btemp+9)^0,f,c
 19877  011416  500A               	movf	(btemp+9)^0,w,c
 19878  011418  E106               	bnz	u12240
 19879  01141A  0E1A               	movlw	26
 19880  01141C  5C09               	subwf	(btemp+8)^0,w,c
 19881  01141E  B0D8               	btfsc	status,0,c
 19882  011420  D002               	goto	u12240
 19883  011422  0E01               	movlw	1
 19884  011424  D001               	goto	u12250
 19885  011426                     u12240:
 19886  011426  0E00               	movlw	0
 19887  011428                     u12250:
 19888  011428  6E0B               	movwf	(btemp+10)^0,c
 19889  01142A  6A0C               	clrf	(btemp+11)^0,c
 19890                           
 19891                           ;stkvar	_efgtoa$6757 @ sp[(-56)+8]
 19892  01142C  0ED0               	movlw	-48
 19893  01142E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19894  011434  0ED1               	movlw	-47
 19895  011436  0060  F033  FFE3   	movff	btemp+11,plusw1
 19896                           
 19897                           ;stkvar	_efgtoa$6757 @ sp[(-56)+8]
 19898  01143C  0ED0               	movlw	-48
 19899  01143E  006F FF8C  F001    	movff	plusw1,btemp
 19900  011444  0ED1               	movlw	-47
 19901  011446  50E3               	movf	plusw1,w,c
 19902  011448  1001               	iorwf	btemp^0,w,c
 19903  01144A  B4D8               	btfsc	status,2,c
 19904  01144C  D017               	goto	l13296
 19905                           
 19906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 19907  01144E  0ED7               	movlw	low STR_81
 19908  011450  6EE6               	movwf	postinc1,c
 19909  011452  0EFF               	movlw	high STR_81
 19910  011454  6EE6               	movwf	postinc1,c
 19911                           
 19912                           ;stkvar	_n @ sp[(-58)+32]
 19913  011456  0E94               	movlw	low _dbuf
 19914  011458  6E0B               	movwf	(btemp+10)^0,c
 19915  01145A  0E03               	movlw	high _dbuf
 19916  01145C  6E0C               	movwf	(btemp+11)^0,c
 19917  01145E  0EE6               	movlw	-26
 19918  011460  50E3               	movf	plusw1,w,c
 19919  011462  260B               	addwf	(btemp+10)^0,f,c
 19920  011464  0EE7               	movlw	-25
 19921  011466  50E3               	movf	plusw1,w,c
 19922  011468  220C               	addwfc	(btemp+11)^0,f,c
 19923  01146A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19924  011470  0060  F033  FFE6   	movff	btemp+11,postinc1
 19925  011476  EC18  F0D7         	call	_strcpy	;wreg free
 19926                           
 19927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 19928  01147A  D016               	goto	l13298
 19929  01147C                     l13296:
 19930                           
 19931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 19932  01147C  0EDF               	movlw	low STR_82
 19933  01147E  6EE6               	movwf	postinc1,c
 19934  011480  0EFF               	movlw	high STR_82
 19935  011482  6EE6               	movwf	postinc1,c
 19936                           
 19937                           ;stkvar	_n @ sp[(-58)+32]
 19938  011484  0E94               	movlw	low _dbuf
 19939  011486  6E0B               	movwf	(btemp+10)^0,c
 19940  011488  0E03               	movlw	high _dbuf
 19941  01148A  6E0C               	movwf	(btemp+11)^0,c
 19942  01148C  0EE6               	movlw	-26
 19943  01148E  50E3               	movf	plusw1,w,c
 19944  011490  260B               	addwf	(btemp+10)^0,f,c
 19945  011492  0EE7               	movlw	-25
 19946  011494  50E3               	movf	plusw1,w,c
 19947  011496  220C               	addwfc	(btemp+11)^0,f,c
 19948  011498  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19949  01149E  0060  F033  FFE6   	movff	btemp+11,postinc1
 19950  0114A4  EC18  F0D7         	call	_strcpy	;wreg free
 19951  0114A8                     l13298:
 19952                           
 19953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 19954                           ;stkvar	_w @ sp[(-56)+38]
 19955  0114A8  50E1               	movf	fsr1l,w,c
 19956  0114AA  0FEE               	addlw	-18
 19957  0114AC  6ED9               	movwf	fsr2l,c
 19958  0114AE  50E2               	movf	fsr1h,w,c
 19959  0114B0  6EDA               	movwf	fsr2h,c
 19960  0114B2  0EFF               	movlw	255
 19961  0114B4  22DA               	addwfc	fsr2h,f,c
 19962  0114B6  0EFD               	movlw	253
 19963  0114B8  26DE               	addwf	postinc2,f,c
 19964  0114BA  0EFF               	movlw	255
 19965  0114BC  22DD               	addwfc	postdec2,f,c
 19966  0114BE                     l13300:
 19967                           
 19968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 19969                           ;stkvar	_w @ sp[(-56)+38]
 19970  0114BE  0EEE               	movlw	-18
 19971  0114C0  006F FF8F FFE6     	movff	plusw1,postinc1
 19972  0114C6  006F FF8F FFE6     	movff	plusw1,postinc1
 19973  0114CC  0E94               	movlw	low _dbuf
 19974  0114CE  6EE6               	movwf	postinc1,c
 19975  0114D0  0E03               	movlw	high _dbuf
 19976  0114D2  6EE6               	movwf	postinc1,c
 19977                           
 19978                           ;stkvar	_fp @ sp[(-60)+-2]
 19979  0114D4  0EC2               	movlw	-62
 19980  0114D6  006F FF8F FFE6     	movff	plusw1,postinc1
 19981  0114DC  006F FF8F FFE6     	movff	plusw1,postinc1
 19982  0114E2  ECBC  F0D3         	call	_pad	;wreg free
 19983  0114E6  EF66  F092         	goto	l2470
 19984  0114EA                     l13304:
 19985                           
 19986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 19987                           ;stkvar	_g @ sp[(-56)+16]
 19988  0114EA  0ED8               	movlw	-40
 19989  0114EC  006F FF8F FFE6     	movff	plusw1,postinc1
 19990  0114F2  006F FF8F FFE6     	movff	plusw1,postinc1
 19991  0114F8  006F FF8F FFE6     	movff	plusw1,postinc1
 19992  0114FE  006F FF8F FFE6     	movff	plusw1,postinc1
 19993  011504  ECA7  F0C8         	call	___fpclassifyf	;wreg free
 19994  011508  5001               	movf	btemp^0,w,c
 19995  01150A  1002               	iorwf	(btemp+1)^0,w,c
 19996  01150C  A4D8               	btfss	status,2,c
 19997  01150E  D056               	goto	l13322
 19998  011510  0EBF               	movlw	191
 19999  011512  6E0B               	movwf	(btemp+10)^0,c
 20000  011514  0EFF               	movlw	255
 20001  011516  6E0C               	movwf	(btemp+11)^0,c
 20002                           
 20003                           ;stkvar	_c @ sp[(-56)+-7]
 20004  011518  0EC1               	movlw	-63
 20005  01151A  50E3               	movf	plusw1,w,c
 20006  01151C  6E09               	movwf	(btemp+8)^0,c
 20007  01151E  6A0A               	clrf	(btemp+9)^0,c
 20008  011520  500B               	movf	(btemp+10)^0,w,c
 20009  011522  2609               	addwf	(btemp+8)^0,f,c
 20010  011524  500C               	movf	(btemp+11)^0,w,c
 20011  011526  220A               	addwfc	(btemp+9)^0,f,c
 20012  011528  500A               	movf	(btemp+9)^0,w,c
 20013  01152A  E106               	bnz	u12280
 20014  01152C  0E1A               	movlw	26
 20015  01152E  5C09               	subwf	(btemp+8)^0,w,c
 20016  011530  B0D8               	btfsc	status,0,c
 20017  011532  D002               	goto	u12280
 20018  011534  0E01               	movlw	1
 20019  011536  D001               	goto	u12290
 20020  011538                     u12280:
 20021  011538  0E00               	movlw	0
 20022  01153A                     u12290:
 20023  01153A  6E0B               	movwf	(btemp+10)^0,c
 20024  01153C  6A0C               	clrf	(btemp+11)^0,c
 20025                           
 20026                           ;stkvar	_efgtoa$6761 @ sp[(-56)+6]
 20027  01153E  0ECE               	movlw	-50
 20028  011540  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20029  011546  0ECF               	movlw	-49
 20030  011548  0060  F033  FFE3   	movff	btemp+11,plusw1
 20031                           
 20032                           ;stkvar	_efgtoa$6761 @ sp[(-56)+6]
 20033  01154E  0ECE               	movlw	-50
 20034  011550  006F FF8C  F001    	movff	plusw1,btemp
 20035  011556  0ECF               	movlw	-49
 20036  011558  50E3               	movf	plusw1,w,c
 20037  01155A  1001               	iorwf	btemp^0,w,c
 20038  01155C  B4D8               	btfsc	status,2,c
 20039  01155E  D017               	goto	l13314
 20040                           
 20041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 20042  011560  0EDB               	movlw	low STR_85
 20043  011562  6EE6               	movwf	postinc1,c
 20044  011564  0EFF               	movlw	high STR_85
 20045  011566  6EE6               	movwf	postinc1,c
 20046                           
 20047                           ;stkvar	_n @ sp[(-58)+32]
 20048  011568  0E94               	movlw	low _dbuf
 20049  01156A  6E0B               	movwf	(btemp+10)^0,c
 20050  01156C  0E03               	movlw	high _dbuf
 20051  01156E  6E0C               	movwf	(btemp+11)^0,c
 20052  011570  0EE6               	movlw	-26
 20053  011572  50E3               	movf	plusw1,w,c
 20054  011574  260B               	addwf	(btemp+10)^0,f,c
 20055  011576  0EE7               	movlw	-25
 20056  011578  50E3               	movf	plusw1,w,c
 20057  01157A  220C               	addwfc	(btemp+11)^0,f,c
 20058  01157C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20059  011582  0060  F033  FFE6   	movff	btemp+11,postinc1
 20060  011588  EC18  F0D7         	call	_strcpy	;wreg free
 20061                           
 20062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 20063  01158C  D78D               	goto	l13298
 20064  01158E                     l13314:
 20065                           
 20066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 20067  01158E  0EE3               	movlw	low STR_86
 20068  011590  6EE6               	movwf	postinc1,c
 20069  011592  0EFF               	movlw	high STR_86
 20070  011594  6EE6               	movwf	postinc1,c
 20071                           
 20072                           ;stkvar	_n @ sp[(-58)+32]
 20073  011596  0E94               	movlw	low _dbuf
 20074  011598  6E0B               	movwf	(btemp+10)^0,c
 20075  01159A  0E03               	movlw	high _dbuf
 20076  01159C  6E0C               	movwf	(btemp+11)^0,c
 20077  01159E  0EE6               	movlw	-26
 20078  0115A0  50E3               	movf	plusw1,w,c
 20079  0115A2  260B               	addwf	(btemp+10)^0,f,c
 20080  0115A4  0EE7               	movlw	-25
 20081  0115A6  50E3               	movf	plusw1,w,c
 20082  0115A8  220C               	addwfc	(btemp+11)^0,f,c
 20083  0115AA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20084  0115B0  0060  F033  FFE6   	movff	btemp+11,postinc1
 20085  0115B6  EC18  F0D7         	call	_strcpy	;wreg free
 20086  0115BA  D776               	goto	l13298
 20087  0115BC                     l13322:
 20088                           
 20089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 20090  0115BC  0E00               	movlw	0
 20091  0115BE  6E09               	movwf	(btemp+8)^0,c
 20092  0115C0  0E00               	movlw	0
 20093  0115C2  6E0A               	movwf	(btemp+9)^0,c
 20094  0115C4  0E80               	movlw	128
 20095  0115C6  6E0B               	movwf	(btemp+10)^0,c
 20096  0115C8  0E3F               	movlw	63
 20097  0115CA  6E0C               	movwf	(btemp+11)^0,c
 20098                           
 20099                           ;stkvar	_u @ sp[(-56)+12]
 20100  0115CC  0ED4               	movlw	-44
 20101  0115CE  0060  F027  FFE3   	movff	btemp+8,plusw1
 20102  0115D4  0ED5               	movlw	-43
 20103  0115D6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20104  0115DC  0ED6               	movlw	-42
 20105  0115DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20106  0115E4  0ED7               	movlw	-41
 20107  0115E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 20108                           
 20109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 20110                           ;stkvar	_e @ sp[(-56)+34]
 20111  0115EC  0EEA               	movlw	-22
 20112  0115EE  6AE3               	clrf	plusw1,c
 20113  0115F0  0EEB               	movlw	-21
 20114  0115F2  6AE3               	clrf	plusw1,c
 20115                           
 20116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 20117  0115F4  0E00               	movlw	0
 20118  0115F6  6EE6               	movwf	postinc1,c
 20119  0115F8  0E00               	movlw	0
 20120  0115FA  6EE6               	movwf	postinc1,c
 20121  0115FC  0E00               	movlw	0
 20122  0115FE  6EE6               	movwf	postinc1,c
 20123  011600  0E00               	movlw	0
 20124  011602  6EE6               	movwf	postinc1,c
 20125                           
 20126                           ;stkvar	_g @ sp[(-60)+16]
 20127  011604  0ED4               	movlw	-44
 20128  011606  006F FF8F FFE6     	movff	plusw1,postinc1
 20129  01160C  006F FF8F FFE6     	movff	plusw1,postinc1
 20130  011612  006F FF8F FFE6     	movff	plusw1,postinc1
 20131  011618  006F FF8F FFE6     	movff	plusw1,postinc1
 20132  01161E  EC4D  F0D8         	call	___fleq	;wreg free
 20133  011622  A001               	btfss	btemp& (0+255),0,c
 20134  011624  D039               	goto	l13334
 20135  011626  D0BC               	goto	u12330
 20136  011628                     l13330:
 20137                           
 20138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 20139  011628  0E00               	movlw	0
 20140  01162A  6EE6               	movwf	postinc1,c
 20141  01162C  0E00               	movlw	0
 20142  01162E  6EE6               	movwf	postinc1,c
 20143  011630  0E20               	movlw	32
 20144  011632  6EE6               	movwf	postinc1,c
 20145  011634  0E41               	movlw	65
 20146  011636  6EE6               	movwf	postinc1,c
 20147                           
 20148                           ;stkvar	_u @ sp[(-60)+12]
 20149  011638  0ED0               	movlw	-48
 20150  01163A  006F FF8F FFE6     	movff	plusw1,postinc1
 20151  011640  006F FF8F FFE6     	movff	plusw1,postinc1
 20152  011646  006F FF8F FFE6     	movff	plusw1,postinc1
 20153  01164C  006F FF8F FFE6     	movff	plusw1,postinc1
 20154  011652  EC78  F09F         	call	___flmul	;wreg free
 20155                           
 20156                           ;stkvar	_u @ sp[(-56)+12]
 20157  011656  0ED4               	movlw	-44
 20158  011658  0060  F007  FFE3   	movff	btemp,plusw1
 20159  01165E  0ED5               	movlw	-43
 20160  011660  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20161  011666  0ED6               	movlw	-42
 20162  011668  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20163  01166E  0ED7               	movlw	-41
 20164  011670  0060  F013  FFE3   	movff	btemp+3,plusw1
 20165                           
 20166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 20167                           ;stkvar	_e @ sp[(-56)+34]
 20168  011676  0EEA               	movlw	-22
 20169  011678  50E3               	movf	plusw1,w,c
 20170  01167A  0F01               	addlw	1
 20171  01167C  6E01               	movwf	btemp^0,c
 20172  01167E  0EEA               	movlw	-22
 20173  011680  0060  F007  FFE3   	movff	btemp,plusw1
 20174  011686  6A01               	clrf	btemp^0,c
 20175  011688  0EEB               	movlw	-21
 20176  01168A  50E3               	movf	plusw1,w,c
 20177  01168C  2001               	addwfc	btemp^0,w,c
 20178  01168E  6E01               	movwf	btemp^0,c
 20179  011690  0EEB               	movlw	-21
 20180  011692  0060  F007  FFE3   	movff	btemp,plusw1
 20181  011698                     l13334:
 20182                           
 20183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 20184  011698  0E00               	movlw	0
 20185  01169A  6EE6               	movwf	postinc1,c
 20186  01169C  0E00               	movlw	0
 20187  01169E  6EE6               	movwf	postinc1,c
 20188  0116A0  0E20               	movlw	32
 20189  0116A2  6EE6               	movwf	postinc1,c
 20190  0116A4  0E41               	movlw	65
 20191  0116A6  6EE6               	movwf	postinc1,c
 20192                           
 20193                           ;stkvar	_u @ sp[(-60)+12]
 20194  0116A8  0ED0               	movlw	-48
 20195  0116AA  006F FF8F FFE6     	movff	plusw1,postinc1
 20196  0116B0  006F FF8F FFE6     	movff	plusw1,postinc1
 20197  0116B6  006F FF8F FFE6     	movff	plusw1,postinc1
 20198  0116BC  006F FF8F FFE6     	movff	plusw1,postinc1
 20199  0116C2  EC78  F09F         	call	___flmul	;wreg free
 20200  0116C6  0060  F007  FFE6   	movff	btemp,postinc1
 20201  0116CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20202  0116D2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20203  0116D8  0060  F013  FFE6   	movff	btemp+3,postinc1
 20204                           
 20205                           ;stkvar	_g @ sp[(-60)+16]
 20206  0116DE  0ED4               	movlw	-44
 20207  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
 20208  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 20209  0116EC  006F FF8F FFE6     	movff	plusw1,postinc1
 20210  0116F2  006F FF8F FFE6     	movff	plusw1,postinc1
 20211  0116F8  EC67  F0CC         	call	___flge	;wreg free
 20212  0116FC  A001               	btfss	btemp& (0+255),0,c
 20213  0116FE  D032               	goto	l13340
 20214  011700  D793               	goto	l13330
 20215  011702                     l13336:
 20216                           
 20217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 20218  011702  0E00               	movlw	0
 20219  011704  6EE6               	movwf	postinc1,c
 20220  011706  0E00               	movlw	0
 20221  011708  6EE6               	movwf	postinc1,c
 20222  01170A  0E20               	movlw	32
 20223  01170C  6EE6               	movwf	postinc1,c
 20224  01170E  0E41               	movlw	65
 20225  011710  6EE6               	movwf	postinc1,c
 20226                           
 20227                           ;stkvar	_u @ sp[(-60)+12]
 20228  011712  0ED0               	movlw	-48
 20229  011714  006F FF8F FFE6     	movff	plusw1,postinc1
 20230  01171A  006F FF8F FFE6     	movff	plusw1,postinc1
 20231  011720  006F FF8F FFE6     	movff	plusw1,postinc1
 20232  011726  006F FF8F FFE6     	movff	plusw1,postinc1
 20233  01172C  EC6B  F0A7         	call	___fldiv	;wreg free
 20234                           
 20235                           ;stkvar	_u @ sp[(-56)+12]
 20236  011730  0ED4               	movlw	-44
 20237  011732  0060  F007  FFE3   	movff	btemp,plusw1
 20238  011738  0ED5               	movlw	-43
 20239  01173A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20240  011740  0ED6               	movlw	-42
 20241  011742  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20242  011748  0ED7               	movlw	-41
 20243  01174A  0060  F013  FFE3   	movff	btemp+3,plusw1
 20244                           
 20245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 20246                           ;stkvar	_e @ sp[(-56)+34]
 20247  011750  50E1               	movf	fsr1l,w,c
 20248  011752  0FEA               	addlw	-22
 20249  011754  6ED9               	movwf	fsr2l,c
 20250  011756  50E2               	movf	fsr1h,w,c
 20251  011758  6EDA               	movwf	fsr2h,c
 20252  01175A  0EFF               	movlw	255
 20253  01175C  22DA               	addwfc	fsr2h,f,c
 20254  01175E  06DE               	decf	postinc2,f,c
 20255  011760  0E00               	movlw	0
 20256  011762  5ADD               	subwfb	postdec2,f,c
 20257  011764                     l13340:
 20258                           
 20259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 20260                           ;stkvar	_u @ sp[(-56)+12]
 20261  011764  0ED4               	movlw	-44
 20262  011766  006F FF8F FFE6     	movff	plusw1,postinc1
 20263  01176C  006F FF8F FFE6     	movff	plusw1,postinc1
 20264  011772  006F FF8F FFE6     	movff	plusw1,postinc1
 20265  011778  006F FF8F FFE6     	movff	plusw1,postinc1
 20266                           
 20267                           ;stkvar	_g @ sp[(-60)+16]
 20268  01177E  0ED4               	movlw	-44
 20269  011780  006F FF8F FFE6     	movff	plusw1,postinc1
 20270  011786  006F FF8F FFE6     	movff	plusw1,postinc1
 20271  01178C  006F FF8F FFE6     	movff	plusw1,postinc1
 20272  011792  006F FF8F FFE6     	movff	plusw1,postinc1
 20273  011798  EC67  F0CC         	call	___flge	;wreg free
 20274  01179C  A001               	btfss	btemp& (0+255),0,c
 20275  01179E  D7B1               	goto	l13336
 20276  0117A0                     u12330:
 20277                           
 20278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 20279                           ;stkvar	_c @ sp[(-56)+-7]
 20280  0117A0  0EC1               	movlw	-63
 20281  0117A2  50E3               	movf	plusw1,w,c
 20282  0117A4  6EE6               	movwf	postinc1,c
 20283  0117A6  0E00               	movlw	0
 20284  0117A8  6EE6               	movwf	postinc1,c
 20285  0117AA  EC07  F0DE         	call	_tolower	;wreg free
 20286                           
 20287                           ;stkvar	_mode @ sp[(-56)+54]
 20288  0117AE  0EFE               	movlw	-2
 20289  0117B0  0060  F007  FFE3   	movff	btemp,plusw1
 20290                           
 20291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 20292                           ;stkvar	_mode @ sp[(-56)+54]
 20293                           ;stkvar	_nmode @ sp[(-56)+55]
 20294  0117B6  0EFE               	movlw	-2
 20295  0117B8  006F FF8C  F001    	movff	plusw1,btemp
 20296  0117BE  0EFF               	movlw	-1
 20297  0117C0  0060  F007  FFE3   	movff	btemp,plusw1
 20298                           
 20299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 20300                           ;stkvar	_mode @ sp[(-56)+54]
 20301  0117C6  0EFE               	movlw	-2
 20302  0117C8  006F FF8C  F001    	movff	plusw1,btemp
 20303  0117CE  0E67               	movlw	103
 20304  0117D0  1801               	xorwf	btemp^0,w,c
 20305  0117D2  A4D8               	btfss	status,2,c
 20306  0117D4  D025               	goto	l13358
 20307                           
 20308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 20309  0117D6  503C               	movf	_prec^0,w,c
 20310  0117D8  103D               	iorwf	(_prec+1)^0,w,c
 20311  0117DA  A4D8               	btfss	status,2,c
 20312  0117DC  D004               	goto	l13352
 20313                           
 20314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 20315  0117DE  0E00               	movlw	0
 20316  0117E0  6E3D               	movwf	(_prec+1)^0,c
 20317  0117E2  0E01               	movlw	1
 20318  0117E4  6E3C               	movwf	_prec^0,c
 20319  0117E6                     l13352:
 20320                           
 20321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 20322  0117E6  BE3D               	btfsc	(_prec+1)^0,7,c
 20323  0117E8  D005               	goto	u12360
 20324  0117EA  503D               	movf	(_prec+1)^0,w,c
 20325  0117EC  E110               	bnz	l13356
 20326  0117EE  043C               	decf	_prec^0,w,c
 20327  0117F0  B0D8               	btfsc	status,0,c
 20328  0117F2  D00D               	goto	l13356
 20329  0117F4                     u12360:
 20330  0117F4  0E06               	movlw	6
 20331  0117F6  6E0B               	movwf	(btemp+10)^0,c
 20332  0117F8  0E00               	movlw	0
 20333  0117FA  6E0C               	movwf	(btemp+11)^0,c
 20334                           
 20335                           ;stkvar	_p @ sp[(-56)+40]
 20336  0117FC  0EF0               	movlw	-16
 20337  0117FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20338  011804  0EF1               	movlw	-15
 20339  011806  0060  F033  FFE3   	movff	btemp+11,plusw1
 20340  01180C  D00C               	goto	l13364
 20341  01180E                     l13356:
 20342                           
 20343                           ;stkvar	_p @ sp[(-56)+40]
 20344  01180E  0EF0               	movlw	-16
 20345  011810  0060  F0F3  FFE3   	movff	_prec,plusw1
 20346  011816  0EF1               	movlw	-15
 20347  011818  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20348  01181E  D003               	goto	l13364
 20349  011820                     l13358:
 20350                           
 20351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 20352  011820  AE3D               	btfss	(_prec+1)^0,7,c
 20353  011822  D7F5               	goto	l13356
 20354  011824  D7E7               	goto	u12360
 20355  011826                     l13364:
 20356                           
 20357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 20358                           ;stkvar	_mode @ sp[(-56)+54]
 20359  011826  0EFE               	movlw	-2
 20360  011828  006F FF8C  F001    	movff	plusw1,btemp
 20361  01182E  0E67               	movlw	103
 20362  011830  1801               	xorwf	btemp^0,w,c
 20363  011832  A4D8               	btfss	status,2,c
 20364  011834  D02F               	goto	l13374
 20365                           
 20366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 20367                           ;stkvar	_e @ sp[(-56)+34]
 20368  011836  0EEB               	movlw	-21
 20369  011838  AEE3               	btfss	plusw1,7,c
 20370  01183A  D00E               	goto	u12390
 20371  01183C  0EEA               	movlw	-22
 20372  01183E  006F FF8C  F001    	movff	plusw1,btemp
 20373  011844  0EFC               	movlw	252
 20374  011846  5E01               	subwf	btemp^0,f,c
 20375  011848  0EEB               	movlw	-21
 20376  01184A  006F FF8C  F001    	movff	plusw1,btemp
 20377  011850  0EFF               	movlw	255
 20378  011852  5A01               	subwfb	btemp^0,f,c
 20379  011854  A0D8               	btfss	status,0,c
 20380  011856  D018               	goto	l13372
 20381  011858                     u12390:
 20382                           
 20383                           ;stkvar	_e @ sp[(-56)+34]
 20384                           ;stkvar	_p @ sp[(-56)+40]
 20385  011858  0EF0               	movlw	-16
 20386  01185A  50E3               	movf	plusw1,w,c
 20387  01185C  0FFF               	addlw	255
 20388  01185E  6E0B               	movwf	(btemp+10)^0,c
 20389  011860  0EF1               	movlw	-15
 20390  011862  006F FF8C  F00C    	movff	plusw1,btemp+11
 20391  011868  0EFF               	movlw	255
 20392  01186A  220C               	addwfc	(btemp+11)^0,f,c
 20393  01186C  0EEA               	movlw	-22
 20394  01186E  50E3               	movf	plusw1,w,c
 20395  011870  5C0B               	subwf	(btemp+10)^0,w,c
 20396  011872  500C               	movf	(btemp+11)^0,w,c
 20397  011874  0A80               	xorlw	128
 20398  011876  6E01               	movwf	btemp^0,c
 20399  011878  0EEB               	movlw	-21
 20400  01187A  50E3               	movf	plusw1,w,c
 20401  01187C  0A80               	xorlw	128
 20402  01187E  5801               	subwfb	btemp^0,w,c
 20403  011880  A0D8               	btfss	status,0,c
 20404  011882  D002               	goto	l13372
 20405                           
 20406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 20407  011884  0E66               	movlw	102
 20408  011886  D001               	goto	L22
 20409  011888                     l13372:
 20410                           
 20411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 20412  011888  0E65               	movlw	101
 20413  01188A                     L22:
 20414  01188A  6E0C               	movwf	(btemp+11)^0,c
 20415                           
 20416                           ;stkvar	_nmode @ sp[(-56)+55]
 20417  01188C  0EFF               	movlw	-1
 20418  01188E  0060  F033  FFE3   	movff	btemp+11,plusw1
 20419  011894                     l13374:
 20420                           
 20421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 20422                           ;stkvar	_p @ sp[(-56)+40]
 20423                           ;stkvar	_m @ sp[(-56)+48]
 20424  011894  0EF0               	movlw	-16
 20425  011896  006F FF8C  F001    	movff	plusw1,btemp
 20426  01189C  0EF8               	movlw	-8
 20427  01189E  0060  F007  FFE3   	movff	btemp,plusw1
 20428  0118A4  0EF1               	movlw	-15
 20429  0118A6  006F FF8C  F001    	movff	plusw1,btemp
 20430  0118AC  0EF9               	movlw	-7
 20431  0118AE  0060  F007  FFE3   	movff	btemp,plusw1
 20432                           
 20433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 20434                           ;stkvar	_mode @ sp[(-56)+54]
 20435  0118B4  0EFE               	movlw	-2
 20436  0118B6  006F FF8C  F001    	movff	plusw1,btemp
 20437  0118BC  0E67               	movlw	103
 20438  0118BE  1801               	xorwf	btemp^0,w,c
 20439  0118C0  A4D8               	btfss	status,2,c
 20440  0118C2  D00B               	goto	u12430
 20441                           
 20442                           ;stkvar	_nmode @ sp[(-56)+55]
 20443  0118C4  0EFF               	movlw	-1
 20444  0118C6  006F FF8C  F001    	movff	plusw1,btemp
 20445  0118CC  0E66               	movlw	102
 20446  0118CE  1801               	xorwf	btemp^0,w,c
 20447  0118D0  A4D8               	btfss	status,2,c
 20448  0118D2  D014               	goto	l2499
 20449                           
 20450                           ;stkvar	_e @ sp[(-56)+34]
 20451  0118D4  0EEB               	movlw	-21
 20452  0118D6  AEE3               	btfss	plusw1,7,c
 20453  0118D8  D011               	goto	l2499
 20454  0118DA                     u12430:
 20455                           
 20456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 20457                           ;stkvar	_m @ sp[(-56)+48]
 20458  0118DA  0EF8               	movlw	-8
 20459  0118DC  50E3               	movf	plusw1,w,c
 20460  0118DE  0F01               	addlw	1
 20461  0118E0  6E01               	movwf	btemp^0,c
 20462  0118E2  0EF8               	movlw	-8
 20463  0118E4  0060  F007  FFE3   	movff	btemp,plusw1
 20464  0118EA  6A01               	clrf	btemp^0,c
 20465  0118EC  0EF9               	movlw	-7
 20466  0118EE  50E3               	movf	plusw1,w,c
 20467  0118F0  2001               	addwfc	btemp^0,w,c
 20468  0118F2  6E01               	movwf	btemp^0,c
 20469  0118F4  0EF9               	movlw	-7
 20470  0118F6  0060  F007  FFE3   	movff	btemp,plusw1
 20471  0118FC                     l2499:
 20472                           
 20473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 20474                           ;stkvar	_nmode @ sp[(-56)+55]
 20475  0118FC  0EFF               	movlw	-1
 20476  0118FE  006F FF8C  F001    	movff	plusw1,btemp
 20477  011904  0E66               	movlw	102
 20478  011906  1801               	xorwf	btemp^0,w,c
 20479  011908  A4D8               	btfss	status,2,c
 20480  01190A  D03B               	goto	l13394
 20481                           
 20482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 20483                           ;stkvar	_e @ sp[(-56)+34]
 20484  01190C  0EEB               	movlw	-21
 20485  01190E  AEE3               	btfss	plusw1,7,c
 20486  011910  D01C               	goto	l13390
 20487                           
 20488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 20489  011912  0E00               	movlw	0
 20490  011914  6E09               	movwf	(btemp+8)^0,c
 20491  011916  0E00               	movlw	0
 20492  011918  6E0A               	movwf	(btemp+9)^0,c
 20493  01191A  0E80               	movlw	128
 20494  01191C  6E0B               	movwf	(btemp+10)^0,c
 20495  01191E  0E3F               	movlw	63
 20496  011920  6E0C               	movwf	(btemp+11)^0,c
 20497                           
 20498                           ;stkvar	_u @ sp[(-56)+12]
 20499  011922  0ED4               	movlw	-44
 20500  011924  0060  F027  FFE3   	movff	btemp+8,plusw1
 20501  01192A  0ED5               	movlw	-43
 20502  01192C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20503  011932  0ED6               	movlw	-42
 20504  011934  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20505  01193A  0ED7               	movlw	-41
 20506  01193C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20507                           
 20508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 20509                           ;stkvar	_e @ sp[(-56)+34]
 20510  011942  0EEA               	movlw	-22
 20511  011944  6AE3               	clrf	plusw1,c
 20512  011946  0EEB               	movlw	-21
 20513  011948  6AE3               	clrf	plusw1,c
 20514  01194A                     l13390:
 20515                           
 20516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 20517                           ;stkvar	_mode @ sp[(-56)+54]
 20518  01194A  0EFE               	movlw	-2
 20519  01194C  006F FF8C  F001    	movff	plusw1,btemp
 20520  011952  0E67               	movlw	103
 20521  011954  1801               	xorwf	btemp^0,w,c
 20522  011956  B4D8               	btfsc	status,2,c
 20523  011958  D014               	goto	l13394
 20524                           
 20525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 20526                           ;stkvar	_e @ sp[(-56)+34]
 20527                           ;stkvar	_m @ sp[(-56)+48]
 20528  01195A  0EF8               	movlw	-8
 20529  01195C  50E3               	movf	plusw1,w,c
 20530  01195E  6E01               	movwf	btemp^0,c
 20531  011960  0EEA               	movlw	-22
 20532  011962  50E3               	movf	plusw1,w,c
 20533  011964  2601               	addwf	btemp^0,f,c
 20534  011966  0EF8               	movlw	-8
 20535  011968  0060  F007  FFE3   	movff	btemp,plusw1
 20536  01196E  0EF9               	movlw	-7
 20537  011970  50E3               	movf	plusw1,w,c
 20538  011972  6E01               	movwf	btemp^0,c
 20539  011974  0EEB               	movlw	-21
 20540  011976  50E3               	movf	plusw1,w,c
 20541  011978  2201               	addwfc	btemp^0,f,c
 20542  01197A  0EF9               	movlw	-7
 20543  01197C  0060  F007  FFE3   	movff	btemp,plusw1
 20544  011982                     l13394:
 20545                           
 20546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 20547                           ;stkvar	_i @ sp[(-56)+36]
 20548  011982  0EEC               	movlw	-20
 20549  011984  6AE3               	clrf	plusw1,c
 20550  011986  0EED               	movlw	-19
 20551  011988  6AE3               	clrf	plusw1,c
 20552                           
 20553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 20554                           ;stkvar	_g @ sp[(-56)+16]
 20555  01198A  0ED8               	movlw	-40
 20556  01198C  006F FF8C  F009    	movff	plusw1,btemp+8
 20557  011992  0ED9               	movlw	-39
 20558  011994  006F FF8C  F00A    	movff	plusw1,btemp+9
 20559  01199A  0EDA               	movlw	-38
 20560  01199C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20561  0119A2  0EDB               	movlw	-37
 20562  0119A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20563                           
 20564                           ;stkvar	_h @ sp[(-56)+24]
 20565  0119AA  0EE0               	movlw	-32
 20566  0119AC  0060  F027  FFE3   	movff	btemp+8,plusw1
 20567  0119B2  0EE1               	movlw	-31
 20568  0119B4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20569  0119BA  0EE2               	movlw	-30
 20570  0119BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20571  0119C2  0EE3               	movlw	-29
 20572  0119C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 20573                           
 20574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 20575                           ;stkvar	_u @ sp[(-56)+12]
 20576  0119CA  0ED4               	movlw	-44
 20577  0119CC  006F FF8C  F009    	movff	plusw1,btemp+8
 20578  0119D2  0ED5               	movlw	-43
 20579  0119D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 20580  0119DA  0ED6               	movlw	-42
 20581  0119DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 20582  0119E2  0ED7               	movlw	-41
 20583  0119E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20584                           
 20585                           ;stkvar	_ou @ sp[(-56)+28]
 20586  0119EA  0EE4               	movlw	-28
 20587  0119EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 20588  0119F2  0EE5               	movlw	-27
 20589  0119F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20590  0119FA  0EE6               	movlw	-26
 20591  0119FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20592  011A02  0EE7               	movlw	-25
 20593  011A04  0060  F033  FFE3   	movff	btemp+11,plusw1
 20594                           
 20595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 20596  011A0A  D0D6               	goto	l13410
 20597  011A0C                     l13400:
 20598                           
 20599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 20600                           ;stkvar	_u @ sp[(-56)+12]
 20601  011A0C  0ED4               	movlw	-44
 20602  011A0E  006F FF8F FFE6     	movff	plusw1,postinc1
 20603  011A14  006F FF8F FFE6     	movff	plusw1,postinc1
 20604  011A1A  006F FF8F FFE6     	movff	plusw1,postinc1
 20605  011A20  006F FF8F FFE6     	movff	plusw1,postinc1
 20606                           
 20607                           ;stkvar	_h @ sp[(-60)+24]
 20608  011A26  0EDC               	movlw	-36
 20609  011A28  006F FF8F FFE6     	movff	plusw1,postinc1
 20610  011A2E  006F FF8F FFE6     	movff	plusw1,postinc1
 20611  011A34  006F FF8F FFE6     	movff	plusw1,postinc1
 20612  011A3A  006F FF8F FFE6     	movff	plusw1,postinc1
 20613  011A40  EC6B  F0A7         	call	___fldiv	;wreg free
 20614  011A44  0060  F007  FFE6   	movff	btemp,postinc1
 20615  011A4A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20616  011A50  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20617  011A56  0060  F013  FFE6   	movff	btemp+3,postinc1
 20618  011A5C  EC03  F0B5         	call	_floorf	;wreg free
 20619                           
 20620                           ;stkvar	_l @ sp[(-56)+20]
 20621  011A60  0EDC               	movlw	-36
 20622  011A62  0060  F007  FFE3   	movff	btemp,plusw1
 20623  011A68  0EDD               	movlw	-35
 20624  011A6A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20625  011A70  0EDE               	movlw	-34
 20626  011A72  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20627  011A78  0EDF               	movlw	-33
 20628  011A7A  0060  F013  FFE3   	movff	btemp+3,plusw1
 20629                           
 20630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 20631                           ;stkvar	_l @ sp[(-56)+20]
 20632  011A80  0EDC               	movlw	-36
 20633  011A82  006F FF8F FFE6     	movff	plusw1,postinc1
 20634  011A88  006F FF8F FFE6     	movff	plusw1,postinc1
 20635  011A8E  006F FF8F FFE6     	movff	plusw1,postinc1
 20636  011A94  006F FF8F FFE6     	movff	plusw1,postinc1
 20637  011A9A  ECAE  F0CB         	call	___fltol	;wreg free
 20638  011A9E  0060  F004  F00B   	movff	btemp,btemp+10
 20639  011AA4  0060  F008  F00C   	movff	btemp+1,btemp+11
 20640                           
 20641                           ;stkvar	_d @ sp[(-56)+44]
 20642  011AAA  0EF4               	movlw	-12
 20643  011AAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20644  011AB2  0EF5               	movlw	-11
 20645  011AB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 20646                           
 20647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 20648                           ;stkvar	_u @ sp[(-56)+12]
 20649  011ABA  0ED4               	movlw	-44
 20650  011ABC  006F FF8F FFE6     	movff	plusw1,postinc1
 20651  011AC2  006F FF8F FFE6     	movff	plusw1,postinc1
 20652  011AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 20653  011ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 20654                           
 20655                           ;stkvar	_l @ sp[(-60)+20]
 20656  011AD4  0ED8               	movlw	-40
 20657  011AD6  006F FF8F FFE6     	movff	plusw1,postinc1
 20658  011ADC  006F FF8F FFE6     	movff	plusw1,postinc1
 20659  011AE2  006F FF8F FFE6     	movff	plusw1,postinc1
 20660  011AE8  006F FF8F FFE6     	movff	plusw1,postinc1
 20661  011AEE  EC78  F09F         	call	___flmul	;wreg free
 20662  011AF2  0060  F007  FFE6   	movff	btemp,postinc1
 20663  011AF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20664  011AFE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20665  011B04  0060  F013  FFE6   	movff	btemp+3,postinc1
 20666                           
 20667                           ;stkvar	_h @ sp[(-60)+24]
 20668  011B0A  0EDC               	movlw	-36
 20669  011B0C  006F FF8F FFE6     	movff	plusw1,postinc1
 20670  011B12  006F FF8F FFE6     	movff	plusw1,postinc1
 20671  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
 20672  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
 20673  011B24  EC6E  F0E3         	call	___flsub	;wreg free
 20674                           
 20675                           ;stkvar	_h @ sp[(-56)+24]
 20676  011B28  0EE0               	movlw	-32
 20677  011B2A  0060  F007  FFE3   	movff	btemp,plusw1
 20678  011B30  0EE1               	movlw	-31
 20679  011B32  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20680  011B38  0EE2               	movlw	-30
 20681  011B3A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20682  011B40  0EE3               	movlw	-29
 20683  011B42  0060  F013  FFE3   	movff	btemp+3,plusw1
 20684                           
 20685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 20686  011B48  0E00               	movlw	0
 20687  011B4A  6EE6               	movwf	postinc1,c
 20688  011B4C  0E00               	movlw	0
 20689  011B4E  6EE6               	movwf	postinc1,c
 20690  011B50  0E20               	movlw	32
 20691  011B52  6EE6               	movwf	postinc1,c
 20692  011B54  0E41               	movlw	65
 20693  011B56  6EE6               	movwf	postinc1,c
 20694                           
 20695                           ;stkvar	_u @ sp[(-60)+12]
 20696  011B58  0ED0               	movlw	-48
 20697  011B5A  006F FF8F FFE6     	movff	plusw1,postinc1
 20698  011B60  006F FF8F FFE6     	movff	plusw1,postinc1
 20699  011B66  006F FF8F FFE6     	movff	plusw1,postinc1
 20700  011B6C  006F FF8F FFE6     	movff	plusw1,postinc1
 20701  011B72  EC6B  F0A7         	call	___fldiv	;wreg free
 20702                           
 20703                           ;stkvar	_u @ sp[(-56)+12]
 20704  011B76  0ED4               	movlw	-44
 20705  011B78  0060  F007  FFE3   	movff	btemp,plusw1
 20706  011B7E  0ED5               	movlw	-43
 20707  011B80  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20708  011B86  0ED6               	movlw	-42
 20709  011B88  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20710  011B8E  0ED7               	movlw	-41
 20711  011B90  0060  F013  FFE3   	movff	btemp+3,plusw1
 20712                           
 20713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 20714                           ;stkvar	_i @ sp[(-56)+36]
 20715  011B96  0EEC               	movlw	-20
 20716  011B98  50E3               	movf	plusw1,w,c
 20717  011B9A  0F01               	addlw	1
 20718  011B9C  6E01               	movwf	btemp^0,c
 20719  011B9E  0EEC               	movlw	-20
 20720  011BA0  0060  F007  FFE3   	movff	btemp,plusw1
 20721  011BA6  6A01               	clrf	btemp^0,c
 20722  011BA8  0EED               	movlw	-19
 20723  011BAA  50E3               	movf	plusw1,w,c
 20724  011BAC  2001               	addwfc	btemp^0,w,c
 20725  011BAE  6E01               	movwf	btemp^0,c
 20726  011BB0  0EED               	movlw	-19
 20727  011BB2  0060  F007  FFE3   	movff	btemp,plusw1
 20728  011BB8                     l13410:
 20729                           
 20730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 20731                           ;stkvar	_m @ sp[(-56)+48]
 20732                           ;stkvar	_i @ sp[(-56)+36]
 20733  011BB8  50E1               	movf	fsr1l,w,c
 20734  011BBA  0FEC               	addlw	-20
 20735  011BBC  6ED9               	movwf	fsr2l,c
 20736  011BBE  50E2               	movf	fsr1h,w,c
 20737  011BC0  6EDA               	movwf	fsr2h,c
 20738  011BC2  0EFF               	movlw	255
 20739  011BC4  22DA               	addwfc	fsr2h,f,c
 20740  011BC6  0EF8               	movlw	-8
 20741  011BC8  50E3               	movf	plusw1,w,c
 20742  011BCA  5CDE               	subwf	postinc2,w,c
 20743  011BCC  50DE               	movf	postinc2,w,c
 20744  011BCE  0A80               	xorlw	128
 20745  011BD0  6E01               	movwf	btemp^0,c
 20746  011BD2  0EF9               	movlw	-7
 20747  011BD4  50E3               	movf	plusw1,w,c
 20748  011BD6  0A80               	xorlw	128
 20749  011BD8  5801               	subwfb	btemp^0,w,c
 20750  011BDA  A0D8               	btfss	status,0,c
 20751  011BDC  D717               	goto	l13400
 20752                           
 20753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 20754  011BDE  0E00               	movlw	0
 20755  011BE0  6EE6               	movwf	postinc1,c
 20756  011BE2  0E00               	movlw	0
 20757  011BE4  6EE6               	movwf	postinc1,c
 20758  011BE6  0EA0               	movlw	160
 20759  011BE8  6EE6               	movwf	postinc1,c
 20760  011BEA  0E40               	movlw	64
 20761  011BEC  6EE6               	movwf	postinc1,c
 20762                           
 20763                           ;stkvar	_u @ sp[(-60)+12]
 20764  011BEE  0ED0               	movlw	-48
 20765  011BF0  006F FF8F FFE6     	movff	plusw1,postinc1
 20766  011BF6  006F FF8F FFE6     	movff	plusw1,postinc1
 20767  011BFC  006F FF8F FFE6     	movff	plusw1,postinc1
 20768  011C02  006F FF8F FFE6     	movff	plusw1,postinc1
 20769  011C08  EC78  F09F         	call	___flmul	;wreg free
 20770                           
 20771                           ;stkvar	_l @ sp[(-56)+20]
 20772  011C0C  0EDC               	movlw	-36
 20773  011C0E  0060  F007  FFE3   	movff	btemp,plusw1
 20774  011C14  0EDD               	movlw	-35
 20775  011C16  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20776  011C1C  0EDE               	movlw	-34
 20777  011C1E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20778  011C24  0EDF               	movlw	-33
 20779  011C26  0060  F013  FFE3   	movff	btemp+3,plusw1
 20780                           
 20781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 20782                           ;stkvar	_l @ sp[(-56)+20]
 20783  011C2C  0EDC               	movlw	-36
 20784  011C2E  006F FF8F FFE6     	movff	plusw1,postinc1
 20785  011C34  006F FF8F FFE6     	movff	plusw1,postinc1
 20786  011C3A  006F FF8F FFE6     	movff	plusw1,postinc1
 20787  011C40  006F FF8F FFE6     	movff	plusw1,postinc1
 20788                           
 20789                           ;stkvar	_h @ sp[(-60)+24]
 20790  011C46  0EDC               	movlw	-36
 20791  011C48  006F FF8F FFE6     	movff	plusw1,postinc1
 20792  011C4E  006F FF8F FFE6     	movff	plusw1,postinc1
 20793  011C54  006F FF8F FFE6     	movff	plusw1,postinc1
 20794  011C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 20795  011C60  EC67  F0CC         	call	___flge	;wreg free
 20796  011C64  A001               	btfss	btemp& (0+255),0,c
 20797  011C66  D021               	goto	u12500
 20798                           
 20799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 20800                           ;stkvar	_l @ sp[(-56)+20]
 20801                           
 20802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 20803                           
 20804                           ;stkvar	_l @ sp[(-56)+20]
 20805                           
 20806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 20807  011C68  0EDC               	movlw	-36
 20808  011C6A  006F FF8F FFE6     	movff	plusw1,postinc1
 20809  011C70  006F FF8F FFE6     	movff	plusw1,postinc1
 20810  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 20811  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 20812                           
 20813                           ;stkvar	_h @ sp[(-60)+24]
 20814  011C82  0EDC               	movlw	-36
 20815  011C84  006F FF8F FFE6     	movff	plusw1,postinc1
 20816  011C8A  006F FF8F FFE6     	movff	plusw1,postinc1
 20817  011C90  006F FF8F FFE6     	movff	plusw1,postinc1
 20818  011C96  006F FF8F FFE6     	movff	plusw1,postinc1
 20819  011C9C  EC4D  F0D8         	call	___fleq	;wreg free
 20820  011CA0  A001               	btfss	btemp& (0+255),0,c
 20821  011CA2  D01B               	goto	l13424
 20822                           
 20823                           ;stkvar	_d @ sp[(-56)+44]
 20824  011CA4  0EF4               	movlw	-12
 20825  011CA6  B0E3               	btfsc	plusw1,0,c
 20826  011CA8  D018               	goto	l13424
 20827  011CAA                     u12500:
 20828                           
 20829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 20830  011CAA  0E00               	movlw	0
 20831  011CAC  6E09               	movwf	(btemp+8)^0,c
 20832  011CAE  0E00               	movlw	0
 20833  011CB0  6E0A               	movwf	(btemp+9)^0,c
 20834  011CB2  0E00               	movlw	0
 20835  011CB4  6E0B               	movwf	(btemp+10)^0,c
 20836  011CB6  0E00               	movlw	0
 20837  011CB8  6E0C               	movwf	(btemp+11)^0,c
 20838                           
 20839                           ;stkvar	_l @ sp[(-56)+20]
 20840  011CBA  0EDC               	movlw	-36
 20841  011CBC  0060  F027  FFE3   	movff	btemp+8,plusw1
 20842  011CC2  0EDD               	movlw	-35
 20843  011CC4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20844  011CCA  0EDE               	movlw	-34
 20845  011CCC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20846  011CD2  0EDF               	movlw	-33
 20847  011CD4  0060  F033  FFE3   	movff	btemp+11,plusw1
 20848  011CDA                     l13424:
 20849                           
 20850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 20851                           ;stkvar	_l @ sp[(-56)+20]
 20852  011CDA  0EDC               	movlw	-36
 20853  011CDC  006F FF8F FFE6     	movff	plusw1,postinc1
 20854  011CE2  006F FF8F FFE6     	movff	plusw1,postinc1
 20855  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 20856  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 20857                           
 20858                           ;stkvar	_g @ sp[(-60)+16]
 20859  011CF4  0ED4               	movlw	-44
 20860  011CF6  006F FF8F FFE6     	movff	plusw1,postinc1
 20861  011CFC  006F FF8F FFE6     	movff	plusw1,postinc1
 20862  011D02  006F FF8F FFE6     	movff	plusw1,postinc1
 20863  011D08  006F FF8F FFE6     	movff	plusw1,postinc1
 20864  011D0E  EC8D  F0A3         	call	___fladd	;wreg free
 20865                           
 20866                           ;stkvar	_h @ sp[(-56)+24]
 20867  011D12  0EE0               	movlw	-32
 20868  011D14  0060  F007  FFE3   	movff	btemp,plusw1
 20869  011D1A  0EE1               	movlw	-31
 20870  011D1C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20871  011D22  0EE2               	movlw	-30
 20872  011D24  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20873  011D2A  0EE3               	movlw	-29
 20874  011D2C  0060  F013  FFE3   	movff	btemp+3,plusw1
 20875                           
 20876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 20877                           ;stkvar	_ou @ sp[(-56)+28]
 20878  011D32  0EE4               	movlw	-28
 20879  011D34  006F FF8C  F009    	movff	plusw1,btemp+8
 20880  011D3A  0EE5               	movlw	-27
 20881  011D3C  006F FF8C  F00A    	movff	plusw1,btemp+9
 20882  011D42  0EE6               	movlw	-26
 20883  011D44  006F FF8C  F00B    	movff	plusw1,btemp+10
 20884  011D4A  0EE7               	movlw	-25
 20885  011D4C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20886                           
 20887                           ;stkvar	_u @ sp[(-56)+12]
 20888  011D52  0ED4               	movlw	-44
 20889  011D54  0060  F027  FFE3   	movff	btemp+8,plusw1
 20890  011D5A  0ED5               	movlw	-43
 20891  011D5C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20892  011D62  0ED6               	movlw	-42
 20893  011D64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20894  011D6A  0ED7               	movlw	-41
 20895  011D6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20896                           
 20897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 20898                           ;stkvar	_nmode @ sp[(-56)+55]
 20899  011D72  0EFF               	movlw	-1
 20900  011D74  006F FF8C  F001    	movff	plusw1,btemp
 20901  011D7A  0E65               	movlw	101
 20902  011D7C  1801               	xorwf	btemp^0,w,c
 20903  011D7E  B4D8               	btfsc	status,2,c
 20904  011D80  D011               	goto	l13432
 20905                           
 20906                           ;stkvar	_e @ sp[(-56)+34]
 20907                           ;stkvar	_ne @ sp[(-56)+46]
 20908  011D82  0EEA               	movlw	-22
 20909  011D84  006F FF8C  F001    	movff	plusw1,btemp
 20910  011D8A  0EF6               	movlw	-10
 20911  011D8C  0060  F007  FFE3   	movff	btemp,plusw1
 20912  011D92  0EEB               	movlw	-21
 20913  011D94  006F FF8C  F001    	movff	plusw1,btemp
 20914  011D9A  0EF7               	movlw	-9
 20915  011D9C  0060  F007  FFE3   	movff	btemp,plusw1
 20916  011DA2  D004               	goto	l2514
 20917  011DA4                     l13432:
 20918                           
 20919                           ;stkvar	_ne @ sp[(-56)+46]
 20920  011DA4  0EF6               	movlw	-10
 20921  011DA6  6AE3               	clrf	plusw1,c
 20922  011DA8  0EF7               	movlw	-9
 20923  011DAA  6AE3               	clrf	plusw1,c
 20924  011DAC                     l2514:
 20925                           
 20926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 20927                           ;stkvar	_pp @ sp[(-56)+50]
 20928  011DAC  0EFA               	movlw	-6
 20929  011DAE  6AE3               	clrf	plusw1,c
 20930  011DB0  0EFB               	movlw	-5
 20931  011DB2  6AE3               	clrf	plusw1,c
 20932                           
 20933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 20934                           ;stkvar	_t @ sp[(-56)+52]
 20935  011DB4  0EFC               	movlw	-4
 20936  011DB6  6AE3               	clrf	plusw1,c
 20937  011DB8  0EFD               	movlw	-3
 20938  011DBA  6AE3               	clrf	plusw1,c
 20939                           
 20940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 20941                           ;stkvar	_i @ sp[(-56)+36]
 20942  011DBC  0EEC               	movlw	-20
 20943  011DBE  6AE3               	clrf	plusw1,c
 20944  011DC0  0EED               	movlw	-19
 20945  011DC2  6AE3               	clrf	plusw1,c
 20946                           
 20947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 20948  011DC4  D1B7               	goto	l13484
 20949  011DC6                     l13434:
 20950                           
 20951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 20952                           ;stkvar	_u @ sp[(-56)+12]
 20953  011DC6  0ED4               	movlw	-44
 20954  011DC8  006F FF8F FFE6     	movff	plusw1,postinc1
 20955  011DCE  006F FF8F FFE6     	movff	plusw1,postinc1
 20956  011DD4  006F FF8F FFE6     	movff	plusw1,postinc1
 20957  011DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 20958                           
 20959                           ;stkvar	_h @ sp[(-60)+24]
 20960  011DE0  0EDC               	movlw	-36
 20961  011DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 20962  011DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 20963  011DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 20964  011DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 20965  011DFA  EC6B  F0A7         	call	___fldiv	;wreg free
 20966  011DFE  0060  F007  FFE6   	movff	btemp,postinc1
 20967  011E04  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20968  011E0A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20969  011E10  0060  F013  FFE6   	movff	btemp+3,postinc1
 20970  011E16  EC03  F0B5         	call	_floorf	;wreg free
 20971                           
 20972                           ;stkvar	_l @ sp[(-56)+20]
 20973  011E1A  0EDC               	movlw	-36
 20974  011E1C  0060  F007  FFE3   	movff	btemp,plusw1
 20975  011E22  0EDD               	movlw	-35
 20976  011E24  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20977  011E2A  0EDE               	movlw	-34
 20978  011E2C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20979  011E32  0EDF               	movlw	-33
 20980  011E34  0060  F013  FFE3   	movff	btemp+3,plusw1
 20981                           
 20982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 20983                           ;stkvar	_l @ sp[(-56)+20]
 20984  011E3A  0EDC               	movlw	-36
 20985  011E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 20986  011E42  006F FF8F FFE6     	movff	plusw1,postinc1
 20987  011E48  006F FF8F FFE6     	movff	plusw1,postinc1
 20988  011E4E  006F FF8F FFE6     	movff	plusw1,postinc1
 20989  011E54  ECAE  F0CB         	call	___fltol	;wreg free
 20990  011E58  0060  F004  F00B   	movff	btemp,btemp+10
 20991  011E5E  0060  F008  F00C   	movff	btemp+1,btemp+11
 20992                           
 20993                           ;stkvar	_d @ sp[(-56)+44]
 20994  011E64  0EF4               	movlw	-12
 20995  011E66  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20996  011E6C  0EF5               	movlw	-11
 20997  011E6E  0060  F033  FFE3   	movff	btemp+11,plusw1
 20998                           
 20999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 21000  011E74  B83E               	btfsc	_flags^0,4,c
 21001  011E76  D026               	goto	l13448
 21002                           
 21003                           ;stkvar	_d @ sp[(-56)+44]
 21004  011E78  0EF4               	movlw	-12
 21005  011E7A  006F FF8C  F001    	movff	plusw1,btemp
 21006  011E80  0EF5               	movlw	-11
 21007  011E82  50E3               	movf	plusw1,w,c
 21008  011E84  1001               	iorwf	btemp^0,w,c
 21009  011E86  A4D8               	btfss	status,2,c
 21010  011E88  D01D               	goto	l13448
 21011                           
 21012                           ;stkvar	_mode @ sp[(-56)+54]
 21013  011E8A  0EFE               	movlw	-2
 21014  011E8C  006F FF8C  F001    	movff	plusw1,btemp
 21015  011E92  0E67               	movlw	103
 21016  011E94  1801               	xorwf	btemp^0,w,c
 21017  011E96  A4D8               	btfss	status,2,c
 21018  011E98  D015               	goto	l13448
 21019                           
 21020                           ;stkvar	_ne @ sp[(-56)+46]
 21021  011E9A  0EF7               	movlw	-9
 21022  011E9C  AEE3               	btfss	plusw1,7,c
 21023  011E9E  D012               	goto	l13448
 21024                           
 21025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 21026                           ;stkvar	_t @ sp[(-56)+52]
 21027  011EA0  0EFC               	movlw	-4
 21028  011EA2  50E3               	movf	plusw1,w,c
 21029  011EA4  0F01               	addlw	1
 21030  011EA6  6E01               	movwf	btemp^0,c
 21031  011EA8  0EFC               	movlw	-4
 21032  011EAA  0060  F007  FFE3   	movff	btemp,plusw1
 21033  011EB0  6A01               	clrf	btemp^0,c
 21034  011EB2  0EFD               	movlw	-3
 21035  011EB4  50E3               	movf	plusw1,w,c
 21036  011EB6  2001               	addwfc	btemp^0,w,c
 21037  011EB8  6E01               	movwf	btemp^0,c
 21038  011EBA  0EFD               	movlw	-3
 21039  011EBC  0060  F007  FFE3   	movff	btemp,plusw1
 21040                           
 21041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 21042  011EC2  D0AF               	goto	l13476
 21043  011EC4                     l13448:
 21044                           
 21045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 21046                           ;stkvar	_pp @ sp[(-56)+50]
 21047  011EC4  0EFA               	movlw	-6
 21048  011EC6  006F FF8C  F001    	movff	plusw1,btemp
 21049  011ECC  0EFB               	movlw	-5
 21050  011ECE  50E3               	movf	plusw1,w,c
 21051  011ED0  1001               	iorwf	btemp^0,w,c
 21052  011ED2  A4D8               	btfss	status,2,c
 21053  011ED4  D070               	goto	l13468
 21054                           
 21055                           ;stkvar	_ne @ sp[(-56)+46]
 21056  011ED6  0EF7               	movlw	-9
 21057  011ED8  AEE3               	btfss	plusw1,7,c
 21058  011EDA  D06D               	goto	l13468
 21059                           
 21060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 21061                           ;stkvar	_n @ sp[(-56)+32]
 21062  011EDC  0EE8               	movlw	-24
 21063  011EDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 21064  011EE4  0EE9               	movlw	-23
 21065  011EE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21066  011EEC  0E94               	movlw	low _dbuf
 21067  011EEE  240B               	addwf	(btemp+10)^0,w,c
 21068  011EF0  6ED9               	movwf	fsr2l,c
 21069  011EF2  0E03               	movlw	high _dbuf
 21070  011EF4  200C               	addwfc	(btemp+11)^0,w,c
 21071  011EF6  6EDA               	movwf	fsr2h,c
 21072  011EF8  0E2E               	movlw	46
 21073  011EFA  6EDF               	movwf	indf2,c
 21074                           
 21075                           ;stkvar	_n @ sp[(-56)+32]
 21076  011EFC  0EE8               	movlw	-24
 21077  011EFE  50E3               	movf	plusw1,w,c
 21078  011F00  0F01               	addlw	1
 21079  011F02  6E01               	movwf	btemp^0,c
 21080  011F04  0EE8               	movlw	-24
 21081  011F06  0060  F007  FFE3   	movff	btemp,plusw1
 21082  011F0C  6A01               	clrf	btemp^0,c
 21083  011F0E  0EE9               	movlw	-23
 21084  011F10  50E3               	movf	plusw1,w,c
 21085  011F12  2001               	addwfc	btemp^0,w,c
 21086  011F14  6E01               	movwf	btemp^0,c
 21087  011F16  0EE9               	movlw	-23
 21088  011F18  0060  F007  FFE3   	movff	btemp,plusw1
 21089                           
 21090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 21091                           ;stkvar	_w @ sp[(-56)+38]
 21092  011F1E  50E1               	movf	fsr1l,w,c
 21093  011F20  0FEE               	addlw	-18
 21094  011F22  6ED9               	movwf	fsr2l,c
 21095  011F24  50E2               	movf	fsr1h,w,c
 21096  011F26  6EDA               	movwf	fsr2h,c
 21097  011F28  0EFF               	movlw	255
 21098  011F2A  22DA               	addwfc	fsr2h,f,c
 21099  011F2C  06DE               	decf	postinc2,f,c
 21100  011F2E  0E00               	movlw	0
 21101  011F30  5ADD               	subwfb	postdec2,f,c
 21102                           
 21103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 21104  011F32  0E01               	movlw	1
 21105  011F34  6E0B               	movwf	(btemp+10)^0,c
 21106  011F36  0E00               	movlw	0
 21107  011F38  6E0C               	movwf	(btemp+11)^0,c
 21108                           
 21109                           ;stkvar	_pp @ sp[(-56)+50]
 21110  011F3A  0EFA               	movlw	-6
 21111  011F3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21112  011F42  0EFB               	movlw	-5
 21113  011F44  0060  F033  FFE3   	movff	btemp+11,plusw1
 21114  011F4A  D035               	goto	l13468
 21115  011F4C                     l13460:
 21116                           
 21117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 21118                           ;stkvar	_n @ sp[(-56)+32]
 21119  011F4C  0EE8               	movlw	-24
 21120  011F4E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21121  011F54  0EE9               	movlw	-23
 21122  011F56  006F FF8C  F00C    	movff	plusw1,btemp+11
 21123  011F5C  0E94               	movlw	low _dbuf
 21124  011F5E  240B               	addwf	(btemp+10)^0,w,c
 21125  011F60  6ED9               	movwf	fsr2l,c
 21126  011F62  0E03               	movlw	high _dbuf
 21127  011F64  200C               	addwfc	(btemp+11)^0,w,c
 21128  011F66  6EDA               	movwf	fsr2h,c
 21129  011F68  0E30               	movlw	48
 21130  011F6A  6EDF               	movwf	indf2,c
 21131                           
 21132                           ;stkvar	_n @ sp[(-56)+32]
 21133  011F6C  0EE8               	movlw	-24
 21134  011F6E  50E3               	movf	plusw1,w,c
 21135  011F70  0F01               	addlw	1
 21136  011F72  6E01               	movwf	btemp^0,c
 21137  011F74  0EE8               	movlw	-24
 21138  011F76  0060  F007  FFE3   	movff	btemp,plusw1
 21139  011F7C  6A01               	clrf	btemp^0,c
 21140  011F7E  0EE9               	movlw	-23
 21141  011F80  50E3               	movf	plusw1,w,c
 21142  011F82  2001               	addwfc	btemp^0,w,c
 21143  011F84  6E01               	movwf	btemp^0,c
 21144  011F86  0EE9               	movlw	-23
 21145  011F88  0060  F007  FFE3   	movff	btemp,plusw1
 21146                           
 21147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 21148                           ;stkvar	_w @ sp[(-56)+38]
 21149  011F8E  50E1               	movf	fsr1l,w,c
 21150  011F90  0FEE               	addlw	-18
 21151  011F92  6ED9               	movwf	fsr2l,c
 21152  011F94  50E2               	movf	fsr1h,w,c
 21153  011F96  6EDA               	movwf	fsr2h,c
 21154  011F98  0EFF               	movlw	255
 21155  011F9A  22DA               	addwfc	fsr2h,f,c
 21156  011F9C  06DE               	decf	postinc2,f,c
 21157  011F9E  0E00               	movlw	0
 21158  011FA0  5ADD               	subwfb	postdec2,f,c
 21159                           
 21160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 21161                           ;stkvar	_t @ sp[(-56)+52]
 21162  011FA2  50E1               	movf	fsr1l,w,c
 21163  011FA4  0FFC               	addlw	-4
 21164  011FA6  6ED9               	movwf	fsr2l,c
 21165  011FA8  50E2               	movf	fsr1h,w,c
 21166  011FAA  6EDA               	movwf	fsr2h,c
 21167  011FAC  0EFF               	movlw	255
 21168  011FAE  22DA               	addwfc	fsr2h,f,c
 21169  011FB0  06DE               	decf	postinc2,f,c
 21170  011FB2  0E00               	movlw	0
 21171  011FB4  5ADD               	subwfb	postdec2,f,c
 21172  011FB6                     l13468:
 21173                           
 21174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 21175                           ;stkvar	_t @ sp[(-56)+52]
 21176  011FB6  0EFC               	movlw	-4
 21177  011FB8  006F FF8C  F001    	movff	plusw1,btemp
 21178  011FBE  0EFD               	movlw	-3
 21179  011FC0  50E3               	movf	plusw1,w,c
 21180  011FC2  1001               	iorwf	btemp^0,w,c
 21181  011FC4  A4D8               	btfss	status,2,c
 21182  011FC6  D7C2               	goto	l13460
 21183                           
 21184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 21185                           ;stkvar	_n @ sp[(-56)+32]
 21186  011FC8  0EE8               	movlw	-24
 21187  011FCA  006F FF8C  F00B    	movff	plusw1,btemp+10
 21188  011FD0  0EE9               	movlw	-23
 21189  011FD2  006F FF8C  F00C    	movff	plusw1,btemp+11
 21190  011FD8  0E94               	movlw	low _dbuf
 21191  011FDA  240B               	addwf	(btemp+10)^0,w,c
 21192  011FDC  6ED9               	movwf	fsr2l,c
 21193  011FDE  0E03               	movlw	high _dbuf
 21194  011FE0  200C               	addwfc	(btemp+11)^0,w,c
 21195  011FE2  6EDA               	movwf	fsr2h,c
 21196                           
 21197                           ;stkvar	_d @ sp[(-56)+44]
 21198  011FE4  0EF4               	movlw	-12
 21199  011FE6  50E3               	movf	plusw1,w,c
 21200  011FE8  0F30               	addlw	48
 21201  011FEA  6EDF               	movwf	indf2,c
 21202                           
 21203                           ;stkvar	_n @ sp[(-56)+32]
 21204  011FEC  0EE8               	movlw	-24
 21205  011FEE  50E3               	movf	plusw1,w,c
 21206  011FF0  0F01               	addlw	1
 21207  011FF2  6E01               	movwf	btemp^0,c
 21208  011FF4  0EE8               	movlw	-24
 21209  011FF6  0060  F007  FFE3   	movff	btemp,plusw1
 21210  011FFC  6A01               	clrf	btemp^0,c
 21211  011FFE  0EE9               	movlw	-23
 21212  012000  50E3               	movf	plusw1,w,c
 21213  012002  2001               	addwfc	btemp^0,w,c
 21214  012004  6E01               	movwf	btemp^0,c
 21215  012006  0EE9               	movlw	-23
 21216  012008  0060  F007  FFE3   	movff	btemp,plusw1
 21217                           
 21218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 21219                           ;stkvar	_w @ sp[(-56)+38]
 21220  01200E  50E1               	movf	fsr1l,w,c
 21221  012010  0FEE               	addlw	-18
 21222  012012  6ED9               	movwf	fsr2l,c
 21223  012014  50E2               	movf	fsr1h,w,c
 21224  012016  6EDA               	movwf	fsr2h,c
 21225  012018  0EFF               	movlw	255
 21226  01201A  22DA               	addwfc	fsr2h,f,c
 21227  01201C  06DE               	decf	postinc2,f,c
 21228  01201E  0E00               	movlw	0
 21229  012020  5ADD               	subwfb	postdec2,f,c
 21230  012022                     l13476:
 21231                           
 21232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 21233                           ;stkvar	_u @ sp[(-56)+12]
 21234  012022  0ED4               	movlw	-44
 21235  012024  006F FF8F FFE6     	movff	plusw1,postinc1
 21236  01202A  006F FF8F FFE6     	movff	plusw1,postinc1
 21237  012030  006F FF8F FFE6     	movff	plusw1,postinc1
 21238  012036  006F FF8F FFE6     	movff	plusw1,postinc1
 21239                           
 21240                           ;stkvar	_l @ sp[(-60)+20]
 21241  01203C  0ED8               	movlw	-40
 21242  01203E  006F FF8F FFE6     	movff	plusw1,postinc1
 21243  012044  006F FF8F FFE6     	movff	plusw1,postinc1
 21244  01204A  006F FF8F FFE6     	movff	plusw1,postinc1
 21245  012050  006F FF8F FFE6     	movff	plusw1,postinc1
 21246  012056  EC78  F09F         	call	___flmul	;wreg free
 21247  01205A  0060  F007  FFE6   	movff	btemp,postinc1
 21248  012060  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21249  012066  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21250  01206C  0060  F013  FFE6   	movff	btemp+3,postinc1
 21251                           
 21252                           ;stkvar	_h @ sp[(-60)+24]
 21253  012072  0EDC               	movlw	-36
 21254  012074  006F FF8F FFE6     	movff	plusw1,postinc1
 21255  01207A  006F FF8F FFE6     	movff	plusw1,postinc1
 21256  012080  006F FF8F FFE6     	movff	plusw1,postinc1
 21257  012086  006F FF8F FFE6     	movff	plusw1,postinc1
 21258  01208C  EC6E  F0E3         	call	___flsub	;wreg free
 21259                           
 21260                           ;stkvar	_h @ sp[(-56)+24]
 21261  012090  0EE0               	movlw	-32
 21262  012092  0060  F007  FFE3   	movff	btemp,plusw1
 21263  012098  0EE1               	movlw	-31
 21264  01209A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21265  0120A0  0EE2               	movlw	-30
 21266  0120A2  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21267  0120A8  0EE3               	movlw	-29
 21268  0120AA  0060  F013  FFE3   	movff	btemp+3,plusw1
 21269                           
 21270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 21271  0120B0  0E00               	movlw	0
 21272  0120B2  6EE6               	movwf	postinc1,c
 21273  0120B4  0E00               	movlw	0
 21274  0120B6  6EE6               	movwf	postinc1,c
 21275  0120B8  0E20               	movlw	32
 21276  0120BA  6EE6               	movwf	postinc1,c
 21277  0120BC  0E41               	movlw	65
 21278  0120BE  6EE6               	movwf	postinc1,c
 21279                           
 21280                           ;stkvar	_u @ sp[(-60)+12]
 21281  0120C0  0ED0               	movlw	-48
 21282  0120C2  006F FF8F FFE6     	movff	plusw1,postinc1
 21283  0120C8  006F FF8F FFE6     	movff	plusw1,postinc1
 21284  0120CE  006F FF8F FFE6     	movff	plusw1,postinc1
 21285  0120D4  006F FF8F FFE6     	movff	plusw1,postinc1
 21286  0120DA  EC6B  F0A7         	call	___fldiv	;wreg free
 21287                           
 21288                           ;stkvar	_u @ sp[(-56)+12]
 21289  0120DE  0ED4               	movlw	-44
 21290  0120E0  0060  F007  FFE3   	movff	btemp,plusw1
 21291  0120E6  0ED5               	movlw	-43
 21292  0120E8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21293  0120EE  0ED6               	movlw	-42
 21294  0120F0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21295  0120F6  0ED7               	movlw	-41
 21296  0120F8  0060  F013  FFE3   	movff	btemp+3,plusw1
 21297                           
 21298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 21299                           ;stkvar	_ne @ sp[(-56)+46]
 21300  0120FE  50E1               	movf	fsr1l,w,c
 21301  012100  0FF6               	addlw	-10
 21302  012102  6ED9               	movwf	fsr2l,c
 21303  012104  50E2               	movf	fsr1h,w,c
 21304  012106  6EDA               	movwf	fsr2h,c
 21305  012108  0EFF               	movlw	255
 21306  01210A  22DA               	addwfc	fsr2h,f,c
 21307  01210C  06DE               	decf	postinc2,f,c
 21308  01210E  0E00               	movlw	0
 21309  012110  5ADD               	subwfb	postdec2,f,c
 21310                           
 21311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 21312                           ;stkvar	_i @ sp[(-56)+36]
 21313  012112  0EEC               	movlw	-20
 21314  012114  50E3               	movf	plusw1,w,c
 21315  012116  0F01               	addlw	1
 21316  012118  6E01               	movwf	btemp^0,c
 21317  01211A  0EEC               	movlw	-20
 21318  01211C  0060  F007  FFE3   	movff	btemp,plusw1
 21319  012122  6A01               	clrf	btemp^0,c
 21320  012124  0EED               	movlw	-19
 21321  012126  50E3               	movf	plusw1,w,c
 21322  012128  2001               	addwfc	btemp^0,w,c
 21323  01212A  6E01               	movwf	btemp^0,c
 21324  01212C  0EED               	movlw	-19
 21325  01212E  0060  F007  FFE3   	movff	btemp,plusw1
 21326  012134                     l13484:
 21327                           
 21328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 21329                           ;stkvar	_m @ sp[(-56)+48]
 21330                           ;stkvar	_i @ sp[(-56)+36]
 21331  012134  50E1               	movf	fsr1l,w,c
 21332  012136  0FEC               	addlw	-20
 21333  012138  6ED9               	movwf	fsr2l,c
 21334  01213A  50E2               	movf	fsr1h,w,c
 21335  01213C  6EDA               	movwf	fsr2h,c
 21336  01213E  0EFF               	movlw	255
 21337  012140  22DA               	addwfc	fsr2h,f,c
 21338  012142  0EF8               	movlw	-8
 21339  012144  50E3               	movf	plusw1,w,c
 21340  012146  5CDE               	subwf	postinc2,w,c
 21341  012148  50DE               	movf	postinc2,w,c
 21342  01214A  0A80               	xorlw	128
 21343  01214C  6E01               	movwf	btemp^0,c
 21344  01214E  0EF9               	movlw	-7
 21345  012150  50E3               	movf	plusw1,w,c
 21346  012152  0A80               	xorlw	128
 21347  012154  5801               	subwfb	btemp^0,w,c
 21348  012156  B0D8               	btfsc	status,0,c
 21349  012158  D00E               	goto	u12600
 21350                           
 21351                           ;stkvar	_n @ sp[(-56)+32]
 21352  01215A  0EE9               	movlw	-23
 21353  01215C  BEE3               	btfsc	plusw1,7,c
 21354  01215E  D633               	goto	l13434
 21355  012160  0EE9               	movlw	-23
 21356  012162  50E3               	movf	plusw1,w,c
 21357  012164  E108               	bnz	u12600
 21358  012166  0EE8               	movlw	-24
 21359  012168  006F FF8C  F001    	movff	plusw1,btemp
 21360  01216E  0E4B               	movlw	75
 21361  012170  5E01               	subwf	btemp^0,f,c
 21362  012172  A0D8               	btfss	status,0,c
 21363  012174  D628               	goto	l13434
 21364  012176                     u12600:
 21365                           
 21366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 21367                           ;stkvar	_pp @ sp[(-56)+50]
 21368  012176  0EFA               	movlw	-6
 21369  012178  006F FF8C  F001    	movff	plusw1,btemp
 21370  01217E  0EFB               	movlw	-5
 21371  012180  50E3               	movf	plusw1,w,c
 21372  012182  1001               	iorwf	btemp^0,w,c
 21373  012184  B4D8               	btfsc	status,2,c
 21374  012186  A83E               	btfss	_flags^0,4,c
 21375  012188  D021               	goto	l13496
 21376                           
 21377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 21378                           ;stkvar	_n @ sp[(-56)+32]
 21379  01218A  0EE8               	movlw	-24
 21380  01218C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21381  012192  0EE9               	movlw	-23
 21382  012194  006F FF8C  F00C    	movff	plusw1,btemp+11
 21383  01219A  0E94               	movlw	low _dbuf
 21384  01219C  240B               	addwf	(btemp+10)^0,w,c
 21385  01219E  6ED9               	movwf	fsr2l,c
 21386  0121A0  0E03               	movlw	high _dbuf
 21387  0121A2  200C               	addwfc	(btemp+11)^0,w,c
 21388  0121A4  6EDA               	movwf	fsr2h,c
 21389  0121A6  0E2E               	movlw	46
 21390  0121A8  6EDF               	movwf	indf2,c
 21391                           
 21392                           ;stkvar	_n @ sp[(-56)+32]
 21393  0121AA  0EE8               	movlw	-24
 21394  0121AC  50E3               	movf	plusw1,w,c
 21395  0121AE  0F01               	addlw	1
 21396  0121B0  6E01               	movwf	btemp^0,c
 21397  0121B2  0EE8               	movlw	-24
 21398  0121B4  0060  F007  FFE3   	movff	btemp,plusw1
 21399  0121BA  6A01               	clrf	btemp^0,c
 21400  0121BC  0EE9               	movlw	-23
 21401  0121BE  50E3               	movf	plusw1,w,c
 21402  0121C0  2001               	addwfc	btemp^0,w,c
 21403  0121C2  6E01               	movwf	btemp^0,c
 21404  0121C4  0EE9               	movlw	-23
 21405  0121C6  0060  F007  FFE3   	movff	btemp,plusw1
 21406  0121CC                     l13496:
 21407                           
 21408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 21409                           ;stkvar	_n @ sp[(-56)+32]
 21410  0121CC  0EE8               	movlw	-24
 21411  0121CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 21412  0121D4  0EE9               	movlw	-23
 21413  0121D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21414  0121DC  0E94               	movlw	low _dbuf
 21415  0121DE  240B               	addwf	(btemp+10)^0,w,c
 21416  0121E0  6ED9               	movwf	fsr2l,c
 21417  0121E2  0E03               	movlw	high _dbuf
 21418  0121E4  200C               	addwfc	(btemp+11)^0,w,c
 21419  0121E6  6EDA               	movwf	fsr2h,c
 21420  0121E8  0E00               	movlw	0
 21421  0121EA  6EDF               	movwf	indf2,c
 21422                           
 21423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 21424                           ;stkvar	_nmode @ sp[(-56)+55]
 21425  0121EC  0EFF               	movlw	-1
 21426  0121EE  006F FF8C  F001    	movff	plusw1,btemp
 21427  0121F4  0E65               	movlw	101
 21428  0121F6  1801               	xorwf	btemp^0,w,c
 21429  0121F8  A4D8               	btfss	status,2,c
 21430  0121FA  EF5F  F08A         	goto	l13300
 21431                           
 21432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 21433  0121FE  0E4F               	movlw	79
 21434  012200  6E0B               	movwf	(btemp+10)^0,c
 21435  012202  0E00               	movlw	0
 21436  012204  6E0C               	movwf	(btemp+11)^0,c
 21437                           
 21438                           ;stkvar	_i @ sp[(-56)+36]
 21439  012206  0EEC               	movlw	-20
 21440  012208  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21441  01220E  0EED               	movlw	-19
 21442  012210  0060  F033  FFE3   	movff	btemp+11,plusw1
 21443                           
 21444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 21445                           ;stkvar	_i @ sp[(-56)+36]
 21446  012216  0EEC               	movlw	-20
 21447  012218  006F FF8C  F00B    	movff	plusw1,btemp+10
 21448  01221E  0EED               	movlw	-19
 21449  012220  006F FF8C  F00C    	movff	plusw1,btemp+11
 21450  012226  0E94               	movlw	low _dbuf
 21451  012228  240B               	addwf	(btemp+10)^0,w,c
 21452  01222A  6ED9               	movwf	fsr2l,c
 21453  01222C  0E03               	movlw	high _dbuf
 21454  01222E  200C               	addwfc	(btemp+11)^0,w,c
 21455  012230  6EDA               	movwf	fsr2h,c
 21456  012232  0E00               	movlw	0
 21457  012234  6EDF               	movwf	indf2,c
 21458                           
 21459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 21460                           ;stkvar	_sign @ sp[(-56)+42]
 21461  012236  0EF2               	movlw	-14
 21462  012238  6AE3               	clrf	plusw1,c
 21463  01223A  0EF3               	movlw	-13
 21464  01223C  6AE3               	clrf	plusw1,c
 21465                           
 21466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 21467                           ;stkvar	_e @ sp[(-56)+34]
 21468  01223E  0EEB               	movlw	-21
 21469  012240  AEE3               	btfss	plusw1,7,c
 21470  012242  D012               	goto	l13510
 21471                           
 21472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 21473  012244  0E01               	movlw	1
 21474  012246  6E0B               	movwf	(btemp+10)^0,c
 21475  012248  0E00               	movlw	0
 21476  01224A  6E0C               	movwf	(btemp+11)^0,c
 21477                           
 21478                           ;stkvar	_sign @ sp[(-56)+42]
 21479  01224C  0EF2               	movlw	-14
 21480  01224E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21481  012254  0EF3               	movlw	-13
 21482  012256  0060  F033  FFE3   	movff	btemp+11,plusw1
 21483                           
 21484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 21485                           ;stkvar	_e @ sp[(-56)+34]
 21486                           ;stkvar	_e @ sp[(-56)+34]
 21487  01225C  0EEA               	movlw	-22
 21488  01225E  6CE3               	negf	plusw1,c
 21489  012260  0EEB               	movlw	-21
 21490  012262  1EE3               	comf	plusw1,f,c
 21491  012264  B0D8               	btfsc	status,0,c
 21492  012266  2AE3               	incf	plusw1,f,c
 21493  012268                     l13510:
 21494                           
 21495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 21496  012268  0E02               	movlw	2
 21497  01226A  6E0B               	movwf	(btemp+10)^0,c
 21498  01226C  0E00               	movlw	0
 21499  01226E  6E0C               	movwf	(btemp+11)^0,c
 21500                           
 21501                           ;stkvar	_p @ sp[(-56)+40]
 21502  012270  0EF0               	movlw	-16
 21503  012272  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21504  012278  0EF1               	movlw	-15
 21505  01227A  0060  F033  FFE3   	movff	btemp+11,plusw1
 21506                           
 21507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 21508  012280  D051               	goto	l13522
 21509  012282                     l13512:
 21510                           
 21511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 21512                           ;stkvar	_i @ sp[(-56)+36]
 21513  012282  50E1               	movf	fsr1l,w,c
 21514  012284  0FEC               	addlw	-20
 21515  012286  6ED9               	movwf	fsr2l,c
 21516  012288  50E2               	movf	fsr1h,w,c
 21517  01228A  6EDA               	movwf	fsr2h,c
 21518  01228C  0EFF               	movlw	255
 21519  01228E  22DA               	addwfc	fsr2h,f,c
 21520  012290  06DE               	decf	postinc2,f,c
 21521  012292  0E00               	movlw	0
 21522  012294  5ADD               	subwfb	postdec2,f,c
 21523                           
 21524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 21525                           ;stkvar	_i @ sp[(-56)+36]
 21526  012296  0EEC               	movlw	-20
 21527  012298  006F FF8C  F00B    	movff	plusw1,btemp+10
 21528  01229E  0EED               	movlw	-19
 21529  0122A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21530  0122A6  0E94               	movlw	low _dbuf
 21531  0122A8  240B               	addwf	(btemp+10)^0,w,c
 21532  0122AA  6ED9               	movwf	fsr2l,c
 21533  0122AC  0E03               	movlw	high _dbuf
 21534  0122AE  200C               	addwfc	(btemp+11)^0,w,c
 21535  0122B0  6EDA               	movwf	fsr2h,c
 21536  0122B2  0E0A               	movlw	10
 21537  0122B4  6EE6               	movwf	postinc1,c
 21538  0122B6  0E00               	movlw	0
 21539  0122B8  6EE6               	movwf	postinc1,c
 21540                           
 21541                           ;stkvar	_e @ sp[(-58)+34]
 21542  0122BA  0EE8               	movlw	-24
 21543  0122BC  006F FF8F FFE6     	movff	plusw1,postinc1
 21544  0122C2  006F FF8F FFE6     	movff	plusw1,postinc1
 21545  0122C8  EC30  F0D3         	call	___awmod	;wreg free
 21546  0122CC  5001               	movf	btemp^0,w,c
 21547  0122CE  0F30               	addlw	48
 21548  0122D0  6EDF               	movwf	indf2,c
 21549                           
 21550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 21551  0122D2  0E0A               	movlw	10
 21552  0122D4  6EE6               	movwf	postinc1,c
 21553  0122D6  0E00               	movlw	0
 21554  0122D8  6EE6               	movwf	postinc1,c
 21555                           
 21556                           ;stkvar	_e @ sp[(-58)+34]
 21557  0122DA  0EE8               	movlw	-24
 21558  0122DC  006F FF8F FFE6     	movff	plusw1,postinc1
 21559  0122E2  006F FF8F FFE6     	movff	plusw1,postinc1
 21560  0122E8  EC75  F0CE         	call	___awdiv	;wreg free
 21561                           
 21562                           ;stkvar	_e @ sp[(-56)+34]
 21563  0122EC  0EEA               	movlw	-22
 21564  0122EE  0060  F007  FFE3   	movff	btemp,plusw1
 21565  0122F4  0EEB               	movlw	-21
 21566  0122F6  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21567                           
 21568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 21569                           ;stkvar	_p @ sp[(-56)+40]
 21570  0122FC  50E1               	movf	fsr1l,w,c
 21571  0122FE  0FF0               	addlw	-16
 21572  012300  6ED9               	movwf	fsr2l,c
 21573  012302  50E2               	movf	fsr1h,w,c
 21574  012304  6EDA               	movwf	fsr2h,c
 21575  012306  0EFF               	movlw	255
 21576  012308  22DA               	addwfc	fsr2h,f,c
 21577  01230A  06DE               	decf	postinc2,f,c
 21578  01230C  0E00               	movlw	0
 21579  01230E  5ADD               	subwfb	postdec2,f,c
 21580                           
 21581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 21582                           ;stkvar	_w @ sp[(-56)+38]
 21583  012310  50E1               	movf	fsr1l,w,c
 21584  012312  0FEE               	addlw	-18
 21585  012314  6ED9               	movwf	fsr2l,c
 21586  012316  50E2               	movf	fsr1h,w,c
 21587  012318  6EDA               	movwf	fsr2h,c
 21588  01231A  0EFF               	movlw	255
 21589  01231C  22DA               	addwfc	fsr2h,f,c
 21590  01231E  06DE               	decf	postinc2,f,c
 21591  012320  0E00               	movlw	0
 21592  012322  5ADD               	subwfb	postdec2,f,c
 21593  012324                     l13522:
 21594                           
 21595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 21596                           ;stkvar	_e @ sp[(-56)+34]
 21597  012324  0EEA               	movlw	-22
 21598  012326  006F FF8C  F001    	movff	plusw1,btemp
 21599  01232C  0EEB               	movlw	-21
 21600  01232E  50E3               	movf	plusw1,w,c
 21601  012330  1001               	iorwf	btemp^0,w,c
 21602  012332  A4D8               	btfss	status,2,c
 21603  012334  D7A6               	goto	l13512
 21604                           
 21605                           ;stkvar	_p @ sp[(-56)+40]
 21606  012336  0EF1               	movlw	-15
 21607  012338  BEE3               	btfsc	plusw1,7,c
 21608  01233A  D007               	goto	u12660
 21609  01233C  0EF1               	movlw	-15
 21610  01233E  50E3               	movf	plusw1,w,c
 21611  012340  E1A0               	bnz	l13512
 21612  012342  0EF0               	movlw	-16
 21613  012344  04E3               	decf	plusw1,w,c
 21614  012346  B0D8               	btfsc	status,0,c
 21615  012348  D79C               	goto	l13512
 21616  01234A                     u12660:
 21617                           
 21618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 21619                           ;stkvar	_i @ sp[(-56)+36]
 21620  01234A  50E1               	movf	fsr1l,w,c
 21621  01234C  0FEC               	addlw	-20
 21622  01234E  6ED9               	movwf	fsr2l,c
 21623  012350  50E2               	movf	fsr1h,w,c
 21624  012352  6EDA               	movwf	fsr2h,c
 21625  012354  0EFF               	movlw	255
 21626  012356  22DA               	addwfc	fsr2h,f,c
 21627  012358  06DE               	decf	postinc2,f,c
 21628  01235A  0E00               	movlw	0
 21629  01235C  5ADD               	subwfb	postdec2,f,c
 21630                           
 21631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 21632                           ;stkvar	_sign @ sp[(-56)+42]
 21633  01235E  0EF2               	movlw	-14
 21634  012360  006F FF8C  F001    	movff	plusw1,btemp
 21635  012366  0EF3               	movlw	-13
 21636  012368  50E3               	movf	plusw1,w,c
 21637  01236A  1001               	iorwf	btemp^0,w,c
 21638  01236C  A4D8               	btfss	status,2,c
 21639  01236E  D002               	goto	l13532
 21640  012370  0E2B               	movlw	43
 21641  012372  D001               	goto	L23
 21642  012374                     l13532:
 21643  012374  0E2D               	movlw	45
 21644  012376                     L23:
 21645  012376  6E0B               	movwf	(btemp+10)^0,c
 21646  012378  0E00               	movlw	0
 21647  01237A  6E0C               	movwf	(btemp+11)^0,c
 21648                           
 21649                           ;stkvar	_efgtoa$6765 @ sp[(-56)+4]
 21650  01237C  0ECC               	movlw	-52
 21651  01237E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21652  012384  0ECD               	movlw	-51
 21653  012386  0060  F033  FFE3   	movff	btemp+11,plusw1
 21654                           
 21655                           ;stkvar	_efgtoa$6765 @ sp[(-56)+4]
 21656                           ;stkvar	_i @ sp[(-56)+36]
 21657  01238C  0EEC               	movlw	-20
 21658  01238E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21659  012394  0EED               	movlw	-19
 21660  012396  006F FF8C  F00C    	movff	plusw1,btemp+11
 21661  01239C  0E94               	movlw	low _dbuf
 21662  01239E  240B               	addwf	(btemp+10)^0,w,c
 21663  0123A0  6ED9               	movwf	fsr2l,c
 21664  0123A2  0E03               	movlw	high _dbuf
 21665  0123A4  200C               	addwfc	(btemp+11)^0,w,c
 21666  0123A6  6EDA               	movwf	fsr2h,c
 21667  0123A8  0ECC               	movlw	-52
 21668  0123AA  006F FF8F FFDF     	movff	plusw1,indf2
 21669                           
 21670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 21671                           ;stkvar	_w @ sp[(-56)+38]
 21672  0123B0  50E1               	movf	fsr1l,w,c
 21673  0123B2  0FEE               	addlw	-18
 21674  0123B4  6ED9               	movwf	fsr2l,c
 21675  0123B6  50E2               	movf	fsr1h,w,c
 21676  0123B8  6EDA               	movwf	fsr2h,c
 21677  0123BA  0EFF               	movlw	255
 21678  0123BC  22DA               	addwfc	fsr2h,f,c
 21679  0123BE  06DE               	decf	postinc2,f,c
 21680  0123C0  0E00               	movlw	0
 21681  0123C2  5ADD               	subwfb	postdec2,f,c
 21682                           
 21683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 21684                           ;stkvar	_i @ sp[(-56)+36]
 21685  0123C4  50E1               	movf	fsr1l,w,c
 21686  0123C6  0FEC               	addlw	-20
 21687  0123C8  6ED9               	movwf	fsr2l,c
 21688  0123CA  50E2               	movf	fsr1h,w,c
 21689  0123CC  6EDA               	movwf	fsr2h,c
 21690  0123CE  0EFF               	movlw	255
 21691  0123D0  22DA               	addwfc	fsr2h,f,c
 21692  0123D2  06DE               	decf	postinc2,f,c
 21693  0123D4  0E00               	movlw	0
 21694  0123D6  5ADD               	subwfb	postdec2,f,c
 21695  0123D8  0EBF               	movlw	191
 21696  0123DA  6E0B               	movwf	(btemp+10)^0,c
 21697  0123DC  0EFF               	movlw	255
 21698  0123DE  6E0C               	movwf	(btemp+11)^0,c
 21699                           
 21700                           ;stkvar	_c @ sp[(-56)+-7]
 21701  0123E0  0EC1               	movlw	-63
 21702  0123E2  50E3               	movf	plusw1,w,c
 21703  0123E4  6E09               	movwf	(btemp+8)^0,c
 21704  0123E6  6A0A               	clrf	(btemp+9)^0,c
 21705  0123E8  500B               	movf	(btemp+10)^0,w,c
 21706  0123EA  2609               	addwf	(btemp+8)^0,f,c
 21707  0123EC  500C               	movf	(btemp+11)^0,w,c
 21708  0123EE  220A               	addwfc	(btemp+9)^0,f,c
 21709  0123F0  500A               	movf	(btemp+9)^0,w,c
 21710  0123F2  E106               	bnz	u12680
 21711  0123F4  0E1A               	movlw	26
 21712  0123F6  5C09               	subwf	(btemp+8)^0,w,c
 21713  0123F8  B0D8               	btfsc	status,0,c
 21714  0123FA  D002               	goto	u12680
 21715  0123FC  0E01               	movlw	1
 21716  0123FE  D001               	goto	u12690
 21717  012400                     u12680:
 21718  012400  0E00               	movlw	0
 21719  012402                     u12690:
 21720  012402  6E0B               	movwf	(btemp+10)^0,c
 21721  012404  6A0C               	clrf	(btemp+11)^0,c
 21722                           
 21723                           ;stkvar	_efgtoa$6767 @ sp[(-56)+0]
 21724  012406  0EC8               	movlw	-56
 21725  012408  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21726  01240E  0EC9               	movlw	-55
 21727  012410  0060  F033  FFE3   	movff	btemp+11,plusw1
 21728                           
 21729                           ;stkvar	_efgtoa$6767 @ sp[(-56)+0]
 21730  012416  0EC8               	movlw	-56
 21731  012418  006F FF8C  F001    	movff	plusw1,btemp
 21732  01241E  0EC9               	movlw	-55
 21733  012420  50E3               	movf	plusw1,w,c
 21734  012422  1001               	iorwf	btemp^0,w,c
 21735  012424  A4D8               	btfss	status,2,c
 21736  012426  D002               	goto	l13548
 21737  012428  0E65               	movlw	101
 21738  01242A  D001               	goto	L24
 21739  01242C                     l13548:
 21740  01242C  0E45               	movlw	69
 21741  01242E                     L24:
 21742  01242E  6E0B               	movwf	(btemp+10)^0,c
 21743  012430  0E00               	movlw	0
 21744  012432  6E0C               	movwf	(btemp+11)^0,c
 21745                           
 21746                           ;stkvar	_efgtoa$6766 @ sp[(-56)+2]
 21747  012434  0ECA               	movlw	-54
 21748  012436  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21749  01243C  0ECB               	movlw	-53
 21750  01243E  0060  F033  FFE3   	movff	btemp+11,plusw1
 21751                           
 21752                           ;stkvar	_efgtoa$6766 @ sp[(-56)+2]
 21753                           ;stkvar	_i @ sp[(-56)+36]
 21754  012444  0EEC               	movlw	-20
 21755  012446  006F FF8C  F00B    	movff	plusw1,btemp+10
 21756  01244C  0EED               	movlw	-19
 21757  01244E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21758  012454  0E94               	movlw	low _dbuf
 21759  012456  240B               	addwf	(btemp+10)^0,w,c
 21760  012458  6ED9               	movwf	fsr2l,c
 21761  01245A  0E03               	movlw	high _dbuf
 21762  01245C  200C               	addwfc	(btemp+11)^0,w,c
 21763  01245E  6EDA               	movwf	fsr2h,c
 21764  012460  0ECA               	movlw	-54
 21765  012462  006F FF8F FFDF     	movff	plusw1,indf2
 21766                           
 21767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 21768                           ;stkvar	_w @ sp[(-56)+38]
 21769  012468  50E1               	movf	fsr1l,w,c
 21770  01246A  0FEE               	addlw	-18
 21771  01246C  6ED9               	movwf	fsr2l,c
 21772  01246E  50E2               	movf	fsr1h,w,c
 21773  012470  6EDA               	movwf	fsr2h,c
 21774  012472  0EFF               	movlw	255
 21775  012474  22DA               	addwfc	fsr2h,f,c
 21776  012476  06DE               	decf	postinc2,f,c
 21777  012478  0E00               	movlw	0
 21778  01247A  5ADD               	subwfb	postdec2,f,c
 21779                           
 21780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 21781                           ;stkvar	_i @ sp[(-56)+36]
 21782  01247C  0EEC               	movlw	-20
 21783  01247E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21784  012484  0EED               	movlw	-19
 21785  012486  006F FF8C  F00C    	movff	plusw1,btemp+11
 21786  01248C  0E94               	movlw	low _dbuf
 21787  01248E  240B               	addwf	(btemp+10)^0,w,c
 21788  012490  6E09               	movwf	(btemp+8)^0,c
 21789  012492  0E03               	movlw	high _dbuf
 21790  012494  200C               	addwfc	(btemp+11)^0,w,c
 21791  012496  6E0A               	movwf	(btemp+9)^0,c
 21792  012498  0060  F027  FFE6   	movff	btemp+8,postinc1
 21793  01249E  0060  F02B  FFE6   	movff	btemp+9,postinc1
 21794                           
 21795                           ;stkvar	_n @ sp[(-58)+32]
 21796  0124A4  0E94               	movlw	low _dbuf
 21797  0124A6  6E0B               	movwf	(btemp+10)^0,c
 21798  0124A8  0E03               	movlw	high _dbuf
 21799  0124AA  6E0C               	movwf	(btemp+11)^0,c
 21800  0124AC  0EE6               	movlw	-26
 21801  0124AE  50E3               	movf	plusw1,w,c
 21802  0124B0  260B               	addwf	(btemp+10)^0,f,c
 21803  0124B2  0EE7               	movlw	-25
 21804  0124B4  50E3               	movf	plusw1,w,c
 21805  0124B6  220C               	addwfc	(btemp+11)^0,f,c
 21806  0124B8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21807  0124BE  0060  F033  FFE6   	movff	btemp+11,postinc1
 21808  0124C4  EC18  F0D7         	call	_strcpy	;wreg free
 21809  0124C8  EF5F  F08A         	goto	l13300
 21810  0124CC                     l2470:
 21811                           
 21812                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 21813  0124CC  0EC1               	movlw	193
 21814  0124CE  26E1               	addwf	fsr1l,f,c
 21815  0124D0  0EFF               	movlw	255
 21816  0124D2  22E2               	addwfc	fsr1h,f,c
 21817  0124D4  0012               	return		;funcret
 21818  0124D6                     __end_of_efgtoa:
 21819                           	opt callstack 0
 21820                           
 21821 ;; *************** function _tolower *****************
 21822 ;; Defined at:
 21823 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 21824 ;; Parameters:    Size  Location     Type
 21825 ;;  c               2  [STACK] int 
 21826 ;; Auto vars:     Size  Location     Type
 21827 ;;		None
 21828 ;; Return value:  Size  Location     Type
 21829 ;;                  2  [STACK] int 
 21830 ;; Registers used:
 21831 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 21832 ;; Tracked objects:
 21833 ;;		On entry : 0/0
 21834 ;;		On exit  : 0/0
 21835 ;;		Unchanged: 0/0
 21836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21841 ;;Total ram usage:        0 bytes
 21842 ;; Hardware stack levels used:    1
 21843 ;; Hardware stack levels required when called:   16
 21844 ;; This function calls:
 21845 ;;		_isupper
 21846 ;; This function is called by:
 21847 ;;		_efgtoa
 21848 ;;		_vfpfcnvrt
 21849 ;; This function uses a reentrant model
 21850 ;;
 21851                           
 21852                           	psect	text77
 21853  01BC0E                     __ptext77:
 21854                           	opt callstack 0
 21855  01BC0E                     _tolower:
 21856                           	opt callstack 0
 21857                           
 21858                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21859  01BC0E  52E6               	movf	postinc1,f,c
 21860  01BC10  52E6               	movf	postinc1,f,c
 21861                           
 21862                           ;stkvar	_c @ sp[(-2)+-2]
 21863                           
 21864                           ;incstack = 0
 21865 ;; hardware stack exceeded
 21866  01BC12  0EFC               	movlw	-4
 21867  01BC14  50E3               	movf	plusw1,w,c
 21868  01BC16  0FBF               	addlw	191
 21869  01BC18  6E0B               	movwf	(btemp+10)^0,c
 21870  01BC1A  0EFD               	movlw	-3
 21871  01BC1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21872  01BC22  0EFF               	movlw	255
 21873  01BC24  220C               	addwfc	(btemp+11)^0,f,c
 21874  01BC26  500C               	movf	(btemp+11)^0,w,c
 21875  01BC28  E106               	bnz	u6640
 21876  01BC2A  0E1A               	movlw	26
 21877  01BC2C  5C0B               	subwf	(btemp+10)^0,w,c
 21878  01BC2E  B0D8               	btfsc	status,0,c
 21879  01BC30  D002               	goto	u6640
 21880  01BC32  0E01               	movlw	1
 21881  01BC34  D001               	goto	u6650
 21882  01BC36                     u6640:
 21883  01BC36  0E00               	movlw	0
 21884  01BC38                     u6650:
 21885  01BC38  6E0B               	movwf	(btemp+10)^0,c
 21886  01BC3A  6A0C               	clrf	(btemp+11)^0,c
 21887                           
 21888                           ;stkvar	_tolower$7586 @ sp[(-2)+0]
 21889  01BC3C  0EFE               	movlw	-2
 21890  01BC3E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21891  01BC44  0EFF               	movlw	-1
 21892  01BC46  0060  F033  FFE3   	movff	btemp+11,plusw1
 21893                           
 21894                           ;stkvar	_tolower$7586 @ sp[(-2)+0]
 21895  01BC4C  0EFE               	movlw	-2
 21896  01BC4E  006F FF8C  F001    	movff	plusw1,btemp
 21897  01BC54  0EFF               	movlw	-1
 21898  01BC56  50E3               	movf	plusw1,w,c
 21899  01BC58  1001               	iorwf	btemp^0,w,c
 21900  01BC5A  B4D8               	btfsc	status,2,c
 21901  01BC5C  D00D               	goto	l8810
 21902                           
 21903                           ;stkvar	_c @ sp[(-2)+-2]
 21904  01BC5E  0EFC               	movlw	-4
 21905  01BC60  006F FF8C  F001    	movff	plusw1,btemp
 21906  01BC66  0EFD               	movlw	-3
 21907  01BC68  006F FF8C  F002    	movff	plusw1,btemp+1
 21908  01BC6E  0E20               	movlw	32
 21909  01BC70  1201               	iorwf	btemp^0,f,c
 21910  01BC72  0E00               	movlw	0
 21911  01BC74  1202               	iorwf	(btemp+1)^0,f,c
 21912  01BC76  D008               	goto	l3742
 21913  01BC78                     l8810:
 21914                           
 21915                           ;stkvar	_c @ sp[(-2)+-2]
 21916  01BC78  0EFC               	movlw	-4
 21917  01BC7A  006F FF8C  F001    	movff	plusw1,btemp
 21918  01BC80  0EFD               	movlw	-3
 21919  01BC82  006F FF8C  F002    	movff	plusw1,btemp+1
 21920  01BC88                     l3742:
 21921                           
 21922                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21923  01BC88  52E5               	movf	postdec1,f,c
 21924  01BC8A  52E5               	movf	postdec1,f,c
 21925  01BC8C  52E5               	movf	postdec1,f,c
 21926  01BC8E  52E5               	movf	postdec1,f,c
 21927  01BC90  0012               	return		;funcret
 21928  01BC92                     __end_of_tolower:
 21929                           	opt callstack 0
 21930                           
 21931 ;; *************** function _isupper *****************
 21932 ;; Defined at:
 21933 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 21934 ;; Parameters:    Size  Location     Type
 21935 ;;  c               2  [STACK] int 
 21936 ;; Auto vars:     Size  Location     Type
 21937 ;;		None
 21938 ;; Return value:  Size  Location     Type
 21939 ;;                  2  [STACK] int 
 21940 ;; Registers used:
 21941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21942 ;; Tracked objects:
 21943 ;;		On entry : 0/0
 21944 ;;		On exit  : 0/0
 21945 ;;		Unchanged: 0/0
 21946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21951 ;;Total ram usage:        0 bytes
 21952 ;; Hardware stack levels used:    1
 21953 ;; Hardware stack levels required when called:   15
 21954 ;; This function calls:
 21955 ;;		Nothing
 21956 ;; This function is called by:
 21957 ;;		_efgtoa
 21958 ;;		_xtoa
 21959 ;;		_vfpfcnvrt
 21960 ;;		_tolower
 21961 ;; This function uses a reentrant model
 21962 ;;
 21963                           
 21964                           	psect	text78
 21965  01CBDC                     __ptext78:
 21966                           	opt callstack 0
 21967  01CBDC                     _isupper:
 21968                           	opt callstack 0
 21969                           
 21970                           ;stkvar	_c @ sp[(0)+-2]
 21971                           
 21972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21973                           ;incstack = 0
 21974 ;; hardware stack exceeded
 21975  01CBDC  0EFE               	movlw	-2
 21976  01CBDE  50E3               	movf	plusw1,w,c
 21977  01CBE0  0FBF               	addlw	191
 21978  01CBE2  6E0B               	movwf	(btemp+10)^0,c
 21979  01CBE4  0EFF               	movlw	-1
 21980  01CBE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21981  01CBEC  0EFF               	movlw	255
 21982  01CBEE  220C               	addwfc	(btemp+11)^0,f,c
 21983  01CBF0  500C               	movf	(btemp+11)^0,w,c
 21984  01CBF2  E106               	bnz	u5990
 21985  01CBF4  0E1A               	movlw	26
 21986  01CBF6  5C0B               	subwf	(btemp+10)^0,w,c
 21987  01CBF8  B0D8               	btfsc	status,0,c
 21988  01CBFA  D002               	goto	u5990
 21989  01CBFC  0E01               	movlw	1
 21990  01CBFE  D001               	goto	u6000
 21991  01CC00                     u5990:
 21992  01CC00  0E00               	movlw	0
 21993  01CC02                     u6000:
 21994  01CC02  6E01               	movwf	btemp^0,c
 21995  01CC04  6A02               	clrf	(btemp+1)^0,c
 21996                           
 21997                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21998  01CC06  52E5               	movf	postdec1,f,c
 21999  01CC08  52E5               	movf	postdec1,f,c
 22000  01CC0A  0012               	return		;funcret
 22001  01CC0C                     __end_of_isupper:
 22002                           	opt callstack 0
 22003                           
 22004 ;; *************** function _strcpy *****************
 22005 ;; Defined at:
 22006 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 22007 ;; Parameters:    Size  Location     Type
 22008 ;;  dest            2  [STACK] PTR unsigned char 
 22009 ;;		 -> dbuf(80), 
 22010 ;;  src             2  [STACK] PTR const unsigned char 
 22011 ;;		 -> STR_86(4), STR_85(4), STR_82(4), STR_81(4), 
 22012 ;;		 -> dbuf(80), 
 22013 ;; Auto vars:     Size  Location     Type
 22014 ;;  d               2  [STACK] PTR unsigned char 
 22015 ;;		 -> dbuf(80), 
 22016 ;;  s               2  [STACK] PTR const unsigned char 
 22017 ;;		 -> STR_86(4), STR_85(4), STR_82(4), STR_81(4), 
 22018 ;;		 -> dbuf(80), 
 22019 ;; Return value:  Size  Location     Type
 22020 ;;                  2  [STACK] PTR unsigned char 
 22021 ;; Registers used:
 22022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 22023 ;; Tracked objects:
 22024 ;;		On entry : 0/0
 22025 ;;		On exit  : 0/0
 22026 ;;		Unchanged: 0/0
 22027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22032 ;;Total ram usage:        0 bytes
 22033 ;; Hardware stack levels used:    1
 22034 ;; Hardware stack levels required when called:   15
 22035 ;; This function calls:
 22036 ;;		Nothing
 22037 ;; This function is called by:
 22038 ;;		_efgtoa
 22039 ;; This function uses a reentrant model
 22040 ;;
 22041                           
 22042                           	psect	text79
 22043  01AE30                     __ptext79:
 22044                           	opt callstack 0
 22045  01AE30                     _strcpy:
 22046                           	opt callstack 0
 22047                           
 22048                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22049  01AE30  52E6               	movf	postinc1,f,c
 22050  01AE32  52E6               	movf	postinc1,f,c
 22051  01AE34  52E6               	movf	postinc1,f,c
 22052  01AE36  52E6               	movf	postinc1,f,c
 22053                           
 22054                           ;stkvar	_src @ sp[(-4)+-4]
 22055                           
 22056                           ;incstack = 0
 22057 ;; hardware stack exceeded
 22058  01AE38  0EF8               	movlw	-8
 22059  01AE3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22060  01AE40  0EF9               	movlw	-7
 22061  01AE42  006F FF8C  F00C    	movff	plusw1,btemp+11
 22062                           
 22063                           ;stkvar	_s @ sp[(-4)+2]
 22064  01AE48  0EFF               	movlw	-1
 22065  01AE4A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22066  01AE50  0EFE               	movlw	-2
 22067  01AE52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22068                           
 22069                           ;stkvar	_dest @ sp[(-4)+-2]
 22070  01AE58  0EFA               	movlw	-6
 22071  01AE5A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22072  01AE60  0EFB               	movlw	-5
 22073  01AE62  006F FF8C  F00C    	movff	plusw1,btemp+11
 22074                           
 22075                           ;stkvar	_d @ sp[(-4)+0]
 22076  01AE68  0EFD               	movlw	-3
 22077  01AE6A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22078  01AE70  0EFC               	movlw	-4
 22079  01AE72  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22080  01AE78                     l13162:
 22081                           
 22082                           ;stkvar	_s @ sp[(-4)+2]
 22083  01AE78  50E1               	movf	fsr1l,w,c
 22084  01AE7A  0FFE               	addlw	-2
 22085  01AE7C  6ED9               	movwf	fsr2l,c
 22086  01AE7E  50E2               	movf	fsr1h,w,c
 22087  01AE80  6EDA               	movwf	fsr2h,c
 22088  01AE82  0EFF               	movlw	255
 22089  01AE84  22DA               	addwfc	fsr2h,f,c
 22090  01AE86  006F FF7C  F00B    	movff	indf2,btemp+10
 22091  01AE8C  0E01               	movlw	1
 22092  01AE8E  26DE               	addwf	postinc2,f,c
 22093  01AE90  006F FF7C  F00C    	movff	indf2,btemp+11
 22094  01AE96  0E00               	movlw	0
 22095  01AE98  22DD               	addwfc	postdec2,f,c
 22096  01AE9A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 22097  01AEA0  0060  F033  FFF7   	movff	btemp+11,tblptrh
 22098  01AEA6  0E00               	movlw	low (__mediumconst shr (0+16))
 22099  01AEA8  6EF8               	movwf	tblptru,c
 22100                           
 22101                           ;stkvar	_d @ sp[(-4)+0]
 22102  01AEAA  50E1               	movf	fsr1l,w,c
 22103  01AEAC  0FFC               	addlw	-4
 22104  01AEAE  6ED9               	movwf	fsr2l,c
 22105  01AEB0  50E2               	movf	fsr1h,w,c
 22106  01AEB2  6EDA               	movwf	fsr2h,c
 22107  01AEB4  0EFF               	movlw	255
 22108  01AEB6  22DA               	addwfc	fsr2h,f,c
 22109  01AEB8  006F FF7C  F00B    	movff	indf2,btemp+10
 22110  01AEBE  0E01               	movlw	1
 22111  01AEC0  26DE               	addwf	postinc2,f,c
 22112  01AEC2  006F FF7C  F00C    	movff	indf2,btemp+11
 22113  01AEC8  0E00               	movlw	0
 22114  01AECA  22DD               	addwfc	postdec2,f,c
 22115  01AECC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 22116  01AED2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 22117  01AED8  0E1F               	movlw	(high __ramtop+-1)
 22118  01AEDA  64F7               	cpfsgt	tblptrh,c
 22119  01AEDC  D003               	bra	u11987
 22120  01AEDE  0008               	tblrd		*
 22121  01AEE0  50F5               	movf	tablat,w,c
 22122  01AEE2  D007               	bra	u11980
 22123  01AEE4                     u11987:
 22124  01AEE4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22125  01AEEA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22126  01AEF0  50EF               	movf	indf0,w,c
 22127  01AEF2                     u11980:
 22128  01AEF2  6EDF               	movwf	indf2,c
 22129  01AEF4  50DF               	movf	indf2,w,c
 22130  01AEF6  A4D8               	btfss	status,2,c
 22131  01AEF8  D7BF               	goto	l13162
 22132                           
 22133                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 22134  01AEFA  0EF8               	movlw	248
 22135  01AEFC  26E1               	addwf	fsr1l,f,c
 22136  01AEFE  0EFF               	movlw	255
 22137  01AF00  22E2               	addwfc	fsr1h,f,c
 22138  01AF02  0012               	return		;funcret
 22139  01AF04                     __end_of_strcpy:
 22140                           	opt callstack 0
 22141                           
 22142 ;; *************** function _floorf *****************
 22143 ;; Defined at:
 22144 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 22145 ;; Parameters:    Size  Location     Type
 22146 ;;  x               4  [STACK] float 
 22147 ;; Auto vars:     Size  Location     Type
 22148 ;;  u               4  [STACK] struct .
 22149 ;;  m               4  [STACK] unsigned long 
 22150 ;;  e               2  [STACK] int 
 22151 ;; Return value:  Size  Location     Type
 22152 ;;                  4  [STACK] float 
 22153 ;; Registers used:
 22154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 22155 ;; Tracked objects:
 22156 ;;		On entry : 0/0
 22157 ;;		On exit  : 0/0
 22158 ;;		Unchanged: 0/0
 22159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22164 ;;Total ram usage:        0 bytes
 22165 ;; Hardware stack levels used:    1
 22166 ;; Hardware stack levels required when called:   15
 22167 ;; This function calls:
 22168 ;;		Nothing
 22169 ;; This function is called by:
 22170 ;;		_efgtoa
 22171 ;; This function uses a reentrant model
 22172 ;;
 22173                           
 22174                           	psect	text80
 22175  016A06                     __ptext80:
 22176                           	opt callstack 0
 22177  016A06                     _floorf:
 22178                           	opt callstack 0
 22179                           
 22180                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22181  016A06  0E0A               	movlw	10
 22182  016A08  26E1               	addwf	fsr1l,f,c
 22183  016A0A  0E00               	movlw	0
 22184  016A0C  22E2               	addwfc	fsr1h,f,c
 22185                           
 22186                           ;incstack = 0
 22187 ;; hardware stack exceeded
 22188  016A0E  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 22189  016A14  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 22190  016A1A  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 22191  016A20  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 22192                           
 22193                           ;stkvar	_u @ sp[(-10)+0]
 22194  016A26  0EF6               	movlw	-10
 22195  016A28  0060  F027  FFE3   	movff	btemp+8,plusw1
 22196  016A2E  0EF7               	movlw	-9
 22197  016A30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22198  016A36  0EF8               	movlw	-8
 22199  016A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22200  016A3E  0EF9               	movlw	-7
 22201  016A40  0060  F033  FFE3   	movff	btemp+11,plusw1
 22202                           
 22203                           ;stkvar	_x @ sp[(-10)+-4]
 22204  016A46  0EF2               	movlw	-14
 22205  016A48  006F FF8C  F009    	movff	plusw1,btemp+8
 22206  016A4E  0EF3               	movlw	-13
 22207  016A50  006F FF8C  F00A    	movff	plusw1,btemp+9
 22208  016A56  0EF4               	movlw	-12
 22209  016A58  006F FF8C  F00B    	movff	plusw1,btemp+10
 22210  016A5E  0EF5               	movlw	-11
 22211  016A60  006F FF8C  F00C    	movff	plusw1,btemp+11
 22212                           
 22213                           ;stkvar	_u @ sp[(-10)+0]
 22214  016A66  0EF6               	movlw	-10
 22215  016A68  0060  F027  FFE3   	movff	btemp+8,plusw1
 22216  016A6E  0EF7               	movlw	-9
 22217  016A70  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22218  016A76  0EF8               	movlw	-8
 22219  016A78  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22220  016A7E  0EF9               	movlw	-7
 22221  016A80  0060  F033  FFE3   	movff	btemp+11,plusw1
 22222  016A86  0E81               	movlw	129
 22223  016A88  6E0B               	movwf	(btemp+10)^0,c
 22224  016A8A  0EFF               	movlw	255
 22225  016A8C  6E0C               	movwf	(btemp+11)^0,c
 22226                           
 22227                           ;stkvar	_u @ sp[(-10)+0]
 22228  016A8E  0EF6               	movlw	-10
 22229  016A90  006F FF8C  F005    	movff	plusw1,btemp+4
 22230  016A96  0EF7               	movlw	-9
 22231  016A98  006F FF8C  F006    	movff	plusw1,btemp+5
 22232  016A9E  0EF8               	movlw	-8
 22233  016AA0  006F FF8C  F007    	movff	plusw1,btemp+6
 22234  016AA6  0EF9               	movlw	-7
 22235  016AA8  006F FF8C  F008    	movff	plusw1,btemp+7
 22236  016AAE  0E18               	movlw	24
 22237  016AB0  D005               	goto	u6670
 22238  016AB2                     u6675:
 22239  016AB2  90D8               	bcf	status,0,c
 22240  016AB4  3208               	rrcf	(btemp+7)^0,f,c
 22241  016AB6  3207               	rrcf	(btemp+6)^0,f,c
 22242  016AB8  3206               	rrcf	(btemp+5)^0,f,c
 22243  016ABA  3205               	rrcf	(btemp+4)^0,f,c
 22244  016ABC                     u6670:
 22245  016ABC  2EE8               	decfsz	wreg,f,c
 22246  016ABE  D7F9               	goto	u6675
 22247  016AC0  0060  F014  F009   	movff	btemp+4,btemp+8
 22248  016AC6  0060  F018  F00A   	movff	btemp+5,btemp+9
 22249  016ACC  0EFF               	movlw	255
 22250  016ACE  1609               	andwf	(btemp+8)^0,f,c
 22251  016AD0  0E00               	movlw	0
 22252  016AD2  160A               	andwf	(btemp+9)^0,f,c
 22253  016AD4  500B               	movf	(btemp+10)^0,w,c
 22254  016AD6  2609               	addwf	(btemp+8)^0,f,c
 22255  016AD8  500C               	movf	(btemp+11)^0,w,c
 22256  016ADA  220A               	addwfc	(btemp+9)^0,f,c
 22257                           
 22258                           ;stkvar	_e @ sp[(-10)+8]
 22259  016ADC  0EFE               	movlw	-2
 22260  016ADE  0060  F027  FFE3   	movff	btemp+8,plusw1
 22261  016AE4  0EFF               	movlw	-1
 22262  016AE6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22263                           
 22264                           ;stkvar	_e @ sp[(-10)+8]
 22265  016AEC  0EFF               	movlw	-1
 22266  016AEE  BEE3               	btfsc	plusw1,7,c
 22267  016AF0  D019               	goto	l8824
 22268  016AF2  0EFF               	movlw	-1
 22269  016AF4  50E3               	movf	plusw1,w,c
 22270  016AF6  E108               	bnz	u6680
 22271  016AF8  0EFE               	movlw	-2
 22272  016AFA  006F FF8C  F001    	movff	plusw1,btemp
 22273  016B00  0E17               	movlw	23
 22274  016B02  5E01               	subwf	btemp^0,f,c
 22275  016B04  A0D8               	btfss	status,0,c
 22276  016B06  D00E               	goto	l8824
 22277  016B08                     u6680:
 22278                           
 22279                           ;stkvar	_x @ sp[(-10)+-4]
 22280  016B08  0EF2               	movlw	-14
 22281  016B0A  006F FF8C  F001    	movff	plusw1,btemp
 22282  016B10  0EF3               	movlw	-13
 22283  016B12  006F FF8C  F002    	movff	plusw1,btemp+1
 22284  016B18  0EF4               	movlw	-12
 22285  016B1A  006F FF8C  F003    	movff	plusw1,btemp+2
 22286  016B20  0EF5               	movlw	-11
 22287  016B22  D11F               	goto	L25
 22288  016B24                     l8824:
 22289                           
 22290                           ;stkvar	_e @ sp[(-10)+8]
 22291  016B24  0EFF               	movlw	-1
 22292  016B26  BEE3               	btfsc	plusw1,7,c
 22293  016B28  D0B4               	goto	l8840
 22294                           
 22295                           ;stkvar	_e @ sp[(-10)+8]
 22296  016B2A  0EFE               	movlw	-2
 22297  016B2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22298  016B32  0EFF               	movlw	255
 22299  016B34  6E05               	movwf	(btemp+4)^0,c
 22300  016B36  0EFF               	movlw	255
 22301  016B38  6E06               	movwf	(btemp+5)^0,c
 22302  016B3A  0E7F               	movlw	127
 22303  016B3C  6E07               	movwf	(btemp+6)^0,c
 22304  016B3E  0E00               	movlw	0
 22305  016B40  6E08               	movwf	(btemp+7)^0,c
 22306  016B42                     u6705:
 22307  016B42  660C               	tstfsz	(btemp+11)^0,c
 22308  016B44  D001               	goto	u6706
 22309  016B46  D007               	goto	u6707
 22310  016B48                     u6706:
 22311  016B48  3408               	rlcf	(btemp+7)^0,w,c
 22312  016B4A  3208               	rrcf	(btemp+7)^0,f,c
 22313  016B4C  3207               	rrcf	(btemp+6)^0,f,c
 22314  016B4E  3206               	rrcf	(btemp+5)^0,f,c
 22315  016B50  3205               	rrcf	(btemp+4)^0,f,c
 22316  016B52  2E0C               	decfsz	(btemp+11)^0,f,c
 22317  016B54  D7F6               	goto	u6705
 22318  016B56                     u6707:
 22319                           
 22320                           ;stkvar	_m @ sp[(-10)+4]
 22321  016B56  0EFA               	movlw	-6
 22322  016B58  0060  F017  FFE3   	movff	btemp+4,plusw1
 22323  016B5E  0EFB               	movlw	-5
 22324  016B60  0060  F01B  FFE3   	movff	btemp+5,plusw1
 22325  016B66  0EFC               	movlw	-4
 22326  016B68  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22327  016B6E  0EFD               	movlw	-3
 22328  016B70  0060  F023  FFE3   	movff	btemp+7,plusw1
 22329                           
 22330                           ;stkvar	_m @ sp[(-10)+4]
 22331                           ;stkvar	_u @ sp[(-10)+0]
 22332  016B76  0EF6               	movlw	-10
 22333  016B78  006F FF8C  F009    	movff	plusw1,btemp+8
 22334  016B7E  0EF7               	movlw	-9
 22335  016B80  006F FF8C  F00A    	movff	plusw1,btemp+9
 22336  016B86  0EF8               	movlw	-8
 22337  016B88  006F FF8C  F00B    	movff	plusw1,btemp+10
 22338  016B8E  0EF9               	movlw	-7
 22339  016B90  006F FF8C  F00C    	movff	plusw1,btemp+11
 22340  016B96  0EFA               	movlw	-6
 22341  016B98  50E3               	movf	plusw1,w,c
 22342  016B9A  1609               	andwf	(btemp+8)^0,f,c
 22343  016B9C  0EFB               	movlw	-5
 22344  016B9E  50E3               	movf	plusw1,w,c
 22345  016BA0  160A               	andwf	(btemp+9)^0,f,c
 22346  016BA2  0EFC               	movlw	-4
 22347  016BA4  50E3               	movf	plusw1,w,c
 22348  016BA6  160B               	andwf	(btemp+10)^0,f,c
 22349  016BA8  0EFD               	movlw	-3
 22350  016BAA  50E3               	movf	plusw1,w,c
 22351  016BAC  160C               	andwf	(btemp+11)^0,f,c
 22352  016BAE  5009               	movf	(btemp+8)^0,w,c
 22353  016BB0  100A               	iorwf	(btemp+9)^0,w,c
 22354  016BB2  100B               	iorwf	(btemp+10)^0,w,c
 22355  016BB4  100C               	iorwf	(btemp+11)^0,w,c
 22356  016BB6  B4D8               	btfsc	status,2,c
 22357  016BB8  D7A7               	goto	u6680
 22358                           
 22359                           ;stkvar	_u @ sp[(-10)+0]
 22360  016BBA  0EF6               	movlw	-10
 22361  016BBC  006F FF8C  F009    	movff	plusw1,btemp+8
 22362  016BC2  0EF7               	movlw	-9
 22363  016BC4  006F FF8C  F00A    	movff	plusw1,btemp+9
 22364  016BCA  0EF8               	movlw	-8
 22365  016BCC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22366  016BD2  0EF9               	movlw	-7
 22367  016BD4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22368  016BDA  0E20               	movlw	32
 22369  016BDC  D005               	goto	u6720
 22370  016BDE                     u6725:
 22371  016BDE  90D8               	bcf	status,0,c
 22372  016BE0  320C               	rrcf	(btemp+11)^0,f,c
 22373  016BE2  320B               	rrcf	(btemp+10)^0,f,c
 22374  016BE4  320A               	rrcf	(btemp+9)^0,f,c
 22375  016BE6  3209               	rrcf	(btemp+8)^0,f,c
 22376  016BE8                     u6720:
 22377  016BE8  2EE8               	decfsz	wreg,f,c
 22378  016BEA  D7F9               	goto	u6725
 22379  016BEC  5009               	movf	(btemp+8)^0,w,c
 22380  016BEE  B4D8               	btfsc	status,2,c
 22381  016BF0  D028               	goto	l8838
 22382                           
 22383                           ;stkvar	_m @ sp[(-10)+4]
 22384                           ;stkvar	_u @ sp[(-10)+0]
 22385  016BF2  0EF6               	movlw	-10
 22386  016BF4  50E3               	movf	plusw1,w,c
 22387  016BF6  6E01               	movwf	btemp^0,c
 22388  016BF8  0EFA               	movlw	-6
 22389  016BFA  50E3               	movf	plusw1,w,c
 22390  016BFC  2601               	addwf	btemp^0,f,c
 22391  016BFE  0EF6               	movlw	-10
 22392  016C00  0060  F007  FFE3   	movff	btemp,plusw1
 22393  016C06  0EF7               	movlw	-9
 22394  016C08  50E3               	movf	plusw1,w,c
 22395  016C0A  6E01               	movwf	btemp^0,c
 22396  016C0C  0EFB               	movlw	-5
 22397  016C0E  50E3               	movf	plusw1,w,c
 22398  016C10  2201               	addwfc	btemp^0,f,c
 22399  016C12  0EF7               	movlw	-9
 22400  016C14  0060  F007  FFE3   	movff	btemp,plusw1
 22401  016C1A  0EF8               	movlw	-8
 22402  016C1C  50E3               	movf	plusw1,w,c
 22403  016C1E  6E01               	movwf	btemp^0,c
 22404  016C20  0EFC               	movlw	-4
 22405  016C22  50E3               	movf	plusw1,w,c
 22406  016C24  2201               	addwfc	btemp^0,f,c
 22407  016C26  0EF8               	movlw	-8
 22408  016C28  0060  F007  FFE3   	movff	btemp,plusw1
 22409  016C2E  0EF9               	movlw	-7
 22410  016C30  50E3               	movf	plusw1,w,c
 22411  016C32  6E01               	movwf	btemp^0,c
 22412  016C34  0EFD               	movlw	-3
 22413  016C36  50E3               	movf	plusw1,w,c
 22414  016C38  2201               	addwfc	btemp^0,f,c
 22415  016C3A  0EF9               	movlw	-7
 22416  016C3C  0060  F007  FFE3   	movff	btemp,plusw1
 22417  016C42                     l8838:
 22418                           
 22419                           ;stkvar	_m @ sp[(-10)+4]
 22420  016C42  0EFA               	movlw	-6
 22421  016C44  006F FF8C  F009    	movff	plusw1,btemp+8
 22422  016C4A  0EFB               	movlw	-5
 22423  016C4C  006F FF8C  F00A    	movff	plusw1,btemp+9
 22424  016C52  0EFC               	movlw	-4
 22425  016C54  006F FF8C  F00B    	movff	plusw1,btemp+10
 22426  016C5A  0EFD               	movlw	-3
 22427  016C5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22428  016C62  1C09               	comf	(btemp+8)^0,w,c
 22429  016C64  6E05               	movwf	(btemp+4)^0,c
 22430  016C66  1C0A               	comf	(btemp+9)^0,w,c
 22431  016C68  6E06               	movwf	(btemp+5)^0,c
 22432  016C6A  1C0B               	comf	(btemp+10)^0,w,c
 22433  016C6C  6E07               	movwf	(btemp+6)^0,c
 22434  016C6E  1C0C               	comf	(btemp+11)^0,w,c
 22435  016C70  6E08               	movwf	(btemp+7)^0,c
 22436                           
 22437                           ;stkvar	_u @ sp[(-10)+0]
 22438  016C72  50E1               	movf	fsr1l,w,c
 22439  016C74  0FF6               	addlw	-10
 22440  016C76  6ED9               	movwf	fsr2l,c
 22441  016C78  50E2               	movf	fsr1h,w,c
 22442  016C7A  6EDA               	movwf	fsr2h,c
 22443  016C7C  0EFF               	movlw	255
 22444  016C7E  22DA               	addwfc	fsr2h,f,c
 22445  016C80  5005               	movf	(btemp+4)^0,w,c
 22446  016C82  16DE               	andwf	postinc2,f,c
 22447  016C84  5006               	movf	(btemp+5)^0,w,c
 22448  016C86  16DE               	andwf	postinc2,f,c
 22449  016C88  5007               	movf	(btemp+6)^0,w,c
 22450  016C8A  16DE               	andwf	postinc2,f,c
 22451  016C8C  5008               	movf	(btemp+7)^0,w,c
 22452  016C8E  16DE               	andwf	postinc2,f,c
 22453  016C90  D05B               	goto	l8848
 22454  016C92                     l8840:
 22455                           
 22456                           ;stkvar	_u @ sp[(-10)+0]
 22457  016C92  0EF6               	movlw	-10
 22458  016C94  006F FF8C  F009    	movff	plusw1,btemp+8
 22459  016C9A  0EF7               	movlw	-9
 22460  016C9C  006F FF8C  F00A    	movff	plusw1,btemp+9
 22461  016CA2  0EF8               	movlw	-8
 22462  016CA4  006F FF8C  F00B    	movff	plusw1,btemp+10
 22463  016CAA  0EF9               	movlw	-7
 22464  016CAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22465  016CB2  0E20               	movlw	32
 22466  016CB4  D005               	goto	u6740
 22467  016CB6                     u6745:
 22468  016CB6  90D8               	bcf	status,0,c
 22469  016CB8  320C               	rrcf	(btemp+11)^0,f,c
 22470  016CBA  320B               	rrcf	(btemp+10)^0,f,c
 22471  016CBC  320A               	rrcf	(btemp+9)^0,f,c
 22472  016CBE  3209               	rrcf	(btemp+8)^0,f,c
 22473  016CC0                     u6740:
 22474  016CC0  2EE8               	decfsz	wreg,f,c
 22475  016CC2  D7F9               	goto	u6745
 22476  016CC4  6609               	tstfsz	(btemp+8)^0,c
 22477  016CC6  D009               	goto	l8844
 22478                           
 22479                           ;stkvar	_u @ sp[(-10)+0]
 22480  016CC8  0EF6               	movlw	-10
 22481  016CCA  6AE3               	clrf	plusw1,c
 22482  016CCC  0EF7               	movlw	-9
 22483  016CCE  6AE3               	clrf	plusw1,c
 22484  016CD0  0EF8               	movlw	-8
 22485  016CD2  6AE3               	clrf	plusw1,c
 22486  016CD4  0EF9               	movlw	-7
 22487  016CD6  6AE3               	clrf	plusw1,c
 22488  016CD8  D037               	goto	l8848
 22489  016CDA                     l8844:
 22490                           
 22491                           ;stkvar	_u @ sp[(-10)+0]
 22492  016CDA  0EF6               	movlw	-10
 22493  016CDC  006F FF8C  F009    	movff	plusw1,btemp+8
 22494  016CE2  0EF7               	movlw	-9
 22495  016CE4  006F FF8C  F00A    	movff	plusw1,btemp+9
 22496  016CEA  0EF8               	movlw	-8
 22497  016CEC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22498  016CF2  0EF9               	movlw	-7
 22499  016CF4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22500  016CFA  90D8               	bcf	status,0,c
 22501  016CFC  3409               	rlcf	(btemp+8)^0,w,c
 22502  016CFE  6E05               	movwf	(btemp+4)^0,c
 22503  016D00  340A               	rlcf	(btemp+9)^0,w,c
 22504  016D02  6E06               	movwf	(btemp+5)^0,c
 22505  016D04  340B               	rlcf	(btemp+10)^0,w,c
 22506  016D06  6E07               	movwf	(btemp+6)^0,c
 22507  016D08  340C               	rlcf	(btemp+11)^0,w,c
 22508  016D0A  6E08               	movwf	(btemp+7)^0,c
 22509  016D0C  5005               	movf	(btemp+4)^0,w,c
 22510  016D0E  1006               	iorwf	(btemp+5)^0,w,c
 22511  016D10  1007               	iorwf	(btemp+6)^0,w,c
 22512  016D12  1008               	iorwf	(btemp+7)^0,w,c
 22513  016D14  B4D8               	btfsc	status,2,c
 22514  016D16  D018               	goto	l8848
 22515  016D18  0E00               	movlw	0
 22516  016D1A  6E09               	movwf	(btemp+8)^0,c
 22517  016D1C  0E00               	movlw	0
 22518  016D1E  6E0A               	movwf	(btemp+9)^0,c
 22519  016D20  0E80               	movlw	128
 22520  016D22  6E0B               	movwf	(btemp+10)^0,c
 22521  016D24  0EBF               	movlw	191
 22522  016D26  6E0C               	movwf	(btemp+11)^0,c
 22523                           
 22524                           ;stkvar	_u @ sp[(-10)+0]
 22525  016D28  0EF6               	movlw	-10
 22526  016D2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 22527  016D30  0EF7               	movlw	-9
 22528  016D32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22529  016D38  0EF8               	movlw	-8
 22530  016D3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22531  016D40  0EF9               	movlw	-7
 22532  016D42  0060  F033  FFE3   	movff	btemp+11,plusw1
 22533  016D48                     l8848:
 22534                           
 22535                           ;stkvar	_u @ sp[(-10)+0]
 22536  016D48  0EF6               	movlw	-10
 22537  016D4A  006F FF8C  F001    	movff	plusw1,btemp
 22538  016D50  0EF7               	movlw	-9
 22539  016D52  006F FF8C  F002    	movff	plusw1,btemp+1
 22540  016D58  0EF8               	movlw	-8
 22541  016D5A  006F FF8C  F003    	movff	plusw1,btemp+2
 22542  016D60  0EF9               	movlw	-7
 22543  016D62                     L25:
 22544  016D62  006F FF8C  F004    	movff	plusw1,btemp+3
 22545                           
 22546                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22547  016D68  0EF2               	movlw	242
 22548  016D6A  26E1               	addwf	fsr1l,f,c
 22549  016D6C  0EFF               	movlw	255
 22550  016D6E  22E2               	addwfc	fsr1h,f,c
 22551  016D70  0012               	return		;funcret
 22552  016D72                     __end_of_floorf:
 22553                           	opt callstack 0
 22554                           
 22555 ;; *************** function ___fpclassifyf *****************
 22556 ;; Defined at:
 22557 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 22558 ;; Parameters:    Size  Location     Type
 22559 ;;  x               4  [STACK] float 
 22560 ;; Auto vars:     Size  Location     Type
 22561 ;;  u               4  [STACK] struct .
 22562 ;;  e               2  [STACK] int 
 22563 ;; Return value:  Size  Location     Type
 22564 ;;                  2  [STACK] int 
 22565 ;; Registers used:
 22566 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 22567 ;; Tracked objects:
 22568 ;;		On entry : 0/0
 22569 ;;		On exit  : 0/0
 22570 ;;		Unchanged: 0/0
 22571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22576 ;;Total ram usage:        0 bytes
 22577 ;; Hardware stack levels used:    1
 22578 ;; Hardware stack levels required when called:   15
 22579 ;; This function calls:
 22580 ;;		Nothing
 22581 ;; This function is called by:
 22582 ;;		_efgtoa
 22583 ;; This function uses a reentrant model
 22584 ;;
 22585                           
 22586                           	psect	text81
 22587  01914E                     __ptext81:
 22588                           	opt callstack 0
 22589  01914E                     ___fpclassifyf:
 22590                           	opt callstack 0
 22591                           
 22592                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22593  01914E  0E06               	movlw	6
 22594  019150  26E1               	addwf	fsr1l,f,c
 22595  019152  0E00               	movlw	0
 22596  019154  22E2               	addwfc	fsr1h,f,c
 22597                           
 22598                           ;incstack = 0
 22599 ;; hardware stack exceeded
 22600  019156  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 22601  01915C  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 22602  019162  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 22603  019168  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 22604                           
 22605                           ;stkvar	_u @ sp[(-6)+0]
 22606  01916E  0EFA               	movlw	-6
 22607  019170  0060  F027  FFE3   	movff	btemp+8,plusw1
 22608  019176  0EFB               	movlw	-5
 22609  019178  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22610  01917E  0EFC               	movlw	-4
 22611  019180  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22612  019186  0EFD               	movlw	-3
 22613  019188  0060  F033  FFE3   	movff	btemp+11,plusw1
 22614                           
 22615                           ;stkvar	_x @ sp[(-6)+-4]
 22616  01918E  0EF6               	movlw	-10
 22617  019190  006F FF8C  F009    	movff	plusw1,btemp+8
 22618  019196  0EF7               	movlw	-9
 22619  019198  006F FF8C  F00A    	movff	plusw1,btemp+9
 22620  01919E  0EF8               	movlw	-8
 22621  0191A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 22622  0191A6  0EF9               	movlw	-7
 22623  0191A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 22624                           
 22625                           ;stkvar	_u @ sp[(-6)+0]
 22626  0191AE  0EFA               	movlw	-6
 22627  0191B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 22628  0191B6  0EFB               	movlw	-5
 22629  0191B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22630  0191BE  0EFC               	movlw	-4
 22631  0191C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22632  0191C6  0EFD               	movlw	-3
 22633  0191C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 22634                           
 22635                           ;stkvar	_u @ sp[(-6)+0]
 22636  0191CE  0EFA               	movlw	-6
 22637  0191D0  006F FF8C  F009    	movff	plusw1,btemp+8
 22638  0191D6  0EFB               	movlw	-5
 22639  0191D8  006F FF8C  F00A    	movff	plusw1,btemp+9
 22640  0191DE  0EFC               	movlw	-4
 22641  0191E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 22642  0191E6  0EFD               	movlw	-3
 22643  0191E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 22644  0191EE  0E18               	movlw	24
 22645  0191F0  D005               	goto	u6550
 22646  0191F2                     u6555:
 22647  0191F2  90D8               	bcf	status,0,c
 22648  0191F4  320C               	rrcf	(btemp+11)^0,f,c
 22649  0191F6  320B               	rrcf	(btemp+10)^0,f,c
 22650  0191F8  320A               	rrcf	(btemp+9)^0,f,c
 22651  0191FA  3209               	rrcf	(btemp+8)^0,f,c
 22652  0191FC                     u6550:
 22653  0191FC  2EE8               	decfsz	wreg,f,c
 22654  0191FE  D7F9               	goto	u6555
 22655  019200  0060  F024  F007   	movff	btemp+8,btemp+6
 22656  019206  0060  F028  F008   	movff	btemp+9,btemp+7
 22657  01920C  0EFF               	movlw	255
 22658  01920E  1607               	andwf	(btemp+6)^0,f,c
 22659  019210  0E00               	movlw	0
 22660  019212  1608               	andwf	(btemp+7)^0,f,c
 22661                           
 22662                           ;stkvar	_e @ sp[(-6)+4]
 22663  019214  0EFE               	movlw	-2
 22664  019216  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22665  01921C  0EFF               	movlw	-1
 22666  01921E  0060  F023  FFE3   	movff	btemp+7,plusw1
 22667                           
 22668                           ;stkvar	_e @ sp[(-6)+4]
 22669  019224  0EFE               	movlw	-2
 22670  019226  006F FF8C  F001    	movff	plusw1,btemp
 22671  01922C  0EFF               	movlw	-1
 22672  01922E  50E3               	movf	plusw1,w,c
 22673  019230  1001               	iorwf	btemp^0,w,c
 22674  019232  A4D8               	btfss	status,2,c
 22675  019234  D023               	goto	l8786
 22676                           
 22677                           ;stkvar	_u @ sp[(-6)+0]
 22678  019236  0EFA               	movlw	-6
 22679  019238  006F FF8C  F009    	movff	plusw1,btemp+8
 22680  01923E  0EFB               	movlw	-5
 22681  019240  006F FF8C  F00A    	movff	plusw1,btemp+9
 22682  019246  0EFC               	movlw	-4
 22683  019248  006F FF8C  F00B    	movff	plusw1,btemp+10
 22684  01924E  0EFD               	movlw	-3
 22685  019250  006F FF8C  F00C    	movff	plusw1,btemp+11
 22686  019256  90D8               	bcf	status,0,c
 22687  019258  3409               	rlcf	(btemp+8)^0,w,c
 22688  01925A  6E05               	movwf	(btemp+4)^0,c
 22689  01925C  340A               	rlcf	(btemp+9)^0,w,c
 22690  01925E  6E06               	movwf	(btemp+5)^0,c
 22691  019260  340B               	rlcf	(btemp+10)^0,w,c
 22692  019262  6E07               	movwf	(btemp+6)^0,c
 22693  019264  340C               	rlcf	(btemp+11)^0,w,c
 22694  019266  6E08               	movwf	(btemp+7)^0,c
 22695  019268  5005               	movf	(btemp+4)^0,w,c
 22696  01926A  1006               	iorwf	(btemp+5)^0,w,c
 22697  01926C  1007               	iorwf	(btemp+6)^0,w,c
 22698  01926E  1008               	iorwf	(btemp+7)^0,w,c
 22699  019270  A4D8               	btfss	status,2,c
 22700  019272  D002               	goto	l8782
 22701  019274  0E02               	movlw	2
 22702  019276  D02E               	goto	L26
 22703  019278                     l8782:
 22704  019278  0E03               	movlw	3
 22705  01927A  D02C               	goto	L26
 22706  01927C                     l8786:
 22707                           
 22708                           ;stkvar	_e @ sp[(-6)+4]
 22709  01927C  0EFE               	movlw	-2
 22710  01927E  28E3               	incf	plusw1,w,c
 22711  019280  E128               	bnz	l8792
 22712  019282  0EFF               	movlw	-1
 22713  019284  50E3               	movf	plusw1,w,c
 22714  019286  A4D8               	btfss	status,2,c
 22715  019288  D024               	goto	l8792
 22716                           
 22717                           ;stkvar	_u @ sp[(-6)+0]
 22718  01928A  0EFA               	movlw	-6
 22719  01928C  006F FF8C  F009    	movff	plusw1,btemp+8
 22720  019292  0EFB               	movlw	-5
 22721  019294  006F FF8C  F00A    	movff	plusw1,btemp+9
 22722  01929A  0EFC               	movlw	-4
 22723  01929C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22724  0192A2  0EFD               	movlw	-3
 22725  0192A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22726  0192AA  0E09               	movlw	9
 22727  0192AC                     u6595:
 22728  0192AC  90D8               	bcf	status,0,c
 22729  0192AE  3609               	rlcf	(btemp+8)^0,f,c
 22730  0192B0  360A               	rlcf	(btemp+9)^0,f,c
 22731  0192B2  360B               	rlcf	(btemp+10)^0,f,c
 22732  0192B4  360C               	rlcf	(btemp+11)^0,f,c
 22733  0192B6  2EE8               	decfsz	wreg,f,c
 22734  0192B8  D7F9               	goto	u6595
 22735  0192BA  5009               	movf	(btemp+8)^0,w,c
 22736  0192BC  100A               	iorwf	(btemp+9)^0,w,c
 22737  0192BE  100B               	iorwf	(btemp+10)^0,w,c
 22738  0192C0  100C               	iorwf	(btemp+11)^0,w,c
 22739  0192C2  A4D8               	btfss	status,2,c
 22740  0192C4  D002               	goto	u6600
 22741  0192C6  0E01               	movlw	1
 22742  0192C8  D001               	goto	u6610
 22743  0192CA                     u6600:
 22744  0192CA  0E00               	movlw	0
 22745  0192CC                     u6610:
 22746  0192CC  6E01               	movwf	btemp^0,c
 22747  0192CE  6A02               	clrf	(btemp+1)^0,c
 22748  0192D0  D004               	goto	l3352
 22749  0192D2                     l8792:
 22750  0192D2  0E04               	movlw	4
 22751  0192D4                     L26:
 22752  0192D4  6E01               	movwf	btemp^0,c
 22753  0192D6  0E00               	movlw	0
 22754  0192D8  6E02               	movwf	(btemp+1)^0,c
 22755  0192DA                     l3352:
 22756                           
 22757                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 22758  0192DA  0EF6               	movlw	246
 22759  0192DC  26E1               	addwf	fsr1l,f,c
 22760  0192DE  0EFF               	movlw	255
 22761  0192E0  22E2               	addwfc	fsr1h,f,c
 22762  0192E2  0012               	return		;funcret
 22763  0192E4                     __end_of___fpclassifyf:
 22764                           	opt callstack 0
 22765                           
 22766 ;; *************** function ___fltol *****************
 22767 ;; Defined at:
 22768 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 22769 ;; Parameters:    Size  Location     Type
 22770 ;;  f1              4  [STACK] int 
 22771 ;; Auto vars:     Size  Location     Type
 22772 ;;  exp1            1  [STACK] unsigned char 
 22773 ;;  sign1           1  [STACK] unsigned char 
 22774 ;; Return value:  Size  Location     Type
 22775 ;;                  4  [STACK] long 
 22776 ;; Registers used:
 22777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 22778 ;; Tracked objects:
 22779 ;;		On entry : 0/0
 22780 ;;		On exit  : 0/0
 22781 ;;		Unchanged: 0/0
 22782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22787 ;;Total ram usage:        0 bytes
 22788 ;; Hardware stack levels used:    1
 22789 ;; Hardware stack levels required when called:   15
 22790 ;; This function calls:
 22791 ;;		Nothing
 22792 ;; This function is called by:
 22793 ;;		_main
 22794 ;;		_convert_dac_raw
 22795 ;;		_calc_bsoc
 22796 ;;		_init_bsoc
 22797 ;;		_efgtoa
 22798 ;; This function uses a reentrant model
 22799 ;;
 22800                           
 22801                           	psect	text82
 22802  01975C                     __ptext82:
 22803                           	opt callstack 0
 22804  01975C                     ___fltol:
 22805                           	opt callstack 0
 22806                           
 22807                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22808  01975C  52E6               	movf	postinc1,f,c
 22809  01975E  52E6               	movf	postinc1,f,c
 22810                           
 22811                           ;stkvar	_f1 @ sp[(-2)+-4]
 22812                           
 22813                           ;incstack = 0
 22814 ;; hardware stack exceeded
 22815  019760  0EFA               	movlw	-6
 22816  019762  006F FF8C  F009    	movff	plusw1,btemp+8
 22817  019768  0EFB               	movlw	-5
 22818  01976A  006F FF8C  F00A    	movff	plusw1,btemp+9
 22819  019770  0EFC               	movlw	-4
 22820  019772  006F FF8C  F00B    	movff	plusw1,btemp+10
 22821  019778  0EFD               	movlw	-3
 22822  01977A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22823  019780  0E18               	movlw	24
 22824  019782  D005               	goto	u7760
 22825  019784                     u7765:
 22826  019784  90D8               	bcf	status,0,c
 22827  019786  320C               	rrcf	(btemp+11)^0,f,c
 22828  019788  320B               	rrcf	(btemp+10)^0,f,c
 22829  01978A  320A               	rrcf	(btemp+9)^0,f,c
 22830  01978C  3209               	rrcf	(btemp+8)^0,f,c
 22831  01978E                     u7760:
 22832  01978E  2EE8               	decfsz	wreg,f,c
 22833  019790  D7F9               	goto	u7765
 22834                           
 22835                           ;stkvar	_exp1 @ sp[(-2)+0]
 22836  019792  0EFE               	movlw	-2
 22837  019794  0060  F027  FFE3   	movff	btemp+8,plusw1
 22838  01979A  0EFE               	movlw	-2
 22839  01979C  50E3               	movf	plusw1,w,c
 22840  01979E  A4D8               	btfss	status,2,c
 22841  0197A0  D006               	goto	l9412
 22842  0197A2                     u7770:
 22843  0197A2  0E00               	movlw	0
 22844  0197A4  6E01               	movwf	btemp^0,c
 22845  0197A6  6A02               	clrf	(btemp+1)^0,c
 22846  0197A8  6A03               	clrf	(btemp+2)^0,c
 22847  0197AA  6A04               	clrf	(btemp+3)^0,c
 22848  0197AC  D08B               	goto	l2968
 22849  0197AE                     l9412:
 22850                           
 22851                           ;stkvar	_f1 @ sp[(-2)+-4]
 22852  0197AE  0EFA               	movlw	-6
 22853  0197B0  006F FF8C  F009    	movff	plusw1,btemp+8
 22854  0197B6  0EFB               	movlw	-5
 22855  0197B8  006F FF8C  F00A    	movff	plusw1,btemp+9
 22856  0197BE  0EFC               	movlw	-4
 22857  0197C0  006F FF8C  F00B    	movff	plusw1,btemp+10
 22858  0197C6  0EFD               	movlw	-3
 22859  0197C8  006F FF8C  F00C    	movff	plusw1,btemp+11
 22860  0197CE  0E20               	movlw	32
 22861  0197D0  D005               	goto	u7780
 22862  0197D2                     u7785:
 22863  0197D2  90D8               	bcf	status,0,c
 22864  0197D4  320C               	rrcf	(btemp+11)^0,f,c
 22865  0197D6  320B               	rrcf	(btemp+10)^0,f,c
 22866  0197D8  320A               	rrcf	(btemp+9)^0,f,c
 22867  0197DA  3209               	rrcf	(btemp+8)^0,f,c
 22868  0197DC                     u7780:
 22869  0197DC  2EE8               	decfsz	wreg,f,c
 22870  0197DE  D7F9               	goto	u7785
 22871                           
 22872                           ;stkvar	_sign1 @ sp[(-2)+1]
 22873  0197E0  0EFF               	movlw	-1
 22874  0197E2  0060  F027  FFE3   	movff	btemp+8,plusw1
 22875                           
 22876                           ;stkvar	_f1 @ sp[(-2)+-4]
 22877  0197E8  0EFC               	movlw	-4
 22878  0197EA  8EE3               	bsf	plusw1,7,c
 22879                           
 22880                           ;stkvar	_f1 @ sp[(-2)+-4]
 22881  0197EC  50E1               	movf	fsr1l,w,c
 22882  0197EE  0FFA               	addlw	-6
 22883  0197F0  6ED9               	movwf	fsr2l,c
 22884  0197F2  50E2               	movf	fsr1h,w,c
 22885  0197F4  6EDA               	movwf	fsr2h,c
 22886  0197F6  0EFF               	movlw	255
 22887  0197F8  22DA               	addwfc	fsr2h,f,c
 22888  0197FA  0EFF               	movlw	255
 22889  0197FC  16DE               	andwf	postinc2,f,c
 22890  0197FE  0EFF               	movlw	255
 22891  019800  16DE               	andwf	postinc2,f,c
 22892  019802  0EFF               	movlw	255
 22893  019804  16DE               	andwf	postinc2,f,c
 22894  019806  0E00               	movlw	0
 22895  019808  16DE               	andwf	postinc2,f,c
 22896                           
 22897                           ;stkvar	_exp1 @ sp[(-2)+0]
 22898  01980A  0EFE               	movlw	-2
 22899  01980C  006F FF8C  F001    	movff	plusw1,btemp
 22900  019812  0E96               	movlw	150
 22901  019814  5E01               	subwf	btemp^0,f,c
 22902  019816  0EFE               	movlw	-2
 22903  019818  0060  F007  FFE3   	movff	btemp,plusw1
 22904                           
 22905                           ;stkvar	_exp1 @ sp[(-2)+0]
 22906  01981E  0EFE               	movlw	-2
 22907  019820  AEE3               	btfss	plusw1,7,c
 22908  019822  D014               	goto	l9430
 22909                           
 22910                           ;stkvar	_exp1 @ sp[(-2)+0]
 22911  019824  0EFE               	movlw	-2
 22912  019826  50E3               	movf	plusw1,w,c
 22913  019828  0A80               	xorlw	128
 22914  01982A  0F97               	addlw	151
 22915  01982C  A0D8               	btfss	status,0,c
 22916  01982E  D7B9               	goto	u7770
 22917  019830                     l9428:
 22918                           
 22919                           ;stkvar	_f1 @ sp[(-2)+-4]
 22920  019830  90D8               	bcf	status,0,c
 22921  019832  0EFD               	movlw	-3
 22922  019834  32E3               	rrcf	plusw1,f,c
 22923  019836  0EFC               	movlw	-4
 22924  019838  32E3               	rrcf	plusw1,f,c
 22925  01983A  0EFB               	movlw	-5
 22926  01983C  32E3               	rrcf	plusw1,f,c
 22927  01983E  0EFA               	movlw	-6
 22928  019840  32E3               	rrcf	plusw1,f,c
 22929                           
 22930                           ;stkvar	_exp1 @ sp[(-2)+0]
 22931  019842  0EFE               	movlw	-2
 22932  019844  2AE3               	incf	plusw1,f,c
 22933  019846  B4D8               	btfsc	status,2,c
 22934  019848  D018               	goto	u7830
 22935  01984A  D7F2               	goto	l9428
 22936  01984C                     l9430:
 22937                           
 22938                           ;stkvar	_exp1 @ sp[(-2)+0]
 22939  01984C  0EFE               	movlw	-2
 22940  01984E  006F FF8C  F001    	movff	plusw1,btemp
 22941  019854  0E1F               	movlw	31
 22942  019856  6401               	cpfsgt	btemp^0,c
 22943  019858  D00C               	goto	l9438
 22944  01985A  D7A3               	goto	u7770
 22945  01985C                     l9436:
 22946                           
 22947                           ;stkvar	_f1 @ sp[(-2)+-4]
 22948  01985C  90D8               	bcf	status,0,c
 22949  01985E  0EFA               	movlw	-6
 22950  019860  36E3               	rlcf	plusw1,f,c
 22951  019862  0EFB               	movlw	-5
 22952  019864  36E3               	rlcf	plusw1,f,c
 22953  019866  0EFC               	movlw	-4
 22954  019868  36E3               	rlcf	plusw1,f,c
 22955  01986A  0EFD               	movlw	-3
 22956  01986C  36E3               	rlcf	plusw1,f,c
 22957                           
 22958                           ;stkvar	_exp1 @ sp[(-2)+0]
 22959  01986E  0EFE               	movlw	-2
 22960  019870  06E3               	decf	plusw1,f,c
 22961  019872                     l9438:
 22962                           
 22963                           ;stkvar	_exp1 @ sp[(-2)+0]
 22964  019872  0EFE               	movlw	-2
 22965  019874  50E3               	movf	plusw1,w,c
 22966  019876  A4D8               	btfss	status,2,c
 22967  019878  D7F1               	goto	l9436
 22968  01987A                     u7830:
 22969                           
 22970                           ;stkvar	_sign1 @ sp[(-2)+1]
 22971  01987A  0EFF               	movlw	-1
 22972  01987C  50E3               	movf	plusw1,w,c
 22973  01987E  B4D8               	btfsc	status,2,c
 22974  019880  D011               	goto	u7850
 22975                           
 22976                           ;stkvar	_f1 @ sp[(-2)+-4]
 22977                           ;stkvar	_f1 @ sp[(-2)+-4]
 22978  019882  0EFA               	movlw	-6
 22979  019884  6CE3               	negf	plusw1,c
 22980  019886  0EFB               	movlw	-5
 22981  019888  1EE3               	comf	plusw1,f,c
 22982  01988A  0EFC               	movlw	-4
 22983  01988C  1EE3               	comf	plusw1,f,c
 22984  01988E  0EFD               	movlw	-3
 22985  019890  1EE3               	comf	plusw1,f,c
 22986  019892  E308               	bnc	u7850
 22987  019894  0EFB               	movlw	-5
 22988  019896  2AE3               	incf	plusw1,f,c
 22989  019898  E305               	bnc	u7850
 22990  01989A  0EFC               	movlw	-4
 22991  01989C  2AE3               	incf	plusw1,f,c
 22992  01989E  E302               	bnc	u7850
 22993  0198A0  0EFD               	movlw	-3
 22994  0198A2  2AE3               	incf	plusw1,f,c
 22995  0198A4                     u7850:
 22996                           
 22997                           ;stkvar	_f1 @ sp[(-2)+-4]
 22998  0198A4  0EFA               	movlw	-6
 22999  0198A6  006F FF8C  F001    	movff	plusw1,btemp
 23000  0198AC  0EFB               	movlw	-5
 23001  0198AE  006F FF8C  F002    	movff	plusw1,btemp+1
 23002  0198B4  0EFC               	movlw	-4
 23003  0198B6  006F FF8C  F003    	movff	plusw1,btemp+2
 23004  0198BC  0EFD               	movlw	-3
 23005  0198BE  006F FF8C  F004    	movff	plusw1,btemp+3
 23006  0198C4                     l2968:
 23007                           
 23008                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23009  0198C4  0EFA               	movlw	250
 23010  0198C6  26E1               	addwf	fsr1l,f,c
 23011  0198C8  0EFF               	movlw	255
 23012  0198CA  22E2               	addwfc	fsr1h,f,c
 23013  0198CC  0012               	return		;funcret
 23014  0198CE                     __end_of___fltol:
 23015                           	opt callstack 0
 23016                           
 23017 ;; *************** function ___flneg *****************
 23018 ;; Defined at:
 23019 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 23020 ;; Parameters:    Size  Location     Type
 23021 ;;  f1              4  [STACK] long 
 23022 ;; Auto vars:     Size  Location     Type
 23023 ;;		None
 23024 ;; Return value:  Size  Location     Type
 23025 ;;                  4  [STACK] long 
 23026 ;; Registers used:
 23027 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 23028 ;; Tracked objects:
 23029 ;;		On entry : 0/0
 23030 ;;		On exit  : 0/0
 23031 ;;		Unchanged: 0/0
 23032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23037 ;;Total ram usage:        0 bytes
 23038 ;; Hardware stack levels used:    1
 23039 ;; Hardware stack levels required when called:   15
 23040 ;; This function calls:
 23041 ;;		Nothing
 23042 ;; This function is called by:
 23043 ;;		_calc_bsoc
 23044 ;;		_efgtoa
 23045 ;; This function uses a reentrant model
 23046 ;;
 23047                           
 23048                           	psect	text83
 23049  01C576                     __ptext83:
 23050                           	opt callstack 0
 23051  01C576                     ___flneg:
 23052                           	opt callstack 0
 23053                           
 23054                           ;stkvar	_f1 @ sp[(0)+-4]
 23055                           
 23056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23057                           ;incstack = 0
 23058 ;; hardware stack exceeded
 23059  01C576  0EFC               	movlw	-4
 23060  01C578  50E3               	movf	plusw1,w,c
 23061  01C57A  E10A               	bnz	u7750
 23062  01C57C  0EFD               	movlw	-3
 23063  01C57E  50E3               	movf	plusw1,w,c
 23064  01C580  E107               	bnz	u7750
 23065  01C582  0EFE               	movlw	-2
 23066  01C584  50E3               	movf	plusw1,w,c
 23067  01C586  E104               	bnz	u7750
 23068  01C588  0EFF               	movlw	-1
 23069  01C58A  50E3               	movf	plusw1,w,c
 23070  01C58C  B4D8               	btfsc	status,2,c
 23071  01C58E  D002               	goto	l9402
 23072  01C590                     u7750:
 23073                           
 23074                           ;stkvar	_f1 @ sp[(0)+-4]
 23075  01C590  0EFF               	movlw	-1
 23076  01C592  7EE3               	btg	plusw1,7,c
 23077  01C594                     l9402:
 23078                           
 23079                           ;stkvar	_f1 @ sp[(0)+-4]
 23080  01C594  0EFC               	movlw	-4
 23081  01C596  006F FF8C  F001    	movff	plusw1,btemp
 23082  01C59C  0EFD               	movlw	-3
 23083  01C59E  006F FF8C  F002    	movff	plusw1,btemp+1
 23084  01C5A4  0EFE               	movlw	-2
 23085  01C5A6  006F FF8C  F003    	movff	plusw1,btemp+2
 23086  01C5AC  0EFF               	movlw	-1
 23087  01C5AE  006F FF8C  F004    	movff	plusw1,btemp+3
 23088                           
 23089                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23090  01C5B4  52E5               	movf	postdec1,f,c
 23091  01C5B6  52E5               	movf	postdec1,f,c
 23092  01C5B8  52E5               	movf	postdec1,f,c
 23093  01C5BA  52E5               	movf	postdec1,f,c
 23094  01C5BC  0012               	return		;funcret
 23095  01C5BE                     __end_of___flneg:
 23096                           	opt callstack 0
 23097                           
 23098 ;; *************** function ___fleq *****************
 23099 ;; Defined at:
 23100 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 23101 ;; Parameters:    Size  Location     Type
 23102 ;;  ff1             4  [STACK] long 
 23103 ;;  ff2             4  [STACK] long 
 23104 ;; Auto vars:     Size  Location     Type
 23105 ;;		None
 23106 ;; Return value:  Size  Location     Type
 23107 ;;		None               void
 23108 ;; Registers used:
 23109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 23110 ;; Tracked objects:
 23111 ;;		On entry : 0/0
 23112 ;;		On exit  : 0/0
 23113 ;;		Unchanged: 0/0
 23114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23119 ;;Total ram usage:        0 bytes
 23120 ;; Hardware stack levels used:    1
 23121 ;; Hardware stack levels required when called:   15
 23122 ;; This function calls:
 23123 ;;		Nothing
 23124 ;; This function is called by:
 23125 ;;		_efgtoa
 23126 ;; This function uses a reentrant model
 23127 ;;
 23128                           
 23129                           	psect	text84
 23130  01B09A                     __ptext84:
 23131                           	opt callstack 0
 23132  01B09A                     ___fleq:
 23133                           	opt callstack 0
 23134                           
 23135                           ;stkvar	_ff1 @ sp[(0)+-4]
 23136                           
 23137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23138                           ;incstack = 0
 23139 ;; hardware stack exceeded
 23140  01B09A  50E1               	movf	fsr1l,w,c
 23141  01B09C  0FFC               	addlw	-4
 23142  01B09E  6ED9               	movwf	fsr2l,c
 23143  01B0A0  50E2               	movf	fsr1h,w,c
 23144  01B0A2  6EDA               	movwf	fsr2h,c
 23145  01B0A4  0EFF               	movlw	255
 23146  01B0A6  22DA               	addwfc	fsr2h,f,c
 23147  01B0A8  0E00               	movlw	0
 23148  01B0AA  14DE               	andwf	postinc2,w,c
 23149  01B0AC  6E09               	movwf	(btemp+8)^0,c
 23150  01B0AE  0E00               	movlw	0
 23151  01B0B0  14DE               	andwf	postinc2,w,c
 23152  01B0B2  6E0A               	movwf	(btemp+9)^0,c
 23153  01B0B4  0E80               	movlw	128
 23154  01B0B6  14DE               	andwf	postinc2,w,c
 23155  01B0B8  6E0B               	movwf	(btemp+10)^0,c
 23156  01B0BA  0E7F               	movlw	127
 23157  01B0BC  14DE               	andwf	postinc2,w,c
 23158  01B0BE  6E0C               	movwf	(btemp+11)^0,c
 23159  01B0C0  5009               	movf	(btemp+8)^0,w,c
 23160  01B0C2  100A               	iorwf	(btemp+9)^0,w,c
 23161  01B0C4  100B               	iorwf	(btemp+10)^0,w,c
 23162  01B0C6  100C               	iorwf	(btemp+11)^0,w,c
 23163  01B0C8  A4D8               	btfss	status,2,c
 23164  01B0CA  D008               	goto	l9360
 23165                           
 23166                           ;stkvar	_ff1 @ sp[(0)+-4]
 23167  01B0CC  0EFC               	movlw	-4
 23168  01B0CE  6AE3               	clrf	plusw1,c
 23169  01B0D0  0EFD               	movlw	-3
 23170  01B0D2  6AE3               	clrf	plusw1,c
 23171  01B0D4  0EFE               	movlw	-2
 23172  01B0D6  6AE3               	clrf	plusw1,c
 23173  01B0D8  0EFF               	movlw	-1
 23174  01B0DA  6AE3               	clrf	plusw1,c
 23175  01B0DC                     l9360:
 23176                           
 23177                           ;stkvar	_ff2 @ sp[(0)+-8]
 23178  01B0DC  50E1               	movf	fsr1l,w,c
 23179  01B0DE  0FF8               	addlw	-8
 23180  01B0E0  6ED9               	movwf	fsr2l,c
 23181  01B0E2  50E2               	movf	fsr1h,w,c
 23182  01B0E4  6EDA               	movwf	fsr2h,c
 23183  01B0E6  0EFF               	movlw	255
 23184  01B0E8  22DA               	addwfc	fsr2h,f,c
 23185  01B0EA  0E00               	movlw	0
 23186  01B0EC  14DE               	andwf	postinc2,w,c
 23187  01B0EE  6E09               	movwf	(btemp+8)^0,c
 23188  01B0F0  0E00               	movlw	0
 23189  01B0F2  14DE               	andwf	postinc2,w,c
 23190  01B0F4  6E0A               	movwf	(btemp+9)^0,c
 23191  01B0F6  0E80               	movlw	128
 23192  01B0F8  14DE               	andwf	postinc2,w,c
 23193  01B0FA  6E0B               	movwf	(btemp+10)^0,c
 23194  01B0FC  0E7F               	movlw	127
 23195  01B0FE  14DE               	andwf	postinc2,w,c
 23196  01B100  6E0C               	movwf	(btemp+11)^0,c
 23197  01B102  5009               	movf	(btemp+8)^0,w,c
 23198  01B104  100A               	iorwf	(btemp+9)^0,w,c
 23199  01B106  100B               	iorwf	(btemp+10)^0,w,c
 23200  01B108  100C               	iorwf	(btemp+11)^0,w,c
 23201  01B10A  A4D8               	btfss	status,2,c
 23202  01B10C  D008               	goto	l9364
 23203                           
 23204                           ;stkvar	_ff2 @ sp[(0)+-8]
 23205  01B10E  0EF8               	movlw	-8
 23206  01B110  6AE3               	clrf	plusw1,c
 23207  01B112  0EF9               	movlw	-7
 23208  01B114  6AE3               	clrf	plusw1,c
 23209  01B116  0EFA               	movlw	-6
 23210  01B118  6AE3               	clrf	plusw1,c
 23211  01B11A  0EFB               	movlw	-5
 23212  01B11C  6AE3               	clrf	plusw1,c
 23213  01B11E                     l9364:
 23214                           
 23215                           ;stkvar	_ff2 @ sp[(0)+-8]
 23216                           ;stkvar	_ff1 @ sp[(0)+-4]
 23217  01B11E  50E1               	movf	fsr1l,w,c
 23218  01B120  0FFC               	addlw	-4
 23219  01B122  6ED9               	movwf	fsr2l,c
 23220  01B124  50E2               	movf	fsr1h,w,c
 23221  01B126  6EDA               	movwf	fsr2h,c
 23222  01B128  0EFF               	movlw	255
 23223  01B12A  22DA               	addwfc	fsr2h,f,c
 23224  01B12C  0EF8               	movlw	-8
 23225  01B12E  50E3               	movf	plusw1,w,c
 23226  01B130  18DE               	xorwf	postinc2,w,c
 23227  01B132  E10D               	bnz	u7690
 23228  01B134  0EF9               	movlw	-7
 23229  01B136  50E3               	movf	plusw1,w,c
 23230  01B138  18DE               	xorwf	postinc2,w,c
 23231  01B13A  E109               	bnz	u7690
 23232  01B13C  0EFA               	movlw	-6
 23233  01B13E  50E3               	movf	plusw1,w,c
 23234  01B140  18DE               	xorwf	postinc2,w,c
 23235  01B142  E105               	bnz	u7690
 23236  01B144  0EFB               	movlw	-5
 23237  01B146  50E3               	movf	plusw1,w,c
 23238  01B148  18DE               	xorwf	postinc2,w,c
 23239  01B14A  B4D8               	btfsc	status,2,c
 23240  01B14C  D002               	goto	l9368
 23241  01B14E                     u7690:
 23242  01B14E  9001               	bcf	btemp& (0+255),0,c
 23243  01B150  D001               	goto	l2930
 23244  01B152                     l9368:
 23245  01B152  8001               	bsf	btemp& (0+255),0,c
 23246  01B154                     l2930:
 23247                           
 23248                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 23249  01B154  0EF8               	movlw	248
 23250  01B156  26E1               	addwf	fsr1l,f,c
 23251  01B158  0EFF               	movlw	255
 23252  01B15A  22E2               	addwfc	fsr1h,f,c
 23253  01B15C  0012               	return		;funcret
 23254  01B15E                     __end_of___fleq:
 23255                           	opt callstack 0
 23256                           
 23257 ;; *************** function ___awmod *****************
 23258 ;; Defined at:
 23259 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 23260 ;; Parameters:    Size  Location     Type
 23261 ;;  dividend        2  [STACK] int 
 23262 ;;  divisor         2  [STACK] int 
 23263 ;; Auto vars:     Size  Location     Type
 23264 ;;  sign            1  [STACK] unsigned char 
 23265 ;;  counter         1  [STACK] unsigned char 
 23266 ;; Return value:  Size  Location     Type
 23267 ;;                  2  [STACK] int 
 23268 ;; Registers used:
 23269 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 23270 ;; Tracked objects:
 23271 ;;		On entry : 0/0
 23272 ;;		On exit  : 0/0
 23273 ;;		Unchanged: 0/0
 23274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23279 ;;Total ram usage:        0 bytes
 23280 ;; Hardware stack levels used:    1
 23281 ;; Hardware stack levels required when called:   15
 23282 ;; This function calls:
 23283 ;;		Nothing
 23284 ;; This function is called by:
 23285 ;;		_efgtoa
 23286 ;; This function uses a reentrant model
 23287 ;;
 23288                           
 23289                           	psect	text85
 23290  01A660                     __ptext85:
 23291                           	opt callstack 0
 23292  01A660                     ___awmod:
 23293                           	opt callstack 0
 23294                           
 23295                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23296  01A660  52E6               	movf	postinc1,f,c
 23297  01A662  52E6               	movf	postinc1,f,c
 23298                           
 23299                           ;stkvar	_sign @ sp[(-2)+0]
 23300                           
 23301                           ;incstack = 0
 23302 ;; hardware stack exceeded
 23303  01A664  0EFE               	movlw	-2
 23304  01A666  6AE3               	clrf	plusw1,c
 23305                           
 23306                           ;stkvar	_dividend @ sp[(-2)+-2]
 23307  01A668  0EFD               	movlw	-3
 23308  01A66A  AEE3               	btfss	plusw1,7,c
 23309  01A66C  D009               	goto	l9326
 23310                           
 23311                           ;stkvar	_dividend @ sp[(-2)+-2]
 23312                           ;stkvar	_dividend @ sp[(-2)+-2]
 23313  01A66E  0EFC               	movlw	-4
 23314  01A670  6CE3               	negf	plusw1,c
 23315  01A672  0EFD               	movlw	-3
 23316  01A674  1EE3               	comf	plusw1,f,c
 23317  01A676  B0D8               	btfsc	status,0,c
 23318  01A678  2AE3               	incf	plusw1,f,c
 23319                           
 23320                           ;stkvar	_sign @ sp[(-2)+0]
 23321  01A67A  0EFE               	movlw	-2
 23322  01A67C  6AE3               	clrf	plusw1,c
 23323  01A67E  2AE3               	incf	plusw1,f,c
 23324  01A680                     l9326:
 23325                           
 23326                           ;stkvar	_divisor @ sp[(-2)+-4]
 23327  01A680  0EFB               	movlw	-5
 23328  01A682  AEE3               	btfss	plusw1,7,c
 23329  01A684  D006               	goto	l9330
 23330                           
 23331                           ;stkvar	_divisor @ sp[(-2)+-4]
 23332                           ;stkvar	_divisor @ sp[(-2)+-4]
 23333  01A686  0EFA               	movlw	-6
 23334  01A688  6CE3               	negf	plusw1,c
 23335  01A68A  0EFB               	movlw	-5
 23336  01A68C  1EE3               	comf	plusw1,f,c
 23337  01A68E  B0D8               	btfsc	status,0,c
 23338  01A690  2AE3               	incf	plusw1,f,c
 23339  01A692                     l9330:
 23340                           
 23341                           ;stkvar	_divisor @ sp[(-2)+-4]
 23342  01A692  0EFA               	movlw	-6
 23343  01A694  006F FF8C  F001    	movff	plusw1,btemp
 23344  01A69A  0EFB               	movlw	-5
 23345  01A69C  50E3               	movf	plusw1,w,c
 23346  01A69E  1001               	iorwf	btemp^0,w,c
 23347  01A6A0  B4D8               	btfsc	status,2,c
 23348  01A6A2  D053               	goto	u7650
 23349                           
 23350                           ;stkvar	_counter @ sp[(-2)+1]
 23351  01A6A4  0EFF               	movlw	-1
 23352  01A6A6  6AE3               	clrf	plusw1,c
 23353  01A6A8  D012               	goto	L27
 23354  01A6AA                     l9334:
 23355                           
 23356                           ;stkvar	_divisor @ sp[(-2)+-4]
 23357  01A6AA  0EFA               	movlw	-6
 23358  01A6AC  50E3               	movf	plusw1,w,c
 23359  01A6AE  90D8               	bcf	status,0,c
 23360  01A6B0  34E8               	rlcf	wreg,w,c
 23361  01A6B2  6E01               	movwf	btemp^0,c
 23362  01A6B4  0EFA               	movlw	-6
 23363  01A6B6  0060  F007  FFE3   	movff	btemp,plusw1
 23364  01A6BC  0EFB               	movlw	-5
 23365  01A6BE  50E3               	movf	plusw1,w,c
 23366  01A6C0  34E8               	rlcf	wreg,w,c
 23367  01A6C2  6E01               	movwf	btemp^0,c
 23368  01A6C4  0EFB               	movlw	-5
 23369  01A6C6  0060  F007  FFE3   	movff	btemp,plusw1
 23370                           
 23371                           ;stkvar	_counter @ sp[(-2)+1]
 23372  01A6CC  0EFF               	movlw	-1
 23373  01A6CE                     L27:
 23374  01A6CE  2AE3               	incf	plusw1,f,c
 23375                           
 23376                           ;stkvar	_divisor @ sp[(-2)+-4]
 23377  01A6D0  0EFB               	movlw	-5
 23378  01A6D2  AEE3               	btfss	plusw1,7,c
 23379  01A6D4  D7EA               	goto	l9334
 23380  01A6D6                     u7630:
 23381                           
 23382                           ;stkvar	_divisor @ sp[(-2)+-4]
 23383  01A6D6  0EFA               	movlw	-6
 23384  01A6D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23385  01A6DE  0EFB               	movlw	-5
 23386  01A6E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23387                           
 23388                           ;stkvar	_dividend @ sp[(-2)+-2]
 23389  01A6E6  0EFC               	movlw	-4
 23390  01A6E8  006F FF8C  F009    	movff	plusw1,btemp+8
 23391  01A6EE  0EFD               	movlw	-3
 23392  01A6F0  006F FF8C  F00A    	movff	plusw1,btemp+9
 23393  01A6F6  500B               	movf	(btemp+10)^0,w,c
 23394  01A6F8  5C09               	subwf	(btemp+8)^0,w,c
 23395  01A6FA  500C               	movf	(btemp+11)^0,w,c
 23396  01A6FC  580A               	subwfb	(btemp+9)^0,w,c
 23397  01A6FE  A0D8               	btfss	status,0,c
 23398  01A700  D014               	goto	l9344
 23399                           
 23400                           ;stkvar	_divisor @ sp[(-2)+-4]
 23401                           ;stkvar	_dividend @ sp[(-2)+-2]
 23402  01A702  0EFC               	movlw	-4
 23403  01A704  50E3               	movf	plusw1,w,c
 23404  01A706  6E01               	movwf	btemp^0,c
 23405  01A708  0EFA               	movlw	-6
 23406  01A70A  50E3               	movf	plusw1,w,c
 23407  01A70C  5E01               	subwf	btemp^0,f,c
 23408  01A70E  0EFC               	movlw	-4
 23409  01A710  0060  F007  FFE3   	movff	btemp,plusw1
 23410  01A716  0EFD               	movlw	-3
 23411  01A718  50E3               	movf	plusw1,w,c
 23412  01A71A  6E01               	movwf	btemp^0,c
 23413  01A71C  0EFB               	movlw	-5
 23414  01A71E  50E3               	movf	plusw1,w,c
 23415  01A720  5A01               	subwfb	btemp^0,f,c
 23416  01A722  0EFD               	movlw	-3
 23417  01A724  0060  F007  FFE3   	movff	btemp,plusw1
 23418  01A72A                     l9344:
 23419                           
 23420                           ;stkvar	_divisor @ sp[(-2)+-4]
 23421  01A72A  90D8               	bcf	status,0,c
 23422  01A72C  0EFB               	movlw	-5
 23423  01A72E  32E3               	rrcf	plusw1,f,c
 23424  01A730  0EFA               	movlw	-6
 23425  01A732  32E3               	rrcf	plusw1,f,c
 23426                           
 23427                           ;stkvar	_counter @ sp[(-2)+1]
 23428  01A734  0EFF               	movlw	-1
 23429  01A736  50E3               	movf	plusw1,w,c
 23430  01A738  6E01               	movwf	btemp^0,c
 23431  01A73A  0E01               	movlw	1
 23432  01A73C  5E01               	subwf	btemp^0,f,c
 23433  01A73E  0EFF               	movlw	-1
 23434  01A740  0060  F007  FFE3   	movff	btemp,plusw1
 23435  01A746  A4D8               	btfss	status,2,c
 23436  01A748  D7C6               	goto	u7630
 23437  01A74A                     u7650:
 23438                           
 23439                           ;stkvar	_sign @ sp[(-2)+0]
 23440  01A74A  0EFE               	movlw	-2
 23441  01A74C  50E3               	movf	plusw1,w,c
 23442  01A74E  B4D8               	btfsc	status,2,c
 23443  01A750  D006               	goto	l9352
 23444                           
 23445                           ;stkvar	_dividend @ sp[(-2)+-2]
 23446                           ;stkvar	_dividend @ sp[(-2)+-2]
 23447  01A752  0EFC               	movlw	-4
 23448  01A754  6CE3               	negf	plusw1,c
 23449  01A756  0EFD               	movlw	-3
 23450  01A758  1EE3               	comf	plusw1,f,c
 23451  01A75A  B0D8               	btfsc	status,0,c
 23452  01A75C  2AE3               	incf	plusw1,f,c
 23453  01A75E                     l9352:
 23454                           
 23455                           ;stkvar	_dividend @ sp[(-2)+-2]
 23456  01A75E  0EFC               	movlw	-4
 23457  01A760  006F FF8C  F001    	movff	plusw1,btemp
 23458  01A766  0EFD               	movlw	-3
 23459  01A768  006F FF8C  F002    	movff	plusw1,btemp+1
 23460                           
 23461                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23462  01A76E  0EFA               	movlw	250
 23463  01A770  26E1               	addwf	fsr1l,f,c
 23464  01A772  0EFF               	movlw	255
 23465  01A774  22E2               	addwfc	fsr1h,f,c
 23466  01A776  0012               	return		;funcret
 23467  01A778                     __end_of___awmod:
 23468                           	opt callstack 0
 23469                           
 23470 ;; *************** function ___awdiv *****************
 23471 ;; Defined at:
 23472 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 23473 ;; Parameters:    Size  Location     Type
 23474 ;;  dividend        2  [STACK] int 
 23475 ;;  divisor         2  [STACK] int 
 23476 ;; Auto vars:     Size  Location     Type
 23477 ;;  quotient        2  [STACK] int 
 23478 ;;  sign            1  [STACK] unsigned char 
 23479 ;;  counter         1  [STACK] unsigned char 
 23480 ;; Return value:  Size  Location     Type
 23481 ;;                  2  [STACK] int 
 23482 ;; Registers used:
 23483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 23484 ;; Tracked objects:
 23485 ;;		On entry : 0/0
 23486 ;;		On exit  : 0/0
 23487 ;;		Unchanged: 0/0
 23488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23493 ;;Total ram usage:        0 bytes
 23494 ;; Hardware stack levels used:    1
 23495 ;; Hardware stack levels required when called:   15
 23496 ;; This function calls:
 23497 ;;		Nothing
 23498 ;; This function is called by:
 23499 ;;		_efgtoa
 23500 ;; This function uses a reentrant model
 23501 ;;
 23502                           
 23503                           	psect	text86
 23504  019CEA                     __ptext86:
 23505                           	opt callstack 0
 23506  019CEA                     ___awdiv:
 23507                           	opt callstack 0
 23508                           
 23509                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23510  019CEA  52E6               	movf	postinc1,f,c
 23511  019CEC  52E6               	movf	postinc1,f,c
 23512  019CEE  52E6               	movf	postinc1,f,c
 23513  019CF0  52E6               	movf	postinc1,f,c
 23514                           
 23515                           ;stkvar	_sign @ sp[(-4)+2]
 23516                           
 23517                           ;incstack = 0
 23518 ;; hardware stack exceeded
 23519  019CF2  0EFE               	movlw	-2
 23520  019CF4  6AE3               	clrf	plusw1,c
 23521                           
 23522                           ;stkvar	_divisor @ sp[(-4)+-4]
 23523  019CF6  0EF9               	movlw	-7
 23524  019CF8  AEE3               	btfss	plusw1,7,c
 23525  019CFA  D009               	goto	l9280
 23526                           
 23527                           ;stkvar	_divisor @ sp[(-4)+-4]
 23528                           ;stkvar	_divisor @ sp[(-4)+-4]
 23529  019CFC  0EF8               	movlw	-8
 23530  019CFE  6CE3               	negf	plusw1,c
 23531  019D00  0EF9               	movlw	-7
 23532  019D02  1EE3               	comf	plusw1,f,c
 23533  019D04  B0D8               	btfsc	status,0,c
 23534  019D06  2AE3               	incf	plusw1,f,c
 23535                           
 23536                           ;stkvar	_sign @ sp[(-4)+2]
 23537  019D08  0EFE               	movlw	-2
 23538  019D0A  6AE3               	clrf	plusw1,c
 23539  019D0C  2AE3               	incf	plusw1,f,c
 23540  019D0E                     l9280:
 23541                           
 23542                           ;stkvar	_dividend @ sp[(-4)+-2]
 23543  019D0E  0EFB               	movlw	-5
 23544  019D10  AEE3               	btfss	plusw1,7,c
 23545  019D12  D008               	goto	l9286
 23546                           
 23547                           ;stkvar	_dividend @ sp[(-4)+-2]
 23548                           ;stkvar	_dividend @ sp[(-4)+-2]
 23549  019D14  0EFA               	movlw	-6
 23550  019D16  6CE3               	negf	plusw1,c
 23551  019D18  0EFB               	movlw	-5
 23552  019D1A  1EE3               	comf	plusw1,f,c
 23553  019D1C  B0D8               	btfsc	status,0,c
 23554  019D1E  2AE3               	incf	plusw1,f,c
 23555                           
 23556                           ;stkvar	_sign @ sp[(-4)+2]
 23557  019D20  0EFE               	movlw	-2
 23558  019D22  70E3               	btg	plusw1,0,c
 23559  019D24                     l9286:
 23560                           
 23561                           ;stkvar	_quotient @ sp[(-4)+0]
 23562  019D24  0EFC               	movlw	-4
 23563  019D26  6AE3               	clrf	plusw1,c
 23564  019D28  0EFD               	movlw	-3
 23565  019D2A  6AE3               	clrf	plusw1,c
 23566                           
 23567                           ;stkvar	_divisor @ sp[(-4)+-4]
 23568  019D2C  0EF8               	movlw	-8
 23569  019D2E  006F FF8C  F001    	movff	plusw1,btemp
 23570  019D34  0EF9               	movlw	-7
 23571  019D36  50E3               	movf	plusw1,w,c
 23572  019D38  1001               	iorwf	btemp^0,w,c
 23573  019D3A  B4D8               	btfsc	status,2,c
 23574  019D3C  D066               	goto	u7580
 23575                           
 23576                           ;stkvar	_counter @ sp[(-4)+3]
 23577  019D3E  0EFF               	movlw	-1
 23578  019D40  6AE3               	clrf	plusw1,c
 23579  019D42  D012               	goto	L28
 23580  019D44                     l9292:
 23581                           
 23582                           ;stkvar	_divisor @ sp[(-4)+-4]
 23583  019D44  0EF8               	movlw	-8
 23584  019D46  50E3               	movf	plusw1,w,c
 23585  019D48  90D8               	bcf	status,0,c
 23586  019D4A  34E8               	rlcf	wreg,w,c
 23587  019D4C  6E01               	movwf	btemp^0,c
 23588  019D4E  0EF8               	movlw	-8
 23589  019D50  0060  F007  FFE3   	movff	btemp,plusw1
 23590  019D56  0EF9               	movlw	-7
 23591  019D58  50E3               	movf	plusw1,w,c
 23592  019D5A  34E8               	rlcf	wreg,w,c
 23593  019D5C  6E01               	movwf	btemp^0,c
 23594  019D5E  0EF9               	movlw	-7
 23595  019D60  0060  F007  FFE3   	movff	btemp,plusw1
 23596                           
 23597                           ;stkvar	_counter @ sp[(-4)+3]
 23598  019D66  0EFF               	movlw	-1
 23599  019D68                     L28:
 23600  019D68  2AE3               	incf	plusw1,f,c
 23601                           
 23602                           ;stkvar	_divisor @ sp[(-4)+-4]
 23603  019D6A  0EF9               	movlw	-7
 23604  019D6C  AEE3               	btfss	plusw1,7,c
 23605  019D6E  D7EA               	goto	l9292
 23606  019D70                     u7560:
 23607                           
 23608                           ;stkvar	_quotient @ sp[(-4)+0]
 23609  019D70  0EFC               	movlw	-4
 23610  019D72  50E3               	movf	plusw1,w,c
 23611  019D74  90D8               	bcf	status,0,c
 23612  019D76  34E8               	rlcf	wreg,w,c
 23613  019D78  6E01               	movwf	btemp^0,c
 23614  019D7A  0EFC               	movlw	-4
 23615  019D7C  0060  F007  FFE3   	movff	btemp,plusw1
 23616  019D82  0EFD               	movlw	-3
 23617  019D84  50E3               	movf	plusw1,w,c
 23618  019D86  34E8               	rlcf	wreg,w,c
 23619  019D88  6E01               	movwf	btemp^0,c
 23620  019D8A  0EFD               	movlw	-3
 23621  019D8C  0060  F007  FFE3   	movff	btemp,plusw1
 23622                           
 23623                           ;stkvar	_divisor @ sp[(-4)+-4]
 23624  019D92  0EF8               	movlw	-8
 23625  019D94  006F FF8C  F00B    	movff	plusw1,btemp+10
 23626  019D9A  0EF9               	movlw	-7
 23627  019D9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23628                           
 23629                           ;stkvar	_dividend @ sp[(-4)+-2]
 23630  019DA2  0EFA               	movlw	-6
 23631  019DA4  006F FF8C  F009    	movff	plusw1,btemp+8
 23632  019DAA  0EFB               	movlw	-5
 23633  019DAC  006F FF8C  F00A    	movff	plusw1,btemp+9
 23634  019DB2  500B               	movf	(btemp+10)^0,w,c
 23635  019DB4  5C09               	subwf	(btemp+8)^0,w,c
 23636  019DB6  500C               	movf	(btemp+11)^0,w,c
 23637  019DB8  580A               	subwfb	(btemp+9)^0,w,c
 23638  019DBA  A0D8               	btfss	status,0,c
 23639  019DBC  D016               	goto	l9306
 23640                           
 23641                           ;stkvar	_divisor @ sp[(-4)+-4]
 23642                           ;stkvar	_dividend @ sp[(-4)+-2]
 23643  019DBE  0EFA               	movlw	-6
 23644  019DC0  50E3               	movf	plusw1,w,c
 23645  019DC2  6E01               	movwf	btemp^0,c
 23646  019DC4  0EF8               	movlw	-8
 23647  019DC6  50E3               	movf	plusw1,w,c
 23648  019DC8  5E01               	subwf	btemp^0,f,c
 23649  019DCA  0EFA               	movlw	-6
 23650  019DCC  0060  F007  FFE3   	movff	btemp,plusw1
 23651  019DD2  0EFB               	movlw	-5
 23652  019DD4  50E3               	movf	plusw1,w,c
 23653  019DD6  6E01               	movwf	btemp^0,c
 23654  019DD8  0EF9               	movlw	-7
 23655  019DDA  50E3               	movf	plusw1,w,c
 23656  019DDC  5A01               	subwfb	btemp^0,f,c
 23657  019DDE  0EFB               	movlw	-5
 23658  019DE0  0060  F007  FFE3   	movff	btemp,plusw1
 23659                           
 23660                           ;stkvar	_quotient @ sp[(-4)+0]
 23661  019DE6  0EFC               	movlw	-4
 23662  019DE8  80E3               	bsf	plusw1,0,c
 23663  019DEA                     l9306:
 23664                           
 23665                           ;stkvar	_divisor @ sp[(-4)+-4]
 23666  019DEA  90D8               	bcf	status,0,c
 23667  019DEC  0EF9               	movlw	-7
 23668  019DEE  32E3               	rrcf	plusw1,f,c
 23669  019DF0  0EF8               	movlw	-8
 23670  019DF2  32E3               	rrcf	plusw1,f,c
 23671                           
 23672                           ;stkvar	_counter @ sp[(-4)+3]
 23673  019DF4  0EFF               	movlw	-1
 23674  019DF6  50E3               	movf	plusw1,w,c
 23675  019DF8  6E01               	movwf	btemp^0,c
 23676  019DFA  0E01               	movlw	1
 23677  019DFC  5E01               	subwf	btemp^0,f,c
 23678  019DFE  0EFF               	movlw	-1
 23679  019E00  0060  F007  FFE3   	movff	btemp,plusw1
 23680  019E06  A4D8               	btfss	status,2,c
 23681  019E08  D7B3               	goto	u7560
 23682  019E0A                     u7580:
 23683                           
 23684                           ;stkvar	_sign @ sp[(-4)+2]
 23685  019E0A  0EFE               	movlw	-2
 23686  019E0C  50E3               	movf	plusw1,w,c
 23687  019E0E  B4D8               	btfsc	status,2,c
 23688  019E10  D006               	goto	l9314
 23689                           
 23690                           ;stkvar	_quotient @ sp[(-4)+0]
 23691                           ;stkvar	_quotient @ sp[(-4)+0]
 23692  019E12  0EFC               	movlw	-4
 23693  019E14  6CE3               	negf	plusw1,c
 23694  019E16  0EFD               	movlw	-3
 23695  019E18  1EE3               	comf	plusw1,f,c
 23696  019E1A  B0D8               	btfsc	status,0,c
 23697  019E1C  2AE3               	incf	plusw1,f,c
 23698  019E1E                     l9314:
 23699                           
 23700                           ;stkvar	_quotient @ sp[(-4)+0]
 23701  019E1E  0EFC               	movlw	-4
 23702  019E20  006F FF8C  F001    	movff	plusw1,btemp
 23703  019E26  0EFD               	movlw	-3
 23704  019E28  006F FF8C  F002    	movff	plusw1,btemp+1
 23705                           
 23706                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23707  019E2E  0EF8               	movlw	248
 23708  019E30  26E1               	addwf	fsr1l,f,c
 23709  019E32  0EFF               	movlw	255
 23710  019E34  22E2               	addwfc	fsr1h,f,c
 23711  019E36  0012               	return		;funcret
 23712  019E38                     __end_of___awdiv:
 23713                           	opt callstack 0
 23714                           
 23715 ;; *************** function _dtoa *****************
 23716 ;; Defined at:
 23717 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23718 ;; Parameters:    Size  Location     Type
 23719 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23720 ;;		 -> f(6), NULL(0), 
 23721 ;;  d               8  [STACK] long long 
 23722 ;; Auto vars:     Size  Location     Type
 23723 ;;  n               8  [STACK] long long 
 23724 ;;  i               2  [STACK] int 
 23725 ;;  s               2  [STACK] int 
 23726 ;;  w               2  [STACK] int 
 23727 ;;  p               2  [STACK] int 
 23728 ;; Return value:  Size  Location     Type
 23729 ;;                  2  [STACK] int 
 23730 ;; Registers used:
 23731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 23732 ;; Tracked objects:
 23733 ;;		On entry : 0/0
 23734 ;;		On exit  : 0/0
 23735 ;;		Unchanged: 0/0
 23736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23741 ;;Total ram usage:        0 bytes
 23742 ;; Hardware stack levels used:    1
 23743 ;; Hardware stack levels required when called:   20
 23744 ;; This function calls:
 23745 ;;		___aodiv
 23746 ;;		___aomod
 23747 ;;		_abs
 23748 ;;		_pad
 23749 ;; This function is called by:
 23750 ;;		_vfpfcnvrt
 23751 ;; This function uses a reentrant model
 23752 ;;
 23753                           
 23754                           	psect	text87
 23755  01590C                     __ptext87:
 23756                           	opt callstack 0
 23757  01590C                     _dtoa:
 23758                           	opt callstack 0
 23759                           
 23760                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 23761  01590C  0E12               	movlw	18
 23762  01590E  26E1               	addwf	fsr1l,f,c
 23763  015910  0E00               	movlw	0
 23764  015912  22E2               	addwfc	fsr1h,f,c
 23765                           
 23766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 23767                           ;stkvar	_d @ sp[(-18)+-10]
 23768                           
 23769                           ;incstack = 0
 23770 ;; hardware stack exceeded
 23771  015914  0EE4               	movlw	228
 23772  015916  24E1               	addwf	fsr1l,w,c
 23773  015918  6ED9               	movwf	fsr2l,c
 23774  01591A  0EFF               	movlw	255
 23775  01591C  20E2               	addwfc	fsr1h,w,c
 23776  01591E  6EDA               	movwf	fsr2h,c
 23777                           
 23778                           ;stkvar	_n @ sp[(-18)+2]
 23779  015920  0E08               	movlw	8
 23780  015922  6E01               	movwf	btemp^0,c
 23781  015924  0EF0               	movlw	-16
 23782  015926                     us1202999:
 23783  015926  006F FF7B FFE3     	movff	postinc2,plusw1
 23784  01592C  28E8               	incf	wreg,w,c
 23785  01592E  2E01               	decfsz	btemp^0,f,c
 23786  015930  D7FA               	bra	us1202999
 23787                           
 23788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 23789                           ;stkvar	_n @ sp[(-18)+2]
 23790  015932  0EF7               	movlw	-9
 23791  015934  AEE3               	btfss	plusw1,7,c
 23792  015936  D002               	goto	u12030
 23793  015938  0E01               	movlw	1
 23794  01593A  D001               	goto	u12040
 23795  01593C                     u12030:
 23796  01593C  0E00               	movlw	0
 23797  01593E                     u12040:
 23798  01593E  6E0B               	movwf	(btemp+10)^0,c
 23799  015940  6A0C               	clrf	(btemp+11)^0,c
 23800                           
 23801                           ;stkvar	_s @ sp[(-18)+12]
 23802  015942  0EFA               	movlw	-6
 23803  015944  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23804  01594A  0EFB               	movlw	-5
 23805  01594C  0060  F033  FFE3   	movff	btemp+11,plusw1
 23806                           
 23807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 23808                           ;stkvar	_s @ sp[(-18)+12]
 23809  015952  0EFA               	movlw	-6
 23810  015954  006F FF8C  F001    	movff	plusw1,btemp
 23811  01595A  0EFB               	movlw	-5
 23812  01595C  50E3               	movf	plusw1,w,c
 23813  01595E  1001               	iorwf	btemp^0,w,c
 23814  015960  B4D8               	btfsc	status,2,c
 23815  015962  D025               	goto	u12060
 23816                           
 23817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 23818                           ;stkvar	_n @ sp[(-18)+2]
 23819                           ;stkvar	_n @ sp[(-18)+2]
 23820  015964  0EF0               	movlw	-16
 23821  015966  6CE3               	negf	plusw1,c
 23822  015968  0EF1               	movlw	-15
 23823  01596A  1EE3               	comf	plusw1,f,c
 23824  01596C  0EF2               	movlw	-14
 23825  01596E  1EE3               	comf	plusw1,f,c
 23826  015970  0EF3               	movlw	-13
 23827  015972  1EE3               	comf	plusw1,f,c
 23828  015974  0EF4               	movlw	-12
 23829  015976  1EE3               	comf	plusw1,f,c
 23830  015978  0EF5               	movlw	-11
 23831  01597A  1EE3               	comf	plusw1,f,c
 23832  01597C  0EF6               	movlw	-10
 23833  01597E  1EE3               	comf	plusw1,f,c
 23834  015980  0EF7               	movlw	-9
 23835  015982  1EE3               	comf	plusw1,f,c
 23836  015984  E314               	bnc	u12060
 23837  015986  0EF1               	movlw	-15
 23838  015988  2AE3               	incf	plusw1,f,c
 23839  01598A  E311               	bnc	u12060
 23840  01598C  0EF2               	movlw	-14
 23841  01598E  2AE3               	incf	plusw1,f,c
 23842  015990  E30E               	bnc	u12060
 23843  015992  0EF3               	movlw	-13
 23844  015994  2AE3               	incf	plusw1,f,c
 23845  015996  E30B               	bnc	u12060
 23846  015998  0EF4               	movlw	-12
 23847  01599A  2AE3               	incf	plusw1,f,c
 23848  01599C  E308               	bnc	u12060
 23849  01599E  0EF5               	movlw	-11
 23850  0159A0  2AE3               	incf	plusw1,f,c
 23851  0159A2  E305               	bnc	u12060
 23852  0159A4  0EF6               	movlw	-10
 23853  0159A6  2AE3               	incf	plusw1,f,c
 23854  0159A8  E302               	bnc	u12060
 23855  0159AA  0EF7               	movlw	-9
 23856  0159AC  2AE3               	incf	plusw1,f,c
 23857  0159AE                     u12060:
 23858                           
 23859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 23860  0159AE  AE3D               	btfss	(_prec+1)^0,7,c
 23861                           
 23862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 23863  0159B0  923E               	bcf	_flags^0,1,c
 23864                           
 23865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 23866  0159B2  BE3D               	btfsc	(_prec+1)^0,7,c
 23867  0159B4  D005               	goto	u12080
 23868  0159B6  503D               	movf	(_prec+1)^0,w,c
 23869  0159B8  E110               	bnz	l13206
 23870  0159BA  043C               	decf	_prec^0,w,c
 23871  0159BC  B0D8               	btfsc	status,0,c
 23872  0159BE  D00D               	goto	l13206
 23873  0159C0                     u12080:
 23874  0159C0  0E01               	movlw	1
 23875  0159C2  6E0B               	movwf	(btemp+10)^0,c
 23876  0159C4  0E00               	movlw	0
 23877  0159C6  6E0C               	movwf	(btemp+11)^0,c
 23878                           
 23879                           ;stkvar	_p @ sp[(-18)+16]
 23880  0159C8  0EFE               	movlw	-2
 23881  0159CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23882  0159D0  0EFF               	movlw	-1
 23883  0159D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 23884  0159D8  D008               	goto	l2434
 23885  0159DA                     l13206:
 23886                           
 23887                           ;stkvar	_p @ sp[(-18)+16]
 23888  0159DA  0EFE               	movlw	-2
 23889  0159DC  0060  F0F3  FFE3   	movff	_prec,plusw1
 23890  0159E2  0EFF               	movlw	-1
 23891  0159E4  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 23892  0159EA                     l2434:
 23893                           
 23894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 23895                           ;stkvar	_w @ sp[(-18)+14]
 23896  0159EA  0EFC               	movlw	-4
 23897  0159EC  0060  F0EB  FFE3   	movff	_width,plusw1
 23898  0159F2  0EFD               	movlw	-3
 23899  0159F4  0060  F0EF  FFE3   	movff	_width+1,plusw1
 23900                           
 23901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 23902                           ;stkvar	_s @ sp[(-18)+12]
 23903  0159FA  0EFA               	movlw	-6
 23904  0159FC  006F FF8C  F001    	movff	plusw1,btemp
 23905  015A02  0EFB               	movlw	-5
 23906  015A04  50E3               	movf	plusw1,w,c
 23907  015A06  1001               	iorwf	btemp^0,w,c
 23908  015A08  A4D8               	btfss	status,2,c
 23909  015A0A  D002               	goto	u12100
 23910  015A0C  A43E               	btfss	_flags^0,2,c
 23911  015A0E  D00A               	goto	l13214
 23912  015A10                     u12100:
 23913                           
 23914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 23915                           ;stkvar	_w @ sp[(-18)+14]
 23916  015A10  50E1               	movf	fsr1l,w,c
 23917  015A12  0FFC               	addlw	-4
 23918  015A14  6ED9               	movwf	fsr2l,c
 23919  015A16  50E2               	movf	fsr1h,w,c
 23920  015A18  6EDA               	movwf	fsr2h,c
 23921  015A1A  0EFF               	movlw	255
 23922  015A1C  22DA               	addwfc	fsr2h,f,c
 23923  015A1E  06DE               	decf	postinc2,f,c
 23924  015A20  0E00               	movlw	0
 23925  015A22  5ADD               	subwfb	postdec2,f,c
 23926  015A24                     l13214:
 23927                           
 23928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 23929  015A24  0E4F               	movlw	79
 23930  015A26  6E0B               	movwf	(btemp+10)^0,c
 23931  015A28  0E00               	movlw	0
 23932  015A2A  6E0C               	movwf	(btemp+11)^0,c
 23933                           
 23934                           ;stkvar	_i @ sp[(-18)+10]
 23935  015A2C  0EF8               	movlw	-8
 23936  015A2E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23937  015A34  0EF9               	movlw	-7
 23938  015A36  0060  F033  FFE3   	movff	btemp+11,plusw1
 23939                           
 23940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 23941  015A3C  0103               	movlb	3	; () banked
 23942  015A3E  6BE3               	clrf	(_dbuf+79)& (0+255),b
 23943                           
 23944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 23945  015A40  D109               	goto	l13228
 23946  015A42                     l13218:
 23947                           
 23948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 23949                           ;stkvar	_i @ sp[(-18)+10]
 23950  015A42  50E1               	movf	fsr1l,w,c
 23951  015A44  0FF8               	addlw	-8
 23952  015A46  6ED9               	movwf	fsr2l,c
 23953  015A48  50E2               	movf	fsr1h,w,c
 23954  015A4A  6EDA               	movwf	fsr2h,c
 23955  015A4C  0EFF               	movlw	255
 23956  015A4E  22DA               	addwfc	fsr2h,f,c
 23957  015A50  06DE               	decf	postinc2,f,c
 23958  015A52  0E00               	movlw	0
 23959  015A54  5ADD               	subwfb	postdec2,f,c
 23960                           
 23961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 23962  015A56  0E0A               	movlw	10
 23963  015A58  6EE6               	movwf	postinc1,c
 23964  015A5A  0E00               	movlw	0
 23965  015A5C  6EE6               	movwf	postinc1,c
 23966  015A5E  0E00               	movlw	0
 23967  015A60  6EE6               	movwf	postinc1,c
 23968  015A62  0E00               	movlw	0
 23969  015A64  6EE6               	movwf	postinc1,c
 23970  015A66  0E00               	movlw	0
 23971  015A68  6EE6               	movwf	postinc1,c
 23972  015A6A  0E00               	movlw	0
 23973  015A6C  6EE6               	movwf	postinc1,c
 23974  015A6E  0E00               	movlw	0
 23975  015A70  6EE6               	movwf	postinc1,c
 23976  015A72  0E00               	movlw	0
 23977  015A74  6EE6               	movwf	postinc1,c
 23978                           
 23979                           ;stkvar	_n @ sp[(-26)+2]
 23980  015A76  50E1               	movf	fsr1l,w,c
 23981  015A78  0FE8               	addlw	-24
 23982  015A7A  6ED9               	movwf	fsr2l,c
 23983  015A7C  50E2               	movf	fsr1h,w,c
 23984  015A7E  6EDA               	movwf	fsr2h,c
 23985  015A80  0EFF               	movlw	255
 23986  015A82  22DA               	addwfc	fsr2h,f,c
 23987  015A84  006F FF7B FFE6     	movff	postinc2,postinc1
 23988  015A8A  006F FF7B FFE6     	movff	postinc2,postinc1
 23989  015A90  006F FF7B FFE6     	movff	postinc2,postinc1
 23990  015A96  006F FF7B FFE6     	movff	postinc2,postinc1
 23991  015A9C  006F FF7B FFE6     	movff	postinc2,postinc1
 23992  015AA2  006F FF7B FFE6     	movff	postinc2,postinc1
 23993  015AA8  006F FF7B FFE6     	movff	postinc2,postinc1
 23994  015AAE  006F FF7B FFE6     	movff	postinc2,postinc1
 23995  015AB4  ECD9  F0C1         	call	___aomod	;wreg free
 23996  015AB8  52E5               	movf	postdec1,f,c
 23997  015ABA  006F FF9C  F018    	movff	indf1,btemp+23
 23998  015AC0  52E5               	movf	postdec1,f,c
 23999  015AC2  006F FF9C  F017    	movff	indf1,btemp+22
 24000  015AC8  52E5               	movf	postdec1,f,c
 24001  015ACA  006F FF9C  F016    	movff	indf1,btemp+21
 24002  015AD0  52E5               	movf	postdec1,f,c
 24003  015AD2  006F FF9C  F015    	movff	indf1,btemp+20
 24004  015AD8  52E5               	movf	postdec1,f,c
 24005  015ADA  006F FF9C  F014    	movff	indf1,btemp+19
 24006  015AE0  52E5               	movf	postdec1,f,c
 24007  015AE2  006F FF9C  F013    	movff	indf1,btemp+18
 24008  015AE8  52E5               	movf	postdec1,f,c
 24009  015AEA  006F FF9C  F012    	movff	indf1,btemp+17
 24010  015AF0  52E5               	movf	postdec1,f,c
 24011  015AF2  006F FF9C  F011    	movff	indf1,btemp+16
 24012  015AF8  0EF8               	movlw	248
 24013  015AFA  26E1               	addwf	fsr1l,f,c
 24014  015AFC  0EFF               	movlw	255
 24015  015AFE  22E2               	addwfc	fsr1h,f,c
 24016  015B00  0060  F044  F00B   	movff	btemp+16,btemp+10
 24017  015B06  0060  F048  F00C   	movff	btemp+17,btemp+11
 24018  015B0C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24019  015B12  0060  F033  FFE6   	movff	btemp+11,postinc1
 24020  015B18  EC4B  F0E3         	call	_abs	;wreg free
 24021  015B1C  0E30               	movlw	48
 24022  015B1E  2601               	addwf	btemp^0,f,c
 24023                           
 24024                           ;stkvar	_i @ sp[(-18)+10]
 24025  015B20  0EF8               	movlw	-8
 24026  015B22  006F FF8C  F00B    	movff	plusw1,btemp+10
 24027  015B28  0EF9               	movlw	-7
 24028  015B2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24029  015B30  0E94               	movlw	low _dbuf
 24030  015B32  240B               	addwf	(btemp+10)^0,w,c
 24031  015B34  6ED9               	movwf	fsr2l,c
 24032  015B36  0E03               	movlw	high _dbuf
 24033  015B38  200C               	addwfc	(btemp+11)^0,w,c
 24034  015B3A  6EDA               	movwf	fsr2h,c
 24035  015B3C  0060  F007  FFDF   	movff	btemp,indf2
 24036                           
 24037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 24038                           ;stkvar	_p @ sp[(-18)+16]
 24039  015B42  50E1               	movf	fsr1l,w,c
 24040  015B44  0FFE               	addlw	-2
 24041  015B46  6ED9               	movwf	fsr2l,c
 24042  015B48  50E2               	movf	fsr1h,w,c
 24043  015B4A  6EDA               	movwf	fsr2h,c
 24044  015B4C  0EFF               	movlw	255
 24045  015B4E  22DA               	addwfc	fsr2h,f,c
 24046  015B50  06DE               	decf	postinc2,f,c
 24047  015B52  0E00               	movlw	0
 24048  015B54  5ADD               	subwfb	postdec2,f,c
 24049                           
 24050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 24051                           ;stkvar	_w @ sp[(-18)+14]
 24052  015B56  50E1               	movf	fsr1l,w,c
 24053  015B58  0FFC               	addlw	-4
 24054  015B5A  6ED9               	movwf	fsr2l,c
 24055  015B5C  50E2               	movf	fsr1h,w,c
 24056  015B5E  6EDA               	movwf	fsr2h,c
 24057  015B60  0EFF               	movlw	255
 24058  015B62  22DA               	addwfc	fsr2h,f,c
 24059  015B64  06DE               	decf	postinc2,f,c
 24060  015B66  0E00               	movlw	0
 24061  015B68  5ADD               	subwfb	postdec2,f,c
 24062                           
 24063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 24064  015B6A  0E0A               	movlw	10
 24065  015B6C  6EE6               	movwf	postinc1,c
 24066  015B6E  0E00               	movlw	0
 24067  015B70  6EE6               	movwf	postinc1,c
 24068  015B72  0E00               	movlw	0
 24069  015B74  6EE6               	movwf	postinc1,c
 24070  015B76  0E00               	movlw	0
 24071  015B78  6EE6               	movwf	postinc1,c
 24072  015B7A  0E00               	movlw	0
 24073  015B7C  6EE6               	movwf	postinc1,c
 24074  015B7E  0E00               	movlw	0
 24075  015B80  6EE6               	movwf	postinc1,c
 24076  015B82  0E00               	movlw	0
 24077  015B84  6EE6               	movwf	postinc1,c
 24078  015B86  0E00               	movlw	0
 24079  015B88  6EE6               	movwf	postinc1,c
 24080                           
 24081                           ;stkvar	_n @ sp[(-26)+2]
 24082  015B8A  50E1               	movf	fsr1l,w,c
 24083  015B8C  0FE8               	addlw	-24
 24084  015B8E  6ED9               	movwf	fsr2l,c
 24085  015B90  50E2               	movf	fsr1h,w,c
 24086  015B92  6EDA               	movwf	fsr2h,c
 24087  015B94  0EFF               	movlw	255
 24088  015B96  22DA               	addwfc	fsr2h,f,c
 24089  015B98  006F FF7B FFE6     	movff	postinc2,postinc1
 24090  015B9E  006F FF7B FFE6     	movff	postinc2,postinc1
 24091  015BA4  006F FF7B FFE6     	movff	postinc2,postinc1
 24092  015BAA  006F FF7B FFE6     	movff	postinc2,postinc1
 24093  015BB0  006F FF7B FFE6     	movff	postinc2,postinc1
 24094  015BB6  006F FF7B FFE6     	movff	postinc2,postinc1
 24095  015BBC  006F FF7B FFE6     	movff	postinc2,postinc1
 24096  015BC2  006F FF7B FFE6     	movff	postinc2,postinc1
 24097  015BC8  EC3C  F0BE         	call	___aodiv	;wreg free
 24098  015BCC  52E5               	movf	postdec1,f,c
 24099  015BCE  006F FF9C  F018    	movff	indf1,btemp+23
 24100  015BD4  52E5               	movf	postdec1,f,c
 24101  015BD6  006F FF9C  F017    	movff	indf1,btemp+22
 24102  015BDC  52E5               	movf	postdec1,f,c
 24103  015BDE  006F FF9C  F016    	movff	indf1,btemp+21
 24104  015BE4  52E5               	movf	postdec1,f,c
 24105  015BE6  006F FF9C  F015    	movff	indf1,btemp+20
 24106  015BEC  52E5               	movf	postdec1,f,c
 24107  015BEE  006F FF9C  F014    	movff	indf1,btemp+19
 24108  015BF4  52E5               	movf	postdec1,f,c
 24109  015BF6  006F FF9C  F013    	movff	indf1,btemp+18
 24110  015BFC  52E5               	movf	postdec1,f,c
 24111  015BFE  006F FF9C  F012    	movff	indf1,btemp+17
 24112  015C04  52E5               	movf	postdec1,f,c
 24113  015C06  006F FF9C  F011    	movff	indf1,btemp+16
 24114  015C0C  0EF8               	movlw	248
 24115  015C0E  26E1               	addwf	fsr1l,f,c
 24116  015C10  0EFF               	movlw	255
 24117  015C12  22E2               	addwfc	fsr1h,f,c
 24118                           
 24119                           ;stkvar	_n @ sp[(-18)+2]
 24120  015C14  0EF0               	movlw	-16
 24121  015C16  0060  F047  FFE3   	movff	btemp+16,plusw1
 24122  015C1C  0EF1               	movlw	-15
 24123  015C1E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 24124  015C24  0EF2               	movlw	-14
 24125  015C26  0060  F04F  FFE3   	movff	btemp+18,plusw1
 24126  015C2C  0EF3               	movlw	-13
 24127  015C2E  0060  F053  FFE3   	movff	btemp+19,plusw1
 24128  015C34  0EF4               	movlw	-12
 24129  015C36  0060  F057  FFE3   	movff	btemp+20,plusw1
 24130  015C3C  0EF5               	movlw	-11
 24131  015C3E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 24132  015C44  0EF6               	movlw	-10
 24133  015C46  0060  F05F  FFE3   	movff	btemp+22,plusw1
 24134  015C4C  0EF7               	movlw	-9
 24135  015C4E  0060  F063  FFE3   	movff	btemp+23,plusw1
 24136  015C54                     l13228:
 24137                           
 24138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 24139                           ;stkvar	_i @ sp[(-18)+10]
 24140  015C54  0EF9               	movlw	-7
 24141  015C56  BEE3               	btfsc	plusw1,7,c
 24142  015C58  D036               	goto	u12150
 24143  015C5A  0EF9               	movlw	-7
 24144  015C5C  50E3               	movf	plusw1,w,c
 24145  015C5E  E104               	bnz	u12110
 24146  015C60  0EF8               	movlw	-8
 24147  015C62  04E3               	decf	plusw1,w,c
 24148  015C64  A0D8               	btfss	status,0,c
 24149  015C66  D02F               	goto	u12150
 24150  015C68                     u12110:
 24151                           
 24152                           ;stkvar	_n @ sp[(-18)+2]
 24153  015C68  0EF0               	movlw	-16
 24154  015C6A  50E3               	movf	plusw1,w,c
 24155  015C6C  E115               	bnz	u12121
 24156  015C6E  0EF1               	movlw	-15
 24157  015C70  50E3               	movf	plusw1,w,c
 24158  015C72  E112               	bnz	u12121
 24159  015C74  0EF2               	movlw	-14
 24160  015C76  50E3               	movf	plusw1,w,c
 24161  015C78  E10F               	bnz	u12121
 24162  015C7A  0EF3               	movlw	-13
 24163  015C7C  50E3               	movf	plusw1,w,c
 24164  015C7E  E10C               	bnz	u12121
 24165  015C80  0EF4               	movlw	-12
 24166  015C82  50E3               	movf	plusw1,w,c
 24167  015C84  E109               	bnz	u12121
 24168  015C86  0EF5               	movlw	-11
 24169  015C88  50E3               	movf	plusw1,w,c
 24170  015C8A  E106               	bnz	u12121
 24171  015C8C  0EF6               	movlw	-10
 24172  015C8E  50E3               	movf	plusw1,w,c
 24173  015C90  E103               	bnz	u12121
 24174  015C92  0EF7               	movlw	-9
 24175  015C94  50E3               	movf	plusw1,w,c
 24176  015C96  A4D8               	btfss	status,2,c
 24177  015C98                     u12121:
 24178  015C98  D6D4               	goto	l13218
 24179                           
 24180                           ;stkvar	_p @ sp[(-18)+16]
 24181  015C9A  0EFF               	movlw	-1
 24182  015C9C  BEE3               	btfsc	plusw1,7,c
 24183  015C9E  D007               	goto	u12130
 24184  015CA0  0EFF               	movlw	-1
 24185  015CA2  50E3               	movf	plusw1,w,c
 24186  015CA4  E103               	bnz	u12131
 24187  015CA6  0EFE               	movlw	-2
 24188  015CA8  04E3               	decf	plusw1,w,c
 24189  015CAA  B0D8               	btfsc	status,0,c
 24190  015CAC                     u12131:
 24191  015CAC  D6CA               	goto	l13218
 24192  015CAE                     u12130:
 24193                           
 24194                           ;stkvar	_w @ sp[(-18)+14]
 24195  015CAE  0EFD               	movlw	-3
 24196  015CB0  BEE3               	btfsc	plusw1,7,c
 24197  015CB2  D009               	goto	u12150
 24198  015CB4  0EFD               	movlw	-3
 24199  015CB6  50E3               	movf	plusw1,w,c
 24200  015CB8  E104               	bnz	u12140
 24201  015CBA  0EFC               	movlw	-4
 24202  015CBC  04E3               	decf	plusw1,w,c
 24203  015CBE  A0D8               	btfss	status,0,c
 24204  015CC0  D002               	goto	u12150
 24205  015CC2                     u12140:
 24206  015CC2  B23E               	btfsc	_flags^0,1,c
 24207  015CC4  D6BE               	goto	l13218
 24208  015CC6                     u12150:
 24209                           
 24210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 24211                           ;stkvar	_s @ sp[(-18)+12]
 24212  015CC6  0EFA               	movlw	-6
 24213  015CC8  006F FF8C  F001    	movff	plusw1,btemp
 24214  015CCE  0EFB               	movlw	-5
 24215  015CD0  50E3               	movf	plusw1,w,c
 24216  015CD2  1001               	iorwf	btemp^0,w,c
 24217  015CD4  A4D8               	btfss	status,2,c
 24218  015CD6  D002               	goto	u12170
 24219  015CD8  A43E               	btfss	_flags^0,2,c
 24220  015CDA  D033               	goto	l13252
 24221  015CDC                     u12170:
 24222                           
 24223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 24224                           ;stkvar	_i @ sp[(-18)+10]
 24225  015CDC  50E1               	movf	fsr1l,w,c
 24226  015CDE  0FF8               	addlw	-8
 24227  015CE0  6ED9               	movwf	fsr2l,c
 24228  015CE2  50E2               	movf	fsr1h,w,c
 24229  015CE4  6EDA               	movwf	fsr2h,c
 24230  015CE6  0EFF               	movlw	255
 24231  015CE8  22DA               	addwfc	fsr2h,f,c
 24232  015CEA  06DE               	decf	postinc2,f,c
 24233  015CEC  0E00               	movlw	0
 24234  015CEE  5ADD               	subwfb	postdec2,f,c
 24235                           
 24236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 24237                           ;stkvar	_s @ sp[(-18)+12]
 24238  015CF0  0EFA               	movlw	-6
 24239  015CF2  006F FF8C  F001    	movff	plusw1,btemp
 24240  015CF8  0EFB               	movlw	-5
 24241  015CFA  50E3               	movf	plusw1,w,c
 24242  015CFC  1001               	iorwf	btemp^0,w,c
 24243  015CFE  A4D8               	btfss	status,2,c
 24244  015D00  D002               	goto	l13248
 24245  015D02  0E2B               	movlw	43
 24246  015D04  D001               	goto	L29
 24247  015D06                     l13248:
 24248  015D06  0E2D               	movlw	45
 24249  015D08                     L29:
 24250  015D08  6E0B               	movwf	(btemp+10)^0,c
 24251  015D0A  0E00               	movlw	0
 24252  015D0C  6E0C               	movwf	(btemp+11)^0,c
 24253                           
 24254                           ;stkvar	_dtoa$6733 @ sp[(-18)+0]
 24255  015D0E  0EEE               	movlw	-18
 24256  015D10  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24257  015D16  0EEF               	movlw	-17
 24258  015D18  0060  F033  FFE3   	movff	btemp+11,plusw1
 24259                           
 24260                           ;stkvar	_dtoa$6733 @ sp[(-18)+0]
 24261                           ;stkvar	_i @ sp[(-18)+10]
 24262  015D1E  0EF8               	movlw	-8
 24263  015D20  006F FF8C  F00B    	movff	plusw1,btemp+10
 24264  015D26  0EF9               	movlw	-7
 24265  015D28  006F FF8C  F00C    	movff	plusw1,btemp+11
 24266  015D2E  0E94               	movlw	low _dbuf
 24267  015D30  240B               	addwf	(btemp+10)^0,w,c
 24268  015D32  6ED9               	movwf	fsr2l,c
 24269  015D34  0E03               	movlw	high _dbuf
 24270  015D36  200C               	addwfc	(btemp+11)^0,w,c
 24271  015D38  6EDA               	movwf	fsr2h,c
 24272  015D3A  0EEE               	movlw	-18
 24273  015D3C  006F FF8F FFDF     	movff	plusw1,indf2
 24274  015D42                     l13252:
 24275                           
 24276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 24277                           ;stkvar	_w @ sp[(-18)+14]
 24278  015D42  0EFC               	movlw	-4
 24279  015D44  006F FF8F FFE6     	movff	plusw1,postinc1
 24280  015D4A  006F FF8F FFE6     	movff	plusw1,postinc1
 24281                           
 24282                           ;stkvar	_i @ sp[(-20)+10]
 24283  015D50  0E94               	movlw	low _dbuf
 24284  015D52  6E0B               	movwf	(btemp+10)^0,c
 24285  015D54  0E03               	movlw	high _dbuf
 24286  015D56  6E0C               	movwf	(btemp+11)^0,c
 24287  015D58  0EF6               	movlw	-10
 24288  015D5A  50E3               	movf	plusw1,w,c
 24289  015D5C  260B               	addwf	(btemp+10)^0,f,c
 24290  015D5E  0EF7               	movlw	-9
 24291  015D60  50E3               	movf	plusw1,w,c
 24292  015D62  220C               	addwfc	(btemp+11)^0,f,c
 24293  015D64  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24294  015D6A  0060  F033  FFE6   	movff	btemp+11,postinc1
 24295                           
 24296                           ;stkvar	_fp @ sp[(-22)+-2]
 24297  015D70  0EE8               	movlw	-24
 24298  015D72  006F FF8F FFE6     	movff	plusw1,postinc1
 24299  015D78  006F FF8F FFE6     	movff	plusw1,postinc1
 24300  015D7E  ECBC  F0D3         	call	_pad	;wreg free
 24301                           
 24302                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 24303  015D82  0EE4               	movlw	228
 24304  015D84  26E1               	addwf	fsr1l,f,c
 24305  015D86  0EFF               	movlw	255
 24306  015D88  22E2               	addwfc	fsr1h,f,c
 24307  015D8A  0012               	return		;funcret
 24308  015D8C                     __end_of_dtoa:
 24309                           	opt callstack 0
 24310                           
 24311 ;; *************** function _abs *****************
 24312 ;; Defined at:
 24313 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 24314 ;; Parameters:    Size  Location     Type
 24315 ;;  a               2  [STACK] int 
 24316 ;; Auto vars:     Size  Location     Type
 24317 ;;		None
 24318 ;; Return value:  Size  Location     Type
 24319 ;;                  2  [STACK] int 
 24320 ;; Registers used:
 24321 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 24322 ;; Tracked objects:
 24323 ;;		On entry : 0/3
 24324 ;;		On exit  : 0/0
 24325 ;;		Unchanged: 0/0
 24326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24331 ;;Total ram usage:        0 bytes
 24332 ;; Hardware stack levels used:    1
 24333 ;; Hardware stack levels required when called:   15
 24334 ;; This function calls:
 24335 ;;		Nothing
 24336 ;; This function is called by:
 24337 ;;		_dtoa
 24338 ;; This function uses a reentrant model
 24339 ;;
 24340                           
 24341                           	psect	text88
 24342  01C696                     __ptext88:
 24343                           	opt callstack 0
 24344  01C696                     _abs:
 24345                           	opt callstack 0
 24346                           
 24347                           ;stkvar	_a @ sp[(0)+-2]
 24348                           
 24349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24350                           ;incstack = 0
 24351 ;; hardware stack exceeded
 24352  01C696  0EFF               	movlw	-1
 24353  01C698  BEE3               	btfsc	plusw1,7,c
 24354  01C69A  D007               	goto	u6540
 24355  01C69C  0EFF               	movlw	-1
 24356  01C69E  50E3               	movf	plusw1,w,c
 24357  01C6A0  E112               	bnz	l8768
 24358  01C6A2  0EFE               	movlw	-2
 24359  01C6A4  04E3               	decf	plusw1,w,c
 24360  01C6A6  B0D8               	btfsc	status,0,c
 24361  01C6A8  D00E               	goto	l8768
 24362  01C6AA                     u6540:
 24363                           
 24364                           ;stkvar	_a @ sp[(0)+-2]
 24365  01C6AA  0EFE               	movlw	-2
 24366  01C6AC  006F FF8C  F001    	movff	plusw1,btemp
 24367  01C6B2  1E01               	comf	btemp^0,f,c
 24368  01C6B4  0EFF               	movlw	-1
 24369  01C6B6  006F FF8C  F002    	movff	plusw1,btemp+1
 24370  01C6BC  1E02               	comf	(btemp+1)^0,f,c
 24371  01C6BE  2A01               	incf	btemp^0,f,c
 24372  01C6C0  B4D8               	btfsc	status,2,c
 24373  01C6C2  2A02               	incf	(btemp+1)^0,f,c
 24374  01C6C4  D008               	goto	l3360
 24375  01C6C6                     l8768:
 24376                           
 24377                           ;stkvar	_a @ sp[(0)+-2]
 24378  01C6C6  0EFE               	movlw	-2
 24379  01C6C8  006F FF8C  F001    	movff	plusw1,btemp
 24380  01C6CE  0EFF               	movlw	-1
 24381  01C6D0  006F FF8C  F002    	movff	plusw1,btemp+1
 24382  01C6D6                     l3360:
 24383                           
 24384                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 24385  01C6D6  52E5               	movf	postdec1,f,c
 24386  01C6D8  52E5               	movf	postdec1,f,c
 24387  01C6DA  0012               	return		;funcret
 24388  01C6DC                     __end_of_abs:
 24389                           	opt callstack 0
 24390                           
 24391 ;; *************** function ___aomod *****************
 24392 ;; Defined at:
 24393 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 24394 ;; Parameters:    Size  Location     Type
 24395 ;;  dividend        8  [STACK] long long 
 24396 ;;  divisor         8  [STACK] long long 
 24397 ;; Auto vars:     Size  Location     Type
 24398 ;;  sign            1  [STACK] unsigned char 
 24399 ;;  counter         1  [STACK] unsigned char 
 24400 ;; Return value:  Size  Location     Type
 24401 ;;                  8  [STACK] long long 
 24402 ;; Registers used:
 24403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 24404 ;; Tracked objects:
 24405 ;;		On entry : 0/3
 24406 ;;		On exit  : 0/0
 24407 ;;		Unchanged: 0/0
 24408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24413 ;;Total ram usage:        0 bytes
 24414 ;; Hardware stack levels used:    1
 24415 ;; Hardware stack levels required when called:   15
 24416 ;; This function calls:
 24417 ;;		Nothing
 24418 ;; This function is called by:
 24419 ;;		_dtoa
 24420 ;; This function uses a reentrant model
 24421 ;;
 24422                           
 24423                           	psect	text89
 24424  0183B2                     __ptext89:
 24425                           	opt callstack 0
 24426  0183B2                     ___aomod:
 24427                           	opt callstack 0
 24428                           
 24429                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 24430  0183B2  52E6               	movf	postinc1,f,c
 24431  0183B4  52E6               	movf	postinc1,f,c
 24432                           
 24433                           ;stkvar	_sign @ sp[(-2)+0]
 24434                           
 24435                           ;incstack = 0
 24436 ;; hardware stack exceeded
 24437  0183B6  0EFE               	movlw	-2
 24438  0183B8  6AE3               	clrf	plusw1,c
 24439                           
 24440                           ;stkvar	_dividend @ sp[(-2)+-8]
 24441  0183BA  0EFD               	movlw	-3
 24442  0183BC  AEE3               	btfss	plusw1,7,c
 24443  0183BE  D028               	goto	l8926
 24444                           
 24445                           ;stkvar	_dividend @ sp[(-2)+-8]
 24446                           ;stkvar	_dividend @ sp[(-2)+-8]
 24447  0183C0  0EF6               	movlw	-10
 24448  0183C2  6CE3               	negf	plusw1,c
 24449  0183C4  0EF7               	movlw	-9
 24450  0183C6  1EE3               	comf	plusw1,f,c
 24451  0183C8  0EF8               	movlw	-8
 24452  0183CA  1EE3               	comf	plusw1,f,c
 24453  0183CC  0EF9               	movlw	-7
 24454  0183CE  1EE3               	comf	plusw1,f,c
 24455  0183D0  0EFA               	movlw	-6
 24456  0183D2  1EE3               	comf	plusw1,f,c
 24457  0183D4  0EFB               	movlw	-5
 24458  0183D6  1EE3               	comf	plusw1,f,c
 24459  0183D8  0EFC               	movlw	-4
 24460  0183DA  1EE3               	comf	plusw1,f,c
 24461  0183DC  0EFD               	movlw	-3
 24462  0183DE  1EE3               	comf	plusw1,f,c
 24463  0183E0  E314               	bnc	u6970
 24464  0183E2  0EF7               	movlw	-9
 24465  0183E4  2AE3               	incf	plusw1,f,c
 24466  0183E6  E311               	bnc	u6970
 24467  0183E8  0EF8               	movlw	-8
 24468  0183EA  2AE3               	incf	plusw1,f,c
 24469  0183EC  E30E               	bnc	u6970
 24470  0183EE  0EF9               	movlw	-7
 24471  0183F0  2AE3               	incf	plusw1,f,c
 24472  0183F2  E30B               	bnc	u6970
 24473  0183F4  0EFA               	movlw	-6
 24474  0183F6  2AE3               	incf	plusw1,f,c
 24475  0183F8  E308               	bnc	u6970
 24476  0183FA  0EFB               	movlw	-5
 24477  0183FC  2AE3               	incf	plusw1,f,c
 24478  0183FE  E305               	bnc	u6970
 24479  018400  0EFC               	movlw	-4
 24480  018402  2AE3               	incf	plusw1,f,c
 24481  018404  E302               	bnc	u6970
 24482  018406  0EFD               	movlw	-3
 24483  018408  2AE3               	incf	plusw1,f,c
 24484  01840A                     u6970:
 24485                           
 24486                           ;stkvar	_sign @ sp[(-2)+0]
 24487  01840A  0EFE               	movlw	-2
 24488  01840C  6AE3               	clrf	plusw1,c
 24489  01840E  2AE3               	incf	plusw1,f,c
 24490  018410                     l8926:
 24491                           
 24492                           ;stkvar	_divisor @ sp[(-2)+-16]
 24493  018410  0EF5               	movlw	-11
 24494  018412  AEE3               	btfss	plusw1,7,c
 24495  018414  D025               	goto	u6990
 24496                           
 24497                           ;stkvar	_divisor @ sp[(-2)+-16]
 24498                           ;stkvar	_divisor @ sp[(-2)+-16]
 24499  018416  0EEE               	movlw	-18
 24500  018418  6CE3               	negf	plusw1,c
 24501  01841A  0EEF               	movlw	-17
 24502  01841C  1EE3               	comf	plusw1,f,c
 24503  01841E  0EF0               	movlw	-16
 24504  018420  1EE3               	comf	plusw1,f,c
 24505  018422  0EF1               	movlw	-15
 24506  018424  1EE3               	comf	plusw1,f,c
 24507  018426  0EF2               	movlw	-14
 24508  018428  1EE3               	comf	plusw1,f,c
 24509  01842A  0EF3               	movlw	-13
 24510  01842C  1EE3               	comf	plusw1,f,c
 24511  01842E  0EF4               	movlw	-12
 24512  018430  1EE3               	comf	plusw1,f,c
 24513  018432  0EF5               	movlw	-11
 24514  018434  1EE3               	comf	plusw1,f,c
 24515  018436  E314               	bnc	u6990
 24516  018438  0EEF               	movlw	-17
 24517  01843A  2AE3               	incf	plusw1,f,c
 24518  01843C  E311               	bnc	u6990
 24519  01843E  0EF0               	movlw	-16
 24520  018440  2AE3               	incf	plusw1,f,c
 24521  018442  E30E               	bnc	u6990
 24522  018444  0EF1               	movlw	-15
 24523  018446  2AE3               	incf	plusw1,f,c
 24524  018448  E30B               	bnc	u6990
 24525  01844A  0EF2               	movlw	-14
 24526  01844C  2AE3               	incf	plusw1,f,c
 24527  01844E  E308               	bnc	u6990
 24528  018450  0EF3               	movlw	-13
 24529  018452  2AE3               	incf	plusw1,f,c
 24530  018454  E305               	bnc	u6990
 24531  018456  0EF4               	movlw	-12
 24532  018458  2AE3               	incf	plusw1,f,c
 24533  01845A  E302               	bnc	u6990
 24534  01845C  0EF5               	movlw	-11
 24535  01845E  2AE3               	incf	plusw1,f,c
 24536  018460                     u6990:
 24537                           
 24538                           ;stkvar	_divisor @ sp[(-2)+-16]
 24539  018460  0EEE               	movlw	-18
 24540  018462  50E3               	movf	plusw1,w,c
 24541  018464  E116               	bnz	u7000
 24542  018466  0EEF               	movlw	-17
 24543  018468  50E3               	movf	plusw1,w,c
 24544  01846A  E113               	bnz	u7000
 24545  01846C  0EF0               	movlw	-16
 24546  01846E  50E3               	movf	plusw1,w,c
 24547  018470  E110               	bnz	u7000
 24548  018472  0EF1               	movlw	-15
 24549  018474  50E3               	movf	plusw1,w,c
 24550  018476  E10D               	bnz	u7000
 24551  018478  0EF2               	movlw	-14
 24552  01847A  50E3               	movf	plusw1,w,c
 24553  01847C  E10A               	bnz	u7000
 24554  01847E  0EF3               	movlw	-13
 24555  018480  50E3               	movf	plusw1,w,c
 24556  018482  E107               	bnz	u7000
 24557  018484  0EF4               	movlw	-12
 24558  018486  50E3               	movf	plusw1,w,c
 24559  018488  E104               	bnz	u7000
 24560  01848A  0EF5               	movlw	-11
 24561  01848C  50E3               	movf	plusw1,w,c
 24562  01848E  B4D8               	btfsc	status,2,c
 24563  018490  D075               	goto	u7030
 24564  018492                     u7000:
 24565                           
 24566                           ;stkvar	_counter @ sp[(-2)+1]
 24567  018492  0EFF               	movlw	-1
 24568  018494  6AE3               	clrf	plusw1,c
 24569  018496  D012               	goto	L30
 24570  018498                     l8934:
 24571                           
 24572                           ;stkvar	_divisor @ sp[(-2)+-16]
 24573  018498  90D8               	bcf	status,0,c
 24574  01849A  0EEE               	movlw	-18
 24575  01849C  36E3               	rlcf	plusw1,f,c
 24576  01849E  0EEF               	movlw	-17
 24577  0184A0  36E3               	rlcf	plusw1,f,c
 24578  0184A2  0EF0               	movlw	-16
 24579  0184A4  36E3               	rlcf	plusw1,f,c
 24580  0184A6  0EF1               	movlw	-15
 24581  0184A8  36E3               	rlcf	plusw1,f,c
 24582  0184AA  0EF2               	movlw	-14
 24583  0184AC  36E3               	rlcf	plusw1,f,c
 24584  0184AE  0EF3               	movlw	-13
 24585  0184B0  36E3               	rlcf	plusw1,f,c
 24586  0184B2  0EF4               	movlw	-12
 24587  0184B4  36E3               	rlcf	plusw1,f,c
 24588  0184B6  0EF5               	movlw	-11
 24589  0184B8  36E3               	rlcf	plusw1,f,c
 24590                           
 24591                           ;stkvar	_counter @ sp[(-2)+1]
 24592  0184BA  0EFF               	movlw	-1
 24593  0184BC                     L30:
 24594  0184BC  2AE3               	incf	plusw1,f,c
 24595                           
 24596                           ;stkvar	_divisor @ sp[(-2)+-16]
 24597  0184BE  0EF5               	movlw	-11
 24598  0184C0  AEE3               	btfss	plusw1,7,c
 24599  0184C2  D7EA               	goto	l8934
 24600  0184C4                     u7010:
 24601                           
 24602                           ;stkvar	_divisor @ sp[(-2)+-16]
 24603                           ;stkvar	_dividend @ sp[(-2)+-8]
 24604  0184C4  50E1               	movf	fsr1l,w,c
 24605  0184C6  0FF6               	addlw	-10
 24606  0184C8  6ED9               	movwf	fsr2l,c
 24607  0184CA  50E2               	movf	fsr1h,w,c
 24608  0184CC  6EDA               	movwf	fsr2h,c
 24609  0184CE  0EFF               	movlw	255
 24610  0184D0  22DA               	addwfc	fsr2h,f,c
 24611  0184D2  0EEE               	movlw	-18
 24612  0184D4  50E3               	movf	plusw1,w,c
 24613  0184D6  5CDE               	subwf	postinc2,w,c
 24614  0184D8  0EEF               	movlw	-17
 24615  0184DA  50E3               	movf	plusw1,w,c
 24616  0184DC  58DE               	subwfb	postinc2,w,c
 24617  0184DE  0EF0               	movlw	-16
 24618  0184E0  50E3               	movf	plusw1,w,c
 24619  0184E2  58DE               	subwfb	postinc2,w,c
 24620  0184E4  0EF1               	movlw	-15
 24621  0184E6  50E3               	movf	plusw1,w,c
 24622  0184E8  58DE               	subwfb	postinc2,w,c
 24623  0184EA  0EF2               	movlw	-14
 24624  0184EC  50E3               	movf	plusw1,w,c
 24625  0184EE  58DE               	subwfb	postinc2,w,c
 24626  0184F0  0EF3               	movlw	-13
 24627  0184F2  50E3               	movf	plusw1,w,c
 24628  0184F4  58DE               	subwfb	postinc2,w,c
 24629  0184F6  0EF4               	movlw	-12
 24630  0184F8  50E3               	movf	plusw1,w,c
 24631  0184FA  58DE               	subwfb	postinc2,w,c
 24632  0184FC  0EF5               	movlw	-11
 24633  0184FE  50E3               	movf	plusw1,w,c
 24634  018500  58DE               	subwfb	postinc2,w,c
 24635  018502  A0D8               	btfss	status,0,c
 24636  018504  D01F               	goto	l8942
 24637                           
 24638                           ;stkvar	_divisor @ sp[(-2)+-16]
 24639                           ;stkvar	_dividend @ sp[(-2)+-8]
 24640  018506  50E1               	movf	fsr1l,w,c
 24641  018508  0FF6               	addlw	-10
 24642  01850A  6ED9               	movwf	fsr2l,c
 24643  01850C  50E2               	movf	fsr1h,w,c
 24644  01850E  6EDA               	movwf	fsr2h,c
 24645  018510  0EFF               	movlw	255
 24646  018512  22DA               	addwfc	fsr2h,f,c
 24647  018514  0EEE               	movlw	-18
 24648  018516  50E3               	movf	plusw1,w,c
 24649  018518  5EDE               	subwf	postinc2,f,c
 24650  01851A  0EEF               	movlw	-17
 24651  01851C  50E3               	movf	plusw1,w,c
 24652  01851E  5ADE               	subwfb	postinc2,f,c
 24653  018520  0EF0               	movlw	-16
 24654  018522  50E3               	movf	plusw1,w,c
 24655  018524  5ADE               	subwfb	postinc2,f,c
 24656  018526  0EF1               	movlw	-15
 24657  018528  50E3               	movf	plusw1,w,c
 24658  01852A  5ADE               	subwfb	postinc2,f,c
 24659  01852C  0EF2               	movlw	-14
 24660  01852E  50E3               	movf	plusw1,w,c
 24661  018530  5ADE               	subwfb	postinc2,f,c
 24662  018532  0EF3               	movlw	-13
 24663  018534  50E3               	movf	plusw1,w,c
 24664  018536  5ADE               	subwfb	postinc2,f,c
 24665  018538  0EF4               	movlw	-12
 24666  01853A  50E3               	movf	plusw1,w,c
 24667  01853C  5ADE               	subwfb	postinc2,f,c
 24668  01853E  0EF5               	movlw	-11
 24669  018540  50E3               	movf	plusw1,w,c
 24670  018542  5ADE               	subwfb	postinc2,f,c
 24671  018544                     l8942:
 24672                           
 24673                           ;stkvar	_divisor @ sp[(-2)+-16]
 24674  018544  90D8               	bcf	status,0,c
 24675  018546  0EF5               	movlw	-11
 24676  018548  32E3               	rrcf	plusw1,f,c
 24677  01854A  0EF4               	movlw	-12
 24678  01854C  32E3               	rrcf	plusw1,f,c
 24679  01854E  0EF3               	movlw	-13
 24680  018550  32E3               	rrcf	plusw1,f,c
 24681  018552  0EF2               	movlw	-14
 24682  018554  32E3               	rrcf	plusw1,f,c
 24683  018556  0EF1               	movlw	-15
 24684  018558  32E3               	rrcf	plusw1,f,c
 24685  01855A  0EF0               	movlw	-16
 24686  01855C  32E3               	rrcf	plusw1,f,c
 24687  01855E  0EEF               	movlw	-17
 24688  018560  32E3               	rrcf	plusw1,f,c
 24689  018562  0EEE               	movlw	-18
 24690  018564  32E3               	rrcf	plusw1,f,c
 24691                           
 24692                           ;stkvar	_counter @ sp[(-2)+1]
 24693  018566  0EFF               	movlw	-1
 24694  018568  50E3               	movf	plusw1,w,c
 24695  01856A  6E01               	movwf	btemp^0,c
 24696  01856C  0E01               	movlw	1
 24697  01856E  5E01               	subwf	btemp^0,f,c
 24698  018570  0EFF               	movlw	-1
 24699  018572  0060  F007  FFE3   	movff	btemp,plusw1
 24700  018578  A4D8               	btfss	status,2,c
 24701  01857A  D7A4               	goto	u7010
 24702  01857C                     u7030:
 24703                           
 24704                           ;stkvar	_sign @ sp[(-2)+0]
 24705  01857C  0EFE               	movlw	-2
 24706  01857E  50E3               	movf	plusw1,w,c
 24707  018580  B4D8               	btfsc	status,2,c
 24708  018582  D025               	goto	u7050
 24709                           
 24710                           ;stkvar	_dividend @ sp[(-2)+-8]
 24711                           ;stkvar	_dividend @ sp[(-2)+-8]
 24712  018584  0EF6               	movlw	-10
 24713  018586  6CE3               	negf	plusw1,c
 24714  018588  0EF7               	movlw	-9
 24715  01858A  1EE3               	comf	plusw1,f,c
 24716  01858C  0EF8               	movlw	-8
 24717  01858E  1EE3               	comf	plusw1,f,c
 24718  018590  0EF9               	movlw	-7
 24719  018592  1EE3               	comf	plusw1,f,c
 24720  018594  0EFA               	movlw	-6
 24721  018596  1EE3               	comf	plusw1,f,c
 24722  018598  0EFB               	movlw	-5
 24723  01859A  1EE3               	comf	plusw1,f,c
 24724  01859C  0EFC               	movlw	-4
 24725  01859E  1EE3               	comf	plusw1,f,c
 24726  0185A0  0EFD               	movlw	-3
 24727  0185A2  1EE3               	comf	plusw1,f,c
 24728  0185A4  E314               	bnc	u7050
 24729  0185A6  0EF7               	movlw	-9
 24730  0185A8  2AE3               	incf	plusw1,f,c
 24731  0185AA  E311               	bnc	u7050
 24732  0185AC  0EF8               	movlw	-8
 24733  0185AE  2AE3               	incf	plusw1,f,c
 24734  0185B0  E30E               	bnc	u7050
 24735  0185B2  0EF9               	movlw	-7
 24736  0185B4  2AE3               	incf	plusw1,f,c
 24737  0185B6  E30B               	bnc	u7050
 24738  0185B8  0EFA               	movlw	-6
 24739  0185BA  2AE3               	incf	plusw1,f,c
 24740  0185BC  E308               	bnc	u7050
 24741  0185BE  0EFB               	movlw	-5
 24742  0185C0  2AE3               	incf	plusw1,f,c
 24743  0185C2  E305               	bnc	u7050
 24744  0185C4  0EFC               	movlw	-4
 24745  0185C6  2AE3               	incf	plusw1,f,c
 24746  0185C8  E302               	bnc	u7050
 24747  0185CA  0EFD               	movlw	-3
 24748  0185CC  2AE3               	incf	plusw1,f,c
 24749  0185CE                     u7050:
 24750                           
 24751                           ;stkvar	_dividend @ sp[(-2)+-8]
 24752  0185CE  0EF6               	movlw	246
 24753  0185D0  24E1               	addwf	fsr1l,w,c
 24754  0185D2  6ED9               	movwf	fsr2l,c
 24755  0185D4  0EFF               	movlw	255
 24756  0185D6  20E2               	addwfc	fsr1h,w,c
 24757  0185D8  6EDA               	movwf	fsr2h,c
 24758                           
 24759                           ;stkvar	?___aomod @ sp[(-2)+-8]
 24760  0185DA  0E08               	movlw	8
 24761  0185DC  6E01               	movwf	btemp^0,c
 24762  0185DE  0EF6               	movlw	-10
 24763  0185E0                     us706999:
 24764  0185E0  006F FF7B FFE3     	movff	postinc2,plusw1
 24765  0185E6  28E8               	incf	wreg,w,c
 24766  0185E8  2E01               	decfsz	btemp^0,f,c
 24767  0185EA  D7FA               	bra	us706999
 24768                           
 24769                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 24770  0185EC  52E5               	movf	postdec1,f,c
 24771  0185EE  52E5               	movf	postdec1,f,c
 24772  0185F0  0012               	return		;funcret
 24773  0185F2                     __end_of___aomod:
 24774                           	opt callstack 0
 24775                           
 24776 ;; *************** function ___aodiv *****************
 24777 ;; Defined at:
 24778 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 24779 ;; Parameters:    Size  Location     Type
 24780 ;;  dividend        8  [STACK] long long 
 24781 ;;  divisor         8  [STACK] long long 
 24782 ;; Auto vars:     Size  Location     Type
 24783 ;;  quotient        8  [STACK] long long 
 24784 ;;  sign            1  [STACK] unsigned char 
 24785 ;;  counter         1  [STACK] unsigned char 
 24786 ;; Return value:  Size  Location     Type
 24787 ;;                  8  [STACK] long long 
 24788 ;; Registers used:
 24789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 24790 ;; Tracked objects:
 24791 ;;		On entry : 0/3
 24792 ;;		On exit  : 0/0
 24793 ;;		Unchanged: 0/0
 24794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24799 ;;Total ram usage:        0 bytes
 24800 ;; Hardware stack levels used:    1
 24801 ;; Hardware stack levels required when called:   15
 24802 ;; This function calls:
 24803 ;;		Nothing
 24804 ;; This function is called by:
 24805 ;;		_dtoa
 24806 ;; This function uses a reentrant model
 24807 ;;
 24808                           
 24809                           	psect	text90
 24810  017C78                     __ptext90:
 24811                           	opt callstack 0
 24812  017C78                     ___aodiv:
 24813                           	opt callstack 0
 24814                           
 24815                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 24816  017C78  0E0A               	movlw	10
 24817  017C7A  26E1               	addwf	fsr1l,f,c
 24818  017C7C  0E00               	movlw	0
 24819  017C7E  22E2               	addwfc	fsr1h,f,c
 24820                           
 24821                           ;stkvar	_sign @ sp[(-10)+8]
 24822                           
 24823                           ;incstack = 0
 24824 ;; hardware stack exceeded
 24825  017C80  0EFE               	movlw	-2
 24826  017C82  6AE3               	clrf	plusw1,c
 24827                           
 24828                           ;stkvar	_divisor @ sp[(-10)+-16]
 24829  017C84  0EED               	movlw	-19
 24830  017C86  AEE3               	btfss	plusw1,7,c
 24831  017C88  D028               	goto	l8882
 24832                           
 24833                           ;stkvar	_divisor @ sp[(-10)+-16]
 24834                           ;stkvar	_divisor @ sp[(-10)+-16]
 24835  017C8A  0EE6               	movlw	-26
 24836  017C8C  6CE3               	negf	plusw1,c
 24837  017C8E  0EE7               	movlw	-25
 24838  017C90  1EE3               	comf	plusw1,f,c
 24839  017C92  0EE8               	movlw	-24
 24840  017C94  1EE3               	comf	plusw1,f,c
 24841  017C96  0EE9               	movlw	-23
 24842  017C98  1EE3               	comf	plusw1,f,c
 24843  017C9A  0EEA               	movlw	-22
 24844  017C9C  1EE3               	comf	plusw1,f,c
 24845  017C9E  0EEB               	movlw	-21
 24846  017CA0  1EE3               	comf	plusw1,f,c
 24847  017CA2  0EEC               	movlw	-20
 24848  017CA4  1EE3               	comf	plusw1,f,c
 24849  017CA6  0EED               	movlw	-19
 24850  017CA8  1EE3               	comf	plusw1,f,c
 24851  017CAA  E314               	bnc	u6850
 24852  017CAC  0EE7               	movlw	-25
 24853  017CAE  2AE3               	incf	plusw1,f,c
 24854  017CB0  E311               	bnc	u6850
 24855  017CB2  0EE8               	movlw	-24
 24856  017CB4  2AE3               	incf	plusw1,f,c
 24857  017CB6  E30E               	bnc	u6850
 24858  017CB8  0EE9               	movlw	-23
 24859  017CBA  2AE3               	incf	plusw1,f,c
 24860  017CBC  E30B               	bnc	u6850
 24861  017CBE  0EEA               	movlw	-22
 24862  017CC0  2AE3               	incf	plusw1,f,c
 24863  017CC2  E308               	bnc	u6850
 24864  017CC4  0EEB               	movlw	-21
 24865  017CC6  2AE3               	incf	plusw1,f,c
 24866  017CC8  E305               	bnc	u6850
 24867  017CCA  0EEC               	movlw	-20
 24868  017CCC  2AE3               	incf	plusw1,f,c
 24869  017CCE  E302               	bnc	u6850
 24870  017CD0  0EED               	movlw	-19
 24871  017CD2  2AE3               	incf	plusw1,f,c
 24872  017CD4                     u6850:
 24873                           
 24874                           ;stkvar	_sign @ sp[(-10)+8]
 24875  017CD4  0EFE               	movlw	-2
 24876  017CD6  6AE3               	clrf	plusw1,c
 24877  017CD8  2AE3               	incf	plusw1,f,c
 24878  017CDA                     l8882:
 24879                           
 24880                           ;stkvar	_dividend @ sp[(-10)+-8]
 24881  017CDA  0EF5               	movlw	-11
 24882  017CDC  AEE3               	btfss	plusw1,7,c
 24883  017CDE  D027               	goto	l8888
 24884                           
 24885                           ;stkvar	_dividend @ sp[(-10)+-8]
 24886                           ;stkvar	_dividend @ sp[(-10)+-8]
 24887  017CE0  0EEE               	movlw	-18
 24888  017CE2  6CE3               	negf	plusw1,c
 24889  017CE4  0EEF               	movlw	-17
 24890  017CE6  1EE3               	comf	plusw1,f,c
 24891  017CE8  0EF0               	movlw	-16
 24892  017CEA  1EE3               	comf	plusw1,f,c
 24893  017CEC  0EF1               	movlw	-15
 24894  017CEE  1EE3               	comf	plusw1,f,c
 24895  017CF0  0EF2               	movlw	-14
 24896  017CF2  1EE3               	comf	plusw1,f,c
 24897  017CF4  0EF3               	movlw	-13
 24898  017CF6  1EE3               	comf	plusw1,f,c
 24899  017CF8  0EF4               	movlw	-12
 24900  017CFA  1EE3               	comf	plusw1,f,c
 24901  017CFC  0EF5               	movlw	-11
 24902  017CFE  1EE3               	comf	plusw1,f,c
 24903  017D00  E314               	bnc	u6870
 24904  017D02  0EEF               	movlw	-17
 24905  017D04  2AE3               	incf	plusw1,f,c
 24906  017D06  E311               	bnc	u6870
 24907  017D08  0EF0               	movlw	-16
 24908  017D0A  2AE3               	incf	plusw1,f,c
 24909  017D0C  E30E               	bnc	u6870
 24910  017D0E  0EF1               	movlw	-15
 24911  017D10  2AE3               	incf	plusw1,f,c
 24912  017D12  E30B               	bnc	u6870
 24913  017D14  0EF2               	movlw	-14
 24914  017D16  2AE3               	incf	plusw1,f,c
 24915  017D18  E308               	bnc	u6870
 24916  017D1A  0EF3               	movlw	-13
 24917  017D1C  2AE3               	incf	plusw1,f,c
 24918  017D1E  E305               	bnc	u6870
 24919  017D20  0EF4               	movlw	-12
 24920  017D22  2AE3               	incf	plusw1,f,c
 24921  017D24  E302               	bnc	u6870
 24922  017D26  0EF5               	movlw	-11
 24923  017D28  2AE3               	incf	plusw1,f,c
 24924  017D2A                     u6870:
 24925                           
 24926                           ;stkvar	_sign @ sp[(-10)+8]
 24927  017D2A  0EFE               	movlw	-2
 24928  017D2C  70E3               	btg	plusw1,0,c
 24929  017D2E                     l8888:
 24930                           
 24931                           ;stkvar	_quotient @ sp[(-10)+0]
 24932  017D2E  0E07               	movlw	7
 24933  017D30  6E01               	movwf	btemp^0,c
 24934  017D32  0EF6               	movlw	-10
 24935  017D34                     u6881:
 24936  017D34  6AE3               	clrf	plusw1,c
 24937  017D36  2AE8               	incf	wreg,f,c
 24938  017D38  0601               	decf	btemp^0,f,c
 24939  017D3A  E2FC               	bc	u6881
 24940                           
 24941                           ;stkvar	_divisor @ sp[(-10)+-16]
 24942  017D3C  0EE6               	movlw	-26
 24943  017D3E  50E3               	movf	plusw1,w,c
 24944  017D40  E116               	bnz	u6890
 24945  017D42  0EE7               	movlw	-25
 24946  017D44  50E3               	movf	plusw1,w,c
 24947  017D46  E113               	bnz	u6890
 24948  017D48  0EE8               	movlw	-24
 24949  017D4A  50E3               	movf	plusw1,w,c
 24950  017D4C  E110               	bnz	u6890
 24951  017D4E  0EE9               	movlw	-23
 24952  017D50  50E3               	movf	plusw1,w,c
 24953  017D52  E10D               	bnz	u6890
 24954  017D54  0EEA               	movlw	-22
 24955  017D56  50E3               	movf	plusw1,w,c
 24956  017D58  E10A               	bnz	u6890
 24957  017D5A  0EEB               	movlw	-21
 24958  017D5C  50E3               	movf	plusw1,w,c
 24959  017D5E  E107               	bnz	u6890
 24960  017D60  0EEC               	movlw	-20
 24961  017D62  50E3               	movf	plusw1,w,c
 24962  017D64  E104               	bnz	u6890
 24963  017D66  0EED               	movlw	-19
 24964  017D68  50E3               	movf	plusw1,w,c
 24965  017D6A  B4D8               	btfsc	status,2,c
 24966  017D6C  D088               	goto	u6920
 24967  017D6E                     u6890:
 24968                           
 24969                           ;stkvar	_counter @ sp[(-10)+9]
 24970  017D6E  0EFF               	movlw	-1
 24971  017D70  6AE3               	clrf	plusw1,c
 24972  017D72  D012               	goto	L31
 24973  017D74                     l8894:
 24974                           
 24975                           ;stkvar	_divisor @ sp[(-10)+-16]
 24976  017D74  90D8               	bcf	status,0,c
 24977  017D76  0EE6               	movlw	-26
 24978  017D78  36E3               	rlcf	plusw1,f,c
 24979  017D7A  0EE7               	movlw	-25
 24980  017D7C  36E3               	rlcf	plusw1,f,c
 24981  017D7E  0EE8               	movlw	-24
 24982  017D80  36E3               	rlcf	plusw1,f,c
 24983  017D82  0EE9               	movlw	-23
 24984  017D84  36E3               	rlcf	plusw1,f,c
 24985  017D86  0EEA               	movlw	-22
 24986  017D88  36E3               	rlcf	plusw1,f,c
 24987  017D8A  0EEB               	movlw	-21
 24988  017D8C  36E3               	rlcf	plusw1,f,c
 24989  017D8E  0EEC               	movlw	-20
 24990  017D90  36E3               	rlcf	plusw1,f,c
 24991  017D92  0EED               	movlw	-19
 24992  017D94  36E3               	rlcf	plusw1,f,c
 24993                           
 24994                           ;stkvar	_counter @ sp[(-10)+9]
 24995  017D96  0EFF               	movlw	-1
 24996  017D98                     L31:
 24997  017D98  2AE3               	incf	plusw1,f,c
 24998                           
 24999                           ;stkvar	_divisor @ sp[(-10)+-16]
 25000  017D9A  0EED               	movlw	-19
 25001  017D9C  AEE3               	btfss	plusw1,7,c
 25002  017D9E  D7EA               	goto	l8894
 25003  017DA0                     u6900:
 25004                           
 25005                           ;stkvar	_quotient @ sp[(-10)+0]
 25006  017DA0  90D8               	bcf	status,0,c
 25007  017DA2  0EF6               	movlw	-10
 25008  017DA4  36E3               	rlcf	plusw1,f,c
 25009  017DA6  0EF7               	movlw	-9
 25010  017DA8  36E3               	rlcf	plusw1,f,c
 25011  017DAA  0EF8               	movlw	-8
 25012  017DAC  36E3               	rlcf	plusw1,f,c
 25013  017DAE  0EF9               	movlw	-7
 25014  017DB0  36E3               	rlcf	plusw1,f,c
 25015  017DB2  0EFA               	movlw	-6
 25016  017DB4  36E3               	rlcf	plusw1,f,c
 25017  017DB6  0EFB               	movlw	-5
 25018  017DB8  36E3               	rlcf	plusw1,f,c
 25019  017DBA  0EFC               	movlw	-4
 25020  017DBC  36E3               	rlcf	plusw1,f,c
 25021  017DBE  0EFD               	movlw	-3
 25022  017DC0  36E3               	rlcf	plusw1,f,c
 25023                           
 25024                           ;stkvar	_divisor @ sp[(-10)+-16]
 25025                           ;stkvar	_dividend @ sp[(-10)+-8]
 25026  017DC2  50E1               	movf	fsr1l,w,c
 25027  017DC4  0FEE               	addlw	-18
 25028  017DC6  6ED9               	movwf	fsr2l,c
 25029  017DC8  50E2               	movf	fsr1h,w,c
 25030  017DCA  6EDA               	movwf	fsr2h,c
 25031  017DCC  0EFF               	movlw	255
 25032  017DCE  22DA               	addwfc	fsr2h,f,c
 25033  017DD0  0EE6               	movlw	-26
 25034  017DD2  50E3               	movf	plusw1,w,c
 25035  017DD4  5CDE               	subwf	postinc2,w,c
 25036  017DD6  0EE7               	movlw	-25
 25037  017DD8  50E3               	movf	plusw1,w,c
 25038  017DDA  58DE               	subwfb	postinc2,w,c
 25039  017DDC  0EE8               	movlw	-24
 25040  017DDE  50E3               	movf	plusw1,w,c
 25041  017DE0  58DE               	subwfb	postinc2,w,c
 25042  017DE2  0EE9               	movlw	-23
 25043  017DE4  50E3               	movf	plusw1,w,c
 25044  017DE6  58DE               	subwfb	postinc2,w,c
 25045  017DE8  0EEA               	movlw	-22
 25046  017DEA  50E3               	movf	plusw1,w,c
 25047  017DEC  58DE               	subwfb	postinc2,w,c
 25048  017DEE  0EEB               	movlw	-21
 25049  017DF0  50E3               	movf	plusw1,w,c
 25050  017DF2  58DE               	subwfb	postinc2,w,c
 25051  017DF4  0EEC               	movlw	-20
 25052  017DF6  50E3               	movf	plusw1,w,c
 25053  017DF8  58DE               	subwfb	postinc2,w,c
 25054  017DFA  0EED               	movlw	-19
 25055  017DFC  50E3               	movf	plusw1,w,c
 25056  017DFE  58DE               	subwfb	postinc2,w,c
 25057  017E00  A0D8               	btfss	status,0,c
 25058  017E02  D021               	goto	l8906
 25059                           
 25060                           ;stkvar	_divisor @ sp[(-10)+-16]
 25061                           ;stkvar	_dividend @ sp[(-10)+-8]
 25062  017E04  50E1               	movf	fsr1l,w,c
 25063  017E06  0FEE               	addlw	-18
 25064  017E08  6ED9               	movwf	fsr2l,c
 25065  017E0A  50E2               	movf	fsr1h,w,c
 25066  017E0C  6EDA               	movwf	fsr2h,c
 25067  017E0E  0EFF               	movlw	255
 25068  017E10  22DA               	addwfc	fsr2h,f,c
 25069  017E12  0EE6               	movlw	-26
 25070  017E14  50E3               	movf	plusw1,w,c
 25071  017E16  5EDE               	subwf	postinc2,f,c
 25072  017E18  0EE7               	movlw	-25
 25073  017E1A  50E3               	movf	plusw1,w,c
 25074  017E1C  5ADE               	subwfb	postinc2,f,c
 25075  017E1E  0EE8               	movlw	-24
 25076  017E20  50E3               	movf	plusw1,w,c
 25077  017E22  5ADE               	subwfb	postinc2,f,c
 25078  017E24  0EE9               	movlw	-23
 25079  017E26  50E3               	movf	plusw1,w,c
 25080  017E28  5ADE               	subwfb	postinc2,f,c
 25081  017E2A  0EEA               	movlw	-22
 25082  017E2C  50E3               	movf	plusw1,w,c
 25083  017E2E  5ADE               	subwfb	postinc2,f,c
 25084  017E30  0EEB               	movlw	-21
 25085  017E32  50E3               	movf	plusw1,w,c
 25086  017E34  5ADE               	subwfb	postinc2,f,c
 25087  017E36  0EEC               	movlw	-20
 25088  017E38  50E3               	movf	plusw1,w,c
 25089  017E3A  5ADE               	subwfb	postinc2,f,c
 25090  017E3C  0EED               	movlw	-19
 25091  017E3E  50E3               	movf	plusw1,w,c
 25092  017E40  5ADE               	subwfb	postinc2,f,c
 25093                           
 25094                           ;stkvar	_quotient @ sp[(-10)+0]
 25095  017E42  0EF6               	movlw	-10
 25096  017E44  80E3               	bsf	plusw1,0,c
 25097  017E46                     l8906:
 25098                           
 25099                           ;stkvar	_divisor @ sp[(-10)+-16]
 25100  017E46  90D8               	bcf	status,0,c
 25101  017E48  0EED               	movlw	-19
 25102  017E4A  32E3               	rrcf	plusw1,f,c
 25103  017E4C  0EEC               	movlw	-20
 25104  017E4E  32E3               	rrcf	plusw1,f,c
 25105  017E50  0EEB               	movlw	-21
 25106  017E52  32E3               	rrcf	plusw1,f,c
 25107  017E54  0EEA               	movlw	-22
 25108  017E56  32E3               	rrcf	plusw1,f,c
 25109  017E58  0EE9               	movlw	-23
 25110  017E5A  32E3               	rrcf	plusw1,f,c
 25111  017E5C  0EE8               	movlw	-24
 25112  017E5E  32E3               	rrcf	plusw1,f,c
 25113  017E60  0EE7               	movlw	-25
 25114  017E62  32E3               	rrcf	plusw1,f,c
 25115  017E64  0EE6               	movlw	-26
 25116  017E66  32E3               	rrcf	plusw1,f,c
 25117                           
 25118                           ;stkvar	_counter @ sp[(-10)+9]
 25119  017E68  0EFF               	movlw	-1
 25120  017E6A  50E3               	movf	plusw1,w,c
 25121  017E6C  6E01               	movwf	btemp^0,c
 25122  017E6E  0E01               	movlw	1
 25123  017E70  5E01               	subwf	btemp^0,f,c
 25124  017E72  0EFF               	movlw	-1
 25125  017E74  0060  F007  FFE3   	movff	btemp,plusw1
 25126  017E7A  A4D8               	btfss	status,2,c
 25127  017E7C  D791               	goto	u6900
 25128  017E7E                     u6920:
 25129                           
 25130                           ;stkvar	_sign @ sp[(-10)+8]
 25131  017E7E  0EFE               	movlw	-2
 25132  017E80  50E3               	movf	plusw1,w,c
 25133  017E82  B4D8               	btfsc	status,2,c
 25134  017E84  D025               	goto	u6940
 25135                           
 25136                           ;stkvar	_quotient @ sp[(-10)+0]
 25137                           ;stkvar	_quotient @ sp[(-10)+0]
 25138  017E86  0EF6               	movlw	-10
 25139  017E88  6CE3               	negf	plusw1,c
 25140  017E8A  0EF7               	movlw	-9
 25141  017E8C  1EE3               	comf	plusw1,f,c
 25142  017E8E  0EF8               	movlw	-8
 25143  017E90  1EE3               	comf	plusw1,f,c
 25144  017E92  0EF9               	movlw	-7
 25145  017E94  1EE3               	comf	plusw1,f,c
 25146  017E96  0EFA               	movlw	-6
 25147  017E98  1EE3               	comf	plusw1,f,c
 25148  017E9A  0EFB               	movlw	-5
 25149  017E9C  1EE3               	comf	plusw1,f,c
 25150  017E9E  0EFC               	movlw	-4
 25151  017EA0  1EE3               	comf	plusw1,f,c
 25152  017EA2  0EFD               	movlw	-3
 25153  017EA4  1EE3               	comf	plusw1,f,c
 25154  017EA6  E314               	bnc	u6940
 25155  017EA8  0EF7               	movlw	-9
 25156  017EAA  2AE3               	incf	plusw1,f,c
 25157  017EAC  E311               	bnc	u6940
 25158  017EAE  0EF8               	movlw	-8
 25159  017EB0  2AE3               	incf	plusw1,f,c
 25160  017EB2  E30E               	bnc	u6940
 25161  017EB4  0EF9               	movlw	-7
 25162  017EB6  2AE3               	incf	plusw1,f,c
 25163  017EB8  E30B               	bnc	u6940
 25164  017EBA  0EFA               	movlw	-6
 25165  017EBC  2AE3               	incf	plusw1,f,c
 25166  017EBE  E308               	bnc	u6940
 25167  017EC0  0EFB               	movlw	-5
 25168  017EC2  2AE3               	incf	plusw1,f,c
 25169  017EC4  E305               	bnc	u6940
 25170  017EC6  0EFC               	movlw	-4
 25171  017EC8  2AE3               	incf	plusw1,f,c
 25172  017ECA  E302               	bnc	u6940
 25173  017ECC  0EFD               	movlw	-3
 25174  017ECE  2AE3               	incf	plusw1,f,c
 25175  017ED0                     u6940:
 25176                           
 25177                           ;stkvar	_quotient @ sp[(-10)+0]
 25178  017ED0  0EF6               	movlw	246
 25179  017ED2  24E1               	addwf	fsr1l,w,c
 25180  017ED4  6ED9               	movwf	fsr2l,c
 25181  017ED6  0EFF               	movlw	255
 25182  017ED8  20E2               	addwfc	fsr1h,w,c
 25183  017EDA  6EDA               	movwf	fsr2h,c
 25184                           
 25185                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 25186  017EDC  0E08               	movlw	8
 25187  017EDE  6E01               	movwf	btemp^0,c
 25188  017EE0  0EEE               	movlw	-18
 25189  017EE2                     us695999:
 25190  017EE2  006F FF7B FFE3     	movff	postinc2,plusw1
 25191  017EE8  28E8               	incf	wreg,w,c
 25192  017EEA  2E01               	decfsz	btemp^0,f,c
 25193  017EEC  D7FA               	bra	us695999
 25194                           
 25195                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 25196  017EEE  0EF6               	movlw	246
 25197  017EF0  26E1               	addwf	fsr1l,f,c
 25198  017EF2  0EFF               	movlw	255
 25199  017EF4  22E2               	addwfc	fsr1h,f,c
 25200  017EF6  0012               	return		;funcret
 25201  017EF8                     __end_of___aodiv:
 25202                           	opt callstack 0
 25203                           
 25204 ;; *************** function _ctoa *****************
 25205 ;; Defined at:
 25206 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25207 ;; Parameters:    Size  Location     Type
 25208 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25209 ;;		 -> f(6), NULL(0), 
 25210 ;;  c               1  [STACK] unsigned char 
 25211 ;; Auto vars:     Size  Location     Type
 25212 ;;  w               2  [STACK] int 
 25213 ;;  l               2    0        int 
 25214 ;; Return value:  Size  Location     Type
 25215 ;;                  2  [STACK] int 
 25216 ;; Registers used:
 25217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 25218 ;; Tracked objects:
 25219 ;;		On entry : 0/0
 25220 ;;		On exit  : 0/0
 25221 ;;		Unchanged: 0/0
 25222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25227 ;;Total ram usage:        0 bytes
 25228 ;; Hardware stack levels used:    1
 25229 ;; Hardware stack levels required when called:   20
 25230 ;; This function calls:
 25231 ;;		_pad
 25232 ;; This function is called by:
 25233 ;;		_vfpfcnvrt
 25234 ;; This function uses a reentrant model
 25235 ;;
 25236                           
 25237                           	psect	text91
 25238  01BB02                     __ptext91:
 25239                           	opt callstack 0
 25240  01BB02                     _ctoa:
 25241                           	opt callstack 0
 25242                           
 25243                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25244  01BB02  52E6               	movf	postinc1,f,c
 25245  01BB04  52E6               	movf	postinc1,f,c
 25246                           
 25247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 25248                           
 25249                           ;incstack = 0
 25250 ;; hardware stack exceeded
 25251  01BB06  503A               	movf	_width^0,w,c
 25252  01BB08  103B               	iorwf	(_width+1)^0,w,c
 25253  01BB0A  A4D8               	btfss	status,2,c
 25254  01BB0C  D009               	goto	l13180
 25255                           
 25256                           ;stkvar	_w @ sp[(-2)+0]
 25257  01BB0E  0EFE               	movlw	-2
 25258  01BB10  0060  F0EB  FFE3   	movff	_width,plusw1
 25259  01BB16  0EFF               	movlw	-1
 25260  01BB18  0060  F0EF  FFE3   	movff	_width+1,plusw1
 25261  01BB1E  D016               	goto	l13182
 25262  01BB20                     l13180:
 25263  01BB20  0EFF               	movlw	255
 25264  01BB22  6E0B               	movwf	(btemp+10)^0,c
 25265  01BB24  0EFF               	movlw	255
 25266  01BB26  6E0C               	movwf	(btemp+11)^0,c
 25267  01BB28  0060  F0E8  F009   	movff	_width,btemp+8
 25268  01BB2E  0060  F0EC  F00A   	movff	_width+1,btemp+9
 25269  01BB34  500B               	movf	(btemp+10)^0,w,c
 25270  01BB36  2609               	addwf	(btemp+8)^0,f,c
 25271  01BB38  500C               	movf	(btemp+11)^0,w,c
 25272  01BB3A  220A               	addwfc	(btemp+9)^0,f,c
 25273                           
 25274                           ;stkvar	_w @ sp[(-2)+0]
 25275  01BB3C  0EFE               	movlw	-2
 25276  01BB3E  0060  F027  FFE3   	movff	btemp+8,plusw1
 25277  01BB44  0EFF               	movlw	-1
 25278  01BB46  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25279  01BB4C                     l13182:
 25280                           
 25281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 25282                           ;stkvar	_c @ sp[(-2)+-3]
 25283  01BB4C  0EFB               	movlw	-5
 25284  01BB4E  006F FF8C  F394    	movff	plusw1,_dbuf
 25285                           
 25286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 25287  01BB54  0103               	movlb	3	; () banked
 25288  01BB56  6B95               	clrf	(_dbuf+1)& (0+255),b
 25289                           
 25290                           ; BSR set to: 3
 25291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 25292                           ;stkvar	_w @ sp[(-2)+0]
 25293  01BB58  0EFE               	movlw	-2
 25294  01BB5A  006F FF8F FFE6     	movff	plusw1,postinc1
 25295  01BB60  006F FF8F FFE6     	movff	plusw1,postinc1
 25296  01BB66  0E94               	movlw	low _dbuf
 25297  01BB68  6EE6               	movwf	postinc1,c
 25298  01BB6A  0E03               	movlw	high _dbuf
 25299  01BB6C  6EE6               	movwf	postinc1,c
 25300                           
 25301                           ;stkvar	_fp @ sp[(-6)+-2]
 25302  01BB6E  0EF8               	movlw	-8
 25303  01BB70  006F FF8F FFE6     	movff	plusw1,postinc1
 25304  01BB76  006F FF8F FFE6     	movff	plusw1,postinc1
 25305  01BB7C  ECBC  F0D3         	call	_pad	;wreg free
 25306                           
 25307                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 25308  01BB80  0EFB               	movlw	251
 25309  01BB82  26E1               	addwf	fsr1l,f,c
 25310  01BB84  0EFF               	movlw	255
 25311  01BB86  22E2               	addwfc	fsr1h,f,c
 25312  01BB88  0012               	return		;funcret
 25313  01BB8A                     __end_of_ctoa:
 25314                           	opt callstack 0
 25315                           
 25316 ;; *************** function _pad *****************
 25317 ;; Defined at:
 25318 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25319 ;; Parameters:    Size  Location     Type
 25320 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25321 ;;		 -> f(6), NULL(0), 
 25322 ;;  buf             2  [STACK] PTR unsigned char 
 25323 ;;		 -> dbuf(80), 
 25324 ;;  p               2  [STACK] int 
 25325 ;; Auto vars:     Size  Location     Type
 25326 ;;  w               2  [STACK] int 
 25327 ;;  i               2  [STACK] int 
 25328 ;; Return value:  Size  Location     Type
 25329 ;;                  2  [STACK] int 
 25330 ;; Registers used:
 25331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 25332 ;; Tracked objects:
 25333 ;;		On entry : 0/3
 25334 ;;		On exit  : 0/0
 25335 ;;		Unchanged: 0/0
 25336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25341 ;;Total ram usage:        0 bytes
 25342 ;; Hardware stack levels used:    1
 25343 ;; Hardware stack levels required when called:   19
 25344 ;; This function calls:
 25345 ;;		_fputc
 25346 ;;		_fputs
 25347 ;;		_strlen
 25348 ;; This function is called by:
 25349 ;;		_ctoa
 25350 ;;		_dtoa
 25351 ;;		_efgtoa
 25352 ;;		_utoa
 25353 ;;		_xtoa
 25354 ;; This function uses a reentrant model
 25355 ;;
 25356                           
 25357                           	psect	text92
 25358  01A778                     __ptext92:
 25359                           	opt callstack 0
 25360  01A778                     _pad:
 25361                           	opt callstack 0
 25362                           
 25363                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25364  01A778  52E6               	movf	postinc1,f,c
 25365  01A77A  52E6               	movf	postinc1,f,c
 25366  01A77C  52E6               	movf	postinc1,f,c
 25367  01A77E  52E6               	movf	postinc1,f,c
 25368                           
 25369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 25370                           
 25371                           ;incstack = 0
 25372 ;; hardware stack exceeded
 25373  01A780  A03E               	btfss	_flags^0,0,c
 25374  01A782  D010               	goto	l13142
 25375                           
 25376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 25377                           ;stkvar	_fp @ sp[(-4)+-2]
 25378  01A784  0EFA               	movlw	-6
 25379  01A786  006F FF8F FFE6     	movff	plusw1,postinc1
 25380  01A78C  006F FF8F FFE6     	movff	plusw1,postinc1
 25381                           
 25382                           ;stkvar	_buf @ sp[(-6)+-4]
 25383  01A792  0EF6               	movlw	-10
 25384  01A794  006F FF8F FFE6     	movff	plusw1,postinc1
 25385  01A79A  006F FF8F FFE6     	movff	plusw1,postinc1
 25386  01A7A0  EC11  F0DC         	call	_fputs	;wreg free
 25387  01A7A4                     l13142:
 25388                           
 25389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 25390                           ;stkvar	_p @ sp[(-4)+-6]
 25391  01A7A4  0EF7               	movlw	-9
 25392  01A7A6  BEE3               	btfsc	plusw1,7,c
 25393  01A7A8  D011               	goto	l13146
 25394                           
 25395                           ;stkvar	_p @ sp[(-4)+-6]
 25396                           ;stkvar	_w @ sp[(-4)+0]
 25397  01A7AA  0EF6               	movlw	-10
 25398  01A7AC  006F FF8C  F001    	movff	plusw1,btemp
 25399  01A7B2  0EFC               	movlw	-4
 25400  01A7B4  0060  F007  FFE3   	movff	btemp,plusw1
 25401  01A7BA  0EF7               	movlw	-9
 25402  01A7BC  006F FF8C  F001    	movff	plusw1,btemp
 25403  01A7C2  0EFD               	movlw	-3
 25404  01A7C4  0060  F007  FFE3   	movff	btemp,plusw1
 25405  01A7CA  D004               	goto	l2414
 25406  01A7CC                     l13146:
 25407                           
 25408                           ;stkvar	_w @ sp[(-4)+0]
 25409  01A7CC  0EFC               	movlw	-4
 25410  01A7CE  6AE3               	clrf	plusw1,c
 25411  01A7D0  0EFD               	movlw	-3
 25412  01A7D2  6AE3               	clrf	plusw1,c
 25413  01A7D4                     l2414:
 25414                           
 25415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 25416                           ;stkvar	_i @ sp[(-4)+2]
 25417  01A7D4  0EFE               	movlw	-2
 25418  01A7D6  6AE3               	clrf	plusw1,c
 25419  01A7D8  0EFF               	movlw	-1
 25420  01A7DA  6AE3               	clrf	plusw1,c
 25421                           
 25422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 25423  01A7DC  D01E               	goto	l13152
 25424  01A7DE                     l13148:
 25425                           
 25426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 25427                           ;stkvar	_fp @ sp[(-4)+-2]
 25428  01A7DE  0EFA               	movlw	-6
 25429  01A7E0  006F FF8F FFE6     	movff	plusw1,postinc1
 25430  01A7E6  006F FF8F FFE6     	movff	plusw1,postinc1
 25431  01A7EC  0E20               	movlw	32
 25432  01A7EE  6EE6               	movwf	postinc1,c
 25433  01A7F0  0E00               	movlw	0
 25434  01A7F2  6EE6               	movwf	postinc1,c
 25435  01A7F4  ECF4  F0D0         	call	_fputc	;wreg free
 25436                           
 25437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 25438                           ;stkvar	_i @ sp[(-4)+2]
 25439  01A7F8  0EFE               	movlw	-2
 25440  01A7FA  50E3               	movf	plusw1,w,c
 25441  01A7FC  0F01               	addlw	1
 25442  01A7FE  6E01               	movwf	btemp^0,c
 25443  01A800  0EFE               	movlw	-2
 25444  01A802  0060  F007  FFE3   	movff	btemp,plusw1
 25445  01A808  6A01               	clrf	btemp^0,c
 25446  01A80A  0EFF               	movlw	-1
 25447  01A80C  50E3               	movf	plusw1,w,c
 25448  01A80E  2001               	addwfc	btemp^0,w,c
 25449  01A810  6E01               	movwf	btemp^0,c
 25450  01A812  0EFF               	movlw	-1
 25451  01A814  0060  F007  FFE3   	movff	btemp,plusw1
 25452  01A81A                     l13152:
 25453                           
 25454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 25455                           ;stkvar	_w @ sp[(-4)+0]
 25456                           ;stkvar	_i @ sp[(-4)+2]
 25457  01A81A  50E1               	movf	fsr1l,w,c
 25458  01A81C  0FFE               	addlw	-2
 25459  01A81E  6ED9               	movwf	fsr2l,c
 25460  01A820  50E2               	movf	fsr1h,w,c
 25461  01A822  6EDA               	movwf	fsr2h,c
 25462  01A824  0EFF               	movlw	255
 25463  01A826  22DA               	addwfc	fsr2h,f,c
 25464  01A828  0EFC               	movlw	-4
 25465  01A82A  50E3               	movf	plusw1,w,c
 25466  01A82C  5CDE               	subwf	postinc2,w,c
 25467  01A82E  50DE               	movf	postinc2,w,c
 25468  01A830  0A80               	xorlw	128
 25469  01A832  6E01               	movwf	btemp^0,c
 25470  01A834  0EFD               	movlw	-3
 25471  01A836  50E3               	movf	plusw1,w,c
 25472  01A838  0A80               	xorlw	128
 25473  01A83A  5801               	subwfb	btemp^0,w,c
 25474  01A83C  A0D8               	btfss	status,0,c
 25475  01A83E  D7CF               	goto	l13148
 25476                           
 25477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 25478  01A840  B03E               	btfsc	_flags^0,0,c
 25479  01A842  D010               	goto	l13156
 25480                           
 25481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 25482                           ;stkvar	_fp @ sp[(-4)+-2]
 25483  01A844  0EFA               	movlw	-6
 25484  01A846  006F FF8F FFE6     	movff	plusw1,postinc1
 25485  01A84C  006F FF8F FFE6     	movff	plusw1,postinc1
 25486                           
 25487                           ;stkvar	_buf @ sp[(-6)+-4]
 25488  01A852  0EF6               	movlw	-10
 25489  01A854  006F FF8F FFE6     	movff	plusw1,postinc1
 25490  01A85A  006F FF8F FFE6     	movff	plusw1,postinc1
 25491  01A860  EC11  F0DC         	call	_fputs	;wreg free
 25492  01A864                     l13156:
 25493                           
 25494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 25495                           ;stkvar	_w @ sp[(-4)+0]
 25496                           ;stkvar	_buf @ sp[(-4)+-4]
 25497  01A864  0EF8               	movlw	-8
 25498  01A866  006F FF8F FFE6     	movff	plusw1,postinc1
 25499  01A86C  006F FF8F FFE6     	movff	plusw1,postinc1
 25500  01A872  ECC0  F0DB         	call	_strlen	;wreg free
 25501  01A876  0EFC               	movlw	-4
 25502  01A878  50E3               	movf	plusw1,w,c
 25503  01A87A  2601               	addwf	btemp^0,f,c
 25504  01A87C  0EFD               	movlw	-3
 25505  01A87E  50E3               	movf	plusw1,w,c
 25506  01A880  2202               	addwfc	(btemp+1)^0,f,c
 25507                           
 25508                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 25509  01A882  0EF6               	movlw	246
 25510  01A884  26E1               	addwf	fsr1l,f,c
 25511  01A886  0EFF               	movlw	255
 25512  01A888  22E2               	addwfc	fsr1h,f,c
 25513  01A88A  0012               	return		;funcret
 25514  01A88C                     __end_of_pad:
 25515                           	opt callstack 0
 25516                           
 25517 ;; *************** function _strlen *****************
 25518 ;; Defined at:
 25519 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 25520 ;; Parameters:    Size  Location     Type
 25521 ;;  s               2  [STACK] PTR const unsigned char 
 25522 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 25523 ;;		 -> spin(120), STR_62(9), STR_61(12), D.lcd(480), 
 25524 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 25525 ;;		 -> V(192), 
 25526 ;; Auto vars:     Size  Location     Type
 25527 ;;  a               2  [STACK] PTR const unsigned char 
 25528 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 25529 ;;		 -> spin(120), STR_62(9), STR_61(12), D.lcd(480), 
 25530 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 25531 ;;		 -> V(192), 
 25532 ;; Return value:  Size  Location     Type
 25533 ;;                  2  [STACK] unsigned int 
 25534 ;; Registers used:
 25535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 25536 ;; Tracked objects:
 25537 ;;		On entry : 0/0
 25538 ;;		On exit  : 0/0
 25539 ;;		Unchanged: 0/0
 25540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25545 ;;Total ram usage:        0 bytes
 25546 ;; Hardware stack levels used:    1
 25547 ;; Hardware stack levels required when called:   15
 25548 ;; This function calls:
 25549 ;;		Nothing
 25550 ;; This function is called by:
 25551 ;;		_eaDogM_WriteString
 25552 ;;		_spinners
 25553 ;;		_calc_bsoc
 25554 ;;		_pad
 25555 ;;		_stoa
 25556 ;; This function uses a reentrant model
 25557 ;;
 25558                           
 25559                           	psect	text93
 25560  01B780                     __ptext93:
 25561                           	opt callstack 0
 25562  01B780                     _strlen:
 25563                           	opt callstack 0
 25564                           
 25565                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25566  01B780  52E6               	movf	postinc1,f,c
 25567  01B782  52E6               	movf	postinc1,f,c
 25568                           
 25569                           ;stkvar	_s @ sp[(-2)+-2]
 25570                           
 25571                           ;incstack = 0
 25572 ;; hardware stack exceeded
 25573  01B784  0EFC               	movlw	-4
 25574  01B786  006F FF8C  F00B    	movff	plusw1,btemp+10
 25575  01B78C  0EFD               	movlw	-3
 25576  01B78E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25577                           
 25578                           ;stkvar	_a @ sp[(-2)+0]
 25579  01B794  0EFF               	movlw	-1
 25580  01B796  0060  F033  FFE3   	movff	btemp+11,plusw1
 25581  01B79C  0EFE               	movlw	-2
 25582  01B79E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25583  01B7A4  D011               	goto	l13082
 25584  01B7A6                     l13080:
 25585                           
 25586                           ;stkvar	_s @ sp[(-2)+-2]
 25587  01B7A6  0EFC               	movlw	-4
 25588  01B7A8  50E3               	movf	plusw1,w,c
 25589  01B7AA  0F01               	addlw	1
 25590  01B7AC  6E01               	movwf	btemp^0,c
 25591  01B7AE  0EFC               	movlw	-4
 25592  01B7B0  0060  F007  FFE3   	movff	btemp,plusw1
 25593  01B7B6  6A01               	clrf	btemp^0,c
 25594  01B7B8  0EFD               	movlw	-3
 25595  01B7BA  50E3               	movf	plusw1,w,c
 25596  01B7BC  2001               	addwfc	btemp^0,w,c
 25597  01B7BE  6E01               	movwf	btemp^0,c
 25598  01B7C0  0EFD               	movlw	-3
 25599  01B7C2  0060  F007  FFE3   	movff	btemp,plusw1
 25600  01B7C8                     l13082:
 25601                           
 25602                           ;stkvar	_s @ sp[(-2)+-2]
 25603  01B7C8  0EFC               	movlw	-4
 25604  01B7CA  006F FF8F FFF6     	movff	plusw1,tblptrl
 25605  01B7D0  0EFD               	movlw	-3
 25606  01B7D2  006F FF8F FFF7     	movff	plusw1,tblptrh
 25607  01B7D8  0E00               	movlw	low (__mediumconst shr (0+16))
 25608  01B7DA  6EF8               	movwf	tblptru,c
 25609  01B7DC  0E1F               	movlw	(high __ramtop+-1)
 25610  01B7DE  64F7               	cpfsgt	tblptrh,c
 25611  01B7E0  D003               	bra	u11867
 25612  01B7E2  0008               	tblrd		*
 25613  01B7E4  50F5               	movf	tablat,w,c
 25614  01B7E6  D007               	bra	u11860
 25615  01B7E8                     u11867:
 25616  01B7E8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 25617  01B7EE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 25618  01B7F4  50EF               	movf	indf0,w,c
 25619  01B7F6                     u11860:
 25620  01B7F6  0900               	iorlw	0
 25621  01B7F8  A4D8               	btfss	status,2,c
 25622  01B7FA  D7D5               	goto	l13080
 25623                           
 25624                           ;stkvar	_a @ sp[(-2)+0]
 25625                           ;stkvar	_s @ sp[(-2)+-2]
 25626  01B7FC  0EFC               	movlw	-4
 25627  01B7FE  006F FF8C  F001    	movff	plusw1,btemp
 25628  01B804  0EFD               	movlw	-3
 25629  01B806  006F FF8C  F002    	movff	plusw1,btemp+1
 25630  01B80C  0EFE               	movlw	-2
 25631  01B80E  50E3               	movf	plusw1,w,c
 25632  01B810  5E01               	subwf	btemp^0,f,c
 25633  01B812  0EFF               	movlw	-1
 25634  01B814  50E3               	movf	plusw1,w,c
 25635  01B816  5A02               	subwfb	(btemp+1)^0,f,c
 25636                           
 25637                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 25638  01B818  52E5               	movf	postdec1,f,c
 25639  01B81A  52E5               	movf	postdec1,f,c
 25640  01B81C  52E5               	movf	postdec1,f,c
 25641  01B81E  52E5               	movf	postdec1,f,c
 25642  01B820  0012               	return		;funcret
 25643  01B822                     __end_of_strlen:
 25644                           	opt callstack 0
 25645                           
 25646 ;; *************** function _fputs *****************
 25647 ;; Defined at:
 25648 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 25649 ;; Parameters:    Size  Location     Type
 25650 ;;  s               2  [STACK] PTR const unsigned char 
 25651 ;;		 -> dbuf(80), 
 25652 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25653 ;;		 -> f(6), NULL(0), 
 25654 ;; Auto vars:     Size  Location     Type
 25655 ;;  i               2  [STACK] int 
 25656 ;;  c               1  [STACK] unsigned char 
 25657 ;; Return value:  Size  Location     Type
 25658 ;;                  2  [STACK] int 
 25659 ;; Registers used:
 25660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 25661 ;; Tracked objects:
 25662 ;;		On entry : 0/3
 25663 ;;		On exit  : 0/0
 25664 ;;		Unchanged: 0/0
 25665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25670 ;;Total ram usage:        0 bytes
 25671 ;; Hardware stack levels used:    1
 25672 ;; Hardware stack levels required when called:   18
 25673 ;; This function calls:
 25674 ;;		_fputc
 25675 ;; This function is called by:
 25676 ;;		_pad
 25677 ;; This function uses a reentrant model
 25678 ;;
 25679                           
 25680                           	psect	text94
 25681  01B822                     __ptext94:
 25682                           	opt callstack 0
 25683  01B822                     _fputs:
 25684                           	opt callstack 0
 25685                           
 25686                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25687  01B822  52E6               	movf	postinc1,f,c
 25688  01B824  52E6               	movf	postinc1,f,c
 25689  01B826  52E6               	movf	postinc1,f,c
 25690                           
 25691                           ;stkvar	_i @ sp[(-3)+0]
 25692                           
 25693                           ;incstack = 0
 25694 ;; hardware stack exceeded
 25695  01B828  0EFD               	movlw	-3
 25696  01B82A  6AE3               	clrf	plusw1,c
 25697  01B82C  0EFE               	movlw	-2
 25698  01B82E  6AE3               	clrf	plusw1,c
 25699  01B830  D01F               	goto	l13094
 25700  01B832                     l13090:
 25701                           
 25702                           ;stkvar	_fp @ sp[(-3)+-4]
 25703  01B832  0EF9               	movlw	-7
 25704  01B834  006F FF8F FFE6     	movff	plusw1,postinc1
 25705  01B83A  006F FF8F FFE6     	movff	plusw1,postinc1
 25706                           
 25707                           ;stkvar	_c @ sp[(-5)+2]
 25708  01B840  0EFD               	movlw	-3
 25709  01B842  50E3               	movf	plusw1,w,c
 25710  01B844  6EE6               	movwf	postinc1,c
 25711  01B846  0E00               	movlw	0
 25712  01B848  6EE6               	movwf	postinc1,c
 25713  01B84A  ECF4  F0D0         	call	_fputc	;wreg free
 25714                           
 25715                           ;stkvar	_i @ sp[(-3)+0]
 25716  01B84E  0EFD               	movlw	-3
 25717  01B850  50E3               	movf	plusw1,w,c
 25718  01B852  0F01               	addlw	1
 25719  01B854  6E01               	movwf	btemp^0,c
 25720  01B856  0EFD               	movlw	-3
 25721  01B858  0060  F007  FFE3   	movff	btemp,plusw1
 25722  01B85E  6A01               	clrf	btemp^0,c
 25723  01B860  0EFE               	movlw	-2
 25724  01B862  50E3               	movf	plusw1,w,c
 25725  01B864  2001               	addwfc	btemp^0,w,c
 25726  01B866  6E01               	movwf	btemp^0,c
 25727  01B868  0EFE               	movlw	-2
 25728  01B86A  0060  F007  FFE3   	movff	btemp,plusw1
 25729  01B870                     l13094:
 25730                           
 25731                           ;stkvar	_i @ sp[(-3)+0]
 25732  01B870  0EFD               	movlw	-3
 25733  01B872  006F FF8C  F00B    	movff	plusw1,btemp+10
 25734  01B878  0EFE               	movlw	-2
 25735  01B87A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25736                           
 25737                           ;stkvar	_s @ sp[(-3)+-2]
 25738  01B880  0EFB               	movlw	-5
 25739  01B882  006F FF8C  F009    	movff	plusw1,btemp+8
 25740  01B888  0EFC               	movlw	-4
 25741  01B88A  006F FF8C  F00A    	movff	plusw1,btemp+9
 25742  01B890  500B               	movf	(btemp+10)^0,w,c
 25743  01B892  2409               	addwf	(btemp+8)^0,w,c
 25744  01B894  6ED9               	movwf	fsr2l,c
 25745  01B896  500C               	movf	(btemp+11)^0,w,c
 25746  01B898  200A               	addwfc	(btemp+9)^0,w,c
 25747  01B89A  6EDA               	movwf	fsr2h,c
 25748  01B89C  50DF               	movf	indf2,w,c
 25749  01B89E  6E0C               	movwf	(btemp+11)^0,c
 25750                           
 25751                           ;stkvar	_c @ sp[(-3)+2]
 25752  01B8A0  0EFF               	movlw	-1
 25753  01B8A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 25754  01B8A8  0EFF               	movlw	-1
 25755  01B8AA  50E3               	movf	plusw1,w,c
 25756  01B8AC  A4D8               	btfss	status,2,c
 25757  01B8AE  D7C1               	goto	l13090
 25758                           
 25759                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 25760  01B8B0  0EF9               	movlw	249
 25761  01B8B2  26E1               	addwf	fsr1l,f,c
 25762  01B8B4  0EFF               	movlw	255
 25763  01B8B6  22E2               	addwfc	fsr1h,f,c
 25764  01B8B8  0012               	return		;funcret
 25765  01B8BA                     __end_of_fputs:
 25766                           	opt callstack 0
 25767                           
 25768 ;; *************** function _fputc *****************
 25769 ;; Defined at:
 25770 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 25771 ;; Parameters:    Size  Location     Type
 25772 ;;  c               2  [STACK] int 
 25773 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25774 ;;		 -> f(6), NULL(0), 
 25775 ;; Auto vars:     Size  Location     Type
 25776 ;;		None
 25777 ;; Return value:  Size  Location     Type
 25778 ;;                  2  [STACK] int 
 25779 ;; Registers used:
 25780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 25781 ;; Tracked objects:
 25782 ;;		On entry : 0/0
 25783 ;;		On exit  : 0/0
 25784 ;;		Unchanged: 0/0
 25785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25790 ;;Total ram usage:        0 bytes
 25791 ;; Hardware stack levels used:    1
 25792 ;; Hardware stack levels required when called:   17
 25793 ;; This function calls:
 25794 ;;		_putch
 25795 ;; This function is called by:
 25796 ;;		_pad
 25797 ;;		_stoa
 25798 ;;		_vfpfcnvrt
 25799 ;;		_fputs
 25800 ;; This function uses a reentrant model
 25801 ;;
 25802                           
 25803                           	psect	text95
 25804  01A1E8                     __ptext95:
 25805                           	opt callstack 0
 25806  01A1E8                     _fputc:
 25807                           	opt callstack 0
 25808                           
 25809                           ;stkvar	_fp @ sp[(0)+-4]
 25810                           
 25811                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25812                           ;incstack = 0
 25813 ;; hardware stack exceeded
 25814  01A1E8  0EFC               	movlw	-4
 25815  01A1EA  006F FF8C  F001    	movff	plusw1,btemp
 25816  01A1F0  0EFD               	movlw	-3
 25817  01A1F2  50E3               	movf	plusw1,w,c
 25818  01A1F4  1001               	iorwf	btemp^0,w,c
 25819  01A1F6  B4D8               	btfsc	status,2,c
 25820  01A1F8  D009               	goto	u11830
 25821                           
 25822                           ;stkvar	_fp @ sp[(0)+-4]
 25823  01A1FA  0EFC               	movlw	-4
 25824  01A1FC  006F FF8C  F001    	movff	plusw1,btemp
 25825  01A202  0EFD               	movlw	-3
 25826  01A204  50E3               	movf	plusw1,w,c
 25827  01A206  1001               	iorwf	btemp^0,w,c
 25828  01A208  A4D8               	btfss	status,2,c
 25829  01A20A  D006               	goto	l13068
 25830  01A20C                     u11830:
 25831                           
 25832                           ;stkvar	_c @ sp[(0)+-2]
 25833  01A20C  0EFE               	movlw	-2
 25834  01A20E  50E3               	movf	plusw1,w,c
 25835  01A210  6EE6               	movwf	postinc1,c
 25836  01A212  ECC4  F0E8         	call	_putch	;wreg free
 25837  01A216  D075               	goto	l3460
 25838  01A218                     l13068:
 25839                           
 25840                           ;stkvar	_fp @ sp[(0)+-4]
 25841  01A218  0EFC               	movlw	-4
 25842  01A21A  006F FF8C  F00B    	movff	plusw1,btemp+10
 25843  01A220  0EFD               	movlw	-3
 25844  01A222  006F FF8C  F00C    	movff	plusw1,btemp+11
 25845  01A228  0E04               	movlw	4
 25846  01A22A  240B               	addwf	(btemp+10)^0,w,c
 25847  01A22C  6ED9               	movwf	fsr2l,c
 25848  01A22E  0E00               	movlw	0
 25849  01A230  200C               	addwfc	(btemp+11)^0,w,c
 25850  01A232  6EDA               	movwf	fsr2h,c
 25851  01A234  50DE               	movf	postinc2,w,c
 25852  01A236  10DE               	iorwf	postinc2,w,c
 25853  01A238  B4D8               	btfsc	status,2,c
 25854  01A23A  D026               	goto	u11850
 25855                           
 25856                           ;stkvar	_fp @ sp[(0)+-4]
 25857  01A23C  0EFC               	movlw	-4
 25858  01A23E  006F FF8C  F00B    	movff	plusw1,btemp+10
 25859  01A244  0EFD               	movlw	-3
 25860  01A246  006F FF8C  F00C    	movff	plusw1,btemp+11
 25861  01A24C  0E04               	movlw	4
 25862  01A24E  240B               	addwf	(btemp+10)^0,w,c
 25863  01A250  6ED9               	movwf	fsr2l,c
 25864  01A252  0E00               	movlw	0
 25865  01A254  200C               	addwfc	(btemp+11)^0,w,c
 25866  01A256  6EDA               	movwf	fsr2h,c
 25867                           
 25868                           ;stkvar	_fp @ sp[(0)+-4]
 25869  01A258  0EFC               	movlw	-4
 25870  01A25A  006F FF8C  F00B    	movff	plusw1,btemp+10
 25871  01A260  0EFD               	movlw	-3
 25872  01A262  006F FF8C  F00C    	movff	plusw1,btemp+11
 25873  01A268  0E02               	movlw	2
 25874  01A26A  240B               	addwf	(btemp+10)^0,w,c
 25875  01A26C  6EE9               	movwf	fsr0l,c
 25876  01A26E  0E00               	movlw	0
 25877  01A270  200C               	addwfc	(btemp+11)^0,w,c
 25878  01A272  6EEA               	movwf	fsr0h,c
 25879  01A274  50DE               	movf	postinc2,w,c
 25880  01A276  5CEE               	subwf	postinc0,w,c
 25881  01A278  50EE               	movf	postinc0,w,c
 25882  01A27A  0A80               	xorlw	128
 25883  01A27C  6E01               	movwf	btemp^0,c
 25884  01A27E  50DE               	movf	postinc2,w,c
 25885  01A280  0A80               	xorlw	128
 25886  01A282  5801               	subwfb	btemp^0,w,c
 25887  01A284  B0D8               	btfsc	status,0,c
 25888  01A286  D03D               	goto	l3460
 25889  01A288                     u11850:
 25890                           
 25891                           ;stkvar	_c @ sp[(0)+-2]
 25892                           ;stkvar	_fp @ sp[(0)+-4]
 25893  01A288  0EFC               	movlw	-4
 25894  01A28A  006F FF8C  F00B    	movff	plusw1,btemp+10
 25895  01A290  0EFD               	movlw	-3
 25896  01A292  006F FF8C  F00C    	movff	plusw1,btemp+11
 25897  01A298  0E02               	movlw	2
 25898  01A29A  240B               	addwf	(btemp+10)^0,w,c
 25899  01A29C  6ED9               	movwf	fsr2l,c
 25900  01A29E  0E00               	movlw	0
 25901  01A2A0  200C               	addwfc	(btemp+11)^0,w,c
 25902  01A2A2  6EDA               	movwf	fsr2h,c
 25903  01A2A4  006F FF78  F00B    	movff	postinc2,btemp+10
 25904  01A2AA  006F FF74  F00C    	movff	postdec2,btemp+11
 25905                           
 25906                           ;stkvar	_fp @ sp[(0)+-4]
 25907  01A2B0  0EFC               	movlw	-4
 25908  01A2B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 25909  01A2B8  0EFD               	movlw	-3
 25910  01A2BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 25911  01A2C0  006F FF78  F009    	movff	postinc2,btemp+8
 25912  01A2C6  006F FF74  F00A    	movff	postdec2,btemp+9
 25913  01A2CC  500B               	movf	(btemp+10)^0,w,c
 25914  01A2CE  2409               	addwf	(btemp+8)^0,w,c
 25915  01A2D0  6ED9               	movwf	fsr2l,c
 25916  01A2D2  500C               	movf	(btemp+11)^0,w,c
 25917  01A2D4  200A               	addwfc	(btemp+9)^0,w,c
 25918  01A2D6  6EDA               	movwf	fsr2h,c
 25919  01A2D8  0EFE               	movlw	-2
 25920  01A2DA  006F FF8F FFDF     	movff	plusw1,indf2
 25921                           
 25922                           ;stkvar	_fp @ sp[(0)+-4]
 25923  01A2E0  0EFC               	movlw	-4
 25924  01A2E2  006F FF8C  F00B    	movff	plusw1,btemp+10
 25925  01A2E8  0EFD               	movlw	-3
 25926  01A2EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25927  01A2F0  0E02               	movlw	2
 25928  01A2F2  240B               	addwf	(btemp+10)^0,w,c
 25929  01A2F4  6ED9               	movwf	fsr2l,c
 25930  01A2F6  0E00               	movlw	0
 25931  01A2F8  200C               	addwfc	(btemp+11)^0,w,c
 25932  01A2FA  6EDA               	movwf	fsr2h,c
 25933  01A2FC  2ADE               	incf	postinc2,f,c
 25934  01A2FE  0E00               	movlw	0
 25935  01A300  22DD               	addwfc	postdec2,f,c
 25936  01A302                     l3460:
 25937                           
 25938                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 25939  01A302  52E5               	movf	postdec1,f,c
 25940  01A304  52E5               	movf	postdec1,f,c
 25941  01A306  52E5               	movf	postdec1,f,c
 25942  01A308  52E5               	movf	postdec1,f,c
 25943  01A30A  0012               	return		;funcret
 25944  01A30C                     __end_of_fputc:
 25945                           	opt callstack 0
 25946                           
 25947 ;; *************** function _putch *****************
 25948 ;; Defined at:
 25949 ;;		line 421 in file "eadog.c"
 25950 ;; Parameters:    Size  Location     Type
 25951 ;;  c               1  [STACK] unsigned char 
 25952 ;; Auto vars:     Size  Location     Type
 25953 ;;		None
 25954 ;; Return value:  Size  Location     Type
 25955 ;;                  1  [STACK] void 
 25956 ;; Registers used:
 25957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25958 ;; Tracked objects:
 25959 ;;		On entry : 0/0
 25960 ;;		On exit  : 0/0
 25961 ;;		Unchanged: 0/0
 25962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25967 ;;Total ram usage:        0 bytes
 25968 ;; Hardware stack levels used:    1
 25969 ;; Hardware stack levels required when called:   16
 25970 ;; This function calls:
 25971 ;;		_ringBufS_put_dma
 25972 ;; This function is called by:
 25973 ;;		_fputc
 25974 ;; This function uses a reentrant model
 25975 ;;
 25976                           
 25977                           	psect	text96
 25978  01D188                     __ptext96:
 25979                           	opt callstack 0
 25980  01D188                     _putch:
 25981                           	opt callstack 0
 25982                           
 25983                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 25984                           ;stkvar	_c @ sp[(0)+-1]
 25985                           
 25986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25987                           ;incstack = 0
 25988 ;; hardware stack exceeded
 25989  01D188  0EFF               	movlw	-1
 25990  01D18A  50E3               	movf	plusw1,w,c
 25991  01D18C  6EE6               	movwf	postinc1,c
 25992  01D18E  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25993  01D194  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25994  01D19A  EC70  F0DA         	call	_ringBufS_put_dma	;wreg free
 25995                           
 25996                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 25997  01D19E  52E5               	movf	postdec1,f,c
 25998  01D1A0  0012               	return		;funcret
 25999  01D1A2                     __end_of_putch:
 26000                           	opt callstack 0
 26001                           
 26002 ;; *************** function _ringBufS_put_dma *****************
 26003 ;; Defined at:
 26004 ;;		line 67 in file "ringbufs.c"
 26005 ;; Parameters:    Size  Location     Type
 26006 ;;  _this           2  [STACK] PTR struct ringBufS_t
 26007 ;;		 -> ring_buf1(67), 
 26008 ;;  c               1  [STACK] const unsigned char 
 26009 ;; Auto vars:     Size  Location     Type
 26010 ;;		None
 26011 ;; Return value:  Size  Location     Type
 26012 ;;                  1  [STACK] void 
 26013 ;; Registers used:
 26014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 26015 ;; Tracked objects:
 26016 ;;		On entry : 0/0
 26017 ;;		On exit  : 0/0
 26018 ;;		Unchanged: 0/0
 26019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26024 ;;Total ram usage:        0 bytes
 26025 ;; Hardware stack levels used:    1
 26026 ;; Hardware stack levels required when called:   15
 26027 ;; This function calls:
 26028 ;;		Nothing
 26029 ;; This function is called by:
 26030 ;;		_putch
 26031 ;; This function uses a reentrant model
 26032 ;;
 26033                           
 26034                           	psect	text97
 26035  01B4E0                     __ptext97:
 26036                           	opt callstack 0
 26037  01B4E0                     _ringBufS_put_dma:
 26038                           	opt callstack 0
 26039                           
 26040                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 26041                           ;stkvar	__this @ sp[(0)+-2]
 26042                           
 26043                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26044                           ;incstack = 0
 26045 ;; hardware stack exceeded
 26046  01B4E0  0EFE               	movlw	-2
 26047  01B4E2  006F FF8C  F00B    	movff	plusw1,btemp+10
 26048  01B4E8  0EFF               	movlw	-1
 26049  01B4EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26050  01B4F0  0E42               	movlw	66
 26051  01B4F2  240B               	addwf	(btemp+10)^0,w,c
 26052  01B4F4  6ED9               	movwf	fsr2l,c
 26053  01B4F6  0E00               	movlw	0
 26054  01B4F8  200C               	addwfc	(btemp+11)^0,w,c
 26055  01B4FA  6EDA               	movwf	fsr2h,c
 26056  01B4FC  0E40               	movlw	64
 26057  01B4FE  60DF               	cpfslt	indf2,c
 26058  01B500  D040               	goto	l1715
 26059                           
 26060                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 26061                           ;stkvar	_c @ sp[(0)+-3]
 26062                           ;stkvar	__this @ sp[(0)+-2]
 26063  01B502  0EFE               	movlw	-2
 26064  01B504  006F FF8C  F00B    	movff	plusw1,btemp+10
 26065  01B50A  0EFF               	movlw	-1
 26066  01B50C  006F FF8C  F00C    	movff	plusw1,btemp+11
 26067  01B512  0E40               	movlw	64
 26068  01B514  240B               	addwf	(btemp+10)^0,w,c
 26069  01B516  6ED9               	movwf	fsr2l,c
 26070  01B518  0E00               	movlw	0
 26071  01B51A  200C               	addwfc	(btemp+11)^0,w,c
 26072  01B51C  6EDA               	movwf	fsr2h,c
 26073  01B51E  50DF               	movf	indf2,w,c
 26074  01B520  6E0C               	movwf	(btemp+11)^0,c
 26075                           
 26076                           ;stkvar	__this @ sp[(0)+-2]
 26077  01B522  0EFE               	movlw	-2
 26078  01B524  006F FF8C  F009    	movff	plusw1,btemp+8
 26079  01B52A  0EFF               	movlw	-1
 26080  01B52C  006F FF8C  F00A    	movff	plusw1,btemp+9
 26081  01B532  500C               	movf	(btemp+11)^0,w,c
 26082  01B534  2409               	addwf	(btemp+8)^0,w,c
 26083  01B536  6ED9               	movwf	fsr2l,c
 26084  01B538  0E00               	movlw	0
 26085  01B53A  200A               	addwfc	(btemp+9)^0,w,c
 26086  01B53C  6EDA               	movwf	fsr2h,c
 26087  01B53E  0EFD               	movlw	-3
 26088  01B540  006F FF8F FFDF     	movff	plusw1,indf2
 26089                           
 26090                           ;ringbufs.c: 71:   ++_this->head;
 26091                           ;stkvar	__this @ sp[(0)+-2]
 26092  01B546  0EFE               	movlw	-2
 26093  01B548  006F FF8C  F00B    	movff	plusw1,btemp+10
 26094  01B54E  0EFF               	movlw	-1
 26095  01B550  006F FF8C  F00C    	movff	plusw1,btemp+11
 26096  01B556  0E40               	movlw	64
 26097  01B558  240B               	addwf	(btemp+10)^0,w,c
 26098  01B55A  6ED9               	movwf	fsr2l,c
 26099  01B55C  0E00               	movlw	0
 26100  01B55E  200C               	addwfc	(btemp+11)^0,w,c
 26101  01B560  6EDA               	movwf	fsr2h,c
 26102  01B562  2ADF               	incf	indf2,f,c
 26103                           
 26104                           ;ringbufs.c: 72:   ++_this->count;
 26105                           ;stkvar	__this @ sp[(0)+-2]
 26106  01B564  0EFE               	movlw	-2
 26107  01B566  006F FF8C  F00B    	movff	plusw1,btemp+10
 26108  01B56C  0EFF               	movlw	-1
 26109  01B56E  006F FF8C  F00C    	movff	plusw1,btemp+11
 26110  01B574  0E42               	movlw	66
 26111  01B576  240B               	addwf	(btemp+10)^0,w,c
 26112  01B578  6ED9               	movwf	fsr2l,c
 26113  01B57A  0E00               	movlw	0
 26114  01B57C  200C               	addwfc	(btemp+11)^0,w,c
 26115  01B57E  6EDA               	movwf	fsr2h,c
 26116  01B580  2ADF               	incf	indf2,f,c
 26117  01B582                     l1715:
 26118                           
 26119                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 26120  01B582  52E5               	movf	postdec1,f,c
 26121  01B584  52E5               	movf	postdec1,f,c
 26122  01B586  52E5               	movf	postdec1,f,c
 26123  01B588  0012               	return		;funcret
 26124  01B58A                     __end_of_ringBufS_put_dma:
 26125                           	opt callstack 0
 26126                           
 26127 ;; *************** function _atoi *****************
 26128 ;; Defined at:
 26129 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 26130 ;; Parameters:    Size  Location     Type
 26131 ;;  s               2  [STACK] PTR const unsigned char 
 26132 ;;		 -> STR_80(127), STR_78(3), STR_77(3), STR_76(19), 
 26133 ;;		 -> STR_75(19), STR_74(19), STR_73(19), STR_72(19), 
 26134 ;;		 -> STR_71(19), STR_70(24), STR_69(15), STR_68(15), 
 26135 ;;		 -> STR_67(15), STR_66(10), STR_65(10), STR_64(19), 
 26136 ;;		 -> STR_63(19), STR_60(3), STR_59(3), STR_58(21), 
 26137 ;;		 -> STR_57(21), STR_56(21), STR_55(21), STR_54(21), 
 26138 ;;		 -> STR_53(21), STR_52(21), STR_51(21), STR_50(21), 
 26139 ;;		 -> STR_49(20), STR_48(21), STR_47(21), STR_46(21), 
 26140 ;;		 -> STR_45(22), STR_44(22), STR_43(22), STR_42(23), 
 26141 ;;		 -> STR_41(23), STR_40(23), STR_39(29), STR_38(23), 
 26142 ;;		 -> STR_37(23), STR_36(22), STR_35(22), STR_34(22), 
 26143 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 26144 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 26145 ;;		 -> STR_25(22), STR_24(17), STR_23(16), STR_22(16), 
 26146 ;;		 -> STR_21(26), STR_20(26), STR_19(22), STR_18(21), 
 26147 ;;		 -> STR_17(21), STR_16(21), STR_15(21), STR_14(22), 
 26148 ;;		 -> STR_13(22), STR_12(22), STR_11(26), STR_10(21), 
 26149 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 26150 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 26151 ;; Auto vars:     Size  Location     Type
 26152 ;;  n               2  [STACK] int 
 26153 ;;  neg             2  [STACK] int 
 26154 ;; Return value:  Size  Location     Type
 26155 ;;                  2  [STACK] int 
 26156 ;; Registers used:
 26157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 26158 ;; Tracked objects:
 26159 ;;		On entry : 0/0
 26160 ;;		On exit  : 0/0
 26161 ;;		Unchanged: 0/0
 26162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26167 ;;Total ram usage:        0 bytes
 26168 ;; Hardware stack levels used:    1
 26169 ;; Hardware stack levels required when called:   16
 26170 ;; This function calls:
 26171 ;;		_isdigit
 26172 ;;		_isspace
 26173 ;; This function is called by:
 26174 ;;		_vfpfcnvrt
 26175 ;; This function uses a reentrant model
 26176 ;;
 26177                           
 26178                           	psect	text98
 26179  017EF8                     __ptext98:
 26180                           	opt callstack 0
 26181  017EF8                     _atoi:
 26182                           	opt callstack 0
 26183                           
 26184                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26185  017EF8  0E09               	movlw	9
 26186  017EFA  26E1               	addwf	fsr1l,f,c
 26187  017EFC  0E00               	movlw	0
 26188  017EFE  22E2               	addwfc	fsr1h,f,c
 26189                           
 26190                           ;stkvar	_n @ sp[(-9)+5]
 26191                           
 26192                           ;incstack = 0
 26193 ;; hardware stack exceeded
 26194  017F00  0EFC               	movlw	-4
 26195  017F02  6AE3               	clrf	plusw1,c
 26196  017F04  0EFD               	movlw	-3
 26197  017F06  6AE3               	clrf	plusw1,c
 26198                           
 26199                           ;stkvar	_neg @ sp[(-9)+7]
 26200  017F08  0EFE               	movlw	-2
 26201  017F0A  6AE3               	clrf	plusw1,c
 26202  017F0C  0EFF               	movlw	-1
 26203  017F0E  6AE3               	clrf	plusw1,c
 26204  017F10  D011               	goto	l10082
 26205  017F12                     l10080:
 26206                           
 26207                           ;stkvar	_s @ sp[(-9)+-2]
 26208  017F12  0EF5               	movlw	-11
 26209  017F14  50E3               	movf	plusw1,w,c
 26210  017F16  0F01               	addlw	1
 26211  017F18  6E01               	movwf	btemp^0,c
 26212  017F1A  0EF5               	movlw	-11
 26213  017F1C  0060  F007  FFE3   	movff	btemp,plusw1
 26214  017F22  6A01               	clrf	btemp^0,c
 26215  017F24  0EF6               	movlw	-10
 26216  017F26  50E3               	movf	plusw1,w,c
 26217  017F28  2001               	addwfc	btemp^0,w,c
 26218  017F2A  6E01               	movwf	btemp^0,c
 26219  017F2C  0EF6               	movlw	-10
 26220  017F2E  0060  F007  FFE3   	movff	btemp,plusw1
 26221  017F34                     l10082:
 26222                           
 26223                           ;stkvar	_atoi$7316 @ sp[(-9)+4]
 26224  017F34  0EFB               	movlw	-5
 26225  017F36  6AE3               	clrf	plusw1,c
 26226  017F38  2AE3               	incf	plusw1,f,c
 26227                           
 26228                           ;stkvar	_s @ sp[(-9)+-2]
 26229  017F3A  50E1               	movf	fsr1l,w,c
 26230  017F3C  0FF5               	addlw	-11
 26231  017F3E  6ED9               	movwf	fsr2l,c
 26232  017F40  50E2               	movf	fsr1h,w,c
 26233  017F42  6EDA               	movwf	fsr2h,c
 26234  017F44  0EFF               	movlw	255
 26235  017F46  22DA               	addwfc	fsr2h,f,c
 26236  017F48  006F FF7B FFF6     	movff	postinc2,tblptrl
 26237  017F4E  006F FF77 FFF7     	movff	postdec2,tblptrh
 26238  017F54                     	if	0	;tblptru may be non-zero
 26239  017F54                     	endif
 26240  017F54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26241  017F54  0E00               	movlw	low (__mediumconst shr (0+16))
 26242  017F56  6EF8               	movwf	tblptru,c
 26243  017F58                     	endif
 26244  017F58  0008               	tblrd		*
 26245  017F5A  50F5               	movf	tablat,w,c
 26246  017F5C  0A20               	xorlw	32
 26247  017F5E  B4D8               	btfsc	status,2,c
 26248  017F60  D023               	goto	l10090
 26249  017F62  0EF7               	movlw	247
 26250  017F64  6E0B               	movwf	(btemp+10)^0,c
 26251  017F66  0EFF               	movlw	255
 26252  017F68  6E0C               	movwf	(btemp+11)^0,c
 26253                           
 26254                           ;stkvar	_s @ sp[(-9)+-2]
 26255  017F6A  50E1               	movf	fsr1l,w,c
 26256  017F6C  0FF5               	addlw	-11
 26257  017F6E  6ED9               	movwf	fsr2l,c
 26258  017F70  50E2               	movf	fsr1h,w,c
 26259  017F72  6EDA               	movwf	fsr2h,c
 26260  017F74  0EFF               	movlw	255
 26261  017F76  22DA               	addwfc	fsr2h,f,c
 26262  017F78  006F FF7B FFF6     	movff	postinc2,tblptrl
 26263  017F7E  006F FF77 FFF7     	movff	postdec2,tblptrh
 26264  017F84                     	if	0	;tblptru may be non-zero
 26265  017F84                     	endif
 26266  017F84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26267  017F84  0E00               	movlw	low (__mediumconst shr (0+16))
 26268  017F86  6EF8               	movwf	tblptru,c
 26269  017F88                     	endif
 26270  017F88  0008               	tblrd		*
 26271  017F8A  50F5               	movf	tablat,w,c
 26272  017F8C  6E09               	movwf	(btemp+8)^0,c
 26273  017F8E  6A0A               	clrf	(btemp+9)^0,c
 26274  017F90  500B               	movf	(btemp+10)^0,w,c
 26275  017F92  2609               	addwf	(btemp+8)^0,f,c
 26276  017F94  500C               	movf	(btemp+11)^0,w,c
 26277  017F96  220A               	addwfc	(btemp+9)^0,f,c
 26278  017F98  500A               	movf	(btemp+9)^0,w,c
 26279  017F9A  E104               	bnz	u9080
 26280  017F9C  0E05               	movlw	5
 26281  017F9E  5C09               	subwf	(btemp+8)^0,w,c
 26282  017FA0  A0D8               	btfss	status,0,c
 26283  017FA2  D002               	goto	l10090
 26284  017FA4                     u9080:
 26285                           
 26286                           ;stkvar	_atoi$7316 @ sp[(-9)+4]
 26287  017FA4  0EFB               	movlw	-5
 26288  017FA6  6AE3               	clrf	plusw1,c
 26289  017FA8                     l10090:
 26290                           
 26291                           ;stkvar	_atoi$7316 @ sp[(-9)+4]
 26292  017FA8  0EFB               	movlw	-5
 26293  017FAA  50E3               	movf	plusw1,w,c
 26294  017FAC  6E0B               	movwf	(btemp+10)^0,c
 26295  017FAE  6A0C               	clrf	(btemp+11)^0,c
 26296                           
 26297                           ;stkvar	_atoi$7315 @ sp[(-9)+2]
 26298  017FB0  0EF9               	movlw	-7
 26299  017FB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26300  017FB8  0EFA               	movlw	-6
 26301  017FBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26302                           
 26303                           ;stkvar	_atoi$7315 @ sp[(-9)+2]
 26304  017FC0  0EF9               	movlw	-7
 26305  017FC2  006F FF8C  F001    	movff	plusw1,btemp
 26306  017FC8  0EFA               	movlw	-6
 26307  017FCA  50E3               	movf	plusw1,w,c
 26308  017FCC  1001               	iorwf	btemp^0,w,c
 26309  017FCE  B4D8               	btfsc	status,2,c
 26310  017FD0  D01F               	goto	l10100
 26311  017FD2  D79F               	goto	l10080
 26312  017FD4                     l10096:
 26313  017FD4  0E01               	movlw	1
 26314  017FD6  6E0B               	movwf	(btemp+10)^0,c
 26315  017FD8  0E00               	movlw	0
 26316  017FDA  6E0C               	movwf	(btemp+11)^0,c
 26317                           
 26318                           ;stkvar	_neg @ sp[(-9)+7]
 26319  017FDC  0EFE               	movlw	-2
 26320  017FDE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26321  017FE4  0EFF               	movlw	-1
 26322  017FE6  0060  F033  FFE3   	movff	btemp+11,plusw1
 26323  017FEC                     l10098:
 26324                           
 26325                           ;stkvar	_s @ sp[(-9)+-2]
 26326  017FEC  0EF5               	movlw	-11
 26327  017FEE  50E3               	movf	plusw1,w,c
 26328  017FF0  0F01               	addlw	1
 26329  017FF2  6E01               	movwf	btemp^0,c
 26330  017FF4  0EF5               	movlw	-11
 26331  017FF6  0060  F007  FFE3   	movff	btemp,plusw1
 26332  017FFC  6A01               	clrf	btemp^0,c
 26333  017FFE  0EF6               	movlw	-10
 26334  018000  50E3               	movf	plusw1,w,c
 26335  018002  2001               	addwfc	btemp^0,w,c
 26336  018004  6E01               	movwf	btemp^0,c
 26337  018006  0EF6               	movlw	-10
 26338  018008  0060  F007  FFE3   	movff	btemp,plusw1
 26339  01800E  D053               	goto	l10106
 26340  018010                     l10100:
 26341                           
 26342                           ;stkvar	_s @ sp[(-9)+-2]
 26343  018010  50E1               	movf	fsr1l,w,c
 26344  018012  0FF5               	addlw	-11
 26345  018014  6ED9               	movwf	fsr2l,c
 26346  018016  50E2               	movf	fsr1h,w,c
 26347  018018  6EDA               	movwf	fsr2h,c
 26348  01801A  0EFF               	movlw	255
 26349  01801C  22DA               	addwfc	fsr2h,f,c
 26350  01801E  006F FF7B FFF6     	movff	postinc2,tblptrl
 26351  018024  006F FF77 FFF7     	movff	postdec2,tblptrh
 26352  01802A                     	if	0	;tblptru may be non-zero
 26353  01802A                     	endif
 26354  01802A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26355  01802A  0E00               	movlw	low (__mediumconst shr (0+16))
 26356  01802C  6EF8               	movwf	tblptru,c
 26357  01802E                     	endif
 26358  01802E  0008               	tblrd		*
 26359  018030  50F5               	movf	tablat,w,c
 26360  018032  6E0B               	movwf	(btemp+10)^0,c
 26361  018034  6A0C               	clrf	(btemp+11)^0,c
 26362                           
 26363                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26364                           ; Switch size 1, requested type "simple"
 26365                           ; Number of cases is 1, Range of values is 0 to 0
 26366                           ; switch strategies available:
 26367                           ; Name         Instructions Cycles
 26368                           ; simple_byte            4     3 (average)
 26369                           ;	Chosen strategy is simple_byte
 26370  018036  500C               	movf	(btemp+11)^0,w,c
 26371  018038  0A00               	xorlw	0	; case 0
 26372  01803A  A4D8               	btfss	status,2,c
 26373  01803C  D03C               	goto	l10106
 26374                           
 26375                           ; Switch size 1, requested type "simple"
 26376                           ; Number of cases is 2, Range of values is 43 to 45
 26377                           ; switch strategies available:
 26378                           ; Name         Instructions Cycles
 26379                           ; simple_byte            7     4 (average)
 26380                           ;	Chosen strategy is simple_byte
 26381  01803E  500B               	movf	(btemp+10)^0,w,c
 26382  018040  0A2B               	xorlw	43	; case 43
 26383  018042  B4D8               	btfsc	status,2,c
 26384  018044  D7D3               	goto	l10098
 26385  018046  0A06               	xorlw	6	; case 45
 26386  018048  B4D8               	btfsc	status,2,c
 26387  01804A  D7C4               	goto	l10096
 26388  01804C  D034               	goto	l10106
 26389  01804E                     l10102:
 26390                           
 26391                           ;stkvar	_n @ sp[(-9)+5]
 26392  01804E  0EFC               	movlw	-4
 26393  018050  006F FF8C  F00B    	movff	plusw1,btemp+10
 26394  018056  0EFD               	movlw	-3
 26395  018058  006F FF8C  F00C    	movff	plusw1,btemp+11
 26396  01805E  0E0A               	movlw	10
 26397  018060  020B               	mulwf	(btemp+10)^0,c
 26398  018062  006F FFCC  F009    	movff	prodl,btemp+8
 26399  018068  006F FFD0  F00A    	movff	prodh,btemp+9
 26400  01806E  020C               	mulwf	(btemp+11)^0,c
 26401  018070  50F3               	movf	prodl,w,c
 26402  018072  260A               	addwf	(btemp+9)^0,f,c
 26403                           
 26404                           ;stkvar	_s @ sp[(-9)+-2]
 26405  018074  50E1               	movf	fsr1l,w,c
 26406  018076  0FF5               	addlw	-11
 26407  018078  6ED9               	movwf	fsr2l,c
 26408  01807A  50E2               	movf	fsr1h,w,c
 26409  01807C  6EDA               	movwf	fsr2h,c
 26410  01807E  0EFF               	movlw	255
 26411  018080  22DA               	addwfc	fsr2h,f,c
 26412  018082  006F FF7B FFF6     	movff	postinc2,tblptrl
 26413  018088  006F FF77 FFF7     	movff	postdec2,tblptrh
 26414  01808E                     	if	0	;tblptru may be non-zero
 26415  01808E                     	endif
 26416  01808E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26417  01808E  0E00               	movlw	low (__mediumconst shr (0+16))
 26418  018090  6EF8               	movwf	tblptru,c
 26419  018092                     	endif
 26420  018092  0008               	tblrd		*
 26421  018094  50F5               	movf	tablat,w,c
 26422  018096  5E09               	subwf	(btemp+8)^0,f,c
 26423  018098  0E00               	movlw	0
 26424  01809A  5A0A               	subwfb	(btemp+9)^0,f,c
 26425  01809C  0E30               	movlw	48
 26426  01809E  2609               	addwf	(btemp+8)^0,f,c
 26427  0180A0  0E00               	movlw	0
 26428  0180A2  220A               	addwfc	(btemp+9)^0,f,c
 26429                           
 26430                           ;stkvar	_n @ sp[(-9)+5]
 26431  0180A4  0EFC               	movlw	-4
 26432  0180A6  0060  F027  FFE3   	movff	btemp+8,plusw1
 26433  0180AC  0EFD               	movlw	-3
 26434  0180AE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26435  0180B4  D79B               	goto	l10098
 26436  0180B6                     l10106:
 26437  0180B6  0ED0               	movlw	208
 26438  0180B8  6E0B               	movwf	(btemp+10)^0,c
 26439  0180BA  0EFF               	movlw	255
 26440  0180BC  6E0C               	movwf	(btemp+11)^0,c
 26441                           
 26442                           ;stkvar	_s @ sp[(-9)+-2]
 26443  0180BE  50E1               	movf	fsr1l,w,c
 26444  0180C0  0FF5               	addlw	-11
 26445  0180C2  6ED9               	movwf	fsr2l,c
 26446  0180C4  50E2               	movf	fsr1h,w,c
 26447  0180C6  6EDA               	movwf	fsr2h,c
 26448  0180C8  0EFF               	movlw	255
 26449  0180CA  22DA               	addwfc	fsr2h,f,c
 26450  0180CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 26451  0180D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 26452  0180D8                     	if	0	;tblptru may be non-zero
 26453  0180D8                     	endif
 26454  0180D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26455  0180D8  0E00               	movlw	low (__mediumconst shr (0+16))
 26456  0180DA  6EF8               	movwf	tblptru,c
 26457  0180DC                     	endif
 26458  0180DC  0008               	tblrd		*
 26459  0180DE  50F5               	movf	tablat,w,c
 26460  0180E0  6E09               	movwf	(btemp+8)^0,c
 26461  0180E2  6A0A               	clrf	(btemp+9)^0,c
 26462  0180E4  500B               	movf	(btemp+10)^0,w,c
 26463  0180E6  2609               	addwf	(btemp+8)^0,f,c
 26464  0180E8  500C               	movf	(btemp+11)^0,w,c
 26465  0180EA  220A               	addwfc	(btemp+9)^0,f,c
 26466  0180EC  500A               	movf	(btemp+9)^0,w,c
 26467  0180EE  E106               	bnz	u9100
 26468  0180F0  0E0A               	movlw	10
 26469  0180F2  5C09               	subwf	(btemp+8)^0,w,c
 26470  0180F4  B0D8               	btfsc	status,0,c
 26471  0180F6  D002               	goto	u9100
 26472  0180F8  0E01               	movlw	1
 26473  0180FA  D001               	goto	u9110
 26474  0180FC                     u9100:
 26475  0180FC  0E00               	movlw	0
 26476  0180FE                     u9110:
 26477  0180FE  6E0B               	movwf	(btemp+10)^0,c
 26478  018100  6A0C               	clrf	(btemp+11)^0,c
 26479                           
 26480                           ;stkvar	_atoi$7317 @ sp[(-9)+0]
 26481  018102  0EF7               	movlw	-9
 26482  018104  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26483  01810A  0EF8               	movlw	-8
 26484  01810C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26485                           
 26486                           ;stkvar	_atoi$7317 @ sp[(-9)+0]
 26487  018112  0EF7               	movlw	-9
 26488  018114  006F FF8C  F001    	movff	plusw1,btemp
 26489  01811A  0EF8               	movlw	-8
 26490  01811C  50E3               	movf	plusw1,w,c
 26491  01811E  1001               	iorwf	btemp^0,w,c
 26492  018120  A4D8               	btfss	status,2,c
 26493  018122  D795               	goto	l10102
 26494                           
 26495                           ;stkvar	_neg @ sp[(-9)+7]
 26496  018124  0EFE               	movlw	-2
 26497  018126  006F FF8C  F001    	movff	plusw1,btemp
 26498  01812C  0EFF               	movlw	-1
 26499  01812E  50E3               	movf	plusw1,w,c
 26500  018130  1001               	iorwf	btemp^0,w,c
 26501  018132  A4D8               	btfss	status,2,c
 26502  018134  D00E               	goto	l10116
 26503                           
 26504                           ;stkvar	_n @ sp[(-9)+5]
 26505  018136  0EFC               	movlw	-4
 26506  018138  006F FF8C  F001    	movff	plusw1,btemp
 26507  01813E  1E01               	comf	btemp^0,f,c
 26508  018140  0EFD               	movlw	-3
 26509  018142  006F FF8C  F002    	movff	plusw1,btemp+1
 26510  018148  1E02               	comf	(btemp+1)^0,f,c
 26511  01814A  2A01               	incf	btemp^0,f,c
 26512  01814C  B4D8               	btfsc	status,2,c
 26513  01814E  2A02               	incf	(btemp+1)^0,f,c
 26514  018150  D008               	goto	l3391
 26515  018152                     l10116:
 26516                           
 26517                           ;stkvar	_n @ sp[(-9)+5]
 26518  018152  0EFC               	movlw	-4
 26519  018154  006F FF8C  F001    	movff	plusw1,btemp
 26520  01815A  0EFD               	movlw	-3
 26521  01815C  006F FF8C  F002    	movff	plusw1,btemp+1
 26522  018162                     l3391:
 26523                           
 26524                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 26525  018162  0EF5               	movlw	245
 26526  018164  26E1               	addwf	fsr1l,f,c
 26527  018166  0EFF               	movlw	255
 26528  018168  22E2               	addwfc	fsr1h,f,c
 26529  01816A  0012               	return		;funcret
 26530  01816C                     __end_of_atoi:
 26531                           	opt callstack 0
 26532                           
 26533 ;; *************** function _isspace *****************
 26534 ;; Defined at:
 26535 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 26536 ;; Parameters:    Size  Location     Type
 26537 ;;  c               2  [STACK] int 
 26538 ;; Auto vars:     Size  Location     Type
 26539 ;;		None
 26540 ;; Return value:  Size  Location     Type
 26541 ;;                  2  [STACK] int 
 26542 ;; Registers used:
 26543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 26544 ;; Tracked objects:
 26545 ;;		On entry : 0/0
 26546 ;;		On exit  : 0/0
 26547 ;;		Unchanged: 0/0
 26548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26553 ;;Total ram usage:        0 bytes
 26554 ;; Hardware stack levels used:    1
 26555 ;; Hardware stack levels required when called:   15
 26556 ;; This function calls:
 26557 ;;		Nothing
 26558 ;; This function is called by:
 26559 ;;		_atoi
 26560 ;; This function uses a reentrant model
 26561 ;;
 26562                           
 26563                           	psect	text99
 26564  01C3EC                     __ptext99:
 26565                           	opt callstack 0
 26566  01C3EC                     _isspace:
 26567                           	opt callstack 0
 26568                           
 26569                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26570  01C3EC  52E6               	movf	postinc1,f,c
 26571                           
 26572                           ;stkvar	_isspace$7366 @ sp[(-1)+0]
 26573                           
 26574                           ;incstack = 0
 26575 ;; hardware stack exceeded
 26576  01C3EE  0EFF               	movlw	-1
 26577  01C3F0  6AE3               	clrf	plusw1,c
 26578  01C3F2  2AE3               	incf	plusw1,f,c
 26579                           
 26580                           ;stkvar	_c @ sp[(-1)+-2]
 26581  01C3F4  0EFD               	movlw	-3
 26582  01C3F6  006F FF8C  F001    	movff	plusw1,btemp
 26583  01C3FC  0E20               	movlw	32
 26584  01C3FE  1801               	xorwf	btemp^0,w,c
 26585  01C400  E104               	bnz	u7970
 26586  01C402  0EFE               	movlw	-2
 26587  01C404  50E3               	movf	plusw1,w,c
 26588  01C406  B4D8               	btfsc	status,2,c
 26589  01C408  D012               	goto	l9500
 26590  01C40A                     u7970:
 26591                           
 26592                           ;stkvar	_c @ sp[(-1)+-2]
 26593  01C40A  0EFD               	movlw	-3
 26594  01C40C  50E3               	movf	plusw1,w,c
 26595  01C40E  0FF7               	addlw	247
 26596  01C410  6E0B               	movwf	(btemp+10)^0,c
 26597  01C412  0EFE               	movlw	-2
 26598  01C414  006F FF8C  F00C    	movff	plusw1,btemp+11
 26599  01C41A  0EFF               	movlw	255
 26600  01C41C  220C               	addwfc	(btemp+11)^0,f,c
 26601  01C41E  500C               	movf	(btemp+11)^0,w,c
 26602  01C420  E104               	bnz	u7980
 26603  01C422  0E05               	movlw	5
 26604  01C424  5C0B               	subwf	(btemp+10)^0,w,c
 26605  01C426  A0D8               	btfss	status,0,c
 26606  01C428  D002               	goto	l9500
 26607  01C42A                     u7980:
 26608                           
 26609                           ;stkvar	_isspace$7366 @ sp[(-1)+0]
 26610  01C42A  0EFF               	movlw	-1
 26611  01C42C  6AE3               	clrf	plusw1,c
 26612  01C42E                     l9500:
 26613                           
 26614                           ;stkvar	_isspace$7366 @ sp[(-1)+0]
 26615  01C42E  0EFF               	movlw	-1
 26616  01C430  50E3               	movf	plusw1,w,c
 26617  01C432  6E01               	movwf	btemp^0,c
 26618  01C434  6A02               	clrf	(btemp+1)^0,c
 26619                           
 26620                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 26621  01C436  52E5               	movf	postdec1,f,c
 26622  01C438  52E5               	movf	postdec1,f,c
 26623  01C43A  52E5               	movf	postdec1,f,c
 26624  01C43C  0012               	return		;funcret
 26625  01C43E                     __end_of_isspace:
 26626                           	opt callstack 0
 26627                           
 26628 ;; *************** function _isdigit *****************
 26629 ;; Defined at:
 26630 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 26631 ;; Parameters:    Size  Location     Type
 26632 ;;  c               2  [STACK] int 
 26633 ;; Auto vars:     Size  Location     Type
 26634 ;;		None
 26635 ;; Return value:  Size  Location     Type
 26636 ;;                  2  [STACK] int 
 26637 ;; Registers used:
 26638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 26639 ;; Tracked objects:
 26640 ;;		On entry : 0/0
 26641 ;;		On exit  : 0/0
 26642 ;;		Unchanged: 0/0
 26643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26648 ;;Total ram usage:        0 bytes
 26649 ;; Hardware stack levels used:    1
 26650 ;; Hardware stack levels required when called:   15
 26651 ;; This function calls:
 26652 ;;		Nothing
 26653 ;; This function is called by:
 26654 ;;		_vfpfcnvrt
 26655 ;;		_atoi
 26656 ;; This function uses a reentrant model
 26657 ;;
 26658                           
 26659                           	psect	text100
 26660  01CC0C                     __ptext100:
 26661                           	opt callstack 0
 26662  01CC0C                     _isdigit:
 26663                           	opt callstack 0
 26664                           
 26665                           ;stkvar	_c @ sp[(0)+-2]
 26666                           
 26667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26668                           ;incstack = 0
 26669 ;; hardware stack exceeded
 26670  01CC0C  0EFE               	movlw	-2
 26671  01CC0E  50E3               	movf	plusw1,w,c
 26672  01CC10  0FD0               	addlw	208
 26673  01CC12  6E0B               	movwf	(btemp+10)^0,c
 26674  01CC14  0EFF               	movlw	-1
 26675  01CC16  006F FF8C  F00C    	movff	plusw1,btemp+11
 26676  01CC1C  0EFF               	movlw	255
 26677  01CC1E  220C               	addwfc	(btemp+11)^0,f,c
 26678  01CC20  500C               	movf	(btemp+11)^0,w,c
 26679  01CC22  E106               	bnz	u6820
 26680  01CC24  0E0A               	movlw	10
 26681  01CC26  5C0B               	subwf	(btemp+10)^0,w,c
 26682  01CC28  B0D8               	btfsc	status,0,c
 26683  01CC2A  D002               	goto	u6820
 26684  01CC2C  0E01               	movlw	1
 26685  01CC2E  D001               	goto	u6830
 26686  01CC30                     u6820:
 26687  01CC30  0E00               	movlw	0
 26688  01CC32                     u6830:
 26689  01CC32  6E01               	movwf	btemp^0,c
 26690  01CC34  6A02               	clrf	(btemp+1)^0,c
 26691                           
 26692                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 26693  01CC36  52E5               	movf	postdec1,f,c
 26694  01CC38  52E5               	movf	postdec1,f,c
 26695  01CC3A  0012               	return		;funcret
 26696  01CC3C                     __end_of_isdigit:
 26697                           	opt callstack 0
 26698                           
 26699 ;; *************** function _set_vterm *****************
 26700 ;; Defined at:
 26701 ;;		line 107 in file "mconfig.c"
 26702 ;; Parameters:    Size  Location     Type
 26703 ;;  vterm           1  [STACK] const unsigned char 
 26704 ;; Auto vars:     Size  Location     Type
 26705 ;;		None
 26706 ;; Return value:  Size  Location     Type
 26707 ;;                  1  [STACK] unsigned char 
 26708 ;; Registers used:
 26709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 26710 ;; Tracked objects:
 26711 ;;		On entry : 0/1
 26712 ;;		On exit  : 0/0
 26713 ;;		Unchanged: 0/0
 26714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26719 ;;Total ram usage:        0 bytes
 26720 ;; Hardware stack levels used:    1
 26721 ;; Hardware stack levels required when called:   15
 26722 ;; This function calls:
 26723 ;;		Nothing
 26724 ;; This function is called by:
 26725 ;;		_main
 26726 ;;		_check_help
 26727 ;; This function uses a reentrant model
 26728 ;;
 26729                           
 26730                           	psect	text101
 26731  01D12E                     __ptext101:
 26732                           	opt callstack 0
 26733  01D12E                     _set_vterm:
 26734                           	opt callstack 15
 26735                           
 26736                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 26737                           ;stkvar	_vterm @ sp[(0)+-1]
 26738                           
 26739                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26740                           ;incstack = 0
 26741  01D12E  0EFF               	movlw	-1
 26742  01D130  006F FF8C  F00C    	movff	plusw1,btemp+11
 26743  01D136  0E03               	movlw	3
 26744  01D138  160C               	andwf	(btemp+11)^0,f,c
 26745  01D13A  EE23  F022         	lfsr	2,_D+480
 26746  01D13E  50DF               	movf	223,w,c
 26747  01D140  180C               	xorwf	(btemp+11)^0,w,c
 26748  01D142  0BFE               	andlw	-2
 26749  01D144  180C               	xorwf	(btemp+11)^0,w,c
 26750  01D146  6EDF               	movwf	223,c
 26751                           
 26752                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 26753  01D148  52E5               	movf	postdec1,f,c
 26754  01D14A  0012               	return		;funcret
 26755  01D14C                     __end_of_set_vterm:
 26756                           	opt callstack 0
 26757                           
 26758 ;; *************** function _set_temp_display_help *****************
 26759 ;; Defined at:
 26760 ;;		line 211 in file "mconfig.c"
 26761 ;; Parameters:    Size  Location     Type
 26762 ;;  new_response    1  [STACK] const enum E16677
 26763 ;; Auto vars:     Size  Location     Type
 26764 ;;		None
 26765 ;; Return value:  Size  Location     Type
 26766 ;;                  1  [STACK] enum E16677
 26767 ;; Registers used:
 26768 ;;		wreg, fsr1l, fsr1h
 26769 ;; Tracked objects:
 26770 ;;		On entry : 0/1
 26771 ;;		On exit  : 3F/1
 26772 ;;		Unchanged: 0/0
 26773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26778 ;;Total ram usage:        0 bytes
 26779 ;; Hardware stack levels used:    1
 26780 ;; Hardware stack levels required when called:   15
 26781 ;; This function calls:
 26782 ;;		Nothing
 26783 ;; This function is called by:
 26784 ;;		_check_help
 26785 ;; This function uses a reentrant model
 26786 ;;
 26787                           
 26788                           	psect	text102
 26789  01D298                     __ptext102:
 26790                           	opt callstack 0
 26791  01D298                     _set_temp_display_help:
 26792                           	opt callstack 14
 26793                           
 26794                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 26795                           
 26796                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26797                           ;incstack = 0
 26798  01D298  0101               	movlb	1	; () banked
 26799  01D29A  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 26800                           
 26801                           ; BSR set to: 1
 26802                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 26803                           ;stkvar	_new_response_info @ sp[(0)+-1]
 26804  01D29C  0EFF               	movlw	-1
 26805  01D29E  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 26806                           
 26807                           ; BSR set to: 1
 26808                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 26809  01D2A4  52E5               	movf	postdec1,f,c
 26810  01D2A6  0012               	return		;funcret
 26811  01D2A8                     __end_of_set_temp_display_help:
 26812                           	opt callstack 0
 26813                           
 26814 ;; *************** function _set_display_info *****************
 26815 ;; Defined at:
 26816 ;;		line 200 in file "mconfig.c"
 26817 ;; Parameters:    Size  Location     Type
 26818 ;;  new_response    1  [STACK] const enum E16677
 26819 ;; Auto vars:     Size  Location     Type
 26820 ;;		None
 26821 ;; Return value:  Size  Location     Type
 26822 ;;                  1  [STACK] enum E17160
 26823 ;; Registers used:
 26824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26825 ;; Tracked objects:
 26826 ;;		On entry : 0/1
 26827 ;;		On exit  : 0/0
 26828 ;;		Unchanged: 0/0
 26829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26834 ;;Total ram usage:        0 bytes
 26835 ;; Hardware stack levels used:    1
 26836 ;; Hardware stack levels required when called:   16
 26837 ;; This function calls:
 26838 ;;		_TimerDone
 26839 ;; This function is called by:
 26840 ;;		_main
 26841 ;;		_check_help
 26842 ;; This function uses a reentrant model
 26843 ;;
 26844                           
 26845                           	psect	text103
 26846  01D14C                     __ptext103:
 26847                           	opt callstack 0
 26848  01D14C                     _set_display_info:
 26849                           	opt callstack 14
 26850                           
 26851                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 26852                           
 26853                           ; BSR set to: 1
 26854                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26855                           ;incstack = 0
 26856  01D14C  0E07               	movlw	7
 26857  01D14E  6EE6               	movwf	postinc1,c
 26858  01D150  ECA1  F0E6         	call	_TimerDone	;wreg free
 26859  01D154  5001               	movf	btemp^0,w,c
 26860  01D156  B4D8               	btfsc	status,2,c
 26861  01D158  D006               	goto	l1850
 26862                           
 26863                           ;mconfig.c: 205:   old_info = V.response.info;
 26864  01D15A  0101               	movlb	1	; () banked
 26865  01D15C  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 26866                           
 26867                           ; BSR set to: 1
 26868                           ;mconfig.c: 206:   V.response.info = new_response_info;
 26869                           ;stkvar	_new_response_info @ sp[(0)+-1]
 26870  01D15E  0EFF               	movlw	-1
 26871  01D160  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 26872  01D166                     l1850:
 26873                           
 26874                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 26875  01D166  52E5               	movf	postdec1,f,c
 26876  01D168  0012               	return		;funcret
 26877  01D16A                     __end_of_set_display_info:
 26878                           	opt callstack 0
 26879                           
 26880 ;; *************** function _mode_lamp_dim *****************
 26881 ;; Defined at:
 26882 ;;		line 13 in file "mconfig.c"
 26883 ;; Parameters:    Size  Location     Type
 26884 ;;  level           2  [STACK] const unsigned short 
 26885 ;; Auto vars:     Size  Location     Type
 26886 ;;		None
 26887 ;; Return value:  Size  Location     Type
 26888 ;;                  1  [STACK] void 
 26889 ;; Registers used:
 26890 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 26891 ;; Tracked objects:
 26892 ;;		On entry : 0/1
 26893 ;;		On exit  : 0/0
 26894 ;;		Unchanged: 0/0
 26895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26900 ;;Total ram usage:        0 bytes
 26901 ;; Hardware stack levels used:    1
 26902 ;; Hardware stack levels required when called:   16
 26903 ;; This function calls:
 26904 ;;		_PWM8_LoadDutyValue
 26905 ;; This function is called by:
 26906 ;;		_main
 26907 ;;		_check_help
 26908 ;; This function uses a reentrant model
 26909 ;;
 26910                           
 26911                           	psect	text104
 26912  01D1BE                     __ptext104:
 26913                           	opt callstack 0
 26914  01D1BE                     _mode_lamp_dim:
 26915                           	opt callstack 14
 26916                           
 26917                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 26918                           ;stkvar	_level @ sp[(0)+-2]
 26919                           
 26920                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26921                           ;incstack = 0
 26922  01D1BE  0EFE               	movlw	-2
 26923  01D1C0  006F FF8F FFE6     	movff	plusw1,postinc1
 26924  01D1C6  006F FF8F FFE6     	movff	plusw1,postinc1
 26925  01D1CC  ECB3  F0E3         	call	_PWM8_LoadDutyValue	;wreg free
 26926                           
 26927                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 26928  01D1D0  52E5               	movf	postdec1,f,c
 26929  01D1D2  52E5               	movf	postdec1,f,c
 26930  01D1D4  0012               	return		;funcret
 26931  01D1D6                     __end_of_mode_lamp_dim:
 26932                           	opt callstack 0
 26933                           
 26934 ;; *************** function _mode_lamp_bright *****************
 26935 ;; Defined at:
 26936 ;;		line 18 in file "mconfig.c"
 26937 ;; Parameters:    Size  Location     Type
 26938 ;;		None
 26939 ;; Auto vars:     Size  Location     Type
 26940 ;;		None
 26941 ;; Return value:  Size  Location     Type
 26942 ;;                  1  [STACK] void 
 26943 ;; Registers used:
 26944 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 26945 ;; Tracked objects:
 26946 ;;		On entry : 0/0
 26947 ;;		On exit  : 0/0
 26948 ;;		Unchanged: 0/0
 26949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26954 ;;Total ram usage:        0 bytes
 26955 ;; Hardware stack levels used:    1
 26956 ;; Hardware stack levels required when called:   16
 26957 ;; This function calls:
 26958 ;;		_PWM8_LoadDutyValue
 26959 ;; This function is called by:
 26960 ;;		_check_help
 26961 ;; This function uses a reentrant model
 26962 ;;
 26963                           
 26964                           	psect	text105
 26965  01D2C6                     __ptext105:
 26966                           	opt callstack 0
 26967  01D2C6                     _mode_lamp_bright:
 26968                           	opt callstack 13
 26969                           
 26970                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 26971                           
 26972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26973                           ;incstack = 0
 26974  01D2C6  0E2C               	movlw	44
 26975  01D2C8  6EE6               	movwf	postinc1,c
 26976  01D2CA  0E01               	movlw	1
 26977  01D2CC  6EE6               	movwf	postinc1,c
 26978  01D2CE  ECB3  F0E3         	call	_PWM8_LoadDutyValue	;wreg free
 26979                           
 26980                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 26981  01D2D2  0012               	return		;funcret
 26982  01D2D4                     __end_of_mode_lamp_bright:
 26983                           	opt callstack 0
 26984                           
 26985 ;; *************** function _PWM8_LoadDutyValue *****************
 26986 ;; Defined at:
 26987 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 26988 ;; Parameters:    Size  Location     Type
 26989 ;;  dutyValue       2  [STACK] unsigned short 
 26990 ;; Auto vars:     Size  Location     Type
 26991 ;;		None
 26992 ;; Return value:  Size  Location     Type
 26993 ;;                  1  [STACK] void 
 26994 ;; Registers used:
 26995 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 26996 ;; Tracked objects:
 26997 ;;		On entry : 0/1
 26998 ;;		On exit  : 0/0
 26999 ;;		Unchanged: 0/0
 27000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27005 ;;Total ram usage:        0 bytes
 27006 ;; Hardware stack levels used:    1
 27007 ;; Hardware stack levels required when called:   15
 27008 ;; This function calls:
 27009 ;;		Nothing
 27010 ;; This function is called by:
 27011 ;;		_mode_lamp_dim
 27012 ;;		_mode_lamp_bright
 27013 ;; This function uses a reentrant model
 27014 ;;
 27015                           
 27016                           	psect	text106
 27017  01C766                     __ptext106:
 27018                           	opt callstack 0
 27019  01C766                     _PWM8_LoadDutyValue:
 27020                           	opt callstack 14
 27021                           
 27022                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 27023                           ;stkvar	_dutyValue @ sp[(0)+-2]
 27024                           
 27025                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27026                           ;incstack = 0
 27027  01C766  0EFE               	movlw	-2
 27028  01C768  006F FF8C  F00B    	movff	plusw1,btemp+10
 27029  01C76E  0EFF               	movlw	-1
 27030  01C770  006F FF8C  F00C    	movff	plusw1,btemp+11
 27031  01C776  90D8               	bcf	status,0,c
 27032  01C778  320C               	rrcf	(btemp+11)^0,f,c
 27033  01C77A  320B               	rrcf	(btemp+10)^0,f,c
 27034  01C77C  90D8               	bcf	status,0,c
 27035  01C77E  320C               	rrcf	(btemp+11)^0,f,c
 27036  01C780  320B               	rrcf	(btemp+10)^0,f,c
 27037  01C782  500B               	movf	(btemp+10)^0,w,c
 27038  01C784  6E61               	movwf	97,c	;volatile
 27039                           
 27040                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 27041                           ;stkvar	_dutyValue @ sp[(0)+-2]
 27042  01C786  0EFE               	movlw	-2
 27043  01C788  006F FF8C  F00C    	movff	plusw1,btemp+11
 27044  01C78E  0E03               	movlw	3
 27045  01C790  160C               	andwf	(btemp+11)^0,f,c
 27046  01C792  0E06               	movlw	6
 27047  01C794  6E01               	movwf	btemp^0,c
 27048  01C796                     u9985:
 27049  01C796  90D8               	bcf	status,0,c
 27050  01C798  360C               	rlcf	(btemp+11)^0,f,c
 27051  01C79A  2E01               	decfsz	btemp^0,f,c
 27052  01C79C  D7FC               	goto	u9985
 27053  01C79E  500C               	movf	(btemp+11)^0,w,c
 27054  01C7A0  6E60               	movwf	96,c	;volatile
 27055                           
 27056                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 27057  01C7A2  52E5               	movf	postdec1,f,c
 27058  01C7A4  52E5               	movf	postdec1,f,c
 27059  01C7A6  0012               	return		;funcret
 27060  01C7A8                     __end_of_PWM8_LoadDutyValue:
 27061                           	opt callstack 0
 27062                           
 27063 ;; *************** function _help_button *****************
 27064 ;; Defined at:
 27065 ;;		line 26 in file "mconfig.c"
 27066 ;; Parameters:    Size  Location     Type
 27067 ;;		None
 27068 ;; Auto vars:     Size  Location     Type
 27069 ;;		None
 27070 ;; Return value:  Size  Location     Type
 27071 ;;                  1  [STACK] _Bool 
 27072 ;; Registers used:
 27073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27074 ;; Tracked objects:
 27075 ;;		On entry : 0/1
 27076 ;;		On exit  : 0/0
 27077 ;;		Unchanged: 0/0
 27078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27083 ;;Total ram usage:        0 bytes
 27084 ;; Hardware stack levels used:    1
 27085 ;; Hardware stack levels required when called:   16
 27086 ;; This function calls:
 27087 ;;		_StartTimer
 27088 ;;		_TimerDone
 27089 ;; This function is called by:
 27090 ;;		_check_help
 27091 ;; This function uses a reentrant model
 27092 ;;
 27093                           
 27094                           	psect	text107
 27095  01C9A0                     __ptext107:
 27096                           	opt callstack 0
 27097  01C9A0                     _help_button:
 27098                           	opt callstack 13
 27099                           
 27100                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 27101                           
 27102                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27103                           ;incstack = 0
 27104  01C9A0  B0CB               	btfsc	203,0,c	;volatile
 27105  01C9A2  D00C               	goto	l1793
 27106                           
 27107                           ;mconfig.c: 29:   V.help = 1;
 27108  01C9A4  0101               	movlb	1	; () banked
 27109  01C9A6  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 27110                           
 27111                           ; BSR set to: 1
 27112                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 27113  01C9A8  0E08               	movlw	8
 27114  01C9AA  6EE6               	movwf	postinc1,c
 27115  01C9AC  ECA1  F0E6         	call	_TimerDone	;wreg free
 27116  01C9B0  5001               	movf	btemp^0,w,c
 27117  01C9B2  B4D8               	btfsc	status,2,c
 27118  01C9B4  D003               	goto	l1793
 27119                           
 27120                           ;mconfig.c: 31:    return 1;
 27121  01C9B6  0E01               	movlw	1
 27122  01C9B8  6E01               	movwf	btemp^0,c
 27123  01C9BA  0012               	return	
 27124  01C9BC                     l1793:
 27125                           
 27126                           ;mconfig.c: 34:  if (!V.help)
 27127  01C9BC  0101               	movlb	1	; () banked
 27128  01C9BE  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 27129  01C9C0  D008               	goto	l11448
 27130                           
 27131                           ; BSR set to: 1
 27132                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 27133  01C9C2  0E2C               	movlw	44
 27134  01C9C4  6EE6               	movwf	postinc1,c
 27135  01C9C6  0E01               	movlw	1
 27136  01C9C8  6EE6               	movwf	postinc1,c
 27137  01C9CA  0E08               	movlw	8
 27138  01C9CC  6EE6               	movwf	postinc1,c
 27139  01C9CE  EC14  F0E4         	call	_StartTimer	;wreg free
 27140  01C9D2                     l11448:
 27141                           
 27142                           ;mconfig.c: 37:  return 0;
 27143  01C9D2  0E00               	movlw	0
 27144  01C9D4  6E01               	movwf	btemp^0,c
 27145                           
 27146                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 27147  01C9D6  0012               	return		;funcret
 27148  01C9D8                     __end_of_help_button:
 27149                           	opt callstack 0
 27150                           
 27151 ;; *************** function _TimerDone *****************
 27152 ;; Defined at:
 27153 ;;		line 20 in file "timers.c"
 27154 ;; Parameters:    Size  Location     Type
 27155 ;;  timer           1  [STACK] const unsigned char 
 27156 ;; Auto vars:     Size  Location     Type
 27157 ;;		None
 27158 ;; Return value:  Size  Location     Type
 27159 ;;                  1  [STACK] _Bool 
 27160 ;; Registers used:
 27161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 27162 ;; Tracked objects:
 27163 ;;		On entry : 0/1
 27164 ;;		On exit  : 0/0
 27165 ;;		Unchanged: 0/0
 27166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27171 ;;Total ram usage:        0 bytes
 27172 ;; Hardware stack levels used:    1
 27173 ;; Hardware stack levels required when called:   15
 27174 ;; This function calls:
 27175 ;;		Nothing
 27176 ;; This function is called by:
 27177 ;;		_main
 27178 ;;		_WaitMs
 27179 ;;		_help_button
 27180 ;;		_check_help
 27181 ;;		_set_display_info
 27182 ;;		_update_adc_result
 27183 ;;		_esr_check
 27184 ;; This function uses a reentrant model
 27185 ;;
 27186                           
 27187                           	psect	text108
 27188  01CD42                     __ptext108:
 27189                           	opt callstack 0
 27190  01CD42                     _TimerDone:
 27191                           	opt callstack 14
 27192                           
 27193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27194                           ;incstack = 0
 27195  01CD42  0004               	clrwdt		;# 
 27196                           
 27197                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 27198                           ;stkvar	_timer @ sp[(0)+-1]
 27199  01CD44  0EFF               	movlw	-1
 27200  01CD46  50E3               	movf	plusw1,w,c
 27201  01CD48  0D02               	mullw	2
 27202  01CD4A  0EA7               	movlw	low _tickCount
 27203  01CD4C  24F3               	addwf	243,w,c
 27204  01CD4E  6ED9               	movwf	fsr2l,c
 27205  01CD50  0E02               	movlw	high _tickCount
 27206  01CD52  20F4               	addwfc	prodh,w,c
 27207  01CD54  6EDA               	movwf	fsr2h,c
 27208  01CD56  50DE               	movf	postinc2,w,c
 27209  01CD58  10DE               	iorwf	postinc2,w,c
 27210  01CD5A  A4D8               	btfss	status,2,c
 27211  01CD5C  D002               	goto	l10534
 27212                           
 27213                           ;timers.c: 24:   return 1;
 27214  01CD5E  0E01               	movlw	1
 27215  01CD60  D001               	goto	L32
 27216  01CD62                     l10534:
 27217                           
 27218                           ;timers.c: 26:  return 0;
 27219  01CD62  0E00               	movlw	0
 27220  01CD64                     L32:
 27221  01CD64  6E01               	movwf	btemp^0,c
 27222                           
 27223                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 27224  01CD66  52E5               	movf	postdec1,f,c
 27225  01CD68  0012               	return		;funcret
 27226  01CD6A                     __end_of_TimerDone:
 27227                           	opt callstack 0
 27228                           
 27229 ;; *************** function _StartTimer *****************
 27230 ;; Defined at:
 27231 ;;		line 12 in file "timers.c"
 27232 ;; Parameters:    Size  Location     Type
 27233 ;;  timer           1  [STACK] const unsigned char 
 27234 ;;  count           2  [STACK] const unsigned short 
 27235 ;; Auto vars:     Size  Location     Type
 27236 ;;		None
 27237 ;; Return value:  Size  Location     Type
 27238 ;;                  1  [STACK] void 
 27239 ;; Registers used:
 27240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27241 ;; Tracked objects:
 27242 ;;		On entry : 0/0
 27243 ;;		On exit  : 0/0
 27244 ;;		Unchanged: 0/0
 27245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27250 ;;Total ram usage:        0 bytes
 27251 ;; Hardware stack levels used:    1
 27252 ;; Hardware stack levels required when called:   15
 27253 ;; This function calls:
 27254 ;;		Nothing
 27255 ;; This function is called by:
 27256 ;;		_main
 27257 ;;		_WaitMs
 27258 ;;		_help_button
 27259 ;;		_check_help
 27260 ;;		_update_adc_result
 27261 ;;		_calc_bsoc
 27262 ;;		_esr_check
 27263 ;; This function uses a reentrant model
 27264 ;;
 27265                           
 27266                           	psect	text109
 27267  01C828                     __ptext109:
 27268                           	opt callstack 0
 27269  01C828                     _StartTimer:
 27270                           	opt callstack 0
 27271                           
 27272                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 27273                           ;stkvar	_count @ sp[(0)+-3]
 27274                           
 27275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27276                           ;incstack = 0
 27277 ;; hardware stack exceeded
 27278  01C828  0EFD               	movlw	-3
 27279  01C82A  006F FF8C  F00B    	movff	plusw1,btemp+10
 27280  01C830  0EFE               	movlw	-2
 27281  01C832  006F FF8C  F00C    	movff	plusw1,btemp+11
 27282  01C838  90D8               	bcf	status,0,c
 27283  01C83A  340B               	rlcf	(btemp+10)^0,w,c
 27284  01C83C  6E09               	movwf	(btemp+8)^0,c
 27285  01C83E  340C               	rlcf	(btemp+11)^0,w,c
 27286  01C840  6E0A               	movwf	(btemp+9)^0,c
 27287                           
 27288                           ;stkvar	_timer @ sp[(0)+-1]
 27289  01C842  0EFF               	movlw	-1
 27290  01C844  50E3               	movf	plusw1,w,c
 27291  01C846  0D02               	mullw	2
 27292  01C848  0EA7               	movlw	low _tickCount
 27293  01C84A  24F3               	addwf	243,w,c
 27294  01C84C  6ED9               	movwf	fsr2l,c
 27295  01C84E  0E02               	movlw	high _tickCount
 27296  01C850  20F4               	addwfc	prodh,w,c
 27297  01C852  6EDA               	movwf	fsr2h,c
 27298  01C854  0060  F027  FFDE   	movff	btemp+8,postinc2
 27299  01C85A  0060  F02B  FFDD   	movff	btemp+9,postdec2
 27300                           
 27301                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 27302  01C860  52E5               	movf	postdec1,f,c
 27303  01C862  52E5               	movf	postdec1,f,c
 27304  01C864  52E5               	movf	postdec1,f,c
 27305  01C866  0012               	return		;funcret
 27306  01C868                     __end_of_StartTimer:
 27307                           	opt callstack 0
 27308                           
 27309 ;; *************** function _display_info *****************
 27310 ;; Defined at:
 27311 ;;		line 190 in file "mconfig.c"
 27312 ;; Parameters:    Size  Location     Type
 27313 ;;		None
 27314 ;; Auto vars:     Size  Location     Type
 27315 ;;		None
 27316 ;; Return value:  Size  Location     Type
 27317 ;;                  1  [STACK] enum E16677
 27318 ;; Registers used:
 27319 ;;		btemp
 27320 ;; Tracked objects:
 27321 ;;		On entry : 0/1
 27322 ;;		On exit  : 0/0
 27323 ;;		Unchanged: 0/0
 27324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27329 ;;Total ram usage:        0 bytes
 27330 ;; Hardware stack levels used:    1
 27331 ;; Hardware stack levels required when called:   15
 27332 ;; This function calls:
 27333 ;;		Nothing
 27334 ;; This function is called by:
 27335 ;;		_check_help
 27336 ;; This function uses a reentrant model
 27337 ;;
 27338                           
 27339                           	psect	text110
 27340  01D354                     __ptext110:
 27341                           	opt callstack 0
 27342  01D354                     _display_info:
 27343                           	opt callstack 14
 27344                           
 27345                           ;mconfig.c: 192:  return V.response.info;
 27346                           
 27347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27348                           ;incstack = 0
 27349  01D354  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 27350                           
 27351                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 27352  01D35A  0012               	return		;funcret
 27353  01D35C                     __end_of_display_info:
 27354                           	opt callstack 0
 27355                           
 27356 ;; *************** function _display_help *****************
 27357 ;; Defined at:
 27358 ;;		line 195 in file "mconfig.c"
 27359 ;; Parameters:    Size  Location     Type
 27360 ;;		None
 27361 ;; Auto vars:     Size  Location     Type
 27362 ;;		None
 27363 ;; Return value:  Size  Location     Type
 27364 ;;                  1  [STACK] enum E16677
 27365 ;; Registers used:
 27366 ;;		btemp
 27367 ;; Tracked objects:
 27368 ;;		On entry : 3F/1
 27369 ;;		On exit  : 0/0
 27370 ;;		Unchanged: 0/0
 27371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27376 ;;Total ram usage:        0 bytes
 27377 ;; Hardware stack levels used:    1
 27378 ;; Hardware stack levels required when called:   15
 27379 ;; This function calls:
 27380 ;;		Nothing
 27381 ;; This function is called by:
 27382 ;;		_check_help
 27383 ;; This function uses a reentrant model
 27384 ;;
 27385                           
 27386                           	psect	text111
 27387  01D35C                     __ptext111:
 27388                           	opt callstack 0
 27389  01D35C                     _display_help:
 27390                           	opt callstack 14
 27391                           
 27392                           ;mconfig.c: 197:  return V.response.help_temp;
 27393                           
 27394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27395                           ;incstack = 0
 27396  01D35C  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 27397                           
 27398                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 27399  01D362  0012               	return		;funcret
 27400  01D364                     __end_of_display_help:
 27401                           	opt callstack 0
 27402                           
 27403 ;; *************** function _check_enter_button *****************
 27404 ;; Defined at:
 27405 ;;		line 49 in file "hid.c"
 27406 ;; Parameters:    Size  Location     Type
 27407 ;;  h               1  [STACK] PTR struct H_data
 27408 ;;		 -> H(9), 
 27409 ;; Auto vars:     Size  Location     Type
 27410 ;;		None
 27411 ;; Return value:  Size  Location     Type
 27412 ;;                  1  [STACK] _Bool 
 27413 ;; Registers used:
 27414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 27415 ;; Tracked objects:
 27416 ;;		On entry : 0/0
 27417 ;;		On exit  : 0/0
 27418 ;;		Unchanged: 0/0
 27419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27424 ;;Total ram usage:        0 bytes
 27425 ;; Hardware stack levels used:    1
 27426 ;; Hardware stack levels required when called:   15
 27427 ;; This function calls:
 27428 ;;		Nothing
 27429 ;; This function is called by:
 27430 ;;		_main
 27431 ;; This function uses a reentrant model
 27432 ;;
 27433                           
 27434                           	psect	text112
 27435  01C868                     __ptext112:
 27436                           	opt callstack 0
 27437  01C868                     _check_enter_button:
 27438                           	opt callstack 15
 27439                           
 27440                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 27441                           ;stkvar	_h @ sp[(0)+-1]
 27442                           
 27443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27444                           ;incstack = 0
 27445  01C868  0EFF               	movlw	-1
 27446  01C86A  50E3               	movf	plusw1,w,c
 27447  01C86C  6ED9               	movwf	fsr2l,c
 27448  01C86E  6ADA               	clrf	fsr2h,c
 27449  01C870  0E04               	movlw	4
 27450  01C872  26D9               	addwf	fsr2l,f,c
 27451  01C874  50DF               	movf	indf2,w,c
 27452  01C876  A4D8               	btfss	status,2,c
 27453  01C878  D013               	goto	l12296
 27454                           
 27455                           ;stkvar	_h @ sp[(0)+-1]
 27456  01C87A  0EFF               	movlw	-1
 27457  01C87C  50E3               	movf	plusw1,w,c
 27458  01C87E  6ED9               	movwf	fsr2l,c
 27459  01C880  6ADA               	clrf	fsr2h,c
 27460  01C882  0E05               	movlw	5
 27461  01C884  26D9               	addwf	fsr2l,f,c
 27462  01C886  50DF               	movf	indf2,w,c
 27463  01C888  A4D8               	btfss	status,2,c
 27464  01C88A  D00A               	goto	l12296
 27465                           
 27466                           ;hid.c: 52:   h->wait_enter = 1;
 27467                           ;stkvar	_h @ sp[(0)+-1]
 27468  01C88C  0EFF               	movlw	-1
 27469  01C88E  50E3               	movf	plusw1,w,c
 27470  01C890  6ED9               	movwf	fsr2l,c
 27471  01C892  6ADA               	clrf	fsr2h,c
 27472  01C894  0E04               	movlw	4
 27473  01C896  26D9               	addwf	fsr2l,f,c
 27474  01C898  0E01               	movlw	1
 27475  01C89A  6EDF               	movwf	indf2,c
 27476                           
 27477                           ;hid.c: 53:   return 1;
 27478  01C89C  0E01               	movlw	1
 27479  01C89E  D001               	goto	L33
 27480  01C8A0                     l12296:
 27481                           
 27482                           ;hid.c: 55:  return 0;
 27483  01C8A0  0E00               	movlw	0
 27484  01C8A2                     L33:
 27485  01C8A2  6E01               	movwf	btemp^0,c
 27486                           
 27487                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 27488  01C8A4  52E5               	movf	postdec1,f,c
 27489  01C8A6  0012               	return		;funcret
 27490  01C8A8                     __end_of_check_enter_button:
 27491                           	opt callstack 0
 27492                           
 27493 ;; *************** function _calc_ror_data *****************
 27494 ;; Defined at:
 27495 ;;		line 102 in file "mbmc.c"
 27496 ;; Parameters:    Size  Location     Type
 27497 ;;		None
 27498 ;; Auto vars:     Size  Location     Type
 27499 ;;		None
 27500 ;; Return value:  Size  Location     Type
 27501 ;;                  1  [STACK] void 
 27502 ;; Registers used:
 27503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27504 ;; Tracked objects:
 27505 ;;		On entry : 0/0
 27506 ;;		On exit  : 0/0
 27507 ;;		Unchanged: 0/0
 27508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27513 ;;Total ram usage:        0 bytes
 27514 ;; Hardware stack levels used:    1
 27515 ;; Hardware stack levels required when called:   18
 27516 ;; This function calls:
 27517 ;;		___flge
 27518 ;;		___flsub
 27519 ;;		_conv_raw_result
 27520 ;;		_fabsf
 27521 ;; This function is called by:
 27522 ;;		_main
 27523 ;; This function uses a reentrant model
 27524 ;;
 27525                           
 27526                           	psect	text113
 27527  0192E4                     __ptext113:
 27528                           	opt callstack 0
 27529  0192E4                     _calc_ror_data:
 27530                           	opt callstack 12
 27531                           
 27532                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 27533                           
 27534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27535                           ;incstack = 0
 27536  0192E4  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 27537  0192EA  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 27538  0192F0  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 27539  0192F6  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 27540  0192FC  0E00               	movlw	0
 27541  0192FE  6EE6               	movwf	postinc1,c
 27542  019300  0E00               	movlw	0
 27543  019302  6EE6               	movwf	postinc1,c
 27544  019304  EC28  F0AA         	call	_conv_raw_result	;wreg free
 27545  019308  0060  F007  FFE6   	movff	btemp,postinc1
 27546  01930E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27547  019314  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27548  01931A  0060  F013  FFE6   	movff	btemp+3,postinc1
 27549  019320  EC6E  F0E3         	call	___flsub	;wreg free
 27550  019324  0060  F007  FFE6   	movff	btemp,postinc1
 27551  01932A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27552  019330  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27553  019336  0060  F013  FFE6   	movff	btemp+3,postinc1
 27554  01933C  ECC3  F0D9         	call	_fabsf	;wreg free
 27555  019340  0060  F004  F96F   	movff	btemp,_C+112	;volatile
 27556  019346  0060  F008  F970   	movff	btemp+1,_C+113	;volatile
 27557  01934C  0060  F00C  F971   	movff	btemp+2,_C+114	;volatile
 27558  019352  0060  F010  F972   	movff	btemp+3,_C+115	;volatile
 27559                           
 27560                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 27561  019358  0E00               	movlw	0
 27562  01935A  6EE6               	movwf	postinc1,c
 27563  01935C  0E00               	movlw	0
 27564  01935E  6EE6               	movwf	postinc1,c
 27565  019360  EC28  F0AA         	call	_conv_raw_result	;wreg free
 27566  019364  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 27567  01936A  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 27568  019370  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 27569  019376  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 27570                           
 27571                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 27572  01937C  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 27573  019382  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 27574  019388  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 27575  01938E  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 27576  019394  0E00               	movlw	0
 27577  019396  6EE6               	movwf	postinc1,c
 27578  019398  0E04               	movlw	4
 27579  01939A  6EE6               	movwf	postinc1,c
 27580  01939C  EC28  F0AA         	call	_conv_raw_result	;wreg free
 27581  0193A0  0060  F007  FFE6   	movff	btemp,postinc1
 27582  0193A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27583  0193AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27584  0193B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 27585  0193B8  EC6E  F0E3         	call	___flsub	;wreg free
 27586  0193BC  0060  F007  FFE6   	movff	btemp,postinc1
 27587  0193C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27588  0193C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27589  0193CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 27590  0193D4  ECC3  F0D9         	call	_fabsf	;wreg free
 27591  0193D8  0060  F004  F96B   	movff	btemp,_C+108	;volatile
 27592  0193DE  0060  F008  F96C   	movff	btemp+1,_C+109	;volatile
 27593  0193E4  0060  F00C  F96D   	movff	btemp+2,_C+110	;volatile
 27594  0193EA  0060  F010  F96E   	movff	btemp+3,_C+111	;volatile
 27595                           
 27596                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 27597  0193F0  0EE7               	movlw	231
 27598  0193F2  6EE6               	movwf	postinc1,c
 27599  0193F4  0E1D               	movlw	29
 27600  0193F6  6EE6               	movwf	postinc1,c
 27601  0193F8  0EA7               	movlw	167
 27602  0193FA  6EE6               	movwf	postinc1,c
 27603  0193FC  0E3B               	movlw	59
 27604  0193FE  6EE6               	movwf	postinc1,c
 27605  019400  EE22  F16B         	lfsr	2,_C+108	;volatile
 27606  019404  006F FF7B FFE6     	movff	postinc2,postinc1
 27607  01940A  006F FF7B FFE6     	movff	postinc2,postinc1
 27608  019410  006F FF7B FFE6     	movff	postinc2,postinc1
 27609  019416  006F FF7B FFE6     	movff	postinc2,postinc1
 27610  01941C  EC67  F0CC         	call	___flge	;wreg free
 27611  019420  B001               	btfsc	btemp& (0+255),0,c
 27612  019422  D010               	goto	l12024
 27613                           
 27614                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 27615  019424  0EB0               	movlw	176
 27616  019426  006F FFA0  F96B    	movff	wreg,_C+108	;volatile
 27617  01942C  0E03               	movlw	3
 27618  01942E  006F FFA0  F96C    	movff	wreg,_C+109	;volatile
 27619  019434  0E67               	movlw	103
 27620  019436  006F FFA0  F96D    	movff	wreg,_C+110	;volatile
 27621  01943C  0E3C               	movlw	60
 27622  01943E  006F FFA0  F96E    	movff	wreg,_C+111	;volatile
 27623  019444                     l12024:
 27624                           
 27625                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 27626  019444  0E00               	movlw	0
 27627  019446  6EE6               	movwf	postinc1,c
 27628  019448  0E04               	movlw	4
 27629  01944A  6EE6               	movwf	postinc1,c
 27630  01944C  EC28  F0AA         	call	_conv_raw_result	;wreg free
 27631  019450  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 27632  019456  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 27633  01945C  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 27634  019462  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 27635                           
 27636                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 27637  019468  0012               	return		;funcret
 27638  01946A                     __end_of_calc_ror_data:
 27639                           	opt callstack 0
 27640                           
 27641 ;; *************** function _fabsf *****************
 27642 ;; Defined at:
 27643 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 27644 ;; Parameters:    Size  Location     Type
 27645 ;;  x               4  [STACK] float 
 27646 ;; Auto vars:     Size  Location     Type
 27647 ;;  u               4  [STACK] struct .
 27648 ;; Return value:  Size  Location     Type
 27649 ;;                  4  [STACK] float 
 27650 ;; Registers used:
 27651 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 27652 ;; Tracked objects:
 27653 ;;		On entry : 0/0
 27654 ;;		On exit  : 0/0
 27655 ;;		Unchanged: 0/0
 27656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27661 ;;Total ram usage:        0 bytes
 27662 ;; Hardware stack levels used:    1
 27663 ;; Hardware stack levels required when called:   15
 27664 ;; This function calls:
 27665 ;;		Nothing
 27666 ;; This function is called by:
 27667 ;;		_main
 27668 ;;		_calc_ror_data
 27669 ;;		_calc_bsoc
 27670 ;;		_esr_check
 27671 ;; This function uses a reentrant model
 27672 ;;
 27673                           
 27674                           	psect	text114
 27675  01B386                     __ptext114:
 27676                           	opt callstack 0
 27677  01B386                     _fabsf:
 27678                           	opt callstack 0
 27679                           
 27680                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27681  01B386  52E6               	movf	postinc1,f,c
 27682  01B388  52E6               	movf	postinc1,f,c
 27683  01B38A  52E6               	movf	postinc1,f,c
 27684  01B38C  52E6               	movf	postinc1,f,c
 27685                           
 27686                           ;incstack = 0
 27687 ;; hardware stack exceeded
 27688  01B38E  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 27689  01B394  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 27690  01B39A  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 27691  01B3A0  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 27692                           
 27693                           ;stkvar	_u @ sp[(-4)+0]
 27694  01B3A6  0EFC               	movlw	-4
 27695  01B3A8  0060  F027  FFE3   	movff	btemp+8,plusw1
 27696  01B3AE  0EFD               	movlw	-3
 27697  01B3B0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27698  01B3B6  0EFE               	movlw	-2
 27699  01B3B8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27700  01B3BE  0EFF               	movlw	-1
 27701  01B3C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 27702                           
 27703                           ;stkvar	_x @ sp[(-4)+-4]
 27704  01B3C6  0EF8               	movlw	-8
 27705  01B3C8  006F FF8C  F009    	movff	plusw1,btemp+8
 27706  01B3CE  0EF9               	movlw	-7
 27707  01B3D0  006F FF8C  F00A    	movff	plusw1,btemp+9
 27708  01B3D6  0EFA               	movlw	-6
 27709  01B3D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 27710  01B3DE  0EFB               	movlw	-5
 27711  01B3E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 27712                           
 27713                           ;stkvar	_u @ sp[(-4)+0]
 27714  01B3E6  0EFC               	movlw	-4
 27715  01B3E8  0060  F027  FFE3   	movff	btemp+8,plusw1
 27716  01B3EE  0EFD               	movlw	-3
 27717  01B3F0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27718  01B3F6  0EFE               	movlw	-2
 27719  01B3F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27720  01B3FE  0EFF               	movlw	-1
 27721  01B400  0060  F033  FFE3   	movff	btemp+11,plusw1
 27722                           
 27723                           ;stkvar	_u @ sp[(-4)+0]
 27724  01B406  0EFF               	movlw	-1
 27725  01B408  9EE3               	bcf	plusw1,7,c
 27726                           
 27727                           ;stkvar	_u @ sp[(-4)+0]
 27728  01B40A  0EFC               	movlw	-4
 27729  01B40C  006F FF8C  F001    	movff	plusw1,btemp
 27730  01B412  0EFD               	movlw	-3
 27731  01B414  006F FF8C  F002    	movff	plusw1,btemp+1
 27732  01B41A  0EFE               	movlw	-2
 27733  01B41C  006F FF8C  F003    	movff	plusw1,btemp+2
 27734  01B422  0EFF               	movlw	-1
 27735  01B424  006F FF8C  F004    	movff	plusw1,btemp+3
 27736                           
 27737                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 27738  01B42A  0EF8               	movlw	248
 27739  01B42C  26E1               	addwf	fsr1l,f,c
 27740  01B42E  0EFF               	movlw	255
 27741  01B430  22E2               	addwfc	fsr1h,f,c
 27742  01B432  0012               	return		;funcret
 27743  01B434                     __end_of_fabsf:
 27744                           	opt callstack 0
 27745                           
 27746 ;; *************** function _conv_raw_result *****************
 27747 ;; Defined at:
 27748 ;;		line 133 in file "daq.c"
 27749 ;; Parameters:    Size  Location     Type
 27750 ;;  chan            1  [STACK] const enum E16605
 27751 ;;  to_what         1  [STACK] const enum E16997
 27752 ;; Auto vars:     Size  Location     Type
 27753 ;;		None
 27754 ;; Return value:  Size  Location     Type
 27755 ;;                  4  [STACK] float 
 27756 ;; Registers used:
 27757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27758 ;; Tracked objects:
 27759 ;;		On entry : 0/0
 27760 ;;		On exit  : 0/0
 27761 ;;		Unchanged: 0/0
 27762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27767 ;;Total ram usage:        0 bytes
 27768 ;; Hardware stack levels used:    1
 27769 ;; Hardware stack levels required when called:   17
 27770 ;; This function calls:
 27771 ;;		___fldiv
 27772 ;;		___flmul
 27773 ;;		___flsub
 27774 ;;		___xxtofl
 27775 ;;		_get_raw_result
 27776 ;;		_nanf
 27777 ;; This function is called by:
 27778 ;;		_main
 27779 ;;		_convert_adc_data
 27780 ;;		_calc_ror_data
 27781 ;;		_check_day_time
 27782 ;;		_init_bsoc
 27783 ;;		_esr_check
 27784 ;; This function uses a reentrant model
 27785 ;;
 27786                           
 27787                           	psect	text115
 27788  015450                     __ptext115:
 27789                           	opt callstack 0
 27790  015450                     _conv_raw_result:
 27791                           	opt callstack 0
 27792                           
 27793                           ;daq.c: 133: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 134: {;daq.c: 136:  switch (to_what) {
 27794                           
 27795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27796                           ;incstack = 0
 27797 ;; hardware stack exceeded
 27798  015450  D24A               	goto	l10516
 27799  015452                     l10462:
 27800                           
 27801                           ;daq.c: 138:   if (!(0b0011110001110111 >> chan & 0x1))
 27802                           ;stkvar	_chan @ sp[(0)+-1]
 27803  015452  0EFF               	movlw	-1
 27804  015454  006F FF8C  F00C    	movff	plusw1,btemp+11
 27805  01545A  0E77               	movlw	119
 27806  01545C  6E09               	movwf	(btemp+8)^0,c
 27807  01545E  0E3C               	movlw	60
 27808  015460  6E0A               	movwf	(btemp+9)^0,c
 27809  015462  2A0C               	incf	(btemp+11)^0,f,c
 27810  015464  D003               	goto	u9674
 27811  015466                     u9675:
 27812  015466  340A               	rlcf	(btemp+9)^0,w,c
 27813  015468  320A               	rrcf	(btemp+9)^0,f,c
 27814  01546A  3209               	rrcf	(btemp+8)^0,f,c
 27815  01546C                     u9674:
 27816  01546C  2E0C               	decfsz	(btemp+11)^0,f,c
 27817  01546E  D7FB               	goto	u9675
 27818  015470  B009               	btfsc	(btemp+8)^0,0,c
 27819  015472  D007               	goto	l10468
 27820                           
 27821                           ;daq.c: 139:    return nanf("");
 27822  015474  0E4D               	movlw	low (STR_80+126)
 27823  015476  6EE6               	movwf	postinc1,c
 27824  015478  0EFB               	movlw	high (STR_80+126)
 27825  01547A  6EE6               	movwf	postinc1,c
 27826  01547C  ECE3  F0E0         	call	_nanf	;wreg free
 27827  015480  D242               	goto	l1950
 27828  015482                     l10468:
 27829                           
 27830                           ;daq.c: 141:   if (0b0000000000000011 >> chan & 0x1) {
 27831                           ;stkvar	_chan @ sp[(0)+-1]
 27832  015482  0EFF               	movlw	-1
 27833  015484  006F FF8C  F00C    	movff	plusw1,btemp+11
 27834  01548A  0E03               	movlw	3
 27835  01548C  6E09               	movwf	(btemp+8)^0,c
 27836  01548E  0E00               	movlw	0
 27837  015490  6E0A               	movwf	(btemp+9)^0,c
 27838  015492  2A0C               	incf	(btemp+11)^0,f,c
 27839  015494  D003               	goto	u9694
 27840  015496                     u9695:
 27841  015496  340A               	rlcf	(btemp+9)^0,w,c
 27842  015498  320A               	rrcf	(btemp+9)^0,f,c
 27843  01549A  3209               	rrcf	(btemp+8)^0,f,c
 27844  01549C                     u9694:
 27845  01549C  2E0C               	decfsz	(btemp+11)^0,f,c
 27846  01549E  D7FB               	goto	u9695
 27847  0154A0  A009               	btfss	(btemp+8)^0,0,c
 27848  0154A2  D0F3               	goto	l10482
 27849                           
 27850                           ;daq.c: 142:    if (0b0000000000000001 >> chan & 0x1) {
 27851                           ;stkvar	_chan @ sp[(0)+-1]
 27852  0154A4  0EFF               	movlw	-1
 27853  0154A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27854  0154AC  0E01               	movlw	1
 27855  0154AE  6E09               	movwf	(btemp+8)^0,c
 27856  0154B0  0E00               	movlw	0
 27857  0154B2  6E0A               	movwf	(btemp+9)^0,c
 27858  0154B4  2A0C               	incf	(btemp+11)^0,f,c
 27859  0154B6  D003               	goto	u9714
 27860  0154B8                     u9715:
 27861  0154B8  340A               	rlcf	(btemp+9)^0,w,c
 27862  0154BA  320A               	rrcf	(btemp+9)^0,f,c
 27863  0154BC  3209               	rrcf	(btemp+8)^0,f,c
 27864  0154BE                     u9714:
 27865  0154BE  2E0C               	decfsz	(btemp+11)^0,f,c
 27866  0154C0  D7FB               	goto	u9715
 27867  0154C2  A009               	btfss	(btemp+8)^0,0,c
 27868  0154C4  D071               	goto	l10478
 27869                           
 27870                           ;daq.c: 143:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 27871  0154C6  0060  F8AB  FFE6   	movff	_R+42,postinc1
 27872  0154CC  0060  F8AF  FFE6   	movff	_R+43,postinc1
 27873  0154D2  0060  F8B3  FFE6   	movff	_R+44,postinc1
 27874  0154D8  0060  F8B7  FFE6   	movff	_R+45,postinc1
 27875  0154DE  0060  F898  F009   	movff	_R+38,btemp+8	;volatile
 27876  0154E4  0060  F89C  F00A   	movff	_R+39,btemp+9	;volatile
 27877  0154EA  0E00               	movlw	0
 27878  0154EC  BE0A               	btfsc	(btemp+9)^0,7,c
 27879  0154EE  0EFF               	movlw	255
 27880  0154F0  6E0B               	movwf	(btemp+10)^0,c
 27881  0154F2  6E0C               	movwf	(btemp+11)^0,c
 27882  0154F4  0060  F027  FFE6   	movff	btemp+8,postinc1
 27883  0154FA  0060  F02B  FFE6   	movff	btemp+9,postinc1
 27884  015500  0060  F02F  FFE6   	movff	btemp+10,postinc1
 27885  015506  0060  F033  FFE6   	movff	btemp+11,postinc1
 27886  01550C  0E01               	movlw	1
 27887  01550E  6EE6               	movwf	postinc1,c
 27888  015510  EC12  F0C5         	call	___xxtofl	;wreg free
 27889  015514  0060  F007  FFE6   	movff	btemp,postinc1
 27890  01551A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27891  015520  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27892  015526  0060  F013  FFE6   	movff	btemp+3,postinc1
 27893                           
 27894                           ;stkvar	_chan @ sp[(-8)+-1]
 27895  01552C  0EF7               	movlw	-9
 27896  01552E  50E3               	movf	plusw1,w,c
 27897  015530  6EE6               	movwf	postinc1,c
 27898  015532  EC37  F0E8         	call	_get_raw_result	;wreg free
 27899  015536  0060  F004  F00B   	movff	btemp,btemp+10
 27900  01553C  0060  F008  F00C   	movff	btemp+1,btemp+11
 27901  015542  500B               	movf	(btemp+10)^0,w,c
 27902  015544  6E05               	movwf	(btemp+4)^0,c
 27903  015546  500C               	movf	(btemp+11)^0,w,c
 27904  015548  6E06               	movwf	(btemp+5)^0,c
 27905  01554A  6A07               	clrf	(btemp+6)^0,c
 27906  01554C  6A08               	clrf	(btemp+7)^0,c
 27907  01554E  0060  F017  FFE6   	movff	btemp+4,postinc1
 27908  015554  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27909  01555A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27910  015560  0060  F023  FFE6   	movff	btemp+7,postinc1
 27911  015566  0E00               	movlw	0
 27912  015568  6EE6               	movwf	postinc1,c
 27913  01556A  EC12  F0C5         	call	___xxtofl	;wreg free
 27914  01556E  0060  F007  FFE6   	movff	btemp,postinc1
 27915  015574  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27916  01557A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27917  015580  0060  F013  FFE6   	movff	btemp+3,postinc1
 27918  015586  EC6E  F0E3         	call	___flsub	;wreg free
 27919  01558A  0060  F007  FFE6   	movff	btemp,postinc1
 27920  015590  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27921  015596  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27922  01559C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27923  0155A2  EC78  F09F         	call	___flmul	;wreg free
 27924  0155A6  D1AF               	goto	l1950
 27925  0155A8                     l10478:
 27926                           
 27927                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 27928  0155A8  0060  F8BB  FFE6   	movff	_R+46,postinc1
 27929  0155AE  0060  F8BF  FFE6   	movff	_R+47,postinc1
 27930  0155B4  0060  F8C3  FFE6   	movff	_R+48,postinc1
 27931  0155BA  0060  F8C7  FFE6   	movff	_R+49,postinc1
 27932  0155C0  0060  F8A0  F009   	movff	_R+40,btemp+8	;volatile
 27933  0155C6  0060  F8A4  F00A   	movff	_R+41,btemp+9	;volatile
 27934  0155CC  0E00               	movlw	0
 27935  0155CE  BE0A               	btfsc	(btemp+9)^0,7,c
 27936  0155D0  0EFF               	movlw	255
 27937  0155D2  6E0B               	movwf	(btemp+10)^0,c
 27938  0155D4  6E0C               	movwf	(btemp+11)^0,c
 27939  0155D6  0060  F027  FFE6   	movff	btemp+8,postinc1
 27940  0155DC  0060  F02B  FFE6   	movff	btemp+9,postinc1
 27941  0155E2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 27942  0155E8  0060  F033  FFE6   	movff	btemp+11,postinc1
 27943  0155EE  0E01               	movlw	1
 27944  0155F0  6EE6               	movwf	postinc1,c
 27945  0155F2  EC12  F0C5         	call	___xxtofl	;wreg free
 27946  0155F6  0060  F007  FFE6   	movff	btemp,postinc1
 27947  0155FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27948  015602  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27949  015608  0060  F013  FFE6   	movff	btemp+3,postinc1
 27950                           
 27951                           ;stkvar	_chan @ sp[(-8)+-1]
 27952  01560E  0EF7               	movlw	-9
 27953  015610  50E3               	movf	plusw1,w,c
 27954  015612  6EE6               	movwf	postinc1,c
 27955  015614  EC37  F0E8         	call	_get_raw_result	;wreg free
 27956  015618  0060  F004  F00B   	movff	btemp,btemp+10
 27957  01561E  0060  F008  F00C   	movff	btemp+1,btemp+11
 27958  015624  500B               	movf	(btemp+10)^0,w,c
 27959  015626  6E05               	movwf	(btemp+4)^0,c
 27960  015628  500C               	movf	(btemp+11)^0,w,c
 27961  01562A  6E06               	movwf	(btemp+5)^0,c
 27962  01562C  6A07               	clrf	(btemp+6)^0,c
 27963  01562E  6A08               	clrf	(btemp+7)^0,c
 27964  015630  0060  F017  FFE6   	movff	btemp+4,postinc1
 27965  015636  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27966  01563C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27967  015642  0060  F023  FFE6   	movff	btemp+7,postinc1
 27968  015648  0E00               	movlw	0
 27969  01564A  6EE6               	movwf	postinc1,c
 27970  01564C  EC12  F0C5         	call	___xxtofl	;wreg free
 27971  015650  0060  F007  FFE6   	movff	btemp,postinc1
 27972  015656  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27973  01565C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27974  015662  0060  F013  FFE6   	movff	btemp+3,postinc1
 27975  015668  EC6E  F0E3         	call	___flsub	;wreg free
 27976  01566C  0060  F007  FFE6   	movff	btemp,postinc1
 27977  015672  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27978  015678  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27979  01567E  0060  F013  FFE6   	movff	btemp+3,postinc1
 27980  015684  EC78  F09F         	call	___flmul	;wreg free
 27981  015688  D13E               	goto	l1950
 27982  01568A                     l10482:
 27983                           
 27984                           ;daq.c: 148:    if (0b0000100000000000 >> chan & 0x1) {
 27985                           ;stkvar	_chan @ sp[(0)+-1]
 27986  01568A  0EFF               	movlw	-1
 27987  01568C  006F FF8C  F00C    	movff	plusw1,btemp+11
 27988  015692  0E00               	movlw	0
 27989  015694  6E09               	movwf	(btemp+8)^0,c
 27990  015696  0E08               	movlw	8
 27991  015698  6E0A               	movwf	(btemp+9)^0,c
 27992  01569A  2A0C               	incf	(btemp+11)^0,f,c
 27993  01569C  D003               	goto	u9734
 27994  01569E                     u9735:
 27995  01569E  340A               	rlcf	(btemp+9)^0,w,c
 27996  0156A0  320A               	rrcf	(btemp+9)^0,f,c
 27997  0156A2  3209               	rrcf	(btemp+8)^0,f,c
 27998  0156A4                     u9734:
 27999  0156A4  2E0C               	decfsz	(btemp+11)^0,f,c
 28000  0156A6  D7FB               	goto	u9735
 28001  0156A8  A009               	btfss	(btemp+8)^0,0,c
 28002  0156AA  D008               	goto	l10490
 28003                           
 28004                           ;daq.c: 149:     return 25.0;
 28005  0156AC  0E00               	movlw	0
 28006  0156AE  6E01               	movwf	btemp^0,c
 28007  0156B0  0E00               	movlw	0
 28008  0156B2  6E02               	movwf	(btemp+1)^0,c
 28009  0156B4  0EC8               	movlw	200
 28010  0156B6  6E03               	movwf	(btemp+2)^0,c
 28011  0156B8  0E41               	movlw	65
 28012  0156BA  D113               	goto	L34
 28013  0156BC                     l10490:
 28014                           
 28015                           ;daq.c: 151:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 28016  0156BC  0E00               	movlw	0
 28017  0156BE  6EE6               	movwf	postinc1,c
 28018  0156C0  0E00               	movlw	0
 28019  0156C2  6EE6               	movwf	postinc1,c
 28020  0156C4  0E7A               	movlw	122
 28021  0156C6  6EE6               	movwf	postinc1,c
 28022  0156C8  0E44               	movlw	68
 28023  0156CA  6EE6               	movwf	postinc1,c
 28024  0156CC  0E61               	movlw	97
 28025  0156CE  6EE6               	movwf	postinc1,c
 28026  0156D0  0E03               	movlw	3
 28027  0156D2  6EE6               	movwf	postinc1,c
 28028  0156D4  0E84               	movlw	132
 28029  0156D6  6EE6               	movwf	postinc1,c
 28030  0156D8  0E40               	movlw	64
 28031  0156DA  6EE6               	movwf	postinc1,c
 28032                           
 28033                           ;stkvar	_chan @ sp[(-8)+-1]
 28034  0156DC  0EF7               	movlw	-9
 28035  0156DE  50E3               	movf	plusw1,w,c
 28036  0156E0  6EE6               	movwf	postinc1,c
 28037  0156E2  EC37  F0E8         	call	_get_raw_result	;wreg free
 28038  0156E6  0060  F004  F00B   	movff	btemp,btemp+10
 28039  0156EC  0060  F008  F00C   	movff	btemp+1,btemp+11
 28040  0156F2  500B               	movf	(btemp+10)^0,w,c
 28041  0156F4  6E05               	movwf	(btemp+4)^0,c
 28042  0156F6  500C               	movf	(btemp+11)^0,w,c
 28043  0156F8  6E06               	movwf	(btemp+5)^0,c
 28044  0156FA  6A07               	clrf	(btemp+6)^0,c
 28045  0156FC  6A08               	clrf	(btemp+7)^0,c
 28046  0156FE  0060  F017  FFE6   	movff	btemp+4,postinc1
 28047  015704  0060  F01B  FFE6   	movff	btemp+5,postinc1
 28048  01570A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 28049  015710  0060  F023  FFE6   	movff	btemp+7,postinc1
 28050  015716  0E00               	movlw	0
 28051  015718  6EE6               	movwf	postinc1,c
 28052  01571A  EC12  F0C5         	call	___xxtofl	;wreg free
 28053  01571E  0060  F007  FFE6   	movff	btemp,postinc1
 28054  015724  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28055  01572A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28056  015730  0060  F013  FFE6   	movff	btemp+3,postinc1
 28057  015736  EC78  F09F         	call	___flmul	;wreg free
 28058  01573A  0060  F007  FFE6   	movff	btemp,postinc1
 28059  015740  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28060  015746  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28061  01574C  0060  F013  FFE6   	movff	btemp+3,postinc1
 28062  015752  EC6B  F0A7         	call	___fldiv	;wreg free
 28063  015756  D0D7               	goto	l1950
 28064  015758                     l10494:
 28065                           
 28066                           ;daq.c: 156:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 28067                           ;stkvar	_chan @ sp[(0)+-1]
 28068  015758  0EFF               	movlw	-1
 28069  01575A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28070  015760  0E03               	movlw	3
 28071  015762  6E09               	movwf	(btemp+8)^0,c
 28072  015764  0E00               	movlw	0
 28073  015766  6E0A               	movwf	(btemp+9)^0,c
 28074  015768  2A0C               	incf	(btemp+11)^0,f,c
 28075  01576A  D003               	goto	u9754
 28076  01576C                     u9755:
 28077  01576C  340A               	rlcf	(btemp+9)^0,w,c
 28078  01576E  320A               	rrcf	(btemp+9)^0,f,c
 28079  015770  3209               	rrcf	(btemp+8)^0,f,c
 28080  015772                     u9754:
 28081  015772  2E0C               	decfsz	(btemp+11)^0,f,c
 28082  015774  D7FB               	goto	u9755
 28083  015776  B009               	btfsc	(btemp+8)^0,0,c
 28084  015778  D011               	goto	u9780
 28085                           
 28086                           ;stkvar	_chan @ sp[(0)+-1]
 28087  01577A  0EFF               	movlw	-1
 28088  01577C  006F FF8C  F00C    	movff	plusw1,btemp+11
 28089  015782  0E00               	movlw	0
 28090  015784  6E09               	movwf	(btemp+8)^0,c
 28091  015786  0E08               	movlw	8
 28092  015788  6E0A               	movwf	(btemp+9)^0,c
 28093  01578A  2A0C               	incf	(btemp+11)^0,f,c
 28094  01578C  D003               	goto	u9774
 28095  01578E                     u9775:
 28096  01578E  340A               	rlcf	(btemp+9)^0,w,c
 28097  015790  320A               	rrcf	(btemp+9)^0,f,c
 28098  015792  3209               	rrcf	(btemp+8)^0,f,c
 28099  015794                     u9774:
 28100  015794  2E0C               	decfsz	(btemp+11)^0,f,c
 28101  015796  D7FB               	goto	u9775
 28102  015798  A009               	btfss	(btemp+8)^0,0,c
 28103  01579A  D04E               	goto	l10502
 28104  01579C                     u9780:
 28105                           
 28106                           ;daq.c: 157:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 28107  01579C  0E00               	movlw	0
 28108  01579E  6EE6               	movwf	postinc1,c
 28109  0157A0  0E00               	movlw	0
 28110  0157A2  6EE6               	movwf	postinc1,c
 28111  0157A4  0E7A               	movlw	122
 28112  0157A6  6EE6               	movwf	postinc1,c
 28113  0157A8  0E44               	movlw	68
 28114  0157AA  6EE6               	movwf	postinc1,c
 28115  0157AC  0E00               	movlw	0
 28116  0157AE  6EE6               	movwf	postinc1,c
 28117  0157B0  0E00               	movlw	0
 28118  0157B2  6EE6               	movwf	postinc1,c
 28119  0157B4  0E20               	movlw	32
 28120  0157B6  6EE6               	movwf	postinc1,c
 28121  0157B8  0E3F               	movlw	63
 28122  0157BA  6EE6               	movwf	postinc1,c
 28123                           
 28124                           ;stkvar	_chan @ sp[(-8)+-1]
 28125  0157BC  0EF7               	movlw	-9
 28126  0157BE  50E3               	movf	plusw1,w,c
 28127  0157C0  6EE6               	movwf	postinc1,c
 28128  0157C2  EC37  F0E8         	call	_get_raw_result	;wreg free
 28129  0157C6  0060  F004  F00B   	movff	btemp,btemp+10
 28130  0157CC  0060  F008  F00C   	movff	btemp+1,btemp+11
 28131  0157D2  500B               	movf	(btemp+10)^0,w,c
 28132  0157D4  6E05               	movwf	(btemp+4)^0,c
 28133  0157D6  500C               	movf	(btemp+11)^0,w,c
 28134  0157D8  6E06               	movwf	(btemp+5)^0,c
 28135  0157DA  6A07               	clrf	(btemp+6)^0,c
 28136  0157DC  6A08               	clrf	(btemp+7)^0,c
 28137  0157DE  0060  F017  FFE6   	movff	btemp+4,postinc1
 28138  0157E4  0060  F01B  FFE6   	movff	btemp+5,postinc1
 28139  0157EA  0060  F01F  FFE6   	movff	btemp+6,postinc1
 28140  0157F0  0060  F023  FFE6   	movff	btemp+7,postinc1
 28141  0157F6  0E00               	movlw	0
 28142  0157F8  6EE6               	movwf	postinc1,c
 28143  0157FA  EC12  F0C5         	call	___xxtofl	;wreg free
 28144  0157FE  0060  F007  FFE6   	movff	btemp,postinc1
 28145  015804  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28146  01580A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28147  015810  0060  F013  FFE6   	movff	btemp+3,postinc1
 28148  015816  EC78  F09F         	call	___flmul	;wreg free
 28149  01581A  0060  F007  FFE6   	movff	btemp,postinc1
 28150  015820  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28151  015826  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28152  01582C  0060  F013  FFE6   	movff	btemp+3,postinc1
 28153  015832  EC6B  F0A7         	call	___fldiv	;wreg free
 28154  015836  D067               	goto	l1950
 28155  015838                     l10502:
 28156                           
 28157                           ;daq.c: 159:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 28158  015838  0E00               	movlw	0
 28159  01583A  6EE6               	movwf	postinc1,c
 28160  01583C  0E00               	movlw	0
 28161  01583E  6EE6               	movwf	postinc1,c
 28162  015840  0E7A               	movlw	122
 28163  015842  6EE6               	movwf	postinc1,c
 28164  015844  0E44               	movlw	68
 28165  015846  6EE6               	movwf	postinc1,c
 28166  015848  0E61               	movlw	97
 28167  01584A  6EE6               	movwf	postinc1,c
 28168  01584C  0E03               	movlw	3
 28169  01584E  6EE6               	movwf	postinc1,c
 28170  015850  0E84               	movlw	132
 28171  015852  6EE6               	movwf	postinc1,c
 28172  015854  0E40               	movlw	64
 28173  015856  6EE6               	movwf	postinc1,c
 28174                           
 28175                           ;stkvar	_chan @ sp[(-8)+-1]
 28176  015858  0EF7               	movlw	-9
 28177  01585A  50E3               	movf	plusw1,w,c
 28178  01585C  6EE6               	movwf	postinc1,c
 28179  01585E  EC37  F0E8         	call	_get_raw_result	;wreg free
 28180  015862  0060  F004  F00B   	movff	btemp,btemp+10
 28181  015868  0060  F008  F00C   	movff	btemp+1,btemp+11
 28182  01586E  500B               	movf	(btemp+10)^0,w,c
 28183  015870  6E05               	movwf	(btemp+4)^0,c
 28184  015872  500C               	movf	(btemp+11)^0,w,c
 28185  015874  6E06               	movwf	(btemp+5)^0,c
 28186  015876  6A07               	clrf	(btemp+6)^0,c
 28187  015878  6A08               	clrf	(btemp+7)^0,c
 28188  01587A  0060  F017  FFE6   	movff	btemp+4,postinc1
 28189  015880  0060  F01B  FFE6   	movff	btemp+5,postinc1
 28190  015886  0060  F01F  FFE6   	movff	btemp+6,postinc1
 28191  01588C  0060  F023  FFE6   	movff	btemp+7,postinc1
 28192  015892  0E00               	movlw	0
 28193  015894  6EE6               	movwf	postinc1,c
 28194  015896  EC12  F0C5         	call	___xxtofl	;wreg free
 28195  01589A  0060  F007  FFE6   	movff	btemp,postinc1
 28196  0158A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28197  0158A6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28198  0158AC  0060  F013  FFE6   	movff	btemp+3,postinc1
 28199  0158B2  EC78  F09F         	call	___flmul	;wreg free
 28200  0158B6  0060  F007  FFE6   	movff	btemp,postinc1
 28201  0158BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28202  0158C2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28203  0158C8  0060  F013  FFE6   	movff	btemp+3,postinc1
 28204  0158CE  EC6B  F0A7         	call	___fldiv	;wreg free
 28205  0158D2  D019               	goto	l1950
 28206  0158D4                     l10508:
 28207                           
 28208                           ;daq.c: 162:   return 0.0;
 28209  0158D4  0E00               	movlw	0
 28210  0158D6  6E01               	movwf	btemp^0,c
 28211  0158D8  0E00               	movlw	0
 28212  0158DA  6E02               	movwf	(btemp+1)^0,c
 28213  0158DC  0E00               	movlw	0
 28214  0158DE  6E03               	movwf	(btemp+2)^0,c
 28215  0158E0  0E00               	movlw	0
 28216  0158E2                     L34:
 28217  0158E2  6E04               	movwf	(btemp+3)^0,c
 28218  0158E4  D010               	goto	l1950
 28219  0158E6                     l10516:
 28220                           
 28221                           ;stkvar	_to_what @ sp[(0)+-2]
 28222  0158E6  0EFE               	movlw	-2
 28223  0158E8  50E3               	movf	plusw1,w,c
 28224  0158EA  6E0B               	movwf	(btemp+10)^0,c
 28225  0158EC  6A0C               	clrf	(btemp+11)^0,c
 28226                           
 28227                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28228                           ; Switch size 1, requested type "simple"
 28229                           ; Number of cases is 1, Range of values is 0 to 0
 28230                           ; switch strategies available:
 28231                           ; Name         Instructions Cycles
 28232                           ; simple_byte            4     3 (average)
 28233                           ;	Chosen strategy is simple_byte
 28234  0158EE  500C               	movf	(btemp+11)^0,w,c
 28235  0158F0  0A00               	xorlw	0	; case 0
 28236  0158F2  A4D8               	btfss	status,2,c
 28237  0158F4  D7EF               	goto	l10508
 28238                           
 28239                           ; Switch size 1, requested type "simple"
 28240                           ; Number of cases is 2, Range of values is 0 to 1
 28241                           ; switch strategies available:
 28242                           ; Name         Instructions Cycles
 28243                           ; simple_byte            7     4 (average)
 28244                           ;	Chosen strategy is simple_byte
 28245  0158F6  500B               	movf	(btemp+10)^0,w,c
 28246  0158F8  0A00               	xorlw	0	; case 0
 28247  0158FA  B4D8               	btfsc	status,2,c
 28248  0158FC  D5AA               	goto	l10462
 28249  0158FE  0A01               	xorlw	1	; case 1
 28250  015900  B4D8               	btfsc	status,2,c
 28251  015902  D72A               	goto	l10494
 28252  015904  D7E7               	goto	l10508
 28253  015906                     l1950:
 28254                           
 28255                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 28256  015906  52E5               	movf	postdec1,f,c
 28257  015908  52E5               	movf	postdec1,f,c
 28258  01590A  0012               	return		;funcret
 28259  01590C                     __end_of_conv_raw_result:
 28260                           	opt callstack 0
 28261                           
 28262 ;; *************** function _nanf *****************
 28263 ;; Defined at:
 28264 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 28265 ;; Parameters:    Size  Location     Type
 28266 ;;  s               2  [STACK] PTR const unsigned char 
 28267 ;;		 -> STR_117(1), STR_79(1), 
 28268 ;; Auto vars:     Size  Location     Type
 28269 ;;  u               4  [STACK] struct .
 28270 ;; Return value:  Size  Location     Type
 28271 ;;                  4  [STACK] float 
 28272 ;; Registers used:
 28273 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 28274 ;; Tracked objects:
 28275 ;;		On entry : 0/0
 28276 ;;		On exit  : 0/0
 28277 ;;		Unchanged: 0/0
 28278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28283 ;;Total ram usage:        0 bytes
 28284 ;; Hardware stack levels used:    1
 28285 ;; Hardware stack levels required when called:   15
 28286 ;; This function calls:
 28287 ;;		Nothing
 28288 ;; This function is called by:
 28289 ;;		_conv_raw_result
 28290 ;; This function uses a reentrant model
 28291 ;;
 28292                           
 28293                           	psect	text116
 28294  01C1C6                     __ptext116:
 28295                           	opt callstack 0
 28296  01C1C6                     _nanf:
 28297                           	opt callstack 0
 28298                           
 28299                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28300  01C1C6  52E6               	movf	postinc1,f,c
 28301  01C1C8  52E6               	movf	postinc1,f,c
 28302  01C1CA  52E6               	movf	postinc1,f,c
 28303  01C1CC  52E6               	movf	postinc1,f,c
 28304                           
 28305                           ;incstack = 0
 28306 ;; hardware stack exceeded
 28307  01C1CE  0EFF               	movlw	255
 28308  01C1D0  6E09               	movwf	(btemp+8)^0,c
 28309  01C1D2  0EFF               	movlw	255
 28310  01C1D4  6E0A               	movwf	(btemp+9)^0,c
 28311  01C1D6  0EFF               	movlw	255
 28312  01C1D8  6E0B               	movwf	(btemp+10)^0,c
 28313  01C1DA  0E7F               	movlw	127
 28314  01C1DC  6E0C               	movwf	(btemp+11)^0,c
 28315                           
 28316                           ;stkvar	_u @ sp[(-4)+0]
 28317  01C1DE  0EFC               	movlw	-4
 28318  01C1E0  0060  F027  FFE3   	movff	btemp+8,plusw1
 28319  01C1E6  0EFD               	movlw	-3
 28320  01C1E8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28321  01C1EE  0EFE               	movlw	-2
 28322  01C1F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28323  01C1F6  0EFF               	movlw	-1
 28324  01C1F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 28325                           
 28326                           ;stkvar	_u @ sp[(-4)+0]
 28327  01C1FE  0EFC               	movlw	-4
 28328  01C200  006F FF8C  F001    	movff	plusw1,btemp
 28329  01C206  0EFD               	movlw	-3
 28330  01C208  006F FF8C  F002    	movff	plusw1,btemp+1
 28331  01C20E  0EFE               	movlw	-2
 28332  01C210  006F FF8C  F003    	movff	plusw1,btemp+2
 28333  01C216  0EFF               	movlw	-1
 28334  01C218  006F FF8C  F004    	movff	plusw1,btemp+3
 28335                           
 28336                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 28337  01C21E  0EFA               	movlw	250
 28338  01C220  26E1               	addwf	fsr1l,f,c
 28339  01C222  0EFF               	movlw	255
 28340  01C224  22E2               	addwfc	fsr1h,f,c
 28341  01C226  0012               	return		;funcret
 28342  01C228                     __end_of_nanf:
 28343                           	opt callstack 0
 28344                           
 28345 ;; *************** function _get_raw_result *****************
 28346 ;; Defined at:
 28347 ;;		line 125 in file "daq.c"
 28348 ;; Parameters:    Size  Location     Type
 28349 ;;  index           1  [STACK] const enum E16605
 28350 ;; Auto vars:     Size  Location     Type
 28351 ;;		None
 28352 ;; Return value:  Size  Location     Type
 28353 ;;                  2  [STACK] unsigned short 
 28354 ;; Registers used:
 28355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 28356 ;; Tracked objects:
 28357 ;;		On entry : 0/1
 28358 ;;		On exit  : 0/0
 28359 ;;		Unchanged: 0/0
 28360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28365 ;;Total ram usage:        0 bytes
 28366 ;; Hardware stack levels used:    1
 28367 ;; Hardware stack levels required when called:   15
 28368 ;; This function calls:
 28369 ;;		Nothing
 28370 ;; This function is called by:
 28371 ;;		_main
 28372 ;;		_current_sensor_cal
 28373 ;;		_conv_raw_result
 28374 ;; This function uses a reentrant model
 28375 ;;
 28376                           
 28377                           	psect	text117
 28378  01D06E                     __ptext117:
 28379                           	opt callstack 0
 28380  01D06E                     _get_raw_result:
 28381                           	opt callstack 0
 28382                           
 28383                           ;daq.c: 125: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 126: {;daq.c
      +                          : 127:  return R.raw_adc[index];
 28384                           ;stkvar	_index @ sp[(0)+-1]
 28385                           
 28386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28387                           ;incstack = 0
 28388 ;; hardware stack exceeded
 28389  01D06E  0EFF               	movlw	-1
 28390  01D070  50E3               	movf	plusw1,w,c
 28391  01D072  0D02               	mullw	2
 28392  01D074  0E00               	movlw	low _R
 28393  01D076  24F3               	addwf	243,w,c
 28394  01D078  6ED9               	movwf	fsr2l,c
 28395  01D07A  0E02               	movlw	high _R
 28396  01D07C  20F4               	addwfc	prodh,w,c
 28397  01D07E  6EDA               	movwf	fsr2h,c
 28398  01D080  006F FF78  F001    	movff	postinc2,btemp
 28399  01D086  006F FF74  F002    	movff	postdec2,btemp+1
 28400                           
 28401                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 28402  01D08C  52E5               	movf	postdec1,f,c
 28403  01D08E  0012               	return		;funcret
 28404  01D090                     __end_of_get_raw_result:
 28405                           	opt callstack 0
 28406                           
 28407 ;; *************** function ___xxtofl *****************
 28408 ;; Defined at:
 28409 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 28410 ;; Parameters:    Size  Location     Type
 28411 ;;  sign            1  [STACK] unsigned char 
 28412 ;;  val             4  [STACK] long 
 28413 ;; Auto vars:     Size  Location     Type
 28414 ;;  arg             4  [STACK] unsigned long 
 28415 ;;  exp             1  [STACK] unsigned char 
 28416 ;; Return value:  Size  Location     Type
 28417 ;;                  4  [STACK] unsigned char 
 28418 ;; Registers used:
 28419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 28420 ;; Tracked objects:
 28421 ;;		On entry : 0/2
 28422 ;;		On exit  : 0/0
 28423 ;;		Unchanged: 0/0
 28424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28429 ;;Total ram usage:        0 bytes
 28430 ;; Hardware stack levels used:    1
 28431 ;; Hardware stack levels required when called:   15
 28432 ;; This function calls:
 28433 ;;		Nothing
 28434 ;; This function is called by:
 28435 ;;		_conv_raw_result
 28436 ;;		_init_bsoc
 28437 ;; This function uses a reentrant model
 28438 ;;
 28439                           
 28440                           	psect	text118
 28441  018A24                     __ptext118:
 28442                           	opt callstack 0
 28443  018A24                     ___xxtofl:
 28444                           	opt callstack 0
 28445                           
 28446                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28447  018A24  0E05               	movlw	5
 28448  018A26  26E1               	addwf	fsr1l,f,c
 28449  018A28  0E00               	movlw	0
 28450  018A2A  22E2               	addwfc	fsr1h,f,c
 28451                           
 28452                           ;stkvar	_sign @ sp[(-5)+-1]
 28453                           
 28454                           ;incstack = 0
 28455 ;; hardware stack exceeded
 28456  018A2C  0EFA               	movlw	-6
 28457  018A2E  50E3               	movf	plusw1,w,c
 28458  018A30  B4D8               	btfsc	status,2,c
 28459  018A32  D01D               	goto	l10390
 28460                           
 28461                           ;stkvar	_val @ sp[(-5)+-5]
 28462  018A34  0EF9               	movlw	-7
 28463  018A36  AEE3               	btfss	plusw1,7,c
 28464  018A38  D01A               	goto	l10390
 28465                           
 28466                           ;stkvar	_val @ sp[(-5)+-5]
 28467  018A3A  0EF6               	movlw	-10
 28468  018A3C  006F FF8C  F009    	movff	plusw1,btemp+8
 28469  018A42  0EF7               	movlw	-9
 28470  018A44  006F FF8C  F00A    	movff	plusw1,btemp+9
 28471  018A4A  0EF8               	movlw	-8
 28472  018A4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 28473  018A52  0EF9               	movlw	-7
 28474  018A54  006F FF8C  F00C    	movff	plusw1,btemp+11
 28475  018A5A  1E09               	comf	(btemp+8)^0,f,c
 28476  018A5C  1E0A               	comf	(btemp+9)^0,f,c
 28477  018A5E  1E0B               	comf	(btemp+10)^0,f,c
 28478  018A60  1E0C               	comf	(btemp+11)^0,f,c
 28479  018A62  2A09               	incf	(btemp+8)^0,f,c
 28480  018A64  0E00               	movlw	0
 28481  018A66  220A               	addwfc	(btemp+9)^0,f,c
 28482  018A68  220B               	addwfc	(btemp+10)^0,f,c
 28483  018A6A  220C               	addwfc	(btemp+11)^0,f,c
 28484  018A6C  D010               	goto	L35
 28485  018A6E                     l10390:
 28486                           
 28487                           ;stkvar	_val @ sp[(-5)+-5]
 28488  018A6E  0EF6               	movlw	-10
 28489  018A70  006F FF8C  F009    	movff	plusw1,btemp+8
 28490  018A76  0EF7               	movlw	-9
 28491  018A78  006F FF8C  F00A    	movff	plusw1,btemp+9
 28492  018A7E  0EF8               	movlw	-8
 28493  018A80  006F FF8C  F00B    	movff	plusw1,btemp+10
 28494  018A86  0EF9               	movlw	-7
 28495  018A88  006F FF8C  F00C    	movff	plusw1,btemp+11
 28496  018A8E                     L35:
 28497                           
 28498                           ;stkvar	_arg @ sp[(-5)+0]
 28499  018A8E  0EFB               	movlw	-5
 28500  018A90  0060  F027  FFE3   	movff	btemp+8,plusw1
 28501  018A96  0EFC               	movlw	-4
 28502  018A98  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28503  018A9E  0EFD               	movlw	-3
 28504  018AA0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28505  018AA6  0EFE               	movlw	-2
 28506  018AA8  0060  F033  FFE3   	movff	btemp+11,plusw1
 28507                           
 28508                           ;stkvar	_val @ sp[(-5)+-5]
 28509  018AAE  0EF6               	movlw	-10
 28510  018AB0  50E3               	movf	plusw1,w,c
 28511  018AB2  E113               	bnz	l10398
 28512  018AB4  0EF7               	movlw	-9
 28513  018AB6  50E3               	movf	plusw1,w,c
 28514  018AB8  E110               	bnz	l10398
 28515  018ABA  0EF8               	movlw	-8
 28516  018ABC  50E3               	movf	plusw1,w,c
 28517  018ABE  E10D               	bnz	l10398
 28518  018AC0  0EF9               	movlw	-7
 28519  018AC2  50E3               	movf	plusw1,w,c
 28520  018AC4  A4D8               	btfss	status,2,c
 28521  018AC6  D009               	goto	l10398
 28522  018AC8  0E00               	movlw	0
 28523  018ACA  6E01               	movwf	btemp^0,c
 28524  018ACC  0E00               	movlw	0
 28525  018ACE  6E02               	movwf	(btemp+1)^0,c
 28526  018AD0  0E00               	movlw	0
 28527  018AD2  6E03               	movwf	(btemp+2)^0,c
 28528  018AD4  0E00               	movlw	0
 28529  018AD6  6E04               	movwf	(btemp+3)^0,c
 28530  018AD8  D0A2               	goto	l3329
 28531  018ADA                     l10398:
 28532  018ADA  0E96               	movlw	150
 28533  018ADC  6E0C               	movwf	(btemp+11)^0,c
 28534                           
 28535                           ;stkvar	_exp @ sp[(-5)+4]
 28536  018ADE  0EFF               	movlw	-1
 28537  018AE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 28538  018AE6  D00B               	goto	l10402
 28539  018AE8                     l10400:
 28540                           
 28541                           ;stkvar	_exp @ sp[(-5)+4]
 28542  018AE8  0EFF               	movlw	-1
 28543  018AEA  2AE3               	incf	plusw1,f,c
 28544                           
 28545                           ;stkvar	_arg @ sp[(-5)+0]
 28546  018AEC  90D8               	bcf	status,0,c
 28547  018AEE  0EFE               	movlw	-2
 28548  018AF0  32E3               	rrcf	plusw1,f,c
 28549  018AF2  0EFD               	movlw	-3
 28550  018AF4  32E3               	rrcf	plusw1,f,c
 28551  018AF6  0EFC               	movlw	-4
 28552  018AF8  32E3               	rrcf	plusw1,f,c
 28553  018AFA  0EFB               	movlw	-5
 28554  018AFC  32E3               	rrcf	plusw1,f,c
 28555  018AFE                     l10402:
 28556                           
 28557                           ;stkvar	_arg @ sp[(-5)+0]
 28558  018AFE  50E1               	movf	fsr1l,w,c
 28559  018B00  0FFB               	addlw	-5
 28560  018B02  6ED9               	movwf	fsr2l,c
 28561  018B04  50E2               	movf	fsr1h,w,c
 28562  018B06  6EDA               	movwf	fsr2h,c
 28563  018B08  0EFF               	movlw	255
 28564  018B0A  22DA               	addwfc	fsr2h,f,c
 28565  018B0C  52DE               	movf	postinc2,f,c
 28566  018B0E  52DE               	movf	postinc2,f,c
 28567  018B10  52DE               	movf	postinc2,f,c
 28568  018B12  0EFE               	movlw	254
 28569  018B14  14DD               	andwf	postdec2,w,c
 28570  018B16  B4D8               	btfsc	status,2,c
 28571  018B18  D018               	goto	l10410
 28572  018B1A  D7E6               	goto	l10400
 28573  018B1C                     l10404:
 28574                           
 28575                           ;stkvar	_exp @ sp[(-5)+4]
 28576  018B1C  0EFF               	movlw	-1
 28577  018B1E  2AE3               	incf	plusw1,f,c
 28578                           
 28579                           ;stkvar	_arg @ sp[(-5)+0]
 28580  018B20  50E1               	movf	fsr1l,w,c
 28581  018B22  0FFB               	addlw	-5
 28582  018B24  6ED9               	movwf	fsr2l,c
 28583  018B26  50E2               	movf	fsr1h,w,c
 28584  018B28  6EDA               	movwf	fsr2h,c
 28585  018B2A  0EFF               	movlw	255
 28586  018B2C  22DA               	addwfc	fsr2h,f,c
 28587  018B2E  2ADE               	incf	postinc2,f,c
 28588  018B30  0E00               	movlw	0
 28589  018B32  22DE               	addwfc	postinc2,f,c
 28590  018B34  22DE               	addwfc	postinc2,f,c
 28591  018B36  22DE               	addwfc	postinc2,f,c
 28592                           
 28593                           ;stkvar	_arg @ sp[(-5)+0]
 28594  018B38  90D8               	bcf	status,0,c
 28595  018B3A  0EFE               	movlw	-2
 28596  018B3C  32E3               	rrcf	plusw1,f,c
 28597  018B3E  0EFD               	movlw	-3
 28598  018B40  32E3               	rrcf	plusw1,f,c
 28599  018B42  0EFC               	movlw	-4
 28600  018B44  32E3               	rrcf	plusw1,f,c
 28601  018B46  0EFB               	movlw	-5
 28602  018B48  32E3               	rrcf	plusw1,f,c
 28603  018B4A                     l10410:
 28604                           
 28605                           ;stkvar	_arg @ sp[(-5)+0]
 28606  018B4A  50E1               	movf	fsr1l,w,c
 28607  018B4C  0FFB               	addlw	-5
 28608  018B4E  6ED9               	movwf	fsr2l,c
 28609  018B50  50E2               	movf	fsr1h,w,c
 28610  018B52  6EDA               	movwf	fsr2h,c
 28611  018B54  0EFF               	movlw	255
 28612  018B56  22DA               	addwfc	fsr2h,f,c
 28613  018B58  52DE               	movf	postinc2,f,c
 28614  018B5A  52DE               	movf	postinc2,f,c
 28615  018B5C  52DE               	movf	postinc2,f,c
 28616  018B5E  0EFF               	movlw	255
 28617  018B60  14DD               	andwf	postdec2,w,c
 28618  018B62  B4D8               	btfsc	status,2,c
 28619  018B64  D00C               	goto	l10414
 28620  018B66  D7DA               	goto	l10404
 28621  018B68                     l10412:
 28622                           
 28623                           ;stkvar	_exp @ sp[(-5)+4]
 28624  018B68  0EFF               	movlw	-1
 28625  018B6A  06E3               	decf	plusw1,f,c
 28626                           
 28627                           ;stkvar	_arg @ sp[(-5)+0]
 28628  018B6C  90D8               	bcf	status,0,c
 28629  018B6E  0EFB               	movlw	-5
 28630  018B70  36E3               	rlcf	plusw1,f,c
 28631  018B72  0EFC               	movlw	-4
 28632  018B74  36E3               	rlcf	plusw1,f,c
 28633  018B76  0EFD               	movlw	-3
 28634  018B78  36E3               	rlcf	plusw1,f,c
 28635  018B7A  0EFE               	movlw	-2
 28636  018B7C  36E3               	rlcf	plusw1,f,c
 28637  018B7E                     l10414:
 28638                           
 28639                           ;stkvar	_arg @ sp[(-5)+0]
 28640  018B7E  0EFD               	movlw	-3
 28641  018B80  BEE3               	btfsc	plusw1,7,c
 28642  018B82  D007               	goto	u9600
 28643                           
 28644                           ;stkvar	_exp @ sp[(-5)+4]
 28645  018B84  0EFF               	movlw	-1
 28646  018B86  006F FF8C  F001    	movff	plusw1,btemp
 28647  018B8C  0E02               	movlw	2
 28648  018B8E  6001               	cpfslt	btemp^0,c
 28649  018B90  D7EB               	goto	l10412
 28650  018B92                     u9600:
 28651                           
 28652                           ;stkvar	_exp @ sp[(-5)+4]
 28653  018B92  0EFF               	movlw	-1
 28654  018B94  B0E3               	btfsc	plusw1,0,c
 28655  018B96  D002               	goto	l10422
 28656                           
 28657                           ;stkvar	_arg @ sp[(-5)+0]
 28658  018B98  0EFD               	movlw	-3
 28659  018B9A  9EE3               	bcf	plusw1,7,c
 28660  018B9C                     l10422:
 28661                           
 28662                           ;stkvar	_exp @ sp[(-5)+4]
 28663  018B9C  50E1               	movf	fsr1l,w,c
 28664  018B9E  0FFF               	addlw	-1
 28665  018BA0  6ED9               	movwf	fsr2l,c
 28666  018BA2  50E2               	movf	fsr1h,w,c
 28667  018BA4  6EDA               	movwf	fsr2h,c
 28668  018BA6  0EFF               	movlw	255
 28669  018BA8  22DA               	addwfc	fsr2h,f,c
 28670  018BAA  90D8               	bcf	status,0,c
 28671  018BAC  32DF               	rrcf	indf2,f,c
 28672                           
 28673                           ;stkvar	_exp @ sp[(-5)+4]
 28674  018BAE  0EFF               	movlw	-1
 28675  018BB0  006F FF8C  F00C    	movff	plusw1,btemp+11
 28676  018BB6  0060  F030  F005   	movff	btemp+11,btemp+4
 28677  018BBC  6A06               	clrf	(btemp+5)^0,c
 28678  018BBE  6A07               	clrf	(btemp+6)^0,c
 28679  018BC0  6A08               	clrf	(btemp+7)^0,c
 28680  018BC2  0060  F014  F008   	movff	btemp+4,btemp+7
 28681  018BC8  6A07               	clrf	(btemp+6)^0,c
 28682  018BCA  6A06               	clrf	(btemp+5)^0,c
 28683  018BCC  6A05               	clrf	(btemp+4)^0,c
 28684                           
 28685                           ;stkvar	_arg @ sp[(-5)+0]
 28686  018BCE  50E1               	movf	fsr1l,w,c
 28687  018BD0  0FFB               	addlw	-5
 28688  018BD2  6ED9               	movwf	fsr2l,c
 28689  018BD4  50E2               	movf	fsr1h,w,c
 28690  018BD6  6EDA               	movwf	fsr2h,c
 28691  018BD8  0EFF               	movlw	255
 28692  018BDA  22DA               	addwfc	fsr2h,f,c
 28693  018BDC  5005               	movf	(btemp+4)^0,w,c
 28694  018BDE  12DE               	iorwf	postinc2,f,c
 28695  018BE0  5006               	movf	(btemp+5)^0,w,c
 28696  018BE2  12DE               	iorwf	postinc2,f,c
 28697  018BE4  5007               	movf	(btemp+6)^0,w,c
 28698  018BE6  12DE               	iorwf	postinc2,f,c
 28699  018BE8  5008               	movf	(btemp+7)^0,w,c
 28700  018BEA  12DE               	iorwf	postinc2,f,c
 28701                           
 28702                           ;stkvar	_sign @ sp[(-5)+-1]
 28703  018BEC  0EFA               	movlw	-6
 28704  018BEE  50E3               	movf	plusw1,w,c
 28705  018BF0  B4D8               	btfsc	status,2,c
 28706  018BF2  D005               	goto	l10432
 28707                           
 28708                           ;stkvar	_val @ sp[(-5)+-5]
 28709  018BF4  0EF9               	movlw	-7
 28710  018BF6  AEE3               	btfss	plusw1,7,c
 28711  018BF8  D002               	goto	l10432
 28712                           
 28713                           ;stkvar	_arg @ sp[(-5)+0]
 28714  018BFA  0EFE               	movlw	-2
 28715  018BFC  8EE3               	bsf	plusw1,7,c
 28716  018BFE                     l10432:
 28717                           
 28718                           ;stkvar	_arg @ sp[(-5)+0]
 28719  018BFE  0EFB               	movlw	-5
 28720  018C00  006F FF8C  F001    	movff	plusw1,btemp
 28721  018C06  0EFC               	movlw	-4
 28722  018C08  006F FF8C  F002    	movff	plusw1,btemp+1
 28723  018C0E  0EFD               	movlw	-3
 28724  018C10  006F FF8C  F003    	movff	plusw1,btemp+2
 28725  018C16  0EFE               	movlw	-2
 28726  018C18  006F FF8C  F004    	movff	plusw1,btemp+3
 28727  018C1E                     l3329:
 28728                           
 28729                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 28730  018C1E  0EF6               	movlw	246
 28731  018C20  26E1               	addwf	fsr1l,f,c
 28732  018C22  0EFF               	movlw	255
 28733  018C24  22E2               	addwfc	fsr1h,f,c
 28734  018C26  0012               	return		;funcret
 28735  018C28                     __end_of___xxtofl:
 28736                           	opt callstack 0
 28737                           
 28738 ;; *************** function ___fldiv *****************
 28739 ;; Defined at:
 28740 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 28741 ;; Parameters:    Size  Location     Type
 28742 ;;  b               4  [STACK] unsigned char 
 28743 ;;  a               4  [STACK] unsigned char 
 28744 ;; Auto vars:     Size  Location     Type
 28745 ;;  grs             4  [STACK] unsigned long 
 28746 ;;  rem             4  [STACK] unsigned long 
 28747 ;;  new_exp         2  [STACK] short 
 28748 ;;  aexp            1  [STACK] unsigned char 
 28749 ;;  bexp            1  [STACK] unsigned char 
 28750 ;;  sign            1  [STACK] unsigned char 
 28751 ;; Return value:  Size  Location     Type
 28752 ;;                  4  [STACK] unsigned char 
 28753 ;; Registers used:
 28754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 28755 ;; Tracked objects:
 28756 ;;		On entry : 0/0
 28757 ;;		On exit  : 0/0
 28758 ;;		Unchanged: 0/0
 28759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28764 ;;Total ram usage:        0 bytes
 28765 ;; Hardware stack levels used:    1
 28766 ;; Hardware stack levels required when called:   15
 28767 ;; This function calls:
 28768 ;;		Nothing
 28769 ;; This function is called by:
 28770 ;;		_conv_raw_result
 28771 ;;		_convert_dac_raw
 28772 ;;		_calc_bsoc
 28773 ;;		_init_bsoc
 28774 ;;		_esr_check
 28775 ;;		_efgtoa
 28776 ;; This function uses a reentrant model
 28777 ;;
 28778                           
 28779                           	psect	text119
 28780  014ED6                     __ptext119:
 28781                           	opt callstack 0
 28782  014ED6                     ___fldiv:
 28783                           	opt callstack 0
 28784                           
 28785                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28786  014ED6  0E0D               	movlw	13
 28787  014ED8  26E1               	addwf	fsr1l,f,c
 28788  014EDA  0E00               	movlw	0
 28789  014EDC  22E2               	addwfc	fsr1h,f,c
 28790                           
 28791                           ;stkvar	_b @ sp[(-13)+-4]
 28792                           
 28793                           ;incstack = 0
 28794 ;; hardware stack exceeded
 28795  014EDE  0EF2               	movlw	242
 28796  014EE0  24E1               	addwf	fsr1l,w,c
 28797  014EE2  6ED9               	movwf	fsr2l,c
 28798  014EE4  0EFF               	movlw	255
 28799  014EE6  20E2               	addwfc	fsr1h,w,c
 28800  014EE8  6EDA               	movwf	fsr2h,c
 28801  014EEA  50DF               	movf	indf2,w,c
 28802  014EEC  6E0C               	movwf	(btemp+11)^0,c
 28803  014EEE  0E80               	movlw	128
 28804  014EF0  160C               	andwf	(btemp+11)^0,f,c
 28805                           
 28806                           ;stkvar	_sign @ sp[(-13)+12]
 28807  014EF2  0EFF               	movlw	-1
 28808  014EF4  0060  F033  FFE3   	movff	btemp+11,plusw1
 28809                           
 28810                           ;stkvar	_b @ sp[(-13)+-4]
 28811  014EFA  0EF2               	movlw	242
 28812  014EFC  24E1               	addwf	fsr1l,w,c
 28813  014EFE  6ED9               	movwf	fsr2l,c
 28814  014F00  0EFF               	movlw	255
 28815  014F02  20E2               	addwfc	fsr1h,w,c
 28816  014F04  6EDA               	movwf	fsr2h,c
 28817  014F06  50DF               	movf	indf2,w,c
 28818  014F08  6E0C               	movwf	(btemp+11)^0,c
 28819  014F0A  90D8               	bcf	status,0,c
 28820  014F0C  340C               	rlcf	(btemp+11)^0,w,c
 28821  014F0E  6E0B               	movwf	(btemp+10)^0,c
 28822                           
 28823                           ;stkvar	_bexp @ sp[(-13)+11]
 28824  014F10  0EFE               	movlw	-2
 28825  014F12  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28826                           
 28827                           ;stkvar	_b @ sp[(-13)+-4]
 28828  014F18  0EF1               	movlw	241
 28829  014F1A  24E1               	addwf	fsr1l,w,c
 28830  014F1C  6ED9               	movwf	fsr2l,c
 28831  014F1E  0EFF               	movlw	255
 28832  014F20  20E2               	addwfc	fsr1h,w,c
 28833  014F22  6EDA               	movwf	fsr2h,c
 28834  014F24  AEDF               	btfss	indf2,7,c
 28835  014F26  D002               	goto	l8962
 28836                           
 28837                           ;stkvar	_bexp @ sp[(-13)+11]
 28838  014F28  0EFE               	movlw	-2
 28839  014F2A  80E3               	bsf	plusw1,0,c
 28840  014F2C                     l8962:
 28841                           
 28842                           ;stkvar	_bexp @ sp[(-13)+11]
 28843  014F2C  0EFE               	movlw	-2
 28844  014F2E  50E3               	movf	plusw1,w,c
 28845  014F30  B4D8               	btfsc	status,2,c
 28846  014F32  D027               	goto	l8972
 28847                           
 28848                           ;stkvar	_bexp @ sp[(-13)+11]
 28849  014F34  0EFE               	movlw	-2
 28850  014F36  28E3               	incf	plusw1,w,c
 28851  014F38  A4D8               	btfss	status,2,c
 28852  014F3A  D018               	goto	l8968
 28853  014F3C  0E00               	movlw	0
 28854  014F3E  6E09               	movwf	(btemp+8)^0,c
 28855  014F40  0E00               	movlw	0
 28856  014F42  6E0A               	movwf	(btemp+9)^0,c
 28857  014F44  0E00               	movlw	0
 28858  014F46  6E0B               	movwf	(btemp+10)^0,c
 28859  014F48  0E00               	movlw	0
 28860  014F4A  6E0C               	movwf	(btemp+11)^0,c
 28861                           
 28862                           ;stkvar	_b @ sp[(-13)+-4]
 28863  014F4C  0EEF               	movlw	-17
 28864  014F4E  0060  F027  FFE3   	movff	btemp+8,plusw1
 28865  014F54  0EF0               	movlw	-16
 28866  014F56  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28867  014F5C  0EF1               	movlw	-15
 28868  014F5E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28869  014F64  0EF2               	movlw	-14
 28870  014F66  0060  F033  FFE3   	movff	btemp+11,plusw1
 28871  014F6C                     l8968:
 28872                           
 28873                           ;stkvar	_b @ sp[(-13)+-4]
 28874  014F6C  0EF1               	movlw	-15
 28875  014F6E  8EE3               	bsf	plusw1,7,c
 28876                           
 28877                           ;stkvar	_b @ sp[(-13)+-4]
 28878  014F70  0EF2               	movlw	242
 28879  014F72  24E1               	addwf	fsr1l,w,c
 28880  014F74  6ED9               	movwf	fsr2l,c
 28881  014F76  0EFF               	movlw	255
 28882  014F78  20E2               	addwfc	fsr1h,w,c
 28883  014F7A  6EDA               	movwf	fsr2h,c
 28884  014F7C  0E00               	movlw	0
 28885  014F7E  6EDF               	movwf	indf2,c
 28886  014F80  D018               	goto	l8974
 28887  014F82                     l8972:
 28888  014F82  0E00               	movlw	0
 28889  014F84  6E09               	movwf	(btemp+8)^0,c
 28890  014F86  0E00               	movlw	0
 28891  014F88  6E0A               	movwf	(btemp+9)^0,c
 28892  014F8A  0E00               	movlw	0
 28893  014F8C  6E0B               	movwf	(btemp+10)^0,c
 28894  014F8E  0E00               	movlw	0
 28895  014F90  6E0C               	movwf	(btemp+11)^0,c
 28896                           
 28897                           ;stkvar	_b @ sp[(-13)+-4]
 28898  014F92  0EEF               	movlw	-17
 28899  014F94  0060  F027  FFE3   	movff	btemp+8,plusw1
 28900  014F9A  0EF0               	movlw	-16
 28901  014F9C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28902  014FA2  0EF1               	movlw	-15
 28903  014FA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28904  014FAA  0EF2               	movlw	-14
 28905  014FAC  0060  F033  FFE3   	movff	btemp+11,plusw1
 28906  014FB2                     l8974:
 28907                           
 28908                           ;stkvar	_a @ sp[(-13)+-8]
 28909  014FB2  0EEE               	movlw	238
 28910  014FB4  24E1               	addwf	fsr1l,w,c
 28911  014FB6  6ED9               	movwf	fsr2l,c
 28912  014FB8  0EFF               	movlw	255
 28913  014FBA  20E2               	addwfc	fsr1h,w,c
 28914  014FBC  6EDA               	movwf	fsr2h,c
 28915  014FBE  50DF               	movf	indf2,w,c
 28916  014FC0  6E0C               	movwf	(btemp+11)^0,c
 28917  014FC2  0E80               	movlw	128
 28918  014FC4  160C               	andwf	(btemp+11)^0,f,c
 28919                           
 28920                           ;stkvar	_sign @ sp[(-13)+12]
 28921  014FC6  50E1               	movf	fsr1l,w,c
 28922  014FC8  0FFF               	addlw	-1
 28923  014FCA  6ED9               	movwf	fsr2l,c
 28924  014FCC  50E2               	movf	fsr1h,w,c
 28925  014FCE  6EDA               	movwf	fsr2h,c
 28926  014FD0  0EFF               	movlw	255
 28927  014FD2  22DA               	addwfc	fsr2h,f,c
 28928  014FD4  500C               	movf	(btemp+11)^0,w,c
 28929  014FD6  1ADF               	xorwf	indf2,f,c
 28930                           
 28931                           ;stkvar	_a @ sp[(-13)+-8]
 28932  014FD8  0EEE               	movlw	238
 28933  014FDA  24E1               	addwf	fsr1l,w,c
 28934  014FDC  6ED9               	movwf	fsr2l,c
 28935  014FDE  0EFF               	movlw	255
 28936  014FE0  20E2               	addwfc	fsr1h,w,c
 28937  014FE2  6EDA               	movwf	fsr2h,c
 28938  014FE4  50DF               	movf	indf2,w,c
 28939  014FE6  6E0C               	movwf	(btemp+11)^0,c
 28940  014FE8  90D8               	bcf	status,0,c
 28941  014FEA  340C               	rlcf	(btemp+11)^0,w,c
 28942  014FEC  6E0B               	movwf	(btemp+10)^0,c
 28943                           
 28944                           ;stkvar	_aexp @ sp[(-13)+10]
 28945  014FEE  0EFD               	movlw	-3
 28946  014FF0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28947                           
 28948                           ;stkvar	_a @ sp[(-13)+-8]
 28949  014FF6  0EED               	movlw	237
 28950  014FF8  24E1               	addwf	fsr1l,w,c
 28951  014FFA  6ED9               	movwf	fsr2l,c
 28952  014FFC  0EFF               	movlw	255
 28953  014FFE  20E2               	addwfc	fsr1h,w,c
 28954  015000  6EDA               	movwf	fsr2h,c
 28955  015002  AEDF               	btfss	indf2,7,c
 28956  015004  D002               	goto	l8982
 28957                           
 28958                           ;stkvar	_aexp @ sp[(-13)+10]
 28959  015006  0EFD               	movlw	-3
 28960  015008  80E3               	bsf	plusw1,0,c
 28961  01500A                     l8982:
 28962                           
 28963                           ;stkvar	_aexp @ sp[(-13)+10]
 28964  01500A  0EFD               	movlw	-3
 28965  01500C  50E3               	movf	plusw1,w,c
 28966  01500E  B4D8               	btfsc	status,2,c
 28967  015010  D027               	goto	l8992
 28968                           
 28969                           ;stkvar	_aexp @ sp[(-13)+10]
 28970  015012  0EFD               	movlw	-3
 28971  015014  28E3               	incf	plusw1,w,c
 28972  015016  A4D8               	btfss	status,2,c
 28973  015018  D018               	goto	l8988
 28974  01501A  0E00               	movlw	0
 28975  01501C  6E09               	movwf	(btemp+8)^0,c
 28976  01501E  0E00               	movlw	0
 28977  015020  6E0A               	movwf	(btemp+9)^0,c
 28978  015022  0E00               	movlw	0
 28979  015024  6E0B               	movwf	(btemp+10)^0,c
 28980  015026  0E00               	movlw	0
 28981  015028  6E0C               	movwf	(btemp+11)^0,c
 28982                           
 28983                           ;stkvar	_a @ sp[(-13)+-8]
 28984  01502A  0EEB               	movlw	-21
 28985  01502C  0060  F027  FFE3   	movff	btemp+8,plusw1
 28986  015032  0EEC               	movlw	-20
 28987  015034  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28988  01503A  0EED               	movlw	-19
 28989  01503C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28990  015042  0EEE               	movlw	-18
 28991  015044  0060  F033  FFE3   	movff	btemp+11,plusw1
 28992  01504A                     l8988:
 28993                           
 28994                           ;stkvar	_a @ sp[(-13)+-8]
 28995  01504A  0EED               	movlw	-19
 28996  01504C  8EE3               	bsf	plusw1,7,c
 28997                           
 28998                           ;stkvar	_a @ sp[(-13)+-8]
 28999  01504E  0EEE               	movlw	238
 29000  015050  24E1               	addwf	fsr1l,w,c
 29001  015052  6ED9               	movwf	fsr2l,c
 29002  015054  0EFF               	movlw	255
 29003  015056  20E2               	addwfc	fsr1h,w,c
 29004  015058  6EDA               	movwf	fsr2h,c
 29005  01505A  0E00               	movlw	0
 29006  01505C  6EDF               	movwf	indf2,c
 29007  01505E  D018               	goto	l8994
 29008  015060                     l8992:
 29009  015060  0E00               	movlw	0
 29010  015062  6E09               	movwf	(btemp+8)^0,c
 29011  015064  0E00               	movlw	0
 29012  015066  6E0A               	movwf	(btemp+9)^0,c
 29013  015068  0E00               	movlw	0
 29014  01506A  6E0B               	movwf	(btemp+10)^0,c
 29015  01506C  0E00               	movlw	0
 29016  01506E  6E0C               	movwf	(btemp+11)^0,c
 29017                           
 29018                           ;stkvar	_a @ sp[(-13)+-8]
 29019  015070  0EEB               	movlw	-21
 29020  015072  0060  F027  FFE3   	movff	btemp+8,plusw1
 29021  015078  0EEC               	movlw	-20
 29022  01507A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29023  015080  0EED               	movlw	-19
 29024  015082  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29025  015088  0EEE               	movlw	-18
 29026  01508A  0060  F033  FFE3   	movff	btemp+11,plusw1
 29027  015090                     l8994:
 29028                           
 29029                           ;stkvar	_a @ sp[(-13)+-8]
 29030  015090  0EEB               	movlw	-21
 29031  015092  50E3               	movf	plusw1,w,c
 29032  015094  E139               	bnz	l9006
 29033  015096  0EEC               	movlw	-20
 29034  015098  50E3               	movf	plusw1,w,c
 29035  01509A  E136               	bnz	l9006
 29036  01509C  0EED               	movlw	-19
 29037  01509E  50E3               	movf	plusw1,w,c
 29038  0150A0  E133               	bnz	l9006
 29039  0150A2  0EEE               	movlw	-18
 29040  0150A4  50E3               	movf	plusw1,w,c
 29041  0150A6  A4D8               	btfss	status,2,c
 29042  0150A8  D02F               	goto	l9006
 29043                           
 29044                           ;stkvar	_b @ sp[(-13)+-4]
 29045  0150AA  0EEF               	movlw	-17
 29046  0150AC  6AE3               	clrf	plusw1,c
 29047  0150AE  0EF0               	movlw	-16
 29048  0150B0  6AE3               	clrf	plusw1,c
 29049  0150B2  0EF1               	movlw	-15
 29050  0150B4  6AE3               	clrf	plusw1,c
 29051  0150B6  0EF2               	movlw	-14
 29052  0150B8  6AE3               	clrf	plusw1,c
 29053                           
 29054                           ;stkvar	_b @ sp[(-13)+-4]
 29055  0150BA  0EF1               	movlw	241
 29056  0150BC  24E1               	addwf	fsr1l,w,c
 29057  0150BE  6ED9               	movwf	fsr2l,c
 29058  0150C0  0EFF               	movlw	255
 29059  0150C2  20E2               	addwfc	fsr1h,w,c
 29060  0150C4  6EDA               	movwf	fsr2h,c
 29061  0150C6  0E80               	movlw	128
 29062  0150C8  12DE               	iorwf	postinc2,f,c
 29063  0150CA  0E7F               	movlw	127
 29064  0150CC  12DD               	iorwf	postdec2,f,c
 29065  0150CE                     l9000:
 29066                           
 29067                           ;stkvar	_sign @ sp[(-13)+12]
 29068  0150CE  0EFF               	movlw	-1
 29069  0150D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 29070                           
 29071                           ;stkvar	_b @ sp[(-13)+-4]
 29072  0150D6  0EF2               	movlw	242
 29073  0150D8  24E1               	addwf	fsr1l,w,c
 29074  0150DA  6ED9               	movwf	fsr2l,c
 29075  0150DC  0EFF               	movlw	255
 29076  0150DE  20E2               	addwfc	fsr1h,w,c
 29077  0150E0  6EDA               	movwf	fsr2h,c
 29078  0150E2  500C               	movf	(btemp+11)^0,w,c
 29079  0150E4  12DF               	iorwf	indf2,f,c
 29080                           
 29081                           ;stkvar	_b @ sp[(-13)+-4]
 29082  0150E6  0EEF               	movlw	-17
 29083  0150E8  006F FF8C  F001    	movff	plusw1,btemp
 29084  0150EE  0EF0               	movlw	-16
 29085  0150F0  006F FF8C  F002    	movff	plusw1,btemp+1
 29086  0150F6  0EF1               	movlw	-15
 29087  0150F8  006F FF8C  F003    	movff	plusw1,btemp+2
 29088  0150FE  0EF2               	movlw	-14
 29089  015100  006F FF8C  F004    	movff	plusw1,btemp+3
 29090  015106  D19F               	goto	l3253
 29091  015108                     l9006:
 29092                           
 29093                           ;stkvar	_bexp @ sp[(-13)+11]
 29094  015108  0EFE               	movlw	-2
 29095  01510A  50E3               	movf	plusw1,w,c
 29096  01510C  A4D8               	btfss	status,2,c
 29097  01510E  D009               	goto	l9014
 29098  015110  0E00               	movlw	0
 29099  015112  6E01               	movwf	btemp^0,c
 29100  015114  0E00               	movlw	0
 29101  015116  6E02               	movwf	(btemp+1)^0,c
 29102  015118  0E00               	movlw	0
 29103  01511A  6E03               	movwf	(btemp+2)^0,c
 29104  01511C  0E00               	movlw	0
 29105  01511E  6E04               	movwf	(btemp+3)^0,c
 29106  015120  D192               	goto	l3253
 29107  015122                     l9014:
 29108                           
 29109                           ;stkvar	_bexp @ sp[(-13)+11]
 29110  015122  0EFE               	movlw	-2
 29111  015124  50E3               	movf	plusw1,w,c
 29112  015126  6E0B               	movwf	(btemp+10)^0,c
 29113  015128  6A0C               	clrf	(btemp+11)^0,c
 29114                           
 29115                           ;stkvar	_aexp @ sp[(-13)+10]
 29116  01512A  0EFD               	movlw	-3
 29117  01512C  50E3               	movf	plusw1,w,c
 29118  01512E  5E0B               	subwf	(btemp+10)^0,f,c
 29119  015130  0E00               	movlw	0
 29120  015132  5A0C               	subwfb	(btemp+11)^0,f,c
 29121  015134  0E7F               	movlw	127
 29122  015136  260B               	addwf	(btemp+10)^0,f,c
 29123  015138  0E00               	movlw	0
 29124  01513A  220C               	addwfc	(btemp+11)^0,f,c
 29125                           
 29126                           ;stkvar	_new_exp @ sp[(-13)+8]
 29127  01513C  0EFB               	movlw	-5
 29128  01513E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29129  015144  0EFC               	movlw	-4
 29130  015146  0060  F033  FFE3   	movff	btemp+11,plusw1
 29131                           
 29132                           ;stkvar	_b @ sp[(-13)+-4]
 29133  01514C  0EEF               	movlw	-17
 29134  01514E  006F FF8C  F009    	movff	plusw1,btemp+8
 29135  015154  0EF0               	movlw	-16
 29136  015156  006F FF8C  F00A    	movff	plusw1,btemp+9
 29137  01515C  0EF1               	movlw	-15
 29138  01515E  006F FF8C  F00B    	movff	plusw1,btemp+10
 29139  015164  0EF2               	movlw	-14
 29140  015166  006F FF8C  F00C    	movff	plusw1,btemp+11
 29141                           
 29142                           ;stkvar	_rem @ sp[(-13)+4]
 29143  01516C  0EF7               	movlw	-9
 29144  01516E  0060  F027  FFE3   	movff	btemp+8,plusw1
 29145  015174  0EF8               	movlw	-8
 29146  015176  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29147  01517C  0EF9               	movlw	-7
 29148  01517E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29149  015184  0EFA               	movlw	-6
 29150  015186  0060  F033  FFE3   	movff	btemp+11,plusw1
 29151                           
 29152                           ;stkvar	_b @ sp[(-13)+-4]
 29153  01518C  0EEF               	movlw	-17
 29154  01518E  6AE3               	clrf	plusw1,c
 29155  015190  0EF0               	movlw	-16
 29156  015192  6AE3               	clrf	plusw1,c
 29157  015194  0EF1               	movlw	-15
 29158  015196  6AE3               	clrf	plusw1,c
 29159  015198  0EF2               	movlw	-14
 29160  01519A  6AE3               	clrf	plusw1,c
 29161                           
 29162                           ;stkvar	_grs @ sp[(-13)+0]
 29163  01519C  0EF3               	movlw	-13
 29164  01519E  6AE3               	clrf	plusw1,c
 29165  0151A0  0EF4               	movlw	-12
 29166  0151A2  6AE3               	clrf	plusw1,c
 29167  0151A4  0EF5               	movlw	-11
 29168  0151A6  6AE3               	clrf	plusw1,c
 29169  0151A8  0EF6               	movlw	-10
 29170  0151AA  6AE3               	clrf	plusw1,c
 29171                           
 29172                           ;stkvar	_aexp @ sp[(-13)+10]
 29173  0151AC  0EFD               	movlw	-3
 29174  0151AE  6AE3               	clrf	plusw1,c
 29175  0151B0  D050               	goto	l9042
 29176  0151B2                     l9024:
 29177                           
 29178                           ;stkvar	_aexp @ sp[(-13)+10]
 29179  0151B2  0EFD               	movlw	-3
 29180  0151B4  50E3               	movf	plusw1,w,c
 29181  0151B6  B4D8               	btfsc	status,2,c
 29182  0151B8  D020               	goto	l9034
 29183                           
 29184                           ;stkvar	_rem @ sp[(-13)+4]
 29185  0151BA  90D8               	bcf	status,0,c
 29186  0151BC  0EF7               	movlw	-9
 29187  0151BE  36E3               	rlcf	plusw1,f,c
 29188  0151C0  0EF8               	movlw	-8
 29189  0151C2  36E3               	rlcf	plusw1,f,c
 29190  0151C4  0EF9               	movlw	-7
 29191  0151C6  36E3               	rlcf	plusw1,f,c
 29192  0151C8  0EFA               	movlw	-6
 29193  0151CA  36E3               	rlcf	plusw1,f,c
 29194                           
 29195                           ;stkvar	_b @ sp[(-13)+-4]
 29196  0151CC  90D8               	bcf	status,0,c
 29197  0151CE  0EEF               	movlw	-17
 29198  0151D0  36E3               	rlcf	plusw1,f,c
 29199  0151D2  0EF0               	movlw	-16
 29200  0151D4  36E3               	rlcf	plusw1,f,c
 29201  0151D6  0EF1               	movlw	-15
 29202  0151D8  36E3               	rlcf	plusw1,f,c
 29203  0151DA  0EF2               	movlw	-14
 29204  0151DC  36E3               	rlcf	plusw1,f,c
 29205                           
 29206                           ;stkvar	_grs @ sp[(-13)+0]
 29207  0151DE  0EF6               	movlw	-10
 29208  0151E0  AEE3               	btfss	plusw1,7,c
 29209  0151E2  D002               	goto	l9032
 29210                           
 29211                           ;stkvar	_b @ sp[(-13)+-4]
 29212  0151E4  0EEF               	movlw	-17
 29213  0151E6  80E3               	bsf	plusw1,0,c
 29214  0151E8                     l9032:
 29215                           
 29216                           ;stkvar	_grs @ sp[(-13)+0]
 29217  0151E8  90D8               	bcf	status,0,c
 29218  0151EA  0EF3               	movlw	-13
 29219  0151EC  36E3               	rlcf	plusw1,f,c
 29220  0151EE  0EF4               	movlw	-12
 29221  0151F0  36E3               	rlcf	plusw1,f,c
 29222  0151F2  0EF5               	movlw	-11
 29223  0151F4  36E3               	rlcf	plusw1,f,c
 29224  0151F6  0EF6               	movlw	-10
 29225  0151F8  36E3               	rlcf	plusw1,f,c
 29226  0151FA                     l9034:
 29227                           
 29228                           ;stkvar	_a @ sp[(-13)+-8]
 29229                           ;stkvar	_rem @ sp[(-13)+4]
 29230  0151FA  50E1               	movf	fsr1l,w,c
 29231  0151FC  0FF7               	addlw	-9
 29232  0151FE  6ED9               	movwf	fsr2l,c
 29233  015200  50E2               	movf	fsr1h,w,c
 29234  015202  6EDA               	movwf	fsr2h,c
 29235  015204  0EFF               	movlw	255
 29236  015206  22DA               	addwfc	fsr2h,f,c
 29237  015208  0EEB               	movlw	-21
 29238  01520A  50E3               	movf	plusw1,w,c
 29239  01520C  5CDE               	subwf	postinc2,w,c
 29240  01520E  0EEC               	movlw	-20
 29241  015210  50E3               	movf	plusw1,w,c
 29242  015212  58DE               	subwfb	postinc2,w,c
 29243  015214  0EED               	movlw	-19
 29244  015216  50E3               	movf	plusw1,w,c
 29245  015218  58DE               	subwfb	postinc2,w,c
 29246  01521A  0EEE               	movlw	-18
 29247  01521C  50E3               	movf	plusw1,w,c
 29248  01521E  58DE               	subwfb	postinc2,w,c
 29249  015220  A0D8               	btfss	status,0,c
 29250  015222  D015               	goto	l9040
 29251                           
 29252                           ;stkvar	_grs @ sp[(-13)+0]
 29253  015224  0EF6               	movlw	-10
 29254  015226  8CE3               	bsf	plusw1,6,c
 29255                           
 29256                           ;stkvar	_a @ sp[(-13)+-8]
 29257                           ;stkvar	_rem @ sp[(-13)+4]
 29258  015228  50E1               	movf	fsr1l,w,c
 29259  01522A  0FF7               	addlw	-9
 29260  01522C  6ED9               	movwf	fsr2l,c
 29261  01522E  50E2               	movf	fsr1h,w,c
 29262  015230  6EDA               	movwf	fsr2h,c
 29263  015232  0EFF               	movlw	255
 29264  015234  22DA               	addwfc	fsr2h,f,c
 29265  015236  0EEB               	movlw	-21
 29266  015238  50E3               	movf	plusw1,w,c
 29267  01523A  5EDE               	subwf	postinc2,f,c
 29268  01523C  0EEC               	movlw	-20
 29269  01523E  50E3               	movf	plusw1,w,c
 29270  015240  5ADE               	subwfb	postinc2,f,c
 29271  015242  0EED               	movlw	-19
 29272  015244  50E3               	movf	plusw1,w,c
 29273  015246  5ADE               	subwfb	postinc2,f,c
 29274  015248  0EEE               	movlw	-18
 29275  01524A  50E3               	movf	plusw1,w,c
 29276  01524C  5ADE               	subwfb	postinc2,f,c
 29277  01524E                     l9040:
 29278                           
 29279                           ;stkvar	_aexp @ sp[(-13)+10]
 29280  01524E  0EFD               	movlw	-3
 29281  015250  2AE3               	incf	plusw1,f,c
 29282  015252                     l9042:
 29283                           
 29284                           ;stkvar	_aexp @ sp[(-13)+10]
 29285  015252  0EFD               	movlw	-3
 29286  015254  006F FF8C  F001    	movff	plusw1,btemp
 29287  01525A  0E19               	movlw	25
 29288  01525C  6401               	cpfsgt	btemp^0,c
 29289  01525E  D7A9               	goto	l9024
 29290                           
 29291                           ;stkvar	_rem @ sp[(-13)+4]
 29292  015260  0EF7               	movlw	-9
 29293  015262  50E3               	movf	plusw1,w,c
 29294  015264  E10A               	bnz	u7190
 29295  015266  0EF8               	movlw	-8
 29296  015268  50E3               	movf	plusw1,w,c
 29297  01526A  E107               	bnz	u7190
 29298  01526C  0EF9               	movlw	-7
 29299  01526E  50E3               	movf	plusw1,w,c
 29300  015270  E104               	bnz	u7190
 29301  015272  0EFA               	movlw	-6
 29302  015274  50E3               	movf	plusw1,w,c
 29303  015276  B4D8               	btfsc	status,2,c
 29304  015278  D024               	goto	l9058
 29305  01527A                     u7190:
 29306                           
 29307                           ;stkvar	_grs @ sp[(-13)+0]
 29308  01527A  0EF3               	movlw	-13
 29309  01527C  80E3               	bsf	plusw1,0,c
 29310  01527E  D021               	goto	l9058
 29311  015280                     l9048:
 29312                           
 29313                           ;stkvar	_b @ sp[(-13)+-4]
 29314  015280  90D8               	bcf	status,0,c
 29315  015282  0EEF               	movlw	-17
 29316  015284  36E3               	rlcf	plusw1,f,c
 29317  015286  0EF0               	movlw	-16
 29318  015288  36E3               	rlcf	plusw1,f,c
 29319  01528A  0EF1               	movlw	-15
 29320  01528C  36E3               	rlcf	plusw1,f,c
 29321  01528E  0EF2               	movlw	-14
 29322  015290  36E3               	rlcf	plusw1,f,c
 29323                           
 29324                           ;stkvar	_grs @ sp[(-13)+0]
 29325  015292  0EF6               	movlw	-10
 29326  015294  AEE3               	btfss	plusw1,7,c
 29327  015296  D002               	goto	l9054
 29328                           
 29329                           ;stkvar	_b @ sp[(-13)+-4]
 29330  015298  0EEF               	movlw	-17
 29331  01529A  80E3               	bsf	plusw1,0,c
 29332  01529C                     l9054:
 29333                           
 29334                           ;stkvar	_grs @ sp[(-13)+0]
 29335  01529C  90D8               	bcf	status,0,c
 29336  01529E  0EF3               	movlw	-13
 29337  0152A0  36E3               	rlcf	plusw1,f,c
 29338  0152A2  0EF4               	movlw	-12
 29339  0152A4  36E3               	rlcf	plusw1,f,c
 29340  0152A6  0EF5               	movlw	-11
 29341  0152A8  36E3               	rlcf	plusw1,f,c
 29342  0152AA  0EF6               	movlw	-10
 29343  0152AC  36E3               	rlcf	plusw1,f,c
 29344                           
 29345                           ;stkvar	_new_exp @ sp[(-13)+8]
 29346  0152AE  50E1               	movf	fsr1l,w,c
 29347  0152B0  0FFB               	addlw	-5
 29348  0152B2  6ED9               	movwf	fsr2l,c
 29349  0152B4  50E2               	movf	fsr1h,w,c
 29350  0152B6  6EDA               	movwf	fsr2h,c
 29351  0152B8  0EFF               	movlw	255
 29352  0152BA  22DA               	addwfc	fsr2h,f,c
 29353  0152BC  06DE               	decf	postinc2,f,c
 29354  0152BE  0E00               	movlw	0
 29355  0152C0  5ADD               	subwfb	postdec2,f,c
 29356  0152C2                     l9058:
 29357                           
 29358                           ;stkvar	_b @ sp[(-13)+-4]
 29359  0152C2  0EF1               	movlw	-15
 29360  0152C4  AEE3               	btfss	plusw1,7,c
 29361  0152C6  D7DC               	goto	l9048
 29362                           
 29363                           ;stkvar	_aexp @ sp[(-13)+10]
 29364  0152C8  0EFD               	movlw	-3
 29365  0152CA  6AE3               	clrf	plusw1,c
 29366                           
 29367                           ;stkvar	_grs @ sp[(-13)+0]
 29368  0152CC  0EF6               	movlw	-10
 29369  0152CE  AEE3               	btfss	plusw1,7,c
 29370  0152D0  D020               	goto	l9072
 29371                           
 29372                           ;stkvar	_grs @ sp[(-13)+0]
 29373  0152D2  50E1               	movf	fsr1l,w,c
 29374  0152D4  0FF3               	addlw	-13
 29375  0152D6  6ED9               	movwf	fsr2l,c
 29376  0152D8  50E2               	movf	fsr1h,w,c
 29377  0152DA  6EDA               	movwf	fsr2h,c
 29378  0152DC  0EFF               	movlw	255
 29379  0152DE  22DA               	addwfc	fsr2h,f,c
 29380  0152E0  0EFF               	movlw	255
 29381  0152E2  14DE               	andwf	postinc2,w,c
 29382  0152E4  6E09               	movwf	(btemp+8)^0,c
 29383  0152E6  0EFF               	movlw	255
 29384  0152E8  14DE               	andwf	postinc2,w,c
 29385  0152EA  6E0A               	movwf	(btemp+9)^0,c
 29386  0152EC  0EFF               	movlw	255
 29387  0152EE  14DE               	andwf	postinc2,w,c
 29388  0152F0  6E0B               	movwf	(btemp+10)^0,c
 29389  0152F2  0E7F               	movlw	127
 29390  0152F4  14DE               	andwf	postinc2,w,c
 29391  0152F6  6E0C               	movwf	(btemp+11)^0,c
 29392  0152F8  5009               	movf	(btemp+8)^0,w,c
 29393  0152FA  100A               	iorwf	(btemp+9)^0,w,c
 29394  0152FC  100B               	iorwf	(btemp+10)^0,w,c
 29395  0152FE  100C               	iorwf	(btemp+11)^0,w,c
 29396  015300  B4D8               	btfsc	status,2,c
 29397  015302  D004               	goto	l9068
 29398  015304                     u7230:
 29399                           
 29400                           ;stkvar	_aexp @ sp[(-13)+10]
 29401  015304  0EFD               	movlw	-3
 29402  015306  6AE3               	clrf	plusw1,c
 29403  015308  2AE3               	incf	plusw1,f,c
 29404  01530A  D003               	goto	l9072
 29405  01530C                     l9068:
 29406                           
 29407                           ;stkvar	_b @ sp[(-13)+-4]
 29408  01530C  0EEF               	movlw	-17
 29409  01530E  B0E3               	btfsc	plusw1,0,c
 29410  015310  D7F9               	goto	u7230
 29411  015312                     l9072:
 29412                           
 29413                           ;stkvar	_aexp @ sp[(-13)+10]
 29414  015312  0EFD               	movlw	-3
 29415  015314  50E3               	movf	plusw1,w,c
 29416  015316  B4D8               	btfsc	status,2,c
 29417  015318  D036               	goto	l9082
 29418                           
 29419                           ;stkvar	_b @ sp[(-13)+-4]
 29420  01531A  50E1               	movf	fsr1l,w,c
 29421  01531C  0FEF               	addlw	-17
 29422  01531E  6ED9               	movwf	fsr2l,c
 29423  015320  50E2               	movf	fsr1h,w,c
 29424  015322  6EDA               	movwf	fsr2h,c
 29425  015324  0EFF               	movlw	255
 29426  015326  22DA               	addwfc	fsr2h,f,c
 29427  015328  2ADE               	incf	postinc2,f,c
 29428  01532A  0E00               	movlw	0
 29429  01532C  22DE               	addwfc	postinc2,f,c
 29430  01532E  22DE               	addwfc	postinc2,f,c
 29431  015330  22DE               	addwfc	postinc2,f,c
 29432                           
 29433                           ;stkvar	_b @ sp[(-13)+-4]
 29434  015332  0EF2               	movlw	-14
 29435  015334  A0E3               	btfss	plusw1,0,c
 29436  015336  D027               	goto	l9082
 29437  015338  0E01               	movlw	1
 29438  01533A  6E0C               	movwf	(btemp+11)^0,c
 29439                           
 29440                           ;stkvar	_b @ sp[(-13)+-4]
 29441  01533C  50E1               	movf	fsr1l,w,c
 29442  01533E  0FEF               	addlw	-17
 29443  015340  6ED9               	movwf	fsr2l,c
 29444  015342  50E2               	movf	fsr1h,w,c
 29445  015344  6EDA               	movwf	fsr2h,c
 29446  015346  0EFF               	movlw	255
 29447  015348  22DA               	addwfc	fsr2h,f,c
 29448  01534A  280C               	incf	(btemp+11)^0,w,c
 29449  01534C  52DE               	movf	postinc2,f,c
 29450  01534E  D008               	goto	u7270
 29451  015350                     u7275:
 29452  015350  52DE               	movf	postinc2,f,c
 29453  015352  90D8               	bcf	status,0,c
 29454  015354  BEDC               	btfsc	preinc2,7,c
 29455  015356  80D8               	bsf	status,0,c
 29456  015358  32DD               	rrcf	postdec2,f,c
 29457  01535A  32DD               	rrcf	postdec2,f,c
 29458  01535C  32DD               	rrcf	postdec2,f,c
 29459  01535E  32DE               	rrcf	postinc2,f,c
 29460  015360                     u7270:
 29461  015360  2EE8               	decfsz	wreg,f,c
 29462  015362  D7F6               	goto	u7275
 29463                           
 29464                           ;stkvar	_new_exp @ sp[(-13)+8]
 29465  015364  0EFB               	movlw	-5
 29466  015366  50E3               	movf	plusw1,w,c
 29467  015368  0F01               	addlw	1
 29468  01536A  6E01               	movwf	btemp^0,c
 29469  01536C  0EFB               	movlw	-5
 29470  01536E  0060  F007  FFE3   	movff	btemp,plusw1
 29471  015374  6A01               	clrf	btemp^0,c
 29472  015376  0EFC               	movlw	-4
 29473  015378  50E3               	movf	plusw1,w,c
 29474  01537A  2001               	addwfc	btemp^0,w,c
 29475  01537C  6E01               	movwf	btemp^0,c
 29476  01537E  0EFC               	movlw	-4
 29477  015380  0060  F007  FFE3   	movff	btemp,plusw1
 29478  015386                     l9082:
 29479                           
 29480                           ;stkvar	_new_exp @ sp[(-13)+8]
 29481  015386  0EFC               	movlw	-4
 29482  015388  BEE3               	btfsc	plusw1,7,c
 29483  01538A  D01B               	goto	l9088
 29484  01538C  0EFC               	movlw	-4
 29485  01538E  50E3               	movf	plusw1,w,c
 29486  015390  E104               	bnz	u7280
 29487  015392  0EFB               	movlw	-5
 29488  015394  28E3               	incf	plusw1,w,c
 29489  015396  A0D8               	btfss	status,0,c
 29490  015398  D014               	goto	l9088
 29491  01539A                     u7280:
 29492  01539A  0EFF               	movlw	255
 29493  01539C  6E0B               	movwf	(btemp+10)^0,c
 29494  01539E  0E00               	movlw	0
 29495  0153A0  6E0C               	movwf	(btemp+11)^0,c
 29496                           
 29497                           ;stkvar	_new_exp @ sp[(-13)+8]
 29498  0153A2  0EFB               	movlw	-5
 29499  0153A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29500  0153AA  0EFC               	movlw	-4
 29501  0153AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 29502                           
 29503                           ;stkvar	_b @ sp[(-13)+-4]
 29504  0153B2  0EEF               	movlw	-17
 29505  0153B4  6AE3               	clrf	plusw1,c
 29506  0153B6  0EF0               	movlw	-16
 29507  0153B8  6AE3               	clrf	plusw1,c
 29508  0153BA  0EF1               	movlw	-15
 29509  0153BC  6AE3               	clrf	plusw1,c
 29510  0153BE  0EF2               	movlw	-14
 29511  0153C0  6AE3               	clrf	plusw1,c
 29512  0153C2                     l9088:
 29513                           
 29514                           ;stkvar	_new_exp @ sp[(-13)+8]
 29515  0153C2  0EFC               	movlw	-4
 29516  0153C4  BEE3               	btfsc	plusw1,7,c
 29517  0153C6  D007               	goto	u7290
 29518  0153C8  0EFC               	movlw	-4
 29519  0153CA  50E3               	movf	plusw1,w,c
 29520  0153CC  E112               	bnz	l9094
 29521  0153CE  0EFB               	movlw	-5
 29522  0153D0  04E3               	decf	plusw1,w,c
 29523  0153D2  B0D8               	btfsc	status,0,c
 29524  0153D4  D00E               	goto	l9094
 29525  0153D6                     u7290:
 29526                           
 29527                           ;stkvar	_new_exp @ sp[(-13)+8]
 29528  0153D6  0EFB               	movlw	-5
 29529  0153D8  6AE3               	clrf	plusw1,c
 29530  0153DA  0EFC               	movlw	-4
 29531  0153DC  6AE3               	clrf	plusw1,c
 29532                           
 29533                           ;stkvar	_b @ sp[(-13)+-4]
 29534  0153DE  0EEF               	movlw	-17
 29535  0153E0  6AE3               	clrf	plusw1,c
 29536  0153E2  0EF0               	movlw	-16
 29537  0153E4  6AE3               	clrf	plusw1,c
 29538  0153E6  0EF1               	movlw	-15
 29539  0153E8  6AE3               	clrf	plusw1,c
 29540  0153EA  0EF2               	movlw	-14
 29541  0153EC  6AE3               	clrf	plusw1,c
 29542                           
 29543                           ;stkvar	_sign @ sp[(-13)+12]
 29544  0153EE  0EFF               	movlw	-1
 29545  0153F0  6AE3               	clrf	plusw1,c
 29546  0153F2                     l9094:
 29547                           
 29548                           ;stkvar	_new_exp @ sp[(-13)+8]
 29549                           ;stkvar	_bexp @ sp[(-13)+11]
 29550  0153F2  0EFB               	movlw	-5
 29551  0153F4  006F FF8C  F001    	movff	plusw1,btemp
 29552  0153FA  0EFE               	movlw	-2
 29553  0153FC  0060  F007  FFE3   	movff	btemp,plusw1
 29554                           
 29555                           ;stkvar	_bexp @ sp[(-13)+11]
 29556  015402  0EFE               	movlw	-2
 29557  015404  A0E3               	btfss	plusw1,0,c
 29558  015406  D009               	goto	l9100
 29559                           
 29560                           ;stkvar	_b @ sp[(-13)+-4]
 29561  015408  0EF1               	movlw	241
 29562  01540A  24E1               	addwf	fsr1l,w,c
 29563  01540C  6ED9               	movwf	fsr2l,c
 29564  01540E  0EFF               	movlw	255
 29565  015410  20E2               	addwfc	fsr1h,w,c
 29566  015412  6EDA               	movwf	fsr2h,c
 29567  015414  0E00               	movlw	0
 29568  015416  8EDB               	bsf	plusw2,7,c
 29569  015418  D008               	goto	l9102
 29570  01541A                     l9100:
 29571                           
 29572                           ;stkvar	_b @ sp[(-13)+-4]
 29573  01541A  0EF1               	movlw	241
 29574  01541C  24E1               	addwf	fsr1l,w,c
 29575  01541E  6ED9               	movwf	fsr2l,c
 29576  015420  0EFF               	movlw	255
 29577  015422  20E2               	addwfc	fsr1h,w,c
 29578  015424  6EDA               	movwf	fsr2h,c
 29579  015426  0E7F               	movlw	127
 29580  015428  16DF               	andwf	indf2,f,c
 29581  01542A                     l9102:
 29582                           
 29583                           ;stkvar	_b @ sp[(-13)+-4]
 29584  01542A  0EF2               	movlw	242
 29585  01542C  24E1               	addwf	fsr1l,w,c
 29586  01542E  6ED9               	movwf	fsr2l,c
 29587  015430  0EFF               	movlw	255
 29588  015432  20E2               	addwfc	fsr1h,w,c
 29589  015434  6EDA               	movwf	fsr2h,c
 29590                           
 29591                           ;stkvar	_bexp @ sp[(-13)+11]
 29592  015436  0EFE               	movlw	-2
 29593  015438  006F FF8C  F00C    	movff	plusw1,btemp+11
 29594  01543E  90D8               	bcf	status,0,c
 29595  015440  300C               	rrcf	(btemp+11)^0,w,c
 29596  015442  6EDF               	movwf	indf2,c
 29597  015444  D644               	goto	l9000
 29598  015446                     l3253:
 29599                           
 29600                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 29601  015446  0EEB               	movlw	235
 29602  015448  26E1               	addwf	fsr1l,f,c
 29603  01544A  0EFF               	movlw	255
 29604  01544C  22E2               	addwfc	fsr1h,f,c
 29605  01544E  0012               	return		;funcret
 29606  015450                     __end_of___fldiv:
 29607                           	opt callstack 0
 29608                           
 29609 ;; *************** function ___flge *****************
 29610 ;; Defined at:
 29611 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 29612 ;; Parameters:    Size  Location     Type
 29613 ;;  ff1             4  [STACK] unsigned char 
 29614 ;;  ff2             4  [STACK] unsigned char 
 29615 ;; Auto vars:     Size  Location     Type
 29616 ;;		None
 29617 ;; Return value:  Size  Location     Type
 29618 ;;		None               void
 29619 ;; Registers used:
 29620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 29621 ;; Tracked objects:
 29622 ;;		On entry : 0/2
 29623 ;;		On exit  : 0/0
 29624 ;;		Unchanged: 0/0
 29625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29630 ;;Total ram usage:        0 bytes
 29631 ;; Hardware stack levels used:    1
 29632 ;; Hardware stack levels required when called:   15
 29633 ;; This function calls:
 29634 ;;		Nothing
 29635 ;; This function is called by:
 29636 ;;		_main
 29637 ;;		_convert_dac_raw
 29638 ;;		_calc_ror_data
 29639 ;;		_check_day_time
 29640 ;;		_calc_bsoc
 29641 ;;		_efgtoa
 29642 ;; This function uses a reentrant model
 29643 ;;
 29644                           
 29645                           	psect	text120
 29646  0198CE                     __ptext120:
 29647                           	opt callstack 0
 29648  0198CE                     ___flge:
 29649                           	opt callstack 0
 29650                           
 29651                           ;stkvar	_ff1 @ sp[(0)+-4]
 29652                           
 29653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29654                           ;incstack = 0
 29655 ;; hardware stack exceeded
 29656  0198CE  50E1               	movf	fsr1l,w,c
 29657  0198D0  0FFC               	addlw	-4
 29658  0198D2  6ED9               	movwf	fsr2l,c
 29659  0198D4  50E2               	movf	fsr1h,w,c
 29660  0198D6  6EDA               	movwf	fsr2h,c
 29661  0198D8  0EFF               	movlw	255
 29662  0198DA  22DA               	addwfc	fsr2h,f,c
 29663  0198DC  0E00               	movlw	0
 29664  0198DE  14DE               	andwf	postinc2,w,c
 29665  0198E0  6E09               	movwf	(btemp+8)^0,c
 29666  0198E2  0E00               	movlw	0
 29667  0198E4  14DE               	andwf	postinc2,w,c
 29668  0198E6  6E0A               	movwf	(btemp+9)^0,c
 29669  0198E8  0E80               	movlw	128
 29670  0198EA  14DE               	andwf	postinc2,w,c
 29671  0198EC  6E0B               	movwf	(btemp+10)^0,c
 29672  0198EE  0E7F               	movlw	127
 29673  0198F0  14DE               	andwf	postinc2,w,c
 29674  0198F2  6E0C               	movwf	(btemp+11)^0,c
 29675  0198F4  5009               	movf	(btemp+8)^0,w,c
 29676  0198F6  100A               	iorwf	(btemp+9)^0,w,c
 29677  0198F8  100B               	iorwf	(btemp+10)^0,w,c
 29678  0198FA  100C               	iorwf	(btemp+11)^0,w,c
 29679  0198FC  A4D8               	btfss	status,2,c
 29680  0198FE  D008               	goto	l9376
 29681                           
 29682                           ;stkvar	_ff1 @ sp[(0)+-4]
 29683  019900  0EFC               	movlw	-4
 29684  019902  6AE3               	clrf	plusw1,c
 29685  019904  0EFD               	movlw	-3
 29686  019906  6AE3               	clrf	plusw1,c
 29687  019908  0EFE               	movlw	-2
 29688  01990A  6AE3               	clrf	plusw1,c
 29689  01990C  0EFF               	movlw	-1
 29690  01990E  6AE3               	clrf	plusw1,c
 29691  019910                     l9376:
 29692                           
 29693                           ;stkvar	_ff2 @ sp[(0)+-8]
 29694  019910  50E1               	movf	fsr1l,w,c
 29695  019912  0FF8               	addlw	-8
 29696  019914  6ED9               	movwf	fsr2l,c
 29697  019916  50E2               	movf	fsr1h,w,c
 29698  019918  6EDA               	movwf	fsr2h,c
 29699  01991A  0EFF               	movlw	255
 29700  01991C  22DA               	addwfc	fsr2h,f,c
 29701  01991E  0E00               	movlw	0
 29702  019920  14DE               	andwf	postinc2,w,c
 29703  019922  6E09               	movwf	(btemp+8)^0,c
 29704  019924  0E00               	movlw	0
 29705  019926  14DE               	andwf	postinc2,w,c
 29706  019928  6E0A               	movwf	(btemp+9)^0,c
 29707  01992A  0E80               	movlw	128
 29708  01992C  14DE               	andwf	postinc2,w,c
 29709  01992E  6E0B               	movwf	(btemp+10)^0,c
 29710  019930  0E7F               	movlw	127
 29711  019932  14DE               	andwf	postinc2,w,c
 29712  019934  6E0C               	movwf	(btemp+11)^0,c
 29713  019936  5009               	movf	(btemp+8)^0,w,c
 29714  019938  100A               	iorwf	(btemp+9)^0,w,c
 29715  01993A  100B               	iorwf	(btemp+10)^0,w,c
 29716  01993C  100C               	iorwf	(btemp+11)^0,w,c
 29717  01993E  A4D8               	btfss	status,2,c
 29718  019940  D008               	goto	l2934
 29719                           
 29720                           ;stkvar	_ff2 @ sp[(0)+-8]
 29721  019942  0EF8               	movlw	-8
 29722  019944  6AE3               	clrf	plusw1,c
 29723  019946  0EF9               	movlw	-7
 29724  019948  6AE3               	clrf	plusw1,c
 29725  01994A  0EFA               	movlw	-6
 29726  01994C  6AE3               	clrf	plusw1,c
 29727  01994E  0EFB               	movlw	-5
 29728  019950  6AE3               	clrf	plusw1,c
 29729  019952                     l2934:
 29730                           
 29731                           ;stkvar	_ff1 @ sp[(0)+-4]
 29732  019952  0EFF               	movlw	-1
 29733  019954  AEE3               	btfss	plusw1,7,c
 29734  019956  D024               	goto	l9382
 29735                           
 29736                           ;stkvar	_ff1 @ sp[(0)+-4]
 29737  019958  0E00               	movlw	0
 29738  01995A  6E09               	movwf	(btemp+8)^0,c
 29739  01995C  0E00               	movlw	0
 29740  01995E  6E0A               	movwf	(btemp+9)^0,c
 29741  019960  0E00               	movlw	0
 29742  019962  6E0B               	movwf	(btemp+10)^0,c
 29743  019964  0E80               	movlw	128
 29744  019966  6E0C               	movwf	(btemp+11)^0,c
 29745  019968  0EFC               	movlw	-4
 29746  01996A  50E3               	movf	plusw1,w,c
 29747  01996C  5E09               	subwf	(btemp+8)^0,f,c
 29748  01996E  0EFD               	movlw	-3
 29749  019970  50E3               	movf	plusw1,w,c
 29750  019972  5A0A               	subwfb	(btemp+9)^0,f,c
 29751  019974  0EFE               	movlw	-2
 29752  019976  50E3               	movf	plusw1,w,c
 29753  019978  5A0B               	subwfb	(btemp+10)^0,f,c
 29754  01997A  0EFF               	movlw	-1
 29755  01997C  50E3               	movf	plusw1,w,c
 29756  01997E  5A0C               	subwfb	(btemp+11)^0,f,c
 29757                           
 29758                           ;stkvar	_ff1 @ sp[(0)+-4]
 29759  019980  0EFC               	movlw	-4
 29760  019982  0060  F027  FFE3   	movff	btemp+8,plusw1
 29761  019988  0EFD               	movlw	-3
 29762  01998A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29763  019990  0EFE               	movlw	-2
 29764  019992  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29765  019998  0EFF               	movlw	-1
 29766  01999A  0060  F033  FFE3   	movff	btemp+11,plusw1
 29767  0199A0                     l9382:
 29768                           
 29769                           ;stkvar	_ff2 @ sp[(0)+-8]
 29770  0199A0  0EFB               	movlw	-5
 29771  0199A2  AEE3               	btfss	plusw1,7,c
 29772  0199A4  D024               	goto	l9386
 29773                           
 29774                           ;stkvar	_ff2 @ sp[(0)+-8]
 29775  0199A6  0E00               	movlw	0
 29776  0199A8  6E09               	movwf	(btemp+8)^0,c
 29777  0199AA  0E00               	movlw	0
 29778  0199AC  6E0A               	movwf	(btemp+9)^0,c
 29779  0199AE  0E00               	movlw	0
 29780  0199B0  6E0B               	movwf	(btemp+10)^0,c
 29781  0199B2  0E80               	movlw	128
 29782  0199B4  6E0C               	movwf	(btemp+11)^0,c
 29783  0199B6  0EF8               	movlw	-8
 29784  0199B8  50E3               	movf	plusw1,w,c
 29785  0199BA  5E09               	subwf	(btemp+8)^0,f,c
 29786  0199BC  0EF9               	movlw	-7
 29787  0199BE  50E3               	movf	plusw1,w,c
 29788  0199C0  5A0A               	subwfb	(btemp+9)^0,f,c
 29789  0199C2  0EFA               	movlw	-6
 29790  0199C4  50E3               	movf	plusw1,w,c
 29791  0199C6  5A0B               	subwfb	(btemp+10)^0,f,c
 29792  0199C8  0EFB               	movlw	-5
 29793  0199CA  50E3               	movf	plusw1,w,c
 29794  0199CC  5A0C               	subwfb	(btemp+11)^0,f,c
 29795                           
 29796                           ;stkvar	_ff2 @ sp[(0)+-8]
 29797  0199CE  0EF8               	movlw	-8
 29798  0199D0  0060  F027  FFE3   	movff	btemp+8,plusw1
 29799  0199D6  0EF9               	movlw	-7
 29800  0199D8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29801  0199DE  0EFA               	movlw	-6
 29802  0199E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29803  0199E6  0EFB               	movlw	-5
 29804  0199E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 29805  0199EE                     l9386:
 29806                           
 29807                           ;stkvar	_ff1 @ sp[(0)+-4]
 29808  0199EE  0EFF               	movlw	-1
 29809  0199F0  7EE3               	btg	plusw1,7,c
 29810                           
 29811                           ;stkvar	_ff2 @ sp[(0)+-8]
 29812  0199F2  0EFB               	movlw	-5
 29813  0199F4  7EE3               	btg	plusw1,7,c
 29814                           
 29815                           ;stkvar	_ff2 @ sp[(0)+-8]
 29816                           ;stkvar	_ff1 @ sp[(0)+-4]
 29817  0199F6  50E1               	movf	fsr1l,w,c
 29818  0199F8  0FFC               	addlw	-4
 29819  0199FA  6ED9               	movwf	fsr2l,c
 29820  0199FC  50E2               	movf	fsr1h,w,c
 29821  0199FE  6EDA               	movwf	fsr2h,c
 29822  019A00  0EFF               	movlw	255
 29823  019A02  22DA               	addwfc	fsr2h,f,c
 29824  019A04  0EF8               	movlw	-8
 29825  019A06  50E3               	movf	plusw1,w,c
 29826  019A08  5CDE               	subwf	postinc2,w,c
 29827  019A0A  0EF9               	movlw	-7
 29828  019A0C  50E3               	movf	plusw1,w,c
 29829  019A0E  58DE               	subwfb	postinc2,w,c
 29830  019A10  0EFA               	movlw	-6
 29831  019A12  50E3               	movf	plusw1,w,c
 29832  019A14  58DE               	subwfb	postinc2,w,c
 29833  019A16  0EFB               	movlw	-5
 29834  019A18  50E3               	movf	plusw1,w,c
 29835  019A1A  58DE               	subwfb	postinc2,w,c
 29836  019A1C  B0D8               	btfsc	status,0,c
 29837  019A1E  D002               	goto	l9394
 29838  019A20  9001               	bcf	btemp& (0+255),0,c
 29839  019A22  D001               	goto	l2941
 29840  019A24                     l9394:
 29841  019A24  8001               	bsf	btemp& (0+255),0,c
 29842  019A26                     l2941:
 29843                           
 29844                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 29845  019A26  0EF8               	movlw	248
 29846  019A28  26E1               	addwf	fsr1l,f,c
 29847  019A2A  0EFF               	movlw	255
 29848  019A2C  22E2               	addwfc	fsr1h,f,c
 29849  019A2E  0012               	return		;funcret
 29850  019A30                     __end_of___flge:
 29851                           	opt callstack 0
 29852                           
 29853 ;; *************** function _calc_model_data *****************
 29854 ;; Defined at:
 29855 ;;		line 67 in file "mbmc.c"
 29856 ;; Parameters:    Size  Location     Type
 29857 ;;		None
 29858 ;; Auto vars:     Size  Location     Type
 29859 ;;		None
 29860 ;; Return value:  Size  Location     Type
 29861 ;;                  1  [STACK] void 
 29862 ;; Registers used:
 29863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 29864 ;; Tracked objects:
 29865 ;;		On entry : 0/1
 29866 ;;		On exit  : 3F/39
 29867 ;;		Unchanged: 0/0
 29868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29873 ;;Total ram usage:        0 bytes
 29874 ;; Hardware stack levels used:    1
 29875 ;; Hardware stack levels required when called:   18
 29876 ;; This function calls:
 29877 ;;		___fladd
 29878 ;;		___flmul
 29879 ;;		___flsub
 29880 ;;		_lp_filter
 29881 ;;		_start_bsoc
 29882 ;;		_stop_bsoc
 29883 ;; This function is called by:
 29884 ;;		_main
 29885 ;; This function uses a reentrant model
 29886 ;;
 29887                           
 29888                           	psect	text121
 29889  016200                     __ptext121:
 29890                           	opt callstack 0
 29891  016200                     _calc_model_data:
 29892                           	opt callstack 12
 29893                           
 29894                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 29895                           
 29896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29897                           ;incstack = 0
 29898  016200  ECC2  F0E9         	call	_stop_bsoc	;wreg free
 29899                           
 29900                           ; BSR set to: 57
 29901                           ;mbmc.c: 72:  if (!V.calib) {
 29902  016204  0101               	movlb	1	; () banked
 29903  016206  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 29904  016208  A4D8               	btfss	status,2,c
 29905  01620A  D219               	goto	l12246
 29906                           
 29907                           ; BSR set to: 1
 29908                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 29909  01620C  EE22  F0FF         	lfsr	2,_C
 29910  016210  006F FF78  F943    	movff	postinc2,_C+68	;volatile
 29911  016216  006F FF78  F944    	movff	postinc2,_C+69	;volatile
 29912  01621C  006F FF78  F945    	movff	postinc2,_C+70	;volatile
 29913  016222  006F FF74  F946    	movff	postdec2,_C+71	;volatile
 29914                           
 29915                           ; BSR set to: 1
 29916                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 29917  016228  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 29918  01622E  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 29919  016234  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 29920  01623A  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 29921  016240  EE22  F143         	lfsr	2,_C+68	;volatile
 29922  016244  006F FF7B FFE6     	movff	postinc2,postinc1
 29923  01624A  006F FF7B FFE6     	movff	postinc2,postinc1
 29924  016250  006F FF7B FFE6     	movff	postinc2,postinc1
 29925  016256  006F FF7B FFE6     	movff	postinc2,postinc1
 29926  01625C  EC6E  F0E3         	call	___flsub	;wreg free
 29927  016260  0060  F004  F96F   	movff	btemp,_C+112	;volatile
 29928  016266  0060  F008  F970   	movff	btemp+1,_C+113	;volatile
 29929  01626C  0060  F00C  F971   	movff	btemp+2,_C+114	;volatile
 29930  016272  0060  F010  F972   	movff	btemp+3,_C+115	;volatile
 29931                           
 29932                           ;mbmc.c: 75:   bcror = C.c_bat;
 29933  016278  C943  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 29934  01627C  C944  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 29935  016280  C945  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 29936  016284  C946  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 29937                           
 29938                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 29939  016288  EE22  F103         	lfsr	2,_C+4	;volatile
 29940  01628C  006F FF78  F947    	movff	postinc2,_C+72	;volatile
 29941  016292  006F FF78  F948    	movff	postinc2,_C+73	;volatile
 29942  016298  006F FF78  F949    	movff	postinc2,_C+74	;volatile
 29943  01629E  006F FF74  F94A    	movff	postdec2,_C+75	;volatile
 29944                           
 29945                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 29946  0162A4  EE22  F10F         	lfsr	2,_C+16	;volatile
 29947  0162A8  006F FF78  F953    	movff	postinc2,_C+84	;volatile
 29948  0162AE  006F FF78  F954    	movff	postinc2,_C+85	;volatile
 29949  0162B4  006F FF78  F955    	movff	postinc2,_C+86	;volatile
 29950  0162BA  006F FF74  F956    	movff	postdec2,_C+87	;volatile
 29951                           
 29952                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 29953  0162C0  EE22  F133         	lfsr	2,_C+52	;volatile
 29954  0162C4  006F FF78  F967    	movff	postinc2,_C+104	;volatile
 29955  0162CA  006F FF78  F968    	movff	postinc2,_C+105	;volatile
 29956  0162D0  006F FF78  F969    	movff	postinc2,_C+106	;volatile
 29957  0162D6  006F FF74  F96A    	movff	postdec2,_C+107	;volatile
 29958                           
 29959                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 29960  0162DC  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 29961  0162E2  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 29962  0162E8  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 29963  0162EE  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 29964  0162F4  EE22  F153         	lfsr	2,_C+84	;volatile
 29965  0162F8  006F FF7B FFE6     	movff	postinc2,postinc1
 29966  0162FE  006F FF7B FFE6     	movff	postinc2,postinc1
 29967  016304  006F FF7B FFE6     	movff	postinc2,postinc1
 29968  01630A  006F FF7B FFE6     	movff	postinc2,postinc1
 29969  016310  EC6E  F0E3         	call	___flsub	;wreg free
 29970  016314  0060  F004  F96B   	movff	btemp,_C+108	;volatile
 29971  01631A  0060  F008  F96C   	movff	btemp+1,_C+109	;volatile
 29972  016320  0060  F00C  F96D   	movff	btemp+2,_C+110	;volatile
 29973  016326  0060  F010  F96E   	movff	btemp+3,_C+111	;volatile
 29974                           
 29975                           ;mbmc.c: 80:   bvror = C.v_bat;
 29976  01632C  C953  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 29977  016330  C954  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 29978  016334  C955  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 29979  016338  C956  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 29980                           
 29981                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 29982  01633C  EE22  F113         	lfsr	2,_C+20	;volatile
 29983  016340  006F FF78  F94F    	movff	postinc2,_C+80	;volatile
 29984  016346  006F FF78  F950    	movff	postinc2,_C+81	;volatile
 29985  01634C  006F FF78  F951    	movff	postinc2,_C+82	;volatile
 29986  016352  006F FF74  F952    	movff	postdec2,_C+83	;volatile
 29987                           
 29988                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 29989  016358  EE22  F107         	lfsr	2,_C+8	;volatile
 29990  01635C  006F FF78  F94B    	movff	postinc2,_C+76	;volatile
 29991  016362  006F FF78  F94C    	movff	postinc2,_C+77	;volatile
 29992  016368  006F FF78  F94D    	movff	postinc2,_C+78	;volatile
 29993  01636E  006F FF74  F94E    	movff	postdec2,_C+79	;volatile
 29994                           
 29995                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 29996  016374  EE22  F12F         	lfsr	2,_C+48	;volatile
 29997  016378  006F FF78  F963    	movff	postinc2,_C+100	;volatile
 29998  01637E  006F FF78  F964    	movff	postinc2,_C+101	;volatile
 29999  016384  006F FF78  F965    	movff	postinc2,_C+102	;volatile
 30000  01638A  006F FF74  F966    	movff	postdec2,_C+103	;volatile
 30001                           
 30002                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 30003  016390  0E01               	movlw	1
 30004  016392  6EE6               	movwf	postinc1,c
 30005  016394  0E10               	movlw	16
 30006  016396  6EE6               	movwf	postinc1,c
 30007  016398  EE22  F0FF         	lfsr	2,_C
 30008  01639C  006F FF7B FFE6     	movff	postinc2,postinc1
 30009  0163A2  006F FF7B FFE6     	movff	postinc2,postinc1
 30010  0163A8  006F FF7B FFE6     	movff	postinc2,postinc1
 30011  0163AE  006F FF7B FFE6     	movff	postinc2,postinc1
 30012  0163B4  EE22  F103         	lfsr	2,_C+4	;volatile
 30013  0163B8  006F FF7B FFE6     	movff	postinc2,postinc1
 30014  0163BE  006F FF7B FFE6     	movff	postinc2,postinc1
 30015  0163C4  006F FF7B FFE6     	movff	postinc2,postinc1
 30016  0163CA  006F FF7B FFE6     	movff	postinc2,postinc1
 30017  0163D0  EC6E  F0E3         	call	___flsub	;wreg free
 30018  0163D4  0060  F007  FFE6   	movff	btemp,postinc1
 30019  0163DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30020  0163E0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30021  0163E6  0060  F013  FFE6   	movff	btemp+3,postinc1
 30022  0163EC  ECF9  F0C6         	call	_lp_filter	;wreg free
 30023  0163F0  0060  F004  F93F   	movff	btemp,_C+64	;volatile
 30024  0163F6  0060  F008  F940   	movff	btemp+1,_C+65	;volatile
 30025  0163FC  0060  F00C  F941   	movff	btemp+2,_C+66	;volatile
 30026  016402  0060  F010  F942   	movff	btemp+3,_C+67	;volatile
 30027                           
 30028                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 30029  016408  0E01               	movlw	1
 30030  01640A  6EE6               	movwf	postinc1,c
 30031  01640C  0E11               	movlw	17
 30032  01640E  6EE6               	movwf	postinc1,c
 30033  016410  EE22  F153         	lfsr	2,_C+84	;volatile
 30034  016414  006F FF7B FFE6     	movff	postinc2,postinc1
 30035  01641A  006F FF7B FFE6     	movff	postinc2,postinc1
 30036  016420  006F FF7B FFE6     	movff	postinc2,postinc1
 30037  016426  006F FF7B FFE6     	movff	postinc2,postinc1
 30038  01642C  EE22  F13F         	lfsr	2,_C+64	;volatile
 30039  016430  006F FF7B FFE6     	movff	postinc2,postinc1
 30040  016436  006F FF7B FFE6     	movff	postinc2,postinc1
 30041  01643C  006F FF7B FFE6     	movff	postinc2,postinc1
 30042  016442  006F FF7B FFE6     	movff	postinc2,postinc1
 30043  016448  EC78  F09F         	call	___flmul	;wreg free
 30044  01644C  0060  F007  FFE6   	movff	btemp,postinc1
 30045  016452  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30046  016458  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30047  01645E  0060  F013  FFE6   	movff	btemp+3,postinc1
 30048  016464  ECF9  F0C6         	call	_lp_filter	;wreg free
 30049  016468  0060  F004  F973   	movff	btemp,_C+116	;volatile
 30050  01646E  0060  F008  F974   	movff	btemp+1,_C+117	;volatile
 30051  016474  0060  F00C  F975   	movff	btemp+2,_C+118	;volatile
 30052  01647A  0060  F010  F976   	movff	btemp+3,_C+119	;volatile
 30053                           
 30054                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 30055  016480  0E01               	movlw	1
 30056  016482  6EE6               	movwf	postinc1,c
 30057  016484  0E12               	movlw	18
 30058  016486  6EE6               	movwf	postinc1,c
 30059  016488  EE22  F14F         	lfsr	2,_C+80	;volatile
 30060  01648C  006F FF7B FFE6     	movff	postinc2,postinc1
 30061  016492  006F FF7B FFE6     	movff	postinc2,postinc1
 30062  016498  006F FF7B FFE6     	movff	postinc2,postinc1
 30063  01649E  006F FF7B FFE6     	movff	postinc2,postinc1
 30064  0164A4  EE22  F147         	lfsr	2,_C+72	;volatile
 30065  0164A8  006F FF7B FFE6     	movff	postinc2,postinc1
 30066  0164AE  006F FF7B FFE6     	movff	postinc2,postinc1
 30067  0164B4  006F FF7B FFE6     	movff	postinc2,postinc1
 30068  0164BA  006F FF7B FFE6     	movff	postinc2,postinc1
 30069  0164C0  EC78  F09F         	call	___flmul	;wreg free
 30070  0164C4  0060  F007  FFE6   	movff	btemp,postinc1
 30071  0164CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30072  0164D0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30073  0164D6  0060  F013  FFE6   	movff	btemp+3,postinc1
 30074  0164DC  ECF9  F0C6         	call	_lp_filter	;wreg free
 30075  0164E0  0060  F004  F97B   	movff	btemp,_C+124	;volatile
 30076  0164E6  0060  F008  F97C   	movff	btemp+1,_C+125	;volatile
 30077  0164EC  0060  F00C  F97D   	movff	btemp+2,_C+126	;volatile
 30078  0164F2  0060  F010  F97E   	movff	btemp+3,_C+127	;volatile
 30079                           
 30080                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 30081  0164F8  0E01               	movlw	1
 30082  0164FA  6EE6               	movwf	postinc1,c
 30083  0164FC  0E13               	movlw	19
 30084  0164FE  6EE6               	movwf	postinc1,c
 30085  016500  0E00               	movlw	0
 30086  016502  6EE6               	movwf	postinc1,c
 30087  016504  0E00               	movlw	0
 30088  016506  6EE6               	movwf	postinc1,c
 30089  016508  0E60               	movlw	96
 30090  01650A  6EE6               	movwf	postinc1,c
 30091  01650C  0EC1               	movlw	193
 30092  01650E  6EE6               	movwf	postinc1,c
 30093  016510  EE22  F163         	lfsr	2,_C+100	;volatile
 30094  016514  006F FF7B FFE6     	movff	postinc2,postinc1
 30095  01651A  006F FF7B FFE6     	movff	postinc2,postinc1
 30096  016520  006F FF7B FFE6     	movff	postinc2,postinc1
 30097  016526  006F FF7B FFE6     	movff	postinc2,postinc1
 30098  01652C  EE22  F13F         	lfsr	2,_C+64	;volatile
 30099  016530  006F FF7B FFE6     	movff	postinc2,postinc1
 30100  016536  006F FF7B FFE6     	movff	postinc2,postinc1
 30101  01653C  006F FF7B FFE6     	movff	postinc2,postinc1
 30102  016542  006F FF7B FFE6     	movff	postinc2,postinc1
 30103  016548  EC78  F09F         	call	___flmul	;wreg free
 30104  01654C  0060  F007  FFE6   	movff	btemp,postinc1
 30105  016552  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30106  016558  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30107  01655E  0060  F013  FFE6   	movff	btemp+3,postinc1
 30108  016564  EC8D  F0A3         	call	___fladd	;wreg free
 30109  016568  0060  F007  FFE6   	movff	btemp,postinc1
 30110  01656E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30111  016574  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30112  01657A  0060  F013  FFE6   	movff	btemp+3,postinc1
 30113  016580  ECF9  F0C6         	call	_lp_filter	;wreg free
 30114  016584  0060  F004  F977   	movff	btemp,_C+120	;volatile
 30115  01658A  0060  F008  F978   	movff	btemp+1,_C+121	;volatile
 30116  016590  0060  F00C  F979   	movff	btemp+2,_C+122	;volatile
 30117  016596  0060  F010  F97A   	movff	btemp+3,_C+123	;volatile
 30118                           
 30119                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 30120  01659C  0E01               	movlw	1
 30121  01659E  6EE6               	movwf	postinc1,c
 30122  0165A0  0E14               	movlw	20
 30123  0165A2  6EE6               	movwf	postinc1,c
 30124  0165A4  EE22  F153         	lfsr	2,_C+84	;volatile
 30125  0165A8  006F FF7B FFE6     	movff	postinc2,postinc1
 30126  0165AE  006F FF7B FFE6     	movff	postinc2,postinc1
 30127  0165B4  006F FF7B FFE6     	movff	postinc2,postinc1
 30128  0165BA  006F FF7B FFE6     	movff	postinc2,postinc1
 30129  0165C0  EE22  F143         	lfsr	2,_C+68	;volatile
 30130  0165C4  006F FF7B FFE6     	movff	postinc2,postinc1
 30131  0165CA  006F FF7B FFE6     	movff	postinc2,postinc1
 30132  0165D0  006F FF7B FFE6     	movff	postinc2,postinc1
 30133  0165D6  006F FF7B FFE6     	movff	postinc2,postinc1
 30134  0165DC  EC78  F09F         	call	___flmul	;wreg free
 30135  0165E0  0060  F007  FFE6   	movff	btemp,postinc1
 30136  0165E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30137  0165EC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30138  0165F2  0060  F013  FFE6   	movff	btemp+3,postinc1
 30139  0165F8  ECF9  F0C6         	call	_lp_filter	;wreg free
 30140  0165FC  0060  F004  F97F   	movff	btemp,_C+128	;volatile
 30141  016602  0060  F008  F980   	movff	btemp+1,_C+129	;volatile
 30142  016608  0060  F00C  F981   	movff	btemp+2,_C+130	;volatile
 30143  01660E  0060  F010  F982   	movff	btemp+3,_C+131	;volatile
 30144                           
 30145                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 30146  016614  EE22  F177         	lfsr	2,_C+120	;volatile
 30147  016618  0E03               	movlw	3
 30148  01661A  AEDB               	btfss	plusw2,7,c
 30149  01661C  D010               	goto	l12246
 30150                           
 30151                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 30152  01661E  0E17               	movlw	23
 30153  016620  006F FFA0  F977    	movff	wreg,_C+120	;volatile
 30154  016626  0EB7               	movlw	183
 30155  016628  006F FFA0  F978    	movff	wreg,_C+121	;volatile
 30156  01662E  0ED1               	movlw	209
 30157  016630  006F FFA0  F979    	movff	wreg,_C+122	;volatile
 30158  016636  0E38               	movlw	56
 30159  016638  006F FFA0  F97A    	movff	wreg,_C+123	;volatile
 30160  01663E                     l12246:
 30161                           
 30162                           ;mbmc.c: 95:  start_bsoc();
 30163  01663E  EC48  F0E8         	call	_start_bsoc	;wreg free
 30164                           
 30165                           ; BSR set to: 57
 30166                           ;mbmc.c: 96:  C.update = 1;
 30167  016642  0E01               	movlw	1
 30168  016644  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 30169                           
 30170                           ; BSR set to: 57
 30171                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30172  01664A  0012               	return		;funcret
 30173  01664C                     __end_of_calc_model_data:
 30174                           	opt callstack 0
 30175                           
 30176 ;; *************** function _stop_bsoc *****************
 30177 ;; Defined at:
 30178 ;;		line 130 in file "bsoc.c"
 30179 ;; Parameters:    Size  Location     Type
 30180 ;;		None
 30181 ;; Auto vars:     Size  Location     Type
 30182 ;;		None
 30183 ;; Return value:  Size  Location     Type
 30184 ;;                  1  [STACK] void 
 30185 ;; Registers used:
 30186 ;;		None
 30187 ;; Tracked objects:
 30188 ;;		On entry : 0/1
 30189 ;;		On exit  : 3F/39
 30190 ;;		Unchanged: 0/0
 30191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30196 ;;Total ram usage:        0 bytes
 30197 ;; Hardware stack levels used:    1
 30198 ;; Hardware stack levels required when called:   15
 30199 ;; This function calls:
 30200 ;;		Nothing
 30201 ;; This function is called by:
 30202 ;;		_calc_model_data
 30203 ;; This function uses a reentrant model
 30204 ;;
 30205                           
 30206                           	psect	text122
 30207  01D384                     __ptext122:
 30208                           	opt callstack 0
 30209  01D384                     _stop_bsoc:
 30210                           	opt callstack 14
 30211                           
 30212                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 30213                           
 30214                           ; BSR set to: 57
 30215                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30216                           ;incstack = 0
 30217  01D384  0139               	movlb	57	; () banked
 30218  01D386  9D96               	bcf	150,6,b	;volatile
 30219                           
 30220                           ; BSR set to: 57
 30221                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 30222  01D388  0012               	return		;funcret
 30223  01D38A                     __end_of_stop_bsoc:
 30224                           	opt callstack 0
 30225                           
 30226 ;; *************** function _start_bsoc *****************
 30227 ;; Defined at:
 30228 ;;		line 121 in file "bsoc.c"
 30229 ;; Parameters:    Size  Location     Type
 30230 ;;		None
 30231 ;; Auto vars:     Size  Location     Type
 30232 ;;		None
 30233 ;; Return value:  Size  Location     Type
 30234 ;;                  1  [STACK] void 
 30235 ;; Registers used:
 30236 ;;		wreg, status,2, status,0, btemp+11
 30237 ;; Tracked objects:
 30238 ;;		On entry : 0/1
 30239 ;;		On exit  : 3F/39
 30240 ;;		Unchanged: 0/0
 30241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30246 ;;Total ram usage:        0 bytes
 30247 ;; Hardware stack levels used:    1
 30248 ;; Hardware stack levels required when called:   15
 30249 ;; This function calls:
 30250 ;;		Nothing
 30251 ;; This function is called by:
 30252 ;;		_calc_model_data
 30253 ;; This function uses a reentrant model
 30254 ;;
 30255                           
 30256                           	psect	text123
 30257  01D090                     __ptext123:
 30258                           	opt callstack 0
 30259  01D090                     _start_bsoc:
 30260                           	opt callstack 14
 30261                           
 30262                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 30263                           
 30264                           ; BSR set to: 57
 30265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30266                           ;incstack = 0
 30267  01D090  0139               	movlb	57	; () banked
 30268  01D092  8D96               	bsf	150,6,b	;volatile
 30269                           
 30270                           ; BSR set to: 57
 30271  01D094  A4BE               	btfss	190,2,c	;volatile
 30272  01D096  D002               	goto	u10470
 30273  01D098  0E01               	movlw	1
 30274  01D09A  D001               	goto	u10476
 30275  01D09C                     u10470:
 30276  01D09C  0E00               	movlw	0
 30277  01D09E                     u10476:
 30278  01D09E  0AFF               	xorlw	255
 30279  01D0A0  6E0C               	movwf	(btemp+11)^0,c
 30280  01D0A2  460C               	rlncf	(btemp+11)^0,f,c
 30281  01D0A4  460C               	rlncf	(btemp+11)^0,f,c
 30282  01D0A6  50BE               	movf	190,w,c	;volatile
 30283  01D0A8  180C               	xorwf	(btemp+11)^0,w,c
 30284  01D0AA  0BFB               	andlw	-5
 30285  01D0AC  180C               	xorwf	(btemp+11)^0,w,c
 30286  01D0AE  6EBE               	movwf	190,c	;volatile
 30287                           
 30288                           ; BSR set to: 57
 30289                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 30290  01D0B0  0012               	return		;funcret
 30291  01D0B2                     __end_of_start_bsoc:
 30292                           	opt callstack 0
 30293                           
 30294 ;; *************** function _lp_filter *****************
 30295 ;; Defined at:
 30296 ;;		line 29 in file "mbmc.c"
 30297 ;; Parameters:    Size  Location     Type
 30298 ;;  new             4  [STACK] const float 
 30299 ;;  bn              1  [STACK] const unsigned char 
 30300 ;;  slow            1  [STACK] const char 
 30301 ;; Auto vars:     Size  Location     Type
 30302 ;;  lp_speed        4  [STACK] float 
 30303 ;; Return value:  Size  Location     Type
 30304 ;;                  4  [STACK] float 
 30305 ;; Registers used:
 30306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 30307 ;; Tracked objects:
 30308 ;;		On entry : 0/1
 30309 ;;		On exit  : 0/0
 30310 ;;		Unchanged: 0/0
 30311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30316 ;;Total ram usage:        0 bytes
 30317 ;; Hardware stack levels used:    1
 30318 ;; Hardware stack levels required when called:   17
 30319 ;; This function calls:
 30320 ;;		___fladd
 30321 ;;		___flmul
 30322 ;;		___flsub
 30323 ;; This function is called by:
 30324 ;;		_main
 30325 ;;		_convert_adc_data
 30326 ;;		_calc_model_data
 30327 ;; This function uses a reentrant model
 30328 ;;
 30329                           
 30330                           	psect	text124
 30331  018DF2                     __ptext124:
 30332                           	opt callstack 0
 30333  018DF2                     _lp_filter:
 30334                           	opt callstack 0
 30335                           
 30336                           ; BSR set to: 57
 30337                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30338  018DF2  52E6               	movf	postinc1,f,c
 30339  018DF4  52E6               	movf	postinc1,f,c
 30340  018DF6  52E6               	movf	postinc1,f,c
 30341  018DF8  52E6               	movf	postinc1,f,c
 30342                           
 30343                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 30344                           ;stkvar	_bn @ sp[(-4)+-5]
 30345                           
 30346                           ;incstack = 0
 30347  018DFA  0EF7               	movlw	-9
 30348  018DFC  006F FF8C  F001    	movff	plusw1,btemp
 30349  018E02  0E14               	movlw	20
 30350  018E04  6401               	cpfsgt	btemp^0,c
 30351  018E06  D011               	goto	l11346
 30352  018E08                     u10280:
 30353                           
 30354                           ;mbmc.c: 35:   return new;
 30355                           ;stkvar	_new @ sp[(-4)+-4]
 30356  018E08  0EF8               	movlw	-8
 30357  018E0A  006F FF8C  F001    	movff	plusw1,btemp
 30358  018E10  0EF9               	movlw	-7
 30359  018E12  006F FF8C  F002    	movff	plusw1,btemp+1
 30360  018E18  0EFA               	movlw	-6
 30361  018E1A  006F FF8C  F003    	movff	plusw1,btemp+2
 30362  018E20  0EFB               	movlw	-5
 30363  018E22  006F FF8C  F004    	movff	plusw1,btemp+3
 30364  018E28  D0BD               	goto	l2100
 30365  018E2A                     l11346:
 30366                           
 30367                           ;mbmc.c: 37:  if (slow == (-1)) {
 30368                           ;stkvar	_slow @ sp[(-4)+-6]
 30369  018E2A  0EF6               	movlw	-10
 30370  018E2C  28E3               	incf	plusw1,w,c
 30371  018E2E  A4D8               	btfss	status,2,c
 30372  018E30  D012               	goto	l11354
 30373                           
 30374                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 30375                           ;stkvar	_bn @ sp[(-4)+-5]
 30376  018E32  0EF7               	movlw	-9
 30377  018E34  50E3               	movf	plusw1,w,c
 30378  018E36  0D04               	mullw	4
 30379  018E38  0E00               	movlw	low lp_filter@smooth
 30380  018E3A  24F3               	addwf	243,w,c
 30381  018E3C  6ED9               	movwf	fsr2l,c
 30382  018E3E  0E03               	movlw	high lp_filter@smooth
 30383  018E40  20F4               	addwfc	prodh,w,c
 30384  018E42  6EDA               	movwf	fsr2h,c
 30385  018E44  0E00               	movlw	0
 30386  018E46  6EDE               	movwf	postinc2,c
 30387  018E48  0E00               	movlw	0
 30388  018E4A  6EDE               	movwf	postinc2,c
 30389  018E4C  0E00               	movlw	0
 30390  018E4E  6EDE               	movwf	postinc2,c
 30391  018E50  0E00               	movlw	0
 30392  018E52  6EDD               	movwf	postdec2,c
 30393  018E54  D7D9               	goto	u10280
 30394  018E56                     l11354:
 30395                           
 30396                           ;mbmc.c: 42:  if (slow) {
 30397                           ;stkvar	_slow @ sp[(-4)+-6]
 30398  018E56  0EF6               	movlw	-10
 30399  018E58  50E3               	movf	plusw1,w,c
 30400  018E5A  B4D8               	btfsc	status,2,c
 30401  018E5C  D006               	goto	l11358
 30402                           
 30403                           ;mbmc.c: 43:   lp_speed = 0.033;
 30404  018E5E  0E02               	movlw	2
 30405  018E60  6E09               	movwf	(btemp+8)^0,c
 30406  018E62  0E2B               	movlw	43
 30407  018E64  6E0A               	movwf	(btemp+9)^0,c
 30408  018E66  0E07               	movlw	7
 30409  018E68  D005               	goto	L36
 30410  018E6A                     l11358:
 30411                           
 30412                           ;mbmc.c: 45:   lp_speed = 0.066;
 30413  018E6A  0E02               	movlw	2
 30414  018E6C  6E09               	movwf	(btemp+8)^0,c
 30415  018E6E  0E2B               	movlw	43
 30416  018E70  6E0A               	movwf	(btemp+9)^0,c
 30417  018E72  0E87               	movlw	135
 30418  018E74                     L36:
 30419  018E74  6E0B               	movwf	(btemp+10)^0,c
 30420  018E76  0E3D               	movlw	61
 30421  018E78  6E0C               	movwf	(btemp+11)^0,c
 30422                           
 30423                           ;stkvar	_lp_speed @ sp[(-4)+0]
 30424  018E7A  0EFC               	movlw	-4
 30425  018E7C  0060  F027  FFE3   	movff	btemp+8,plusw1
 30426  018E82  0EFD               	movlw	-3
 30427  018E84  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30428  018E8A  0EFE               	movlw	-2
 30429  018E8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30430  018E92  0EFF               	movlw	-1
 30431  018E94  0060  F033  FFE3   	movff	btemp+11,plusw1
 30432                           
 30433                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 30434                           ;stkvar	_bn @ sp[(-4)+-5]
 30435  018E9A  0EF7               	movlw	-9
 30436  018E9C  50E3               	movf	plusw1,w,c
 30437  018E9E  0D04               	mullw	4
 30438  018EA0  0E00               	movlw	low lp_filter@smooth
 30439  018EA2  24F3               	addwf	243,w,c
 30440  018EA4  6ED9               	movwf	fsr2l,c
 30441  018EA6  0E03               	movlw	high lp_filter@smooth
 30442  018EA8  20F4               	addwfc	prodh,w,c
 30443  018EAA  6EDA               	movwf	fsr2h,c
 30444  018EAC  006F FF7B FFE6     	movff	postinc2,postinc1
 30445  018EB2  006F FF7B FFE6     	movff	postinc2,postinc1
 30446  018EB8  006F FF7B FFE6     	movff	postinc2,postinc1
 30447  018EBE  006F FF7B FFE6     	movff	postinc2,postinc1
 30448                           
 30449                           ;stkvar	_lp_speed @ sp[(-8)+0]
 30450  018EC4  0EF8               	movlw	-8
 30451  018EC6  006F FF8F FFE6     	movff	plusw1,postinc1
 30452  018ECC  006F FF8F FFE6     	movff	plusw1,postinc1
 30453  018ED2  006F FF8F FFE6     	movff	plusw1,postinc1
 30454  018ED8  006F FF8F FFE6     	movff	plusw1,postinc1
 30455                           
 30456                           ;stkvar	_bn @ sp[(-12)+-5]
 30457  018EDE  0EEF               	movlw	-17
 30458  018EE0  50E3               	movf	plusw1,w,c
 30459  018EE2  0D04               	mullw	4
 30460  018EE4  0E00               	movlw	low lp_filter@smooth
 30461  018EE6  24F3               	addwf	243,w,c
 30462  018EE8  6ED9               	movwf	fsr2l,c
 30463  018EEA  0E03               	movlw	high lp_filter@smooth
 30464  018EEC  20F4               	addwfc	prodh,w,c
 30465  018EEE  6EDA               	movwf	fsr2h,c
 30466  018EF0  006F FF7B FFE6     	movff	postinc2,postinc1
 30467  018EF6  006F FF7B FFE6     	movff	postinc2,postinc1
 30468  018EFC  006F FF7B FFE6     	movff	postinc2,postinc1
 30469  018F02  006F FF7B FFE6     	movff	postinc2,postinc1
 30470                           
 30471                           ;stkvar	_new @ sp[(-16)+-4]
 30472  018F08  0EEC               	movlw	-20
 30473  018F0A  006F FF8F FFE6     	movff	plusw1,postinc1
 30474  018F10  006F FF8F FFE6     	movff	plusw1,postinc1
 30475  018F16  006F FF8F FFE6     	movff	plusw1,postinc1
 30476  018F1C  006F FF8F FFE6     	movff	plusw1,postinc1
 30477  018F22  EC6E  F0E3         	call	___flsub	;wreg free
 30478  018F26  0060  F007  FFE6   	movff	btemp,postinc1
 30479  018F2C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30480  018F32  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30481  018F38  0060  F013  FFE6   	movff	btemp+3,postinc1
 30482  018F3E  EC78  F09F         	call	___flmul	;wreg free
 30483  018F42  0060  F007  FFE6   	movff	btemp,postinc1
 30484  018F48  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30485  018F4E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30486  018F54  0060  F013  FFE6   	movff	btemp+3,postinc1
 30487  018F5A  EC8D  F0A3         	call	___fladd	;wreg free
 30488                           
 30489                           ;stkvar	_bn @ sp[(-4)+-5]
 30490  018F5E  0EF7               	movlw	-9
 30491  018F60  50E3               	movf	plusw1,w,c
 30492  018F62  0D04               	mullw	4
 30493  018F64  0E00               	movlw	low lp_filter@smooth
 30494  018F66  24F3               	addwf	243,w,c
 30495  018F68  6ED9               	movwf	fsr2l,c
 30496  018F6A  0E03               	movlw	high lp_filter@smooth
 30497  018F6C  20F4               	addwfc	prodh,w,c
 30498  018F6E  6EDA               	movwf	fsr2h,c
 30499  018F70  0060  F007  FFDE   	movff	btemp,postinc2
 30500  018F76  0060  F00B  FFDE   	movff	btemp+1,postinc2
 30501  018F7C  0060  F00F  FFDE   	movff	btemp+2,postinc2
 30502  018F82  0060  F013  FFDD   	movff	btemp+3,postdec2
 30503  018F88  52DD               	movf	postdec2,f,c
 30504  018F8A  52DD               	movf	postdec2,f,c
 30505  018F8C  006F FF78  F001    	movff	postinc2,btemp
 30506  018F92  006F FF78  F002    	movff	postinc2,btemp+1
 30507  018F98  006F FF78  F003    	movff	postinc2,btemp+2
 30508  018F9E  006F FF78  F004    	movff	postinc2,btemp+3
 30509  018FA4                     l2100:
 30510                           
 30511                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 30512  018FA4  0EF6               	movlw	246
 30513  018FA6  26E1               	addwf	fsr1l,f,c
 30514  018FA8  0EFF               	movlw	255
 30515  018FAA  22E2               	addwfc	fsr1h,f,c
 30516  018FAC  0012               	return		;funcret
 30517  018FAE                     __end_of_lp_filter:
 30518                           	opt callstack 0
 30519                           
 30520 ;; *************** function ___flsub *****************
 30521 ;; Defined at:
 30522 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 30523 ;; Parameters:    Size  Location     Type
 30524 ;;  b               4  [STACK] float 
 30525 ;;  a               4  [STACK] float 
 30526 ;; Auto vars:     Size  Location     Type
 30527 ;;		None
 30528 ;; Return value:  Size  Location     Type
 30529 ;;                  4  [STACK] float 
 30530 ;; Registers used:
 30531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 30532 ;; Tracked objects:
 30533 ;;		On entry : 0/0
 30534 ;;		On exit  : 0/0
 30535 ;;		Unchanged: 0/0
 30536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30541 ;;Total ram usage:        0 bytes
 30542 ;; Hardware stack levels used:    1
 30543 ;; Hardware stack levels required when called:   16
 30544 ;; This function calls:
 30545 ;;		___fladd
 30546 ;; This function is called by:
 30547 ;;		_conv_raw_result
 30548 ;;		_lp_filter
 30549 ;;		_calc_model_data
 30550 ;;		_calc_ror_data
 30551 ;;		_esr_check
 30552 ;;		_efgtoa
 30553 ;; This function uses a reentrant model
 30554 ;;
 30555                           
 30556                           	psect	text125
 30557  01C6DC                     __ptext125:
 30558                           	opt callstack 0
 30559  01C6DC                     ___flsub:
 30560                           	opt callstack 0
 30561                           
 30562                           ;stkvar	_a @ sp[(0)+-8]
 30563                           
 30564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30565                           ;incstack = 0
 30566 ;; hardware stack exceeded
 30567  01C6DC  0EFB               	movlw	-5
 30568  01C6DE  7EE3               	btg	plusw1,7,c
 30569                           
 30570                           ;stkvar	_a @ sp[(0)+-8]
 30571  01C6E0  0EF8               	movlw	-8
 30572  01C6E2  006F FF8F FFE6     	movff	plusw1,postinc1
 30573  01C6E8  006F FF8F FFE6     	movff	plusw1,postinc1
 30574  01C6EE  006F FF8F FFE6     	movff	plusw1,postinc1
 30575  01C6F4  006F FF8F FFE6     	movff	plusw1,postinc1
 30576                           
 30577                           ;stkvar	_b @ sp[(-4)+-4]
 30578  01C6FA  0EF8               	movlw	-8
 30579  01C6FC  006F FF8F FFE6     	movff	plusw1,postinc1
 30580  01C702  006F FF8F FFE6     	movff	plusw1,postinc1
 30581  01C708  006F FF8F FFE6     	movff	plusw1,postinc1
 30582  01C70E  006F FF8F FFE6     	movff	plusw1,postinc1
 30583  01C714  EC8D  F0A3         	call	___fladd	;wreg free
 30584                           
 30585                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 30586  01C718  0EF8               	movlw	248
 30587  01C71A  26E1               	addwf	fsr1l,f,c
 30588  01C71C  0EFF               	movlw	255
 30589  01C71E  22E2               	addwfc	fsr1h,f,c
 30590  01C720  0012               	return		;funcret
 30591  01C722                     __end_of___flsub:
 30592                           	opt callstack 0
 30593                           
 30594 ;; *************** function ___fladd *****************
 30595 ;; Defined at:
 30596 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 30597 ;; Parameters:    Size  Location     Type
 30598 ;;  b               4  [STACK] float 
 30599 ;;  a               4  [STACK] float 
 30600 ;; Auto vars:     Size  Location     Type
 30601 ;;  grs             1  [STACK] unsigned char 
 30602 ;;  bexp            1  [STACK] unsigned char 
 30603 ;;  aexp            1  [STACK] unsigned char 
 30604 ;;  signs           1  [STACK] unsigned char 
 30605 ;; Return value:  Size  Location     Type
 30606 ;;                  4  [STACK] unsigned char 
 30607 ;; Registers used:
 30608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 30609 ;; Tracked objects:
 30610 ;;		On entry : 0/0
 30611 ;;		On exit  : 0/0
 30612 ;;		Unchanged: 0/0
 30613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30618 ;;Total ram usage:        0 bytes
 30619 ;; Hardware stack levels used:    1
 30620 ;; Hardware stack levels required when called:   15
 30621 ;; This function calls:
 30622 ;;		Nothing
 30623 ;; This function is called by:
 30624 ;;		_main
 30625 ;;		_lp_filter
 30626 ;;		_calc_model_data
 30627 ;;		_efgtoa
 30628 ;;		___asfladd
 30629 ;;		___flsub
 30630 ;; This function uses a reentrant model
 30631 ;;
 30632                           
 30633                           	psect	text126
 30634  01471A                     __ptext126:
 30635                           	opt callstack 0
 30636  01471A                     ___fladd:
 30637                           	opt callstack 0
 30638                           
 30639                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30640  01471A  52E6               	movf	postinc1,f,c
 30641  01471C  52E6               	movf	postinc1,f,c
 30642  01471E  52E6               	movf	postinc1,f,c
 30643  014720  52E6               	movf	postinc1,f,c
 30644                           
 30645                           ;stkvar	_b @ sp[(-4)+-4]
 30646                           
 30647                           ;incstack = 0
 30648 ;; hardware stack exceeded
 30649  014722  0EFB               	movlw	251
 30650  014724  24E1               	addwf	fsr1l,w,c
 30651  014726  6ED9               	movwf	fsr2l,c
 30652  014728  0EFF               	movlw	255
 30653  01472A  20E2               	addwfc	fsr1h,w,c
 30654  01472C  6EDA               	movwf	fsr2h,c
 30655  01472E  50DF               	movf	indf2,w,c
 30656  014730  6E0C               	movwf	(btemp+11)^0,c
 30657  014732  0E80               	movlw	128
 30658  014734  160C               	andwf	(btemp+11)^0,f,c
 30659                           
 30660                           ;stkvar	_signs @ sp[(-4)+3]
 30661  014736  0EFF               	movlw	-1
 30662  014738  0060  F033  FFE3   	movff	btemp+11,plusw1
 30663                           
 30664                           ;stkvar	_b @ sp[(-4)+-4]
 30665  01473E  0EFB               	movlw	251
 30666  014740  24E1               	addwf	fsr1l,w,c
 30667  014742  6ED9               	movwf	fsr2l,c
 30668  014744  0EFF               	movlw	255
 30669  014746  20E2               	addwfc	fsr1h,w,c
 30670  014748  6EDA               	movwf	fsr2h,c
 30671  01474A  50DF               	movf	indf2,w,c
 30672  01474C  6E0C               	movwf	(btemp+11)^0,c
 30673  01474E  90D8               	bcf	status,0,c
 30674  014750  340C               	rlcf	(btemp+11)^0,w,c
 30675  014752  6E0B               	movwf	(btemp+10)^0,c
 30676                           
 30677                           ;stkvar	_bexp @ sp[(-4)+1]
 30678  014754  0EFD               	movlw	-3
 30679  014756  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30680                           
 30681                           ;stkvar	_b @ sp[(-4)+-4]
 30682  01475C  0EFA               	movlw	250
 30683  01475E  24E1               	addwf	fsr1l,w,c
 30684  014760  6ED9               	movwf	fsr2l,c
 30685  014762  0EFF               	movlw	255
 30686  014764  20E2               	addwfc	fsr1h,w,c
 30687  014766  6EDA               	movwf	fsr2h,c
 30688  014768  AEDF               	btfss	indf2,7,c
 30689  01476A  D002               	goto	l8484
 30690                           
 30691                           ;stkvar	_bexp @ sp[(-4)+1]
 30692  01476C  0EFD               	movlw	-3
 30693  01476E  80E3               	bsf	plusw1,0,c
 30694  014770                     l8484:
 30695                           
 30696                           ;stkvar	_bexp @ sp[(-4)+1]
 30697  014770  0EFD               	movlw	-3
 30698  014772  50E3               	movf	plusw1,w,c
 30699  014774  B4D8               	btfsc	status,2,c
 30700  014776  D027               	goto	l8494
 30701                           
 30702                           ;stkvar	_bexp @ sp[(-4)+1]
 30703  014778  0EFD               	movlw	-3
 30704  01477A  28E3               	incf	plusw1,w,c
 30705  01477C  A4D8               	btfss	status,2,c
 30706  01477E  D018               	goto	l8490
 30707  014780  0E00               	movlw	0
 30708  014782  6E09               	movwf	(btemp+8)^0,c
 30709  014784  0E00               	movlw	0
 30710  014786  6E0A               	movwf	(btemp+9)^0,c
 30711  014788  0E00               	movlw	0
 30712  01478A  6E0B               	movwf	(btemp+10)^0,c
 30713  01478C  0E00               	movlw	0
 30714  01478E  6E0C               	movwf	(btemp+11)^0,c
 30715                           
 30716                           ;stkvar	_b @ sp[(-4)+-4]
 30717  014790  0EF8               	movlw	-8
 30718  014792  0060  F027  FFE3   	movff	btemp+8,plusw1
 30719  014798  0EF9               	movlw	-7
 30720  01479A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30721  0147A0  0EFA               	movlw	-6
 30722  0147A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30723  0147A8  0EFB               	movlw	-5
 30724  0147AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 30725  0147B0                     l8490:
 30726                           
 30727                           ;stkvar	_b @ sp[(-4)+-4]
 30728  0147B0  0EFA               	movlw	-6
 30729  0147B2  8EE3               	bsf	plusw1,7,c
 30730                           
 30731                           ;stkvar	_b @ sp[(-4)+-4]
 30732  0147B4  0EFB               	movlw	251
 30733  0147B6  24E1               	addwf	fsr1l,w,c
 30734  0147B8  6ED9               	movwf	fsr2l,c
 30735  0147BA  0EFF               	movlw	255
 30736  0147BC  20E2               	addwfc	fsr1h,w,c
 30737  0147BE  6EDA               	movwf	fsr2h,c
 30738  0147C0  0E00               	movlw	0
 30739  0147C2  6EDF               	movwf	indf2,c
 30740  0147C4  D018               	goto	l8496
 30741  0147C6                     l8494:
 30742  0147C6  0E00               	movlw	0
 30743  0147C8  6E09               	movwf	(btemp+8)^0,c
 30744  0147CA  0E00               	movlw	0
 30745  0147CC  6E0A               	movwf	(btemp+9)^0,c
 30746  0147CE  0E00               	movlw	0
 30747  0147D0  6E0B               	movwf	(btemp+10)^0,c
 30748  0147D2  0E00               	movlw	0
 30749  0147D4  6E0C               	movwf	(btemp+11)^0,c
 30750                           
 30751                           ;stkvar	_b @ sp[(-4)+-4]
 30752  0147D6  0EF8               	movlw	-8
 30753  0147D8  0060  F027  FFE3   	movff	btemp+8,plusw1
 30754  0147DE  0EF9               	movlw	-7
 30755  0147E0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30756  0147E6  0EFA               	movlw	-6
 30757  0147E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30758  0147EE  0EFB               	movlw	-5
 30759  0147F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 30760  0147F6                     l8496:
 30761                           
 30762                           ;stkvar	_a @ sp[(-4)+-8]
 30763  0147F6  0EF7               	movlw	247
 30764  0147F8  24E1               	addwf	fsr1l,w,c
 30765  0147FA  6ED9               	movwf	fsr2l,c
 30766  0147FC  0EFF               	movlw	255
 30767  0147FE  20E2               	addwfc	fsr1h,w,c
 30768  014800  6EDA               	movwf	fsr2h,c
 30769  014802  50DF               	movf	indf2,w,c
 30770  014804  6E0C               	movwf	(btemp+11)^0,c
 30771  014806  0E80               	movlw	128
 30772  014808  160C               	andwf	(btemp+11)^0,f,c
 30773                           
 30774                           ;stkvar	_aexp @ sp[(-4)+2]
 30775  01480A  0EFE               	movlw	-2
 30776  01480C  0060  F033  FFE3   	movff	btemp+11,plusw1
 30777                           
 30778                           ;stkvar	_signs @ sp[(-4)+3]
 30779                           ;stkvar	_aexp @ sp[(-4)+2]
 30780  014812  50E1               	movf	fsr1l,w,c
 30781  014814  0FFE               	addlw	-2
 30782  014816  6ED9               	movwf	fsr2l,c
 30783  014818  50E2               	movf	fsr1h,w,c
 30784  01481A  6EDA               	movwf	fsr2h,c
 30785  01481C  0EFF               	movlw	255
 30786  01481E  22DA               	addwfc	fsr2h,f,c
 30787  014820  0EFF               	movlw	-1
 30788  014822  50E3               	movf	plusw1,w,c
 30789  014824  18DE               	xorwf	postinc2,w,c
 30790  014826  B4D8               	btfsc	status,2,c
 30791  014828  D002               	goto	l8502
 30792                           
 30793                           ;stkvar	_signs @ sp[(-4)+3]
 30794  01482A  0EFF               	movlw	-1
 30795  01482C  8CE3               	bsf	plusw1,6,c
 30796  01482E                     l8502:
 30797                           
 30798                           ;stkvar	_a @ sp[(-4)+-8]
 30799  01482E  0EF7               	movlw	247
 30800  014830  24E1               	addwf	fsr1l,w,c
 30801  014832  6ED9               	movwf	fsr2l,c
 30802  014834  0EFF               	movlw	255
 30803  014836  20E2               	addwfc	fsr1h,w,c
 30804  014838  6EDA               	movwf	fsr2h,c
 30805  01483A  50DF               	movf	indf2,w,c
 30806  01483C  6E0C               	movwf	(btemp+11)^0,c
 30807  01483E  90D8               	bcf	status,0,c
 30808  014840  340C               	rlcf	(btemp+11)^0,w,c
 30809  014842  6E0B               	movwf	(btemp+10)^0,c
 30810                           
 30811                           ;stkvar	_aexp @ sp[(-4)+2]
 30812  014844  0EFE               	movlw	-2
 30813  014846  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30814                           
 30815                           ;stkvar	_a @ sp[(-4)+-8]
 30816  01484C  0EF6               	movlw	246
 30817  01484E  24E1               	addwf	fsr1l,w,c
 30818  014850  6ED9               	movwf	fsr2l,c
 30819  014852  0EFF               	movlw	255
 30820  014854  20E2               	addwfc	fsr1h,w,c
 30821  014856  6EDA               	movwf	fsr2h,c
 30822  014858  AEDF               	btfss	indf2,7,c
 30823  01485A  D002               	goto	l8508
 30824                           
 30825                           ;stkvar	_aexp @ sp[(-4)+2]
 30826  01485C  0EFE               	movlw	-2
 30827  01485E  80E3               	bsf	plusw1,0,c
 30828  014860                     l8508:
 30829                           
 30830                           ;stkvar	_aexp @ sp[(-4)+2]
 30831  014860  0EFE               	movlw	-2
 30832  014862  50E3               	movf	plusw1,w,c
 30833  014864  B4D8               	btfsc	status,2,c
 30834  014866  D027               	goto	l8518
 30835                           
 30836                           ;stkvar	_aexp @ sp[(-4)+2]
 30837  014868  0EFE               	movlw	-2
 30838  01486A  28E3               	incf	plusw1,w,c
 30839  01486C  A4D8               	btfss	status,2,c
 30840  01486E  D018               	goto	l8514
 30841  014870  0E00               	movlw	0
 30842  014872  6E09               	movwf	(btemp+8)^0,c
 30843  014874  0E00               	movlw	0
 30844  014876  6E0A               	movwf	(btemp+9)^0,c
 30845  014878  0E00               	movlw	0
 30846  01487A  6E0B               	movwf	(btemp+10)^0,c
 30847  01487C  0E00               	movlw	0
 30848  01487E  6E0C               	movwf	(btemp+11)^0,c
 30849                           
 30850                           ;stkvar	_a @ sp[(-4)+-8]
 30851  014880  0EF4               	movlw	-12
 30852  014882  0060  F027  FFE3   	movff	btemp+8,plusw1
 30853  014888  0EF5               	movlw	-11
 30854  01488A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30855  014890  0EF6               	movlw	-10
 30856  014892  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30857  014898  0EF7               	movlw	-9
 30858  01489A  0060  F033  FFE3   	movff	btemp+11,plusw1
 30859  0148A0                     l8514:
 30860                           
 30861                           ;stkvar	_a @ sp[(-4)+-8]
 30862  0148A0  0EF6               	movlw	-10
 30863  0148A2  8EE3               	bsf	plusw1,7,c
 30864                           
 30865                           ;stkvar	_a @ sp[(-4)+-8]
 30866  0148A4  0EF7               	movlw	247
 30867  0148A6  24E1               	addwf	fsr1l,w,c
 30868  0148A8  6ED9               	movwf	fsr2l,c
 30869  0148AA  0EFF               	movlw	255
 30870  0148AC  20E2               	addwfc	fsr1h,w,c
 30871  0148AE  6EDA               	movwf	fsr2h,c
 30872  0148B0  0E00               	movlw	0
 30873  0148B2  6EDF               	movwf	indf2,c
 30874  0148B4  D018               	goto	l8520
 30875  0148B6                     l8518:
 30876  0148B6  0E00               	movlw	0
 30877  0148B8  6E09               	movwf	(btemp+8)^0,c
 30878  0148BA  0E00               	movlw	0
 30879  0148BC  6E0A               	movwf	(btemp+9)^0,c
 30880  0148BE  0E00               	movlw	0
 30881  0148C0  6E0B               	movwf	(btemp+10)^0,c
 30882  0148C2  0E00               	movlw	0
 30883  0148C4  6E0C               	movwf	(btemp+11)^0,c
 30884                           
 30885                           ;stkvar	_a @ sp[(-4)+-8]
 30886  0148C6  0EF4               	movlw	-12
 30887  0148C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 30888  0148CE  0EF5               	movlw	-11
 30889  0148D0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30890  0148D6  0EF6               	movlw	-10
 30891  0148D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30892  0148DE  0EF7               	movlw	-9
 30893  0148E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 30894  0148E6                     l8520:
 30895                           
 30896                           ;stkvar	_bexp @ sp[(-4)+1]
 30897                           ;stkvar	_aexp @ sp[(-4)+2]
 30898  0148E6  50E1               	movf	fsr1l,w,c
 30899  0148E8  0FFE               	addlw	-2
 30900  0148EA  6ED9               	movwf	fsr2l,c
 30901  0148EC  50E2               	movf	fsr1h,w,c
 30902  0148EE  6EDA               	movwf	fsr2h,c
 30903  0148F0  0EFF               	movlw	255
 30904  0148F2  22DA               	addwfc	fsr2h,f,c
 30905  0148F4  0EFD               	movlw	-3
 30906  0148F6  50E3               	movf	plusw1,w,c
 30907  0148F8  5CDE               	subwf	postinc2,w,c
 30908  0148FA  B0D8               	btfsc	status,0,c
 30909  0148FC  D0A4               	goto	l8556
 30910                           
 30911                           ;stkvar	_signs @ sp[(-4)+3]
 30912  0148FE  0EFF               	movlw	-1
 30913  014900  ACE3               	btfss	plusw1,6,c
 30914  014902  D002               	goto	l8526
 30915                           
 30916                           ;stkvar	_signs @ sp[(-4)+3]
 30917  014904  0EFF               	movlw	-1
 30918  014906  7EE3               	btg	plusw1,7,c
 30919  014908                     l8526:
 30920                           
 30921                           ;stkvar	_bexp @ sp[(-4)+1]
 30922                           ;stkvar	_grs @ sp[(-4)+0]
 30923  014908  0EFD               	movlw	-3
 30924  01490A  006F FF8C  F001    	movff	plusw1,btemp
 30925  014910  0EFC               	movlw	-4
 30926  014912  0060  F007  FFE3   	movff	btemp,plusw1
 30927                           
 30928                           ;stkvar	_aexp @ sp[(-4)+2]
 30929                           ;stkvar	_bexp @ sp[(-4)+1]
 30930  014918  0EFE               	movlw	-2
 30931  01491A  006F FF8C  F001    	movff	plusw1,btemp
 30932  014920  0EFD               	movlw	-3
 30933  014922  0060  F007  FFE3   	movff	btemp,plusw1
 30934                           
 30935                           ;stkvar	_grs @ sp[(-4)+0]
 30936                           ;stkvar	_aexp @ sp[(-4)+2]
 30937  014928  0EFC               	movlw	-4
 30938  01492A  006F FF8C  F001    	movff	plusw1,btemp
 30939  014930  0EFE               	movlw	-2
 30940  014932  0060  F007  FFE3   	movff	btemp,plusw1
 30941                           
 30942                           ;stkvar	_b @ sp[(-4)+-4]
 30943                           ;stkvar	_grs @ sp[(-4)+0]
 30944  014938  0EF8               	movlw	-8
 30945  01493A  006F FF8C  F001    	movff	plusw1,btemp
 30946  014940  0EFC               	movlw	-4
 30947  014942  0060  F007  FFE3   	movff	btemp,plusw1
 30948                           
 30949                           ;stkvar	_a @ sp[(-4)+-8]
 30950                           ;stkvar	_b @ sp[(-4)+-4]
 30951  014948  0EF4               	movlw	-12
 30952  01494A  006F FF8C  F001    	movff	plusw1,btemp
 30953  014950  0EF8               	movlw	-8
 30954  014952  0060  F007  FFE3   	movff	btemp,plusw1
 30955                           
 30956                           ;stkvar	_grs @ sp[(-4)+0]
 30957                           ;stkvar	_a @ sp[(-4)+-8]
 30958  014958  0EFC               	movlw	-4
 30959  01495A  006F FF8C  F001    	movff	plusw1,btemp
 30960  014960  0EF4               	movlw	-12
 30961  014962  0060  F007  FFE3   	movff	btemp,plusw1
 30962                           
 30963                           ;stkvar	_b @ sp[(-4)+-4]
 30964  014968  0EF9               	movlw	249
 30965  01496A  24E1               	addwf	fsr1l,w,c
 30966  01496C  6ED9               	movwf	fsr2l,c
 30967  01496E  0EFF               	movlw	255
 30968  014970  20E2               	addwfc	fsr1h,w,c
 30969  014972  6EDA               	movwf	fsr2h,c
 30970  014974  50DF               	movf	indf2,w,c
 30971  014976  6E0C               	movwf	(btemp+11)^0,c
 30972                           
 30973                           ;stkvar	_grs @ sp[(-4)+0]
 30974  014978  0EFC               	movlw	-4
 30975  01497A  0060  F033  FFE3   	movff	btemp+11,plusw1
 30976                           
 30977                           ;stkvar	_a @ sp[(-4)+-8]
 30978  014980  0EF5               	movlw	245
 30979  014982  24E1               	addwf	fsr1l,w,c
 30980  014984  6ED9               	movwf	fsr2l,c
 30981  014986  0EFF               	movlw	255
 30982  014988  20E2               	addwfc	fsr1h,w,c
 30983  01498A  6EDA               	movwf	fsr2h,c
 30984                           
 30985                           ;stkvar	_b @ sp[(-4)+-4]
 30986  01498C  0EF9               	movlw	249
 30987  01498E  24E1               	addwf	fsr1l,w,c
 30988  014990  6EE9               	movwf	fsr0l,c
 30989  014992  0EFF               	movlw	255
 30990  014994  20E2               	addwfc	fsr1h,w,c
 30991  014996  6EEA               	movwf	fsr0h,c
 30992  014998  006F FF7F FFEF     	movff	indf2,indf0
 30993                           
 30994                           ;stkvar	_grs @ sp[(-4)+0]
 30995                           ;stkvar	_a @ sp[(-4)+-8]
 30996  01499E  0EF5               	movlw	245
 30997  0149A0  24E1               	addwf	fsr1l,w,c
 30998  0149A2  6ED9               	movwf	fsr2l,c
 30999  0149A4  0EFF               	movlw	255
 31000  0149A6  20E2               	addwfc	fsr1h,w,c
 31001  0149A8  6EDA               	movwf	fsr2h,c
 31002  0149AA  0EFC               	movlw	-4
 31003  0149AC  006F FF8F FFDF     	movff	plusw1,indf2
 31004                           
 31005                           ;stkvar	_b @ sp[(-4)+-4]
 31006  0149B2  0EFA               	movlw	250
 31007  0149B4  24E1               	addwf	fsr1l,w,c
 31008  0149B6  6ED9               	movwf	fsr2l,c
 31009  0149B8  0EFF               	movlw	255
 31010  0149BA  20E2               	addwfc	fsr1h,w,c
 31011  0149BC  6EDA               	movwf	fsr2h,c
 31012  0149BE  50DF               	movf	indf2,w,c
 31013  0149C0  6E0C               	movwf	(btemp+11)^0,c
 31014                           
 31015                           ;stkvar	_grs @ sp[(-4)+0]
 31016  0149C2  0EFC               	movlw	-4
 31017  0149C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 31018                           
 31019                           ;stkvar	_a @ sp[(-4)+-8]
 31020  0149CA  0EF6               	movlw	246
 31021  0149CC  24E1               	addwf	fsr1l,w,c
 31022  0149CE  6ED9               	movwf	fsr2l,c
 31023  0149D0  0EFF               	movlw	255
 31024  0149D2  20E2               	addwfc	fsr1h,w,c
 31025  0149D4  6EDA               	movwf	fsr2h,c
 31026                           
 31027                           ;stkvar	_b @ sp[(-4)+-4]
 31028  0149D6  0EFA               	movlw	250
 31029  0149D8  24E1               	addwf	fsr1l,w,c
 31030  0149DA  6EE9               	movwf	fsr0l,c
 31031  0149DC  0EFF               	movlw	255
 31032  0149DE  20E2               	addwfc	fsr1h,w,c
 31033  0149E0  6EEA               	movwf	fsr0h,c
 31034  0149E2  006F FF7F FFEF     	movff	indf2,indf0
 31035                           
 31036                           ;stkvar	_grs @ sp[(-4)+0]
 31037                           ;stkvar	_a @ sp[(-4)+-8]
 31038  0149E8  0EF6               	movlw	246
 31039  0149EA  24E1               	addwf	fsr1l,w,c
 31040  0149EC  6ED9               	movwf	fsr2l,c
 31041  0149EE  0EFF               	movlw	255
 31042  0149F0  20E2               	addwfc	fsr1h,w,c
 31043  0149F2  6EDA               	movwf	fsr2h,c
 31044  0149F4  0EFC               	movlw	-4
 31045  0149F6  006F FF8F FFDF     	movff	plusw1,indf2
 31046                           
 31047                           ;stkvar	_b @ sp[(-4)+-4]
 31048  0149FC  0EFB               	movlw	251
 31049  0149FE  24E1               	addwf	fsr1l,w,c
 31050  014A00  6ED9               	movwf	fsr2l,c
 31051  014A02  0EFF               	movlw	255
 31052  014A04  20E2               	addwfc	fsr1h,w,c
 31053  014A06  6EDA               	movwf	fsr2h,c
 31054  014A08  50DF               	movf	indf2,w,c
 31055  014A0A  6E0C               	movwf	(btemp+11)^0,c
 31056                           
 31057                           ;stkvar	_grs @ sp[(-4)+0]
 31058  014A0C  0EFC               	movlw	-4
 31059  014A0E  0060  F033  FFE3   	movff	btemp+11,plusw1
 31060                           
 31061                           ;stkvar	_a @ sp[(-4)+-8]
 31062  014A14  0EF7               	movlw	247
 31063  014A16  24E1               	addwf	fsr1l,w,c
 31064  014A18  6ED9               	movwf	fsr2l,c
 31065  014A1A  0EFF               	movlw	255
 31066  014A1C  20E2               	addwfc	fsr1h,w,c
 31067  014A1E  6EDA               	movwf	fsr2h,c
 31068                           
 31069                           ;stkvar	_b @ sp[(-4)+-4]
 31070  014A20  0EFB               	movlw	251
 31071  014A22  24E1               	addwf	fsr1l,w,c
 31072  014A24  6EE9               	movwf	fsr0l,c
 31073  014A26  0EFF               	movlw	255
 31074  014A28  20E2               	addwfc	fsr1h,w,c
 31075  014A2A  6EEA               	movwf	fsr0h,c
 31076  014A2C  006F FF7F FFEF     	movff	indf2,indf0
 31077                           
 31078                           ;stkvar	_grs @ sp[(-4)+0]
 31079                           ;stkvar	_a @ sp[(-4)+-8]
 31080  014A32  0EF7               	movlw	247
 31081  014A34  24E1               	addwf	fsr1l,w,c
 31082  014A36  6ED9               	movwf	fsr2l,c
 31083  014A38  0EFF               	movlw	255
 31084  014A3A  20E2               	addwfc	fsr1h,w,c
 31085  014A3C  6EDA               	movwf	fsr2h,c
 31086  014A3E  0EFC               	movlw	-4
 31087  014A40  006F FF8F FFDF     	movff	plusw1,indf2
 31088  014A46                     l8556:
 31089                           
 31090                           ;stkvar	_grs @ sp[(-4)+0]
 31091  014A46  0EFC               	movlw	-4
 31092  014A48  6AE3               	clrf	plusw1,c
 31093                           
 31094                           ;stkvar	_aexp @ sp[(-4)+2]
 31095  014A4A  0EFE               	movlw	-2
 31096  014A4C  50E3               	movf	plusw1,w,c
 31097  014A4E  6E0B               	movwf	(btemp+10)^0,c
 31098  014A50  6A0C               	clrf	(btemp+11)^0,c
 31099                           
 31100                           ;stkvar	_bexp @ sp[(-4)+1]
 31101  014A52  0EFD               	movlw	-3
 31102  014A54  50E3               	movf	plusw1,w,c
 31103  014A56  5E0B               	subwf	(btemp+10)^0,f,c
 31104  014A58  0E00               	movlw	0
 31105  014A5A  5A0C               	subwfb	(btemp+11)^0,f,c
 31106  014A5C  BE0C               	btfsc	(btemp+11)^0,7,c
 31107  014A5E  D062               	goto	l8580
 31108  014A60  500C               	movf	(btemp+11)^0,w,c
 31109  014A62  E104               	bnz	u6100
 31110  014A64  0E1A               	movlw	26
 31111  014A66  5C0B               	subwf	(btemp+10)^0,w,c
 31112  014A68  A0D8               	btfss	status,0,c
 31113  014A6A  D05C               	goto	l8580
 31114  014A6C                     u6100:
 31115                           
 31116                           ;stkvar	_b @ sp[(-4)+-4]
 31117  014A6C  0EF8               	movlw	-8
 31118  014A6E  50E3               	movf	plusw1,w,c
 31119  014A70  E10A               	bnz	u6111
 31120  014A72  0EF9               	movlw	-7
 31121  014A74  50E3               	movf	plusw1,w,c
 31122  014A76  E107               	bnz	u6111
 31123  014A78  0EFA               	movlw	-6
 31124  014A7A  50E3               	movf	plusw1,w,c
 31125  014A7C  E104               	bnz	u6111
 31126  014A7E  0EFB               	movlw	-5
 31127  014A80  50E3               	movf	plusw1,w,c
 31128  014A82  B4D8               	btfsc	status,2,c
 31129  014A84  D003               	goto	u6110
 31130  014A86                     u6111:
 31131  014A86  6A0C               	clrf	(btemp+11)^0,c
 31132  014A88  2A0C               	incf	(btemp+11)^0,f,c
 31133  014A8A  D001               	goto	u6128
 31134  014A8C                     u6110:
 31135  014A8C  6A0C               	clrf	(btemp+11)^0,c
 31136  014A8E                     u6128:
 31137                           
 31138                           ;stkvar	_grs @ sp[(-4)+0]
 31139  014A8E  0EFC               	movlw	-4
 31140  014A90  0060  F033  FFE3   	movff	btemp+11,plusw1
 31141                           
 31142                           ;stkvar	_b @ sp[(-4)+-4]
 31143  014A96  0EF8               	movlw	-8
 31144  014A98  6AE3               	clrf	plusw1,c
 31145  014A9A  0EF9               	movlw	-7
 31146  014A9C  6AE3               	clrf	plusw1,c
 31147  014A9E  0EFA               	movlw	-6
 31148  014AA0  6AE3               	clrf	plusw1,c
 31149  014AA2  0EFB               	movlw	-5
 31150  014AA4  6AE3               	clrf	plusw1,c
 31151                           
 31152                           ;stkvar	_aexp @ sp[(-4)+2]
 31153                           ;stkvar	_bexp @ sp[(-4)+1]
 31154  014AA6  0EFE               	movlw	-2
 31155  014AA8  006F FF8C  F001    	movff	plusw1,btemp
 31156  014AAE  0EFD               	movlw	-3
 31157  014AB0  0060  F007  FFE3   	movff	btemp,plusw1
 31158  014AB6  D042               	goto	u6160
 31159  014AB8                     l8566:
 31160                           
 31161                           ;stkvar	_grs @ sp[(-4)+0]
 31162  014AB8  0EFC               	movlw	-4
 31163  014ABA  A0E3               	btfss	plusw1,0,c
 31164  014ABC  D00D               	goto	l8570
 31165                           
 31166                           ;stkvar	_grs @ sp[(-4)+0]
 31167  014ABE  0EFC               	movlw	-4
 31168  014AC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 31169  014AC6  90D8               	bcf	status,0,c
 31170  014AC8  320C               	rrcf	(btemp+11)^0,f,c
 31171  014ACA  0E01               	movlw	1
 31172  014ACC  120C               	iorwf	(btemp+11)^0,f,c
 31173                           
 31174                           ;stkvar	_grs @ sp[(-4)+0]
 31175  014ACE  0EFC               	movlw	-4
 31176  014AD0  0060  F033  FFE3   	movff	btemp+11,plusw1
 31177  014AD6  D009               	goto	l8572
 31178  014AD8                     l8570:
 31179                           
 31180                           ;stkvar	_grs @ sp[(-4)+0]
 31181  014AD8  50E1               	movf	fsr1l,w,c
 31182  014ADA  0FFC               	addlw	-4
 31183  014ADC  6ED9               	movwf	fsr2l,c
 31184  014ADE  50E2               	movf	fsr1h,w,c
 31185  014AE0  6EDA               	movwf	fsr2h,c
 31186  014AE2  0EFF               	movlw	255
 31187  014AE4  22DA               	addwfc	fsr2h,f,c
 31188  014AE6  90D8               	bcf	status,0,c
 31189  014AE8  32DF               	rrcf	indf2,f,c
 31190  014AEA                     l8572:
 31191                           
 31192                           ;stkvar	_b @ sp[(-4)+-4]
 31193  014AEA  0EF8               	movlw	-8
 31194  014AEC  A0E3               	btfss	plusw1,0,c
 31195  014AEE  D002               	goto	l8576
 31196                           
 31197                           ;stkvar	_grs @ sp[(-4)+0]
 31198  014AF0  0EFC               	movlw	-4
 31199  014AF2  8EE3               	bsf	plusw1,7,c
 31200  014AF4                     l8576:
 31201  014AF4  0E01               	movlw	1
 31202  014AF6  6E0C               	movwf	(btemp+11)^0,c
 31203                           
 31204                           ;stkvar	_b @ sp[(-4)+-4]
 31205  014AF8  50E1               	movf	fsr1l,w,c
 31206  014AFA  0FF8               	addlw	-8
 31207  014AFC  6ED9               	movwf	fsr2l,c
 31208  014AFE  50E2               	movf	fsr1h,w,c
 31209  014B00  6EDA               	movwf	fsr2h,c
 31210  014B02  0EFF               	movlw	255
 31211  014B04  22DA               	addwfc	fsr2h,f,c
 31212  014B06  280C               	incf	(btemp+11)^0,w,c
 31213  014B08  52DE               	movf	postinc2,f,c
 31214  014B0A  D008               	goto	u6150
 31215  014B0C                     u6155:
 31216  014B0C  52DE               	movf	postinc2,f,c
 31217  014B0E  90D8               	bcf	status,0,c
 31218  014B10  BEDC               	btfsc	preinc2,7,c
 31219  014B12  80D8               	bsf	status,0,c
 31220  014B14  32DD               	rrcf	postdec2,f,c
 31221  014B16  32DD               	rrcf	postdec2,f,c
 31222  014B18  32DD               	rrcf	postdec2,f,c
 31223  014B1A  32DE               	rrcf	postinc2,f,c
 31224  014B1C                     u6150:
 31225  014B1C  2EE8               	decfsz	wreg,f,c
 31226  014B1E  D7F6               	goto	u6155
 31227                           
 31228                           ;stkvar	_bexp @ sp[(-4)+1]
 31229  014B20  0EFD               	movlw	-3
 31230  014B22  2AE3               	incf	plusw1,f,c
 31231  014B24                     l8580:
 31232                           
 31233                           ;stkvar	_aexp @ sp[(-4)+2]
 31234                           ;stkvar	_bexp @ sp[(-4)+1]
 31235  014B24  50E1               	movf	fsr1l,w,c
 31236  014B26  0FFD               	addlw	-3
 31237  014B28  6ED9               	movwf	fsr2l,c
 31238  014B2A  50E2               	movf	fsr1h,w,c
 31239  014B2C  6EDA               	movwf	fsr2h,c
 31240  014B2E  0EFF               	movlw	255
 31241  014B30  22DA               	addwfc	fsr2h,f,c
 31242  014B32  0EFE               	movlw	-2
 31243  014B34  50E3               	movf	plusw1,w,c
 31244  014B36  5CDE               	subwf	postinc2,w,c
 31245  014B38  A0D8               	btfss	status,0,c
 31246  014B3A  D7BE               	goto	l8566
 31247  014B3C                     u6160:
 31248                           
 31249                           ;stkvar	_signs @ sp[(-4)+3]
 31250  014B3C  0EFF               	movlw	-1
 31251  014B3E  BCE3               	btfsc	plusw1,6,c
 31252  014B40  D066               	goto	l8608
 31253                           
 31254                           ;stkvar	_bexp @ sp[(-4)+1]
 31255  014B42  0EFD               	movlw	-3
 31256  014B44  50E3               	movf	plusw1,w,c
 31257  014B46  B4D8               	btfsc	status,2,c
 31258  014B48  D0F2               	goto	u6260
 31259                           
 31260                           ;stkvar	_a @ sp[(-4)+-8]
 31261                           ;stkvar	_b @ sp[(-4)+-4]
 31262  014B4A  0EF8               	movlw	-8
 31263  014B4C  50E3               	movf	plusw1,w,c
 31264  014B4E  6E01               	movwf	btemp^0,c
 31265  014B50  0EF4               	movlw	-12
 31266  014B52  50E3               	movf	plusw1,w,c
 31267  014B54  2601               	addwf	btemp^0,f,c
 31268  014B56  0EF8               	movlw	-8
 31269  014B58  0060  F007  FFE3   	movff	btemp,plusw1
 31270  014B5E  0EF9               	movlw	-7
 31271  014B60  50E3               	movf	plusw1,w,c
 31272  014B62  6E01               	movwf	btemp^0,c
 31273  014B64  0EF5               	movlw	-11
 31274  014B66  50E3               	movf	plusw1,w,c
 31275  014B68  2201               	addwfc	btemp^0,f,c
 31276  014B6A  0EF9               	movlw	-7
 31277  014B6C  0060  F007  FFE3   	movff	btemp,plusw1
 31278  014B72  0EFA               	movlw	-6
 31279  014B74  50E3               	movf	plusw1,w,c
 31280  014B76  6E01               	movwf	btemp^0,c
 31281  014B78  0EF6               	movlw	-10
 31282  014B7A  50E3               	movf	plusw1,w,c
 31283  014B7C  2201               	addwfc	btemp^0,f,c
 31284  014B7E  0EFA               	movlw	-6
 31285  014B80  0060  F007  FFE3   	movff	btemp,plusw1
 31286  014B86  0EFB               	movlw	-5
 31287  014B88  50E3               	movf	plusw1,w,c
 31288  014B8A  6E01               	movwf	btemp^0,c
 31289  014B8C  0EF7               	movlw	-9
 31290  014B8E  50E3               	movf	plusw1,w,c
 31291  014B90  2201               	addwfc	btemp^0,f,c
 31292  014B92  0EFB               	movlw	-5
 31293  014B94  0060  F007  FFE3   	movff	btemp,plusw1
 31294                           
 31295                           ;stkvar	_b @ sp[(-4)+-4]
 31296  014B9A  0EFB               	movlw	-5
 31297  014B9C  A0E3               	btfss	plusw1,0,c
 31298  014B9E  D101               	goto	u6300
 31299                           
 31300                           ;stkvar	_grs @ sp[(-4)+0]
 31301  014BA0  0EFC               	movlw	-4
 31302  014BA2  A0E3               	btfss	plusw1,0,c
 31303  014BA4  D00D               	goto	l8598
 31304                           
 31305                           ;stkvar	_grs @ sp[(-4)+0]
 31306  014BA6  0EFC               	movlw	-4
 31307  014BA8  006F FF8C  F00C    	movff	plusw1,btemp+11
 31308  014BAE  90D8               	bcf	status,0,c
 31309  014BB0  320C               	rrcf	(btemp+11)^0,f,c
 31310  014BB2  0E01               	movlw	1
 31311  014BB4  120C               	iorwf	(btemp+11)^0,f,c
 31312                           
 31313                           ;stkvar	_grs @ sp[(-4)+0]
 31314  014BB6  0EFC               	movlw	-4
 31315  014BB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 31316  014BBE  D009               	goto	l8600
 31317  014BC0                     l8598:
 31318                           
 31319                           ;stkvar	_grs @ sp[(-4)+0]
 31320  014BC0  50E1               	movf	fsr1l,w,c
 31321  014BC2  0FFC               	addlw	-4
 31322  014BC4  6ED9               	movwf	fsr2l,c
 31323  014BC6  50E2               	movf	fsr1h,w,c
 31324  014BC8  6EDA               	movwf	fsr2h,c
 31325  014BCA  0EFF               	movlw	255
 31326  014BCC  22DA               	addwfc	fsr2h,f,c
 31327  014BCE  90D8               	bcf	status,0,c
 31328  014BD0  32DF               	rrcf	indf2,f,c
 31329  014BD2                     l8600:
 31330                           
 31331                           ;stkvar	_b @ sp[(-4)+-4]
 31332  014BD2  0EF8               	movlw	-8
 31333  014BD4  A0E3               	btfss	plusw1,0,c
 31334  014BD6  D002               	goto	l8604
 31335                           
 31336                           ;stkvar	_grs @ sp[(-4)+0]
 31337  014BD8  0EFC               	movlw	-4
 31338  014BDA  8EE3               	bsf	plusw1,7,c
 31339  014BDC                     l8604:
 31340  014BDC  0E01               	movlw	1
 31341  014BDE  6E0C               	movwf	(btemp+11)^0,c
 31342                           
 31343                           ;stkvar	_b @ sp[(-4)+-4]
 31344  014BE0  50E1               	movf	fsr1l,w,c
 31345  014BE2  0FF8               	addlw	-8
 31346  014BE4  6ED9               	movwf	fsr2l,c
 31347  014BE6  50E2               	movf	fsr1h,w,c
 31348  014BE8  6EDA               	movwf	fsr2h,c
 31349  014BEA  0EFF               	movlw	255
 31350  014BEC  22DA               	addwfc	fsr2h,f,c
 31351  014BEE  280C               	incf	(btemp+11)^0,w,c
 31352  014BF0  52DE               	movf	postinc2,f,c
 31353  014BF2  D008               	goto	u6220
 31354  014BF4                     u6225:
 31355  014BF4  52DE               	movf	postinc2,f,c
 31356  014BF6  90D8               	bcf	status,0,c
 31357  014BF8  BEDC               	btfsc	preinc2,7,c
 31358  014BFA  80D8               	bsf	status,0,c
 31359  014BFC  32DD               	rrcf	postdec2,f,c
 31360  014BFE  32DD               	rrcf	postdec2,f,c
 31361  014C00  32DD               	rrcf	postdec2,f,c
 31362  014C02  32DE               	rrcf	postinc2,f,c
 31363  014C04                     u6220:
 31364  014C04  2EE8               	decfsz	wreg,f,c
 31365  014C06  D7F6               	goto	u6225
 31366                           
 31367                           ;stkvar	_bexp @ sp[(-4)+1]
 31368  014C08  0EFD               	movlw	-3
 31369  014C0A  2AE3               	incf	plusw1,f,c
 31370  014C0C  D0CA               	goto	u6300
 31371  014C0E                     l8608:
 31372                           
 31373                           ;stkvar	_a @ sp[(-4)+-8]
 31374                           ;stkvar	_b @ sp[(-4)+-4]
 31375  014C0E  50E1               	movf	fsr1l,w,c
 31376  014C10  0FF8               	addlw	-8
 31377  014C12  6ED9               	movwf	fsr2l,c
 31378  014C14  50E2               	movf	fsr1h,w,c
 31379  014C16  6EDA               	movwf	fsr2h,c
 31380  014C18  0EFF               	movlw	255
 31381  014C1A  22DA               	addwfc	fsr2h,f,c
 31382  014C1C  0EF4               	movlw	-12
 31383  014C1E  50E3               	movf	plusw1,w,c
 31384  014C20  5CDE               	subwf	postinc2,w,c
 31385  014C22  0EF5               	movlw	-11
 31386  014C24  50E3               	movf	plusw1,w,c
 31387  014C26  58DE               	subwfb	postinc2,w,c
 31388  014C28  0EF6               	movlw	-10
 31389  014C2A  50E3               	movf	plusw1,w,c
 31390  014C2C  58DE               	subwfb	postinc2,w,c
 31391  014C2E  50DE               	movf	postinc2,w,c
 31392  014C30  0A80               	xorlw	128
 31393  014C32  6E01               	movwf	btemp^0,c
 31394  014C34  0EF7               	movlw	-9
 31395  014C36  50E3               	movf	plusw1,w,c
 31396  014C38  0A80               	xorlw	128
 31397  014C3A  5801               	subwfb	btemp^0,w,c
 31398  014C3C  B0D8               	btfsc	status,0,c
 31399  014C3E  D053               	goto	l8620
 31400                           
 31401                           ;stkvar	_b @ sp[(-4)+-4]
 31402                           ;stkvar	_a @ sp[(-4)+-8]
 31403  014C40  0EF4               	movlw	-12
 31404  014C42  006F FF8C  F009    	movff	plusw1,btemp+8
 31405  014C48  0EF5               	movlw	-11
 31406  014C4A  006F FF8C  F00A    	movff	plusw1,btemp+9
 31407  014C50  0EF6               	movlw	-10
 31408  014C52  006F FF8C  F00B    	movff	plusw1,btemp+10
 31409  014C58  0EF7               	movlw	-9
 31410  014C5A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31411  014C60  0EF8               	movlw	-8
 31412  014C62  50E3               	movf	plusw1,w,c
 31413  014C64  5E09               	subwf	(btemp+8)^0,f,c
 31414  014C66  0EF9               	movlw	-7
 31415  014C68  50E3               	movf	plusw1,w,c
 31416  014C6A  5A0A               	subwfb	(btemp+9)^0,f,c
 31417  014C6C  0EFA               	movlw	-6
 31418  014C6E  50E3               	movf	plusw1,w,c
 31419  014C70  5A0B               	subwfb	(btemp+10)^0,f,c
 31420  014C72  0EFB               	movlw	-5
 31421  014C74  50E3               	movf	plusw1,w,c
 31422  014C76  5A0C               	subwfb	(btemp+11)^0,f,c
 31423  014C78  0EFF               	movlw	255
 31424  014C7A  2409               	addwf	(btemp+8)^0,w,c
 31425  014C7C  6E05               	movwf	(btemp+4)^0,c
 31426  014C7E  0EFF               	movlw	255
 31427  014C80  200A               	addwfc	(btemp+9)^0,w,c
 31428  014C82  6E06               	movwf	(btemp+5)^0,c
 31429  014C84  0EFF               	movlw	255
 31430  014C86  200B               	addwfc	(btemp+10)^0,w,c
 31431  014C88  6E07               	movwf	(btemp+6)^0,c
 31432  014C8A  0EFF               	movlw	255
 31433  014C8C  200C               	addwfc	(btemp+11)^0,w,c
 31434  014C8E  6E08               	movwf	(btemp+7)^0,c
 31435                           
 31436                           ;stkvar	_b @ sp[(-4)+-4]
 31437  014C90  0EF8               	movlw	-8
 31438  014C92  0060  F017  FFE3   	movff	btemp+4,plusw1
 31439  014C98  0EF9               	movlw	-7
 31440  014C9A  0060  F01B  FFE3   	movff	btemp+5,plusw1
 31441  014CA0  0EFA               	movlw	-6
 31442  014CA2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 31443  014CA8  0EFB               	movlw	-5
 31444  014CAA  0060  F023  FFE3   	movff	btemp+7,plusw1
 31445                           
 31446                           ;stkvar	_signs @ sp[(-4)+3]
 31447  014CB0  0EFF               	movlw	-1
 31448  014CB2  7EE3               	btg	plusw1,7,c
 31449                           
 31450                           ;stkvar	_grs @ sp[(-4)+0]
 31451  014CB4  0EFC               	movlw	-4
 31452  014CB6  50E3               	movf	plusw1,w,c
 31453  014CB8  0800               	sublw	0
 31454  014CBA  6E0C               	movwf	(btemp+11)^0,c
 31455                           
 31456                           ;stkvar	_grs @ sp[(-4)+0]
 31457  014CBC  0EFC               	movlw	-4
 31458  014CBE  0060  F033  FFE3   	movff	btemp+11,plusw1
 31459                           
 31460                           ;stkvar	_grs @ sp[(-4)+0]
 31461  014CC4  0EFC               	movlw	-4
 31462  014CC6  50E3               	movf	plusw1,w,c
 31463  014CC8  A4D8               	btfss	status,2,c
 31464  014CCA  D020               	goto	l8622
 31465                           
 31466                           ;stkvar	_b @ sp[(-4)+-4]
 31467  014CCC  50E1               	movf	fsr1l,w,c
 31468  014CCE  0FF8               	addlw	-8
 31469  014CD0  6ED9               	movwf	fsr2l,c
 31470  014CD2  50E2               	movf	fsr1h,w,c
 31471  014CD4  6EDA               	movwf	fsr2h,c
 31472  014CD6  0EFF               	movlw	255
 31473  014CD8  22DA               	addwfc	fsr2h,f,c
 31474  014CDA  2ADE               	incf	postinc2,f,c
 31475  014CDC  0E00               	movlw	0
 31476  014CDE  22DE               	addwfc	postinc2,f,c
 31477  014CE0  22DE               	addwfc	postinc2,f,c
 31478  014CE2  22DE               	addwfc	postinc2,f,c
 31479  014CE4  D013               	goto	l8622
 31480  014CE6                     l8620:
 31481                           
 31482                           ;stkvar	_a @ sp[(-4)+-8]
 31483                           ;stkvar	_b @ sp[(-4)+-4]
 31484  014CE6  50E1               	movf	fsr1l,w,c
 31485  014CE8  0FF8               	addlw	-8
 31486  014CEA  6ED9               	movwf	fsr2l,c
 31487  014CEC  50E2               	movf	fsr1h,w,c
 31488  014CEE  6EDA               	movwf	fsr2h,c
 31489  014CF0  0EFF               	movlw	255
 31490  014CF2  22DA               	addwfc	fsr2h,f,c
 31491  014CF4  0EF4               	movlw	-12
 31492  014CF6  50E3               	movf	plusw1,w,c
 31493  014CF8  5EDE               	subwf	postinc2,f,c
 31494  014CFA  0EF5               	movlw	-11
 31495  014CFC  50E3               	movf	plusw1,w,c
 31496  014CFE  5ADE               	subwfb	postinc2,f,c
 31497  014D00  0EF6               	movlw	-10
 31498  014D02  50E3               	movf	plusw1,w,c
 31499  014D04  5ADE               	subwfb	postinc2,f,c
 31500  014D06  0EF7               	movlw	-9
 31501  014D08  50E3               	movf	plusw1,w,c
 31502  014D0A  5ADE               	subwfb	postinc2,f,c
 31503  014D0C                     l8622:
 31504                           
 31505                           ;stkvar	_b @ sp[(-4)+-4]
 31506  014D0C  0EF8               	movlw	-8
 31507  014D0E  50E3               	movf	plusw1,w,c
 31508  014D10  E145               	bnz	l8644
 31509  014D12  0EF9               	movlw	-7
 31510  014D14  50E3               	movf	plusw1,w,c
 31511  014D16  E142               	bnz	l8644
 31512  014D18  0EFA               	movlw	-6
 31513  014D1A  50E3               	movf	plusw1,w,c
 31514  014D1C  E13F               	bnz	l8644
 31515  014D1E  0EFB               	movlw	-5
 31516  014D20  50E3               	movf	plusw1,w,c
 31517  014D22  A4D8               	btfss	status,2,c
 31518  014D24  D03B               	goto	l8644
 31519                           
 31520                           ;stkvar	_grs @ sp[(-4)+0]
 31521  014D26  0EFC               	movlw	-4
 31522  014D28  50E3               	movf	plusw1,w,c
 31523  014D2A  A4D8               	btfss	status,2,c
 31524  014D2C  D037               	goto	l8644
 31525  014D2E                     u6260:
 31526  014D2E  0E00               	movlw	0
 31527  014D30  6E01               	movwf	btemp^0,c
 31528  014D32  0E00               	movlw	0
 31529  014D34  6E02               	movwf	(btemp+1)^0,c
 31530  014D36  0E00               	movlw	0
 31531  014D38  6E03               	movwf	(btemp+2)^0,c
 31532  014D3A  0E00               	movlw	0
 31533  014D3C  6E04               	movwf	(btemp+3)^0,c
 31534  014D3E  D0C6               	goto	l3208
 31535  014D40                     l8630:
 31536                           
 31537                           ;stkvar	_b @ sp[(-4)+-4]
 31538  014D40  90D8               	bcf	status,0,c
 31539  014D42  0EF8               	movlw	-8
 31540  014D44  36E3               	rlcf	plusw1,f,c
 31541  014D46  0EF9               	movlw	-7
 31542  014D48  36E3               	rlcf	plusw1,f,c
 31543  014D4A  0EFA               	movlw	-6
 31544  014D4C  36E3               	rlcf	plusw1,f,c
 31545  014D4E  0EFB               	movlw	-5
 31546  014D50  36E3               	rlcf	plusw1,f,c
 31547                           
 31548                           ;stkvar	_grs @ sp[(-4)+0]
 31549  014D52  0EFC               	movlw	-4
 31550  014D54  AEE3               	btfss	plusw1,7,c
 31551  014D56  D002               	goto	l3220
 31552                           
 31553                           ;stkvar	_b @ sp[(-4)+-4]
 31554  014D58  0EF8               	movlw	-8
 31555  014D5A  80E3               	bsf	plusw1,0,c
 31556  014D5C                     l3220:
 31557                           
 31558                           ;stkvar	_grs @ sp[(-4)+0]
 31559  014D5C  0EFC               	movlw	-4
 31560  014D5E  A0E3               	btfss	plusw1,0,c
 31561  014D60  D00E               	goto	l8638
 31562                           
 31563                           ;stkvar	_grs @ sp[(-4)+0]
 31564  014D62  0EFC               	movlw	-4
 31565  014D64  006F FF8C  F00C    	movff	plusw1,btemp+11
 31566  014D6A  90D8               	bcf	status,0,c
 31567  014D6C  340C               	rlcf	(btemp+11)^0,w,c
 31568  014D6E  6E0B               	movwf	(btemp+10)^0,c
 31569  014D70  0E01               	movlw	1
 31570  014D72  120B               	iorwf	(btemp+10)^0,f,c
 31571                           
 31572                           ;stkvar	_grs @ sp[(-4)+0]
 31573  014D74  0EFC               	movlw	-4
 31574  014D76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31575  014D7C  D009               	goto	l8640
 31576  014D7E                     l8638:
 31577                           
 31578                           ;stkvar	_grs @ sp[(-4)+0]
 31579  014D7E  50E1               	movf	fsr1l,w,c
 31580  014D80  0FFC               	addlw	-4
 31581  014D82  6ED9               	movwf	fsr2l,c
 31582  014D84  50E2               	movf	fsr1h,w,c
 31583  014D86  6EDA               	movwf	fsr2h,c
 31584  014D88  0EFF               	movlw	255
 31585  014D8A  22DA               	addwfc	fsr2h,f,c
 31586  014D8C  90D8               	bcf	status,0,c
 31587  014D8E  36DF               	rlcf	indf2,f,c
 31588  014D90                     l8640:
 31589                           
 31590                           ;stkvar	_bexp @ sp[(-4)+1]
 31591  014D90  0EFD               	movlw	-3
 31592  014D92  50E3               	movf	plusw1,w,c
 31593  014D94  B4D8               	btfsc	status,2,c
 31594  014D96  D002               	goto	l8644
 31595                           
 31596                           ;stkvar	_bexp @ sp[(-4)+1]
 31597  014D98  0EFD               	movlw	-3
 31598  014D9A  06E3               	decf	plusw1,f,c
 31599  014D9C                     l8644:
 31600                           
 31601                           ;stkvar	_b @ sp[(-4)+-4]
 31602  014D9C  0EFA               	movlw	-6
 31603  014D9E  AEE3               	btfss	plusw1,7,c
 31604  014DA0  D7CF               	goto	l8630
 31605  014DA2                     u6300:
 31606                           
 31607                           ;stkvar	_aexp @ sp[(-4)+2]
 31608  014DA2  0EFE               	movlw	-2
 31609  014DA4  6AE3               	clrf	plusw1,c
 31610                           
 31611                           ;stkvar	_grs @ sp[(-4)+0]
 31612  014DA6  0EFC               	movlw	-4
 31613  014DA8  AEE3               	btfss	plusw1,7,c
 31614  014DAA  D00F               	goto	l8658
 31615                           
 31616                           ;stkvar	_grs @ sp[(-4)+0]
 31617  014DAC  0EFC               	movlw	-4
 31618  014DAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 31619  014DB4  0E7F               	movlw	127
 31620  014DB6  160C               	andwf	(btemp+11)^0,f,c
 31621  014DB8  B4D8               	btfsc	status,2,c
 31622  014DBA  D004               	goto	l8654
 31623  014DBC                     u6320:
 31624                           
 31625                           ;stkvar	_aexp @ sp[(-4)+2]
 31626  014DBC  0EFE               	movlw	-2
 31627  014DBE  6AE3               	clrf	plusw1,c
 31628  014DC0  2AE3               	incf	plusw1,f,c
 31629  014DC2  D003               	goto	l8658
 31630  014DC4                     l8654:
 31631                           
 31632                           ;stkvar	_b @ sp[(-4)+-4]
 31633  014DC4  0EF8               	movlw	-8
 31634  014DC6  B0E3               	btfsc	plusw1,0,c
 31635  014DC8  D7F9               	goto	u6320
 31636  014DCA                     l8658:
 31637                           
 31638                           ;stkvar	_aexp @ sp[(-4)+2]
 31639  014DCA  0EFE               	movlw	-2
 31640  014DCC  50E3               	movf	plusw1,w,c
 31641  014DCE  B4D8               	btfsc	status,2,c
 31642  014DD0  D02B               	goto	l8670
 31643                           
 31644                           ;stkvar	_b @ sp[(-4)+-4]
 31645  014DD2  50E1               	movf	fsr1l,w,c
 31646  014DD4  0FF8               	addlw	-8
 31647  014DD6  6ED9               	movwf	fsr2l,c
 31648  014DD8  50E2               	movf	fsr1h,w,c
 31649  014DDA  6EDA               	movwf	fsr2h,c
 31650  014DDC  0EFF               	movlw	255
 31651  014DDE  22DA               	addwfc	fsr2h,f,c
 31652  014DE0  2ADE               	incf	postinc2,f,c
 31653  014DE2  0E00               	movlw	0
 31654  014DE4  22DE               	addwfc	postinc2,f,c
 31655  014DE6  22DE               	addwfc	postinc2,f,c
 31656  014DE8  22DE               	addwfc	postinc2,f,c
 31657                           
 31658                           ;stkvar	_b @ sp[(-4)+-4]
 31659  014DEA  0EFB               	movlw	-5
 31660  014DEC  A0E3               	btfss	plusw1,0,c
 31661  014DEE  D01C               	goto	l8670
 31662  014DF0  0E01               	movlw	1
 31663  014DF2  6E0C               	movwf	(btemp+11)^0,c
 31664                           
 31665                           ;stkvar	_b @ sp[(-4)+-4]
 31666  014DF4  50E1               	movf	fsr1l,w,c
 31667  014DF6  0FF8               	addlw	-8
 31668  014DF8  6ED9               	movwf	fsr2l,c
 31669  014DFA  50E2               	movf	fsr1h,w,c
 31670  014DFC  6EDA               	movwf	fsr2h,c
 31671  014DFE  0EFF               	movlw	255
 31672  014E00  22DA               	addwfc	fsr2h,f,c
 31673  014E02  280C               	incf	(btemp+11)^0,w,c
 31674  014E04  52DE               	movf	postinc2,f,c
 31675  014E06  D008               	goto	u6360
 31676  014E08                     u6365:
 31677  014E08  52DE               	movf	postinc2,f,c
 31678  014E0A  90D8               	bcf	status,0,c
 31679  014E0C  BEDC               	btfsc	preinc2,7,c
 31680  014E0E  80D8               	bsf	status,0,c
 31681  014E10  32DD               	rrcf	postdec2,f,c
 31682  014E12  32DD               	rrcf	postdec2,f,c
 31683  014E14  32DD               	rrcf	postdec2,f,c
 31684  014E16  32DE               	rrcf	postinc2,f,c
 31685  014E18                     u6360:
 31686  014E18  2EE8               	decfsz	wreg,f,c
 31687  014E1A  D7F6               	goto	u6365
 31688                           
 31689                           ;stkvar	_bexp @ sp[(-4)+1]
 31690  014E1C  0EFD               	movlw	-3
 31691  014E1E  28E3               	incf	plusw1,w,c
 31692  014E20  B4D8               	btfsc	status,2,c
 31693  014E22  D002               	goto	l8670
 31694                           
 31695                           ;stkvar	_bexp @ sp[(-4)+1]
 31696  014E24  0EFD               	movlw	-3
 31697  014E26  2AE3               	incf	plusw1,f,c
 31698  014E28                     l8670:
 31699                           
 31700                           ;stkvar	_bexp @ sp[(-4)+1]
 31701  014E28  0EFD               	movlw	-3
 31702  014E2A  28E3               	incf	plusw1,w,c
 31703  014E2C  B4D8               	btfsc	status,2,c
 31704  014E2E  D004               	goto	u6390
 31705                           
 31706                           ;stkvar	_bexp @ sp[(-4)+1]
 31707  014E30  0EFD               	movlw	-3
 31708  014E32  50E3               	movf	plusw1,w,c
 31709  014E34  A4D8               	btfss	status,2,c
 31710  014E36  D00E               	goto	l8680
 31711  014E38                     u6390:
 31712                           
 31713                           ;stkvar	_b @ sp[(-4)+-4]
 31714  014E38  0EF8               	movlw	-8
 31715  014E3A  6AE3               	clrf	plusw1,c
 31716  014E3C  0EF9               	movlw	-7
 31717  014E3E  6AE3               	clrf	plusw1,c
 31718  014E40  0EFA               	movlw	-6
 31719  014E42  6AE3               	clrf	plusw1,c
 31720  014E44  0EFB               	movlw	-5
 31721  014E46  6AE3               	clrf	plusw1,c
 31722                           
 31723                           ;stkvar	_bexp @ sp[(-4)+1]
 31724  014E48  0EFD               	movlw	-3
 31725  014E4A  50E3               	movf	plusw1,w,c
 31726  014E4C  A4D8               	btfss	status,2,c
 31727  014E4E  D002               	goto	l8680
 31728                           
 31729                           ;stkvar	_signs @ sp[(-4)+3]
 31730  014E50  0EFF               	movlw	-1
 31731  014E52  6AE3               	clrf	plusw1,c
 31732  014E54                     l8680:
 31733                           
 31734                           ;stkvar	_bexp @ sp[(-4)+1]
 31735  014E54  0EFD               	movlw	-3
 31736  014E56  A0E3               	btfss	plusw1,0,c
 31737  014E58  D009               	goto	l8684
 31738                           
 31739                           ;stkvar	_b @ sp[(-4)+-4]
 31740  014E5A  0EFA               	movlw	250
 31741  014E5C  24E1               	addwf	fsr1l,w,c
 31742  014E5E  6ED9               	movwf	fsr2l,c
 31743  014E60  0EFF               	movlw	255
 31744  014E62  20E2               	addwfc	fsr1h,w,c
 31745  014E64  6EDA               	movwf	fsr2h,c
 31746  014E66  0E00               	movlw	0
 31747  014E68  8EDB               	bsf	plusw2,7,c
 31748  014E6A  D008               	goto	l8686
 31749  014E6C                     l8684:
 31750                           
 31751                           ;stkvar	_b @ sp[(-4)+-4]
 31752  014E6C  0EFA               	movlw	250
 31753  014E6E  24E1               	addwf	fsr1l,w,c
 31754  014E70  6ED9               	movwf	fsr2l,c
 31755  014E72  0EFF               	movlw	255
 31756  014E74  20E2               	addwfc	fsr1h,w,c
 31757  014E76  6EDA               	movwf	fsr2h,c
 31758  014E78  0E7F               	movlw	127
 31759  014E7A  16DF               	andwf	indf2,f,c
 31760  014E7C                     l8686:
 31761                           
 31762                           ;stkvar	_b @ sp[(-4)+-4]
 31763  014E7C  0EFB               	movlw	251
 31764  014E7E  24E1               	addwf	fsr1l,w,c
 31765  014E80  6ED9               	movwf	fsr2l,c
 31766  014E82  0EFF               	movlw	255
 31767  014E84  20E2               	addwfc	fsr1h,w,c
 31768  014E86  6EDA               	movwf	fsr2h,c
 31769                           
 31770                           ;stkvar	_bexp @ sp[(-4)+1]
 31771  014E88  0EFD               	movlw	-3
 31772  014E8A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31773  014E90  90D8               	bcf	status,0,c
 31774  014E92  300C               	rrcf	(btemp+11)^0,w,c
 31775  014E94  6EDF               	movwf	indf2,c
 31776                           
 31777                           ;stkvar	_signs @ sp[(-4)+3]
 31778  014E96  0EFF               	movlw	-1
 31779  014E98  AEE3               	btfss	plusw1,7,c
 31780  014E9A  D008               	goto	l8692
 31781                           
 31782                           ;stkvar	_b @ sp[(-4)+-4]
 31783  014E9C  0EFB               	movlw	251
 31784  014E9E  24E1               	addwf	fsr1l,w,c
 31785  014EA0  6ED9               	movwf	fsr2l,c
 31786  014EA2  0EFF               	movlw	255
 31787  014EA4  20E2               	addwfc	fsr1h,w,c
 31788  014EA6  6EDA               	movwf	fsr2h,c
 31789  014EA8  0E00               	movlw	0
 31790  014EAA  8EDB               	bsf	plusw2,7,c
 31791  014EAC                     l8692:
 31792                           
 31793                           ;stkvar	_b @ sp[(-4)+-4]
 31794  014EAC  0EF8               	movlw	-8
 31795  014EAE  006F FF8C  F001    	movff	plusw1,btemp
 31796  014EB4  0EF9               	movlw	-7
 31797  014EB6  006F FF8C  F002    	movff	plusw1,btemp+1
 31798  014EBC  0EFA               	movlw	-6
 31799  014EBE  006F FF8C  F003    	movff	plusw1,btemp+2
 31800  014EC4  0EFB               	movlw	-5
 31801  014EC6  006F FF8C  F004    	movff	plusw1,btemp+3
 31802  014ECC                     l3208:
 31803                           
 31804                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 31805  014ECC  0EF4               	movlw	244
 31806  014ECE  26E1               	addwf	fsr1l,f,c
 31807  014ED0  0EFF               	movlw	255
 31808  014ED2  22E2               	addwfc	fsr1h,f,c
 31809  014ED4  0012               	return		;funcret
 31810  014ED6                     __end_of___fladd:
 31811                           	opt callstack 0
 31812                           
 31813 ;; *************** function ___flmul *****************
 31814 ;; Defined at:
 31815 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 31816 ;; Parameters:    Size  Location     Type
 31817 ;;  b               4  [STACK] unsigned char 
 31818 ;;  a               4  [STACK] unsigned char 
 31819 ;; Auto vars:     Size  Location     Type
 31820 ;;  prod            4  [STACK] struct .
 31821 ;;  grs             4  [STACK] unsigned long 
 31822 ;;  temp            2  [STACK] struct .
 31823 ;;  bexp            1  [STACK] unsigned char 
 31824 ;;  aexp            1  [STACK] unsigned char 
 31825 ;;  sign            1  [STACK] unsigned char 
 31826 ;; Return value:  Size  Location     Type
 31827 ;;                  4  [STACK] unsigned char 
 31828 ;; Registers used:
 31829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 31830 ;; Tracked objects:
 31831 ;;		On entry : 0/2
 31832 ;;		On exit  : 0/0
 31833 ;;		Unchanged: 0/0
 31834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31839 ;;Total ram usage:        0 bytes
 31840 ;; Hardware stack levels used:    1
 31841 ;; Hardware stack levels required when called:   15
 31842 ;; This function calls:
 31843 ;;		Nothing
 31844 ;; This function is called by:
 31845 ;;		_conv_raw_result
 31846 ;;		_lp_filter
 31847 ;;		_calc_model_data
 31848 ;;		_calc_bsoc
 31849 ;;		_init_bsoc
 31850 ;;		_efgtoa
 31851 ;; This function uses a reentrant model
 31852 ;;
 31853                           
 31854                           	psect	text127
 31855  013EF0                     __ptext127:
 31856                           	opt callstack 0
 31857  013EF0                     ___flmul:
 31858                           	opt callstack 0
 31859                           
 31860                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 31861  013EF0  0E0D               	movlw	13
 31862  013EF2  26E1               	addwf	fsr1l,f,c
 31863  013EF4  0E00               	movlw	0
 31864  013EF6  22E2               	addwfc	fsr1h,f,c
 31865                           
 31866                           ;stkvar	_b @ sp[(-13)+-4]
 31867                           
 31868                           ;incstack = 0
 31869 ;; hardware stack exceeded
 31870  013EF8  0EF2               	movlw	242
 31871  013EFA  24E1               	addwf	fsr1l,w,c
 31872  013EFC  6ED9               	movwf	fsr2l,c
 31873  013EFE  0EFF               	movlw	255
 31874  013F00  20E2               	addwfc	fsr1h,w,c
 31875  013F02  6EDA               	movwf	fsr2h,c
 31876  013F04  50DF               	movf	indf2,w,c
 31877  013F06  6E0C               	movwf	(btemp+11)^0,c
 31878  013F08  0E80               	movlw	128
 31879  013F0A  160C               	andwf	(btemp+11)^0,f,c
 31880                           
 31881                           ;stkvar	_sign @ sp[(-13)+12]
 31882  013F0C  0EFF               	movlw	-1
 31883  013F0E  0060  F033  FFE3   	movff	btemp+11,plusw1
 31884                           
 31885                           ;stkvar	_b @ sp[(-13)+-4]
 31886  013F14  0EF2               	movlw	242
 31887  013F16  24E1               	addwf	fsr1l,w,c
 31888  013F18  6ED9               	movwf	fsr2l,c
 31889  013F1A  0EFF               	movlw	255
 31890  013F1C  20E2               	addwfc	fsr1h,w,c
 31891  013F1E  6EDA               	movwf	fsr2h,c
 31892  013F20  50DF               	movf	indf2,w,c
 31893  013F22  6E0C               	movwf	(btemp+11)^0,c
 31894  013F24  90D8               	bcf	status,0,c
 31895  013F26  340C               	rlcf	(btemp+11)^0,w,c
 31896  013F28  6E0B               	movwf	(btemp+10)^0,c
 31897                           
 31898                           ;stkvar	_bexp @ sp[(-13)+10]
 31899  013F2A  0EFD               	movlw	-3
 31900  013F2C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31901                           
 31902                           ;stkvar	_b @ sp[(-13)+-4]
 31903  013F32  0EF1               	movlw	241
 31904  013F34  24E1               	addwf	fsr1l,w,c
 31905  013F36  6ED9               	movwf	fsr2l,c
 31906  013F38  0EFF               	movlw	255
 31907  013F3A  20E2               	addwfc	fsr1h,w,c
 31908  013F3C  6EDA               	movwf	fsr2h,c
 31909  013F3E  AEDF               	btfss	indf2,7,c
 31910  013F40  D002               	goto	l9118
 31911                           
 31912                           ;stkvar	_bexp @ sp[(-13)+10]
 31913  013F42  0EFD               	movlw	-3
 31914  013F44  80E3               	bsf	plusw1,0,c
 31915  013F46                     l9118:
 31916                           
 31917                           ;stkvar	_bexp @ sp[(-13)+10]
 31918  013F46  0EFD               	movlw	-3
 31919  013F48  50E3               	movf	plusw1,w,c
 31920  013F4A  B4D8               	btfsc	status,2,c
 31921  013F4C  D01F               	goto	l9126
 31922                           
 31923                           ;stkvar	_bexp @ sp[(-13)+10]
 31924  013F4E  0EFD               	movlw	-3
 31925  013F50  28E3               	incf	plusw1,w,c
 31926  013F52  A4D8               	btfss	status,2,c
 31927  013F54  D018               	goto	l9124
 31928  013F56  0E00               	movlw	0
 31929  013F58  6E09               	movwf	(btemp+8)^0,c
 31930  013F5A  0E00               	movlw	0
 31931  013F5C  6E0A               	movwf	(btemp+9)^0,c
 31932  013F5E  0E00               	movlw	0
 31933  013F60  6E0B               	movwf	(btemp+10)^0,c
 31934  013F62  0E00               	movlw	0
 31935  013F64  6E0C               	movwf	(btemp+11)^0,c
 31936                           
 31937                           ;stkvar	_b @ sp[(-13)+-4]
 31938  013F66  0EEF               	movlw	-17
 31939  013F68  0060  F027  FFE3   	movff	btemp+8,plusw1
 31940  013F6E  0EF0               	movlw	-16
 31941  013F70  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31942  013F76  0EF1               	movlw	-15
 31943  013F78  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31944  013F7E  0EF2               	movlw	-14
 31945  013F80  0060  F033  FFE3   	movff	btemp+11,plusw1
 31946  013F86                     l9124:
 31947                           
 31948                           ;stkvar	_b @ sp[(-13)+-4]
 31949  013F86  0EF1               	movlw	-15
 31950  013F88  8EE3               	bsf	plusw1,7,c
 31951  013F8A  D018               	goto	l9128
 31952  013F8C                     l9126:
 31953  013F8C  0E00               	movlw	0
 31954  013F8E  6E09               	movwf	(btemp+8)^0,c
 31955  013F90  0E00               	movlw	0
 31956  013F92  6E0A               	movwf	(btemp+9)^0,c
 31957  013F94  0E00               	movlw	0
 31958  013F96  6E0B               	movwf	(btemp+10)^0,c
 31959  013F98  0E00               	movlw	0
 31960  013F9A  6E0C               	movwf	(btemp+11)^0,c
 31961                           
 31962                           ;stkvar	_b @ sp[(-13)+-4]
 31963  013F9C  0EEF               	movlw	-17
 31964  013F9E  0060  F027  FFE3   	movff	btemp+8,plusw1
 31965  013FA4  0EF0               	movlw	-16
 31966  013FA6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31967  013FAC  0EF1               	movlw	-15
 31968  013FAE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31969  013FB4  0EF2               	movlw	-14
 31970  013FB6  0060  F033  FFE3   	movff	btemp+11,plusw1
 31971  013FBC                     l9128:
 31972                           
 31973                           ;stkvar	_a @ sp[(-13)+-8]
 31974  013FBC  0EEE               	movlw	238
 31975  013FBE  24E1               	addwf	fsr1l,w,c
 31976  013FC0  6ED9               	movwf	fsr2l,c
 31977  013FC2  0EFF               	movlw	255
 31978  013FC4  20E2               	addwfc	fsr1h,w,c
 31979  013FC6  6EDA               	movwf	fsr2h,c
 31980  013FC8  50DF               	movf	indf2,w,c
 31981  013FCA  6E0C               	movwf	(btemp+11)^0,c
 31982  013FCC  0E80               	movlw	128
 31983  013FCE  160C               	andwf	(btemp+11)^0,f,c
 31984                           
 31985                           ;stkvar	_sign @ sp[(-13)+12]
 31986  013FD0  50E1               	movf	fsr1l,w,c
 31987  013FD2  0FFF               	addlw	-1
 31988  013FD4  6ED9               	movwf	fsr2l,c
 31989  013FD6  50E2               	movf	fsr1h,w,c
 31990  013FD8  6EDA               	movwf	fsr2h,c
 31991  013FDA  0EFF               	movlw	255
 31992  013FDC  22DA               	addwfc	fsr2h,f,c
 31993  013FDE  500C               	movf	(btemp+11)^0,w,c
 31994  013FE0  1ADF               	xorwf	indf2,f,c
 31995                           
 31996                           ;stkvar	_a @ sp[(-13)+-8]
 31997  013FE2  0EEE               	movlw	238
 31998  013FE4  24E1               	addwf	fsr1l,w,c
 31999  013FE6  6ED9               	movwf	fsr2l,c
 32000  013FE8  0EFF               	movlw	255
 32001  013FEA  20E2               	addwfc	fsr1h,w,c
 32002  013FEC  6EDA               	movwf	fsr2h,c
 32003  013FEE  50DF               	movf	indf2,w,c
 32004  013FF0  6E0C               	movwf	(btemp+11)^0,c
 32005  013FF2  90D8               	bcf	status,0,c
 32006  013FF4  340C               	rlcf	(btemp+11)^0,w,c
 32007  013FF6  6E0B               	movwf	(btemp+10)^0,c
 32008                           
 32009                           ;stkvar	_aexp @ sp[(-13)+11]
 32010  013FF8  0EFE               	movlw	-2
 32011  013FFA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32012                           
 32013                           ;stkvar	_a @ sp[(-13)+-8]
 32014  014000  0EED               	movlw	237
 32015  014002  24E1               	addwf	fsr1l,w,c
 32016  014004  6ED9               	movwf	fsr2l,c
 32017  014006  0EFF               	movlw	255
 32018  014008  20E2               	addwfc	fsr1h,w,c
 32019  01400A  6EDA               	movwf	fsr2h,c
 32020  01400C  AEDF               	btfss	indf2,7,c
 32021  01400E  D002               	goto	l9136
 32022                           
 32023                           ;stkvar	_aexp @ sp[(-13)+11]
 32024  014010  0EFE               	movlw	-2
 32025  014012  80E3               	bsf	plusw1,0,c
 32026  014014                     l9136:
 32027                           
 32028                           ;stkvar	_aexp @ sp[(-13)+11]
 32029  014014  0EFE               	movlw	-2
 32030  014016  50E3               	movf	plusw1,w,c
 32031  014018  B4D8               	btfsc	status,2,c
 32032  01401A  D01F               	goto	l9144
 32033                           
 32034                           ;stkvar	_aexp @ sp[(-13)+11]
 32035  01401C  0EFE               	movlw	-2
 32036  01401E  28E3               	incf	plusw1,w,c
 32037  014020  A4D8               	btfss	status,2,c
 32038  014022  D018               	goto	l9142
 32039  014024  0E00               	movlw	0
 32040  014026  6E09               	movwf	(btemp+8)^0,c
 32041  014028  0E00               	movlw	0
 32042  01402A  6E0A               	movwf	(btemp+9)^0,c
 32043  01402C  0E00               	movlw	0
 32044  01402E  6E0B               	movwf	(btemp+10)^0,c
 32045  014030  0E00               	movlw	0
 32046  014032  6E0C               	movwf	(btemp+11)^0,c
 32047                           
 32048                           ;stkvar	_a @ sp[(-13)+-8]
 32049  014034  0EEB               	movlw	-21
 32050  014036  0060  F027  FFE3   	movff	btemp+8,plusw1
 32051  01403C  0EEC               	movlw	-20
 32052  01403E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32053  014044  0EED               	movlw	-19
 32054  014046  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32055  01404C  0EEE               	movlw	-18
 32056  01404E  0060  F033  FFE3   	movff	btemp+11,plusw1
 32057  014054                     l9142:
 32058                           
 32059                           ;stkvar	_a @ sp[(-13)+-8]
 32060  014054  0EED               	movlw	-19
 32061  014056  8EE3               	bsf	plusw1,7,c
 32062  014058  D018               	goto	l9146
 32063  01405A                     l9144:
 32064  01405A  0E00               	movlw	0
 32065  01405C  6E09               	movwf	(btemp+8)^0,c
 32066  01405E  0E00               	movlw	0
 32067  014060  6E0A               	movwf	(btemp+9)^0,c
 32068  014062  0E00               	movlw	0
 32069  014064  6E0B               	movwf	(btemp+10)^0,c
 32070  014066  0E00               	movlw	0
 32071  014068  6E0C               	movwf	(btemp+11)^0,c
 32072                           
 32073                           ;stkvar	_a @ sp[(-13)+-8]
 32074  01406A  0EEB               	movlw	-21
 32075  01406C  0060  F027  FFE3   	movff	btemp+8,plusw1
 32076  014072  0EEC               	movlw	-20
 32077  014074  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32078  01407A  0EED               	movlw	-19
 32079  01407C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32080  014082  0EEE               	movlw	-18
 32081  014084  0060  F033  FFE3   	movff	btemp+11,plusw1
 32082  01408A                     l9146:
 32083                           
 32084                           ;stkvar	_aexp @ sp[(-13)+11]
 32085  01408A  0EFE               	movlw	-2
 32086  01408C  50E3               	movf	plusw1,w,c
 32087  01408E  B4D8               	btfsc	status,2,c
 32088  014090  D004               	goto	u7380
 32089                           
 32090                           ;stkvar	_bexp @ sp[(-13)+10]
 32091  014092  0EFD               	movlw	-3
 32092  014094  50E3               	movf	plusw1,w,c
 32093  014096  A4D8               	btfss	status,2,c
 32094  014098  D009               	goto	l9154
 32095  01409A                     u7380:
 32096  01409A  0E00               	movlw	0
 32097  01409C  6E01               	movwf	btemp^0,c
 32098  01409E  0E00               	movlw	0
 32099  0140A0  6E02               	movwf	(btemp+1)^0,c
 32100  0140A2  0E00               	movlw	0
 32101  0140A4  6E03               	movwf	(btemp+2)^0,c
 32102  0140A6  0E00               	movlw	0
 32103  0140A8  6E04               	movwf	(btemp+3)^0,c
 32104  0140AA  D332               	goto	l3289
 32105  0140AC                     l9154:
 32106                           
 32107                           ;stkvar	_b @ sp[(-13)+-4]
 32108  0140AC  0EEF               	movlw	-17
 32109  0140AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 32110                           
 32111                           ;stkvar	_a @ sp[(-13)+-8]
 32112  0140B4  0EED               	movlw	237
 32113  0140B6  24E1               	addwf	fsr1l,w,c
 32114  0140B8  6ED9               	movwf	fsr2l,c
 32115  0140BA  0EFF               	movlw	255
 32116  0140BC  20E2               	addwfc	fsr1h,w,c
 32117  0140BE  6EDA               	movwf	fsr2h,c
 32118  0140C0  50DF               	movf	indf2,w,c
 32119  0140C2  020C               	mulwf	(btemp+11)^0,c
 32120                           
 32121                           ;stkvar	_temp @ sp[(-13)+8]
 32122  0140C4  0EFB               	movlw	-5
 32123  0140C6  006F FFCF FFE3     	movff	prodl,plusw1
 32124  0140CC  0EFC               	movlw	-4
 32125  0140CE  006F FFD3 FFE3     	movff	prodh,plusw1
 32126                           
 32127                           ;stkvar	_temp @ sp[(-13)+8]
 32128  0140D4  0EFB               	movlw	-5
 32129  0140D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 32130  0140DC  0060  F030  F005   	movff	btemp+11,btemp+4
 32131  0140E2  6A06               	clrf	(btemp+5)^0,c
 32132  0140E4  6A07               	clrf	(btemp+6)^0,c
 32133  0140E6  6A08               	clrf	(btemp+7)^0,c
 32134                           
 32135                           ;stkvar	_grs @ sp[(-13)+4]
 32136  0140E8  0EF7               	movlw	-9
 32137  0140EA  0060  F017  FFE3   	movff	btemp+4,plusw1
 32138  0140F0  0EF8               	movlw	-8
 32139  0140F2  0060  F01B  FFE3   	movff	btemp+5,plusw1
 32140  0140F8  0EF9               	movlw	-7
 32141  0140FA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 32142  014100  0EFA               	movlw	-6
 32143  014102  0060  F023  FFE3   	movff	btemp+7,plusw1
 32144                           
 32145                           ;stkvar	_temp @ sp[(-13)+8]
 32146  014108  0EFC               	movlw	252
 32147  01410A  24E1               	addwf	fsr1l,w,c
 32148  01410C  6ED9               	movwf	fsr2l,c
 32149  01410E  0EFF               	movlw	255
 32150  014110  20E2               	addwfc	fsr1h,w,c
 32151  014112  6EDA               	movwf	fsr2h,c
 32152  014114  50DF               	movf	indf2,w,c
 32153  014116  6E0C               	movwf	(btemp+11)^0,c
 32154  014118  0060  F030  F005   	movff	btemp+11,btemp+4
 32155  01411E  6A06               	clrf	(btemp+5)^0,c
 32156  014120  6A07               	clrf	(btemp+6)^0,c
 32157  014122  6A08               	clrf	(btemp+7)^0,c
 32158                           
 32159                           ;stkvar	_prod @ sp[(-13)+0]
 32160  014124  0EF3               	movlw	-13
 32161  014126  0060  F017  FFE3   	movff	btemp+4,plusw1
 32162  01412C  0EF4               	movlw	-12
 32163  01412E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 32164  014134  0EF5               	movlw	-11
 32165  014136  0060  F01F  FFE3   	movff	btemp+6,plusw1
 32166  01413C  0EF6               	movlw	-10
 32167  01413E  0060  F023  FFE3   	movff	btemp+7,plusw1
 32168                           
 32169                           ;stkvar	_b @ sp[(-13)+-4]
 32170  014144  0EF0               	movlw	240
 32171  014146  24E1               	addwf	fsr1l,w,c
 32172  014148  6ED9               	movwf	fsr2l,c
 32173  01414A  0EFF               	movlw	255
 32174  01414C  20E2               	addwfc	fsr1h,w,c
 32175  01414E  6EDA               	movwf	fsr2h,c
 32176  014150  50DF               	movf	indf2,w,c
 32177  014152  6E0C               	movwf	(btemp+11)^0,c
 32178                           
 32179                           ;stkvar	_a @ sp[(-13)+-8]
 32180  014154  0EEC               	movlw	236
 32181  014156  24E1               	addwf	fsr1l,w,c
 32182  014158  6ED9               	movwf	fsr2l,c
 32183  01415A  0EFF               	movlw	255
 32184  01415C  20E2               	addwfc	fsr1h,w,c
 32185  01415E  6EDA               	movwf	fsr2h,c
 32186  014160  50DF               	movf	indf2,w,c
 32187  014162  020C               	mulwf	(btemp+11)^0,c
 32188                           
 32189                           ;stkvar	_temp @ sp[(-13)+8]
 32190  014164  0EFB               	movlw	-5
 32191  014166  006F FFCF FFE3     	movff	prodl,plusw1
 32192  01416C  0EFC               	movlw	-4
 32193  01416E  006F FFD3 FFE3     	movff	prodh,plusw1
 32194                           
 32195                           ;stkvar	_grs @ sp[(-13)+4]
 32196  014174  50E1               	movf	fsr1l,w,c
 32197  014176  0FF7               	addlw	-9
 32198  014178  6ED9               	movwf	fsr2l,c
 32199  01417A  50E2               	movf	fsr1h,w,c
 32200  01417C  6EDA               	movwf	fsr2h,c
 32201  01417E  0EFF               	movlw	255
 32202  014180  22DA               	addwfc	fsr2h,f,c
 32203                           
 32204                           ;stkvar	_temp @ sp[(-13)+8]
 32205  014182  0EFB               	movlw	-5
 32206  014184  50E3               	movf	plusw1,w,c
 32207  014186  26DE               	addwf	postinc2,f,c
 32208  014188  0E00               	movlw	0
 32209  01418A  22DE               	addwfc	postinc2,f,c
 32210  01418C  22DE               	addwfc	postinc2,f,c
 32211  01418E  22DE               	addwfc	postinc2,f,c
 32212                           
 32213                           ;stkvar	_prod @ sp[(-13)+0]
 32214  014190  50E1               	movf	fsr1l,w,c
 32215  014192  0FF3               	addlw	-13
 32216  014194  6ED9               	movwf	fsr2l,c
 32217  014196  50E2               	movf	fsr1h,w,c
 32218  014198  6EDA               	movwf	fsr2h,c
 32219  01419A  0EFF               	movlw	255
 32220  01419C  22DA               	addwfc	fsr2h,f,c
 32221                           
 32222                           ;stkvar	_temp @ sp[(-13)+8]
 32223  01419E  0EFC               	movlw	252
 32224  0141A0  24E1               	addwf	fsr1l,w,c
 32225  0141A2  6EE9               	movwf	fsr0l,c
 32226  0141A4  0EFF               	movlw	255
 32227  0141A6  20E2               	addwfc	fsr1h,w,c
 32228  0141A8  6EEA               	movwf	fsr0h,c
 32229  0141AA  50EF               	movf	indf0,w,c
 32230  0141AC  26DE               	addwf	postinc2,f,c
 32231  0141AE  0E00               	movlw	0
 32232  0141B0  22DE               	addwfc	postinc2,f,c
 32233  0141B2  22DE               	addwfc	postinc2,f,c
 32234  0141B4  22DE               	addwfc	postinc2,f,c
 32235                           
 32236                           ;stkvar	_b @ sp[(-13)+-4]
 32237  0141B6  0EF1               	movlw	241
 32238  0141B8  24E1               	addwf	fsr1l,w,c
 32239  0141BA  6ED9               	movwf	fsr2l,c
 32240  0141BC  0EFF               	movlw	255
 32241  0141BE  20E2               	addwfc	fsr1h,w,c
 32242  0141C0  6EDA               	movwf	fsr2h,c
 32243  0141C2  50DF               	movf	indf2,w,c
 32244  0141C4  6E0C               	movwf	(btemp+11)^0,c
 32245                           
 32246                           ;stkvar	_a @ sp[(-13)+-8]
 32247  0141C6  0EEB               	movlw	-21
 32248  0141C8  50E3               	movf	plusw1,w,c
 32249  0141CA  020C               	mulwf	(btemp+11)^0,c
 32250                           
 32251                           ;stkvar	_temp @ sp[(-13)+8]
 32252  0141CC  0EFB               	movlw	-5
 32253  0141CE  006F FFCF FFE3     	movff	prodl,plusw1
 32254  0141D4  0EFC               	movlw	-4
 32255  0141D6  006F FFD3 FFE3     	movff	prodh,plusw1
 32256                           
 32257                           ;stkvar	_grs @ sp[(-13)+4]
 32258  0141DC  50E1               	movf	fsr1l,w,c
 32259  0141DE  0FF7               	addlw	-9
 32260  0141E0  6ED9               	movwf	fsr2l,c
 32261  0141E2  50E2               	movf	fsr1h,w,c
 32262  0141E4  6EDA               	movwf	fsr2h,c
 32263  0141E6  0EFF               	movlw	255
 32264  0141E8  22DA               	addwfc	fsr2h,f,c
 32265                           
 32266                           ;stkvar	_temp @ sp[(-13)+8]
 32267  0141EA  0EFB               	movlw	-5
 32268  0141EC  50E3               	movf	plusw1,w,c
 32269  0141EE  26DE               	addwf	postinc2,f,c
 32270  0141F0  0E00               	movlw	0
 32271  0141F2  22DE               	addwfc	postinc2,f,c
 32272  0141F4  22DE               	addwfc	postinc2,f,c
 32273  0141F6  22DE               	addwfc	postinc2,f,c
 32274                           
 32275                           ;stkvar	_prod @ sp[(-13)+0]
 32276  0141F8  50E1               	movf	fsr1l,w,c
 32277  0141FA  0FF3               	addlw	-13
 32278  0141FC  6ED9               	movwf	fsr2l,c
 32279  0141FE  50E2               	movf	fsr1h,w,c
 32280  014200  6EDA               	movwf	fsr2h,c
 32281  014202  0EFF               	movlw	255
 32282  014204  22DA               	addwfc	fsr2h,f,c
 32283                           
 32284                           ;stkvar	_temp @ sp[(-13)+8]
 32285  014206  0EFC               	movlw	252
 32286  014208  24E1               	addwf	fsr1l,w,c
 32287  01420A  6EE9               	movwf	fsr0l,c
 32288  01420C  0EFF               	movlw	255
 32289  01420E  20E2               	addwfc	fsr1h,w,c
 32290  014210  6EEA               	movwf	fsr0h,c
 32291  014212  50EF               	movf	indf0,w,c
 32292  014214  26DE               	addwf	postinc2,f,c
 32293  014216  0E00               	movlw	0
 32294  014218  22DE               	addwfc	postinc2,f,c
 32295  01421A  22DE               	addwfc	postinc2,f,c
 32296  01421C  22DE               	addwfc	postinc2,f,c
 32297                           
 32298                           ;stkvar	_grs @ sp[(-13)+4]
 32299  01421E  50E1               	movf	fsr1l,w,c
 32300  014220  0FF7               	addlw	-9
 32301  014222  6ED9               	movwf	fsr2l,c
 32302  014224  50E2               	movf	fsr1h,w,c
 32303  014226  6EDA               	movwf	fsr2h,c
 32304  014228  0EFF               	movlw	255
 32305  01422A  22DA               	addwfc	fsr2h,f,c
 32306  01422C  0E08               	movlw	8
 32307  01422E                     u7395:
 32308  01422E  90D8               	bcf	status,0,c
 32309  014230  36DE               	rlcf	postinc2,f,c
 32310  014232  36DE               	rlcf	postinc2,f,c
 32311  014234  36DE               	rlcf	postinc2,f,c
 32312  014236  36DD               	rlcf	postdec2,f,c
 32313  014238  52DD               	movf	postdec2,f,c
 32314  01423A  52DD               	movf	postdec2,f,c
 32315  01423C  2EE8               	decfsz	wreg,f,c
 32316  01423E  D7F7               	goto	u7395
 32317                           
 32318                           ;stkvar	_b @ sp[(-13)+-4]
 32319  014240  0EF0               	movlw	240
 32320  014242  24E1               	addwf	fsr1l,w,c
 32321  014244  6ED9               	movwf	fsr2l,c
 32322  014246  0EFF               	movlw	255
 32323  014248  20E2               	addwfc	fsr1h,w,c
 32324  01424A  6EDA               	movwf	fsr2h,c
 32325  01424C  50DF               	movf	indf2,w,c
 32326  01424E  6E0C               	movwf	(btemp+11)^0,c
 32327                           
 32328                           ;stkvar	_a @ sp[(-13)+-8]
 32329  014250  0EEB               	movlw	-21
 32330  014252  50E3               	movf	plusw1,w,c
 32331  014254  020C               	mulwf	(btemp+11)^0,c
 32332                           
 32333                           ;stkvar	_temp @ sp[(-13)+8]
 32334  014256  0EFB               	movlw	-5
 32335  014258  006F FFCF FFE3     	movff	prodl,plusw1
 32336  01425E  0EFC               	movlw	-4
 32337  014260  006F FFD3 FFE3     	movff	prodh,plusw1
 32338                           
 32339                           ;stkvar	_temp @ sp[(-13)+8]
 32340  014266  0EFB               	movlw	-5
 32341  014268  006F FF8C  F00B    	movff	plusw1,btemp+10
 32342  01426E  0EFC               	movlw	-4
 32343  014270  006F FF8C  F00C    	movff	plusw1,btemp+11
 32344                           
 32345                           ;stkvar	_grs @ sp[(-13)+4]
 32346  014276  50E1               	movf	fsr1l,w,c
 32347  014278  0FF7               	addlw	-9
 32348  01427A  6ED9               	movwf	fsr2l,c
 32349  01427C  50E2               	movf	fsr1h,w,c
 32350  01427E  6EDA               	movwf	fsr2h,c
 32351  014280  0EFF               	movlw	255
 32352  014282  22DA               	addwfc	fsr2h,f,c
 32353  014284  500B               	movf	(btemp+10)^0,w,c
 32354  014286  26DE               	addwf	postinc2,f,c
 32355  014288  500C               	movf	(btemp+11)^0,w,c
 32356  01428A  22DE               	addwfc	postinc2,f,c
 32357  01428C  0E00               	movlw	0
 32358  01428E  22DE               	addwfc	postinc2,f,c
 32359  014290  22DE               	addwfc	postinc2,f,c
 32360                           
 32361                           ;stkvar	_b @ sp[(-13)+-4]
 32362  014292  0EEF               	movlw	-17
 32363  014294  006F FF8C  F00C    	movff	plusw1,btemp+11
 32364                           
 32365                           ;stkvar	_a @ sp[(-13)+-8]
 32366  01429A  0EEC               	movlw	236
 32367  01429C  24E1               	addwf	fsr1l,w,c
 32368  01429E  6ED9               	movwf	fsr2l,c
 32369  0142A0  0EFF               	movlw	255
 32370  0142A2  20E2               	addwfc	fsr1h,w,c
 32371  0142A4  6EDA               	movwf	fsr2h,c
 32372  0142A6  50DF               	movf	indf2,w,c
 32373  0142A8  020C               	mulwf	(btemp+11)^0,c
 32374                           
 32375                           ;stkvar	_temp @ sp[(-13)+8]
 32376  0142AA  0EFB               	movlw	-5
 32377  0142AC  006F FFCF FFE3     	movff	prodl,plusw1
 32378  0142B2  0EFC               	movlw	-4
 32379  0142B4  006F FFD3 FFE3     	movff	prodh,plusw1
 32380                           
 32381                           ;stkvar	_temp @ sp[(-13)+8]
 32382  0142BA  0EFB               	movlw	-5
 32383  0142BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 32384  0142C2  0EFC               	movlw	-4
 32385  0142C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 32386                           
 32387                           ;stkvar	_grs @ sp[(-13)+4]
 32388  0142CA  50E1               	movf	fsr1l,w,c
 32389  0142CC  0FF7               	addlw	-9
 32390  0142CE  6ED9               	movwf	fsr2l,c
 32391  0142D0  50E2               	movf	fsr1h,w,c
 32392  0142D2  6EDA               	movwf	fsr2h,c
 32393  0142D4  0EFF               	movlw	255
 32394  0142D6  22DA               	addwfc	fsr2h,f,c
 32395  0142D8  500B               	movf	(btemp+10)^0,w,c
 32396  0142DA  26DE               	addwf	postinc2,f,c
 32397  0142DC  500C               	movf	(btemp+11)^0,w,c
 32398  0142DE  22DE               	addwfc	postinc2,f,c
 32399  0142E0  0E00               	movlw	0
 32400  0142E2  22DE               	addwfc	postinc2,f,c
 32401  0142E4  22DE               	addwfc	postinc2,f,c
 32402                           
 32403                           ;stkvar	_grs @ sp[(-13)+4]
 32404  0142E6  50E1               	movf	fsr1l,w,c
 32405  0142E8  0FF7               	addlw	-9
 32406  0142EA  6ED9               	movwf	fsr2l,c
 32407  0142EC  50E2               	movf	fsr1h,w,c
 32408  0142EE  6EDA               	movwf	fsr2h,c
 32409  0142F0  0EFF               	movlw	255
 32410  0142F2  22DA               	addwfc	fsr2h,f,c
 32411  0142F4  0E08               	movlw	8
 32412  0142F6                     u7405:
 32413  0142F6  90D8               	bcf	status,0,c
 32414  0142F8  36DE               	rlcf	postinc2,f,c
 32415  0142FA  36DE               	rlcf	postinc2,f,c
 32416  0142FC  36DE               	rlcf	postinc2,f,c
 32417  0142FE  36DD               	rlcf	postdec2,f,c
 32418  014300  52DD               	movf	postdec2,f,c
 32419  014302  52DD               	movf	postdec2,f,c
 32420  014304  2EE8               	decfsz	wreg,f,c
 32421  014306  D7F7               	goto	u7405
 32422                           
 32423                           ;stkvar	_b @ sp[(-13)+-4]
 32424  014308  0EEF               	movlw	-17
 32425  01430A  006F FF8C  F00C    	movff	plusw1,btemp+11
 32426                           
 32427                           ;stkvar	_a @ sp[(-13)+-8]
 32428  014310  0EEB               	movlw	-21
 32429  014312  50E3               	movf	plusw1,w,c
 32430  014314  020C               	mulwf	(btemp+11)^0,c
 32431                           
 32432                           ;stkvar	_temp @ sp[(-13)+8]
 32433  014316  0EFB               	movlw	-5
 32434  014318  006F FFCF FFE3     	movff	prodl,plusw1
 32435  01431E  0EFC               	movlw	-4
 32436  014320  006F FFD3 FFE3     	movff	prodh,plusw1
 32437                           
 32438                           ;stkvar	_temp @ sp[(-13)+8]
 32439  014326  0EFB               	movlw	-5
 32440  014328  006F FF8C  F00B    	movff	plusw1,btemp+10
 32441  01432E  0EFC               	movlw	-4
 32442  014330  006F FF8C  F00C    	movff	plusw1,btemp+11
 32443                           
 32444                           ;stkvar	_grs @ sp[(-13)+4]
 32445  014336  50E1               	movf	fsr1l,w,c
 32446  014338  0FF7               	addlw	-9
 32447  01433A  6ED9               	movwf	fsr2l,c
 32448  01433C  50E2               	movf	fsr1h,w,c
 32449  01433E  6EDA               	movwf	fsr2h,c
 32450  014340  0EFF               	movlw	255
 32451  014342  22DA               	addwfc	fsr2h,f,c
 32452  014344  500B               	movf	(btemp+10)^0,w,c
 32453  014346  26DE               	addwf	postinc2,f,c
 32454  014348  500C               	movf	(btemp+11)^0,w,c
 32455  01434A  22DE               	addwfc	postinc2,f,c
 32456  01434C  0E00               	movlw	0
 32457  01434E  22DE               	addwfc	postinc2,f,c
 32458  014350  22DE               	addwfc	postinc2,f,c
 32459                           
 32460                           ;stkvar	_b @ sp[(-13)+-4]
 32461  014352  0EF0               	movlw	240
 32462  014354  24E1               	addwf	fsr1l,w,c
 32463  014356  6ED9               	movwf	fsr2l,c
 32464  014358  0EFF               	movlw	255
 32465  01435A  20E2               	addwfc	fsr1h,w,c
 32466  01435C  6EDA               	movwf	fsr2h,c
 32467  01435E  50DF               	movf	indf2,w,c
 32468  014360  6E0C               	movwf	(btemp+11)^0,c
 32469                           
 32470                           ;stkvar	_a @ sp[(-13)+-8]
 32471  014362  0EED               	movlw	237
 32472  014364  24E1               	addwf	fsr1l,w,c
 32473  014366  6ED9               	movwf	fsr2l,c
 32474  014368  0EFF               	movlw	255
 32475  01436A  20E2               	addwfc	fsr1h,w,c
 32476  01436C  6EDA               	movwf	fsr2h,c
 32477  01436E  50DF               	movf	indf2,w,c
 32478  014370  020C               	mulwf	(btemp+11)^0,c
 32479                           
 32480                           ;stkvar	_temp @ sp[(-13)+8]
 32481  014372  0EFB               	movlw	-5
 32482  014374  006F FFCF FFE3     	movff	prodl,plusw1
 32483  01437A  0EFC               	movlw	-4
 32484  01437C  006F FFD3 FFE3     	movff	prodh,plusw1
 32485                           
 32486                           ;stkvar	_temp @ sp[(-13)+8]
 32487  014382  0EFB               	movlw	-5
 32488  014384  006F FF8C  F00B    	movff	plusw1,btemp+10
 32489  01438A  0EFC               	movlw	-4
 32490  01438C  006F FF8C  F00C    	movff	plusw1,btemp+11
 32491                           
 32492                           ;stkvar	_prod @ sp[(-13)+0]
 32493  014392  50E1               	movf	fsr1l,w,c
 32494  014394  0FF3               	addlw	-13
 32495  014396  6ED9               	movwf	fsr2l,c
 32496  014398  50E2               	movf	fsr1h,w,c
 32497  01439A  6EDA               	movwf	fsr2h,c
 32498  01439C  0EFF               	movlw	255
 32499  01439E  22DA               	addwfc	fsr2h,f,c
 32500  0143A0  500B               	movf	(btemp+10)^0,w,c
 32501  0143A2  26DE               	addwf	postinc2,f,c
 32502  0143A4  500C               	movf	(btemp+11)^0,w,c
 32503  0143A6  22DE               	addwfc	postinc2,f,c
 32504  0143A8  0E00               	movlw	0
 32505  0143AA  22DE               	addwfc	postinc2,f,c
 32506  0143AC  22DE               	addwfc	postinc2,f,c
 32507                           
 32508                           ;stkvar	_b @ sp[(-13)+-4]
 32509  0143AE  0EF1               	movlw	241
 32510  0143B0  24E1               	addwf	fsr1l,w,c
 32511  0143B2  6ED9               	movwf	fsr2l,c
 32512  0143B4  0EFF               	movlw	255
 32513  0143B6  20E2               	addwfc	fsr1h,w,c
 32514  0143B8  6EDA               	movwf	fsr2h,c
 32515  0143BA  50DF               	movf	indf2,w,c
 32516  0143BC  6E0C               	movwf	(btemp+11)^0,c
 32517                           
 32518                           ;stkvar	_a @ sp[(-13)+-8]
 32519  0143BE  0EEC               	movlw	236
 32520  0143C0  24E1               	addwf	fsr1l,w,c
 32521  0143C2  6ED9               	movwf	fsr2l,c
 32522  0143C4  0EFF               	movlw	255
 32523  0143C6  20E2               	addwfc	fsr1h,w,c
 32524  0143C8  6EDA               	movwf	fsr2h,c
 32525  0143CA  50DF               	movf	indf2,w,c
 32526  0143CC  020C               	mulwf	(btemp+11)^0,c
 32527                           
 32528                           ;stkvar	_temp @ sp[(-13)+8]
 32529  0143CE  0EFB               	movlw	-5
 32530  0143D0  006F FFCF FFE3     	movff	prodl,plusw1
 32531  0143D6  0EFC               	movlw	-4
 32532  0143D8  006F FFD3 FFE3     	movff	prodh,plusw1
 32533                           
 32534                           ;stkvar	_temp @ sp[(-13)+8]
 32535  0143DE  0EFB               	movlw	-5
 32536  0143E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 32537  0143E6  0EFC               	movlw	-4
 32538  0143E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 32539                           
 32540                           ;stkvar	_prod @ sp[(-13)+0]
 32541  0143EE  50E1               	movf	fsr1l,w,c
 32542  0143F0  0FF3               	addlw	-13
 32543  0143F2  6ED9               	movwf	fsr2l,c
 32544  0143F4  50E2               	movf	fsr1h,w,c
 32545  0143F6  6EDA               	movwf	fsr2h,c
 32546  0143F8  0EFF               	movlw	255
 32547  0143FA  22DA               	addwfc	fsr2h,f,c
 32548  0143FC  500B               	movf	(btemp+10)^0,w,c
 32549  0143FE  26DE               	addwf	postinc2,f,c
 32550  014400  500C               	movf	(btemp+11)^0,w,c
 32551  014402  22DE               	addwfc	postinc2,f,c
 32552  014404  0E00               	movlw	0
 32553  014406  22DE               	addwfc	postinc2,f,c
 32554  014408  22DE               	addwfc	postinc2,f,c
 32555                           
 32556                           ;stkvar	_b @ sp[(-13)+-4]
 32557  01440A  0EF1               	movlw	241
 32558  01440C  24E1               	addwf	fsr1l,w,c
 32559  01440E  6ED9               	movwf	fsr2l,c
 32560  014410  0EFF               	movlw	255
 32561  014412  20E2               	addwfc	fsr1h,w,c
 32562  014414  6EDA               	movwf	fsr2h,c
 32563  014416  50DF               	movf	indf2,w,c
 32564  014418  6E0C               	movwf	(btemp+11)^0,c
 32565                           
 32566                           ;stkvar	_a @ sp[(-13)+-8]
 32567  01441A  0EED               	movlw	237
 32568  01441C  24E1               	addwf	fsr1l,w,c
 32569  01441E  6ED9               	movwf	fsr2l,c
 32570  014420  0EFF               	movlw	255
 32571  014422  20E2               	addwfc	fsr1h,w,c
 32572  014424  6EDA               	movwf	fsr2h,c
 32573  014426  50DF               	movf	indf2,w,c
 32574  014428  020C               	mulwf	(btemp+11)^0,c
 32575                           
 32576                           ;stkvar	_temp @ sp[(-13)+8]
 32577  01442A  0EFB               	movlw	-5
 32578  01442C  006F FFCF FFE3     	movff	prodl,plusw1
 32579  014432  0EFC               	movlw	-4
 32580  014434  006F FFD3 FFE3     	movff	prodh,plusw1
 32581                           
 32582                           ;stkvar	_temp @ sp[(-13)+8]
 32583  01443A  0EFB               	movlw	-5
 32584  01443C  006F FF8C  F00B    	movff	plusw1,btemp+10
 32585  014442  0EFC               	movlw	-4
 32586  014444  006F FF8C  F00C    	movff	plusw1,btemp+11
 32587  01444A  500B               	movf	(btemp+10)^0,w,c
 32588  01444C  6E05               	movwf	(btemp+4)^0,c
 32589  01444E  500C               	movf	(btemp+11)^0,w,c
 32590  014450  6E06               	movwf	(btemp+5)^0,c
 32591  014452  6A07               	clrf	(btemp+6)^0,c
 32592  014454  6A08               	clrf	(btemp+7)^0,c
 32593  014456  0060  F01C  F008   	movff	btemp+6,btemp+7
 32594  01445C  0060  F018  F007   	movff	btemp+5,btemp+6
 32595  014462  0060  F014  F006   	movff	btemp+4,btemp+5
 32596  014468  6A05               	clrf	(btemp+4)^0,c
 32597                           
 32598                           ;stkvar	_prod @ sp[(-13)+0]
 32599  01446A  50E1               	movf	fsr1l,w,c
 32600  01446C  0FF3               	addlw	-13
 32601  01446E  6ED9               	movwf	fsr2l,c
 32602  014470  50E2               	movf	fsr1h,w,c
 32603  014472  6EDA               	movwf	fsr2h,c
 32604  014474  0EFF               	movlw	255
 32605  014476  22DA               	addwfc	fsr2h,f,c
 32606  014478  5005               	movf	(btemp+4)^0,w,c
 32607  01447A  26DE               	addwf	postinc2,f,c
 32608  01447C  5006               	movf	(btemp+5)^0,w,c
 32609  01447E  22DE               	addwfc	postinc2,f,c
 32610  014480  5007               	movf	(btemp+6)^0,w,c
 32611  014482  22DE               	addwfc	postinc2,f,c
 32612  014484  5008               	movf	(btemp+7)^0,w,c
 32613  014486  22DE               	addwfc	postinc2,f,c
 32614                           
 32615                           ;stkvar	_prod @ sp[(-13)+0]
 32616  014488  50E1               	movf	fsr1l,w,c
 32617  01448A  0FF3               	addlw	-13
 32618  01448C  6ED9               	movwf	fsr2l,c
 32619  01448E  50E2               	movf	fsr1h,w,c
 32620  014490  6EDA               	movwf	fsr2h,c
 32621  014492  0EFF               	movlw	255
 32622  014494  22DA               	addwfc	fsr2h,f,c
 32623                           
 32624                           ;stkvar	_grs @ sp[(-13)+4]
 32625  014496  0EFA               	movlw	250
 32626  014498  24E1               	addwf	fsr1l,w,c
 32627  01449A  6EE9               	movwf	fsr0l,c
 32628  01449C  0EFF               	movlw	255
 32629  01449E  20E2               	addwfc	fsr1h,w,c
 32630  0144A0  6EEA               	movwf	fsr0h,c
 32631  0144A2  50EF               	movf	indf0,w,c
 32632  0144A4  26DE               	addwf	postinc2,f,c
 32633  0144A6  0E00               	movlw	0
 32634  0144A8  22DE               	addwfc	postinc2,f,c
 32635  0144AA  22DE               	addwfc	postinc2,f,c
 32636  0144AC  22DE               	addwfc	postinc2,f,c
 32637                           
 32638                           ;stkvar	_grs @ sp[(-13)+4]
 32639  0144AE  50E1               	movf	fsr1l,w,c
 32640  0144B0  0FF7               	addlw	-9
 32641  0144B2  6ED9               	movwf	fsr2l,c
 32642  0144B4  50E2               	movf	fsr1h,w,c
 32643  0144B6  6EDA               	movwf	fsr2h,c
 32644  0144B8  0EFF               	movlw	255
 32645  0144BA  22DA               	addwfc	fsr2h,f,c
 32646  0144BC  0E08               	movlw	8
 32647  0144BE                     u7415:
 32648  0144BE  90D8               	bcf	status,0,c
 32649  0144C0  36DE               	rlcf	postinc2,f,c
 32650  0144C2  36DE               	rlcf	postinc2,f,c
 32651  0144C4  36DE               	rlcf	postinc2,f,c
 32652  0144C6  36DD               	rlcf	postdec2,f,c
 32653  0144C8  52DD               	movf	postdec2,f,c
 32654  0144CA  52DD               	movf	postdec2,f,c
 32655  0144CC  2EE8               	decfsz	wreg,f,c
 32656  0144CE  D7F7               	goto	u7415
 32657  0144D0  0E82               	movlw	130
 32658  0144D2  6E0B               	movwf	(btemp+10)^0,c
 32659  0144D4  0EFF               	movlw	255
 32660  0144D6  6E0C               	movwf	(btemp+11)^0,c
 32661                           
 32662                           ;stkvar	_bexp @ sp[(-13)+10]
 32663  0144D8  0EFD               	movlw	-3
 32664  0144DA  50E3               	movf	plusw1,w,c
 32665  0144DC  6E09               	movwf	(btemp+8)^0,c
 32666  0144DE  6A0A               	clrf	(btemp+9)^0,c
 32667                           
 32668                           ;stkvar	_aexp @ sp[(-13)+11]
 32669  0144E0  0EFE               	movlw	-2
 32670  0144E2  50E3               	movf	plusw1,w,c
 32671  0144E4  2609               	addwf	(btemp+8)^0,f,c
 32672  0144E6  0E00               	movlw	0
 32673  0144E8  220A               	addwfc	(btemp+9)^0,f,c
 32674  0144EA  500B               	movf	(btemp+10)^0,w,c
 32675  0144EC  2609               	addwf	(btemp+8)^0,f,c
 32676  0144EE  500C               	movf	(btemp+11)^0,w,c
 32677  0144F0  220A               	addwfc	(btemp+9)^0,f,c
 32678                           
 32679                           ;stkvar	_temp @ sp[(-13)+8]
 32680  0144F2  0EFB               	movlw	-5
 32681  0144F4  0060  F027  FFE3   	movff	btemp+8,plusw1
 32682  0144FA  0EFC               	movlw	-4
 32683  0144FC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32684  014502  D021               	goto	l9216
 32685  014504                     l9206:
 32686                           
 32687                           ;stkvar	_prod @ sp[(-13)+0]
 32688  014504  90D8               	bcf	status,0,c
 32689  014506  0EF3               	movlw	-13
 32690  014508  36E3               	rlcf	plusw1,f,c
 32691  01450A  0EF4               	movlw	-12
 32692  01450C  36E3               	rlcf	plusw1,f,c
 32693  01450E  0EF5               	movlw	-11
 32694  014510  36E3               	rlcf	plusw1,f,c
 32695  014512  0EF6               	movlw	-10
 32696  014514  36E3               	rlcf	plusw1,f,c
 32697                           
 32698                           ;stkvar	_grs @ sp[(-13)+4]
 32699  014516  0EFA               	movlw	-6
 32700  014518  AEE3               	btfss	plusw1,7,c
 32701  01451A  D002               	goto	l9212
 32702                           
 32703                           ;stkvar	_prod @ sp[(-13)+0]
 32704  01451C  0EF3               	movlw	-13
 32705  01451E  80E3               	bsf	plusw1,0,c
 32706  014520                     l9212:
 32707                           
 32708                           ;stkvar	_grs @ sp[(-13)+4]
 32709  014520  90D8               	bcf	status,0,c
 32710  014522  0EF7               	movlw	-9
 32711  014524  36E3               	rlcf	plusw1,f,c
 32712  014526  0EF8               	movlw	-8
 32713  014528  36E3               	rlcf	plusw1,f,c
 32714  01452A  0EF9               	movlw	-7
 32715  01452C  36E3               	rlcf	plusw1,f,c
 32716  01452E  0EFA               	movlw	-6
 32717  014530  36E3               	rlcf	plusw1,f,c
 32718                           
 32719                           ;stkvar	_temp @ sp[(-13)+8]
 32720  014532  50E1               	movf	fsr1l,w,c
 32721  014534  0FFB               	addlw	-5
 32722  014536  6ED9               	movwf	fsr2l,c
 32723  014538  50E2               	movf	fsr1h,w,c
 32724  01453A  6EDA               	movwf	fsr2h,c
 32725  01453C  0EFF               	movlw	255
 32726  01453E  22DA               	addwfc	fsr2h,f,c
 32727  014540  06DE               	decf	postinc2,f,c
 32728  014542  0E00               	movlw	0
 32729  014544  5ADD               	subwfb	postdec2,f,c
 32730  014546                     l9216:
 32731                           
 32732                           ;stkvar	_prod @ sp[(-13)+0]
 32733  014546  0EF5               	movlw	-11
 32734  014548  AEE3               	btfss	plusw1,7,c
 32735  01454A  D7DC               	goto	l9206
 32736                           
 32737                           ;stkvar	_aexp @ sp[(-13)+11]
 32738  01454C  0EFE               	movlw	-2
 32739  01454E  6AE3               	clrf	plusw1,c
 32740                           
 32741                           ;stkvar	_grs @ sp[(-13)+4]
 32742  014550  0EFA               	movlw	-6
 32743  014552  AEE3               	btfss	plusw1,7,c
 32744  014554  D020               	goto	l9230
 32745                           
 32746                           ;stkvar	_grs @ sp[(-13)+4]
 32747  014556  50E1               	movf	fsr1l,w,c
 32748  014558  0FF7               	addlw	-9
 32749  01455A  6ED9               	movwf	fsr2l,c
 32750  01455C  50E2               	movf	fsr1h,w,c
 32751  01455E  6EDA               	movwf	fsr2h,c
 32752  014560  0EFF               	movlw	255
 32753  014562  22DA               	addwfc	fsr2h,f,c
 32754  014564  0EFF               	movlw	255
 32755  014566  14DE               	andwf	postinc2,w,c
 32756  014568  6E09               	movwf	(btemp+8)^0,c
 32757  01456A  0EFF               	movlw	255
 32758  01456C  14DE               	andwf	postinc2,w,c
 32759  01456E  6E0A               	movwf	(btemp+9)^0,c
 32760  014570  0EFF               	movlw	255
 32761  014572  14DE               	andwf	postinc2,w,c
 32762  014574  6E0B               	movwf	(btemp+10)^0,c
 32763  014576  0E7F               	movlw	127
 32764  014578  14DE               	andwf	postinc2,w,c
 32765  01457A  6E0C               	movwf	(btemp+11)^0,c
 32766  01457C  5009               	movf	(btemp+8)^0,w,c
 32767  01457E  100A               	iorwf	(btemp+9)^0,w,c
 32768  014580  100B               	iorwf	(btemp+10)^0,w,c
 32769  014582  100C               	iorwf	(btemp+11)^0,w,c
 32770  014584  B4D8               	btfsc	status,2,c
 32771  014586  D004               	goto	l9226
 32772  014588                     u7450:
 32773                           
 32774                           ;stkvar	_aexp @ sp[(-13)+11]
 32775  014588  0EFE               	movlw	-2
 32776  01458A  6AE3               	clrf	plusw1,c
 32777  01458C  2AE3               	incf	plusw1,f,c
 32778  01458E  D003               	goto	l9230
 32779  014590                     l9226:
 32780                           
 32781                           ;stkvar	_prod @ sp[(-13)+0]
 32782  014590  0EF3               	movlw	-13
 32783  014592  B0E3               	btfsc	plusw1,0,c
 32784  014594  D7F9               	goto	u7450
 32785  014596                     l9230:
 32786                           
 32787                           ;stkvar	_aexp @ sp[(-13)+11]
 32788  014596  0EFE               	movlw	-2
 32789  014598  50E3               	movf	plusw1,w,c
 32790  01459A  B4D8               	btfsc	status,2,c
 32791  01459C  D036               	goto	l9240
 32792                           
 32793                           ;stkvar	_prod @ sp[(-13)+0]
 32794  01459E  50E1               	movf	fsr1l,w,c
 32795  0145A0  0FF3               	addlw	-13
 32796  0145A2  6ED9               	movwf	fsr2l,c
 32797  0145A4  50E2               	movf	fsr1h,w,c
 32798  0145A6  6EDA               	movwf	fsr2h,c
 32799  0145A8  0EFF               	movlw	255
 32800  0145AA  22DA               	addwfc	fsr2h,f,c
 32801  0145AC  2ADE               	incf	postinc2,f,c
 32802  0145AE  0E00               	movlw	0
 32803  0145B0  22DE               	addwfc	postinc2,f,c
 32804  0145B2  22DE               	addwfc	postinc2,f,c
 32805  0145B4  22DE               	addwfc	postinc2,f,c
 32806                           
 32807                           ;stkvar	_prod @ sp[(-13)+0]
 32808  0145B6  0EF6               	movlw	-10
 32809  0145B8  A0E3               	btfss	plusw1,0,c
 32810  0145BA  D027               	goto	l9240
 32811  0145BC  0E01               	movlw	1
 32812  0145BE  6E0C               	movwf	(btemp+11)^0,c
 32813                           
 32814                           ;stkvar	_prod @ sp[(-13)+0]
 32815  0145C0  50E1               	movf	fsr1l,w,c
 32816  0145C2  0FF3               	addlw	-13
 32817  0145C4  6ED9               	movwf	fsr2l,c
 32818  0145C6  50E2               	movf	fsr1h,w,c
 32819  0145C8  6EDA               	movwf	fsr2h,c
 32820  0145CA  0EFF               	movlw	255
 32821  0145CC  22DA               	addwfc	fsr2h,f,c
 32822  0145CE  280C               	incf	(btemp+11)^0,w,c
 32823  0145D0  52DE               	movf	postinc2,f,c
 32824  0145D2  D008               	goto	u7490
 32825  0145D4                     u7495:
 32826  0145D4  52DE               	movf	postinc2,f,c
 32827  0145D6  90D8               	bcf	status,0,c
 32828  0145D8  BEDC               	btfsc	preinc2,7,c
 32829  0145DA  80D8               	bsf	status,0,c
 32830  0145DC  32DD               	rrcf	postdec2,f,c
 32831  0145DE  32DD               	rrcf	postdec2,f,c
 32832  0145E0  32DD               	rrcf	postdec2,f,c
 32833  0145E2  32DE               	rrcf	postinc2,f,c
 32834  0145E4                     u7490:
 32835  0145E4  2EE8               	decfsz	wreg,f,c
 32836  0145E6  D7F6               	goto	u7495
 32837                           
 32838                           ;stkvar	_temp @ sp[(-13)+8]
 32839  0145E8  0EFB               	movlw	-5
 32840  0145EA  50E3               	movf	plusw1,w,c
 32841  0145EC  0F01               	addlw	1
 32842  0145EE  6E01               	movwf	btemp^0,c
 32843  0145F0  0EFB               	movlw	-5
 32844  0145F2  0060  F007  FFE3   	movff	btemp,plusw1
 32845  0145F8  6A01               	clrf	btemp^0,c
 32846  0145FA  0EFC               	movlw	-4
 32847  0145FC  50E3               	movf	plusw1,w,c
 32848  0145FE  2001               	addwfc	btemp^0,w,c
 32849  014600  6E01               	movwf	btemp^0,c
 32850  014602  0EFC               	movlw	-4
 32851  014604  0060  F007  FFE3   	movff	btemp,plusw1
 32852  01460A                     l9240:
 32853                           
 32854                           ;stkvar	_temp @ sp[(-13)+8]
 32855  01460A  0EFC               	movlw	-4
 32856  01460C  BEE3               	btfsc	plusw1,7,c
 32857  01460E  D020               	goto	l9244
 32858  014610  0EFC               	movlw	-4
 32859  014612  50E3               	movf	plusw1,w,c
 32860  014614  E104               	bnz	u7500
 32861  014616  0EFB               	movlw	-5
 32862  014618  28E3               	incf	plusw1,w,c
 32863  01461A  A0D8               	btfss	status,0,c
 32864  01461C  D019               	goto	l9244
 32865  01461E                     u7500:
 32866  01461E  0E00               	movlw	0
 32867  014620  6E09               	movwf	(btemp+8)^0,c
 32868  014622  0E00               	movlw	0
 32869  014624  6E0A               	movwf	(btemp+9)^0,c
 32870  014626  0E80               	movlw	128
 32871  014628  6E0B               	movwf	(btemp+10)^0,c
 32872  01462A  0E7F               	movlw	127
 32873  01462C  6E0C               	movwf	(btemp+11)^0,c
 32874                           
 32875                           ;stkvar	_prod @ sp[(-13)+0]
 32876  01462E  0EF3               	movlw	-13
 32877  014630  0060  F027  FFE3   	movff	btemp+8,plusw1
 32878  014636  0EF4               	movlw	-12
 32879  014638  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32880  01463E  0EF5               	movlw	-11
 32881  014640  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32882  014646  0EF6               	movlw	-10
 32883  014648  0060  F033  FFE3   	movff	btemp+11,plusw1
 32884  01464E  D044               	goto	l9260
 32885  014650                     l9244:
 32886                           
 32887                           ;stkvar	_temp @ sp[(-13)+8]
 32888  014650  0EFC               	movlw	-4
 32889  014652  BEE3               	btfsc	plusw1,7,c
 32890  014654  D007               	goto	u7510
 32891  014656  0EFC               	movlw	-4
 32892  014658  50E3               	movf	plusw1,w,c
 32893  01465A  E10F               	bnz	l9250
 32894  01465C  0EFB               	movlw	-5
 32895  01465E  04E3               	decf	plusw1,w,c
 32896  014660  B0D8               	btfsc	status,0,c
 32897  014662  D00B               	goto	l9250
 32898  014664                     u7510:
 32899                           
 32900                           ;stkvar	_prod @ sp[(-13)+0]
 32901  014664  0EF3               	movlw	-13
 32902  014666  6AE3               	clrf	plusw1,c
 32903  014668  0EF4               	movlw	-12
 32904  01466A  6AE3               	clrf	plusw1,c
 32905  01466C  0EF5               	movlw	-11
 32906  01466E  6AE3               	clrf	plusw1,c
 32907  014670  0EF6               	movlw	-10
 32908  014672  6AE3               	clrf	plusw1,c
 32909                           
 32910                           ;stkvar	_sign @ sp[(-13)+12]
 32911  014674  0EFF               	movlw	-1
 32912  014676  6AE3               	clrf	plusw1,c
 32913  014678  D02F               	goto	l9260
 32914  01467A                     l9250:
 32915                           
 32916                           ;stkvar	_temp @ sp[(-13)+8]
 32917                           ;stkvar	_bexp @ sp[(-13)+10]
 32918  01467A  0EFB               	movlw	-5
 32919  01467C  006F FF8C  F001    	movff	plusw1,btemp
 32920  014682  0EFD               	movlw	-3
 32921  014684  0060  F007  FFE3   	movff	btemp,plusw1
 32922                           
 32923                           ;stkvar	_prod @ sp[(-13)+0]
 32924  01468A  50E1               	movf	fsr1l,w,c
 32925  01468C  0FF3               	addlw	-13
 32926  01468E  6ED9               	movwf	fsr2l,c
 32927  014690  50E2               	movf	fsr1h,w,c
 32928  014692  6EDA               	movwf	fsr2h,c
 32929  014694  0EFF               	movlw	255
 32930  014696  22DA               	addwfc	fsr2h,f,c
 32931  014698  0EFF               	movlw	255
 32932  01469A  16DE               	andwf	postinc2,f,c
 32933  01469C  0EFF               	movlw	255
 32934  01469E  16DE               	andwf	postinc2,f,c
 32935  0146A0  0E7F               	movlw	127
 32936  0146A2  16DE               	andwf	postinc2,f,c
 32937  0146A4  0E00               	movlw	0
 32938  0146A6  16DE               	andwf	postinc2,f,c
 32939                           
 32940                           ;stkvar	_bexp @ sp[(-13)+10]
 32941  0146A8  0EFD               	movlw	-3
 32942  0146AA  A0E3               	btfss	plusw1,0,c
 32943  0146AC  D008               	goto	l9258
 32944                           
 32945                           ;stkvar	_prod @ sp[(-13)+0]
 32946  0146AE  0EF5               	movlw	245
 32947  0146B0  24E1               	addwf	fsr1l,w,c
 32948  0146B2  6ED9               	movwf	fsr2l,c
 32949  0146B4  0EFF               	movlw	255
 32950  0146B6  20E2               	addwfc	fsr1h,w,c
 32951  0146B8  6EDA               	movwf	fsr2h,c
 32952  0146BA  0E00               	movlw	0
 32953  0146BC  8EDB               	bsf	plusw2,7,c
 32954  0146BE                     l9258:
 32955                           
 32956                           ;stkvar	_prod @ sp[(-13)+0]
 32957  0146BE  0EF6               	movlw	246
 32958  0146C0  24E1               	addwf	fsr1l,w,c
 32959  0146C2  6ED9               	movwf	fsr2l,c
 32960  0146C4  0EFF               	movlw	255
 32961  0146C6  20E2               	addwfc	fsr1h,w,c
 32962  0146C8  6EDA               	movwf	fsr2h,c
 32963                           
 32964                           ;stkvar	_bexp @ sp[(-13)+10]
 32965  0146CA  0EFD               	movlw	-3
 32966  0146CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 32967  0146D2  90D8               	bcf	status,0,c
 32968  0146D4  300C               	rrcf	(btemp+11)^0,w,c
 32969  0146D6  6EDF               	movwf	indf2,c
 32970  0146D8                     l9260:
 32971                           
 32972                           ;stkvar	_sign @ sp[(-13)+12]
 32973  0146D8  0EFF               	movlw	-1
 32974  0146DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 32975                           
 32976                           ;stkvar	_prod @ sp[(-13)+0]
 32977  0146E0  0EF6               	movlw	246
 32978  0146E2  24E1               	addwf	fsr1l,w,c
 32979  0146E4  6ED9               	movwf	fsr2l,c
 32980  0146E6  0EFF               	movlw	255
 32981  0146E8  20E2               	addwfc	fsr1h,w,c
 32982  0146EA  6EDA               	movwf	fsr2h,c
 32983  0146EC  500C               	movf	(btemp+11)^0,w,c
 32984  0146EE  12DF               	iorwf	indf2,f,c
 32985                           
 32986                           ;stkvar	_prod @ sp[(-13)+0]
 32987  0146F0  0EF3               	movlw	-13
 32988  0146F2  006F FF8C  F001    	movff	plusw1,btemp
 32989  0146F8  0EF4               	movlw	-12
 32990  0146FA  006F FF8C  F002    	movff	plusw1,btemp+1
 32991  014700  0EF5               	movlw	-11
 32992  014702  006F FF8C  F003    	movff	plusw1,btemp+2
 32993  014708  0EF6               	movlw	-10
 32994  01470A  006F FF8C  F004    	movff	plusw1,btemp+3
 32995  014710                     l3289:
 32996                           
 32997                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 32998  014710  0EEB               	movlw	235
 32999  014712  26E1               	addwf	fsr1l,f,c
 33000  014714  0EFF               	movlw	255
 33001  014716  22E2               	addwfc	fsr1h,f,c
 33002  014718  0012               	return		;funcret
 33003  01471A                     __end_of___flmul:
 33004                           	opt callstack 0
 33005                           
 33006 ;; *************** function _SYSTEM_Initialize *****************
 33007 ;; Defined at:
 33008 ;;		line 50 in file "mcc_generated_files/mcc.c"
 33009 ;; Parameters:    Size  Location     Type
 33010 ;;		None
 33011 ;; Auto vars:     Size  Location     Type
 33012 ;;		None
 33013 ;; Return value:  Size  Location     Type
 33014 ;;                  1  [STACK] void 
 33015 ;; Registers used:
 33016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 33017 ;; Tracked objects:
 33018 ;;		On entry : 0/0
 33019 ;;		On exit  : 3F/3C
 33020 ;;		Unchanged: 0/0
 33021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33026 ;;Total ram usage:        0 bytes
 33027 ;; Hardware stack levels used:    1
 33028 ;; Hardware stack levels required when called:   17
 33029 ;; This function calls:
 33030 ;;		_ADCC_Initialize
 33031 ;;		_CLKREF_Initialize
 33032 ;;		_CRC_Initialize
 33033 ;;		_DMA1_Initialize
 33034 ;;		_DMA2_Initialize
 33035 ;;		_EXT_INT_Initialize
 33036 ;;		_FVR_Initialize
 33037 ;;		_INTERRUPT_Initialize
 33038 ;;		_OSCILLATOR_Initialize
 33039 ;;		_PIN_MANAGER_Initialize
 33040 ;;		_PMD_Initialize
 33041 ;;		_PWM8_Initialize
 33042 ;;		_SPI1_Initialize
 33043 ;;		_TMR2_Initialize
 33044 ;;		_TMR3_Initialize
 33045 ;;		_TMR5_Initialize
 33046 ;;		_TMR6_Initialize
 33047 ;;		_UART1_Initialize
 33048 ;;		_UART2_Initialize
 33049 ;; This function is called by:
 33050 ;;		_main
 33051 ;; This function uses a reentrant model
 33052 ;;
 33053                           
 33054                           	psect	text128
 33055  01C490                     __ptext128:
 33056                           	opt callstack 0
 33057  01C490                     _SYSTEM_Initialize:
 33058                           	opt callstack 13
 33059                           
 33060                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 33061                           
 33062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33063                           ;incstack = 0
 33064  01C490  EC4D  F0E0         	call	_INTERRUPT_Initialize	;wreg free
 33065                           
 33066                           ; BSR set to: 57
 33067                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 33068  01C494  EC18  F0E9         	call	_PMD_Initialize	;wreg free
 33069                           
 33070                           ; BSR set to: 57
 33071                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 33072  01C498  ECEF  F0DC         	call	_PIN_MANAGER_Initialize	;wreg free
 33073                           
 33074                           ; BSR set to: 58
 33075                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 33076  01C49C  EC0D  F0E9         	call	_OSCILLATOR_Initialize	;wreg free
 33077                           
 33078                           ; BSR set to: 57
 33079                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 33080  01C4A0  ECB2  F0E9         	call	_FVR_Initialize	;wreg free
 33081                           
 33082                           ; BSR set to: 62
 33083                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 33084  01C4A4  EC38  F0DD         	call	_CRC_Initialize	;wreg free
 33085                           
 33086                           ; BSR set to: 0
 33087                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 33088  01C4A8  ECAF  F0DF         	call	_ADCC_Initialize	;wreg free
 33089                           
 33090                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 33091  01C4AC  EC02  F0E9         	call	_PWM8_Initialize	;wreg free
 33092                           
 33093                           ; BSR set to: 63
 33094                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 33095  01C4B0  ECEB  F0E8         	call	_TMR2_Initialize	;wreg free
 33096                           
 33097                           ; BSR set to: 57
 33098                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 33099  01C4B4  EC8B  F0E5         	call	_EXT_INT_Initialize	;wreg free
 33100                           
 33101                           ; BSR set to: 57
 33102                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 33103  01C4B8  EC78  F0E6         	call	_TMR6_Initialize	;wreg free
 33104                           
 33105                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 33106  01C4BC  EC27  F0E3         	call	_TMR3_Initialize	;wreg free
 33107                           
 33108                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 33109  01C4C0  EC03  F0E3         	call	_TMR5_Initialize	;wreg free
 33110                           
 33111                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 33112  01C4C4  ECDF  F0E2         	call	_UART1_Initialize	;wreg free
 33113                           
 33114                           ; BSR set to: 57
 33115                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 33116  01C4C8  EC14  F0E1         	call	_UART2_Initialize	;wreg free
 33117                           
 33118                           ; BSR set to: 57
 33119                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 33120  01C4CC  ECF7  F0E8         	call	_SPI1_Initialize	;wreg free
 33121                           
 33122                           ; BSR set to: 61
 33123                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 33124  01C4D0  EC9E  F0E1         	call	_DMA2_Initialize	;wreg free
 33125                           
 33126                           ; BSR set to: 59
 33127                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 33128  01C4D4  EC7A  F0DF         	call	_DMA1_Initialize	;wreg free
 33129                           
 33130                           ; BSR set to: 59
 33131                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 33132  01C4D8  EC81  F0E9         	call	_CLKREF_Initialize	;wreg free
 33133                           
 33134                           ; BSR set to: 60
 33135                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33136  01C4DC  0012               	return		;funcret
 33137  01C4DE                     __end_of_SYSTEM_Initialize:
 33138                           	opt callstack 0
 33139                           
 33140 ;; *************** function _UART2_Initialize *****************
 33141 ;; Defined at:
 33142 ;;		line 78 in file "mcc_generated_files/uart2.c"
 33143 ;; Parameters:    Size  Location     Type
 33144 ;;		None
 33145 ;; Auto vars:     Size  Location     Type
 33146 ;;		None
 33147 ;; Return value:  Size  Location     Type
 33148 ;;                  1  [STACK] void 
 33149 ;; Registers used:
 33150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33151 ;; Tracked objects:
 33152 ;;		On entry : 3F/39
 33153 ;;		On exit  : 3F/39
 33154 ;;		Unchanged: 0/0
 33155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33160 ;;Total ram usage:        0 bytes
 33161 ;; Hardware stack levels used:    1
 33162 ;; Hardware stack levels required when called:   16
 33163 ;; This function calls:
 33164 ;;		_UART2_SetRxInterruptHandler
 33165 ;;		_UART2_SetTxInterruptHandler
 33166 ;; This function is called by:
 33167 ;;		_SYSTEM_Initialize
 33168 ;; This function uses a reentrant model
 33169 ;;
 33170                           
 33171                           	psect	text129
 33172  01C228                     __ptext129:
 33173                           	opt callstack 0
 33174  01C228                     _UART2_Initialize:
 33175                           	opt callstack 13
 33176                           
 33177                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 33178                           
 33179                           ; BSR set to: 60
 33180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33181                           ;incstack = 0
 33182  01C228  0139               	movlb	57	; () banked
 33183  01C22A  9596               	bcf	150,2,b	;volatile
 33184                           
 33185                           ; BSR set to: 57
 33186                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 33187  01C22C  0ED2               	movlw	low _UART2_Receive_ISR
 33188  01C22E  6EE6               	movwf	postinc1,c
 33189  01C230  0ED0               	movlw	high _UART2_Receive_ISR
 33190  01C232  6EE6               	movwf	postinc1,c
 33191  01C234  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 33192  01C236  6EE6               	movwf	postinc1,c
 33193  01C238  ECC9  F0E6         	call	_UART2_SetRxInterruptHandler	;wreg free
 33194                           
 33195                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 33196  01C23C  0139               	movlb	57	; () banked
 33197  01C23E  9796               	bcf	150,3,b	;volatile
 33198                           
 33199                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 33200  01C240  0EC4               	movlw	low _UART2_Transmit_ISR
 33201  01C242  6EE6               	movwf	postinc1,c
 33202  01C244  0ECC               	movlw	high _UART2_Transmit_ISR
 33203  01C246  6EE6               	movwf	postinc1,c
 33204  01C248  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 33205  01C24A  6EE6               	movwf	postinc1,c
 33206  01C24C  ECB5  F0E6         	call	_UART2_SetTxInterruptHandler	;wreg free
 33207                           
 33208                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 33209  01C250  013D               	movlb	61	; () banked
 33210  01C252  6BD4               	clrf	212,b	;volatile
 33211                           
 33212                           ; BSR set to: 61
 33213                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 33214  01C254  6BD6               	clrf	214,b	;volatile
 33215                           
 33216                           ; BSR set to: 61
 33217                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 33218  01C256  6BD8               	clrf	216,b	;volatile
 33219                           
 33220                           ; BSR set to: 61
 33221                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 33222  01C258  0EB0               	movlw	176
 33223  01C25A  6FDA               	movwf	218,b	;volatile
 33224                           
 33225                           ; BSR set to: 61
 33226                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 33227  01C25C  0E80               	movlw	128
 33228  01C25E  6FDB               	movwf	219,b	;volatile
 33229                           
 33230                           ; BSR set to: 61
 33231                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 33232  01C260  6BDC               	clrf	220,b	;volatile
 33233                           
 33234                           ; BSR set to: 61
 33235                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 33236  01C262  0E82               	movlw	130
 33237  01C264  6FDD               	movwf	221,b	;volatile
 33238                           
 33239                           ; BSR set to: 61
 33240                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 33241  01C266  0E06               	movlw	6
 33242  01C268  6FDE               	movwf	222,b	;volatile
 33243                           
 33244                           ; BSR set to: 61
 33245                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 33246  01C26A  6BDF               	clrf	223,b	;volatile
 33247                           
 33248                           ; BSR set to: 61
 33249                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 33250  01C26C  6BE0               	clrf	224,b	;volatile
 33251                           
 33252                           ; BSR set to: 61
 33253                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 33254  01C26E  6BE1               	clrf	225,b	;volatile
 33255                           
 33256                           ; BSR set to: 61
 33257                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 33258  01C270  6BE2               	clrf	226,b	;volatile
 33259                           
 33260                           ; BSR set to: 61
 33261                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 33262  01C272  0100               	movlb	0	; () banked
 33263  01C274  6BD2               	clrf	_uart2TxHead& (0+255),b	;volatile
 33264                           
 33265                           ; BSR set to: 0
 33266                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 33267  01C276  6A46               	clrf	_uart2TxTail^0,c	;volatile
 33268                           
 33269                           ; BSR set to: 0
 33270                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 33271  01C278  0E40               	movlw	64
 33272  01C27A  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 33273                           
 33274                           ; BSR set to: 0
 33275                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 33276  01C27C  6A44               	clrf	_uart2RxHead^0,c	;volatile
 33277                           
 33278                           ; BSR set to: 0
 33279                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 33280  01C27E  6BD1               	clrf	_uart2RxTail& (0+255),b	;volatile
 33281                           
 33282                           ; BSR set to: 0
 33283                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 33284  01C280  6BD0               	clrf	_uart2RxCount& (0+255),b	;volatile
 33285                           
 33286                           ; BSR set to: 0
 33287                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 33288  01C282  0139               	movlb	57	; () banked
 33289  01C284  8596               	bsf	150,2,b	;volatile
 33290                           
 33291                           ; BSR set to: 57
 33292                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 33293  01C286  0012               	return		;funcret
 33294  01C288                     __end_of_UART2_Initialize:
 33295                           	opt callstack 0
 33296                           
 33297 ;; *************** function _UART2_SetTxInterruptHandler *****************
 33298 ;; Defined at:
 33299 ;;		line 252 in file "mcc_generated_files/uart2.c"
 33300 ;; Parameters:    Size  Location     Type
 33301 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33302 ;;		 -> UART2_Transmit_ISR(1), 
 33303 ;; Auto vars:     Size  Location     Type
 33304 ;;		None
 33305 ;; Return value:  Size  Location     Type
 33306 ;;                  1  [STACK] void 
 33307 ;; Registers used:
 33308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33309 ;; Tracked objects:
 33310 ;;		On entry : 3F/39
 33311 ;;		On exit  : 0/0
 33312 ;;		Unchanged: 0/0
 33313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33318 ;;Total ram usage:        0 bytes
 33319 ;; Hardware stack levels used:    1
 33320 ;; Hardware stack levels required when called:   15
 33321 ;; This function calls:
 33322 ;;		Nothing
 33323 ;; This function is called by:
 33324 ;;		_UART2_Initialize
 33325 ;; This function uses a reentrant model
 33326 ;;
 33327                           
 33328                           	psect	text130
 33329  01CD6A                     __ptext130:
 33330                           	opt callstack 0
 33331  01CD6A                     _UART2_SetTxInterruptHandler:
 33332                           	opt callstack 13
 33333                           
 33334                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 33335                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33336                           
 33337                           ; BSR set to: 57
 33338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33339                           ;incstack = 0
 33340  01CD6A  50E1               	movf	fsr1l,w,c
 33341  01CD6C  0FFD               	addlw	-3
 33342  01CD6E  6ED9               	movwf	fsr2l,c
 33343  01CD70  50E2               	movf	fsr1h,w,c
 33344  01CD72  6EDA               	movwf	fsr2h,c
 33345  01CD74  0EFF               	movlw	255
 33346  01CD76  22DA               	addwfc	fsr2h,f,c
 33347  01CD78  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 33348  01CD7E  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 33349  01CD84  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 33350                           
 33351                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33352  01CD8A  52E5               	movf	postdec1,f,c
 33353  01CD8C  52E5               	movf	postdec1,f,c
 33354  01CD8E  52E5               	movf	postdec1,f,c
 33355  01CD90  0012               	return		;funcret
 33356  01CD92                     __end_of_UART2_SetTxInterruptHandler:
 33357                           	opt callstack 0
 33358                           
 33359 ;; *************** function _UART2_SetRxInterruptHandler *****************
 33360 ;; Defined at:
 33361 ;;		line 248 in file "mcc_generated_files/uart2.c"
 33362 ;; Parameters:    Size  Location     Type
 33363 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33364 ;;		 -> UART2_Receive_ISR(1), 
 33365 ;; Auto vars:     Size  Location     Type
 33366 ;;		None
 33367 ;; Return value:  Size  Location     Type
 33368 ;;                  1  [STACK] void 
 33369 ;; Registers used:
 33370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33371 ;; Tracked objects:
 33372 ;;		On entry : 3F/39
 33373 ;;		On exit  : 0/0
 33374 ;;		Unchanged: 0/0
 33375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33380 ;;Total ram usage:        0 bytes
 33381 ;; Hardware stack levels used:    1
 33382 ;; Hardware stack levels required when called:   15
 33383 ;; This function calls:
 33384 ;;		Nothing
 33385 ;; This function is called by:
 33386 ;;		_UART2_Initialize
 33387 ;; This function uses a reentrant model
 33388 ;;
 33389                           
 33390                           	psect	text131
 33391  01CD92                     __ptext131:
 33392                           	opt callstack 0
 33393  01CD92                     _UART2_SetRxInterruptHandler:
 33394                           	opt callstack 13
 33395                           
 33396                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 33397                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33398                           
 33399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33400                           ;incstack = 0
 33401  01CD92  50E1               	movf	fsr1l,w,c
 33402  01CD94  0FFD               	addlw	-3
 33403  01CD96  6ED9               	movwf	fsr2l,c
 33404  01CD98  50E2               	movf	fsr1h,w,c
 33405  01CD9A  6EDA               	movwf	fsr2h,c
 33406  01CD9C  0EFF               	movlw	255
 33407  01CD9E  22DA               	addwfc	fsr2h,f,c
 33408  01CDA0  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 33409  01CDA6  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 33410  01CDAC  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 33411                           
 33412                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33413  01CDB2  52E5               	movf	postdec1,f,c
 33414  01CDB4  52E5               	movf	postdec1,f,c
 33415  01CDB6  52E5               	movf	postdec1,f,c
 33416  01CDB8  0012               	return		;funcret
 33417  01CDBA                     __end_of_UART2_SetRxInterruptHandler:
 33418                           	opt callstack 0
 33419                           
 33420 ;; *************** function _UART1_Initialize *****************
 33421 ;; Defined at:
 33422 ;;		line 75 in file "mcc_generated_files/uart1.c"
 33423 ;; Parameters:    Size  Location     Type
 33424 ;;		None
 33425 ;; Auto vars:     Size  Location     Type
 33426 ;;		None
 33427 ;; Return value:  Size  Location     Type
 33428 ;;                  1  [STACK] void 
 33429 ;; Registers used:
 33430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33431 ;; Tracked objects:
 33432 ;;		On entry : 0/39
 33433 ;;		On exit  : 3F/39
 33434 ;;		Unchanged: 0/0
 33435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33440 ;;Total ram usage:        0 bytes
 33441 ;; Hardware stack levels used:    1
 33442 ;; Hardware stack levels required when called:   16
 33443 ;; This function calls:
 33444 ;;		_UART1_SetRxInterruptHandler
 33445 ;; This function is called by:
 33446 ;;		_SYSTEM_Initialize
 33447 ;; This function uses a reentrant model
 33448 ;;
 33449                           
 33450                           	psect	text132
 33451  01C5BE                     __ptext132:
 33452                           	opt callstack 0
 33453  01C5BE                     _UART1_Initialize:
 33454                           	opt callstack 13
 33455                           
 33456                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 33457                           
 33458                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33459                           ;incstack = 0
 33460  01C5BE  0139               	movlb	57	; () banked
 33461  01C5C0  9793               	bcf	147,3,b	;volatile
 33462                           
 33463                           ; BSR set to: 57
 33464                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 33465  01C5C2  0E6A               	movlw	low _UART1_Receive_ISR
 33466  01C5C4  6EE6               	movwf	postinc1,c
 33467  01C5C6  0ED1               	movlw	high _UART1_Receive_ISR
 33468  01C5C8  6EE6               	movwf	postinc1,c
 33469  01C5CA  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 33470  01C5CC  6EE6               	movwf	postinc1,c
 33471  01C5CE  ECDD  F0E6         	call	_UART1_SetRxInterruptHandler	;wreg free
 33472                           
 33473                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 33474  01C5D2  013D               	movlb	61	; () banked
 33475  01C5D4  6BEC               	clrf	236,b	;volatile
 33476                           
 33477                           ; BSR set to: 61
 33478                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 33479  01C5D6  6BED               	clrf	237,b	;volatile
 33480                           
 33481                           ; BSR set to: 61
 33482                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 33483  01C5D8  6BEE               	clrf	238,b	;volatile
 33484                           
 33485                           ; BSR set to: 61
 33486                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 33487  01C5DA  6BEF               	clrf	239,b	;volatile
 33488                           
 33489                           ; BSR set to: 61
 33490                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 33491  01C5DC  6BF0               	clrf	240,b	;volatile
 33492                           
 33493                           ; BSR set to: 61
 33494                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 33495  01C5DE  6BF1               	clrf	241,b	;volatile
 33496                           
 33497                           ; BSR set to: 61
 33498                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 33499  01C5E0  0EB0               	movlw	176
 33500  01C5E2  6FF2               	movwf	242,b	;volatile
 33501                           
 33502                           ; BSR set to: 61
 33503                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 33504  01C5E4  0E80               	movlw	128
 33505  01C5E6  6FF3               	movwf	243,b	;volatile
 33506                           
 33507                           ; BSR set to: 61
 33508                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 33509  01C5E8  6BF4               	clrf	244,b	;volatile
 33510                           
 33511                           ; BSR set to: 61
 33512                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 33513  01C5EA  0E8A               	movlw	138
 33514  01C5EC  6FF5               	movwf	245,b	;volatile
 33515                           
 33516                           ; BSR set to: 61
 33517                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 33518  01C5EE  6BF6               	clrf	246,b	;volatile
 33519                           
 33520                           ; BSR set to: 61
 33521                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 33522  01C5F0  6BF7               	clrf	247,b	;volatile
 33523                           
 33524                           ; BSR set to: 61
 33525                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 33526  01C5F2  6BF8               	clrf	248,b	;volatile
 33527                           
 33528                           ; BSR set to: 61
 33529                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 33530  01C5F4  6BF9               	clrf	249,b	;volatile
 33531                           
 33532                           ; BSR set to: 61
 33533                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 33534  01C5F6  6BFA               	clrf	250,b	;volatile
 33535                           
 33536                           ; BSR set to: 61
 33537                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 33538  01C5F8  6A47               	clrf	_uart1RxHead^0,c	;volatile
 33539                           
 33540                           ; BSR set to: 61
 33541                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 33542  01C5FA  0100               	movlb	0	; () banked
 33543  01C5FC  6BD4               	clrf	_uart1RxTail& (0+255),b	;volatile
 33544                           
 33545                           ; BSR set to: 0
 33546                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 33547  01C5FE  6BD3               	clrf	_uart1RxCount& (0+255),b	;volatile
 33548                           
 33549                           ; BSR set to: 0
 33550                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 33551  01C600  0139               	movlb	57	; () banked
 33552  01C602  8793               	bsf	147,3,b	;volatile
 33553                           
 33554                           ; BSR set to: 57
 33555                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 33556  01C604  0012               	return		;funcret
 33557  01C606                     __end_of_UART1_Initialize:
 33558                           	opt callstack 0
 33559                           
 33560 ;; *************** function _UART1_SetRxInterruptHandler *****************
 33561 ;; Defined at:
 33562 ;;		line 207 in file "mcc_generated_files/uart1.c"
 33563 ;; Parameters:    Size  Location     Type
 33564 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33565 ;;		 -> UART1_Receive_ISR(1), 
 33566 ;; Auto vars:     Size  Location     Type
 33567 ;;		None
 33568 ;; Return value:  Size  Location     Type
 33569 ;;                  1  [STACK] void 
 33570 ;; Registers used:
 33571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33572 ;; Tracked objects:
 33573 ;;		On entry : 3F/39
 33574 ;;		On exit  : 0/0
 33575 ;;		Unchanged: 0/0
 33576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33581 ;;Total ram usage:        0 bytes
 33582 ;; Hardware stack levels used:    1
 33583 ;; Hardware stack levels required when called:   15
 33584 ;; This function calls:
 33585 ;;		Nothing
 33586 ;; This function is called by:
 33587 ;;		_UART1_Initialize
 33588 ;; This function uses a reentrant model
 33589 ;;
 33590                           
 33591                           	psect	text133
 33592  01CDBA                     __ptext133:
 33593                           	opt callstack 0
 33594  01CDBA                     _UART1_SetRxInterruptHandler:
 33595                           	opt callstack 13
 33596                           
 33597                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 33598                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33599                           
 33600                           ; BSR set to: 57
 33601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33602                           ;incstack = 0
 33603  01CDBA  50E1               	movf	fsr1l,w,c
 33604  01CDBC  0FFD               	addlw	-3
 33605  01CDBE  6ED9               	movwf	fsr2l,c
 33606  01CDC0  50E2               	movf	fsr1h,w,c
 33607  01CDC2  6EDA               	movwf	fsr2h,c
 33608  01CDC4  0EFF               	movlw	255
 33609  01CDC6  22DA               	addwfc	fsr2h,f,c
 33610  01CDC8  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 33611  01CDCE  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 33612  01CDD4  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 33613                           
 33614                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33615  01CDDA  52E5               	movf	postdec1,f,c
 33616  01CDDC  52E5               	movf	postdec1,f,c
 33617  01CDDE  52E5               	movf	postdec1,f,c
 33618  01CDE0  0012               	return		;funcret
 33619  01CDE2                     __end_of_UART1_SetRxInterruptHandler:
 33620                           	opt callstack 0
 33621                           
 33622 ;; *************** function _TMR6_Initialize *****************
 33623 ;; Defined at:
 33624 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 33625 ;; Parameters:    Size  Location     Type
 33626 ;;		None
 33627 ;; Auto vars:     Size  Location     Type
 33628 ;;		None
 33629 ;; Return value:  Size  Location     Type
 33630 ;;                  1  [STACK] void 
 33631 ;; Registers used:
 33632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33633 ;; Tracked objects:
 33634 ;;		On entry : 3F/39
 33635 ;;		On exit  : 0/0
 33636 ;;		Unchanged: 0/0
 33637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33642 ;;Total ram usage:        0 bytes
 33643 ;; Hardware stack levels used:    1
 33644 ;; Hardware stack levels required when called:   16
 33645 ;; This function calls:
 33646 ;;		_TMR6_SetInterruptHandler
 33647 ;; This function is called by:
 33648 ;;		_SYSTEM_Initialize
 33649 ;; This function uses a reentrant model
 33650 ;;
 33651                           
 33652                           	psect	text134
 33653  01CCF0                     __ptext134:
 33654                           	opt callstack 0
 33655  01CCF0                     _TMR6_Initialize:
 33656                           	opt callstack 13
 33657                           
 33658                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 33659                           
 33660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33661                           ;incstack = 0
 33662  01CCF0  0E01               	movlw	1
 33663  01CCF2  6E96               	movwf	150,c	;volatile
 33664                           
 33665                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 33666  01CCF4  6A95               	clrf	149,c	;volatile
 33667                           
 33668                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 33669  01CCF6  6A97               	clrf	151,c	;volatile
 33670                           
 33671                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 33672  01CCF8  0E7C               	movlw	124
 33673  01CCFA  6E93               	movwf	147,c	;volatile
 33674                           
 33675                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 33676  01CCFC  6A92               	clrf	146,c	;volatile
 33677                           
 33678                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 33679  01CCFE  0139               	movlb	57	; () banked
 33680  01CD00  91A9               	bcf	169,0,b	;volatile
 33681                           
 33682                           ; BSR set to: 57
 33683                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 33684  01CD02  8199               	bsf	153,0,b	;volatile
 33685                           
 33686                           ; BSR set to: 57
 33687                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 33688  01CD04  0EDE               	movlw	low _TMR6_DefaultInterruptHandler
 33689  01CD06  6EE6               	movwf	postinc1,c
 33690  01CD08  0EC4               	movlw	high _TMR6_DefaultInterruptHandler
 33691  01CD0A  6EE6               	movwf	postinc1,c
 33692  01CD0C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 33693  01CD0E  6EE6               	movwf	postinc1,c
 33694  01CD10  ECF1  F0E6         	call	_TMR6_SetInterruptHandler	;wreg free
 33695                           
 33696                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 33697  01CD14  0EE0               	movlw	224
 33698  01CD16  6E94               	movwf	148,c	;volatile
 33699                           
 33700                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33701  01CD18  0012               	return		;funcret
 33702  01CD1A                     __end_of_TMR6_Initialize:
 33703                           	opt callstack 0
 33704                           
 33705 ;; *************** function _TMR6_SetInterruptHandler *****************
 33706 ;; Defined at:
 33707 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 33708 ;; Parameters:    Size  Location     Type
 33709 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33710 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 33711 ;; Auto vars:     Size  Location     Type
 33712 ;;		None
 33713 ;; Return value:  Size  Location     Type
 33714 ;;                  1  [STACK] void 
 33715 ;; Registers used:
 33716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33717 ;; Tracked objects:
 33718 ;;		On entry : 3F/39
 33719 ;;		On exit  : 0/0
 33720 ;;		Unchanged: 0/0
 33721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33726 ;;Total ram usage:        0 bytes
 33727 ;; Hardware stack levels used:    1
 33728 ;; Hardware stack levels required when called:   15
 33729 ;; This function calls:
 33730 ;;		Nothing
 33731 ;; This function is called by:
 33732 ;;		_TMR6_Initialize
 33733 ;; This function uses a reentrant model
 33734 ;;
 33735                           
 33736                           	psect	text135
 33737  01CDE2                     __ptext135:
 33738                           	opt callstack 0
 33739  01CDE2                     _TMR6_SetInterruptHandler:
 33740                           	opt callstack 13
 33741                           
 33742                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 33743                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33744                           
 33745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33746                           ;incstack = 0
 33747  01CDE2  50E1               	movf	fsr1l,w,c
 33748  01CDE4  0FFD               	addlw	-3
 33749  01CDE6  6ED9               	movwf	fsr2l,c
 33750  01CDE8  50E2               	movf	fsr1h,w,c
 33751  01CDEA  6EDA               	movwf	fsr2h,c
 33752  01CDEC  0EFF               	movlw	255
 33753  01CDEE  22DA               	addwfc	fsr2h,f,c
 33754  01CDF0  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 33755  01CDF6  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 33756  01CDFC  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 33757                           
 33758                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33759  01CE02  52E5               	movf	postdec1,f,c
 33760  01CE04  52E5               	movf	postdec1,f,c
 33761  01CE06  52E5               	movf	postdec1,f,c
 33762  01CE08  0012               	return		;funcret
 33763  01CE0A                     __end_of_TMR6_SetInterruptHandler:
 33764                           	opt callstack 0
 33765                           
 33766 ;; *************** function _TMR5_Initialize *****************
 33767 ;; Defined at:
 33768 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 33769 ;; Parameters:    Size  Location     Type
 33770 ;;		None
 33771 ;; Auto vars:     Size  Location     Type
 33772 ;;		None
 33773 ;; Return value:  Size  Location     Type
 33774 ;;                  1  [STACK] void 
 33775 ;; Registers used:
 33776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 33777 ;; Tracked objects:
 33778 ;;		On entry : 0/39
 33779 ;;		On exit  : 0/0
 33780 ;;		Unchanged: 0/0
 33781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33786 ;;Total ram usage:        0 bytes
 33787 ;; Hardware stack levels used:    1
 33788 ;; Hardware stack levels required when called:   16
 33789 ;; This function calls:
 33790 ;;		_TMR5_SetInterruptHandler
 33791 ;; This function is called by:
 33792 ;;		_SYSTEM_Initialize
 33793 ;; This function uses a reentrant model
 33794 ;;
 33795                           
 33796                           	psect	text136
 33797  01C606                     __ptext136:
 33798                           	opt callstack 0
 33799  01C606                     _TMR5_Initialize:
 33800                           	opt callstack 13
 33801                           
 33802                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 33803                           
 33804                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33805                           ;incstack = 0
 33806  01C606  6A9B               	clrf	155,c	;volatile
 33807                           
 33808                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 33809  01C608  6A9C               	clrf	156,c	;volatile
 33810                           
 33811                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 33812  01C60A  0E01               	movlw	1
 33813  01C60C  6E9D               	movwf	157,c	;volatile
 33814                           
 33815                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 33816  01C60E  0E63               	movlw	99
 33817  01C610  6E99               	movwf	153,c	;volatile
 33818                           
 33819                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 33820  01C612  0EC0               	movlw	192
 33821  01C614  6E98               	movwf	152,c	;volatile
 33822                           
 33823                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 33824  01C616  5098               	movf	152,w,c	;volatile
 33825  01C618  006F FE64  F001    	movff	16281,btemp	;volatile
 33826  01C61E  6A02               	clrf	(btemp+1)^0,c
 33827  01C620  0060  F004  F002   	movff	btemp,btemp+1
 33828  01C626  6A01               	clrf	btemp^0,c
 33829  01C628  1001               	iorwf	btemp^0,w,c
 33830  01C62A  0100               	movlb	0	; () banked
 33831  01C62C  6FC8               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 33832  01C62E  5002               	movf	(btemp+1)^0,w,c
 33833  01C630  6FC9               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 33834                           
 33835                           ; BSR set to: 0
 33836                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 33837  01C632  0139               	movlb	57	; () banked
 33838  01C634  9DA8               	bcf	168,6,b	;volatile
 33839                           
 33840                           ; BSR set to: 57
 33841                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 33842  01C636  8D98               	bsf	152,6,b	;volatile
 33843                           
 33844                           ; BSR set to: 57
 33845                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 33846  01C638  0ED8               	movlw	low _TMR5_DefaultInterruptHandler
 33847  01C63A  6EE6               	movwf	postinc1,c
 33848  01C63C  0EC9               	movlw	high _TMR5_DefaultInterruptHandler
 33849  01C63E  6EE6               	movwf	postinc1,c
 33850  01C640  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 33851  01C642  6EE6               	movwf	postinc1,c
 33852  01C644  EC05  F0E7         	call	_TMR5_SetInterruptHandler	;wreg free
 33853                           
 33854                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 33855  01C648  0E31               	movlw	49
 33856  01C64A  6E9A               	movwf	154,c	;volatile
 33857                           
 33858                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33859  01C64C  0012               	return		;funcret
 33860  01C64E                     __end_of_TMR5_Initialize:
 33861                           	opt callstack 0
 33862                           
 33863 ;; *************** function _TMR5_SetInterruptHandler *****************
 33864 ;; Defined at:
 33865 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 33866 ;; Parameters:    Size  Location     Type
 33867 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33868 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 33869 ;; Auto vars:     Size  Location     Type
 33870 ;;		None
 33871 ;; Return value:  Size  Location     Type
 33872 ;;                  1  [STACK] void 
 33873 ;; Registers used:
 33874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33875 ;; Tracked objects:
 33876 ;;		On entry : 3F/39
 33877 ;;		On exit  : 0/0
 33878 ;;		Unchanged: 0/0
 33879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33884 ;;Total ram usage:        0 bytes
 33885 ;; Hardware stack levels used:    1
 33886 ;; Hardware stack levels required when called:   15
 33887 ;; This function calls:
 33888 ;;		Nothing
 33889 ;; This function is called by:
 33890 ;;		_TMR5_Initialize
 33891 ;; This function uses a reentrant model
 33892 ;;
 33893                           
 33894                           	psect	text137
 33895  01CE0A                     __ptext137:
 33896                           	opt callstack 0
 33897  01CE0A                     _TMR5_SetInterruptHandler:
 33898                           	opt callstack 13
 33899                           
 33900                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 33901                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33902                           
 33903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33904                           ;incstack = 0
 33905  01CE0A  50E1               	movf	fsr1l,w,c
 33906  01CE0C  0FFD               	addlw	-3
 33907  01CE0E  6ED9               	movwf	fsr2l,c
 33908  01CE10  50E2               	movf	fsr1h,w,c
 33909  01CE12  6EDA               	movwf	fsr2h,c
 33910  01CE14  0EFF               	movlw	255
 33911  01CE16  22DA               	addwfc	fsr2h,f,c
 33912  01CE18  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 33913  01CE1E  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 33914  01CE24  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 33915                           
 33916                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33917  01CE2A  52E5               	movf	postdec1,f,c
 33918  01CE2C  52E5               	movf	postdec1,f,c
 33919  01CE2E  52E5               	movf	postdec1,f,c
 33920  01CE30  0012               	return		;funcret
 33921  01CE32                     __end_of_TMR5_SetInterruptHandler:
 33922                           	opt callstack 0
 33923                           
 33924 ;; *************** function _TMR3_Initialize *****************
 33925 ;; Defined at:
 33926 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 33927 ;; Parameters:    Size  Location     Type
 33928 ;;		None
 33929 ;; Auto vars:     Size  Location     Type
 33930 ;;		None
 33931 ;; Return value:  Size  Location     Type
 33932 ;;                  1  [STACK] void 
 33933 ;; Registers used:
 33934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 33935 ;; Tracked objects:
 33936 ;;		On entry : 0/39
 33937 ;;		On exit  : 0/0
 33938 ;;		Unchanged: 0/0
 33939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33944 ;;Total ram usage:        0 bytes
 33945 ;; Hardware stack levels used:    1
 33946 ;; Hardware stack levels required when called:   16
 33947 ;; This function calls:
 33948 ;;		_TMR3_SetInterruptHandler
 33949 ;; This function is called by:
 33950 ;;		_SYSTEM_Initialize
 33951 ;; This function uses a reentrant model
 33952 ;;
 33953                           
 33954                           	psect	text138
 33955  01C64E                     __ptext138:
 33956                           	opt callstack 0
 33957  01C64E                     _TMR3_Initialize:
 33958                           	opt callstack 13
 33959                           
 33960                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 33961                           
 33962                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33963                           ;incstack = 0
 33964  01C64E  6AA7               	clrf	167,c	;volatile
 33965                           
 33966                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 33967  01C650  6AA8               	clrf	168,c	;volatile
 33968                           
 33969                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 33970  01C652  0E01               	movlw	1
 33971  01C654  6EA9               	movwf	169,c	;volatile
 33972                           
 33973                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 33974  01C656  0E3C               	movlw	60
 33975  01C658  6EA5               	movwf	165,c	;volatile
 33976                           
 33977                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 33978  01C65A  0EB0               	movlw	176
 33979  01C65C  6EA4               	movwf	164,c	;volatile
 33980                           
 33981                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 33982  01C65E  50A4               	movf	164,w,c	;volatile
 33983  01C660  006F FE94  F001    	movff	16293,btemp	;volatile
 33984  01C666  6A02               	clrf	(btemp+1)^0,c
 33985  01C668  0060  F004  F002   	movff	btemp,btemp+1
 33986  01C66E  6A01               	clrf	btemp^0,c
 33987  01C670  1001               	iorwf	btemp^0,w,c
 33988  01C672  0100               	movlb	0	; () banked
 33989  01C674  6FC4               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 33990  01C676  5002               	movf	(btemp+1)^0,w,c
 33991  01C678  6FC5               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 33992                           
 33993                           ; BSR set to: 0
 33994                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 33995  01C67A  0139               	movlb	57	; () banked
 33996  01C67C  9DA6               	bcf	166,6,b	;volatile
 33997                           
 33998                           ; BSR set to: 57
 33999                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 34000  01C67E  8D96               	bsf	150,6,b	;volatile
 34001                           
 34002                           ; BSR set to: 57
 34003                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 34004  01C680  0E94               	movlw	low _TMR3_DefaultInterruptHandler
 34005  01C682  6EE6               	movwf	postinc1,c
 34006  01C684  0ED3               	movlw	high _TMR3_DefaultInterruptHandler
 34007  01C686  6EE6               	movwf	postinc1,c
 34008  01C688  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 34009  01C68A  6EE6               	movwf	postinc1,c
 34010  01C68C  EC19  F0E7         	call	_TMR3_SetInterruptHandler	;wreg free
 34011                           
 34012                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 34013  01C690  0E31               	movlw	49
 34014  01C692  6EA6               	movwf	166,c	;volatile
 34015                           
 34016                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34017  01C694  0012               	return		;funcret
 34018  01C696                     __end_of_TMR3_Initialize:
 34019                           	opt callstack 0
 34020                           
 34021 ;; *************** function _TMR3_SetInterruptHandler *****************
 34022 ;; Defined at:
 34023 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 34024 ;; Parameters:    Size  Location     Type
 34025 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34026 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 34027 ;; Auto vars:     Size  Location     Type
 34028 ;;		None
 34029 ;; Return value:  Size  Location     Type
 34030 ;;                  1  [STACK] void 
 34031 ;; Registers used:
 34032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34033 ;; Tracked objects:
 34034 ;;		On entry : 0/2
 34035 ;;		On exit  : 0/0
 34036 ;;		Unchanged: 0/0
 34037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34042 ;;Total ram usage:        0 bytes
 34043 ;; Hardware stack levels used:    1
 34044 ;; Hardware stack levels required when called:   15
 34045 ;; This function calls:
 34046 ;;		Nothing
 34047 ;; This function is called by:
 34048 ;;		_TMR3_Initialize
 34049 ;;		_init_bsoc
 34050 ;; This function uses a reentrant model
 34051 ;;
 34052                           
 34053                           	psect	text139
 34054  01CE32                     __ptext139:
 34055                           	opt callstack 0
 34056  01CE32                     _TMR3_SetInterruptHandler:
 34057                           	opt callstack 14
 34058                           
 34059                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 34060                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34061                           
 34062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34063                           ;incstack = 0
 34064  01CE32  50E1               	movf	fsr1l,w,c
 34065  01CE34  0FFD               	addlw	-3
 34066  01CE36  6ED9               	movwf	fsr2l,c
 34067  01CE38  50E2               	movf	fsr1h,w,c
 34068  01CE3A  6EDA               	movwf	fsr2h,c
 34069  01CE3C  0EFF               	movlw	255
 34070  01CE3E  22DA               	addwfc	fsr2h,f,c
 34071  01CE40  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 34072  01CE46  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 34073  01CE4C  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 34074                           
 34075                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34076  01CE52  52E5               	movf	postdec1,f,c
 34077  01CE54  52E5               	movf	postdec1,f,c
 34078  01CE56  52E5               	movf	postdec1,f,c
 34079  01CE58  0012               	return		;funcret
 34080  01CE5A                     __end_of_TMR3_SetInterruptHandler:
 34081                           	opt callstack 0
 34082                           
 34083 ;; *************** function _TMR2_Initialize *****************
 34084 ;; Defined at:
 34085 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 34086 ;; Parameters:    Size  Location     Type
 34087 ;;		None
 34088 ;; Auto vars:     Size  Location     Type
 34089 ;;		None
 34090 ;; Return value:  Size  Location     Type
 34091 ;;                  1  [STACK] void 
 34092 ;; Registers used:
 34093 ;;		wreg, status,2
 34094 ;; Tracked objects:
 34095 ;;		On entry : 3F/3F
 34096 ;;		On exit  : 3F/39
 34097 ;;		Unchanged: 0/0
 34098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34103 ;;Total ram usage:        0 bytes
 34104 ;; Hardware stack levels used:    1
 34105 ;; Hardware stack levels required when called:   15
 34106 ;; This function calls:
 34107 ;;		Nothing
 34108 ;; This function is called by:
 34109 ;;		_SYSTEM_Initialize
 34110 ;; This function uses a reentrant model
 34111 ;;
 34112                           
 34113                           	psect	text140
 34114  01D1D6                     __ptext140:
 34115                           	opt callstack 0
 34116  01D1D6                     _TMR2_Initialize:
 34117                           	opt callstack 14
 34118                           
 34119                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 34120                           
 34121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34122                           ;incstack = 0
 34123  01D1D6  0E01               	movlw	1
 34124  01D1D8  6EAE               	movwf	174,c	;volatile
 34125                           
 34126                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 34127  01D1DA  6AAD               	clrf	173,c	;volatile
 34128                           
 34129                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 34130  01D1DC  6AAF               	clrf	175,c	;volatile
 34131                           
 34132                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 34133  01D1DE  0E63               	movlw	99
 34134  01D1E0  6EAB               	movwf	171,c	;volatile
 34135                           
 34136                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 34137  01D1E2  6AAA               	clrf	170,c	;volatile
 34138                           
 34139                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 34140  01D1E4  0139               	movlb	57	; () banked
 34141  01D1E6  95A4               	bcf	164,2,b	;volatile
 34142                           
 34143                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 34144  01D1E8  0EC0               	movlw	192
 34145  01D1EA  6EAC               	movwf	172,c	;volatile
 34146                           
 34147                           ; BSR set to: 57
 34148                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34149  01D1EC  0012               	return		;funcret
 34150  01D1EE                     __end_of_TMR2_Initialize:
 34151                           	opt callstack 0
 34152                           
 34153 ;; *************** function _SPI1_Initialize *****************
 34154 ;; Defined at:
 34155 ;;		line 64 in file "mcc_generated_files/spi1.c"
 34156 ;; Parameters:    Size  Location     Type
 34157 ;;		None
 34158 ;; Auto vars:     Size  Location     Type
 34159 ;;		None
 34160 ;; Return value:  Size  Location     Type
 34161 ;;                  1  [STACK] void 
 34162 ;; Registers used:
 34163 ;;		wreg, status,2
 34164 ;; Tracked objects:
 34165 ;;		On entry : 3F/39
 34166 ;;		On exit  : 3F/3D
 34167 ;;		Unchanged: 0/0
 34168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34173 ;;Total ram usage:        0 bytes
 34174 ;; Hardware stack levels used:    1
 34175 ;; Hardware stack levels required when called:   15
 34176 ;; This function calls:
 34177 ;;		Nothing
 34178 ;; This function is called by:
 34179 ;;		_SYSTEM_Initialize
 34180 ;; This function uses a reentrant model
 34181 ;;
 34182                           
 34183                           	psect	text141
 34184  01D1EE                     __ptext141:
 34185                           	opt callstack 0
 34186  01D1EE                     _SPI1_Initialize:
 34187                           	opt callstack 14
 34188                           
 34189                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 34190                           
 34191                           ; BSR set to: 57
 34192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34193                           ;incstack = 0
 34194  01D1EE  0E40               	movlw	64
 34195  01D1F0  013D               	movlb	61	; () banked
 34196  01D1F2  6F15               	movwf	21,b	;volatile
 34197                           
 34198                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 34199  01D1F4  0E03               	movlw	3
 34200  01D1F6  6F16               	movwf	22,b	;volatile
 34201                           
 34202                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 34203  01D1F8  0E4F               	movlw	79
 34204  01D1FA  6F19               	movwf	25,b	;volatile
 34205                           
 34206                           ; BSR set to: 61
 34207                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 34208  01D1FC  6B1C               	clrf	28,b	;volatile
 34209                           
 34210                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 34211  01D1FE  0E83               	movlw	131
 34212  01D200  6F14               	movwf	20,b	;volatile
 34213                           
 34214                           ; BSR set to: 61
 34215                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34216  01D202  0012               	return		;funcret
 34217  01D204                     __end_of_SPI1_Initialize:
 34218                           	opt callstack 0
 34219                           
 34220 ;; *************** function _PWM8_Initialize *****************
 34221 ;; Defined at:
 34222 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 34223 ;; Parameters:    Size  Location     Type
 34224 ;;		None
 34225 ;; Auto vars:     Size  Location     Type
 34226 ;;		None
 34227 ;; Return value:  Size  Location     Type
 34228 ;;                  1  [STACK] void 
 34229 ;; Registers used:
 34230 ;;		wreg, status,2
 34231 ;; Tracked objects:
 34232 ;;		On entry : 0/0
 34233 ;;		On exit  : 3F/3F
 34234 ;;		Unchanged: 0/0
 34235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34240 ;;Total ram usage:        0 bytes
 34241 ;; Hardware stack levels used:    1
 34242 ;; Hardware stack levels required when called:   15
 34243 ;; This function calls:
 34244 ;;		Nothing
 34245 ;; This function is called by:
 34246 ;;		_SYSTEM_Initialize
 34247 ;; This function uses a reentrant model
 34248 ;;
 34249                           
 34250                           	psect	text142
 34251  01D204                     __ptext142:
 34252                           	opt callstack 0
 34253  01D204                     _PWM8_Initialize:
 34254                           	opt callstack 14
 34255                           
 34256                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 34257                           
 34258                           ; BSR set to: 61
 34259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34260                           ;incstack = 0
 34261  01D204  0E80               	movlw	128
 34262  01D206  6E62               	movwf	98,c	;volatile
 34263                           
 34264                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 34265  01D208  6A61               	clrf	97,c	;volatile
 34266                           
 34267                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 34268  01D20A  0E40               	movlw	64
 34269  01D20C  6E60               	movwf	96,c	;volatile
 34270                           
 34271                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 34272  01D20E  013F               	movlb	63	; () banked
 34273  01D210  515F               	movf	95,w,b	;volatile
 34274  01D212  0B3F               	andlw	-193
 34275  01D214  0940               	iorlw	64
 34276  01D216  6F5F               	movwf	95,b	;volatile
 34277                           
 34278                           ; BSR set to: 63
 34279                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34280  01D218  0012               	return		;funcret
 34281  01D21A                     __end_of_PWM8_Initialize:
 34282                           	opt callstack 0
 34283                           
 34284 ;; *************** function _PMD_Initialize *****************
 34285 ;; Defined at:
 34286 ;;		line 91 in file "mcc_generated_files/mcc.c"
 34287 ;; Parameters:    Size  Location     Type
 34288 ;;		None
 34289 ;; Auto vars:     Size  Location     Type
 34290 ;;		None
 34291 ;; Return value:  Size  Location     Type
 34292 ;;                  1  [STACK] void 
 34293 ;; Registers used:
 34294 ;;		None
 34295 ;; Tracked objects:
 34296 ;;		On entry : 3F/39
 34297 ;;		On exit  : 3F/39
 34298 ;;		Unchanged: 0/0
 34299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34304 ;;Total ram usage:        0 bytes
 34305 ;; Hardware stack levels used:    1
 34306 ;; Hardware stack levels required when called:   15
 34307 ;; This function calls:
 34308 ;;		Nothing
 34309 ;; This function is called by:
 34310 ;;		_SYSTEM_Initialize
 34311 ;; This function uses a reentrant model
 34312 ;;
 34313                           
 34314                           	psect	text143
 34315  01D230                     __ptext143:
 34316                           	opt callstack 0
 34317  01D230                     _PMD_Initialize:
 34318                           	opt callstack 14
 34319                           
 34320                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 34321                           
 34322                           ; BSR set to: 63
 34323                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34324                           ;incstack = 0
 34325  01D230  0139               	movlb	57	; () banked
 34326  01D232  6BC0               	clrf	192,b	;volatile
 34327                           
 34328                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 34329  01D234  6BC1               	clrf	193,b	;volatile
 34330                           
 34331                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 34332  01D236  6BC2               	clrf	194,b	;volatile
 34333                           
 34334                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 34335  01D238  6BC3               	clrf	195,b	;volatile
 34336                           
 34337                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 34338  01D23A  6BC4               	clrf	196,b	;volatile
 34339                           
 34340                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 34341  01D23C  6BC5               	clrf	197,b	;volatile
 34342                           
 34343                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 34344  01D23E  6BC6               	clrf	198,b	;volatile
 34345                           
 34346                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 34347  01D240  6BC7               	clrf	199,b	;volatile
 34348                           
 34349                           ; BSR set to: 57
 34350                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34351  01D242  0012               	return		;funcret
 34352  01D244                     __end_of_PMD_Initialize:
 34353                           	opt callstack 0
 34354                           
 34355 ;; *************** function _PIN_MANAGER_Initialize *****************
 34356 ;; Defined at:
 34357 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 34358 ;; Parameters:    Size  Location     Type
 34359 ;;		None
 34360 ;; Auto vars:     Size  Location     Type
 34361 ;;		None
 34362 ;; Return value:  Size  Location     Type
 34363 ;;                  1  [STACK] void 
 34364 ;; Registers used:
 34365 ;;		wreg, status,2
 34366 ;; Tracked objects:
 34367 ;;		On entry : 3F/39
 34368 ;;		On exit  : 3F/3A
 34369 ;;		Unchanged: 0/0
 34370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34375 ;;Total ram usage:        0 bytes
 34376 ;; Hardware stack levels used:    1
 34377 ;; Hardware stack levels required when called:   15
 34378 ;; This function calls:
 34379 ;;		Nothing
 34380 ;; This function is called by:
 34381 ;;		_SYSTEM_Initialize
 34382 ;; This function uses a reentrant model
 34383 ;;
 34384                           
 34385                           	psect	text144
 34386  01B9DE                     __ptext144:
 34387                           	opt callstack 0
 34388  01B9DE                     _PIN_MANAGER_Initialize:
 34389                           	opt callstack 14
 34390                           
 34391                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 34392                           
 34393                           ; BSR set to: 57
 34394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34395                           ;incstack = 0
 34396  01B9DE  0E07               	movlw	7
 34397  01B9E0  6EBE               	movwf	190,c	;volatile
 34398                           
 34399                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 34400  01B9E2  6ABD               	clrf	189,c	;volatile
 34401                           
 34402                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 34403  01B9E4  6ABA               	clrf	186,c	;volatile
 34404                           
 34405                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 34406  01B9E6  0E23               	movlw	35
 34407  01B9E8  6EBF               	movwf	191,c	;volatile
 34408                           
 34409                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 34410  01B9EA  6ABB               	clrf	187,c	;volatile
 34411                           
 34412                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 34413  01B9EC  0E07               	movlw	7
 34414  01B9EE  6EBC               	movwf	188,c	;volatile
 34415                           
 34416                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 34417  01B9F0  6AC6               	clrf	198,c	;volatile
 34418                           
 34419                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 34420  01B9F2  0E0C               	movlw	12
 34421  01B9F4  6EC7               	movwf	199,c	;volatile
 34422                           
 34423                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 34424  01B9F6  68C2               	setf	194,c	;volatile
 34425                           
 34426                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 34427  01B9F8  0EBF               	movlw	191
 34428  01B9FA  6EC3               	movwf	195,c	;volatile
 34429                           
 34430                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 34431  01B9FC  0E90               	movlw	144
 34432  01B9FE  6EC4               	movwf	196,c	;volatile
 34433                           
 34434                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 34435  01BA00  0E0C               	movlw	12
 34436  01BA02  6EC5               	movwf	197,c	;volatile
 34437                           
 34438                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 34439  01BA04  013A               	movlb	58	; () banked
 34440  01BA06  6B70               	clrf	112,b	;volatile
 34441                           
 34442                           ; BSR set to: 58
 34443                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 34444  01BA08  6B60               	clrf	96,b	;volatile
 34445                           
 34446                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 34447  01BA0A  0E3C               	movlw	60
 34448  01BA0C  6F50               	movwf	80,b	;volatile
 34449                           
 34450                           ; BSR set to: 58
 34451                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 34452  01BA0E  6B80               	clrf	128,b	;volatile
 34453                           
 34454                           ; BSR set to: 58
 34455                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 34456  01BA10  6B90               	clrf	144,b	;volatile
 34457                           
 34458                           ; BSR set to: 58
 34459                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 34460  01BA12  6940               	setf	64,b	;volatile
 34461                           
 34462                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 34463  01BA14  0E0C               	movlw	12
 34464  01BA16  6F71               	movwf	113,b	;volatile
 34465                           
 34466                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 34467  01BA18  0E0C               	movlw	12
 34468  01BA1A  6F91               	movwf	145,b	;volatile
 34469                           
 34470                           ; BSR set to: 58
 34471                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 34472  01BA1C  6B81               	clrf	129,b	;volatile
 34473                           
 34474                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 34475  01BA1E  0E83               	movlw	131
 34476  01BA20  6F51               	movwf	81,b	;volatile
 34477                           
 34478                           ; BSR set to: 58
 34479                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 34480  01BA22  6B41               	clrf	65,b	;volatile
 34481                           
 34482                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 34483  01BA24  0E97               	movlw	151
 34484  01BA26  6F61               	movwf	97,b	;volatile
 34485                           
 34486                           ; BSR set to: 58
 34487                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 34488  01BA28  6B82               	clrf	130,b	;volatile
 34489                           
 34490                           ; BSR set to: 58
 34491                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 34492  01BA2A  6B92               	clrf	146,b	;volatile
 34493                           
 34494                           ; BSR set to: 58
 34495                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 34496  01BA2C  6B42               	clrf	66,b	;volatile
 34497                           
 34498                           ; BSR set to: 58
 34499                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 34500  01BA2E  6B52               	clrf	82,b	;volatile
 34501                           
 34502                           ; BSR set to: 58
 34503                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 34504  01BA30  6B62               	clrf	98,b	;volatile
 34505                           
 34506                           ; BSR set to: 58
 34507                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 34508  01BA32  6B72               	clrf	114,b	;volatile
 34509                           
 34510                           ; BSR set to: 58
 34511                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 34512  01BA34  6943               	setf	67,b	;volatile
 34513                           
 34514                           ; BSR set to: 58
 34515                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 34516  01BA36  6953               	setf	83,b	;volatile
 34517                           
 34518                           ; BSR set to: 58
 34519                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 34520  01BA38  6963               	setf	99,b	;volatile
 34521                           
 34522                           ; BSR set to: 58
 34523                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 34524  01BA3A  6973               	setf	115,b	;volatile
 34525                           
 34526                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 34527  01BA3C  0E07               	movlw	7
 34528  01BA3E  6F83               	movwf	131,b	;volatile
 34529                           
 34530                           ; BSR set to: 58
 34531                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 34532  01BA40  6993               	setf	147,b	;volatile
 34533                           
 34534                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 34535  01BA42  0E0F               	movlw	15
 34536  01BA44  6FE8               	movwf	232,b	;volatile
 34537                           
 34538                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 34539  01BA46  0E13               	movlw	19
 34540  01BA48  6FDE               	movwf	222,b	;volatile
 34541                           
 34542                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 34543  01BA4A  0E16               	movlw	22
 34544  01BA4C  6F0E               	movwf	14,b	;volatile
 34545                           
 34546                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 34547  01BA4E  0E1E               	movlw	30
 34548  01BA50  6F13               	movwf	19,b	;volatile
 34549                           
 34550                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 34551  01BA52  0E08               	movlw	8
 34552  01BA54  6FC0               	movwf	192,b	;volatile
 34553                           
 34554                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 34555  01BA56  0E10               	movlw	16
 34556  01BA58  6F19               	movwf	25,b	;volatile
 34557                           
 34558                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 34559  01BA5A  0E09               	movlw	9
 34560  01BA5C  6FC1               	movwf	193,b	;volatile
 34561                           
 34562                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 34563  01BA5E  0E1F               	movlw	31
 34564  01BA60  6F15               	movwf	21,b	;volatile
 34565                           
 34566                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 34567  01BA62  0E13               	movlw	19
 34568  01BA64  6F16               	movwf	22,b	;volatile
 34569                           
 34570                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 34571  01BA66  0E17               	movlw	23
 34572  01BA68  6FE5               	movwf	229,b	;volatile
 34573                           
 34574                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 34575  01BA6A  0E14               	movlw	20
 34576  01BA6C  6FDF               	movwf	223,b	;volatile
 34577                           
 34578                           ; BSR set to: 58
 34579                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 34580  01BA6E  0012               	return		;funcret
 34581  01BA70                     __end_of_PIN_MANAGER_Initialize:
 34582                           	opt callstack 0
 34583                           
 34584 ;; *************** function _OSCILLATOR_Initialize *****************
 34585 ;; Defined at:
 34586 ;;		line 73 in file "mcc_generated_files/mcc.c"
 34587 ;; Parameters:    Size  Location     Type
 34588 ;;		None
 34589 ;; Auto vars:     Size  Location     Type
 34590 ;;		None
 34591 ;; Return value:  Size  Location     Type
 34592 ;;                  1  [STACK] void 
 34593 ;; Registers used:
 34594 ;;		wreg, status,2
 34595 ;; Tracked objects:
 34596 ;;		On entry : 3F/3A
 34597 ;;		On exit  : 3F/39
 34598 ;;		Unchanged: 0/0
 34599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34604 ;;Total ram usage:        0 bytes
 34605 ;; Hardware stack levels used:    1
 34606 ;; Hardware stack levels required when called:   15
 34607 ;; This function calls:
 34608 ;;		Nothing
 34609 ;; This function is called by:
 34610 ;;		_SYSTEM_Initialize
 34611 ;; This function uses a reentrant model
 34612 ;;
 34613                           
 34614                           	psect	text145
 34615  01D21A                     __ptext145:
 34616                           	opt callstack 0
 34617  01D21A                     _OSCILLATOR_Initialize:
 34618                           	opt callstack 14
 34619                           
 34620                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 34621                           
 34622                           ; BSR set to: 58
 34623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34624                           ;incstack = 0
 34625  01D21A  0E20               	movlw	32
 34626  01D21C  0139               	movlb	57	; () banked
 34627  01D21E  6FD9               	movwf	217,b	;volatile
 34628                           
 34629                           ; BSR set to: 57
 34630                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 34631  01D220  6BDB               	clrf	219,b	;volatile
 34632                           
 34633                           ; BSR set to: 57
 34634                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 34635  01D222  6BDD               	clrf	221,b	;volatile
 34636                           
 34637                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 34638  01D224  0E02               	movlw	2
 34639  01D226  6FDF               	movwf	223,b	;volatile
 34640                           
 34641                           ; BSR set to: 57
 34642                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 34643  01D228  6BDE               	clrf	222,b	;volatile
 34644  01D22A                     l171:
 34645                           
 34646                           ; BSR set to: 57
 34647                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 34648  01D22A  B1DC               	btfsc	220,0,b	;volatile
 34649  01D22C  0012               	return	
 34650  01D22E  D7FD               	goto	l171
 34651  01D230                     __end_of_OSCILLATOR_Initialize:
 34652                           	opt callstack 0
 34653                           
 34654 ;; *************** function _INTERRUPT_Initialize *****************
 34655 ;; Defined at:
 34656 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 34657 ;; Parameters:    Size  Location     Type
 34658 ;;		None
 34659 ;; Auto vars:     Size  Location     Type
 34660 ;;  state           1  [STACK] _Bool 
 34661 ;; Return value:  Size  Location     Type
 34662 ;;                  1  [STACK] void 
 34663 ;; Registers used:
 34664 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 34665 ;; Tracked objects:
 34666 ;;		On entry : 0/0
 34667 ;;		On exit  : 3F/39
 34668 ;;		Unchanged: 0/0
 34669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34674 ;;Total ram usage:        0 bytes
 34675 ;; Hardware stack levels used:    1
 34676 ;; Hardware stack levels required when called:   15
 34677 ;; This function calls:
 34678 ;;		Nothing
 34679 ;; This function is called by:
 34680 ;;		_SYSTEM_Initialize
 34681 ;; This function uses a reentrant model
 34682 ;;
 34683                           
 34684                           	psect	text146
 34685  01C09A                     __ptext146:
 34686                           	opt callstack 0
 34687  01C09A                     _INTERRUPT_Initialize:
 34688                           	opt callstack 0
 34689                           
 34690                           ; BSR set to: 57
 34691                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34692  01C09A  52E6               	movf	postinc1,f,c
 34693                           
 34694                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 34695                           
 34696                           ;incstack = 0
 34697  01C09C  8AD2               	bsf	210,5,c	;volatile
 34698                           
 34699                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 34700  01C09E  AED2               	btfss	16338,7,c	;volatile
 34701  01C0A0  D003               	goto	u10130
 34702  01C0A2  6A0C               	clrf	(btemp+11)^0,c
 34703  01C0A4  2A0C               	incf	(btemp+11)^0,f,c
 34704  01C0A6  D001               	goto	u10148
 34705  01C0A8                     u10130:
 34706  01C0A8  6A0C               	clrf	(btemp+11)^0,c
 34707  01C0AA                     u10148:
 34708                           
 34709                           ;stkvar	_state @ sp[(-1)+0]
 34710  01C0AA  0EFF               	movlw	-1
 34711  01C0AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 34712                           
 34713                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 34714  01C0B2  9ED2               	bcf	16338,7,c	;volatile
 34715                           
 34716                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 34717  01C0B4  0E55               	movlw	85
 34718  01C0B6  6ED4               	movwf	212,c	;volatile
 34719                           
 34720                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 34721  01C0B8  0EAA               	movlw	170
 34722  01C0BA  6ED4               	movwf	212,c	;volatile
 34723                           
 34724                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 34725  01C0BC  90D4               	bcf	212,0,c	;volatile
 34726                           
 34727                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 34728  01C0BE  0138               	movlb	56	; () banked
 34729  01C0C0  6B9F               	clrf	159,b	;volatile
 34730                           
 34731                           ; BSR set to: 56
 34732                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 34733  01C0C2  6B9E               	clrf	158,b	;volatile
 34734                           
 34735                           ; BSR set to: 56
 34736                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 34737  01C0C4  0E08               	movlw	8
 34738  01C0C6  6F9D               	movwf	157,b	;volatile
 34739                           
 34740                           ; BSR set to: 56
 34741                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 34742  01C0C8  0E55               	movlw	85
 34743  01C0CA  6ED4               	movwf	212,c	;volatile
 34744                           
 34745                           ; BSR set to: 56
 34746                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 34747  01C0CC  0EAA               	movlw	170
 34748  01C0CE  6ED4               	movwf	212,c	;volatile
 34749                           
 34750                           ; BSR set to: 56
 34751                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 34752  01C0D0  80D4               	bsf	212,0,c	;volatile
 34753                           
 34754                           ; BSR set to: 56
 34755                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 34756                           ;stkvar	_state @ sp[(-1)+0]
 34757  01C0D2  0EFF               	movlw	-1
 34758  01C0D4  B0E3               	btfsc	plusw1,0,c
 34759  01C0D6  D002               	bra	u10155
 34760  01C0D8  9ED2               	bcf	16338,7,c	;volatile
 34761  01C0DA  D001               	bra	u10156
 34762  01C0DC                     u10155:
 34763  01C0DC  8ED2               	bsf	16338,7,c	;volatile
 34764  01C0DE                     u10156:
 34765                           
 34766                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 34767  01C0DE  0139               	movlb	57	; () banked
 34768  01C0E0  8782               	bsf	130,3,b	;volatile
 34769                           
 34770                           ; BSR set to: 57
 34771                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 34772  01C0E2  8382               	bsf	130,1,b	;volatile
 34773                           
 34774                           ; BSR set to: 57
 34775                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 34776  01C0E4  8182               	bsf	130,0,b	;volatile
 34777                           
 34778                           ; BSR set to: 57
 34779                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 34780  01C0E6  8582               	bsf	130,2,b	;volatile
 34781                           
 34782                           ; BSR set to: 57
 34783                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 34784  01C0E8  8786               	bsf	134,3,b	;volatile
 34785                           
 34786                           ; BSR set to: 57
 34787                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 34788  01C0EA  8586               	bsf	134,2,b	;volatile
 34789                           
 34790                           ; BSR set to: 57
 34791                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 34792  01C0EC  8783               	bsf	131,3,b	;volatile
 34793                           
 34794                           ; BSR set to: 57
 34795                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 34796  01C0EE  8181               	bsf	129,0,b	;volatile
 34797                           
 34798                           ; BSR set to: 57
 34799                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 34800  01C0F0  9185               	bcf	133,0,b	;volatile
 34801                           
 34802                           ; BSR set to: 57
 34803                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 34804  01C0F2  8189               	bsf	137,0,b	;volatile
 34805                           
 34806                           ; BSR set to: 57
 34807                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 34808  01C0F4  9D88               	bcf	136,6,b	;volatile
 34809                           
 34810                           ; BSR set to: 57
 34811                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 34812  01C0F6  9D86               	bcf	134,6,b	;volatile
 34813                           
 34814                           ; BSR set to: 57
 34815                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 34816  01C0F8  8581               	bsf	129,2,b	;volatile
 34817                           
 34818                           ; BSR set to: 57
 34819                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 34820  01C0FA  8781               	bsf	129,3,b	;volatile
 34821                           
 34822                           ; BSR set to: 57
 34823                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 34824  01C0FC  52E5               	movf	postdec1,f,c
 34825  01C0FE  0012               	return		;funcret
 34826  01C100                     __end_of_INTERRUPT_Initialize:
 34827                           	opt callstack 0
 34828                           
 34829 ;; *************** function _FVR_Initialize *****************
 34830 ;; Defined at:
 34831 ;;		line 58 in file "mcc_generated_files/fvr.c"
 34832 ;; Parameters:    Size  Location     Type
 34833 ;;		None
 34834 ;; Auto vars:     Size  Location     Type
 34835 ;;		None
 34836 ;; Return value:  Size  Location     Type
 34837 ;;                  1  [STACK] void 
 34838 ;; Registers used:
 34839 ;;		wreg, status,2
 34840 ;; Tracked objects:
 34841 ;;		On entry : 3F/39
 34842 ;;		On exit  : 3F/3E
 34843 ;;		Unchanged: 0/0
 34844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34849 ;;Total ram usage:        0 bytes
 34850 ;; Hardware stack levels used:    1
 34851 ;; Hardware stack levels required when called:   15
 34852 ;; This function calls:
 34853 ;;		Nothing
 34854 ;; This function is called by:
 34855 ;;		_SYSTEM_Initialize
 34856 ;; This function uses a reentrant model
 34857 ;;
 34858                           
 34859                           	psect	text147
 34860  01D364                     __ptext147:
 34861                           	opt callstack 0
 34862  01D364                     _FVR_Initialize:
 34863                           	opt callstack 14
 34864                           
 34865                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 34866                           
 34867                           ; BSR set to: 57
 34868                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34869                           ;incstack = 0
 34870  01D364  0EAF               	movlw	175
 34871  01D366  013E               	movlb	62	; () banked
 34872  01D368  6FC1               	movwf	193,b	;volatile
 34873                           
 34874                           ; BSR set to: 62
 34875                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34876  01D36A  0012               	return		;funcret
 34877  01D36C                     __end_of_FVR_Initialize:
 34878                           	opt callstack 0
 34879                           
 34880 ;; *************** function _EXT_INT_Initialize *****************
 34881 ;; Defined at:
 34882 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 34883 ;; Parameters:    Size  Location     Type
 34884 ;;		None
 34885 ;; Auto vars:     Size  Location     Type
 34886 ;;		None
 34887 ;; Return value:  Size  Location     Type
 34888 ;;                  1  [STACK] void 
 34889 ;; Registers used:
 34890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34891 ;; Tracked objects:
 34892 ;;		On entry : 3F/39
 34893 ;;		On exit  : 3F/39
 34894 ;;		Unchanged: 0/0
 34895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34900 ;;Total ram usage:        0 bytes
 34901 ;; Hardware stack levels used:    1
 34902 ;; Hardware stack levels required when called:   16
 34903 ;; This function calls:
 34904 ;;		_INT0_SetInterruptHandler
 34905 ;;		_INT1_SetInterruptHandler
 34906 ;; This function is called by:
 34907 ;;		_SYSTEM_Initialize
 34908 ;; This function uses a reentrant model
 34909 ;;
 34910                           
 34911                           	psect	text148
 34912  01CB16                     __ptext148:
 34913                           	opt callstack 0
 34914  01CB16                     _EXT_INT_Initialize:
 34915                           	opt callstack 13
 34916                           
 34917                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 34918                           
 34919                           ; BSR set to: 62
 34920                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34921                           ;incstack = 0
 34922  01CB16  0139               	movlb	57	; () banked
 34923  01CB18  91A1               	bcf	161,0,b	;volatile
 34924                           
 34925                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 34926  01CB1A  90D2               	bcf	210,0,c	;volatile
 34927                           
 34928                           ; BSR set to: 57
 34929                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 34930  01CB1C  0E96               	movlw	low _INT0_DefaultInterruptHandler
 34931  01CB1E  6EE6               	movwf	postinc1,c
 34932  01CB20  0ED3               	movlw	high _INT0_DefaultInterruptHandler
 34933  01CB22  6EE6               	movwf	postinc1,c
 34934  01CB24  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 34935  01CB26  6EE6               	movwf	postinc1,c
 34936  01CB28  EC41  F0E7         	call	_INT0_SetInterruptHandler	;wreg free
 34937                           
 34938                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 34939  01CB2C  0139               	movlb	57	; () banked
 34940  01CB2E  8191               	bsf	145,0,b	;volatile
 34941                           
 34942                           ; BSR set to: 57
 34943                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 34944  01CB30  91A5               	bcf	165,0,b	;volatile
 34945                           
 34946                           ; BSR set to: 57
 34947                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 34948  01CB32  92D2               	bcf	210,1,c	;volatile
 34949                           
 34950                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 34951  01CB34  0E92               	movlw	low _INT1_DefaultInterruptHandler
 34952  01CB36  6EE6               	movwf	postinc1,c
 34953  01CB38  0ED3               	movlw	high _INT1_DefaultInterruptHandler
 34954  01CB3A  6EE6               	movwf	postinc1,c
 34955  01CB3C  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 34956  01CB3E  6EE6               	movwf	postinc1,c
 34957  01CB40  EC2D  F0E7         	call	_INT1_SetInterruptHandler	;wreg free
 34958                           
 34959                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 34960  01CB44  0139               	movlb	57	; () banked
 34961  01CB46  8195               	bsf	149,0,b	;volatile
 34962                           
 34963                           ; BSR set to: 57
 34964                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 34965  01CB48  0012               	return		;funcret
 34966  01CB4A                     __end_of_EXT_INT_Initialize:
 34967                           	opt callstack 0
 34968                           
 34969 ;; *************** function _INT1_SetInterruptHandler *****************
 34970 ;; Defined at:
 34971 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 34972 ;; Parameters:    Size  Location     Type
 34973 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34974 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 34975 ;; Auto vars:     Size  Location     Type
 34976 ;;		None
 34977 ;; Return value:  Size  Location     Type
 34978 ;;                  1  [STACK] void 
 34979 ;; Registers used:
 34980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34981 ;; Tracked objects:
 34982 ;;		On entry : 3F/39
 34983 ;;		On exit  : 0/0
 34984 ;;		Unchanged: 0/0
 34985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34990 ;;Total ram usage:        0 bytes
 34991 ;; Hardware stack levels used:    1
 34992 ;; Hardware stack levels required when called:   15
 34993 ;; This function calls:
 34994 ;;		Nothing
 34995 ;; This function is called by:
 34996 ;;		_EXT_INT_Initialize
 34997 ;;		_start_switch_handler
 34998 ;; This function uses a reentrant model
 34999 ;;
 35000                           
 35001                           	psect	text149
 35002  01CE5A                     __ptext149:
 35003                           	opt callstack 0
 35004  01CE5A                     _INT1_SetInterruptHandler:
 35005                           	opt callstack 14
 35006                           
 35007                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 35008                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35009                           
 35010                           ; BSR set to: 57
 35011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35012                           ;incstack = 0
 35013  01CE5A  50E1               	movf	fsr1l,w,c
 35014  01CE5C  0FFD               	addlw	-3
 35015  01CE5E  6ED9               	movwf	fsr2l,c
 35016  01CE60  50E2               	movf	fsr1h,w,c
 35017  01CE62  6EDA               	movwf	fsr2h,c
 35018  01CE64  0EFF               	movlw	255
 35019  01CE66  22DA               	addwfc	fsr2h,f,c
 35020  01CE68  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 35021  01CE6E  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 35022  01CE74  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 35023                           
 35024                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 35025  01CE7A  52E5               	movf	postdec1,f,c
 35026  01CE7C  52E5               	movf	postdec1,f,c
 35027  01CE7E  52E5               	movf	postdec1,f,c
 35028  01CE80  0012               	return		;funcret
 35029  01CE82                     __end_of_INT1_SetInterruptHandler:
 35030                           	opt callstack 0
 35031                           
 35032 ;; *************** function _INT0_SetInterruptHandler *****************
 35033 ;; Defined at:
 35034 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 35035 ;; Parameters:    Size  Location     Type
 35036 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35037 ;;		 -> INT0_DefaultInterruptHandler(1), 
 35038 ;; Auto vars:     Size  Location     Type
 35039 ;;		None
 35040 ;; Return value:  Size  Location     Type
 35041 ;;                  1  [STACK] void 
 35042 ;; Registers used:
 35043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35044 ;; Tracked objects:
 35045 ;;		On entry : 3F/39
 35046 ;;		On exit  : 0/0
 35047 ;;		Unchanged: 0/0
 35048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35053 ;;Total ram usage:        0 bytes
 35054 ;; Hardware stack levels used:    1
 35055 ;; Hardware stack levels required when called:   15
 35056 ;; This function calls:
 35057 ;;		Nothing
 35058 ;; This function is called by:
 35059 ;;		_EXT_INT_Initialize
 35060 ;; This function uses a reentrant model
 35061 ;;
 35062                           
 35063                           	psect	text150
 35064  01CE82                     __ptext150:
 35065                           	opt callstack 0
 35066  01CE82                     _INT0_SetInterruptHandler:
 35067                           	opt callstack 13
 35068                           
 35069                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 35070                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35071                           
 35072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35073                           ;incstack = 0
 35074  01CE82  50E1               	movf	fsr1l,w,c
 35075  01CE84  0FFD               	addlw	-3
 35076  01CE86  6ED9               	movwf	fsr2l,c
 35077  01CE88  50E2               	movf	fsr1h,w,c
 35078  01CE8A  6EDA               	movwf	fsr2h,c
 35079  01CE8C  0EFF               	movlw	255
 35080  01CE8E  22DA               	addwfc	fsr2h,f,c
 35081  01CE90  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 35082  01CE96  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 35083  01CE9C  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 35084                           
 35085                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 35086  01CEA2  52E5               	movf	postdec1,f,c
 35087  01CEA4  52E5               	movf	postdec1,f,c
 35088  01CEA6  52E5               	movf	postdec1,f,c
 35089  01CEA8  0012               	return		;funcret
 35090  01CEAA                     __end_of_INT0_SetInterruptHandler:
 35091                           	opt callstack 0
 35092                           
 35093 ;; *************** function _DMA2_Initialize *****************
 35094 ;; Defined at:
 35095 ;;		line 61 in file "mcc_generated_files/dma2.c"
 35096 ;; Parameters:    Size  Location     Type
 35097 ;;		None
 35098 ;; Auto vars:     Size  Location     Type
 35099 ;;		None
 35100 ;; Return value:  Size  Location     Type
 35101 ;;                  1  [STACK] void 
 35102 ;; Registers used:
 35103 ;;		wreg, status,2
 35104 ;; Tracked objects:
 35105 ;;		On entry : 3F/3D
 35106 ;;		On exit  : 3F/3B
 35107 ;;		Unchanged: 0/0
 35108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35113 ;;Total ram usage:        0 bytes
 35114 ;; Hardware stack levels used:    1
 35115 ;; Hardware stack levels required when called:   15
 35116 ;; This function calls:
 35117 ;;		Nothing
 35118 ;; This function is called by:
 35119 ;;		_SYSTEM_Initialize
 35120 ;; This function uses a reentrant model
 35121 ;;
 35122                           
 35123                           	psect	text151
 35124  01C33C                     __ptext151:
 35125                           	opt callstack 0
 35126  01C33C                     _DMA2_Initialize:
 35127                           	opt callstack 14
 35128                           
 35129                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 35130                           
 35131                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35132                           ;incstack = 0
 35133  01C33C  0E00               	movlw	0
 35134  01C33E  013B               	movlb	59	; () banked
 35135  01C340  6FD9               	movwf	217,b	;volatile
 35136  01C342  0E10               	movlw	16
 35137  01C344  6FDA               	movwf	218,b	;volatile
 35138  01C346  0E00               	movlw	0
 35139  01C348  6FDB               	movwf	219,b	;volatile
 35140                           
 35141                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 35142  01C34A  0E3F               	movlw	63
 35143  01C34C  6FD1               	movwf	209,b	;volatile
 35144  01C34E  0EBB               	movlw	187
 35145  01C350  6FD0               	movwf	208,b	;volatile
 35146                           
 35147                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 35148  01C352  0E03               	movlw	3
 35149  01C354  6FDD               	movwf	221,b	;volatile
 35150                           
 35151                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 35152  01C356  0E00               	movlw	0
 35153  01C358  6FD8               	movwf	216,b	;volatile
 35154  01C35A  0E01               	movlw	1
 35155  01C35C  6FD7               	movwf	215,b	;volatile
 35156                           
 35157                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 35158  01C35E  0E00               	movlw	0
 35159  01C360  6FCF               	movwf	207,b	;volatile
 35160  01C362  0E01               	movlw	1
 35161  01C364  6FCE               	movwf	206,b	;volatile
 35162                           
 35163                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 35164  01C366  0E1C               	movlw	28
 35165  01C368  6FDF               	movwf	223,b	;volatile
 35166                           
 35167                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 35168  01C36A  0E3D               	movlw	61
 35169  01C36C  6FDE               	movwf	222,b	;volatile
 35170                           
 35171                           ; BSR set to: 59
 35172                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 35173  01C36E  0139               	movlb	57	; () banked
 35174  01C370  97A5               	bcf	165,3,b	;volatile
 35175                           
 35176                           ; BSR set to: 57
 35177                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 35178  01C372  95A5               	bcf	165,2,b	;volatile
 35179                           
 35180                           ; BSR set to: 57
 35181                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 35182  01C374  9BA5               	bcf	165,5,b	;volatile
 35183                           
 35184                           ; BSR set to: 57
 35185                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 35186  01C376  99A5               	bcf	165,4,b	;volatile
 35187                           
 35188                           ; BSR set to: 57
 35189                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 35190  01C378  9795               	bcf	149,3,b	;volatile
 35191                           
 35192                           ; BSR set to: 57
 35193                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 35194  01C37A  9595               	bcf	149,2,b	;volatile
 35195                           
 35196                           ; BSR set to: 57
 35197                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 35198  01C37C  9B95               	bcf	149,5,b	;volatile
 35199                           
 35200                           ; BSR set to: 57
 35201                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 35202  01C37E  9995               	bcf	149,4,b	;volatile
 35203  01C380  9ED2               	bcf	16338,7,c	;# 
 35204  01C382  0139               	banksel	14831	;# 
 35205  01C384  0E55               	movlw	85	;# 
 35206  01C386  6FEF               	movwf	14831,b	;# 
 35207  01C388  0EAA               	movlw	170	;# 
 35208  01C38A  6FEF               	movwf	14831,b	;# 
 35209  01C38C  81EF               	bsf	14831,0,b	;# 
 35210  01C38E  8ED2               	bsf	16338,7,c	;# 
 35211                           
 35212                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 35213  01C390  013B               	movlb	59	; () banked
 35214  01C392  6BDC               	clrf	220,b	;volatile
 35215                           
 35216                           ; BSR set to: 59
 35217                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35218  01C394  0012               	return		;funcret
 35219  01C396                     __end_of_DMA2_Initialize:
 35220                           	opt callstack 0
 35221                           
 35222 ;; *************** function _DMA1_Initialize *****************
 35223 ;; Defined at:
 35224 ;;		line 86 in file "mcc_generated_files/dma1.c"
 35225 ;; Parameters:    Size  Location     Type
 35226 ;;		None
 35227 ;; Auto vars:     Size  Location     Type
 35228 ;;		None
 35229 ;; Return value:  Size  Location     Type
 35230 ;;                  1  [STACK] void 
 35231 ;; Registers used:
 35232 ;;		wreg, status,2
 35233 ;; Tracked objects:
 35234 ;;		On entry : 3F/3B
 35235 ;;		On exit  : 3F/3B
 35236 ;;		Unchanged: 0/0
 35237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35242 ;;Total ram usage:        0 bytes
 35243 ;; Hardware stack levels used:    1
 35244 ;; Hardware stack levels required when called:   15
 35245 ;; This function calls:
 35246 ;;		Nothing
 35247 ;; This function is called by:
 35248 ;;		_SYSTEM_Initialize
 35249 ;; This function uses a reentrant model
 35250 ;;
 35251                           
 35252                           	psect	text152
 35253  01BEF4                     __ptext152:
 35254                           	opt callstack 0
 35255  01BEF4                     _DMA1_Initialize:
 35256                           	opt callstack 14
 35257                           
 35258                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 35259                           
 35260                           ; BSR set to: 59
 35261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35262                           ;incstack = 0
 35263  01BEF4  0E00               	movlw	0
 35264  01BEF6  013B               	movlb	59	; () banked
 35265  01BEF8  6FF9               	movwf	249,b	;volatile
 35266  01BEFA  0E10               	movlw	16
 35267  01BEFC  6FFA               	movwf	250,b	;volatile
 35268  01BEFE  0E00               	movlw	0
 35269  01BF00  6FFB               	movwf	251,b	;volatile
 35270                           
 35271                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 35272  01BF02  0E3D               	movlw	61
 35273  01BF04  6FF1               	movwf	241,b	;volatile
 35274  01BF06  0E11               	movlw	17
 35275  01BF08  6FF0               	movwf	240,b	;volatile
 35276                           
 35277                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 35278  01BF0A  0E03               	movlw	3
 35279  01BF0C  6FFD               	movwf	253,b	;volatile
 35280                           
 35281                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 35282  01BF0E  0E00               	movlw	0
 35283  01BF10  6FF8               	movwf	248,b	;volatile
 35284  01BF12  0E01               	movlw	1
 35285  01BF14  6FF7               	movwf	247,b	;volatile
 35286                           
 35287                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 35288  01BF16  0E00               	movlw	0
 35289  01BF18  6FEF               	movwf	239,b	;volatile
 35290  01BF1A  0E01               	movlw	1
 35291  01BF1C  6FEE               	movwf	238,b	;volatile
 35292                           
 35293                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 35294  01BF1E  0E15               	movlw	21
 35295  01BF20  6FFF               	movwf	255,b	;volatile
 35296                           
 35297                           ; BSR set to: 59
 35298                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 35299  01BF22  6BFE               	clrf	254,b	;volatile
 35300                           
 35301                           ; BSR set to: 59
 35302                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 35303  01BF24  0139               	movlb	57	; () banked
 35304  01BF26  93A2               	bcf	162,1,b	;volatile
 35305                           
 35306                           ; BSR set to: 57
 35307                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 35308  01BF28  91A2               	bcf	162,0,b	;volatile
 35309                           
 35310                           ; BSR set to: 57
 35311                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 35312  01BF2A  97A2               	bcf	162,3,b	;volatile
 35313                           
 35314                           ; BSR set to: 57
 35315                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 35316  01BF2C  95A2               	bcf	162,2,b	;volatile
 35317                           
 35318                           ; BSR set to: 57
 35319                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 35320  01BF2E  8392               	bsf	146,1,b	;volatile
 35321                           
 35322                           ; BSR set to: 57
 35323                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 35324  01BF30  8192               	bsf	146,0,b	;volatile
 35325                           
 35326                           ; BSR set to: 57
 35327                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 35328  01BF32  8792               	bsf	146,3,b	;volatile
 35329                           
 35330                           ; BSR set to: 57
 35331                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 35332  01BF34  8592               	bsf	146,2,b	;volatile
 35333                           
 35334                           ; BSR set to: 57
 35335                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 35336  01BF36  6BF1               	clrf	241,b	;volatile
 35337                           
 35338                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 35339  01BF38  0E01               	movlw	1
 35340  01BF3A  6FF2               	movwf	242,b	;volatile
 35341                           
 35342                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 35343  01BF3C  0E04               	movlw	4
 35344  01BF3E  6FF3               	movwf	243,b	;volatile
 35345                           
 35346                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 35347  01BF40  0E02               	movlw	2
 35348  01BF42  6FF4               	movwf	244,b	;volatile
 35349                           
 35350                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 35351  01BF44  0E03               	movlw	3
 35352  01BF46  6FF7               	movwf	247,b	;volatile
 35353  01BF48  9ED2               	bcf	16338,7,c	;# 
 35354  01BF4A  0139               	banksel	14831	;# 
 35355  01BF4C  0E55               	movlw	85	;# 
 35356  01BF4E  6FEF               	movwf	14831,b	;# 
 35357  01BF50  0EAA               	movlw	170	;# 
 35358  01BF52  6FEF               	movwf	14831,b	;# 
 35359  01BF54  81EF               	bsf	14831,0,b	;# 
 35360  01BF56  8ED2               	bsf	16338,7,c	;# 
 35361                           
 35362                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 35363  01BF58  013B               	movlb	59	; () banked
 35364  01BF5A  6BFC               	clrf	252,b	;volatile
 35365                           
 35366                           ; BSR set to: 59
 35367                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35368  01BF5C  0012               	return		;funcret
 35369  01BF5E                     __end_of_DMA1_Initialize:
 35370                           	opt callstack 0
 35371                           
 35372 ;; *************** function _CRC_Initialize *****************
 35373 ;; Defined at:
 35374 ;;		line 76 in file "mcc_generated_files/crc.c"
 35375 ;; Parameters:    Size  Location     Type
 35376 ;;		None
 35377 ;; Auto vars:     Size  Location     Type
 35378 ;;  seed            2  [STACK] unsigned short 
 35379 ;;  poly            2  [STACK] unsigned short 
 35380 ;; Return value:  Size  Location     Type
 35381 ;;                  1  [STACK] void 
 35382 ;; Registers used:
 35383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 35384 ;; Tracked objects:
 35385 ;;		On entry : 0/39
 35386 ;;		On exit  : 3F/0
 35387 ;;		Unchanged: 0/0
 35388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35393 ;;Total ram usage:        0 bytes
 35394 ;; Hardware stack levels used:    1
 35395 ;; Hardware stack levels required when called:   15
 35396 ;; This function calls:
 35397 ;;		Nothing
 35398 ;; This function is called by:
 35399 ;;		_SYSTEM_Initialize
 35400 ;;		_read_cal_data
 35401 ;;		_write_cal_data
 35402 ;; This function uses a reentrant model
 35403 ;;
 35404                           
 35405                           	psect	text153
 35406  01BA70                     __ptext153:
 35407                           	opt callstack 0
 35408  01BA70                     _CRC_Initialize:
 35409                           	opt callstack 0
 35410                           
 35411                           ; BSR set to: 59
 35412                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35413  01BA70  52E6               	movf	postinc1,f,c
 35414  01BA72  52E6               	movf	postinc1,f,c
 35415  01BA74  52E6               	movf	postinc1,f,c
 35416  01BA76  52E6               	movf	postinc1,f,c
 35417                           
 35418                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 35419                           
 35420                           ;incstack = 0
 35421  01BA78  0E80               	movlw	128
 35422  01BA7A  0139               	movlb	57	; () banked
 35423  01BA7C  6F68               	movwf	104,b	;volatile
 35424                           
 35425                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 35426  01BA7E  0E07               	movlw	7
 35427  01BA80  6F69               	movwf	105,b	;volatile
 35428                           
 35429                           ; BSR set to: 57
 35430                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 35431  01BA82  6B62               	clrf	98,b	;volatile
 35432                           
 35433                           ; BSR set to: 57
 35434                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 35435  01BA84  6B63               	clrf	99,b	;volatile
 35436                           
 35437                           ; BSR set to: 57
 35438                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 35439  01BA86  6B7C               	clrf	124,b	;volatile
 35440                           
 35441                           ; BSR set to: 57
 35442                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 35443  01BA88  6B78               	clrf	120,b	;volatile
 35444                           
 35445                           ; BSR set to: 57
 35446                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 35447  01BA8A  6B77               	clrf	119,b	;volatile
 35448                           
 35449                           ; BSR set to: 57
 35450                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 35451  01BA8C  6B76               	clrf	118,b	;volatile
 35452                           
 35453                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 35454  01BA8E  0E3F               	movlw	63
 35455  01BA90  6F7B               	movwf	123,b	;volatile
 35456                           
 35457                           ; BSR set to: 57
 35458                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 35459  01BA92  697A               	setf	122,b	;volatile
 35460                           
 35461                           ; BSR set to: 57
 35462                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 35463  01BA94  6979               	setf	121,b	;volatile
 35464                           
 35465                           ; BSR set to: 57
 35466                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 35467  01BA96  6B7D               	clrf	125,b	;volatile
 35468                           
 35469                           ; BSR set to: 57
 35470                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 35471  01BA98  0ED5               	movlw	213
 35472  01BA9A  6E0B               	movwf	(btemp+10)^0,c
 35473  01BA9C  0E00               	movlw	0
 35474  01BA9E  6E0C               	movwf	(btemp+11)^0,c
 35475                           
 35476                           ;stkvar	_poly @ sp[(-4)+2]
 35477  01BAA0  0EFE               	movlw	-2
 35478  01BAA2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35479  01BAA8  0EFF               	movlw	-1
 35480  01BAAA  0060  F033  FFE3   	movff	btemp+11,plusw1
 35481                           
 35482                           ; BSR set to: 57
 35483                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 35484                           ;stkvar	_poly @ sp[(-4)+2]
 35485  01BAB0  0EFF               	movlw	255
 35486  01BAB2  24E1               	addwf	fsr1l,w,c
 35487  01BAB4  6ED9               	movwf	fsr2l,c
 35488  01BAB6  0EFF               	movlw	255
 35489  01BAB8  20E2               	addwfc	fsr1h,w,c
 35490  01BABA  6EDA               	movwf	fsr2h,c
 35491  01BABC  50DF               	movf	indf2,w,c
 35492  01BABE  6F67               	movwf	103,b	;volatile
 35493                           
 35494                           ; BSR set to: 57
 35495                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 35496  01BAC0  0ED5               	movlw	213
 35497  01BAC2  6F66               	movwf	102,b	;volatile
 35498                           
 35499                           ; BSR set to: 57
 35500                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 35501                           ;stkvar	_seed @ sp[(-4)+0]
 35502  01BAC4  0EFC               	movlw	-4
 35503  01BAC6  6AE3               	clrf	plusw1,c
 35504  01BAC8  0EFD               	movlw	-3
 35505  01BACA  6AE3               	clrf	plusw1,c
 35506                           
 35507                           ; BSR set to: 57
 35508                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 35509                           ;stkvar	_seed @ sp[(-4)+0]
 35510  01BACC  0EFD               	movlw	253
 35511  01BACE  24E1               	addwf	fsr1l,w,c
 35512  01BAD0  6ED9               	movwf	fsr2l,c
 35513  01BAD2  0EFF               	movlw	255
 35514  01BAD4  20E2               	addwfc	fsr1h,w,c
 35515  01BAD6  6EDA               	movwf	fsr2h,c
 35516  01BAD8  50DF               	movf	indf2,w,c
 35517  01BADA  6F63               	movwf	99,b	;volatile
 35518                           
 35519                           ; BSR set to: 57
 35520                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 35521  01BADC  6B62               	clrf	98,b	;volatile
 35522                           
 35523                           ; BSR set to: 57
 35524                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 35525  01BADE  3969               	swapf	105,w,b	;volatile
 35526  01BAE0  0B0F               	andlw	15
 35527  01BAE2  6E0C               	movwf	(btemp+11)^0,c
 35528  01BAE4  280C               	incf	(btemp+11)^0,w,c
 35529  01BAE6  0100               	movlb	0	; () banked
 35530  01BAE8  6FD5               	movwf	_crcObj& (0+255),b
 35531                           
 35532                           ; BSR set to: 0
 35533                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 35534  01BAEA  0139               	movlb	57	; () banked
 35535  01BAEC  5169               	movf	105,w,b	;volatile
 35536  01BAEE  0B0F               	andlw	15
 35537  01BAF0  6E0C               	movwf	(btemp+11)^0,c
 35538  01BAF2  280C               	incf	(btemp+11)^0,w,c
 35539  01BAF4  0100               	movlb	0	; () banked
 35540  01BAF6  6FD6               	movwf	(_crcObj+1)& (0+255),b
 35541                           
 35542                           ; BSR set to: 0
 35543                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 35544  01BAF8  52E5               	movf	postdec1,f,c
 35545  01BAFA  52E5               	movf	postdec1,f,c
 35546  01BAFC  52E5               	movf	postdec1,f,c
 35547  01BAFE  52E5               	movf	postdec1,f,c
 35548  01BB00  0012               	return		;funcret
 35549  01BB02                     __end_of_CRC_Initialize:
 35550                           	opt callstack 0
 35551                           
 35552 ;; *************** function _CLKREF_Initialize *****************
 35553 ;; Defined at:
 35554 ;;		line 58 in file "mcc_generated_files/clkref.c"
 35555 ;; Parameters:    Size  Location     Type
 35556 ;;		None
 35557 ;; Auto vars:     Size  Location     Type
 35558 ;;		None
 35559 ;; Return value:  Size  Location     Type
 35560 ;;                  1  [STACK] void 
 35561 ;; Registers used:
 35562 ;;		wreg, status,2
 35563 ;; Tracked objects:
 35564 ;;		On entry : 3F/3B
 35565 ;;		On exit  : 3F/3C
 35566 ;;		Unchanged: 0/0
 35567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35572 ;;Total ram usage:        0 bytes
 35573 ;; Hardware stack levels used:    1
 35574 ;; Hardware stack levels required when called:   15
 35575 ;; This function calls:
 35576 ;;		Nothing
 35577 ;; This function is called by:
 35578 ;;		_SYSTEM_Initialize
 35579 ;; This function uses a reentrant model
 35580 ;;
 35581                           
 35582                           	psect	text154
 35583  01D302                     __ptext154:
 35584                           	opt callstack 0
 35585  01D302                     _CLKREF_Initialize:
 35586                           	opt callstack 14
 35587                           
 35588                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 35589                           
 35590                           ; BSR set to: 0
 35591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35592                           ;incstack = 0
 35593  01D302  013C               	movlb	60	; () banked
 35594  01D304  6BE6               	clrf	230,b	;volatile
 35595                           
 35596                           ; BSR set to: 60
 35597                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 35598  01D306  0E94               	movlw	148
 35599  01D308  6FE5               	movwf	229,b	;volatile
 35600                           
 35601                           ; BSR set to: 60
 35602                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35603  01D30A  0012               	return		;funcret
 35604  01D30C                     __end_of_CLKREF_Initialize:
 35605                           	opt callstack 0
 35606                           
 35607 ;; *************** function _ADCC_Initialize *****************
 35608 ;; Defined at:
 35609 ;;		line 65 in file "mcc_generated_files/adcc.c"
 35610 ;; Parameters:    Size  Location     Type
 35611 ;;		None
 35612 ;; Auto vars:     Size  Location     Type
 35613 ;;		None
 35614 ;; Return value:  Size  Location     Type
 35615 ;;                  1  [STACK] void 
 35616 ;; Registers used:
 35617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 35618 ;; Tracked objects:
 35619 ;;		On entry : 3F/0
 35620 ;;		On exit  : 0/0
 35621 ;;		Unchanged: 0/0
 35622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35627 ;;Total ram usage:        0 bytes
 35628 ;; Hardware stack levels used:    1
 35629 ;; Hardware stack levels required when called:   16
 35630 ;; This function calls:
 35631 ;;		_ADCC_SetADIInterruptHandler
 35632 ;;		_ADCC_SetADTIInterruptHandler
 35633 ;; This function is called by:
 35634 ;;		_SYSTEM_Initialize
 35635 ;; This function uses a reentrant model
 35636 ;;
 35637                           
 35638                           	psect	text155
 35639  01BF5E                     __ptext155:
 35640                           	opt callstack 0
 35641  01BF5E                     _ADCC_Initialize:
 35642                           	opt callstack 13
 35643                           
 35644                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 35645                           
 35646                           ; BSR set to: 60
 35647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35648                           ;incstack = 0
 35649  01BF5E  013E               	movlb	62	; () banked
 35650  01BF60  6BDE               	clrf	222,b	;volatile
 35651                           
 35652                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 35653  01BF62  6BDF               	clrf	223,b	;volatile
 35654                           
 35655                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 35656  01BF64  6BE0               	clrf	224,b	;volatile
 35657                           
 35658                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 35659  01BF66  6BE1               	clrf	225,b	;volatile
 35660                           
 35661                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 35662  01BF68  6BE4               	clrf	228,b	;volatile
 35663                           
 35664                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 35665  01BF6A  6BE5               	clrf	229,b	;volatile
 35666                           
 35667                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 35668  01BF6C  6BEA               	clrf	234,b	;volatile
 35669                           
 35670                           ; BSR set to: 62
 35671                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 35672  01BF6E  0E40               	movlw	64
 35673  01BF70  6FEC               	movwf	236,b	;volatile
 35674                           
 35675                           ; BSR set to: 62
 35676                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 35677  01BF72  6BF1               	clrf	241,b	;volatile
 35678                           
 35679                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 35680  01BF74  0E20               	movlw	32
 35681  01BF76  6FF3               	movwf	243,b	;volatile
 35682                           
 35683                           ; BSR set to: 62
 35684                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 35685  01BF78  6BF4               	clrf	244,b	;volatile
 35686                           
 35687                           ; BSR set to: 62
 35688                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 35689  01BF7A  6BF5               	clrf	245,b	;volatile
 35690                           
 35691                           ; BSR set to: 62
 35692                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 35693  01BF7C  6BF6               	clrf	246,b	;volatile
 35694                           
 35695                           ; BSR set to: 62
 35696                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 35697  01BF7E  6BF7               	clrf	247,b	;volatile
 35698                           
 35699                           ; BSR set to: 62
 35700                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 35701  01BF80  6BF9               	clrf	249,b	;volatile
 35702                           
 35703                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 35704  01BF82  0E5B               	movlw	91
 35705  01BF84  6FFA               	movwf	250,b	;volatile
 35706                           
 35707                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 35708  01BF86  0E27               	movlw	39
 35709  01BF88  6FFB               	movwf	251,b	;volatile
 35710                           
 35711                           ; BSR set to: 62
 35712                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 35713  01BF8A  6BFC               	clrf	252,b	;volatile
 35714                           
 35715                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 35716  01BF8C  0E02               	movlw	2
 35717  01BF8E  6FFD               	movwf	253,b	;volatile
 35718                           
 35719                           ; BSR set to: 62
 35720                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 35721  01BF90  6BFE               	clrf	254,b	;volatile
 35722                           
 35723                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 35724  01BF92  0E07               	movlw	7
 35725  01BF94  6FFF               	movwf	255,b	;volatile
 35726                           
 35727                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 35728  01BF96  0E84               	movlw	132
 35729  01BF98  6FF8               	movwf	248,b	;volatile
 35730                           
 35731                           ; BSR set to: 62
 35732                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 35733  01BF9A  0139               	movlb	57	; () banked
 35734  01BF9C  95A1               	bcf	161,2,b	;volatile
 35735                           
 35736                           ; BSR set to: 57
 35737                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 35738  01BF9E  8591               	bsf	145,2,b	;volatile
 35739                           
 35740                           ; BSR set to: 57
 35741                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 35742  01BFA0  0E98               	movlw	low _ADCC_DefaultInterruptHandler
 35743  01BFA2  6EE6               	movwf	postinc1,c
 35744  01BFA4  0ED3               	movlw	high _ADCC_DefaultInterruptHandler
 35745  01BFA6  6EE6               	movwf	postinc1,c
 35746  01BFA8  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 35747  01BFAA  6EE6               	movwf	postinc1,c
 35748  01BFAC  EC69  F0E7         	call	_ADCC_SetADIInterruptHandler	;wreg free
 35749                           
 35750                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 35751  01BFB0  0139               	movlb	57	; () banked
 35752  01BFB2  97A1               	bcf	161,3,b	;volatile
 35753                           
 35754                           ; BSR set to: 57
 35755                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 35756  01BFB4  8791               	bsf	145,3,b	;volatile
 35757                           
 35758                           ; BSR set to: 57
 35759                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 35760  01BFB6  0E98               	movlw	low _ADCC_DefaultInterruptHandler
 35761  01BFB8  6EE6               	movwf	postinc1,c
 35762  01BFBA  0ED3               	movlw	high _ADCC_DefaultInterruptHandler
 35763  01BFBC  6EE6               	movwf	postinc1,c
 35764  01BFBE  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 35765  01BFC0  6EE6               	movwf	postinc1,c
 35766  01BFC2  EC55  F0E7         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 35767                           
 35768                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35769  01BFC6  0012               	return		;funcret
 35770  01BFC8                     __end_of_ADCC_Initialize:
 35771                           	opt callstack 0
 35772                           
 35773 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 35774 ;; Defined at:
 35775 ;;		line 336 in file "mcc_generated_files/adcc.c"
 35776 ;; Parameters:    Size  Location     Type
 35777 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35778 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 35779 ;; Auto vars:     Size  Location     Type
 35780 ;;		None
 35781 ;; Return value:  Size  Location     Type
 35782 ;;                  1  [STACK] void 
 35783 ;; Registers used:
 35784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35785 ;; Tracked objects:
 35786 ;;		On entry : 0/2
 35787 ;;		On exit  : 0/0
 35788 ;;		Unchanged: 0/0
 35789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35794 ;;Total ram usage:        0 bytes
 35795 ;; Hardware stack levels used:    1
 35796 ;; Hardware stack levels required when called:   15
 35797 ;; This function calls:
 35798 ;;		Nothing
 35799 ;; This function is called by:
 35800 ;;		_ADCC_Initialize
 35801 ;;		_start_adc_scan
 35802 ;; This function uses a reentrant model
 35803 ;;
 35804                           
 35805                           	psect	text156
 35806  01CEAA                     __ptext156:
 35807                           	opt callstack 0
 35808  01CEAA                     _ADCC_SetADTIInterruptHandler:
 35809                           	opt callstack 14
 35810                           
 35811                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 35812                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35813                           
 35814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35815                           ;incstack = 0
 35816  01CEAA  50E1               	movf	fsr1l,w,c
 35817  01CEAC  0FFD               	addlw	-3
 35818  01CEAE  6ED9               	movwf	fsr2l,c
 35819  01CEB0  50E2               	movf	fsr1h,w,c
 35820  01CEB2  6EDA               	movwf	fsr2h,c
 35821  01CEB4  0EFF               	movlw	255
 35822  01CEB6  22DA               	addwfc	fsr2h,f,c
 35823  01CEB8  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 35824  01CEBE  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 35825  01CEC4  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 35826                           
 35827                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 35828  01CECA  52E5               	movf	postdec1,f,c
 35829  01CECC  52E5               	movf	postdec1,f,c
 35830  01CECE  52E5               	movf	postdec1,f,c
 35831  01CED0  0012               	return		;funcret
 35832  01CED2                     __end_of_ADCC_SetADTIInterruptHandler:
 35833                           	opt callstack 0
 35834                           
 35835 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 35836 ;; Defined at:
 35837 ;;		line 323 in file "mcc_generated_files/adcc.c"
 35838 ;; Parameters:    Size  Location     Type
 35839 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35840 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 35841 ;; Auto vars:     Size  Location     Type
 35842 ;;		None
 35843 ;; Return value:  Size  Location     Type
 35844 ;;                  1  [STACK] void 
 35845 ;; Registers used:
 35846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35847 ;; Tracked objects:
 35848 ;;		On entry : 4/2
 35849 ;;		On exit  : 0/0
 35850 ;;		Unchanged: 0/0
 35851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35856 ;;Total ram usage:        0 bytes
 35857 ;; Hardware stack levels used:    1
 35858 ;; Hardware stack levels required when called:   15
 35859 ;; This function calls:
 35860 ;;		Nothing
 35861 ;; This function is called by:
 35862 ;;		_ADCC_Initialize
 35863 ;;		_start_adc_scan
 35864 ;; This function uses a reentrant model
 35865 ;;
 35866                           
 35867                           	psect	text157
 35868  01CED2                     __ptext157:
 35869                           	opt callstack 0
 35870  01CED2                     _ADCC_SetADIInterruptHandler:
 35871                           	opt callstack 14
 35872                           
 35873                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 35874                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35875                           
 35876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35877                           ;incstack = 0
 35878  01CED2  50E1               	movf	fsr1l,w,c
 35879  01CED4  0FFD               	addlw	-3
 35880  01CED6  6ED9               	movwf	fsr2l,c
 35881  01CED8  50E2               	movf	fsr1h,w,c
 35882  01CEDA  6EDA               	movwf	fsr2h,c
 35883  01CEDC  0EFF               	movlw	255
 35884  01CEDE  22DA               	addwfc	fsr2h,f,c
 35885  01CEE0  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 35886  01CEE6  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 35887  01CEEC  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 35888                           
 35889                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35890  01CEF2  52E5               	movf	postdec1,f,c
 35891  01CEF4  52E5               	movf	postdec1,f,c
 35892  01CEF6  52E5               	movf	postdec1,f,c
 35893  01CEF8  0012               	return		;funcret
 35894  01CEFA                     __end_of_ADCC_SetADIInterruptHandler:
 35895                           	opt callstack 0
 35896                           
 35897 ;; *************** function _INT1_ISR *****************
 35898 ;; Defined at:
 35899 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 35900 ;; Parameters:    Size  Location     Type
 35901 ;;		None
 35902 ;; Auto vars:     Size  Location     Type
 35903 ;;		None
 35904 ;; Return value:  Size  Location     Type
 35905 ;;                  1    wreg      void 
 35906 ;; Registers used:
 35907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 35908 ;; Tracked objects:
 35909 ;;		On entry : 0/0
 35910 ;;		On exit  : 0/0
 35911 ;;		Unchanged: 0/0
 35912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35915 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35916 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35917 ;;Total ram usage:        4 bytes
 35918 ;; Hardware stack levels used:    1
 35919 ;; Hardware stack levels required when called:    5
 35920 ;; This function calls:
 35921 ;;		_INT1_CallBack
 35922 ;; This function is called by:
 35923 ;;		Interrupt level 1
 35924 ;; This function uses a non-reentrant model
 35925 ;;
 35926                           
 35927                           	psect	text158
 35928  01C928                     __ptext158:
 35929                           	opt callstack 0
 35930  01C928                     _INT1_ISR:
 35931                           	opt callstack 11
 35932                           
 35933                           ;incstack = 0
 35934  01C928  006F FF60  F027    	movff	status,??_INT1_ISR
 35935  01C92E  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 35936  01C934  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 35937  01C93A  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 35938  01C940  EE16  F162         	lfsr	1,___intlo_sp
 35939                           
 35940                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 35941  01C944  0139               	movlb	57	; () banked
 35942  01C946  91A5               	bcf	165,0,b	;volatile
 35943                           
 35944                           ; BSR set to: 57
 35945                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 35946  01C948  ECCC  F0E7         	call	_INT1_CallBack	;wreg free
 35947  01C94C  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 35948  01C952  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 35949  01C958  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 35950  01C95E  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 35951  01C964  0011               	retfie		f
 35952  01C966                     __end_of_INT1_ISR:
 35953                           	opt callstack 0
 35954                           
 35955 ;; *************** function _INT1_CallBack *****************
 35956 ;; Defined at:
 35957 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 35958 ;; Parameters:    Size  Location     Type
 35959 ;;		None
 35960 ;; Auto vars:     Size  Location     Type
 35961 ;;		None
 35962 ;; Return value:  Size  Location     Type
 35963 ;;                  1  [STACK] void 
 35964 ;; Registers used:
 35965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 35966 ;; Tracked objects:
 35967 ;;		On entry : 3F/39
 35968 ;;		On exit  : 0/0
 35969 ;;		Unchanged: 0/0
 35970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35975 ;;Total ram usage:        0 bytes
 35976 ;; Hardware stack levels used:    1
 35977 ;; Hardware stack levels required when called:    4
 35978 ;; This function calls:
 35979 ;;		Absolute function
 35980 ;;		_INT1_DefaultInterruptHandler
 35981 ;;		_switch_handler
 35982 ;; This function is called by:
 35983 ;;		_INT1_ISR
 35984 ;; This function uses a reentrant model
 35985 ;;
 35986                           
 35987                           	psect	text159
 35988  01CF98                     __ptext159:
 35989                           	opt callstack 0
 35990  01CF98                     _INT1_CallBack:
 35991                           	opt callstack 11
 35992                           
 35993                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 35994                           
 35995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35996                           ;incstack = 0
 35997  01CF98  0100               	movlb	0	; () banked
 35998  01CF9A  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 35999  01CF9C  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 36000  01CF9E  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 36001  01CFA0  B4D8               	btfsc	status,2,c
 36002  01CFA2  0012               	return	
 36003                           
 36004                           ; BSR set to: 0
 36005                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 36006  01CFA4  D801               	call	u1084_28
 36007  01CFA6  0012               	return	
 36008  01CFA8                     u1084_28:
 36009  01CFA8  0005               	push	
 36010  01CFAA  6EFA               	movwf	pclath,c
 36011  01CFAC  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 36012  01CFAE  6EFD               	movwf	tosl,c
 36013  01CFB0  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 36014  01CFB2  6EFE               	movwf	tosh,c
 36015  01CFB4  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 36016  01CFB6  6EFF               	movwf	tosu,c
 36017  01CFB8  50FA               	movf	pclath,w,c
 36018  01CFBA  0012               	return		;indir
 36019  01CFBC                     __end_of_INT1_CallBack:
 36020                           	opt callstack 0
 36021                           
 36022 ;; *************** function _INT1_DefaultInterruptHandler *****************
 36023 ;; Defined at:
 36024 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 36025 ;; Parameters:    Size  Location     Type
 36026 ;;		None
 36027 ;; Auto vars:     Size  Location     Type
 36028 ;;		None
 36029 ;; Return value:  Size  Location     Type
 36030 ;;                  1  [STACK] void 
 36031 ;; Registers used:
 36032 ;;		None
 36033 ;; Tracked objects:
 36034 ;;		On entry : 3F/0
 36035 ;;		On exit  : 0/0
 36036 ;;		Unchanged: 0/0
 36037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36042 ;;Total ram usage:        0 bytes
 36043 ;; Hardware stack levels used:    1
 36044 ;; Hardware stack levels required when called:    3
 36045 ;; This function calls:
 36046 ;;		Nothing
 36047 ;; This function is called by:
 36048 ;;		_EXT_INT_Initialize
 36049 ;;		_INT1_CallBack
 36050 ;; This function uses a reentrant model
 36051 ;;
 36052                           
 36053                           	psect	text160
 36054  01D392                     __ptext160:
 36055                           	opt callstack 0
 36056  01D392                     _INT1_DefaultInterruptHandler:
 36057                           	opt callstack 11
 36058                           
 36059                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36060                           
 36061                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36062                           ;incstack = 0
 36063  01D392  0012               	return		;funcret
 36064  01D394                     __end_of_INT1_DefaultInterruptHandler:
 36065                           	opt callstack 0
 36066                           
 36067 ;; *************** function _switch_handler *****************
 36068 ;; Defined at:
 36069 ;;		line 58 in file "dio.c"
 36070 ;; Parameters:    Size  Location     Type
 36071 ;;		None
 36072 ;; Auto vars:     Size  Location     Type
 36073 ;;  i               1  [STACK] unsigned char 
 36074 ;;  sw_value        1  [STACK] unsigned char 
 36075 ;; Return value:  Size  Location     Type
 36076 ;;                  1  [STACK] void 
 36077 ;; Registers used:
 36078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 36079 ;; Tracked objects:
 36080 ;;		On entry : 3F/0
 36081 ;;		On exit  : 0/0
 36082 ;;		Unchanged: 0/0
 36083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36088 ;;Total ram usage:        0 bytes
 36089 ;; Hardware stack levels used:    1
 36090 ;; Hardware stack levels required when called:    3
 36091 ;; This function calls:
 36092 ;;		Nothing
 36093 ;; This function is called by:
 36094 ;;		_start_switch_handler
 36095 ;;		_INT1_CallBack
 36096 ;; This function uses a reentrant model
 36097 ;;
 36098                           
 36099                           	psect	text161
 36100  019E38                     __ptext161:
 36101                           	opt callstack 0
 36102  019E38                     _switch_handler:
 36103                           	opt callstack 0
 36104                           
 36105                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36106  019E38  52E6               	movf	postinc1,f,c
 36107  019E3A  52E6               	movf	postinc1,f,c
 36108                           
 36109                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 36110                           ;stkvar	_i @ sp[(-2)+0]
 36111                           
 36112                           ;incstack = 0
 36113  019E3C  0EFE               	movlw	-2
 36114  019E3E  6AE3               	clrf	plusw1,c
 36115  019E40  9ABF               	bcf	191,5,c	;volatile
 36116                           
 36117                           ;dio.c: 72:  __nop();
 36118  019E42  F000               	nop	
 36119                           
 36120                           ;dio.c: 73:  __nop();
 36121  019E44  F000               	nop	
 36122                           
 36123                           ;dio.c: 74:  __nop();
 36124  019E46  F000               	nop	
 36125                           
 36126                           ;dio.c: 75:  __nop();
 36127  019E48  F000               	nop	
 36128                           
 36129                           ;dio.c: 76:  __nop();
 36130  019E4A  F000               	nop	
 36131                           
 36132                           ;dio.c: 77:  __nop();
 36133  019E4C  F000               	nop	
 36134  019E4E  D016               	goto	l11578
 36135  019E50                     l11564:
 36136                           
 36137                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 36138  019E50  A6CF               	btfss	207,3,c	;volatile
 36139  019E52  D00E               	goto	u1050_20
 36140  019E54  D00A               	goto	u1050_21
 36141  019E56                     u1048_28:
 36142                           
 36143                           ;stkvar	_sw_value @ sp[(-2)+1]
 36144  019E56  0EFF               	movlw	-1
 36145  019E58  0060  F033  FFE3   	movff	btemp+11,plusw1
 36146                           
 36147                           ;dio.c: 83:    break;
 36148  019E5E  D027               	goto	l11580
 36149  019E60                     l11566:
 36150                           
 36151                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 36152  019E60  A4CF               	btfss	207,2,c	;volatile
 36153  019E62  D006               	goto	u1050_20
 36154  019E64  D002               	goto	u1050_21
 36155  019E66                     l11568:
 36156                           
 36157                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 36158  019E66  A6CD               	btfss	205,3,c	;volatile
 36159  019E68  D003               	goto	u1050_20
 36160  019E6A                     u1050_21:
 36161  019E6A  6A0C               	clrf	(btemp+11)^0,c
 36162  019E6C  2A0C               	incf	(btemp+11)^0,f,c
 36163  019E6E  D7F3               	goto	u1048_28
 36164  019E70                     u1050_20:
 36165  019E70  6A0C               	clrf	(btemp+11)^0,c
 36166  019E72  D7F1               	goto	u1048_28
 36167  019E74                     l11570:
 36168                           
 36169                           ;dio.c: 91:    sw_value = 1;
 36170                           ;stkvar	_sw_value @ sp[(-2)+1]
 36171  019E74  0EFF               	movlw	-1
 36172  019E76  6AE3               	clrf	plusw1,c
 36173  019E78  2AE3               	incf	plusw1,f,c
 36174                           
 36175                           ;dio.c: 92:    break;
 36176  019E7A  D019               	goto	l11580
 36177  019E7C                     l11578:
 36178                           
 36179                           ;stkvar	_i @ sp[(-2)+0]
 36180  019E7C  0EFE               	movlw	-2
 36181  019E7E  50E3               	movf	plusw1,w,c
 36182  019E80  6E0B               	movwf	(btemp+10)^0,c
 36183  019E82  6A0C               	clrf	(btemp+11)^0,c
 36184                           
 36185                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36186                           ; Switch size 1, requested type "simple"
 36187                           ; Number of cases is 1, Range of values is 0 to 0
 36188                           ; switch strategies available:
 36189                           ; Name         Instructions Cycles
 36190                           ; simple_byte            4     3 (average)
 36191                           ;	Chosen strategy is simple_byte
 36192  019E84  500C               	movf	(btemp+11)^0,w,c
 36193  019E86  0A00               	xorlw	0	; case 0
 36194  019E88  A4D8               	btfss	status,2,c
 36195  019E8A  D7F4               	goto	l11570
 36196                           
 36197                           ; Switch size 1, requested type "simple"
 36198                           ; Number of cases is 5, Range of values is 0 to 4
 36199                           ; switch strategies available:
 36200                           ; Name         Instructions Cycles
 36201                           ; simple_byte           16     9 (average)
 36202                           ;	Chosen strategy is simple_byte
 36203  019E8C  500B               	movf	(btemp+10)^0,w,c
 36204  019E8E  0A00               	xorlw	0	; case 0
 36205  019E90  B4D8               	btfsc	status,2,c
 36206  019E92  D7F0               	goto	l11570
 36207  019E94  0A01               	xorlw	1	; case 1
 36208  019E96  B4D8               	btfsc	status,2,c
 36209  019E98  D7ED               	goto	l11570
 36210  019E9A  0A03               	xorlw	3	; case 2
 36211  019E9C  B4D8               	btfsc	status,2,c
 36212  019E9E  D7E0               	goto	l11566
 36213  019EA0  0A01               	xorlw	1	; case 3
 36214  019EA2  B4D8               	btfsc	status,2,c
 36215  019EA4  D7D5               	goto	l11564
 36216  019EA6  0A07               	xorlw	7	; case 4
 36217  019EA8  B4D8               	btfsc	status,2,c
 36218  019EAA  D7DD               	goto	l11568
 36219  019EAC  D7E3               	goto	l11570
 36220  019EAE                     l11580:
 36221                           
 36222                           ;dio.c: 102:   if (sw_value) {
 36223                           ;stkvar	_sw_value @ sp[(-2)+1]
 36224  019EAE  0EFF               	movlw	-1
 36225  019EB0  50E3               	movf	plusw1,w,c
 36226  019EB2  B4D8               	btfsc	status,2,c
 36227  019EB4  D018               	goto	l11586
 36228                           
 36229                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 36230                           ;stkvar	_i @ sp[(-2)+0]
 36231  019EB6  0EFE               	movlw	-2
 36232  019EB8  50E3               	movf	plusw1,w,c
 36233  019EBA  0D05               	mullw	5
 36234  019EBC  0EC7               	movlw	low _S
 36235  019EBE  24F3               	addwf	243,w,c
 36236  019EC0  6ED9               	movwf	fsr2l,c
 36237  019EC2  0E01               	movlw	high _S
 36238  019EC4  20F4               	addwfc	prodh,w,c
 36239  019EC6  6EDA               	movwf	fsr2h,c
 36240  019EC8  04DE               	decf	postinc2,w,c
 36241  019ECA  A4D8               	btfss	status,2,c
 36242  019ECC  D049               	goto	l11594
 36243                           
 36244                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 36245                           ;stkvar	_i @ sp[(-2)+0]
 36246  019ECE  0EFE               	movlw	-2
 36247  019ED0  50E3               	movf	plusw1,w,c
 36248  019ED2  0D05               	mullw	5
 36249  019ED4  0EC7               	movlw	low _S
 36250  019ED6  24F3               	addwf	243,w,c
 36251  019ED8  6ED9               	movwf	fsr2l,c
 36252  019EDA  0E01               	movlw	high _S
 36253  019EDC  20F4               	addwfc	prodh,w,c
 36254  019EDE  6EDA               	movwf	fsr2h,c
 36255  019EE0  0E00               	movlw	0
 36256  019EE2  6EDF               	movwf	indf2,c
 36257  019EE4  D03D               	goto	l11594
 36258  019EE6                     l11586:
 36259                           
 36260                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 36261                           ;stkvar	_i @ sp[(-2)+0]
 36262  019EE6  0EFE               	movlw	-2
 36263  019EE8  50E3               	movf	plusw1,w,c
 36264  019EEA  0D05               	mullw	5
 36265  019EEC  0EC7               	movlw	low _S
 36266  019EEE  24F3               	addwf	243,w,c
 36267  019EF0  6ED9               	movwf	fsr2l,c
 36268  019EF2  0E01               	movlw	high _S
 36269  019EF4  20F4               	addwfc	prodh,w,c
 36270  019EF6  6EDA               	movwf	fsr2h,c
 36271  019EF8  50DF               	movf	indf2,w,c
 36272  019EFA  A4D8               	btfss	status,2,c
 36273  019EFC  D031               	goto	l11594
 36274                           
 36275                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 36276                           ;stkvar	_i @ sp[(-2)+0]
 36277  019EFE  0EFE               	movlw	-2
 36278  019F00  50E3               	movf	plusw1,w,c
 36279  019F02  0D05               	mullw	5
 36280  019F04  0EC7               	movlw	low _S
 36281  019F06  24F3               	addwf	243,w,c
 36282  019F08  6ED9               	movwf	fsr2l,c
 36283  019F0A  0E01               	movlw	high _S
 36284  019F0C  20F4               	addwfc	prodh,w,c
 36285  019F0E  6EDA               	movwf	fsr2h,c
 36286  019F10  0E01               	movlw	1
 36287  019F12  6EDF               	movwf	indf2,c
 36288                           
 36289                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 36290  019F14  EE20  F1C3         	lfsr	2,_V+188	;volatile
 36291                           
 36292                           ;stkvar	_i @ sp[(-2)+0]
 36293  019F18  0EFE               	movlw	-2
 36294  019F1A  50E3               	movf	plusw1,w,c
 36295  019F1C  0D05               	mullw	5
 36296  019F1E  0EC8               	movlw	low (_S+1)
 36297  019F20  24F3               	addwf	243,w,c
 36298  019F22  6EE9               	movwf	fsr0l,c
 36299  019F24  0E01               	movlw	high (_S+1)
 36300  019F26  20F4               	addwfc	prodh,w,c
 36301  019F28  6EEA               	movwf	fsr0h,c
 36302  019F2A  006F FF7B FFEE     	movff	postinc2,postinc0
 36303  019F30  006F FF7B FFEE     	movff	postinc2,postinc0
 36304  019F36  006F FF7B FFEE     	movff	postinc2,postinc0
 36305  019F3C  006F FF7B FFEE     	movff	postinc2,postinc0
 36306                           
 36307                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 36308                           ;stkvar	_i @ sp[(-2)+0]
 36309  019F42  0EFE               	movlw	-2
 36310  019F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 36311  019F4A  0E01               	movlw	1
 36312  019F4C  6E0B               	movwf	(btemp+10)^0,c
 36313  019F4E  2A0C               	incf	(btemp+11)^0,f,c
 36314  019F50  D002               	goto	u1054_24
 36315  019F52                     u1054_25:
 36316  019F52  90D8               	bcf	status,0,c
 36317  019F54  360B               	rlcf	(btemp+10)^0,f,c
 36318  019F56                     u1054_24:
 36319  019F56  2E0C               	decfsz	(btemp+11)^0,f,c
 36320  019F58  D7FC               	goto	u1054_25
 36321  019F5A  500B               	movf	(btemp+10)^0,w,c
 36322  019F5C  0101               	movlb	1	; () banked
 36323  019F5E  13EF               	iorwf	(_S+40)& (0+255),f,b	;volatile
 36324  019F60                     l11594:
 36325                           
 36326                           ;dio.c: 113:  } while (++i < 6);
 36327                           ;stkvar	_i @ sp[(-2)+0]
 36328  019F60  0EFE               	movlw	-2
 36329  019F62  2AE3               	incf	plusw1,f,c
 36330  019F64  0EFE               	movlw	-2
 36331  019F66  006F FF8C  F001    	movff	plusw1,btemp
 36332  019F6C  0E05               	movlw	5
 36333  019F6E  6401               	cpfsgt	btemp^0,c
 36334  019F70  D785               	goto	l11578
 36335                           
 36336                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 36337  019F72  8ABF               	bsf	191,5,c	;volatile
 36338                           
 36339                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36340  019F74  52E5               	movf	postdec1,f,c
 36341  019F76  52E5               	movf	postdec1,f,c
 36342  019F78  0012               	return		;funcret
 36343  019F7A                     __end_of_switch_handler:
 36344                           	opt callstack 0
 36345                           
 36346 ;; *************** function _TMR5_ISR *****************
 36347 ;; Defined at:
 36348 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 36349 ;; Parameters:    Size  Location     Type
 36350 ;;		None
 36351 ;; Auto vars:     Size  Location     Type
 36352 ;;		None
 36353 ;; Return value:  Size  Location     Type
 36354 ;;                  1    wreg      void 
 36355 ;; Registers used:
 36356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 36357 ;; Tracked objects:
 36358 ;;		On entry : 0/0
 36359 ;;		On exit  : 3F/0
 36360 ;;		Unchanged: 0/0
 36361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36364 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36365 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36366 ;;Total ram usage:       15 bytes
 36367 ;; Hardware stack levels used:    1
 36368 ;; Hardware stack levels required when called:    9
 36369 ;; This function calls:
 36370 ;;		_TMR5_CallBack
 36371 ;;		_TMR5_WriteTimer
 36372 ;; This function is called by:
 36373 ;;		Interrupt level 1
 36374 ;; This function uses a non-reentrant model
 36375 ;;
 36376                           
 36377                           	psect	text162
 36378  01AC78                     __ptext162:
 36379                           	opt callstack 0
 36380  01AC78                     _TMR5_ISR:
 36381                           	opt callstack 7
 36382                           
 36383                           ;incstack = 0
 36384  01AC78  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 36385  01AC7E  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 36386  01AC84  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 36387  01AC8A  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 36388  01AC90  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 36389  01AC96  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 36390  01AC9C  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 36391  01ACA2  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 36392  01ACA8  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 36393  01ACAE  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 36394  01ACB4  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 36395  01ACBA  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 36396  01ACC0  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 36397  01ACC6  EE16  F162         	lfsr	1,___intlo_sp
 36398                           
 36399                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 36400  01ACCA  0139               	movlb	57	; () banked
 36401  01ACCC  9DA8               	bcf	168,6,b	;volatile
 36402                           
 36403                           ; BSR set to: 57
 36404                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 36405  01ACCE  0060  F323  FFE6   	movff	_timer5ReloadVal,postinc1
 36406  01ACD4  0060  F327  FFE6   	movff	_timer5ReloadVal+1,postinc1
 36407  01ACDA  EC54  F0E4         	call	_TMR5_WriteTimer	;wreg free
 36408                           
 36409                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 36410  01ACDE  0101               	movlb	1	; () banked
 36411  01ACE0  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 36412  01ACE2  6E2B               	movwf	??_TMR5_ISR^0,c
 36413  01ACE4  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 36414  01ACE6  0E05               	movlw	5
 36415  01ACE8  262B               	addwf	??_TMR5_ISR^0,f,c
 36416  01ACEA  0E00               	movlw	0
 36417  01ACEC  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 36418  01ACEE  0100               	movlb	0	; () banked
 36419  01ACF0  4BC6               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 36420  01ACF2  2BC7               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 36421  01ACF4  502B               	movf	??_TMR5_ISR^0,w,c
 36422  01ACF6  5DC6               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 36423  01ACF8  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 36424  01ACFA  59C7               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 36425  01ACFC  A0D8               	btfss	status,0,c
 36426  01ACFE  D005               	goto	i1l1021
 36427                           
 36428                           ; BSR set to: 0
 36429                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 36430  01AD00  ECDE  F0E7         	call	_TMR5_CallBack	;wreg free
 36431                           
 36432                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 36433  01AD04  0100               	movlb	0	; () banked
 36434  01AD06  6BC6               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 36435  01AD08  6BC7               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 36436  01AD0A                     i1l1021:
 36437                           
 36438                           ; BSR set to: 0
 36439  01AD0A  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 36440  01AD10  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 36441  01AD16  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 36442  01AD1C  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 36443  01AD22  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 36444  01AD28  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 36445  01AD2E  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 36446  01AD34  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 36447  01AD3A  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 36448  01AD40  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 36449  01AD46  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 36450  01AD4C  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 36451  01AD52  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 36452  01AD58  0011               	retfie		f
 36453  01AD5A                     __end_of_TMR5_ISR:
 36454                           	opt callstack 0
 36455                           
 36456 ;; *************** function _TMR5_WriteTimer *****************
 36457 ;; Defined at:
 36458 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 36459 ;; Parameters:    Size  Location     Type
 36460 ;;  timerVal        2  [STACK] unsigned short 
 36461 ;; Auto vars:     Size  Location     Type
 36462 ;;		None
 36463 ;; Return value:  Size  Location     Type
 36464 ;;                  1  [STACK] void 
 36465 ;; Registers used:
 36466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 36467 ;; Tracked objects:
 36468 ;;		On entry : 3F/39
 36469 ;;		On exit  : 0/0
 36470 ;;		Unchanged: 0/0
 36471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36476 ;;Total ram usage:        0 bytes
 36477 ;; Hardware stack levels used:    1
 36478 ;; Hardware stack levels required when called:    3
 36479 ;; This function calls:
 36480 ;;		Nothing
 36481 ;; This function is called by:
 36482 ;;		_TMR5_ISR
 36483 ;; This function uses a reentrant model
 36484 ;;
 36485                           
 36486                           	psect	text163
 36487  01C8A8                     __ptext163:
 36488                           	opt callstack 0
 36489  01C8A8                     _TMR5_WriteTimer:
 36490                           	opt callstack 12
 36491                           
 36492                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 36493                           
 36494                           ; BSR set to: 0
 36495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36496                           ;incstack = 0
 36497  01C8A8  A49A               	btfss	154,2,c	;volatile
 36498  01C8AA  D00F               	goto	l11806
 36499                           
 36500                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 36501  01C8AC  909A               	bcf	154,0,c	;volatile
 36502                           
 36503                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 36504                           ;stkvar	_timerVal @ sp[(0)+-2]
 36505  01C8AE  0EFF               	movlw	255
 36506  01C8B0  24E1               	addwf	fsr1l,w,c
 36507  01C8B2  6ED9               	movwf	fsr2l,c
 36508  01C8B4  0EFF               	movlw	255
 36509  01C8B6  20E2               	addwfc	fsr1h,w,c
 36510  01C8B8  6EDA               	movwf	fsr2h,c
 36511  01C8BA  50DF               	movf	indf2,w,c
 36512  01C8BC  6E99               	movwf	153,c	;volatile
 36513                           
 36514                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 36515                           ;stkvar	_timerVal @ sp[(0)+-2]
 36516  01C8BE  0EFE               	movlw	-2
 36517  01C8C0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 36518                           
 36519                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 36520  01C8C6  809A               	bsf	154,0,c	;volatile
 36521                           
 36522                           ;mcc_generated_files/tmr5.c: 144:  } else {
 36523  01C8C8  D00C               	goto	l1004
 36524  01C8CA                     l11806:
 36525                           
 36526                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 36527                           ;stkvar	_timerVal @ sp[(0)+-2]
 36528  01C8CA  0EFF               	movlw	255
 36529  01C8CC  24E1               	addwf	fsr1l,w,c
 36530  01C8CE  6ED9               	movwf	fsr2l,c
 36531  01C8D0  0EFF               	movlw	255
 36532  01C8D2  20E2               	addwfc	fsr1h,w,c
 36533  01C8D4  6EDA               	movwf	fsr2h,c
 36534  01C8D6  50DF               	movf	indf2,w,c
 36535  01C8D8  6E99               	movwf	153,c	;volatile
 36536                           
 36537                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 36538                           ;stkvar	_timerVal @ sp[(0)+-2]
 36539  01C8DA  0EFE               	movlw	-2
 36540  01C8DC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 36541  01C8E2                     l1004:
 36542                           
 36543                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 36544  01C8E2  52E5               	movf	postdec1,f,c
 36545  01C8E4  52E5               	movf	postdec1,f,c
 36546  01C8E6  0012               	return		;funcret
 36547  01C8E8                     __end_of_TMR5_WriteTimer:
 36548                           	opt callstack 0
 36549                           
 36550 ;; *************** function _TMR5_CallBack *****************
 36551 ;; Defined at:
 36552 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 36553 ;; Parameters:    Size  Location     Type
 36554 ;;		None
 36555 ;; Auto vars:     Size  Location     Type
 36556 ;;		None
 36557 ;; Return value:  Size  Location     Type
 36558 ;;                  1  [STACK] void 
 36559 ;; Registers used:
 36560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 36561 ;; Tracked objects:
 36562 ;;		On entry : 3F/0
 36563 ;;		On exit  : 0/0
 36564 ;;		Unchanged: 0/0
 36565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36570 ;;Total ram usage:        0 bytes
 36571 ;; Hardware stack levels used:    1
 36572 ;; Hardware stack levels required when called:    8
 36573 ;; This function calls:
 36574 ;;		Absolute function
 36575 ;;		_TMR5_DefaultInterruptHandler
 36576 ;; This function is called by:
 36577 ;;		_TMR5_ISR
 36578 ;; This function uses a reentrant model
 36579 ;;
 36580                           
 36581                           	psect	text164
 36582  01CFBC                     __ptext164:
 36583                           	opt callstack 0
 36584  01CFBC                     _TMR5_CallBack:
 36585                           	opt callstack 7
 36586                           
 36587                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 36588                           
 36589                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36590                           ;incstack = 0
 36591  01CFBC  0100               	movlb	0	; () banked
 36592  01CFBE  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 36593  01CFC0  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 36594  01CFC2  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 36595  01CFC4  B4D8               	btfsc	status,2,c
 36596  01CFC6  0012               	return	
 36597                           
 36598                           ; BSR set to: 0
 36599                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 36600  01CFC8  D801               	call	u1093_28
 36601  01CFCA  0012               	return	
 36602  01CFCC                     u1093_28:
 36603  01CFCC  0005               	push	
 36604  01CFCE  6EFA               	movwf	pclath,c
 36605  01CFD0  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 36606  01CFD2  6EFD               	movwf	tosl,c
 36607  01CFD4  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 36608  01CFD6  6EFE               	movwf	tosh,c
 36609  01CFD8  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 36610  01CFDA  6EFF               	movwf	tosu,c
 36611  01CFDC  50FA               	movf	pclath,w,c
 36612  01CFDE  0012               	return		;indir
 36613  01CFE0                     __end_of_TMR5_CallBack:
 36614                           	opt callstack 0
 36615                           
 36616 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 36617 ;; Defined at:
 36618 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 36619 ;; Parameters:    Size  Location     Type
 36620 ;;		None
 36621 ;; Auto vars:     Size  Location     Type
 36622 ;;		None
 36623 ;; Return value:  Size  Location     Type
 36624 ;;                  1  [STACK] void 
 36625 ;; Registers used:
 36626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36627 ;; Tracked objects:
 36628 ;;		On entry : 3F/0
 36629 ;;		On exit  : 0/0
 36630 ;;		Unchanged: 0/0
 36631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36636 ;;Total ram usage:        0 bytes
 36637 ;; Hardware stack levels used:    1
 36638 ;; Hardware stack levels required when called:    7
 36639 ;; This function calls:
 36640 ;;		_check_day_time
 36641 ;; This function is called by:
 36642 ;;		_TMR5_Initialize
 36643 ;;		_TMR5_CallBack
 36644 ;; This function uses a reentrant model
 36645 ;;
 36646                           
 36647                           	psect	text165
 36648  01C9D8                     __ptext165:
 36649                           	opt callstack 0
 36650  01C9D8                     _TMR5_DefaultInterruptHandler:
 36651                           	opt callstack 7
 36652                           
 36653                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 36654                           
 36655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36656                           ;incstack = 0
 36657  01C9D8  A0BE               	btfss	190,0,c	;volatile
 36658  01C9DA  D002               	goto	u1019_20
 36659  01C9DC  0E01               	movlw	1
 36660  01C9DE  D001               	goto	u1019_26
 36661  01C9E0                     u1019_20:
 36662  01C9E0  0E00               	movlw	0
 36663  01C9E2                     u1019_26:
 36664  01C9E2  0AFF               	xorlw	255
 36665  01C9E4  6E0C               	movwf	(btemp+11)^0,c
 36666  01C9E6  50BE               	movf	190,w,c	;volatile
 36667  01C9E8  180C               	xorwf	(btemp+11)^0,w,c
 36668  01C9EA  0BFE               	andlw	-2
 36669  01C9EC  180C               	xorwf	(btemp+11)^0,w,c
 36670  01C9EE  6EBE               	movwf	190,c	;volatile
 36671                           
 36672                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 36673  01C9F0  0E01               	movlw	1
 36674  01C9F2  0101               	movlb	1	; () banked
 36675  01C9F4  27C3               	addwf	(_V+188)& (0+255),f,b	;volatile
 36676  01C9F6  0E00               	movlw	0
 36677  01C9F8  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 36678  01C9FA  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 36679  01C9FC  23C6               	addwfc	(_V+191)& (0+255),f,b	;volatile
 36680                           
 36681                           ; BSR set to: 1
 36682                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 36683  01C9FE  0E01               	movlw	1
 36684  01CA00  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 36685  01CA02  0E00               	movlw	0
 36686  01CA04  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 36687  01CA06  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 36688  01CA08  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 36689                           
 36690                           ; BSR set to: 1
 36691                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 36692  01CA0A  ECD7  F0C7         	call	_check_day_time	;wreg free
 36693                           
 36694                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36695  01CA0E  0012               	return		;funcret
 36696  01CA10                     __end_of_TMR5_DefaultInterruptHandler:
 36697                           	opt callstack 0
 36698                           
 36699 ;; *************** function _check_day_time *****************
 36700 ;; Defined at:
 36701 ;;		line 165 in file "mbmc.c"
 36702 ;; Parameters:    Size  Location     Type
 36703 ;;		None
 36704 ;; Auto vars:     Size  Location     Type
 36705 ;;  light           4  [STACK] float 
 36706 ;; Return value:  Size  Location     Type
 36707 ;;                  1  [STACK] _Bool 
 36708 ;; Registers used:
 36709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36710 ;; Tracked objects:
 36711 ;;		On entry : 3F/1
 36712 ;;		On exit  : 0/0
 36713 ;;		Unchanged: 0/0
 36714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36719 ;;Total ram usage:        0 bytes
 36720 ;; Hardware stack levels used:    1
 36721 ;; Hardware stack levels required when called:    6
 36722 ;; This function calls:
 36723 ;;		___flge
 36724 ;;		_conv_raw_result
 36725 ;;		_get_ac_charger_relay
 36726 ;;		_set_ac_charger_relay
 36727 ;; This function is called by:
 36728 ;;		_TMR5_DefaultInterruptHandler
 36729 ;; This function uses a reentrant model
 36730 ;;
 36731                           
 36732                           	psect	text166
 36733  018FAE                     __ptext166:
 36734                           	opt callstack 0
 36735  018FAE                     _check_day_time:
 36736                           	opt callstack 0
 36737                           
 36738                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36739  018FAE  52E6               	movf	postinc1,f,c
 36740  018FB0  52E6               	movf	postinc1,f,c
 36741  018FB2  52E6               	movf	postinc1,f,c
 36742  018FB4  52E6               	movf	postinc1,f,c
 36743                           
 36744                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 36745                           
 36746                           ;incstack = 0
 36747  018FB6  0E00               	movlw	0
 36748  018FB8  6EE6               	movwf	postinc1,c
 36749  018FBA  0E0D               	movlw	13
 36750  018FBC  6EE6               	movwf	postinc1,c
 36751  018FBE  EC28  F0AA         	call	_conv_raw_result	;wreg free
 36752                           
 36753                           ;stkvar	_light @ sp[(-4)+0]
 36754  018FC2  0EFC               	movlw	-4
 36755  018FC4  0060  F007  FFE3   	movff	btemp,plusw1
 36756  018FCA  0EFD               	movlw	-3
 36757  018FCC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 36758  018FD2  0EFE               	movlw	-2
 36759  018FD4  0060  F00F  FFE3   	movff	btemp+2,plusw1
 36760  018FDA  0EFF               	movlw	-1
 36761  018FDC  0060  F013  FFE3   	movff	btemp+3,plusw1
 36762                           
 36763                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 36764  018FE2  2A41               	incf	check_day_time@day_delay^0,f,c
 36765  018FE4  0441               	decf	check_day_time@day_delay^0,w,c
 36766  018FE6  A4D8               	btfss	status,2,c
 36767  018FE8  D0A9               	goto	l2164
 36768  018FEA  0101               	movlb	1	; () banked
 36769  018FEC  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 36770  018FEE  B4D8               	btfsc	status,2,c
 36771  018FF0  D0A5               	goto	l2164
 36772                           
 36773                           ; BSR set to: 1
 36774                           ;mbmc.c: 173:   if (C.soc > 3) {
 36775  018FF2  EE22  F1B5         	lfsr	2,_C+182	;volatile
 36776  018FF6  0E01               	movlw	1
 36777  018FF8  50DB               	movf	plusw2,w,c
 36778  018FFA  E104               	bnz	u989_20
 36779  018FFC  0E04               	movlw	4
 36780  018FFE  5CDE               	subwf	postinc2,w,c
 36781  019000  A0D8               	btfss	status,0,c
 36782  019002  D073               	goto	l10692
 36783  019004                     u989_20:
 36784                           
 36785                           ; BSR set to: 1
 36786                           ;mbmc.c: 174:    if (!C.day) {
 36787  019004  EE22  F239         	lfsr	2,_C+314	;volatile
 36788  019008  50DF               	movf	indf2,w,c
 36789  01900A  A4D8               	btfss	status,2,c
 36790  01900C  D035               	goto	l10680
 36791                           
 36792                           ; BSR set to: 1
 36793                           ;mbmc.c: 175:     if (light > 22.0) {
 36794                           ;stkvar	_light @ sp[(-4)+0]
 36795  01900E  0EFC               	movlw	-4
 36796  019010  006F FF8F FFE6     	movff	plusw1,postinc1
 36797  019016  006F FF8F FFE6     	movff	plusw1,postinc1
 36798  01901C  006F FF8F FFE6     	movff	plusw1,postinc1
 36799  019022  006F FF8F FFE6     	movff	plusw1,postinc1
 36800  019028  0E00               	movlw	0
 36801  01902A  6EE6               	movwf	postinc1,c
 36802  01902C  0E00               	movlw	0
 36803  01902E  6EE6               	movwf	postinc1,c
 36804  019030  0EB0               	movlw	176
 36805  019032  6EE6               	movwf	postinc1,c
 36806  019034  0E41               	movlw	65
 36807  019036  6EE6               	movwf	postinc1,c
 36808  019038  EC67  F0CC         	call	___flge	;wreg free
 36809  01903C  B001               	btfsc	btemp& (0+255),0,c
 36810  01903E  D07E               	goto	l2164
 36811                           
 36812                           ;mbmc.c: 176:      C.day = 1;
 36813  019040  0E01               	movlw	1
 36814  019042  006F FFA0  FA39    	movff	wreg,_C+314	;volatile
 36815                           
 36816                           ;mbmc.c: 177:      C.day_start = V.ticks;
 36817  019048  EE20  F188         	lfsr	2,_V+129	;volatile
 36818  01904C  006F FF78  FA3A    	movff	postinc2,_C+315	;volatile
 36819  019052  006F FF78  FA3B    	movff	postinc2,_C+316	;volatile
 36820  019058  006F FF78  FA3C    	movff	postinc2,_C+317	;volatile
 36821  01905E  006F FF74  FA3D    	movff	postdec2,_C+318	;volatile
 36822                           
 36823                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 36824  019064  EC6A  F0E9         	call	_get_ac_charger_relay	;wreg free
 36825  019068  5001               	movf	btemp^0,w,c
 36826  01906A  B4D8               	btfsc	status,2,c
 36827  01906C  D06B               	goto	l2160
 36828                           
 36829                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 36830  01906E  0E00               	movlw	0
 36831  019070  6EE6               	movwf	postinc1,c
 36832  019072  EC54  F0E9         	call	_set_ac_charger_relay	;wreg free
 36833  019076  D066               	goto	l2160
 36834  019078                     l10680:
 36835                           
 36836                           ; BSR set to: 1
 36837                           ;mbmc.c: 184:     if (light < 12.0) {
 36838  019078  0E00               	movlw	0
 36839  01907A  6EE6               	movwf	postinc1,c
 36840  01907C  0E00               	movlw	0
 36841  01907E  6EE6               	movwf	postinc1,c
 36842  019080  0E40               	movlw	64
 36843  019082  6EE6               	movwf	postinc1,c
 36844  019084  0E41               	movlw	65
 36845  019086  6EE6               	movwf	postinc1,c
 36846                           
 36847                           ;stkvar	_light @ sp[(-8)+0]
 36848  019088  0EF8               	movlw	-8
 36849  01908A  006F FF8F FFE6     	movff	plusw1,postinc1
 36850  019090  006F FF8F FFE6     	movff	plusw1,postinc1
 36851  019096  006F FF8F FFE6     	movff	plusw1,postinc1
 36852  01909C  006F FF8F FFE6     	movff	plusw1,postinc1
 36853  0190A2  EC67  F0CC         	call	___flge	;wreg free
 36854  0190A6  B001               	btfsc	btemp& (0+255),0,c
 36855  0190A8  D049               	goto	l2164
 36856                           
 36857                           ;mbmc.c: 185:      C.day = 0;
 36858  0190AA  0E00               	movlw	0
 36859  0190AC  006F FFA0  FA39    	movff	wreg,_C+314	;volatile
 36860                           
 36861                           ;mbmc.c: 186:      C.day_end = V.ticks;
 36862  0190B2  EE20  F188         	lfsr	2,_V+129	;volatile
 36863  0190B6  006F FF78  FA3E    	movff	postinc2,_C+319	;volatile
 36864  0190BC  006F FF78  FA3F    	movff	postinc2,_C+320	;volatile
 36865  0190C2  006F FF78  FA40    	movff	postinc2,_C+321	;volatile
 36866  0190C8  006F FF74  FA41    	movff	postdec2,_C+322	;volatile
 36867                           
 36868                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 36869  0190CE  EE22  F1B5         	lfsr	2,_C+182	;volatile
 36870  0190D2  0E01               	movlw	1
 36871  0190D4  50DB               	movf	plusw2,w,c
 36872  0190D6  E136               	bnz	l2160
 36873  0190D8  0E14               	movlw	20
 36874  0190DA  5CDE               	subwf	postinc2,w,c
 36875  0190DC  B0D8               	btfsc	status,0,c
 36876  0190DE  D032               	goto	l2160
 36877                           
 36878                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 36879  0190E0  0E01               	movlw	1
 36880  0190E2  6EE6               	movwf	postinc1,c
 36881  0190E4  EC54  F0E9         	call	_set_ac_charger_relay	;wreg free
 36882  0190E8  D02D               	goto	l2160
 36883  0190EA                     l10692:
 36884                           
 36885                           ; BSR set to: 1
 36886                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 36887  0190EA  EE22  F177         	lfsr	2,_C+120	;volatile
 36888  0190EE  006F FF7B FFE6     	movff	postinc2,postinc1
 36889  0190F4  006F FF7B FFE6     	movff	postinc2,postinc1
 36890  0190FA  006F FF7B FFE6     	movff	postinc2,postinc1
 36891  019100  006F FF7B FFE6     	movff	postinc2,postinc1
 36892  019106  EE22  F17B         	lfsr	2,_C+124	;volatile
 36893  01910A  006F FF7B FFE6     	movff	postinc2,postinc1
 36894  019110  006F FF7B FFE6     	movff	postinc2,postinc1
 36895  019116  006F FF7B FFE6     	movff	postinc2,postinc1
 36896  01911C  006F FF7B FFE6     	movff	postinc2,postinc1
 36897  019122  EC67  F0CC         	call	___flge	;wreg free
 36898  019126  B001               	btfsc	btemp& (0+255),0,c
 36899  019128  D009               	goto	l2164
 36900                           
 36901                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 36902  01912A  EC6A  F0E9         	call	_get_ac_charger_relay	;wreg free
 36903  01912E  5001               	movf	btemp^0,w,c
 36904  019130  A4D8               	btfss	status,2,c
 36905  019132  D004               	goto	l2164
 36906                           
 36907                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 36908  019134  0E01               	movlw	1
 36909  019136  6EE6               	movwf	postinc1,c
 36910  019138  EC54  F0E9         	call	_set_ac_charger_relay	;wreg free
 36911  01913C                     l2164:
 36912                           
 36913                           ;mbmc.c: 204:  if (day_delay >= 240)
 36914  01913C  0EEF               	movlw	239
 36915  01913E  6441               	cpfsgt	check_day_time@day_delay^0,c
 36916  019140  D001               	goto	l2160
 36917                           
 36918                           ;mbmc.c: 205:   day_delay = 0;
 36919  019142  6A41               	clrf	check_day_time@day_delay^0,c
 36920  019144                     l2160:
 36921                           
 36922                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36923  019144  52E5               	movf	postdec1,f,c
 36924  019146  52E5               	movf	postdec1,f,c
 36925  019148  52E5               	movf	postdec1,f,c
 36926  01914A  52E5               	movf	postdec1,f,c
 36927  01914C  0012               	return		;funcret
 36928  01914E                     __end_of_check_day_time:
 36929                           	opt callstack 0
 36930                           
 36931 ;; *************** function _set_ac_charger_relay *****************
 36932 ;; Defined at:
 36933 ;;		line 135 in file "mbmc.c"
 36934 ;; Parameters:    Size  Location     Type
 36935 ;;  mode            1  [STACK] const _Bool 
 36936 ;; Auto vars:     Size  Location     Type
 36937 ;;		None
 36938 ;; Return value:  Size  Location     Type
 36939 ;;                  1  [STACK] void 
 36940 ;; Registers used:
 36941 ;;		wreg, fsr1l, fsr1h
 36942 ;; Tracked objects:
 36943 ;;		On entry : 0/1
 36944 ;;		On exit  : 0/0
 36945 ;;		Unchanged: 0/0
 36946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36951 ;;Total ram usage:        0 bytes
 36952 ;; Hardware stack levels used:    1
 36953 ;; Hardware stack levels required when called:    3
 36954 ;; This function calls:
 36955 ;;		Nothing
 36956 ;; This function is called by:
 36957 ;;		_check_day_time
 36958 ;; This function uses a reentrant model
 36959 ;;
 36960                           
 36961                           	psect	text167
 36962  01D2A8                     __ptext167:
 36963                           	opt callstack 0
 36964  01D2A8                     _set_ac_charger_relay:
 36965                           	opt callstack 9
 36966                           
 36967                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 36968                           ;stkvar	_mode @ sp[(0)+-1]
 36969                           
 36970                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36971                           ;incstack = 0
 36972  01D2A8  0EFF               	movlw	-1
 36973  01D2AA  B0E3               	btfsc	plusw1,0,c
 36974  01D2AC  D002               	bra	u981_25
 36975  01D2AE  9CBD               	bcf	189,6,c	;volatile
 36976  01D2B0  D001               	bra	u981_26
 36977  01D2B2                     u981_25:
 36978  01D2B2  8CBD               	bsf	189,6,c	;volatile
 36979  01D2B4                     u981_26:
 36980                           
 36981                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 36982  01D2B4  52E5               	movf	postdec1,f,c
 36983  01D2B6  0012               	return		;funcret
 36984  01D2B8                     __end_of_set_ac_charger_relay:
 36985                           	opt callstack 0
 36986                           
 36987 ;; *************** function _get_ac_charger_relay *****************
 36988 ;; Defined at:
 36989 ;;		line 140 in file "mbmc.c"
 36990 ;; Parameters:    Size  Location     Type
 36991 ;;		None
 36992 ;; Auto vars:     Size  Location     Type
 36993 ;;		None
 36994 ;; Return value:  Size  Location     Type
 36995 ;;                  1  [STACK] _Bool 
 36996 ;; Registers used:
 36997 ;;		btemp
 36998 ;; Tracked objects:
 36999 ;;		On entry : 0/1
 37000 ;;		On exit  : 0/0
 37001 ;;		Unchanged: 0/0
 37002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37007 ;;Total ram usage:        0 bytes
 37008 ;; Hardware stack levels used:    1
 37009 ;; Hardware stack levels required when called:    3
 37010 ;; This function calls:
 37011 ;;		Nothing
 37012 ;; This function is called by:
 37013 ;;		_check_day_time
 37014 ;;		_calc_bsoc
 37015 ;; This function uses a reentrant model
 37016 ;;
 37017                           
 37018                           	psect	text168
 37019  01D2D4                     __ptext168:
 37020                           	opt callstack 0
 37021  01D2D4                     _get_ac_charger_relay:
 37022                           	opt callstack 10
 37023                           
 37024                           ;mbmc.c: 142:  return LATDbits.LATD6;
 37025                           
 37026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37027                           ;incstack = 0
 37028  01D2D4  ACBD               	btfss	189,6,c	;volatile
 37029  01D2D6  D003               	goto	u1012_20
 37030  01D2D8  6A01               	clrf	btemp^0,c
 37031  01D2DA  2A01               	incf	btemp^0,f,c
 37032  01D2DC  0012               	return	
 37033  01D2DE                     u1012_20:
 37034  01D2DE  6A01               	clrf	btemp^0,c
 37035                           
 37036                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 37037  01D2E0  0012               	return		;funcret
 37038  01D2E2                     __end_of_get_ac_charger_relay:
 37039                           	opt callstack 0
 37040                           
 37041 ;; *************** function _TMR3_ISR *****************
 37042 ;; Defined at:
 37043 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 37044 ;; Parameters:    Size  Location     Type
 37045 ;;		None
 37046 ;; Auto vars:     Size  Location     Type
 37047 ;;		None
 37048 ;; Return value:  Size  Location     Type
 37049 ;;                  1    wreg      void 
 37050 ;; Registers used:
 37051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 37052 ;; Tracked objects:
 37053 ;;		On entry : 0/0
 37054 ;;		On exit  : 3F/0
 37055 ;;		Unchanged: 0/0
 37056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37059 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37060 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37061 ;;Total ram usage:       25 bytes
 37062 ;; Hardware stack levels used:    1
 37063 ;; Hardware stack levels required when called:   14
 37064 ;; This function calls:
 37065 ;;		_TMR3_CallBack
 37066 ;;		_TMR3_WriteTimer
 37067 ;; This function is called by:
 37068 ;;		Interrupt level 1
 37069 ;; This function uses a non-reentrant model
 37070 ;;
 37071                           
 37072                           	psect	text169
 37073  019A30                     __ptext169:
 37074                           	opt callstack 0
 37075  019A30                     _TMR3_ISR:
 37076                           	opt callstack 2
 37077                           
 37078                           ;incstack = 0
 37079  019A30  006F FF60  F0D8    	movff	status,??_TMR3_ISR
 37080  019A36  006F FFD8  F0D9    	movff	tblptrl,??_TMR3_ISR+1
 37081  019A3C  006F FFDC  F0DA    	movff	tblptrh,??_TMR3_ISR+2
 37082  019A42  006F FFE0  F0DB    	movff	tblptru,??_TMR3_ISR+3
 37083  019A48  006F FFD4  F0DC    	movff	tablat,??_TMR3_ISR+4
 37084  019A4E  0060  F004  F0DD   	movff	btemp,??_TMR3_ISR+5
 37085  019A54  0060  F008  F0DE   	movff	btemp+1,??_TMR3_ISR+6
 37086  019A5A  0060  F00C  F0DF   	movff	btemp+2,??_TMR3_ISR+7
 37087  019A60  0060  F010  F0E0   	movff	btemp+3,??_TMR3_ISR+8
 37088  019A66  0060  F014  F0E1   	movff	btemp+4,??_TMR3_ISR+9
 37089  019A6C  0060  F018  F0E2   	movff	btemp+5,??_TMR3_ISR+10
 37090  019A72  0060  F01C  F0E3   	movff	btemp+6,??_TMR3_ISR+11
 37091  019A78  0060  F020  F0E4   	movff	btemp+7,??_TMR3_ISR+12
 37092  019A7E  0060  F024  F0E5   	movff	btemp+8,??_TMR3_ISR+13
 37093  019A84  0060  F028  F0E6   	movff	btemp+9,??_TMR3_ISR+14
 37094  019A8A  0060  F02C  F0E7   	movff	btemp+10,??_TMR3_ISR+15
 37095  019A90  0060  F030  F0E8   	movff	btemp+11,??_TMR3_ISR+16
 37096  019A96  0060  F044  F0E9   	movff	btemp+16,??_TMR3_ISR+17
 37097  019A9C  0060  F048  F0EA   	movff	btemp+17,??_TMR3_ISR+18
 37098  019AA2  0060  F04C  F0EB   	movff	btemp+18,??_TMR3_ISR+19
 37099  019AA8  0060  F050  F0EC   	movff	btemp+19,??_TMR3_ISR+20
 37100  019AAE  0060  F054  F0ED   	movff	btemp+20,??_TMR3_ISR+21
 37101  019AB4  0060  F058  F0EE   	movff	btemp+21,??_TMR3_ISR+22
 37102  019ABA  0060  F05C  F0EF   	movff	btemp+22,??_TMR3_ISR+23
 37103  019AC0  0060  F060  F0F0   	movff	btemp+23,??_TMR3_ISR+24
 37104  019AC6  EE16  F162         	lfsr	1,___intlo_sp
 37105                           
 37106                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 37107  019ACA  0139               	movlb	57	; () banked
 37108  019ACC  9DA6               	bcf	166,6,b	;volatile
 37109                           
 37110                           ; BSR set to: 57
 37111                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 37112  019ACE  0060  F313  FFE6   	movff	_timer3ReloadVal,postinc1
 37113  019AD4  0060  F317  FFE6   	movff	_timer3ReloadVal+1,postinc1
 37114  019ADA  EC74  F0E4         	call	_TMR3_WriteTimer	;wreg free
 37115                           
 37116                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 37117  019ADE  0100               	movlb	0	; () banked
 37118  019AE0  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 37119  019AE2  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 37120  019AE4  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 37121  019AE6  E104               	bnz	i1u1375_20
 37122  019AE8  0E28               	movlw	40
 37123  019AEA  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 37124  019AEC  A0D8               	btfss	status,0,c
 37125  019AEE  D005               	goto	i1l1209
 37126  019AF0                     i1u1375_20:
 37127                           
 37128                           ; BSR set to: 0
 37129                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 37130  019AF0  ECF0  F0E7         	call	_TMR3_CallBack	;wreg free
 37131                           
 37132                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 37133  019AF4  0100               	movlb	0	; () banked
 37134  019AF6  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 37135  019AF8  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 37136  019AFA                     i1l1209:
 37137                           
 37138                           ; BSR set to: 0
 37139  019AFA  0060  F3C0  F018   	movff	??_TMR3_ISR+24,btemp+23
 37140  019B00  0060  F3BC  F017   	movff	??_TMR3_ISR+23,btemp+22
 37141  019B06  0060  F3B8  F016   	movff	??_TMR3_ISR+22,btemp+21
 37142  019B0C  0060  F3B4  F015   	movff	??_TMR3_ISR+21,btemp+20
 37143  019B12  0060  F3B0  F014   	movff	??_TMR3_ISR+20,btemp+19
 37144  019B18  0060  F3AC  F013   	movff	??_TMR3_ISR+19,btemp+18
 37145  019B1E  0060  F3A8  F012   	movff	??_TMR3_ISR+18,btemp+17
 37146  019B24  0060  F3A4  F011   	movff	??_TMR3_ISR+17,btemp+16
 37147  019B2A  0060  F3A0  F00C   	movff	??_TMR3_ISR+16,btemp+11
 37148  019B30  0060  F39C  F00B   	movff	??_TMR3_ISR+15,btemp+10
 37149  019B36  0060  F398  F00A   	movff	??_TMR3_ISR+14,btemp+9
 37150  019B3C  0060  F394  F009   	movff	??_TMR3_ISR+13,btemp+8
 37151  019B42  0060  F390  F008   	movff	??_TMR3_ISR+12,btemp+7
 37152  019B48  0060  F38C  F007   	movff	??_TMR3_ISR+11,btemp+6
 37153  019B4E  0060  F388  F006   	movff	??_TMR3_ISR+10,btemp+5
 37154  019B54  0060  F384  F005   	movff	??_TMR3_ISR+9,btemp+4
 37155  019B5A  0060  F380  F004   	movff	??_TMR3_ISR+8,btemp+3
 37156  019B60  0060  F37C  F003   	movff	??_TMR3_ISR+7,btemp+2
 37157  019B66  0060  F378  F002   	movff	??_TMR3_ISR+6,btemp+1
 37158  019B6C  0060  F374  F001   	movff	??_TMR3_ISR+5,btemp
 37159  019B72  0060  F373  FFF5   	movff	??_TMR3_ISR+4,tablat
 37160  019B78  0060  F36F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 37161  019B7E  0060  F36B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 37162  019B84  0060  F367  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 37163  019B8A  0060  F363  FFD8   	movff	??_TMR3_ISR,status
 37164  019B90  0011               	retfie		f
 37165  019B92                     __end_of_TMR3_ISR:
 37166                           	opt callstack 0
 37167                           
 37168 ;; *************** function _TMR3_WriteTimer *****************
 37169 ;; Defined at:
 37170 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 37171 ;; Parameters:    Size  Location     Type
 37172 ;;  timerVal        2  [STACK] unsigned short 
 37173 ;; Auto vars:     Size  Location     Type
 37174 ;;		None
 37175 ;; Return value:  Size  Location     Type
 37176 ;;                  1  [STACK] void 
 37177 ;; Registers used:
 37178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 37179 ;; Tracked objects:
 37180 ;;		On entry : 3F/39
 37181 ;;		On exit  : 0/0
 37182 ;;		Unchanged: 0/0
 37183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37188 ;;Total ram usage:        0 bytes
 37189 ;; Hardware stack levels used:    1
 37190 ;; Hardware stack levels required when called:    3
 37191 ;; This function calls:
 37192 ;;		Nothing
 37193 ;; This function is called by:
 37194 ;;		_TMR3_ISR
 37195 ;; This function uses a reentrant model
 37196 ;;
 37197                           
 37198                           	psect	text170
 37199  01C8E8                     __ptext170:
 37200                           	opt callstack 0
 37201  01C8E8                     _TMR3_WriteTimer:
 37202                           	opt callstack 12
 37203                           
 37204                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 37205                           
 37206                           ; BSR set to: 0
 37207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37208                           ;incstack = 0
 37209  01C8E8  A4A6               	btfss	166,2,c	;volatile
 37210  01C8EA  D00F               	goto	l11824
 37211                           
 37212                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 37213  01C8EC  90A6               	bcf	166,0,c	;volatile
 37214                           
 37215                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 37216                           ;stkvar	_timerVal @ sp[(0)+-2]
 37217  01C8EE  0EFF               	movlw	255
 37218  01C8F0  24E1               	addwf	fsr1l,w,c
 37219  01C8F2  6ED9               	movwf	fsr2l,c
 37220  01C8F4  0EFF               	movlw	255
 37221  01C8F6  20E2               	addwfc	fsr1h,w,c
 37222  01C8F8  6EDA               	movwf	fsr2h,c
 37223  01C8FA  50DF               	movf	indf2,w,c
 37224  01C8FC  6EA5               	movwf	165,c	;volatile
 37225                           
 37226                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 37227                           ;stkvar	_timerVal @ sp[(0)+-2]
 37228  01C8FE  0EFE               	movlw	-2
 37229  01C900  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 37230                           
 37231                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 37232  01C906  80A6               	bsf	166,0,c	;volatile
 37233                           
 37234                           ;mcc_generated_files/tmr3.c: 141:     }
 37235  01C908  D00C               	goto	l1192
 37236  01C90A                     l11824:
 37237                           
 37238                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 37239                           ;stkvar	_timerVal @ sp[(0)+-2]
 37240  01C90A  0EFF               	movlw	255
 37241  01C90C  24E1               	addwf	fsr1l,w,c
 37242  01C90E  6ED9               	movwf	fsr2l,c
 37243  01C910  0EFF               	movlw	255
 37244  01C912  20E2               	addwfc	fsr1h,w,c
 37245  01C914  6EDA               	movwf	fsr2h,c
 37246  01C916  50DF               	movf	indf2,w,c
 37247  01C918  6EA5               	movwf	165,c	;volatile
 37248                           
 37249                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 37250                           ;stkvar	_timerVal @ sp[(0)+-2]
 37251  01C91A  0EFE               	movlw	-2
 37252  01C91C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 37253  01C922                     l1192:
 37254                           
 37255                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 37256  01C922  52E5               	movf	postdec1,f,c
 37257  01C924  52E5               	movf	postdec1,f,c
 37258  01C926  0012               	return		;funcret
 37259  01C928                     __end_of_TMR3_WriteTimer:
 37260                           	opt callstack 0
 37261                           
 37262 ;; *************** function _TMR3_CallBack *****************
 37263 ;; Defined at:
 37264 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 37265 ;; Parameters:    Size  Location     Type
 37266 ;;		None
 37267 ;; Auto vars:     Size  Location     Type
 37268 ;;		None
 37269 ;; Return value:  Size  Location     Type
 37270 ;;                  1  [STACK] void 
 37271 ;; Registers used:
 37272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 37273 ;; Tracked objects:
 37274 ;;		On entry : 3F/0
 37275 ;;		On exit  : 0/0
 37276 ;;		Unchanged: 0/0
 37277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37282 ;;Total ram usage:        0 bytes
 37283 ;; Hardware stack levels used:    1
 37284 ;; Hardware stack levels required when called:   13
 37285 ;; This function calls:
 37286 ;;		Absolute function
 37287 ;;		_TMR3_DefaultInterruptHandler
 37288 ;;		_calc_bsoc
 37289 ;; This function is called by:
 37290 ;;		_TMR3_ISR
 37291 ;; This function uses a reentrant model
 37292 ;;
 37293                           
 37294                           	psect	text171
 37295  01CFE0                     __ptext171:
 37296                           	opt callstack 0
 37297  01CFE0                     _TMR3_CallBack:
 37298                           	opt callstack 2
 37299                           
 37300                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 37301                           
 37302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37303                           ;incstack = 0
 37304  01CFE0  0100               	movlb	0	; () banked
 37305  01CFE2  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37306  01CFE4  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37307  01CFE6  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 37308  01CFE8  B4D8               	btfsc	status,2,c
 37309  01CFEA  0012               	return	
 37310                           
 37311                           ; BSR set to: 0
 37312                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 37313  01CFEC  D801               	call	u1360_28
 37314  01CFEE  0012               	return	
 37315  01CFF0                     u1360_28:
 37316  01CFF0  0005               	push	
 37317  01CFF2  6EFA               	movwf	pclath,c
 37318  01CFF4  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37319  01CFF6  6EFD               	movwf	tosl,c
 37320  01CFF8  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37321  01CFFA  6EFE               	movwf	tosh,c
 37322  01CFFC  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 37323  01CFFE  6EFF               	movwf	tosu,c
 37324  01D000  50FA               	movf	pclath,w,c
 37325  01D002  0012               	return		;indir
 37326  01D004                     __end_of_TMR3_CallBack:
 37327                           	opt callstack 0
 37328                           
 37329 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 37330 ;; Defined at:
 37331 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 37332 ;; Parameters:    Size  Location     Type
 37333 ;;		None
 37334 ;; Auto vars:     Size  Location     Type
 37335 ;;		None
 37336 ;; Return value:  Size  Location     Type
 37337 ;;                  1  [STACK] void 
 37338 ;; Registers used:
 37339 ;;		None
 37340 ;; Tracked objects:
 37341 ;;		On entry : 3F/0
 37342 ;;		On exit  : 0/0
 37343 ;;		Unchanged: 0/0
 37344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37349 ;;Total ram usage:        0 bytes
 37350 ;; Hardware stack levels used:    1
 37351 ;; Hardware stack levels required when called:    3
 37352 ;; This function calls:
 37353 ;;		Nothing
 37354 ;; This function is called by:
 37355 ;;		_TMR3_Initialize
 37356 ;;		_TMR3_CallBack
 37357 ;; This function uses a reentrant model
 37358 ;;
 37359                           
 37360                           	psect	text172
 37361  01D394                     __ptext172:
 37362                           	opt callstack 0
 37363  01D394                     _TMR3_DefaultInterruptHandler:
 37364                           	opt callstack 11
 37365                           
 37366                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37367                           
 37368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37369                           ;incstack = 0
 37370  01D394  0012               	return		;funcret
 37371  01D396                     __end_of_TMR3_DefaultInterruptHandler:
 37372                           	opt callstack 0
 37373                           
 37374 ;; *************** function _calc_bsoc *****************
 37375 ;; Defined at:
 37376 ;;		line 39 in file "bsoc.c"
 37377 ;; Parameters:    Size  Location     Type
 37378 ;;		None
 37379 ;; Auto vars:     Size  Location     Type
 37380 ;;  adj             4  [STACK] float 
 37381 ;;  log_ptr         2  [STACK] PTR unsigned char 
 37382 ;;		 -> port_data(512), 
 37383 ;; Return value:  Size  Location     Type
 37384 ;;                  1  [STACK] void 
 37385 ;; Registers used:
 37386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 37387 ;; Tracked objects:
 37388 ;;		On entry : 3F/0
 37389 ;;		On exit  : 5/1
 37390 ;;		Unchanged: 0/0
 37391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37396 ;;Total ram usage:        0 bytes
 37397 ;; Hardware stack levels used:    1
 37398 ;; Hardware stack levels required when called:   12
 37399 ;; This function calls:
 37400 ;;		_StartTimer
 37401 ;;		___asfladd
 37402 ;;		___fldiv
 37403 ;;		___flge
 37404 ;;		___flmul
 37405 ;;		___flneg
 37406 ;;		___fltol
 37407 ;;		_fabsf
 37408 ;;		_get_ac_charger_relay
 37409 ;;		_port_data_dma_ptr
 37410 ;;		_send_port_data_dma
 37411 ;;		_sprintf
 37412 ;;		_strlen
 37413 ;; This function is called by:
 37414 ;;		_init_bsoc
 37415 ;;		_TMR3_CallBack
 37416 ;; This function uses a reentrant model
 37417 ;;
 37418                           
 37419                           	psect	text173
 37420  013482                     __ptext173:
 37421                           	opt callstack 0
 37422  013482                     _calc_bsoc:
 37423                           	opt callstack 0
 37424                           
 37425                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37426  013482  0E06               	movlw	6
 37427  013484  26E1               	addwf	fsr1l,f,c
 37428  013486  0E00               	movlw	0
 37429  013488  22E2               	addwfc	fsr1h,f,c
 37430                           
 37431                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 37432                           
 37433                           ;incstack = 0
 37434  01348A  0E00               	movlw	0
 37435  01348C  6E09               	movwf	(btemp+8)^0,c
 37436  01348E  0E00               	movlw	0
 37437  013490  6E0A               	movwf	(btemp+9)^0,c
 37438  013492  0E80               	movlw	128
 37439  013494  6E0B               	movwf	(btemp+10)^0,c
 37440  013496  0E3F               	movlw	63
 37441  013498  6E0C               	movwf	(btemp+11)^0,c
 37442                           
 37443                           ;stkvar	_adj @ sp[(-6)+0]
 37444  01349A  0EFA               	movlw	-6
 37445  01349C  0060  F027  FFE3   	movff	btemp+8,plusw1
 37446  0134A2  0EFB               	movlw	-5
 37447  0134A4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37448  0134AA  0EFC               	movlw	-4
 37449  0134AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37450  0134B2  0EFD               	movlw	-3
 37451  0134B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 37452  0134BA  82BE               	bsf	190,1,c	;volatile
 37453                           
 37454                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 37455  0134BC  0E00               	movlw	0
 37456  0134BE  6EE6               	movwf	postinc1,c
 37457  0134C0  0E00               	movlw	0
 37458  0134C2  6EE6               	movwf	postinc1,c
 37459  0134C4  0E61               	movlw	97
 37460  0134C6  6EE6               	movwf	postinc1,c
 37461  0134C8  0E45               	movlw	69
 37462  0134CA  6EE6               	movwf	postinc1,c
 37463  0134CC  EE22  F143         	lfsr	2,_C+68	;volatile
 37464  0134D0  006F FF7B FFE6     	movff	postinc2,postinc1
 37465  0134D6  006F FF7B FFE6     	movff	postinc2,postinc1
 37466  0134DC  006F FF7B FFE6     	movff	postinc2,postinc1
 37467  0134E2  006F FF7B FFE6     	movff	postinc2,postinc1
 37468  0134E8  EC6B  F0A7         	call	___fldiv	;wreg free
 37469  0134EC  0060  F007  FFE6   	movff	btemp,postinc1
 37470  0134F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37471  0134F8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37472  0134FE  0060  F013  FFE6   	movff	btemp+3,postinc1
 37473  013504  0E8F               	movlw	low (_C+144)
 37474  013506  6EE6               	movwf	postinc1,c
 37475  013508  0E09               	movlw	high (_C+144)
 37476  01350A  6EE6               	movwf	postinc1,c
 37477  01350C  EC07  F0DF         	call	___asfladd	;wreg free
 37478                           
 37479                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 37480  013510  EE22  F18F         	lfsr	2,_C+144	;volatile
 37481  013514  006F FF7B FFE6     	movff	postinc2,postinc1
 37482  01351A  006F FF7B FFE6     	movff	postinc2,postinc1
 37483  013520  006F FF7B FFE6     	movff	postinc2,postinc1
 37484  013526  006F FF7B FFE6     	movff	postinc2,postinc1
 37485  01352C  EE22  F18B         	lfsr	2,_C+140	;volatile
 37486  013530  006F FF7B FFE6     	movff	postinc2,postinc1
 37487  013536  006F FF7B FFE6     	movff	postinc2,postinc1
 37488  01353C  006F FF7B FFE6     	movff	postinc2,postinc1
 37489  013542  006F FF7B FFE6     	movff	postinc2,postinc1
 37490  013548  EC67  F0CC         	call	___flge	;wreg free
 37491  01354C  B001               	btfsc	btemp& (0+255),0,c
 37492  01354E  D00E               	goto	l14098
 37493                           
 37494                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 37495  013550  EE22  F18B         	lfsr	2,_C+140	;volatile
 37496  013554  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
 37497  01355A  006F FF78  F990    	movff	postinc2,_C+145	;volatile
 37498  013560  006F FF78  F991    	movff	postinc2,_C+146	;volatile
 37499  013566  006F FF74  F992    	movff	postdec2,_C+147	;volatile
 37500  01356C                     l14098:
 37501                           
 37502                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 37503  01356C  0ECD               	movlw	205
 37504  01356E  6EE6               	movwf	postinc1,c
 37505  013570  0ECC               	movlw	204
 37506  013572  6EE6               	movwf	postinc1,c
 37507  013574  0ECC               	movlw	204
 37508  013576  6EE6               	movwf	postinc1,c
 37509  013578  0E3D               	movlw	61
 37510  01357A  6EE6               	movwf	postinc1,c
 37511  01357C  EE22  F18F         	lfsr	2,_C+144	;volatile
 37512  013580  006F FF7B FFE6     	movff	postinc2,postinc1
 37513  013586  006F FF7B FFE6     	movff	postinc2,postinc1
 37514  01358C  006F FF7B FFE6     	movff	postinc2,postinc1
 37515  013592  006F FF7B FFE6     	movff	postinc2,postinc1
 37516  013598  EC67  F0CC         	call	___flge	;wreg free
 37517  01359C  B001               	btfsc	btemp& (0+255),0,c
 37518  01359E  D010               	goto	l14102
 37519                           
 37520                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 37521  0135A0  0ECD               	movlw	205
 37522  0135A2  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
 37523  0135A8  0ECC               	movlw	204
 37524  0135AA  006F FFA0  F990    	movff	wreg,_C+145	;volatile
 37525  0135B0  0ECC               	movlw	204
 37526  0135B2  006F FFA0  F991    	movff	wreg,_C+146	;volatile
 37527  0135B8  0E3D               	movlw	61
 37528  0135BA  006F FFA0  F992    	movff	wreg,_C+147	;volatile
 37529  0135C0                     l14102:
 37530                           
 37531                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 37532  0135C0  EE22  F143         	lfsr	2,_C+68	;volatile
 37533  0135C4  006F FF7B FFE6     	movff	postinc2,postinc1
 37534  0135CA  006F FF7B FFE6     	movff	postinc2,postinc1
 37535  0135D0  006F FF7B FFE6     	movff	postinc2,postinc1
 37536  0135D6  006F FF7B FFE6     	movff	postinc2,postinc1
 37537  0135DC  0E0A               	movlw	10
 37538  0135DE  6EE6               	movwf	postinc1,c
 37539  0135E0  0ED7               	movlw	215
 37540  0135E2  6EE6               	movwf	postinc1,c
 37541  0135E4  0E23               	movlw	35
 37542  0135E6  6EE6               	movwf	postinc1,c
 37543  0135E8  0E3C               	movlw	60
 37544  0135EA  6EE6               	movwf	postinc1,c
 37545  0135EC  EC67  F0CC         	call	___flge	;wreg free
 37546  0135F0  B001               	btfsc	btemp& (0+255),0,c
 37547  0135F2  D01C               	goto	l14106
 37548                           
 37549                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 37550  0135F4  0062  F754  F009   	movff	_C+214,btemp+8	;volatile
 37551  0135FA  0062  F758  F00A   	movff	_C+215,btemp+9	;volatile
 37552  013600  0062  F75C  F00B   	movff	_C+216,btemp+10	;volatile
 37553  013606  0062  F760  F00C   	movff	_C+217,btemp+11	;volatile
 37554                           
 37555                           ;stkvar	_adj @ sp[(-6)+0]
 37556  01360C  0EFA               	movlw	-6
 37557  01360E  0060  F027  FFE3   	movff	btemp+8,plusw1
 37558  013614  0EFB               	movlw	-5
 37559  013616  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37560  01361C  0EFC               	movlw	-4
 37561  01361E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37562  013624  0EFD               	movlw	-3
 37563  013626  0060  F033  FFE3   	movff	btemp+11,plusw1
 37564  01362C                     l14106:
 37565                           
 37566                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 37567  01362C  0E0A               	movlw	10
 37568  01362E  6EE6               	movwf	postinc1,c
 37569  013630  0ED7               	movlw	215
 37570  013632  6EE6               	movwf	postinc1,c
 37571  013634  0E23               	movlw	35
 37572  013636  6EE6               	movwf	postinc1,c
 37573  013638  0E3C               	movlw	60
 37574  01363A  6EE6               	movwf	postinc1,c
 37575  01363C  EE22  F143         	lfsr	2,_C+68	;volatile
 37576  013640  006F FF7B FFE6     	movff	postinc2,postinc1
 37577  013646  006F FF7B FFE6     	movff	postinc2,postinc1
 37578  01364C  006F FF7B FFE6     	movff	postinc2,postinc1
 37579  013652  006F FF7B FFE6     	movff	postinc2,postinc1
 37580  013658  EC67  F0CC         	call	___flge	;wreg free
 37581  01365C  B001               	btfsc	btemp& (0+255),0,c
 37582  01365E  D01C               	goto	l14110
 37583                           
 37584                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 37585  013660  0062  F744  F009   	movff	_C+210,btemp+8	;volatile
 37586  013666  0062  F748  F00A   	movff	_C+211,btemp+9	;volatile
 37587  01366C  0062  F74C  F00B   	movff	_C+212,btemp+10	;volatile
 37588  013672  0062  F750  F00C   	movff	_C+213,btemp+11	;volatile
 37589                           
 37590                           ;stkvar	_adj @ sp[(-6)+0]
 37591  013678  0EFA               	movlw	-6
 37592  01367A  0060  F027  FFE3   	movff	btemp+8,plusw1
 37593  013680  0EFB               	movlw	-5
 37594  013682  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37595  013688  0EFC               	movlw	-4
 37596  01368A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37597  013690  0EFD               	movlw	-3
 37598  013692  0060  F033  FFE3   	movff	btemp+11,plusw1
 37599  013698                     l14110:
 37600                           
 37601                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 37602  013698  0E00               	movlw	0
 37603  01369A  6EE6               	movwf	postinc1,c
 37604  01369C  0E00               	movlw	0
 37605  01369E  6EE6               	movwf	postinc1,c
 37606  0136A0  0E61               	movlw	97
 37607  0136A2  6EE6               	movwf	postinc1,c
 37608  0136A4  0E45               	movlw	69
 37609  0136A6  6EE6               	movwf	postinc1,c
 37610                           
 37611                           ;stkvar	_adj @ sp[(-10)+0]
 37612  0136A8  0EF6               	movlw	-10
 37613  0136AA  006F FF8F FFE6     	movff	plusw1,postinc1
 37614  0136B0  006F FF8F FFE6     	movff	plusw1,postinc1
 37615  0136B6  006F FF8F FFE6     	movff	plusw1,postinc1
 37616  0136BC  006F FF8F FFE6     	movff	plusw1,postinc1
 37617  0136C2  EE22  F143         	lfsr	2,_C+68	;volatile
 37618  0136C6  006F FF7B FFE6     	movff	postinc2,postinc1
 37619  0136CC  006F FF7B FFE6     	movff	postinc2,postinc1
 37620  0136D2  006F FF7B FFE6     	movff	postinc2,postinc1
 37621  0136D8  006F FF7B FFE6     	movff	postinc2,postinc1
 37622  0136DE  EC78  F09F         	call	___flmul	;wreg free
 37623  0136E2  0060  F007  FFE6   	movff	btemp,postinc1
 37624  0136E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37625  0136EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37626  0136F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 37627  0136FA  EC6B  F0A7         	call	___fldiv	;wreg free
 37628  0136FE  0060  F007  FFE6   	movff	btemp,postinc1
 37629  013704  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37630  01370A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37631  013710  0060  F013  FFE6   	movff	btemp+3,postinc1
 37632  013716  0E8F               	movlw	low (_C+144)
 37633  013718  6EE6               	movwf	postinc1,c
 37634  01371A  0E09               	movlw	high (_C+144)
 37635  01371C  6EE6               	movwf	postinc1,c
 37636  01371E  EC07  F0DF         	call	___asfladd	;wreg free
 37637                           
 37638                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 37639  013722  EE22  F18F         	lfsr	2,_C+144	;volatile
 37640  013726  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 37641  01372C  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 37642  013732  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 37643  013738  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 37644                           
 37645                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 37646  01373E  EE22  F19B         	lfsr	2,_C+156	;volatile
 37647  013742  006F FF7B FFE6     	movff	postinc2,postinc1
 37648  013748  006F FF7B FFE6     	movff	postinc2,postinc1
 37649  01374E  006F FF7B FFE6     	movff	postinc2,postinc1
 37650  013754  006F FF7B FFE6     	movff	postinc2,postinc1
 37651  01375A  EE22  F18B         	lfsr	2,_C+140	;volatile
 37652  01375E  006F FF7B FFE6     	movff	postinc2,postinc1
 37653  013764  006F FF7B FFE6     	movff	postinc2,postinc1
 37654  01376A  006F FF7B FFE6     	movff	postinc2,postinc1
 37655  013770  006F FF7B FFE6     	movff	postinc2,postinc1
 37656  013776  EC67  F0CC         	call	___flge	;wreg free
 37657  01377A  B001               	btfsc	btemp& (0+255),0,c
 37658  01377C  D00E               	goto	l14118
 37659                           
 37660                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 37661  01377E  EE22  F18B         	lfsr	2,_C+140	;volatile
 37662  013782  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 37663  013788  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 37664  01378E  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 37665  013794  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 37666  01379A                     l14118:
 37667                           
 37668                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 37669  01379A  0ECD               	movlw	205
 37670  01379C  6EE6               	movwf	postinc1,c
 37671  01379E  0ECC               	movlw	204
 37672  0137A0  6EE6               	movwf	postinc1,c
 37673  0137A2  0ECC               	movlw	204
 37674  0137A4  6EE6               	movwf	postinc1,c
 37675  0137A6  0E3D               	movlw	61
 37676  0137A8  6EE6               	movwf	postinc1,c
 37677  0137AA  EE22  F19B         	lfsr	2,_C+156	;volatile
 37678  0137AE  006F FF7B FFE6     	movff	postinc2,postinc1
 37679  0137B4  006F FF7B FFE6     	movff	postinc2,postinc1
 37680  0137BA  006F FF7B FFE6     	movff	postinc2,postinc1
 37681  0137C0  006F FF7B FFE6     	movff	postinc2,postinc1
 37682  0137C6  EC67  F0CC         	call	___flge	;wreg free
 37683  0137CA  B001               	btfsc	btemp& (0+255),0,c
 37684  0137CC  D010               	goto	l14122
 37685                           
 37686                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 37687  0137CE  0ECD               	movlw	205
 37688  0137D0  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
 37689  0137D6  0ECC               	movlw	204
 37690  0137D8  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
 37691  0137DE  0ECC               	movlw	204
 37692  0137E0  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
 37693  0137E6  0E3D               	movlw	61
 37694  0137E8  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
 37695  0137EE                     l14122:
 37696                           
 37697                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 37698  0137EE  0E00               	movlw	0
 37699  0137F0  6EE6               	movwf	postinc1,c
 37700  0137F2  0E00               	movlw	0
 37701  0137F4  6EE6               	movwf	postinc1,c
 37702  0137F6  0E61               	movlw	97
 37703  0137F8  6EE6               	movwf	postinc1,c
 37704  0137FA  0E45               	movlw	69
 37705  0137FC  6EE6               	movwf	postinc1,c
 37706  0137FE  EE22  F147         	lfsr	2,_C+72	;volatile
 37707  013802  006F FF7B FFE6     	movff	postinc2,postinc1
 37708  013808  006F FF7B FFE6     	movff	postinc2,postinc1
 37709  01380E  006F FF7B FFE6     	movff	postinc2,postinc1
 37710  013814  006F FF7B FFE6     	movff	postinc2,postinc1
 37711  01381A  EC6B  F0A7         	call	___fldiv	;wreg free
 37712  01381E  0060  F007  FFE6   	movff	btemp,postinc1
 37713  013824  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37714  01382A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37715  013830  0060  F013  FFE6   	movff	btemp+3,postinc1
 37716  013836  0E93               	movlw	low (_C+148)
 37717  013838  6EE6               	movwf	postinc1,c
 37718  01383A  0E09               	movlw	high (_C+148)
 37719  01383C  6EE6               	movwf	postinc1,c
 37720  01383E  EC07  F0DF         	call	___asfladd	;wreg free
 37721                           
 37722                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 37723  013842  0E00               	movlw	0
 37724  013844  6EE6               	movwf	postinc1,c
 37725  013846  0E00               	movlw	0
 37726  013848  6EE6               	movwf	postinc1,c
 37727  01384A  0E61               	movlw	97
 37728  01384C  6EE6               	movwf	postinc1,c
 37729  01384E  0E45               	movlw	69
 37730  013850  6EE6               	movwf	postinc1,c
 37731  013852  EE22  F17B         	lfsr	2,_C+124	;volatile
 37732  013856  006F FF7B FFE6     	movff	postinc2,postinc1
 37733  01385C  006F FF7B FFE6     	movff	postinc2,postinc1
 37734  013862  006F FF7B FFE6     	movff	postinc2,postinc1
 37735  013868  006F FF7B FFE6     	movff	postinc2,postinc1
 37736  01386E  EC6B  F0A7         	call	___fldiv	;wreg free
 37737  013872  0060  F007  FFE6   	movff	btemp,postinc1
 37738  013878  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37739  01387E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37740  013884  0060  F013  FFE6   	movff	btemp+3,postinc1
 37741  01388A  0EA7               	movlw	low (_C+168)
 37742  01388C  6EE6               	movwf	postinc1,c
 37743  01388E  0E09               	movlw	high (_C+168)
 37744  013890  6EE6               	movwf	postinc1,c
 37745  013892  EC07  F0DF         	call	___asfladd	;wreg free
 37746                           
 37747                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 37748  013896  0E00               	movlw	0
 37749  013898  6EE6               	movwf	postinc1,c
 37750  01389A  0E00               	movlw	0
 37751  01389C  6EE6               	movwf	postinc1,c
 37752  01389E  0E61               	movlw	97
 37753  0138A0  6EE6               	movwf	postinc1,c
 37754  0138A2  0E45               	movlw	69
 37755  0138A4  6EE6               	movwf	postinc1,c
 37756  0138A6  EE22  F177         	lfsr	2,_C+120	;volatile
 37757  0138AA  006F FF7B FFE6     	movff	postinc2,postinc1
 37758  0138B0  006F FF7B FFE6     	movff	postinc2,postinc1
 37759  0138B6  006F FF7B FFE6     	movff	postinc2,postinc1
 37760  0138BC  006F FF7B FFE6     	movff	postinc2,postinc1
 37761  0138C2  EC6B  F0A7         	call	___fldiv	;wreg free
 37762  0138C6  0060  F007  FFE6   	movff	btemp,postinc1
 37763  0138CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37764  0138D2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37765  0138D8  0060  F013  FFE6   	movff	btemp+3,postinc1
 37766  0138DE  0EAB               	movlw	low (_C+172)
 37767  0138E0  6EE6               	movwf	postinc1,c
 37768  0138E2  0E09               	movlw	high (_C+172)
 37769  0138E4  6EE6               	movwf	postinc1,c
 37770  0138E6  EC07  F0DF         	call	___asfladd	;wreg free
 37771                           
 37772                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 37773  0138EA  0E00               	movlw	0
 37774  0138EC  6EE6               	movwf	postinc1,c
 37775  0138EE  0E00               	movlw	0
 37776  0138F0  6EE6               	movwf	postinc1,c
 37777  0138F2  0E61               	movlw	97
 37778  0138F4  6EE6               	movwf	postinc1,c
 37779  0138F6  0E45               	movlw	69
 37780  0138F8  6EE6               	movwf	postinc1,c
 37781  0138FA  EE22  F173         	lfsr	2,_C+116	;volatile
 37782  0138FE  006F FF7B FFE6     	movff	postinc2,postinc1
 37783  013904  006F FF7B FFE6     	movff	postinc2,postinc1
 37784  01390A  006F FF7B FFE6     	movff	postinc2,postinc1
 37785  013910  006F FF7B FFE6     	movff	postinc2,postinc1
 37786  013916  EC6B  F0A7         	call	___fldiv	;wreg free
 37787  01391A  0060  F007  FFE6   	movff	btemp,postinc1
 37788  013920  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37789  013926  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37790  01392C  0060  F013  FFE6   	movff	btemp+3,postinc1
 37791  013932  0EAF               	movlw	low (_C+176)
 37792  013934  6EE6               	movwf	postinc1,c
 37793  013936  0E09               	movlw	high (_C+176)
 37794  013938  6EE6               	movwf	postinc1,c
 37795  01393A  EC07  F0DF         	call	___asfladd	;wreg free
 37796                           
 37797                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 37798  01393E  EE22  F17F         	lfsr	2,_C+128	;volatile
 37799  013942  006F FF7B FFE6     	movff	postinc2,postinc1
 37800  013948  006F FF7B FFE6     	movff	postinc2,postinc1
 37801  01394E  006F FF7B FFE6     	movff	postinc2,postinc1
 37802  013954  006F FF7B FFE6     	movff	postinc2,postinc1
 37803  01395A  0E00               	movlw	0
 37804  01395C  6EE6               	movwf	postinc1,c
 37805  01395E  0E00               	movlw	0
 37806  013960  6EE6               	movwf	postinc1,c
 37807  013962  0E00               	movlw	0
 37808  013964  6EE6               	movwf	postinc1,c
 37809  013966  0E00               	movlw	0
 37810  013968  6EE6               	movwf	postinc1,c
 37811  01396A  EC67  F0CC         	call	___flge	;wreg free
 37812  01396E  B001               	btfsc	btemp& (0+255),0,c
 37813  013970  D02A               	goto	l14128
 37814                           
 37815                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 37816  013972  0E00               	movlw	0
 37817  013974  6EE6               	movwf	postinc1,c
 37818  013976  0E00               	movlw	0
 37819  013978  6EE6               	movwf	postinc1,c
 37820  01397A  0E61               	movlw	97
 37821  01397C  6EE6               	movwf	postinc1,c
 37822  01397E  0E45               	movlw	69
 37823  013980  6EE6               	movwf	postinc1,c
 37824  013982  EE22  F17F         	lfsr	2,_C+128	;volatile
 37825  013986  006F FF7B FFE6     	movff	postinc2,postinc1
 37826  01398C  006F FF7B FFE6     	movff	postinc2,postinc1
 37827  013992  006F FF7B FFE6     	movff	postinc2,postinc1
 37828  013998  006F FF7B FFE6     	movff	postinc2,postinc1
 37829  01399E  EC6B  F0A7         	call	___fldiv	;wreg free
 37830  0139A2  0060  F007  FFE6   	movff	btemp,postinc1
 37831  0139A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37832  0139AE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37833  0139B4  0060  F013  FFE6   	movff	btemp+3,postinc1
 37834  0139BA  0E9F               	movlw	low (_C+160)
 37835  0139BC  6EE6               	movwf	postinc1,c
 37836  0139BE  0E09               	movlw	high (_C+160)
 37837  0139C0  6EE6               	movwf	postinc1,c
 37838  0139C2  EC07  F0DF         	call	___asfladd	;wreg free
 37839  0139C6                     l14128:
 37840                           
 37841                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 37842  0139C6  EE22  F17F         	lfsr	2,_C+128	;volatile
 37843  0139CA  0E03               	movlw	3
 37844  0139CC  AEDB               	btfss	plusw2,7,c
 37845  0139CE  D038               	goto	l14132
 37846                           
 37847                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 37848  0139D0  0E00               	movlw	0
 37849  0139D2  6EE6               	movwf	postinc1,c
 37850  0139D4  0E00               	movlw	0
 37851  0139D6  6EE6               	movwf	postinc1,c
 37852  0139D8  0E61               	movlw	97
 37853  0139DA  6EE6               	movwf	postinc1,c
 37854  0139DC  0E45               	movlw	69
 37855  0139DE  6EE6               	movwf	postinc1,c
 37856  0139E0  EE22  F17F         	lfsr	2,_C+128	;volatile
 37857  0139E4  006F FF7B FFE6     	movff	postinc2,postinc1
 37858  0139EA  006F FF7B FFE6     	movff	postinc2,postinc1
 37859  0139F0  006F FF7B FFE6     	movff	postinc2,postinc1
 37860  0139F6  006F FF7B FFE6     	movff	postinc2,postinc1
 37861  0139FC  EC6B  F0A7         	call	___fldiv	;wreg free
 37862  013A00  0060  F007  FFE6   	movff	btemp,postinc1
 37863  013A06  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37864  013A0C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37865  013A12  0060  F013  FFE6   	movff	btemp+3,postinc1
 37866  013A18  ECC3  F0D9         	call	_fabsf	;wreg free
 37867  013A1C  0060  F007  FFE6   	movff	btemp,postinc1
 37868  013A22  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37869  013A28  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37870  013A2E  0060  F013  FFE6   	movff	btemp+3,postinc1
 37871  013A34  0EA3               	movlw	low (_C+164)
 37872  013A36  6EE6               	movwf	postinc1,c
 37873  013A38  0E09               	movlw	high (_C+164)
 37874  013A3A  6EE6               	movwf	postinc1,c
 37875  013A3C  EC07  F0DF         	call	___asfladd	;wreg free
 37876  013A40                     l14132:
 37877                           
 37878                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 37879  013A40  0E00               	movlw	0
 37880  013A42  6EE6               	movwf	postinc1,c
 37881  013A44  0E00               	movlw	0
 37882  013A46  6EE6               	movwf	postinc1,c
 37883  013A48  0EC8               	movlw	200
 37884  013A4A  6EE6               	movwf	postinc1,c
 37885  013A4C  0E42               	movlw	66
 37886  013A4E  6EE6               	movwf	postinc1,c
 37887  013A50  EE22  F18B         	lfsr	2,_C+140	;volatile
 37888  013A54  006F FF7B FFE6     	movff	postinc2,postinc1
 37889  013A5A  006F FF7B FFE6     	movff	postinc2,postinc1
 37890  013A60  006F FF7B FFE6     	movff	postinc2,postinc1
 37891  013A66  006F FF7B FFE6     	movff	postinc2,postinc1
 37892  013A6C  EE22  F19B         	lfsr	2,_C+156	;volatile
 37893  013A70  006F FF7B FFE6     	movff	postinc2,postinc1
 37894  013A76  006F FF7B FFE6     	movff	postinc2,postinc1
 37895  013A7C  006F FF7B FFE6     	movff	postinc2,postinc1
 37896  013A82  006F FF7B FFE6     	movff	postinc2,postinc1
 37897  013A88  EC6B  F0A7         	call	___fldiv	;wreg free
 37898  013A8C  0060  F007  FFE6   	movff	btemp,postinc1
 37899  013A92  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37900  013A98  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37901  013A9E  0060  F013  FFE6   	movff	btemp+3,postinc1
 37902  013AA4  EC78  F09F         	call	___flmul	;wreg free
 37903  013AA8  0060  F007  FFE6   	movff	btemp,postinc1
 37904  013AAE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37905  013AB4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37906  013ABA  0060  F013  FFE6   	movff	btemp+3,postinc1
 37907  013AC0  ECAE  F0CB         	call	___fltol	;wreg free
 37908  013AC4  0060  F004  F00B   	movff	btemp,btemp+10
 37909  013ACA  0060  F008  F00C   	movff	btemp+1,btemp+11
 37910  013AD0  0E01               	movlw	1
 37911  013AD2  260B               	addwf	(btemp+10)^0,f,c
 37912  013AD4  0E00               	movlw	0
 37913  013AD6  220C               	addwfc	(btemp+11)^0,f,c
 37914  013AD8  0060  F02C  F9B5   	movff	btemp+10,_C+182	;volatile
 37915  013ADE  0060  F030  F9B6   	movff	btemp+11,_C+183	;volatile
 37916                           
 37917                           ;bsoc.c: 76:  if (C.soc > 100)
 37918  013AE4  EE22  F1B5         	lfsr	2,_C+182	;volatile
 37919  013AE8  0E01               	movlw	1
 37920  013AEA  50DB               	movf	plusw2,w,c
 37921  013AEC  E104               	bnz	u1353_20
 37922  013AEE  0E65               	movlw	101
 37923  013AF0  5CDE               	subwf	postinc2,w,c
 37924  013AF2  A0D8               	btfss	status,0,c
 37925  013AF4  D008               	goto	l14138
 37926  013AF6                     u1353_20:
 37927                           
 37928                           ;bsoc.c: 77:   C.soc = 100;
 37929  013AF6  0E64               	movlw	100
 37930  013AF8  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
 37931  013AFE  0E00               	movlw	0
 37932  013B00  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
 37933  013B06                     l14138:
 37934                           
 37935                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 37936  013B06  EE22  F143         	lfsr	2,_C+68	;volatile
 37937  013B0A  0E03               	movlw	3
 37938  013B0C  AEDB               	btfss	plusw2,7,c
 37939  013B0E  D047               	goto	l2309
 37940                           
 37941                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 37942  013B10  EE22  F143         	lfsr	2,_C+68	;volatile
 37943  013B14  006F FF7B FFE6     	movff	postinc2,postinc1
 37944  013B1A  006F FF7B FFE6     	movff	postinc2,postinc1
 37945  013B20  006F FF7B FFE6     	movff	postinc2,postinc1
 37946  013B26  006F FF7B FFE6     	movff	postinc2,postinc1
 37947  013B2C  EE22  F19B         	lfsr	2,_C+156	;volatile
 37948  013B30  006F FF7B FFE6     	movff	postinc2,postinc1
 37949  013B36  006F FF7B FFE6     	movff	postinc2,postinc1
 37950  013B3C  006F FF7B FFE6     	movff	postinc2,postinc1
 37951  013B42  006F FF7B FFE6     	movff	postinc2,postinc1
 37952  013B48  EC6B  F0A7         	call	___fldiv	;wreg free
 37953  013B4C  0060  F007  FFE6   	movff	btemp,postinc1
 37954  013B52  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37955  013B58  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37956  013B5E  0060  F013  FFE6   	movff	btemp+3,postinc1
 37957  013B64  ECBB  F0E2         	call	___flneg	;wreg free
 37958  013B68  0060  F007  FFE6   	movff	btemp,postinc1
 37959  013B6E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37960  013B74  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37961  013B7A  0060  F013  FFE6   	movff	btemp+3,postinc1
 37962  013B80  ECAE  F0CB         	call	___fltol	;wreg free
 37963  013B84  0060  F004  F00B   	movff	btemp,btemp+10
 37964  013B8A  0060  F008  F00C   	movff	btemp+1,btemp+11
 37965  013B90  0060  F02C  F9B3   	movff	btemp+10,_C+180	;volatile
 37966  013B96  0060  F030  F9B4   	movff	btemp+11,_C+181	;volatile
 37967                           
 37968                           ;bsoc.c: 81:  } else {
 37969  013B9C  D008               	goto	l14142
 37970  013B9E                     l2309:
 37971                           
 37972                           ;bsoc.c: 82:   C.runtime = 99;
 37973  013B9E  0E63               	movlw	99
 37974  013BA0  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 37975  013BA6  0E00               	movlw	0
 37976  013BA8  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 37977  013BAE                     l14142:
 37978                           
 37979                           ;bsoc.c: 84:  if (C.runtime > 99)
 37980  013BAE  EE22  F1B3         	lfsr	2,_C+180	;volatile
 37981  013BB2  0E01               	movlw	1
 37982  013BB4  50DB               	movf	plusw2,w,c
 37983  013BB6  E104               	bnz	u1355_20
 37984  013BB8  0E64               	movlw	100
 37985  013BBA  5CDE               	subwf	postinc2,w,c
 37986  013BBC  A0D8               	btfss	status,0,c
 37987  013BBE  D008               	goto	l14146
 37988  013BC0                     u1355_20:
 37989                           
 37990                           ;bsoc.c: 85:   C.runtime = 99;
 37991  013BC0  0E63               	movlw	99
 37992  013BC2  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 37993  013BC8  0E00               	movlw	0
 37994  013BCA  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 37995  013BD0                     l14146:
 37996                           
 37997                           ;bsoc.c: 87:  V.lowint_count++;
 37998  013BD0  0E01               	movlw	1
 37999  013BD2  0101               	movlb	1	; () banked
 38000  013BD4  27BB               	addwf	(_V+180)& (0+255),f,b	;volatile
 38001  013BD6  0E00               	movlw	0
 38002  013BD8  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 38003  013BDA  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 38004  013BDC  23BE               	addwfc	(_V+183)& (0+255),f,b	;volatile
 38005                           
 38006                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 38007  013BDE  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 38008  013BE0  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 38009  013BE2  A4D8               	btfss	status,2,c
 38010  013BE4  D177               	goto	l14158
 38011                           
 38012                           ; BSR set to: 1
 38013  013BE6  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 38014  013BE8  B4D8               	btfsc	status,2,c
 38015  013BEA  D174               	goto	l14158
 38016                           
 38017                           ; BSR set to: 1
 38018                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 38019  013BEC  EC86  F0E9         	call	_port_data_dma_ptr	;wreg free
 38020                           
 38021                           ;stkvar	_log_ptr @ sp[(-6)+4]
 38022  013BF0  0EFF               	movlw	-1
 38023  013BF2  0060  F00B  FFE3   	movff	btemp+1,plusw1
 38024  013BF8  0EFE               	movlw	-2
 38025  013BFA  0060  F007  FFE3   	movff	btemp,plusw1
 38026                           
 38027                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 38028  013C00  EE22  F1D1         	lfsr	2,_C+210	;volatile
 38029  013C04  006F FF7B FFE6     	movff	postinc2,postinc1
 38030  013C0A  006F FF7B FFE6     	movff	postinc2,postinc1
 38031  013C10  006F FF7B FFE6     	movff	postinc2,postinc1
 38032  013C16  006F FF7B FFE6     	movff	postinc2,postinc1
 38033  013C1C  EE22  F1D5         	lfsr	2,_C+214	;volatile
 38034  013C20  006F FF7B FFE6     	movff	postinc2,postinc1
 38035  013C26  006F FF7B FFE6     	movff	postinc2,postinc1
 38036  013C2C  006F FF7B FFE6     	movff	postinc2,postinc1
 38037  013C32  006F FF7B FFE6     	movff	postinc2,postinc1
 38038  013C38  EE22  F19B         	lfsr	2,_C+156	;volatile
 38039  013C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 38040  013C42  006F FF7B FFE6     	movff	postinc2,postinc1
 38041  013C48  006F FF7B FFE6     	movff	postinc2,postinc1
 38042  013C4E  006F FF7B FFE6     	movff	postinc2,postinc1
 38043  013C54  EE22  F23E         	lfsr	2,_C+319	;volatile
 38044  013C58  006F FF7B FFE6     	movff	postinc2,postinc1
 38045  013C5E  006F FF7B FFE6     	movff	postinc2,postinc1
 38046  013C64  006F FF7B FFE6     	movff	postinc2,postinc1
 38047  013C6A  006F FF7B FFE6     	movff	postinc2,postinc1
 38048  013C70  EE22  F23A         	lfsr	2,_C+315	;volatile
 38049  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 38050  013C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 38051  013C80  006F FF7B FFE6     	movff	postinc2,postinc1
 38052  013C86  006F FF7B FFE6     	movff	postinc2,postinc1
 38053  013C8C  EE22  F239         	lfsr	2,_C+314	;volatile
 38054  013C90  50DF               	movf	indf2,w,c
 38055  013C92  6EE6               	movwf	postinc1,c
 38056  013C94  0E00               	movlw	0
 38057  013C96  6EE6               	movwf	postinc1,c
 38058  013C98  EC6A  F0E9         	call	_get_ac_charger_relay	;wreg free
 38059  013C9C  5001               	movf	btemp^0,w,c
 38060  013C9E  6EE6               	movwf	postinc1,c
 38061  013CA0  0E00               	movlw	0
 38062  013CA2  6EE6               	movwf	postinc1,c
 38063  013CA4  EE22  F167         	lfsr	2,_C+104	;volatile
 38064  013CA8  006F FF7B FFE6     	movff	postinc2,postinc1
 38065  013CAE  006F FF7B FFE6     	movff	postinc2,postinc1
 38066  013CB4  006F FF7B FFE6     	movff	postinc2,postinc1
 38067  013CBA  006F FF7B FFE6     	movff	postinc2,postinc1
 38068  013CC0  EE22  F187         	lfsr	2,_C+136	;volatile
 38069  013CC4  006F FF7B FFE6     	movff	postinc2,postinc1
 38070  013CCA  006F FF7B FFE6     	movff	postinc2,postinc1
 38071  013CD0  006F FF7B FFE6     	movff	postinc2,postinc1
 38072  013CD6  006F FF7B FFE6     	movff	postinc2,postinc1
 38073  013CDC  EE22  F1B3         	lfsr	2,_C+180	;volatile
 38074  013CE0  006F FF78  F00B    	movff	postinc2,btemp+10
 38075  013CE6  006F FF74  F00C    	movff	postdec2,btemp+11
 38076  013CEC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 38077  013CF2  0060  F033  FFE6   	movff	btemp+11,postinc1
 38078  013CF8  EE22  F1B5         	lfsr	2,_C+182	;volatile
 38079  013CFC  006F FF78  F00B    	movff	postinc2,btemp+10
 38080  013D02  006F FF74  F00C    	movff	postdec2,btemp+11
 38081  013D08  0060  F02F  FFE6   	movff	btemp+10,postinc1
 38082  013D0E  0060  F033  FFE6   	movff	btemp+11,postinc1
 38083  013D14  EE22  F193         	lfsr	2,_C+148	;volatile
 38084  013D18  006F FF7B FFE6     	movff	postinc2,postinc1
 38085  013D1E  006F FF7B FFE6     	movff	postinc2,postinc1
 38086  013D24  006F FF7B FFE6     	movff	postinc2,postinc1
 38087  013D2A  006F FF7B FFE6     	movff	postinc2,postinc1
 38088  013D30  EE22  F18F         	lfsr	2,_C+144	;volatile
 38089  013D34  006F FF7B FFE6     	movff	postinc2,postinc1
 38090  013D3A  006F FF7B FFE6     	movff	postinc2,postinc1
 38091  013D40  006F FF7B FFE6     	movff	postinc2,postinc1
 38092  013D46  006F FF7B FFE6     	movff	postinc2,postinc1
 38093  013D4C  EE22  F177         	lfsr	2,_C+120	;volatile
 38094  013D50  006F FF7B FFE6     	movff	postinc2,postinc1
 38095  013D56  006F FF7B FFE6     	movff	postinc2,postinc1
 38096  013D5C  006F FF7B FFE6     	movff	postinc2,postinc1
 38097  013D62  006F FF7B FFE6     	movff	postinc2,postinc1
 38098  013D68  EE22  F173         	lfsr	2,_C+116	;volatile
 38099  013D6C  006F FF7B FFE6     	movff	postinc2,postinc1
 38100  013D72  006F FF7B FFE6     	movff	postinc2,postinc1
 38101  013D78  006F FF7B FFE6     	movff	postinc2,postinc1
 38102  013D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 38103  013D84  EE22  F17B         	lfsr	2,_C+124	;volatile
 38104  013D88  006F FF7B FFE6     	movff	postinc2,postinc1
 38105  013D8E  006F FF7B FFE6     	movff	postinc2,postinc1
 38106  013D94  006F FF7B FFE6     	movff	postinc2,postinc1
 38107  013D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 38108  013DA0  EE22  F17F         	lfsr	2,_C+128	;volatile
 38109  013DA4  006F FF7B FFE6     	movff	postinc2,postinc1
 38110  013DAA  006F FF7B FFE6     	movff	postinc2,postinc1
 38111  013DB0  006F FF7B FFE6     	movff	postinc2,postinc1
 38112  013DB6  006F FF7B FFE6     	movff	postinc2,postinc1
 38113  013DBC  EE22  F147         	lfsr	2,_C+72	;volatile
 38114  013DC0  006F FF7B FFE6     	movff	postinc2,postinc1
 38115  013DC6  006F FF7B FFE6     	movff	postinc2,postinc1
 38116  013DCC  006F FF7B FFE6     	movff	postinc2,postinc1
 38117  013DD2  006F FF7B FFE6     	movff	postinc2,postinc1
 38118  013DD8  EE22  F143         	lfsr	2,_C+68	;volatile
 38119  013DDC  006F FF7B FFE6     	movff	postinc2,postinc1
 38120  013DE2  006F FF7B FFE6     	movff	postinc2,postinc1
 38121  013DE8  006F FF7B FFE6     	movff	postinc2,postinc1
 38122  013DEE  006F FF7B FFE6     	movff	postinc2,postinc1
 38123  013DF4  EE22  F163         	lfsr	2,_C+100	;volatile
 38124  013DF8  006F FF7B FFE6     	movff	postinc2,postinc1
 38125  013DFE  006F FF7B FFE6     	movff	postinc2,postinc1
 38126  013E04  006F FF7B FFE6     	movff	postinc2,postinc1
 38127  013E0A  006F FF7B FFE6     	movff	postinc2,postinc1
 38128  013E10  EE22  F14B         	lfsr	2,_C+76	;volatile
 38129  013E14  006F FF7B FFE6     	movff	postinc2,postinc1
 38130  013E1A  006F FF7B FFE6     	movff	postinc2,postinc1
 38131  013E20  006F FF7B FFE6     	movff	postinc2,postinc1
 38132  013E26  006F FF7B FFE6     	movff	postinc2,postinc1
 38133  013E2C  EE22  F14F         	lfsr	2,_C+80	;volatile
 38134  013E30  006F FF7B FFE6     	movff	postinc2,postinc1
 38135  013E36  006F FF7B FFE6     	movff	postinc2,postinc1
 38136  013E3C  006F FF7B FFE6     	movff	postinc2,postinc1
 38137  013E42  006F FF7B FFE6     	movff	postinc2,postinc1
 38138  013E48  EE22  F153         	lfsr	2,_C+84	;volatile
 38139  013E4C  006F FF7B FFE6     	movff	postinc2,postinc1
 38140  013E52  006F FF7B FFE6     	movff	postinc2,postinc1
 38141  013E58  006F FF7B FFE6     	movff	postinc2,postinc1
 38142  013E5E  006F FF7B FFE6     	movff	postinc2,postinc1
 38143  013E64  0060  F623  FFE6   	movff	_V+129,postinc1
 38144  013E6A  0060  F627  FFE6   	movff	_V+130,postinc1
 38145  013E70  0060  F62B  FFE6   	movff	_V+131,postinc1
 38146  013E76  0060  F62F  FFE6   	movff	_V+132,postinc1
 38147  013E7C  0E32               	movlw	50
 38148  013E7E  6EE6               	movwf	postinc1,c
 38149  013E80  0E00               	movlw	0
 38150  013E82  6EE6               	movwf	postinc1,c
 38151  013E84  0ECF               	movlw	low STR_80
 38152  013E86  6EE6               	movwf	postinc1,c
 38153  013E88  0EFA               	movlw	high STR_80
 38154  013E8A  6EE6               	movwf	postinc1,c
 38155                           
 38156                           ;stkvar	_log_ptr @ sp[(-98)+4]
 38157  013E8C  0EA2               	movlw	-94
 38158  013E8E  006F FF8F FFE6     	movff	plusw1,postinc1
 38159  013E94  006F FF8F FFE6     	movff	plusw1,postinc1
 38160  013E9A  0E5E               	movlw	94
 38161  013E9C  6EE6               	movwf	postinc1,c
 38162  013E9E  ECCE  F0D4         	call	_sprintf	;wreg free
 38163                           
 38164                           ; BSR set to: 0
 38165                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 38166  013EA2  0E7D               	movlw	125
 38167  013EA4  6EE6               	movwf	postinc1,c
 38168  013EA6  0E00               	movlw	0
 38169  013EA8  6EE6               	movwf	postinc1,c
 38170  013EAA  0E0A               	movlw	10
 38171  013EAC  6EE6               	movwf	postinc1,c
 38172  013EAE  EC14  F0E4         	call	_StartTimer	;wreg free
 38173                           
 38174                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 38175                           ;stkvar	_log_ptr @ sp[(-6)+4]
 38176  013EB2  0EFE               	movlw	-2
 38177  013EB4  006F FF8F FFE6     	movff	plusw1,postinc1
 38178  013EBA  006F FF8F FFE6     	movff	plusw1,postinc1
 38179  013EC0  ECC0  F0DB         	call	_strlen	;wreg free
 38180  013EC4  0060  F007  FFE6   	movff	btemp,postinc1
 38181  013ECA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38182  013ED0  EC1F  F0E2         	call	_send_port_data_dma	;wreg free
 38183  013ED4                     l14158:
 38184                           
 38185                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 38186  013ED4  0E09               	movlw	9
 38187  013ED6  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 38188  013ED8  D001               	goto	l2313
 38189                           
 38190                           ;bsoc.c: 102:   log_update_wait = 0;
 38191  013EDA  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 38192  013EDC                     l2313:
 38193                           
 38194                           ;bsoc.c: 104:  C.update = 0;
 38195  013EDC  0E00               	movlw	0
 38196  013EDE  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 38197                           
 38198                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 38199  013EE4  92BE               	bcf	190,1,c	;volatile
 38200                           
 38201                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 38202  013EE6  0EFA               	movlw	250
 38203  013EE8  26E1               	addwf	fsr1l,f,c
 38204  013EEA  0EFF               	movlw	255
 38205  013EEC  22E2               	addwfc	fsr1h,f,c
 38206  013EEE  0012               	return		;funcret
 38207  013EF0                     __end_of_calc_bsoc:
 38208                           	opt callstack 0
 38209                           
 38210 ;; *************** function _send_port_data_dma *****************
 38211 ;; Defined at:
 38212 ;;		line 398 in file "eadog.c"
 38213 ;; Parameters:    Size  Location     Type
 38214 ;;  dsize           2  [STACK] unsigned short 
 38215 ;; Auto vars:     Size  Location     Type
 38216 ;;		None
 38217 ;; Return value:  Size  Location     Type
 38218 ;;                  1  [STACK] void 
 38219 ;; Registers used:
 38220 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38221 ;; Tracked objects:
 38222 ;;		On entry : 0/0
 38223 ;;		On exit  : 3F/3B
 38224 ;;		Unchanged: 0/0
 38225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38230 ;;Total ram usage:        0 bytes
 38231 ;; Hardware stack levels used:    1
 38232 ;; Hardware stack levels required when called:    3
 38233 ;; This function calls:
 38234 ;;		Nothing
 38235 ;; This function is called by:
 38236 ;;		_calc_bsoc
 38237 ;; This function uses a reentrant model
 38238 ;;
 38239                           
 38240                           	psect	text174
 38241  01C43E                     __ptext174:
 38242                           	opt callstack 0
 38243  01C43E                     _send_port_data_dma:
 38244                           	opt callstack 10
 38245                           
 38246                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 38247                           ;stkvar	_dsize @ sp[(0)+-2]
 38248                           
 38249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38250                           ;incstack = 0
 38251  01C43E  0EFE               	movlw	-2
 38252  01C440  04E3               	decf	plusw1,w,c
 38253  01C442  0EFF               	movlw	-1
 38254  01C444  006F FF8C  F001    	movff	plusw1,btemp
 38255  01C44A  0E02               	movlw	2
 38256  01C44C  5A01               	subwfb	btemp^0,f,c
 38257  01C44E  A0D8               	btfss	status,0,c
 38258  01C450  D00C               	goto	l10844
 38259                           
 38260                           ;eadog.c: 401:   dsize = 512;
 38261  01C452  0E00               	movlw	0
 38262  01C454  6E0B               	movwf	(btemp+10)^0,c
 38263  01C456  0E02               	movlw	2
 38264  01C458  6E0C               	movwf	(btemp+11)^0,c
 38265                           
 38266                           ;stkvar	_dsize @ sp[(0)+-2]
 38267  01C45A  0EFE               	movlw	-2
 38268  01C45C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38269  01C462  0EFF               	movlw	-1
 38270  01C464  0060  F033  FFE3   	movff	btemp+11,plusw1
 38271  01C46A                     l10844:
 38272                           
 38273                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 38274  01C46A  013B               	movlb	59	; () banked
 38275  01C46C  9FDC               	bcf	220,7,b	;volatile
 38276                           
 38277                           ; BSR set to: 59
 38278                           ;eadog.c: 404:  DMA2SSZ = dsize;
 38279                           ;stkvar	_dsize @ sp[(0)+-2]
 38280  01C46E  0EFE               	movlw	-2
 38281  01C470  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 38282  01C476  0EFF               	movlw	-1
 38283  01C478  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 38284                           
 38285                           ; BSR set to: 59
 38286                           ;eadog.c: 405:  DMA2DSZ = 1;
 38287  01C47E  0E00               	movlw	0
 38288  01C480  6FCF               	movwf	207,b	;volatile
 38289  01C482  0E01               	movlw	1
 38290  01C484  6FCE               	movwf	206,b	;volatile
 38291                           
 38292                           ; BSR set to: 59
 38293                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 38294  01C486  8FDC               	bsf	220,7,b	;volatile
 38295                           
 38296                           ; BSR set to: 59
 38297                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 38298  01C488  8DDC               	bsf	220,6,b	;volatile
 38299                           
 38300                           ; BSR set to: 59
 38301                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38302  01C48A  52E5               	movf	postdec1,f,c
 38303  01C48C  52E5               	movf	postdec1,f,c
 38304  01C48E  0012               	return		;funcret
 38305  01C490                     __end_of_send_port_data_dma:
 38306                           	opt callstack 0
 38307                           
 38308 ;; *************** function _port_data_dma_ptr *****************
 38309 ;; Defined at:
 38310 ;;		line 413 in file "eadog.c"
 38311 ;; Parameters:    Size  Location     Type
 38312 ;;		None
 38313 ;; Auto vars:     Size  Location     Type
 38314 ;;		None
 38315 ;; Return value:  Size  Location     Type
 38316 ;;                  2  [STACK] PTR unsigned char 
 38317 ;; Registers used:
 38318 ;;		wreg, status,2, status,0, btemp, btemp+1
 38319 ;; Tracked objects:
 38320 ;;		On entry : 3F/1
 38321 ;;		On exit  : 0/0
 38322 ;;		Unchanged: 0/0
 38323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38328 ;;Total ram usage:        0 bytes
 38329 ;; Hardware stack levels used:    1
 38330 ;; Hardware stack levels required when called:    3
 38331 ;; This function calls:
 38332 ;;		Nothing
 38333 ;; This function is called by:
 38334 ;;		_calc_bsoc
 38335 ;; This function uses a reentrant model
 38336 ;;
 38337                           
 38338                           	psect	text175
 38339  01D30C                     __ptext175:
 38340                           	opt callstack 0
 38341  01D30C                     _port_data_dma_ptr:
 38342                           	opt callstack 10
 38343                           
 38344                           ;eadog.c: 415:  return port_data;
 38345                           
 38346                           ; BSR set to: 59
 38347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38348                           ;incstack = 0
 38349  01D30C  0EFF               	movlw	low _port_data
 38350  01D30E  6E01               	movwf	btemp^0,c
 38351  01D310  0E06               	movlw	high _port_data
 38352  01D312  6E02               	movwf	(btemp+1)^0,c
 38353                           
 38354                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 38355  01D314  0012               	return		;funcret
 38356  01D316                     __end_of_port_data_dma_ptr:
 38357                           	opt callstack 0
 38358                           
 38359 ;; *************** function ___asfladd *****************
 38360 ;; Defined at:
 38361 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 38362 ;; Parameters:    Size  Location     Type
 38363 ;;  f1p             2  [STACK] PTR 
 38364 ;;		 -> C(323), 
 38365 ;;  f2              4  [STACK] PTR 
 38366 ;; Auto vars:     Size  Location     Type
 38367 ;;		None
 38368 ;; Return value:  Size  Location     Type
 38369 ;;                  4  [STACK] PTR 
 38370 ;; Registers used:
 38371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 38372 ;; Tracked objects:
 38373 ;;		On entry : 0/0
 38374 ;;		On exit  : 0/0
 38375 ;;		Unchanged: 0/0
 38376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38381 ;;Total ram usage:        0 bytes
 38382 ;; Hardware stack levels used:    1
 38383 ;; Hardware stack levels required when called:    4
 38384 ;; This function calls:
 38385 ;;		___fladd
 38386 ;; This function is called by:
 38387 ;;		_calc_bsoc
 38388 ;; This function uses a reentrant model
 38389 ;;
 38390                           
 38391                           	psect	text176
 38392  01BE0E                     __ptext176:
 38393                           	opt callstack 0
 38394  01BE0E                     ___asfladd:
 38395                           	opt callstack 9
 38396                           
 38397                           ;	Return value of ___asfladd is never used
 38398                           ;stkvar	_f2 @ sp[(0)+-6]
 38399                           
 38400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38401                           ;incstack = 0
 38402  01BE0E  0EFA               	movlw	-6
 38403  01BE10  006F FF8F FFE6     	movff	plusw1,postinc1
 38404  01BE16  006F FF8F FFE6     	movff	plusw1,postinc1
 38405  01BE1C  006F FF8F FFE6     	movff	plusw1,postinc1
 38406  01BE22  006F FF8F FFE6     	movff	plusw1,postinc1
 38407                           
 38408                           ;stkvar	_f1p @ sp[(-4)+-2]
 38409  01BE28  0EFA               	movlw	-6
 38410  01BE2A  006F FF8F FFD9     	movff	plusw1,fsr2l
 38411  01BE30  0EFB               	movlw	-5
 38412  01BE32  006F FF8F FFDA     	movff	plusw1,fsr2h
 38413  01BE38  006F FF7B FFE6     	movff	postinc2,postinc1
 38414  01BE3E  006F FF7B FFE6     	movff	postinc2,postinc1
 38415  01BE44  006F FF7B FFE6     	movff	postinc2,postinc1
 38416  01BE4A  006F FF7B FFE6     	movff	postinc2,postinc1
 38417  01BE50  EC8D  F0A3         	call	___fladd	;wreg free
 38418                           
 38419                           ;stkvar	_f1p @ sp[(0)+-2]
 38420  01BE54  0EFE               	movlw	-2
 38421  01BE56  006F FF8F FFD9     	movff	plusw1,fsr2l
 38422  01BE5C  0EFF               	movlw	-1
 38423  01BE5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 38424  01BE64  0060  F007  FFDE   	movff	btemp,postinc2
 38425  01BE6A  0060  F00B  FFDE   	movff	btemp+1,postinc2
 38426  01BE70  0060  F00F  FFDE   	movff	btemp+2,postinc2
 38427  01BE76  0060  F013  FFDE   	movff	btemp+3,postinc2
 38428                           
 38429                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 38430  01BE7C  0EFA               	movlw	250
 38431  01BE7E  26E1               	addwf	fsr1l,f,c
 38432  01BE80  0EFF               	movlw	255
 38433  01BE82  22E2               	addwfc	fsr1h,f,c
 38434  01BE84  0012               	return		;funcret
 38435  01BE86                     __end_of___asfladd:
 38436                           	opt callstack 0
 38437                           
 38438 ;; *************** function _INT0_ISR *****************
 38439 ;; Defined at:
 38440 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 38441 ;; Parameters:    Size  Location     Type
 38442 ;;		None
 38443 ;; Auto vars:     Size  Location     Type
 38444 ;;		None
 38445 ;; Return value:  Size  Location     Type
 38446 ;;                  1    wreg      void 
 38447 ;; Registers used:
 38448 ;;		wreg, status,2, status,0, pclath, tosl
 38449 ;; Tracked objects:
 38450 ;;		On entry : 0/0
 38451 ;;		On exit  : 0/0
 38452 ;;		Unchanged: 0/0
 38453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38458 ;;Total ram usage:        0 bytes
 38459 ;; Hardware stack levels used:    1
 38460 ;; Hardware stack levels required when called:    2
 38461 ;; This function calls:
 38462 ;;		_INT0_CallBack
 38463 ;; This function is called by:
 38464 ;;		Interrupt level 2
 38465 ;; This function uses a non-reentrant model
 38466 ;;
 38467                           
 38468                           	psect	text177
 38469  01D2E4                     __ptext177:
 38470                           	opt callstack 0
 38471  01D2E4                     _INT0_ISR:
 38472                           	opt callstack 2
 38473                           
 38474                           ;incstack = 0
 38475  01D2E4  EE14  F2C4         	lfsr	1,___inthi_sp
 38476                           
 38477                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 38478  01D2E8  0139               	movlb	57	; () banked
 38479  01D2EA  91A1               	bcf	161,0,b	;volatile
 38480                           
 38481                           ; BSR set to: 57
 38482                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 38483  01D2EC  EC02  F0E8         	call	_INT0_CallBack	;wreg free
 38484  01D2F0  0011               	retfie		f
 38485  01D2F2                     __end_of_INT0_ISR:
 38486                           	opt callstack 0
 38487                           
 38488 ;; *************** function _INT0_CallBack *****************
 38489 ;; Defined at:
 38490 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 38491 ;; Parameters:    Size  Location     Type
 38492 ;;		None
 38493 ;; Auto vars:     Size  Location     Type
 38494 ;;		None
 38495 ;; Return value:  Size  Location     Type
 38496 ;;                  1  [STACK] void 
 38497 ;; Registers used:
 38498 ;;		wreg, status,2, status,0, pclath, tosl
 38499 ;; Tracked objects:
 38500 ;;		On entry : 3F/39
 38501 ;;		On exit  : 0/0
 38502 ;;		Unchanged: 0/0
 38503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38508 ;;Total ram usage:        0 bytes
 38509 ;; Hardware stack levels used:    1
 38510 ;; Hardware stack levels required when called:    1
 38511 ;; This function calls:
 38512 ;;		Absolute function
 38513 ;;		_INT0_DefaultInterruptHandler
 38514 ;; This function is called by:
 38515 ;;		_INT0_ISR
 38516 ;; This function uses a reentrant model
 38517 ;;
 38518                           
 38519                           	psect	text178
 38520  01D004                     __ptext178:
 38521                           	opt callstack 0
 38522  01D004                     _INT0_CallBack:
 38523                           	opt callstack 2
 38524                           
 38525                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 38526                           
 38527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38528                           ;incstack = 0
 38529  01D004  0100               	movlb	0	; () banked
 38530  01D006  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 38531  01D008  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 38532  01D00A  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 38533  01D00C  B4D8               	btfsc	status,2,c
 38534  01D00E  0012               	return	
 38535                           
 38536                           ; BSR set to: 0
 38537                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 38538  01D010  D801               	call	u1082_48
 38539  01D012  0012               	return	
 38540  01D014                     u1082_48:
 38541  01D014  0005               	push	
 38542  01D016  6EFA               	movwf	pclath,c
 38543  01D018  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 38544  01D01A  6EFD               	movwf	tosl,c
 38545  01D01C  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 38546  01D01E  6EFE               	movwf	tosh,c
 38547  01D020  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 38548  01D022  6EFF               	movwf	tosu,c
 38549  01D024  50FA               	movf	pclath,w,c
 38550  01D026  0012               	return		;indir
 38551  01D028                     __end_of_INT0_CallBack:
 38552                           	opt callstack 0
 38553                           
 38554 ;; *************** function _INT0_DefaultInterruptHandler *****************
 38555 ;; Defined at:
 38556 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 38557 ;; Parameters:    Size  Location     Type
 38558 ;;		None
 38559 ;; Auto vars:     Size  Location     Type
 38560 ;;		None
 38561 ;; Return value:  Size  Location     Type
 38562 ;;                  1  [STACK] void 
 38563 ;; Registers used:
 38564 ;;		None
 38565 ;; Tracked objects:
 38566 ;;		On entry : 3F/0
 38567 ;;		On exit  : 0/0
 38568 ;;		Unchanged: 0/0
 38569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38574 ;;Total ram usage:        0 bytes
 38575 ;; Hardware stack levels used:    1
 38576 ;; This function calls:
 38577 ;;		Nothing
 38578 ;; This function is called by:
 38579 ;;		_EXT_INT_Initialize
 38580 ;;		_INT0_CallBack
 38581 ;; This function uses a reentrant model
 38582 ;;
 38583                           
 38584                           	psect	text179
 38585  01D396                     __ptext179:
 38586                           	opt callstack 0
 38587  01D396                     _INT0_DefaultInterruptHandler:
 38588                           	opt callstack 2
 38589                           
 38590                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 38591                           
 38592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38593                           ;incstack = 0
 38594  01D396  0012               	return		;funcret
 38595  01D398                     __end_of_INT0_DefaultInterruptHandler:
 38596                           	opt callstack 0
 38597                           
 38598 ;; *************** function _Default_ISR *****************
 38599 ;; Defined at:
 38600 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 38601 ;; Parameters:    Size  Location     Type
 38602 ;;		None
 38603 ;; Auto vars:     Size  Location     Type
 38604 ;;		None
 38605 ;; Return value:  Size  Location     Type
 38606 ;;                  1    wreg      void 
 38607 ;; Registers used:
 38608 ;;		None
 38609 ;; Tracked objects:
 38610 ;;		On entry : 0/0
 38611 ;;		On exit  : 0/0
 38612 ;;		Unchanged: 0/0
 38613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38618 ;;Total ram usage:        0 bytes
 38619 ;; Hardware stack levels used:    1
 38620 ;; This function calls:
 38621 ;;		Nothing
 38622 ;; This function is called by:
 38623 ;;		Interrupt level 2
 38624 ;; This function uses a non-reentrant model
 38625 ;;
 38626                           
 38627                           	psect	text180
 38628  01D38C                     __ptext180:
 38629                           	opt callstack 0
 38630  01D38C                     _Default_ISR:
 38631                           	opt callstack 4
 38632                           
 38633                           ;incstack = 0
 38634  01D38C  EE14  F2C4         	lfsr	1,___inthi_sp
 38635  01D390  0011               	retfie		f
 38636  01D392                     __end_of_Default_ISR:
 38637                           	opt callstack 0
 38638                           
 38639 ;; *************** function _ADCC_ISR *****************
 38640 ;; Defined at:
 38641 ;;		line 314 in file "mcc_generated_files/adcc.c"
 38642 ;; Parameters:    Size  Location     Type
 38643 ;;		None
 38644 ;; Auto vars:     Size  Location     Type
 38645 ;;		None
 38646 ;; Return value:  Size  Location     Type
 38647 ;;                  1    wreg      void 
 38648 ;; Registers used:
 38649 ;;		wreg, status,2, status,0, pclath, tosl
 38650 ;; Tracked objects:
 38651 ;;		On entry : 0/0
 38652 ;;		On exit  : 0/0
 38653 ;;		Unchanged: 0/0
 38654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38659 ;;Total ram usage:        0 bytes
 38660 ;; Hardware stack levels used:    1
 38661 ;; Hardware stack levels required when called:    1
 38662 ;; This function calls:
 38663 ;;		Absolute function
 38664 ;;		_ADCC_DefaultInterruptHandler
 38665 ;;		_adc_int_handler
 38666 ;; This function is called by:
 38667 ;;		Interrupt level 2
 38668 ;; This function uses a non-reentrant model
 38669 ;;
 38670                           
 38671                           	psect	text181
 38672  01CC98                     __ptext181:
 38673                           	opt callstack 0
 38674  01CC98                     _ADCC_ISR:
 38675                           	opt callstack 3
 38676                           
 38677                           ;incstack = 0
 38678  01CC98  EE14  F2C4         	lfsr	1,___inthi_sp
 38679                           
 38680                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 38681  01CC9C  0139               	movlb	57	; () banked
 38682  01CC9E  95A1               	bcf	161,2,b	;volatile
 38683                           
 38684                           ; BSR set to: 57
 38685                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 38686  01CCA0  0100               	movlb	0	; () banked
 38687  01CCA2  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 38688  01CCA4  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 38689  01CCA6  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 38690  01CCA8  B4D8               	btfsc	status,2,c
 38691  01CCAA  0011               	retfie		f
 38692                           
 38693                           ; BSR set to: 0
 38694                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 38695  01CCAC  D801               	call	i2u1143_48
 38696  01CCAE  0011               	retfie		f
 38697  01CCB0                     i2u1143_48:
 38698  01CCB0  0005               	push	
 38699  01CCB2  6EFA               	movwf	pclath,c
 38700  01CCB4  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 38701  01CCB6  6EFD               	movwf	tosl,c
 38702  01CCB8  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 38703  01CCBA  6EFE               	movwf	tosh,c
 38704  01CCBC  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 38705  01CCBE  6EFF               	movwf	tosu,c
 38706  01CCC0  50FA               	movf	pclath,w,c
 38707  01CCC2  0012               	return		;indir
 38708  01CCC4                     __end_of_ADCC_ISR:
 38709                           	opt callstack 0
 38710                           
 38711 ;; *************** function _adc_int_t_handler *****************
 38712 ;; Defined at:
 38713 ;;		line 181 in file "daq.c"
 38714 ;; Parameters:    Size  Location     Type
 38715 ;;		None
 38716 ;; Auto vars:     Size  Location     Type
 38717 ;;		None
 38718 ;; Return value:  Size  Location     Type
 38719 ;;                  1  [STACK] void 
 38720 ;; Registers used:
 38721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 38722 ;; Tracked objects:
 38723 ;;		On entry : 3F/0
 38724 ;;		On exit  : 3/2
 38725 ;;		Unchanged: 0/0
 38726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38731 ;;Total ram usage:        0 bytes
 38732 ;; Hardware stack levels used:    1
 38733 ;; Hardware stack levels required when called:    1
 38734 ;; This function calls:
 38735 ;;		_ADCC_DischargeSampleCapacitor
 38736 ;;		_ADCC_StartConversion
 38737 ;; This function is called by:
 38738 ;;		_start_adc_scan
 38739 ;;		_ADCC_ThresholdISR
 38740 ;; This function uses a reentrant model
 38741 ;;
 38742                           
 38743                           	psect	text182
 38744  01BC92                     __ptext182:
 38745                           	opt callstack 0
 38746  01BC92                     _adc_int_t_handler:
 38747                           	opt callstack 2
 38748                           
 38749                           ;daq.c: 186:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 38750                           
 38751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38752                           ;incstack = 0
 38753  01BC92  013E               	movlb	62	; () banked
 38754  01BC94  51E6               	movf	230,w,b	;volatile
 38755  01BC96  006F FB9C  F001    	movff	16103,btemp	;volatile
 38756  01BC9C  6A02               	clrf	(btemp+1)^0,c
 38757  01BC9E  0060  F004  F002   	movff	btemp,btemp+1
 38758  01BCA4  6A01               	clrf	btemp^0,c
 38759  01BCA6  2601               	addwf	btemp^0,f,c
 38760  01BCA8  0E00               	movlw	0
 38761  01BCAA  2202               	addwfc	(btemp+1)^0,f,c
 38762  01BCAC  0102               	movlb	2	; () banked
 38763  01BCAE  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 38764  01BCB0  0D02               	mullw	2
 38765  01BCB2  0E00               	movlw	low _R
 38766  01BCB4  24F3               	addwf	243,w,c
 38767  01BCB6  6ED9               	movwf	fsr2l,c
 38768  01BCB8  0E02               	movlw	high _R
 38769  01BCBA  20F4               	addwfc	prodh,w,c
 38770  01BCBC  6EDA               	movwf	fsr2h,c
 38771  01BCBE  0060  F007  FFDE   	movff	btemp,postinc2
 38772  01BCC4  0060  F00B  FFDD   	movff	btemp+1,postdec2
 38773  01BCCA                     l12368:
 38774                           
 38775                           ;daq.c: 188:   if (++R.scan_index > 0XD) {
 38776  01BCCA  0102               	movlb	2	; () banked
 38777  01BCCC  2B32               	incf	(_R+50)& (0+255),f,b	;volatile
 38778  01BCCE  0E0D               	movlw	13
 38779  01BCD0  6532               	cpfsgt	(_R+50)& (0+255),b	;volatile
 38780  01BCD2  D003               	goto	l12374
 38781                           
 38782                           ; BSR set to: 2
 38783                           ;daq.c: 189:    R.done = 1;
 38784  01BCD4  0E01               	movlw	1
 38785  01BCD6  6F35               	movwf	(_R+53)& (0+255),b	;volatile
 38786  01BCD8  0012               	return	
 38787  01BCDA                     l12374:
 38788                           
 38789                           ; BSR set to: 2
 38790                           ;daq.c: 195:  } while (!((R.scan_select >> R.scan_index) &0x1));
 38791  01BCDA  0060  F8C8  F00C   	movff	_R+50,btemp+11	;volatile
 38792  01BCE0  EE20  F233         	lfsr	2,_R+51	;volatile
 38793  01BCE4  006F FF78  F009    	movff	postinc2,btemp+8
 38794  01BCEA  006F FF74  F00A    	movff	postdec2,btemp+9
 38795  01BCF0  2A0C               	incf	(btemp+11)^0,f,c
 38796  01BCF2  D003               	goto	u1140_44
 38797  01BCF4                     u1140_45:
 38798  01BCF4  90D8               	bcf	status,0,c
 38799  01BCF6  320A               	rrcf	(btemp+9)^0,f,c
 38800  01BCF8  3209               	rrcf	(btemp+8)^0,f,c
 38801  01BCFA                     u1140_44:
 38802  01BCFA  2E0C               	decfsz	(btemp+11)^0,f,c
 38803  01BCFC  D7FB               	goto	u1140_45
 38804  01BCFE  A009               	btfss	(btemp+8)^0,0,c
 38805  01BD00  D7E4               	goto	l12368
 38806                           
 38807                           ;daq.c: 196:  ADCC_DischargeSampleCapacitor();
 38808  01BD02  ECA6  F0E9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 38809                           
 38810                           ; BSR set to: 62
 38811                           ;daq.c: 197:  ADCC_StartConversion(R.scan_index & 0xf);
 38812  01BD06  0102               	movlb	2	; () banked
 38813  01BD08  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 38814  01BD0A  0B0F               	andlw	15
 38815  01BD0C  6EE6               	movwf	postinc1,c
 38816  01BD0E  EC2B  F0E9         	call	_ADCC_StartConversion	;wreg free
 38817                           
 38818                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 38819  01BD12  0012               	return		;funcret
 38820  01BD14                     __end_of_adc_int_t_handler:
 38821                           	opt callstack 0
 38822                           
 38823 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 38824 ;; Defined at:
 38825 ;;		line 339 in file "mcc_generated_files/adcc.c"
 38826 ;; Parameters:    Size  Location     Type
 38827 ;;		None
 38828 ;; Auto vars:     Size  Location     Type
 38829 ;;		None
 38830 ;; Return value:  Size  Location     Type
 38831 ;;                  1  [STACK] void 
 38832 ;; Registers used:
 38833 ;;		None
 38834 ;; Tracked objects:
 38835 ;;		On entry : 3F/0
 38836 ;;		On exit  : 0/0
 38837 ;;		Unchanged: 0/0
 38838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38843 ;;Total ram usage:        0 bytes
 38844 ;; Hardware stack levels used:    1
 38845 ;; This function calls:
 38846 ;;		Nothing
 38847 ;; This function is called by:
 38848 ;;		_ADCC_Initialize
 38849 ;;		_ADCC_ISR
 38850 ;;		_ADCC_ThresholdISR
 38851 ;; This function uses a reentrant model
 38852 ;;
 38853                           
 38854                           	psect	text183
 38855  01D398                     __ptext183:
 38856                           	opt callstack 0
 38857  01D398                     _ADCC_DefaultInterruptHandler:
 38858                           	opt callstack 3
 38859                           
 38860                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 38861                           
 38862                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38863                           ;incstack = 0
 38864  01D398  0012               	return		;funcret
 38865  01D39A                     __end_of_ADCC_DefaultInterruptHandler:
 38866                           	opt callstack 0
 38867                           
 38868 ;; *************** function _adc_int_handler *****************
 38869 ;; Defined at:
 38870 ;;		line 171 in file "daq.c"
 38871 ;; Parameters:    Size  Location     Type
 38872 ;;		None
 38873 ;; Auto vars:     Size  Location     Type
 38874 ;;		None
 38875 ;; Return value:  Size  Location     Type
 38876 ;;                  1  [STACK] void 
 38877 ;; Registers used:
 38878 ;;		None
 38879 ;; Tracked objects:
 38880 ;;		On entry : 3F/0
 38881 ;;		On exit  : 0/0
 38882 ;;		Unchanged: 0/0
 38883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38888 ;;Total ram usage:        0 bytes
 38889 ;; Hardware stack levels used:    1
 38890 ;; This function calls:
 38891 ;;		Nothing
 38892 ;; This function is called by:
 38893 ;;		_start_adc_scan
 38894 ;;		_ADCC_ISR
 38895 ;; This function uses a reentrant model
 38896 ;;
 38897                           
 38898                           	psect	text184
 38899  01D39A                     __ptext184:
 38900                           	opt callstack 0
 38901  01D39A                     _adc_int_handler:
 38902                           	opt callstack 3
 38903                           
 38904                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 38905                           
 38906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38907                           ;incstack = 0
 38908  01D39A  0012               	return		;funcret
 38909  01D39C                     __end_of_adc_int_handler:
 38910                           	opt callstack 0
 38911                           
 38912 ;; *************** function _ADCC_ThresholdISR *****************
 38913 ;; Defined at:
 38914 ;;		line 327 in file "mcc_generated_files/adcc.c"
 38915 ;; Parameters:    Size  Location     Type
 38916 ;;		None
 38917 ;; Auto vars:     Size  Location     Type
 38918 ;;		None
 38919 ;; Return value:  Size  Location     Type
 38920 ;;                  1    wreg      void 
 38921 ;; Registers used:
 38922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 38923 ;; Tracked objects:
 38924 ;;		On entry : 0/0
 38925 ;;		On exit  : 0/0
 38926 ;;		Unchanged: 0/0
 38927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38930 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38931 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38932 ;;Total ram usage:        5 bytes
 38933 ;; Hardware stack levels used:    1
 38934 ;; Hardware stack levels required when called:    2
 38935 ;; This function calls:
 38936 ;;		Absolute function
 38937 ;;		_ADCC_DefaultInterruptHandler
 38938 ;;		_adc_int_t_handler
 38939 ;; This function is called by:
 38940 ;;		Interrupt level 2
 38941 ;; This function uses a non-reentrant model
 38942 ;;
 38943                           
 38944                           	psect	text185
 38945  01BFC8                     __ptext185:
 38946                           	opt callstack 0
 38947  01BFC8                     _ADCC_ThresholdISR:
 38948                           	opt callstack 2
 38949                           
 38950                           ;incstack = 0
 38951  01BFC8  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 38952  01BFCE  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 38953  01BFD4  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 38954  01BFDA  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 38955  01BFE0  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 38956  01BFE6  EE14  F2C4         	lfsr	1,___inthi_sp
 38957                           
 38958                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 38959  01BFEA  0139               	movlb	57	; () banked
 38960  01BFEC  97A1               	bcf	161,3,b	;volatile
 38961                           
 38962                           ; BSR set to: 57
 38963                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 38964  01BFEE  0100               	movlb	0	; () banked
 38965  01BFF0  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 38966  01BFF2  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 38967  01BFF4  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 38968  01BFF6  B4D8               	btfsc	status,2,c
 38969  01BFF8  D00C               	goto	i2u1145_49
 38970                           
 38971                           ; BSR set to: 0
 38972                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 38973  01BFFA  D801               	call	i2u1145_48
 38974  01BFFC  D00A               	goto	i2u1145_49
 38975  01BFFE                     i2u1145_48:
 38976  01BFFE  0005               	push	
 38977  01C000  6EFA               	movwf	pclath,c
 38978  01C002  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 38979  01C004  6EFD               	movwf	tosl,c
 38980  01C006  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 38981  01C008  6EFE               	movwf	tosh,c
 38982  01C00A  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 38983  01C00C  6EFF               	movwf	tosu,c
 38984  01C00E  50FA               	movf	pclath,w,c
 38985  01C010  0012               	return		;indir
 38986  01C012                     i2u1145_49:
 38987  01C012  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 38988  01C018  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 38989  01C01E  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 38990  01C024  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 38991  01C02A  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 38992  01C030  0011               	retfie		f
 38993  01C032                     __end_of_ADCC_ThresholdISR:
 38994                           	opt callstack 0
 38995                           
 38996 ;; *************** function _UART1_rx_vect_isr *****************
 38997 ;; Defined at:
 38998 ;;		line 181 in file "mcc_generated_files/uart1.c"
 38999 ;; Parameters:    Size  Location     Type
 39000 ;;		None
 39001 ;; Auto vars:     Size  Location     Type
 39002 ;;		None
 39003 ;; Return value:  Size  Location     Type
 39004 ;;                  1    wreg      void 
 39005 ;; Registers used:
 39006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 39007 ;; Tracked objects:
 39008 ;;		On entry : 0/0
 39009 ;;		On exit  : 0/0
 39010 ;;		Unchanged: 0/0
 39011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39016 ;;Total ram usage:        0 bytes
 39017 ;; Hardware stack levels used:    1
 39018 ;; Hardware stack levels required when called:    1
 39019 ;; This function calls:
 39020 ;;		Absolute function
 39021 ;;		_UART1_Receive_ISR
 39022 ;; This function is called by:
 39023 ;;		Interrupt level 2
 39024 ;; This function uses a non-reentrant model
 39025 ;;
 39026                           
 39027                           	psect	text186
 39028  01CEFC                     __ptext186:
 39029                           	opt callstack 0
 39030  01CEFC                     _UART1_rx_vect_isr:
 39031                           	opt callstack 3
 39032                           
 39033                           ;incstack = 0
 39034  01CEFC  EE14  F2C4         	lfsr	1,___inthi_sp
 39035                           
 39036                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 39037  01CF00  0100               	movlb	0	; () banked
 39038  01CF02  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 39039  01CF04  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 39040  01CF06  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 39041  01CF08  B4D8               	btfsc	status,2,c
 39042  01CF0A  0011               	retfie		f
 39043                           
 39044                           ; BSR set to: 0
 39045                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 39046  01CF0C  D801               	call	i2u1147_48
 39047  01CF0E  0011               	retfie		f
 39048  01CF10                     i2u1147_48:
 39049  01CF10  0005               	push	
 39050  01CF12  6EFA               	movwf	pclath,c
 39051  01CF14  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 39052  01CF16  6EFD               	movwf	tosl,c
 39053  01CF18  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 39054  01CF1A  6EFE               	movwf	tosh,c
 39055  01CF1C  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 39056  01CF1E  6EFF               	movwf	tosu,c
 39057  01CF20  50FA               	movf	pclath,w,c
 39058  01CF22  0012               	return		;indir
 39059  01CF24                     __end_of_UART1_rx_vect_isr:
 39060                           	opt callstack 0
 39061                           
 39062 ;; *************** function _UART1_Receive_ISR *****************
 39063 ;; Defined at:
 39064 ;;		line 192 in file "mcc_generated_files/uart1.c"
 39065 ;; Parameters:    Size  Location     Type
 39066 ;;		None
 39067 ;; Auto vars:     Size  Location     Type
 39068 ;;		None
 39069 ;; Return value:  Size  Location     Type
 39070 ;;                  1  [STACK] void 
 39071 ;; Registers used:
 39072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39073 ;; Tracked objects:
 39074 ;;		On entry : 3F/0
 39075 ;;		On exit  : 3F/0
 39076 ;;		Unchanged: 0/0
 39077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39082 ;;Total ram usage:        0 bytes
 39083 ;; Hardware stack levels used:    1
 39084 ;; This function calls:
 39085 ;;		Nothing
 39086 ;; This function is called by:
 39087 ;;		_UART1_Initialize
 39088 ;;		_UART1_rx_vect_isr
 39089 ;; This function uses a reentrant model
 39090 ;;
 39091                           
 39092                           	psect	text187
 39093  01D16A                     __ptext187:
 39094                           	opt callstack 0
 39095  01D16A                     _UART1_Receive_ISR:
 39096                           	opt callstack 3
 39097                           
 39098                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 39099                           
 39100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39101                           ;incstack = 0
 39102  01D16A  5047               	movf	_uart1RxHead^0,w,c
 39103  01D16C  0F6C               	addlw	low _uart1RxBuffer
 39104  01D16E  6ED9               	movwf	fsr2l,c
 39105  01D170  6ADA               	clrf	fsr2h,c
 39106  01D172  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 39107  01D178  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 39108                           
 39109                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 39110  01D17A  0E07               	movlw	7
 39111  01D17C  6447               	cpfsgt	_uart1RxHead^0,c
 39112  01D17E  D001               	goto	l11768
 39113                           
 39114                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 39115  01D180  6A47               	clrf	_uart1RxHead^0,c	;volatile
 39116  01D182                     l11768:
 39117                           
 39118                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 39119  01D182  0100               	movlb	0	; () banked
 39120  01D184  2BD3               	incf	_uart1RxCount& (0+255),f,b	;volatile
 39121                           
 39122                           ; BSR set to: 0
 39123                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 39124  01D186  0012               	return		;funcret
 39125  01D188                     __end_of_UART1_Receive_ISR:
 39126                           	opt callstack 0
 39127                           
 39128 ;; *************** function _UART2_tx_vect_isr *****************
 39129 ;; Defined at:
 39130 ;;		line 195 in file "mcc_generated_files/uart2.c"
 39131 ;; Parameters:    Size  Location     Type
 39132 ;;		None
 39133 ;; Auto vars:     Size  Location     Type
 39134 ;;		None
 39135 ;; Return value:  Size  Location     Type
 39136 ;;                  1    wreg      void 
 39137 ;; Registers used:
 39138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 39139 ;; Tracked objects:
 39140 ;;		On entry : 0/0
 39141 ;;		On exit  : 0/0
 39142 ;;		Unchanged: 0/0
 39143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39148 ;;Total ram usage:        0 bytes
 39149 ;; Hardware stack levels used:    1
 39150 ;; Hardware stack levels required when called:    1
 39151 ;; This function calls:
 39152 ;;		Absolute function
 39153 ;;		_UART2_Transmit_ISR
 39154 ;; This function is called by:
 39155 ;;		Interrupt level 2
 39156 ;; This function uses a non-reentrant model
 39157 ;;
 39158                           
 39159                           	psect	text188
 39160  01CF24                     __ptext188:
 39161                           	opt callstack 0
 39162  01CF24                     _UART2_tx_vect_isr:
 39163                           	opt callstack 3
 39164                           
 39165                           ; BSR set to: 0
 39166                           ;incstack = 0
 39167  01CF24  EE14  F2C4         	lfsr	1,___inthi_sp
 39168                           
 39169                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 39170  01CF28  0100               	movlb	0	; () banked
 39171  01CF2A  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 39172  01CF2C  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 39173  01CF2E  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 39174  01CF30  B4D8               	btfsc	status,2,c
 39175  01CF32  0011               	retfie		f
 39176                           
 39177                           ; BSR set to: 0
 39178                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 39179  01CF34  D801               	call	i2u1149_48
 39180  01CF36  0011               	retfie		f
 39181  01CF38                     i2u1149_48:
 39182  01CF38  0005               	push	
 39183  01CF3A  6EFA               	movwf	pclath,c
 39184  01CF3C  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 39185  01CF3E  6EFD               	movwf	tosl,c
 39186  01CF40  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 39187  01CF42  6EFE               	movwf	tosh,c
 39188  01CF44  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 39189  01CF46  6EFF               	movwf	tosu,c
 39190  01CF48  50FA               	movf	pclath,w,c
 39191  01CF4A  0012               	return		;indir
 39192  01CF4C                     __end_of_UART2_tx_vect_isr:
 39193                           	opt callstack 0
 39194                           
 39195 ;; *************** function _UART2_Transmit_ISR *****************
 39196 ;; Defined at:
 39197 ;;		line 213 in file "mcc_generated_files/uart2.c"
 39198 ;; Parameters:    Size  Location     Type
 39199 ;;		None
 39200 ;; Auto vars:     Size  Location     Type
 39201 ;;		None
 39202 ;; Return value:  Size  Location     Type
 39203 ;;                  1  [STACK] void 
 39204 ;; Registers used:
 39205 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39206 ;; Tracked objects:
 39207 ;;		On entry : 3F/0
 39208 ;;		On exit  : 3B/39
 39209 ;;		Unchanged: 0/0
 39210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39215 ;;Total ram usage:        0 bytes
 39216 ;; Hardware stack levels used:    1
 39217 ;; This function calls:
 39218 ;;		Nothing
 39219 ;; This function is called by:
 39220 ;;		_UART2_Initialize
 39221 ;;		_UART2_tx_vect_isr
 39222 ;; This function uses a reentrant model
 39223 ;;
 39224                           
 39225                           	psect	text189
 39226  01CCC4                     __ptext189:
 39227                           	opt callstack 0
 39228  01CCC4                     _UART2_Transmit_ISR:
 39229                           	opt callstack 3
 39230                           
 39231                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 39232                           
 39233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39234                           ;incstack = 0
 39235  01CCC4  0E40               	movlw	64
 39236  01CCC6  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 39237  01CCC8  D010               	goto	l675
 39238                           
 39239                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 39240  01CCCA  0E54               	movlw	low _uart2TxBuffer
 39241  01CCCC  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 39242  01CCCE  6ED9               	movwf	fsr2l,c
 39243  01CCD0  6ADA               	clrf	fsr2h,c
 39244  01CCD2  0E03               	movlw	high _uart2TxBuffer
 39245  01CCD4  22DA               	addwfc	fsr2h,f,c
 39246  01CCD6  50DF               	movf	indf2,w,c
 39247  01CCD8  013D               	movlb	61	; () banked
 39248  01CCDA  6FD2               	movwf	210,b	;volatile
 39249                           
 39250                           ; BSR set to: 61
 39251  01CCDC  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 39252                           
 39253                           ; BSR set to: 61
 39254                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 39255  01CCDE  0E3F               	movlw	63
 39256  01CCE0  6446               	cpfsgt	_uart2TxTail^0,c
 39257  01CCE2  D001               	goto	l11780
 39258                           
 39259                           ; BSR set to: 61
 39260                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 39261  01CCE4  6A46               	clrf	_uart2TxTail^0,c	;volatile
 39262  01CCE6                     l11780:
 39263                           
 39264                           ; BSR set to: 61
 39265                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 39266  01CCE6  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 39267                           
 39268                           ;mcc_generated_files/uart2.c: 224:     }
 39269  01CCE8  0012               	return	
 39270  01CCEA                     l675:
 39271                           
 39272                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 39273  01CCEA  0139               	movlb	57	; () banked
 39274  01CCEC  9796               	bcf	150,3,b	;volatile
 39275                           
 39276                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 39277  01CCEE  0012               	return		;funcret
 39278  01CCF0                     __end_of_UART2_Transmit_ISR:
 39279                           	opt callstack 0
 39280                           
 39281 ;; *************** function _UART2_rx_vect_isr *****************
 39282 ;; Defined at:
 39283 ;;		line 203 in file "mcc_generated_files/uart2.c"
 39284 ;; Parameters:    Size  Location     Type
 39285 ;;		None
 39286 ;; Auto vars:     Size  Location     Type
 39287 ;;		None
 39288 ;; Return value:  Size  Location     Type
 39289 ;;                  1    wreg      void 
 39290 ;; Registers used:
 39291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 39292 ;; Tracked objects:
 39293 ;;		On entry : 0/0
 39294 ;;		On exit  : 0/0
 39295 ;;		Unchanged: 0/0
 39296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39301 ;;Total ram usage:        0 bytes
 39302 ;; Hardware stack levels used:    1
 39303 ;; Hardware stack levels required when called:    1
 39304 ;; This function calls:
 39305 ;;		Absolute function
 39306 ;;		_UART2_Receive_ISR
 39307 ;; This function is called by:
 39308 ;;		Interrupt level 2
 39309 ;; This function uses a non-reentrant model
 39310 ;;
 39311                           
 39312                           	psect	text190
 39313  01CF4C                     __ptext190:
 39314                           	opt callstack 0
 39315  01CF4C                     _UART2_rx_vect_isr:
 39316                           	opt callstack 3
 39317                           
 39318                           ;incstack = 0
 39319  01CF4C  EE14  F2C4         	lfsr	1,___inthi_sp
 39320                           
 39321                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 39322  01CF50  0100               	movlb	0	; () banked
 39323  01CF52  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 39324  01CF54  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 39325  01CF56  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 39326  01CF58  B4D8               	btfsc	status,2,c
 39327  01CF5A  0011               	retfie		f
 39328                           
 39329                           ; BSR set to: 0
 39330                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 39331  01CF5C  D801               	call	i2u1151_48
 39332  01CF5E  0011               	retfie		f
 39333  01CF60                     i2u1151_48:
 39334  01CF60  0005               	push	
 39335  01CF62  6EFA               	movwf	pclath,c
 39336  01CF64  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 39337  01CF66  6EFD               	movwf	tosl,c
 39338  01CF68  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 39339  01CF6A  6EFE               	movwf	tosh,c
 39340  01CF6C  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 39341  01CF6E  6EFF               	movwf	tosu,c
 39342  01CF70  50FA               	movf	pclath,w,c
 39343  01CF72  0012               	return		;indir
 39344  01CF74                     __end_of_UART2_rx_vect_isr:
 39345                           	opt callstack 0
 39346                           
 39347 ;; *************** function _UART2_Receive_ISR *****************
 39348 ;; Defined at:
 39349 ;;		line 233 in file "mcc_generated_files/uart2.c"
 39350 ;; Parameters:    Size  Location     Type
 39351 ;;		None
 39352 ;; Auto vars:     Size  Location     Type
 39353 ;;		None
 39354 ;; Return value:  Size  Location     Type
 39355 ;;                  1  [STACK] void 
 39356 ;; Registers used:
 39357 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39358 ;; Tracked objects:
 39359 ;;		On entry : 3F/0
 39360 ;;		On exit  : 3F/0
 39361 ;;		Unchanged: 0/0
 39362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39367 ;;Total ram usage:        0 bytes
 39368 ;; Hardware stack levels used:    1
 39369 ;; This function calls:
 39370 ;;		Nothing
 39371 ;; This function is called by:
 39372 ;;		_UART2_Initialize
 39373 ;;		_UART2_rx_vect_isr
 39374 ;; This function uses a reentrant model
 39375 ;;
 39376                           
 39377                           	psect	text191
 39378  01D0D2                     __ptext191:
 39379                           	opt callstack 0
 39380  01D0D2                     _UART2_Receive_ISR:
 39381                           	opt callstack 3
 39382                           
 39383                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 39384                           
 39385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39386                           ;incstack = 0
 39387  01D0D2  0E00               	movlw	low _uart2RxBuffer
 39388  01D0D4  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 39389  01D0D6  6ED9               	movwf	fsr2l,c
 39390  01D0D8  6ADA               	clrf	fsr2h,c
 39391  01D0DA  0E06               	movlw	high _uart2RxBuffer
 39392  01D0DC  22DA               	addwfc	fsr2h,f,c
 39393  01D0DE  006F F743 FFDF     	movff	15824,indf2	;volatile
 39394  01D0E4  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 39395                           
 39396                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 39397  01D0E6  2844               	incf	_uart2RxHead^0,w,c
 39398  01D0E8  B4D8               	btfsc	status,2,c
 39399                           
 39400                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 39401  01D0EA  6A44               	clrf	_uart2RxHead^0,c	;volatile
 39402                           
 39403                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 39404  01D0EC  0100               	movlb	0	; () banked
 39405  01D0EE  2BD0               	incf	_uart2RxCount& (0+255),f,b	;volatile
 39406                           
 39407                           ; BSR set to: 0
 39408                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 39409  01D0F0  0012               	return		;funcret
 39410  01D0F2                     __end_of_UART2_Receive_ISR:
 39411                           	opt callstack 0
 39412                           
 39413 ;; *************** function _TMR6_ISR *****************
 39414 ;; Defined at:
 39415 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 39416 ;; Parameters:    Size  Location     Type
 39417 ;;		None
 39418 ;; Auto vars:     Size  Location     Type
 39419 ;;		None
 39420 ;; Return value:  Size  Location     Type
 39421 ;;                  1    wreg      void 
 39422 ;; Registers used:
 39423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 39424 ;; Tracked objects:
 39425 ;;		On entry : 0/0
 39426 ;;		On exit  : 0/0
 39427 ;;		Unchanged: 0/0
 39428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39433 ;;Total ram usage:        1 bytes
 39434 ;; Hardware stack levels used:    1
 39435 ;; Hardware stack levels required when called:    2
 39436 ;; This function calls:
 39437 ;;		_TMR6_CallBack
 39438 ;; This function is called by:
 39439 ;;		Interrupt level 2
 39440 ;; This function uses a non-reentrant model
 39441 ;;
 39442                           
 39443                           	psect	text192
 39444  01D1A4                     __ptext192:
 39445                           	opt callstack 0
 39446  01D1A4                     _TMR6_ISR:
 39447                           	opt callstack 2
 39448                           
 39449                           ; BSR set to: 0
 39450                           ;incstack = 0
 39451  01D1A4  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 39452  01D1AA  EE14  F2C4         	lfsr	1,___inthi_sp
 39453                           
 39454                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 39455  01D1AE  0139               	movlb	57	; () banked
 39456  01D1B0  91A9               	bcf	169,0,b	;volatile
 39457                           
 39458                           ; BSR set to: 57
 39459                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 39460  01D1B2  EC14  F0E8         	call	_TMR6_CallBack	;wreg free
 39461  01D1B6  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 39462  01D1BC  0011               	retfie		f
 39463  01D1BE                     __end_of_TMR6_ISR:
 39464                           	opt callstack 0
 39465                           
 39466 ;; *************** function _TMR6_CallBack *****************
 39467 ;; Defined at:
 39468 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 39469 ;; Parameters:    Size  Location     Type
 39470 ;;		None
 39471 ;; Auto vars:     Size  Location     Type
 39472 ;;		None
 39473 ;; Return value:  Size  Location     Type
 39474 ;;                  1  [STACK] void 
 39475 ;; Registers used:
 39476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 39477 ;; Tracked objects:
 39478 ;;		On entry : 3F/39
 39479 ;;		On exit  : 0/0
 39480 ;;		Unchanged: 0/0
 39481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39486 ;;Total ram usage:        0 bytes
 39487 ;; Hardware stack levels used:    1
 39488 ;; Hardware stack levels required when called:    1
 39489 ;; This function calls:
 39490 ;;		Absolute function
 39491 ;;		_TMR6_DefaultInterruptHandler
 39492 ;; This function is called by:
 39493 ;;		_TMR6_ISR
 39494 ;; This function uses a reentrant model
 39495 ;;
 39496                           
 39497                           	psect	text193
 39498  01D028                     __ptext193:
 39499                           	opt callstack 0
 39500  01D028                     _TMR6_CallBack:
 39501                           	opt callstack 2
 39502                           
 39503                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 39504                           
 39505                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39506                           ;incstack = 0
 39507  01D028  0100               	movlb	0	; () banked
 39508  01D02A  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 39509  01D02C  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 39510  01D02E  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 39511  01D030  B4D8               	btfsc	status,2,c
 39512  01D032  0012               	return	
 39513                           
 39514                           ; BSR set to: 0
 39515                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 39516  01D034  D801               	call	u1090_48
 39517  01D036  0012               	return	
 39518  01D038                     u1090_48:
 39519  01D038  0005               	push	
 39520  01D03A  6EFA               	movwf	pclath,c
 39521  01D03C  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 39522  01D03E  6EFD               	movwf	tosl,c
 39523  01D040  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 39524  01D042  6EFE               	movwf	tosh,c
 39525  01D044  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 39526  01D046  6EFF               	movwf	tosu,c
 39527  01D048  50FA               	movf	pclath,w,c
 39528  01D04A  0012               	return		;indir
 39529  01D04C                     __end_of_TMR6_CallBack:
 39530                           	opt callstack 0
 39531                           
 39532 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 39533 ;; Defined at:
 39534 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 39535 ;; Parameters:    Size  Location     Type
 39536 ;;		None
 39537 ;; Auto vars:     Size  Location     Type
 39538 ;;  i               1  [STACK] unsigned char 
 39539 ;; Return value:  Size  Location     Type
 39540 ;;                  1  [STACK] void 
 39541 ;; Registers used:
 39542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 39543 ;; Tracked objects:
 39544 ;;		On entry : 3F/0
 39545 ;;		On exit  : 0/0
 39546 ;;		Unchanged: 0/0
 39547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39552 ;;Total ram usage:        0 bytes
 39553 ;; Hardware stack levels used:    1
 39554 ;; This function calls:
 39555 ;;		Nothing
 39556 ;; This function is called by:
 39557 ;;		_TMR6_Initialize
 39558 ;;		_TMR6_CallBack
 39559 ;; This function uses a reentrant model
 39560 ;;
 39561                           
 39562                           	psect	text194
 39563  01C4DE                     __ptext194:
 39564                           	opt callstack 0
 39565  01C4DE                     _TMR6_DefaultInterruptHandler:
 39566                           	opt callstack 0
 39567                           
 39568                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39569  01C4DE  52E6               	movf	postinc1,f,c
 39570                           
 39571                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 39572                           ;stkvar	_i @ sp[(-1)+0]
 39573                           
 39574                           ;incstack = 0
 39575  01C4E0  0EFF               	movlw	-1
 39576  01C4E2  6AE3               	clrf	plusw1,c
 39577  01C4E4                     l11250:
 39578                           
 39579                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 39580                           ;stkvar	_i @ sp[(-1)+0]
 39581  01C4E4  0EFF               	movlw	-1
 39582  01C4E6  50E3               	movf	plusw1,w,c
 39583  01C4E8  0D02               	mullw	2
 39584  01C4EA  0EA7               	movlw	low _tickCount
 39585  01C4EC  24F3               	addwf	243,w,c
 39586  01C4EE  6ED9               	movwf	fsr2l,c
 39587  01C4F0  0E02               	movlw	high _tickCount
 39588  01C4F2  20F4               	addwfc	prodh,w,c
 39589  01C4F4  6EDA               	movwf	fsr2h,c
 39590  01C4F6  50DE               	movf	postinc2,w,c
 39591  01C4F8  10DE               	iorwf	postinc2,w,c
 39592  01C4FA  B4D8               	btfsc	status,2,c
 39593  01C4FC  D00C               	goto	l11254
 39594                           
 39595                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 39596                           ;stkvar	_i @ sp[(-1)+0]
 39597  01C4FE  0EFF               	movlw	-1
 39598  01C500  50E3               	movf	plusw1,w,c
 39599  01C502  0D02               	mullw	2
 39600  01C504  0EA7               	movlw	low _tickCount
 39601  01C506  24F3               	addwf	243,w,c
 39602  01C508  6ED9               	movwf	fsr2l,c
 39603  01C50A  0E02               	movlw	high _tickCount
 39604  01C50C  20F4               	addwfc	prodh,w,c
 39605  01C50E  6EDA               	movwf	fsr2h,c
 39606  01C510  06DE               	decf	postinc2,f,c
 39607  01C512  0E00               	movlw	0
 39608  01C514  5ADD               	subwfb	postdec2,f,c
 39609  01C516                     l11254:
 39610                           
 39611                           ;mcc_generated_files/tmr6.c: 207:  }
 39612                           ;stkvar	_i @ sp[(-1)+0]
 39613  01C516  0EFF               	movlw	-1
 39614  01C518  2AE3               	incf	plusw1,f,c
 39615                           
 39616                           ;stkvar	_i @ sp[(-1)+0]
 39617  01C51A  0EFF               	movlw	-1
 39618  01C51C  006F FF8C  F001    	movff	plusw1,btemp
 39619  01C522  0E0C               	movlw	12
 39620  01C524  6401               	cpfsgt	btemp^0,c
 39621  01C526  D7DE               	goto	l11250
 39622                           
 39623                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 39624  01C528  52E5               	movf	postdec1,f,c
 39625  01C52A  0012               	return		;funcret
 39626  01C52C                     __end_of_TMR6_DefaultInterruptHandler:
 39627                           	opt callstack 0
 39628                           
 39629 ;; *************** function _DMA1_DMASCNT_ISR *****************
 39630 ;; Defined at:
 39631 ;;		line 126 in file "mcc_generated_files/dma1.c"
 39632 ;; Parameters:    Size  Location     Type
 39633 ;;		None
 39634 ;; Auto vars:     Size  Location     Type
 39635 ;;		None
 39636 ;; Return value:  Size  Location     Type
 39637 ;;                  1    wreg      void 
 39638 ;; Registers used:
 39639 ;;		None
 39640 ;; Tracked objects:
 39641 ;;		On entry : 0/0
 39642 ;;		On exit  : 3F/0
 39643 ;;		Unchanged: 0/0
 39644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39649 ;;Total ram usage:        0 bytes
 39650 ;; Hardware stack levels used:    1
 39651 ;; This function calls:
 39652 ;;		Nothing
 39653 ;; This function is called by:
 39654 ;;		Interrupt level 2
 39655 ;; This function uses a non-reentrant model
 39656 ;;
 39657                           
 39658                           	psect	text195
 39659  01D2F4                     __ptext195:
 39660                           	opt callstack 0
 39661  01D2F4                     _DMA1_DMASCNT_ISR:
 39662                           	opt callstack 4
 39663                           
 39664                           ;incstack = 0
 39665  01D2F4  EE14  F2C4         	lfsr	1,___inthi_sp
 39666                           
 39667                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 39668  01D2F8  0139               	movlb	57	; () banked
 39669  01D2FA  91A2               	bcf	162,0,b	;volatile
 39670                           
 39671                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 39672  01D2FC  0100               	movlb	0	; () banked
 39673  01D2FE  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 39674                           
 39675                           ; BSR set to: 0
 39676  01D300  0011               	retfie		f
 39677  01D302                     __end_of_DMA1_DMASCNT_ISR:
 39678                           	opt callstack 0
 39679                           
 39680 ;; *************** function _DMA1_DMADCNT_ISR *****************
 39681 ;; Defined at:
 39682 ;;		line 133 in file "mcc_generated_files/dma1.c"
 39683 ;; Parameters:    Size  Location     Type
 39684 ;;		None
 39685 ;; Auto vars:     Size  Location     Type
 39686 ;;		None
 39687 ;; Return value:  Size  Location     Type
 39688 ;;                  1    wreg      void 
 39689 ;; Registers used:
 39690 ;;		None
 39691 ;; Tracked objects:
 39692 ;;		On entry : 0/0
 39693 ;;		On exit  : 3F/39
 39694 ;;		Unchanged: 0/0
 39695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39700 ;;Total ram usage:        0 bytes
 39701 ;; Hardware stack levels used:    1
 39702 ;; This function calls:
 39703 ;;		Nothing
 39704 ;; This function is called by:
 39705 ;;		Interrupt level 2
 39706 ;; This function uses a non-reentrant model
 39707 ;;
 39708                           
 39709                           	psect	text196
 39710  01D318                     __ptext196:
 39711                           	opt callstack 0
 39712  01D318                     _DMA1_DMADCNT_ISR:
 39713                           	opt callstack 4
 39714                           
 39715                           ; BSR set to: 0
 39716                           ;incstack = 0
 39717  01D318  EE14  F2C4         	lfsr	1,___inthi_sp
 39718                           
 39719                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 39720  01D31C  0139               	movlb	57	; () banked
 39721  01D31E  93A2               	bcf	162,1,b	;volatile
 39722                           
 39723                           ; BSR set to: 57
 39724  01D320  0011               	retfie		f
 39725  01D322                     __end_of_DMA1_DMADCNT_ISR:
 39726                           	opt callstack 0
 39727                           
 39728 ;; *************** function _DMA1_DMAA_ISR *****************
 39729 ;; Defined at:
 39730 ;;		line 143 in file "mcc_generated_files/dma1.c"
 39731 ;; Parameters:    Size  Location     Type
 39732 ;;		None
 39733 ;; Auto vars:     Size  Location     Type
 39734 ;;		None
 39735 ;; Return value:  Size  Location     Type
 39736 ;;                  1    wreg      void 
 39737 ;; Registers used:
 39738 ;;		None
 39739 ;; Tracked objects:
 39740 ;;		On entry : 0/0
 39741 ;;		On exit  : 3F/39
 39742 ;;		Unchanged: 0/0
 39743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39748 ;;Total ram usage:        0 bytes
 39749 ;; Hardware stack levels used:    1
 39750 ;; This function calls:
 39751 ;;		Nothing
 39752 ;; This function is called by:
 39753 ;;		Interrupt level 2
 39754 ;; This function uses a non-reentrant model
 39755 ;;
 39756                           
 39757                           	psect	text197
 39758  01D324                     __ptext197:
 39759                           	opt callstack 0
 39760  01D324                     _DMA1_DMAA_ISR:
 39761                           	opt callstack 4
 39762                           
 39763                           ; BSR set to: 57
 39764                           ;incstack = 0
 39765  01D324  EE14  F2C4         	lfsr	1,___inthi_sp
 39766                           
 39767                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 39768  01D328  0139               	movlb	57	; () banked
 39769  01D32A  97A2               	bcf	162,3,b	;volatile
 39770                           
 39771                           ; BSR set to: 57
 39772  01D32C  0011               	retfie		f
 39773  01D32E                     __end_of_DMA1_DMAA_ISR:
 39774                           	opt callstack 0
 39775                           
 39776 ;; *************** function _DMA1_DMAOR_ISR *****************
 39777 ;; Defined at:
 39778 ;;		line 154 in file "mcc_generated_files/dma1.c"
 39779 ;; Parameters:    Size  Location     Type
 39780 ;;		None
 39781 ;; Auto vars:     Size  Location     Type
 39782 ;;		None
 39783 ;; Return value:  Size  Location     Type
 39784 ;;                  1    wreg      void 
 39785 ;; Registers used:
 39786 ;;		None
 39787 ;; Tracked objects:
 39788 ;;		On entry : 0/0
 39789 ;;		On exit  : 3F/39
 39790 ;;		Unchanged: 0/0
 39791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39796 ;;Total ram usage:        0 bytes
 39797 ;; Hardware stack levels used:    1
 39798 ;; This function calls:
 39799 ;;		Nothing
 39800 ;; This function is called by:
 39801 ;;		Interrupt level 2
 39802 ;; This function uses a non-reentrant model
 39803 ;;
 39804                           
 39805                           	psect	text198
 39806  01D330                     __ptext198:
 39807                           	opt callstack 0
 39808  01D330                     _DMA1_DMAOR_ISR:
 39809                           	opt callstack 4
 39810                           
 39811                           ; BSR set to: 57
 39812                           ;incstack = 0
 39813  01D330  EE14  F2C4         	lfsr	1,___inthi_sp
 39814                           
 39815                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 39816  01D334  0139               	movlb	57	; () banked
 39817  01D336  95A2               	bcf	162,2,b	;volatile
 39818                           
 39819                           ; BSR set to: 57
 39820  01D338  0011               	retfie		f
 39821  01D33A                     __end_of_DMA1_DMAOR_ISR:
 39822                           	opt callstack 0
 39823                           
 39824                           ;
 39825                           ; Interrupt Vector Table @ 0x8
 39826                           ;
 39827                           
 39828                           	psect	ivt0x8
 39829  000008                     __pivt0x8:
 39830                           	opt callstack 0
 39831  000008                     ivt0x8_base:
 39832                           	opt callstack 0
 39833                           
 39834                           ; Vector 0 : SWINT
 39835  000008  74E3               	dw	_Default_ISR shr (0+2)
 39836                           
 39837                           ; Vector 1 : HLVD
 39838  00000A  74E3               	dw	_Default_ISR shr (0+2)
 39839                           
 39840                           ; Vector 2 : OSF
 39841  00000C  74E3               	dw	_Default_ISR shr (0+2)
 39842                           
 39843                           ; Vector 3 : CSW
 39844  00000E  74E3               	dw	_Default_ISR shr (0+2)
 39845                           
 39846                           ; Vector 4 : NVM
 39847  000010  74E3               	dw	_Default_ISR shr (0+2)
 39848                           
 39849                           ; Vector 5 : SCAN
 39850  000012  74E3               	dw	_Default_ISR shr (0+2)
 39851                           
 39852                           ; Vector 6 : CRC
 39853  000014  74E3               	dw	_Default_ISR shr (0+2)
 39854                           
 39855                           ; Vector 7 : IOC
 39856  000016  74E3               	dw	_Default_ISR shr (0+2)
 39857                           
 39858                           ; Vector 8 : INT0
 39859  000018  74B9               	dw	_INT0_ISR shr (0+2)
 39860                           
 39861                           ; Vector 9 : ZCD
 39862  00001A  74E3               	dw	_Default_ISR shr (0+2)
 39863                           
 39864                           ; Vector 10 : AD
 39865  00001C  7326               	dw	_ADCC_ISR shr (0+2)
 39866                           
 39867                           ; Vector 11 : ADT
 39868  00001E  6FF2               	dw	_ADCC_ThresholdISR shr (0+2)
 39869                           
 39870                           ; Vector 12 : CMP1
 39871  000020  74E3               	dw	_Default_ISR shr (0+2)
 39872                           
 39873                           ; Vector 13 : SMT1
 39874  000022  74E3               	dw	_Default_ISR shr (0+2)
 39875                           
 39876                           ; Vector 14 : SMT1PRA
 39877  000024  74E3               	dw	_Default_ISR shr (0+2)
 39878                           
 39879                           ; Vector 15 : SMT1PRW
 39880  000026  74E3               	dw	_Default_ISR shr (0+2)
 39881                           
 39882                           ; Vector 16 : DMA1SCNT
 39883  000028  74BD               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 39884                           
 39885                           ; Vector 17 : DMA1DCNT
 39886  00002A  74C6               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 39887                           
 39888                           ; Vector 18 : DMA1OR
 39889  00002C  74CC               	dw	_DMA1_DMAOR_ISR shr (0+2)
 39890                           
 39891                           ; Vector 19 : DMA1A
 39892  00002E  74C9               	dw	_DMA1_DMAA_ISR shr (0+2)
 39893                           
 39894                           ; Vector 20 : SPI1RX
 39895  000030  74E3               	dw	_Default_ISR shr (0+2)
 39896                           
 39897                           ; Vector 21 : SPI1TX
 39898  000032  74E3               	dw	_Default_ISR shr (0+2)
 39899                           
 39900                           ; Vector 22 : SPI1
 39901  000034  74E3               	dw	_Default_ISR shr (0+2)
 39902                           
 39903                           ; Vector 23 : I2C1RX
 39904  000036  74E3               	dw	_Default_ISR shr (0+2)
 39905                           
 39906                           ; Vector 24 : I2C1TX
 39907  000038  74E3               	dw	_Default_ISR shr (0+2)
 39908                           
 39909                           ; Vector 25 : I2C1
 39910  00003A  74E3               	dw	_Default_ISR shr (0+2)
 39911                           
 39912                           ; Vector 26 : I2C1E
 39913  00003C  74E3               	dw	_Default_ISR shr (0+2)
 39914                           
 39915                           ; Vector 27 : U1RX
 39916  00003E  73BF               	dw	_UART1_rx_vect_isr shr (0+2)
 39917                           
 39918                           ; Vector 28 : U1TX
 39919  000040  74E3               	dw	_Default_ISR shr (0+2)
 39920                           
 39921                           ; Vector 29 : U1E
 39922  000042  74E3               	dw	_Default_ISR shr (0+2)
 39923                           
 39924                           ; Vector 30 : U1
 39925  000044  74E3               	dw	_Default_ISR shr (0+2)
 39926                           
 39927                           ; Vector 31 : TMR0
 39928  000046  74E3               	dw	_Default_ISR shr (0+2)
 39929                           
 39930                           ; Vector 32 : TMR1
 39931  000048  74E3               	dw	_Default_ISR shr (0+2)
 39932                           
 39933                           ; Vector 33 : TMR1G
 39934  00004A  74E3               	dw	_Default_ISR shr (0+2)
 39935                           
 39936                           ; Vector 34 : TMR2
 39937  00004C  74E3               	dw	_Default_ISR shr (0+2)
 39938                           
 39939                           ; Vector 35 : CCP1
 39940  00004E  74E3               	dw	_Default_ISR shr (0+2)
 39941                           
 39942                           ; Vector 36 : Undefined
 39943  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 39944                           
 39945                           ; Vector 37 : NCO1
 39946  000052  74E3               	dw	_Default_ISR shr (0+2)
 39947                           
 39948                           ; Vector 38 : CWG1
 39949  000054  74E3               	dw	_Default_ISR shr (0+2)
 39950                           
 39951                           ; Vector 39 : CLC1
 39952  000056  74E3               	dw	_Default_ISR shr (0+2)
 39953                           
 39954                           ; Vector 40 : INT1
 39955  000058  724A               	dw	_INT1_ISR shr (0+2)
 39956                           
 39957                           ; Vector 41 : CMP2
 39958  00005A  74E3               	dw	_Default_ISR shr (0+2)
 39959                           
 39960                           ; Vector 42 : DMA2SCNT
 39961  00005C  74E3               	dw	_Default_ISR shr (0+2)
 39962                           
 39963                           ; Vector 43 : DMA2DCNT
 39964  00005E  74E3               	dw	_Default_ISR shr (0+2)
 39965                           
 39966                           ; Vector 44 : DMA2OR
 39967  000060  74E3               	dw	_Default_ISR shr (0+2)
 39968                           
 39969                           ; Vector 45 : DMA2A
 39970  000062  74E3               	dw	_Default_ISR shr (0+2)
 39971                           
 39972                           ; Vector 46 : I2C2RX
 39973  000064  74E3               	dw	_Default_ISR shr (0+2)
 39974                           
 39975                           ; Vector 47 : I2C2TX
 39976  000066  74E3               	dw	_Default_ISR shr (0+2)
 39977                           
 39978                           ; Vector 48 : I2C2
 39979  000068  74E3               	dw	_Default_ISR shr (0+2)
 39980                           
 39981                           ; Vector 49 : I2C2E
 39982  00006A  74E3               	dw	_Default_ISR shr (0+2)
 39983                           
 39984                           ; Vector 50 : U2RX
 39985  00006C  73D3               	dw	_UART2_rx_vect_isr shr (0+2)
 39986                           
 39987                           ; Vector 51 : U2TX
 39988  00006E  73C9               	dw	_UART2_tx_vect_isr shr (0+2)
 39989                           
 39990                           ; Vector 52 : U2E
 39991  000070  74E3               	dw	_Default_ISR shr (0+2)
 39992                           
 39993                           ; Vector 53 : U2
 39994  000072  74E3               	dw	_Default_ISR shr (0+2)
 39995                           
 39996                           ; Vector 54 : TMR3
 39997  000074  668C               	dw	_TMR3_ISR shr (0+2)
 39998                           
 39999                           ; Vector 55 : TMR3G
 40000  000076  74E3               	dw	_Default_ISR shr (0+2)
 40001                           
 40002                           ; Vector 56 : TMR4
 40003  000078  74E3               	dw	_Default_ISR shr (0+2)
 40004                           
 40005                           ; Vector 57 : CCP2
 40006  00007A  74E3               	dw	_Default_ISR shr (0+2)
 40007                           
 40008                           ; Vector 58 : Undefined
 40009  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 40010                           
 40011                           ; Vector 59 : CWG2
 40012  00007E  74E3               	dw	_Default_ISR shr (0+2)
 40013                           
 40014                           ; Vector 60 : CLC2
 40015  000080  74E3               	dw	_Default_ISR shr (0+2)
 40016                           
 40017                           ; Vector 61 : INT2
 40018  000082  74E3               	dw	_Default_ISR shr (0+2)
 40019                           
 40020                           ; Vector 62 : Undefined
 40021  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 40022                           
 40023                           ; Vector 63 : Undefined
 40024  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 40025                           
 40026                           ; Vector 64 : Undefined
 40027  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 40028                           
 40029                           ; Vector 65 : Undefined
 40030  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 40031                           
 40032                           ; Vector 66 : Undefined
 40033  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 40034                           
 40035                           ; Vector 67 : Undefined
 40036  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 40037                           
 40038                           ; Vector 68 : Undefined
 40039  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 40040                           
 40041                           ; Vector 69 : Undefined
 40042  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 40043                           
 40044                           ; Vector 70 : TMR5
 40045  000094  6B1E               	dw	_TMR5_ISR shr (0+2)
 40046                           
 40047                           ; Vector 71 : TMR5G
 40048  000096  74E3               	dw	_Default_ISR shr (0+2)
 40049                           
 40050                           ; Vector 72 : TMR6
 40051  000098  7469               	dw	_TMR6_ISR shr (0+2)
 40052                           
 40053                           ; Vector 73 : CCP3
 40054  00009A  74E3               	dw	_Default_ISR shr (0+2)
 40055                           
 40056                           ; Vector 74 : CWG3
 40057  00009C  74E3               	dw	_Default_ISR shr (0+2)
 40058                           
 40059                           ; Vector 75 : CLC3
 40060  00009E  74E3               	dw	_Default_ISR shr (0+2)
 40061                           
 40062                           ; Vector 76 : Undefined
 40063  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 40064                           
 40065                           ; Vector 77 : Undefined
 40066  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 40067                           
 40068                           ; Vector 78 : Undefined
 40069  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 40070                           
 40071                           ; Vector 79 : Undefined
 40072  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 40073                           
 40074                           ; Vector 80 : CCP4
 40075  0000A8  74E3               	dw	_Default_ISR shr (0+2)
 40076                           
 40077                           ; Vector 81 : CLC4
 40078  0000AA  74E3               	dw	_Default_ISR shr (0+2)
 40079  0000AC                     ivt0x8_undefint:
 40080                           	opt callstack 0
 40081  0000AC  00FF               	reset	
 40082                           
 40083                           	psect	text199
 40084  000000                     __ptext199:
 40085                           	opt callstack 0
 40086                           
 40087                           	psect	rparam
 40088  0000                     
 40089                           	psect	temp
 40090  000001                     btemp:
 40091                           	opt callstack 0
 40092  000001                     	ds	32
 40093  0000                     wtemp0	set	btemp
 40094  0000                     wtemp1	set	btemp+2
 40095  0000                     wtemp2	set	btemp+4
 40096  0000                     wtemp3	set	btemp+6
 40097  0000                     wtemp4	set	btemp+8
 40098  0000                     wtemp5	set	btemp+10
 40099  0000                     wtemp8	set	btemp+1
 40100  0000                     ttemp0	set	btemp
 40101  0000                     ttemp1	set	btemp+3
 40102  0000                     ttemp2	set	btemp+6
 40103  0000                     ttemp3	set	btemp+9
 40104  0000                     ttemp5	set	btemp+1
 40105  0000                     ttemp6	set	btemp+4
 40106  0000                     ttemp7	set	btemp+8
 40107  0000                     ltemp0	set	btemp
 40108  0000                     ltemp1	set	btemp+4
 40109  0000                     ltemp2	set	btemp+8
 40110  0000                     lltemp0	set	btemp
 40111  0000                     lltemp1	set	btemp+8
 40112  0000                     lltemp2	set	btemp+16
 40113  0000                     lltemp3	set	btemp+24
 40114                           tosu	equ	0x3FFF
 40115                           tosh	equ	0x3FFE
 40116                           tosl	equ	0x3FFD
 40117                           stkptr	equ	0x3FFC
 40118                           pclatu	equ	0x3FFB
 40119                           pclath	equ	0x3FFA
 40120                           pcl	equ	0x3FF9
 40121                           tblptru	equ	0x3FF8
 40122                           tblptrh	equ	0x3FF7
 40123                           tblptrl	equ	0x3FF6
 40124                           tablat	equ	0x3FF5
 40125                           prodh	equ	0x3FF4
 40126                           prodl	equ	0x3FF3
 40127                           indf0	equ	0x3FEF
 40128                           postinc0	equ	0x3FEE
 40129                           postdec0	equ	0x3FED
 40130                           preinc0	equ	0x3FEC
 40131                           plusw0	equ	0x3FEB
 40132                           fsr0h	equ	0x3FEA
 40133                           fsr0l	equ	0x3FE9
 40134                           wreg	equ	0x3FE8
 40135                           indf1	equ	0x3FE7
 40136                           postinc1	equ	0x3FE6
 40137                           postdec1	equ	0x3FE5
 40138                           preinc1	equ	0x3FE4
 40139                           plusw1	equ	0x3FE3
 40140                           fsr1h	equ	0x3FE2
 40141                           fsr1l	equ	0x3FE1
 40142                           bsr	equ	0x3FE0
 40143                           indf2	equ	0x3FDF
 40144                           postinc2	equ	0x3FDE
 40145                           postdec2	equ	0x3FDD
 40146                           preinc2	equ	0x3FDC
 40147                           plusw2	equ	0x3FDB
 40148                           fsr2h	equ	0x3FDA
 40149                           fsr2l	equ	0x3FD9
 40150                           status	equ	0x3FD8


Data Sizes:
    Strings     1328
    Constant    492
    Data        1210
    BSS         1475
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     154
    BANK1           256      0     248
    BANK2           256      0     193
    BANK3           256      0     228
    BANK4           256      0     234
    BANK5           256      0      67
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    C.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.hist.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_117(CODE[1]), STR_79(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[3]), STR_100(CODE[3]), 
		 -> STR_95(CODE[3]), STR_91(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[3]), STR_100(CODE[3]), 
		 -> STR_95(CODE[3]), STR_91(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_80(CODE[127]), STR_78(CODE[3]), STR_77(CODE[3]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[19]), STR_70(CODE[24]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[15]), STR_66(CODE[10]), STR_65(CODE[10]), 
		 -> STR_64(CODE[19]), STR_63(CODE[19]), STR_60(CODE[3]), STR_59(CODE[3]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_80(CODE[127]), STR_78(CODE[3]), STR_77(CODE[3]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[19]), STR_70(CODE[24]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[15]), STR_66(CODE[10]), STR_65(CODE[10]), 
		 -> STR_64(CODE[19]), STR_63(CODE[19]), STR_60(CODE[3]), STR_59(CODE[3]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_62(CODE[9]), STR_61(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_62(CODE[9]), STR_61(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_86(CODE[4]), STR_85(CODE[4]), STR_82(CODE[4]), STR_81(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_86(CODE[4]), STR_85(CODE[4]), STR_82(CODE[4]), STR_81(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_60(CODE[3]), STR_59(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_80(CODE[127]), STR_78(CODE[3]), STR_77(CODE[3]), STR_76(CODE[19]), 
		 -> STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), STR_72(CODE[19]), 
		 -> STR_71(CODE[19]), STR_70(CODE[24]), STR_69(CODE[15]), STR_68(CODE[15]), 
		 -> STR_67(CODE[15]), STR_66(CODE[10]), STR_65(CODE[10]), STR_64(CODE[19]), 
		 -> STR_63(CODE[19]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), 
		 -> STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7394_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_80(CODE[127]), STR_78(CODE[3]), STR_77(CODE[3]), STR_76(CODE[19]), 
		 -> STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), STR_72(CODE[19]), 
		 -> STR_71(CODE[19]), STR_70(CODE[24]), STR_69(CODE[15]), STR_68(CODE[15]), 
		 -> STR_67(CODE[15]), STR_66(CODE[10]), STR_65(CODE[10]), STR_64(CODE[19]), 
		 -> STR_63(CODE[19]), STR_60(CODE[3]), STR_59(CODE[3]), STR_58(CODE[21]), 
		 -> STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), STR_46(CODE[21]), 
		 -> STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), 
		 -> STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 324
		 -> C(BIGRAM[323]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_80(CODE[127]), STR_78(CODE[3]), STR_77(CODE[3]), STR_76(CODE[19]), 
		 -> STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), STR_72(CODE[19]), 
		 -> STR_71(CODE[19]), STR_70(CODE[24]), STR_69(CODE[15]), STR_68(CODE[15]), 
		 -> STR_67(CODE[15]), STR_66(CODE[10]), STR_65(CODE[10]), STR_64(CODE[19]), 
		 -> STR_63(CODE[19]), STR_60(CODE[3]), STR_59(CODE[3]), STR_58(CODE[21]), 
		 -> STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), STR_46(CODE[21]), 
		 -> STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), 
		 -> STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_80(CODE[127]), STR_78(CODE[3]), STR_77(CODE[3]), STR_76(CODE[19]), 
		 -> STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), STR_72(CODE[19]), 
		 -> STR_71(CODE[19]), STR_70(CODE[24]), STR_69(CODE[15]), STR_68(CODE[15]), 
		 -> STR_67(CODE[15]), STR_66(CODE[10]), STR_65(CODE[10]), STR_64(CODE[19]), 
		 -> STR_63(CODE[19]), STR_60(CODE[3]), STR_59(CODE[3]), STR_58(CODE[21]), 
		 -> STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), STR_46(CODE[21]), 
		 -> STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), 
		 -> STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_62(CODE[9]), STR_61(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_62(CODE[9]), STR_61(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_62(CODE[9]), 
		 -> STR_61(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    hist.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    hist.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.H.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 324
		 -> C.hist(BIGRAM[109]), C(BIGRAM[323]), 

    R.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 168
		 -> R(BANK2[167]), 

    y.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 168
		 -> r_cal(BANK4[167]), 

    y.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_62(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_61(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK4[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    S3352tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.hist.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  602669
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     562
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     182
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31461
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0  127048
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (2) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     415
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  250792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  125143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30377
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94854
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   94590
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31430
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31355
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31578
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30152
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29999
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29607
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35866
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35776
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35776
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30377
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29999
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29607
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     525      69       16.1%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      43      15       26.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      EA      13       91.4%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C1       9       75.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F8       7       96.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     58A      58        0.0%
DATA                 0      0     AAF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 13 03:03:43 2020

                     _SPI1_Exchange8bit D0F2                __end_of_set_display_info D16A  
                                     _C 08FF                                       _D 0A42  
                                     _H 00F1                                       _P 009E  
                                     _R 0200                                       _S 01C7  
                                     _T F9B3                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler CE32            __end_of_start_switch_handler D0D2  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                       _update_cal_data C396                                      _bp FABB  
                __end_of_FVR_Initialize D36C                          _check_day_time 8FAE  
                           __CFG_LVP$ON 000000                                     l171 D22A  
                                   l809 D100                                     l675 CCEA  
                                   l942 C07E                                     _GIE 01FE97  
                                   _abs C696                                     _pad A778  
                                   fsr0 003FE9                                     fsr2 003FD9  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize D1D6  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack D004  
                     _update_adc_result C966                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack CF98  
                          __CFG_ZCD$OFF 000000                                    l1004 C8E2  
                                  l2100 8FA4                                    l2006 B374  
                                  l2031 B942                                    l1501 61F6  
                                  l2230 AE2C                                    l1271 D252  
                                  l1192 C922                                    l2160 9144  
                                  l2313 3EDC                                    l1282 9618  
                                  l2147 ABA4                                    l1443 0298  
                       _timer3ReloadVal 00C4                                    l2164 913C  
                                  l3220 4D5C                                    l1284 961E  
                                  l2309 3B9E                                    l2069 BEEC  
                                  l1437 005E                                    l2414 A7D4  
                                  l2239 A42A                                    l3208 4ECC  
                                  l1456 07B6                                    l2434 59EA  
                                  l2514 1DAC                                    l1810 A998  
                                  l1802 88C4                                    l1482 1252  
                                  l1466 0858                                    l1458 07BC  
                                  l1715 B582                                    l1803 8A20  
                                  l2355 79B6                                    l1476 0A5E  
                                  l3253 5446                                    l1477 0C88  
                                  l2470 24CC                                    l1734 CA28  
                                  l1719 B9D6                                    l3360 C6D6  
                                  l3352 92DA                                    l2552 7AA4  
                                  l3329 8C1E                                    l1850 D166  
                                  l1587 C2EC                                    l3460 A302  
                                  l2573 70FA                                    l1950 5906  
                                  l2638 3478                    _ADCC_StartConversion D256  
                                  l3391 8162                                    l3289 4710  
                                  l1793 C9BC                                    l2930 B154  
                                  l2499 18FC                                    l2588 6690  
                                  l2941 9A26                                    l2934 9952  
                                  l3742 BC88                                    l1990 BE0A  
                                  l3727 8808                                    l3755 BC04  
                                  l9000 50CE                                    l2968 98C4  
                                  l9100 541A                                    l9102 542A  
                                  l9014 5122                                    l9006 5108  
                                  l9040 524E                                    l9032 51E8  
                                  l9024 51B2                                    l9034 51FA  
                                  l9042 5252                                    l9212 4520  
                                  l9124 3F86                                    l9230 4596  
                                  l9206 4504                                    l9142 4054  
                                  l9126 3F8C                                    l9118 3F46  
                                  l8502 482E                                    l9054 529C  
                                  l9240 460A                                    l9216 4546  
                                  l9144 405A                                    l9136 4014  
                                  l9128 3FBC                                    l8600 4BD2  
                                  l8520 48E6                                    l9072 5312  
                                  l9048 5280                                    l9250 467A  
                                  l9226 4590                                    l9154 40AC  
                                  l9146 408A                                    l8514 48A0  
                                  l9082 5386                                    l9058 52C2  
                                  l9314 9E1E                                    l9306 9DEA  
                                  l9330 A692                                    l9402 C594  
                                  l9260 46D8                                    l9244 4650  
                                  l8620 4CE6                                    l8604 4BDC  
                                  l8508 4860                                    l9068 530C  
                                  l9500 C42E                                    l9412 97AE  
                                  l8630 4D40                                    l8622 4D0C  
                                  l8526 4908                                    l8518 48B6  
                                  l9094 53F2                                    l9334 A6AA  
                                  l9326 A680                                    l9430 984C  
                                  l8640 4D90                                    l8608 4C0E  
                                  l9088 53C2                                    l9280 9D0E  
                                  l9352 A75E                                    l9344 A72A  
                                  l9360 B0DC                                    l9258 46BE  
                                  l8570 4AD8                                    l8490 47B0  
                                  l8810 BC78                                    l8644 4D9C  
                                  l8572 4AEA                                    l8580 4B24  
                                  l8556 4A46                                    l8484 4770  
                                  l9292 9D44                                    l9364 B11E  
                                  l9436 985C                                    l9428 9830  
                                  l9452 94B8                                    l8670 4E28  
                                  l8654 4DC4                                    l8638 4D7E  
                                  l8566 4AB8                                    l8494 47C6  
                                  l9382 99A0                                    l9286 9D24  
                                  l9438 9872                                    l8680 4E54  
                                  l8576 4AF4                                    l8496 47F6  
                                  l9376 9910                                    l9368 B152  
                                  l8840 6C92                                    l8824 6B24  
                                  l9464 958A                                    l8658 4DCA  
                                  l9394 9A24                                    l9386 99EE  
                                  l8906 7E46                                    l8692 4EAC  
                                  l8684 4E6C                                    l8844 6CDA  
                                  l9484 A060                                    l9476 9FB4  
                                  l8686 4E7C                                    l8598 4BC0  
                                  l8942 8544                                    l8934 8498  
                                  l8926 8410                                    l8782 9278  
                                  l8838 6C42                                    l8768 C6C6  
                                  l8792 92D2                                    l8848 6D48  
                                  l8962 4F2C                                    l8882 7CDA  
                                  l8786 927C                                    l8866 BBF4  
                                  l8972 4F82                                    l8982 500A  
                                  l8974 4FB2                                    l8894 7D74  
                                  STR_1 FE8C                                    l8992 5060  
                                  l8968 4F6C                                    l8888 7D2E  
                                  STR_2 FE62                                    STR_3 FFD2  
                                  l8994 5090                                    STR_4 FDF9  
                                  STR_5 FC45                                    l8988 504A  
                                  STR_6 FC45                                    STR_7 FC45  
                                  STR_8 FEE0                                    STR_9 FF34  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u6000 CC02  
                                  u6100 4A6C                                    u6110 4A8C  
                                  u6111 4A86                                    u7000 8492  
                                  u7010 84C4                                    _T6PR 003F93  
                                  u6300 4DA2                                    u6220 4C04  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u6150 4B1C                                    u7030 857C  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u6320 4DBC                                    u6160 4B3C  
                                  u6128 4A8E                                    _PMD4 0039C4  
                                  u6225 4BF4                                    _PMD5 0039C5  
                                  u7050 85CE                                    _PMD6 0039C6  
                                  u6155 4B0C                                    _PMD7 0039C7  
                                  u6260 4D2E                                    u7230 5304  
                                  u6430 CBD0                                    u6360 4E18  
                                  u6600 92CA                                    u6440 CBD2  
                                  u6610 92CC                                    u7500 461E  
                                  u9100 80FC                                    u6540 C6AA  
                                  u7405 42F6                                    u6365 4E08  
                                  u7510 4664                                    u6390 4E38  
                                  u7270 5360                                    u7190 527A  
                                  u9110 80FE                                    u6550 91FC  
                                  u7415 44BE                                    u7280 539A  
                                  u6720 6BE8                                    u6640 BC36  
                                  u9200 87DC                                    u6800 BBB4  
                                  u6705 6B42                                    u7450 4588  
                                  u7290 53D6                                    u6706 6B48  
                                  u6650 BC38                                    u9210 D052  
                                  u7275 5350                                    u6555 91F2  
                                  u6707 6B56                                    u7380 409A  
                                  u6820 CC30                                    u6900 7DA0  
                                  u6740 6CC0                                    u6725 6BDE  
                                  u6830 CC32                                    u7630 A6D6  
                                  u6670 6ABC                                    u9150 8714  
                                  u9207 87CE                                    u9080 7FA4  
                                  u6920 7E7E                                    u7560 9D70  
                                  u6680 6B08                                    u6745 6CB6  
                                  u7490 45E4                                    u6850 7CD4  
                                  u7650 A74A                                    u6770 C75A  
                                  u7395 422E                                    u6595 92AC  
                                  u6675 6AB2                                    u6940 7ED0  
                                  u7580 9E0A                                    u7900 95C2  
                                  u6780 C75C                                    u9157 8706  
                                  u6870 7D2A                                    u7750 C590  
                                  u7830 987A                                    u5990 CC00  
                                  u9190 87AE                                    u6790 BBB2  
                                  u7495 45D4                                    u9600 8B92  
                                  u7760 978E                                    u7920 9FAE  
                                  u6881 7D34                                    u6890 7D6E  
                                  u6970 840A                                    u7690 B14E  
                                  u7850 98A4                                    u7770 97A2  
                                  u7930 9FE0                                    u9195 87A8  
                                  u7780 97DC                                    u7765 9784  
                                  u9197 879A                                    u7861 9478  
                                  u6990 8460                                    u7870 94B2  
                                  u7950 A098                                    u7880 94E4  
                                  u9640 AF46                                    u7785 97D2  
                                  u9714 54BE                                    u7970 C40A  
                                  _PLLR 01CEE0                                    u9715 54B8  
                                  u7980 C42A                                    u9645 AF40  
                                  u9734 56A4                                    u9735 569E  
                                  u9840 C03E                                    u9754 5772  
                                  u9674 546C                                    u9755 576C  
                                  u9675 5466                                    u9780 579C  
                                  u9774 5794                                    u9694 549C  
                                  u9775 578E                                    u9695 5496  
                                  u9848 C040                                    u9865 C08E  
                                  u9866 C090                                    u9985 C796  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR CCC4                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0394                      __size_of_CRC_Start 0006  
                                  _cp_h FACB                                    _cp_l FAC7  
                                  _atoi 7EF8                                    _ctoa BB02  
                                  _main 0000                                    _dtoa 590C  
                                  _nanf C1C6                                    _seed 01F0  
                                  _prec 003C                                    _nout 00C0  
                                  _spin FA43                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 79BA                                    btemp 0001  
                                  _utoa 70B6                                    _xtoa 664C  
                __end_of_check_adc_scan D34C                           ___fpclassifyf 914E  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00C8  
             __end_of_SPI1_Exchange8bit D110               __size_of_clear_hid_pflags 0034  
                       _TMR3_Initialize C64E             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                        _SPI1STATUSbits 003D17                       _UART1_rx_vect_isr CEFC  
                          ___param_bank 000000                  __end_of_check_day_time 914E  
                    ?_UART1_rx_vect_isr 0021               __size_of_DATAEE_WriteByte 0068  
                      _update_hist_data BE86                        __end_of_INT0_ISR D2F2  
                      __end_of_INT1_ISR C966          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma B58A           __end_of_OSCILLATOR_Initialize D230  
                                 l10100 8010                                   l10102 804E  
                                 l10106 80B6                                   l10116 8152  
                                 l10132 867A                                   l10134 86E6  
                                 l10400 8AE8                                   l10080 7F12  
                                 l12000 C3C6                                   l10410 8B4A  
                                 l10402 8AFE                                   l10090 7FA8  
                                 l10082 7F34                                   l10412 8B68  
                                 l10404 8B1C                                   l10422 8B9C  
                                 l10414 8B7E                                   l10502 5838  
                                 l12014 BEC8                                   l10432 8BFE  
                                 l12024 9444                                   l10096 7FD4  
                                 l12112 797C                                   l11250 C4E4  
                                 l10098 7FEC                                   l12202 B25C  
                                 l10450 AF92                                   l12114 79A6  
                                 l10508 58D4                                   l10516 58E6  
                                 l11404 9BE8                                   l12044 76FE  
                                 l11254 C516                                   l10390 8A6E  
                                 l10462 5452                                   l10534 CD62  
                                 l13110 748E                                   l10446 AF54  
                                 l10454 AFA6                                   l12070 77A2  
                                 l12054 7744                                   l12046 770E  
                                 l11408 9C5E                                   l12064 777A  
                                 l12048 7714                                   l11354 8E56  
                                 l11346 8E2A                                   l10490 56BC  
                                 l10482 568A                                   l13130 7664  
                                 l13122 75B6                                   l14002 B58E  
                                 l11370 B8E6                                   l12090 7822  
                                 l12082 77FC                                   l12074 77AE  
                                 l12058 7750                                   l11514 BDC8  
                                 l10468 5482                                   l13300 14BE  
                                 l13116 754C                                   l14004 B596  
                                 l10740 970A                                   l11612 ADE6  
                                 l12252 A318                                   l14110 3698  
                                 l14102 35C0                                   l11358 8E6A  
                                 l12246 663E                                   l10398 8ADA  
                                 l10494 5758                                   l10478 55A8  
                                 l13142 A7A4                                   l13214 5A24  
                                 l13206 59DA                                   l14006 B5A0  
                                 l14014 B5B6                                   l11382 B91C  
                                 l10806 CC7C                                   l11606 ADA0  
                                 l11702 B170                                   l11526 BDE0  
                                 l11534 A5AA                                   l10680 9078  
                                 l11448 C9D2                                   l13080 B7A6  
                                 l13152 A81A                                   l13400 1A0C  
                                 l13304 14EA                                   l14008 B5AE  
                                 l14016 B5E2                                   l10752 CA32  
                                 l10736 96E0                                   l14122 37EE  
                                 l14106 362C                                   l11570 9E74  
                                 l13090 B832                                   l13082 B7C8  
                                 l13146 A7CC                                   l13218 5A42  
                                 l13162 AE78                                   l13410 1BB8  
                                 l13330 1628                                   l13314 158E  
                                 l13322 15BC                                   l11490 C986  
                                 l11706 B1EC                                   l11538 A60C  
                                 l10844 C46A                                   l14132 3A40  
                                 l10692 90EA                                   l11580 9EAE  
                                 l11564 9E50                                   l13068 A218  
                                 l13156 A864                                   l13148 A7DE  
                                 l13180 BB20                                   l13252 5D42  
                                 l13228 5C54                                   l13340 1764  
                                 l14060 ABC0                                   l12268 A394  
                                 PRLOCK 0039EF                                   l12374 BCDA  
                                 l14142 3BAE                                   l14118 379A  
                                 l11806 C8CA                                   l11566 9E60  
                                 l13094 B870                                   l13182 BB4C  
                                 l13510 2268                                   l13334 1698  
                                 l14038 A8B0                                   l12198 B21E  
                                 l12278 A404                                   l12368 BCCA  
                                 l14128 39C6                                   l11824 C90A  
                                 l11568 9E66                                   l12296 C8A0  
                                 l13248 5D06                                   l13512 2282  
                                 l13432 1DA4                                   l13424 1CDA  
                                 l13352 17E6                                   l13336 1702  
                                 l10864 BD4C                                   l14304 6142  
                                 l14400 0066                                   l14146 3BD0  
                                 l14138 3B06                                   l11594 9F60  
                                 l11586 9EE6                                   l11578 9E7C  
                                 l13522 2324                                   l13434 1DC6  
                                 l13266 133E                                   l13602 7BFC  
                                 l14066 AC66                                   l14402 0078  
                                 l11780 CCE6                                   l13532 2374  
                                 l13460 1F4C                                   l13372 1888  
                                 l13364 1826                                   l13356 180E  
                                 l13620 70EA                                   l14332 8894  
                                 l14158 3ED4                                   l13390 194A  
                                 l13374 1894                                   l13358 1820  
                                 l13278 1382                                   l13286 13D8  
                                 l13606 7C38                                   l14254 5E44  
                                 l11768 D182                                   l13448 1EC4  
                                 l13296 147C                                   l13720 69BC  
                                 l13704 68D2                                   l13800 28EE  
                                 l11960 8C70                                   l14098 356C  
                                 l13394 1982                                   l13298 14A8  
                                 l13810 2986                                   l14346 89BC  
                                 l14266 5EBA                                   l14258 5E58  
                                 l14610 0F28                                   l14514 0542  
                                 l13548 242C                                   l13468 1FB6  
                                 l13476 2022                                   l13484 2134  
                                 l13628 7146                                   l13660 6680  
                                 l11972 8D26                                   l11980 8DD8  
                                 l14620 10AA                                   l14460 0270  
                                 l13638 733C                                   l13910 326E  
                                 l13822 2AC6                                   l11974 8D5A  
                                 l14606 0EC6                                   l14622 10D6  
                                 l14526 061C                                   l14550 07C0  
                                 l13496 21CC                                   l13592 7B46  
                                 l13584 7ADA                                   l13568 7A26  
                                 l13680 6756                                   l13672 66F6  
                                 l13760 25F2                                   l14552 07EE  
                                 l14544 07AC                                   l13666 66BA  
                                 l13930 3400                                   l13842 2CD8  
                                 l13834 2C20                                   l13818 2A72  
                                 l13762 2608                                   l14466 02B2  
                                 l14394 0040                                   l13588 7B16  
                                 l13924 33A6                                   l13780 273A  
                                 l13940 3424                                   l11988 8DDC  
                                 l14636 1128                                   l14572 0848  
                                 l14564 0822                                   l14396 0048  
                                 l13598 7BD0                                   l13934 3404  
                                 l13846 2D0C                                   l13782 2774  
                                 l13758 25B8                                   l14582 086A  
                                 l13696 684C                                   l13784 278A  
                                 l14672 1202                                   l14664 11CC  
                                 l14648 117C                                   l13866 2E6C  
                                 l14666 11E4                                   l14658 11BA  
                                 l14594 096A                                   l13876 2F1A  
                                 l13980 B4A2                                   l14676 1228  
                                 l13886 303C                                   l13958 B732  
                                 l14686 127E                                   l13896 30F2  
                                 l13978 B460                         __end_of___aodiv 7EF8  
                          _Volts_to_SOC B15E                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4ED6  
                                 _ADCLK 003EFF                         __end_of___aomod 85F2  
                                 _ADPCH 003EF1                         __end_of___fldiv 5450  
                                 _ADREF 003EFD                         __end_of___awdiv 9E38  
                       __end_of___flneg C5BE                                   STR_10 FDE4  
                                 STR_11 FB9F                                   STR_12 FC70  
                                 STR_20 FB6B                                   STR_13 FD4C  
                                 STR_21 FB85                                   STR_22 FF94  
                                 STR_30 FCC8                                   STR_14 FC44  
                                 STR_15 FE0E                                   STR_31 FD8E  
                                 STR_24 FF83                                   STR_16 FE23  
                                 STR_32 FD62                                   STR_40 FBD1  
                                 STR_17 FEF5                                   STR_33 FD78  
                                 STR_25 FD36                                   STR_41 FBFF  
                         __CFG_WDTE$OFF 000000                                   STR_50 FECB  
                                 STR_18 FEB6                                   STR_26 FD20  
                                 STR_34 FC86                                   STR_42 FC16  
                                 STR_51 FDBA                                   STR_43 FDA4  
                                 STR_27 FD0A                                   STR_35 FC9C  
                                 STR_19 FC5A                                   STR_44 FDA4  
                                 STR_60 FFF9                                   STR_52 FF1F  
                                 STR_28 FCF4                                   STR_36 FCB2  
                       __end_of___awmod A778                                   STR_53 FEA1  
                                 STR_45 FDA4                                   STR_61 FFB3  
                                 STR_29 FCDE                                   STR_37 FBE8  
                                 STR_62 FFC9                                   STR_46 FEA1  
                                 STR_54 FDCF                                   STR_38 FC2D  
                                 STR_70 FBB9                                   STR_63 FF5D  
                                 STR_55 FE77                                   STR_47 FE4D  
                                 STR_39 FB4E                                   STR_64 FF5D  
                                 STR_56 FEA1                                   STR_72 FF70  
                                 STR_48 FE38                                   STR_80 FACF  
                                 _ADRPT 003EEC                                   STR_57 FDCF  
                                 STR_81 FFD7                                   STR_65 FFBF  
                                 STR_49 FF49                                   STR_66 FFBF  
                                 STR_82 FFDF                                   STR_58 FF0A  
                                 STR_91 FFEA                                   STR_59 FFFC  
                                 STR_67 FFA4                                   STR_68 FFA4  
                                 STR_69 FFA4                                   STR_93 FFF0  
                                 STR_85 FFDB                                   STR_86 FFE3  
                                 STR_79 FB4D                                   STR_95 FFF0  
                       __end_of___flmul 471A                                   STR_89 FFEA  
                                 STR_98 FFED                         __end_of___flsub C722  
                       __end_of___fltol 98CE                                   u10100 BD48  
                                 u10130 C0A8                                   u10034 968C  
                                 u10050 D294                                   u10035 9686  
                                 u10205 D282                                   u11101 BEBC  
                                 u10310 B8E2                                   u10206 D284  
                                 u11030 8DD8                                   u10215 D272  
                                 u11111 BEDE                                   u10216 D274  
                                 u11041 C3A0                                   u10330 B916  
                                 u10155 C0DC                                   u10156 C0DE  
                                 u10148 C0AA                                   u12100 5A10  
                                 u12110 5C68                                   u12030 593C  
                                 u10280 8E08                                   u12040 593E  
                                 u13000 68CE                                   u10600 ADD2  
                                 u12121 5C98                                   u12130 5CAE  
                                 u12210 136C                                   u13010 68EE  
                                 u12131 5CAC                         __end_of___lodiv 95EA  
                                 u12140 5CC2                                   u12060 59AE  
                                 u13100 2650                                   u13021 691E  
                                 u13005 68B0                                   u10470 D09C  
                                 u12150 5CC6                                   u13030 6934  
                                 u13110 2652                                   u10630 AE18  
                                 u13031 6932                                   u12080 59C0  
                                 u12240 1426                                   u13040 6948  
                                 u13120 2678                                   u12170 5CDC  
                                 u12330 17A0                                   u12250 1428  
                                 u13050 694C                                   u10618 ADD4  
                                 u10570 AD8C                                   _U1P1H 003DED  
                                 u10476 D09E                                   u12500 1CAA  
                                 u13220 29DA                                   _U1P2H 003DEF  
                                 u12430 18DA                                   u13150 27D2  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u12600 2176  
                                 u12360 17F4                                   u12280 1538  
                                 u13240 2B4E                                   u13160 27D4  
                                 u10648 AE1A                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u12290 153A  
                                 u13170 27FA                                   _U1P3L 003DF0  
                                 u13340 3146                                   u10588 AD8E  
                                 u11830 A20C                                   u12390 1858  
                                 u13270 2DC6                                   _U2P1L 003DD4  
                                 u12800 7C5E                                   u13360 32F6  
                                 u13280 2DC8                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u11850 A288  
                                 u11930 76D8                                   _U2P3L 003DD8  
                                 u11860 B7F6                                   u12660 234A  
                                 u12820 70D0                                   u12900 6666  
                                 u13380 B712                                   _T5CLK 003F9D  
                                 u12680 2400                                   u12760 7B3C  
                                 u13640 6000                                   u13800 03CC  
                       __end_of___lomod A0BA                                   u12690 2402  
                                 u12770 7B82                                   u12930 674E  
                                 u13730 8A0C                                   u13650 602A  
                                 u11867 B7E8                                   u12851 737E  
                                 u11980 AEF2                                   u12860 7394  
                                 u12940 67A2                                   u13740 8A0E  
                                 u13820 064A                                   _T2HLT 003FAD  
                                 u12861 7392                                   u13645 5FF2  
                                 u12870 73A8                                   u12950 67A4  
                                 u13830 0774                                   u13655 601C  
                                 u12880 73AC                                   u13840 0776  
                                 _T5CON 003F9A                                   u12777 7B74  
                                 u12970 6802                                   u11987 AEE4  
                                 u12980 6804                                   u13960 1118  
                                 _T6CON 003F94                                   u13970 1132  
                                 u13980 1144                                   u13966 111A  
                        __CFG_DEBUG$OFF 000000                                   u13976 1134  
                                 u13986 1146                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00AB                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0026                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result C9A0  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR D38C                     __size_of_CRC_IsBusy 0010  
               __size_of_clear_adc_scan 0006                      _current_sensor_cal 5D8C  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 9B92  
                         __CFG_WRTC$OFF 000000                        _cal_current_zero B8BA  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR AD5A  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR D1BE  
                          _DMA1CON1bits 003BFD              __size_of_send_lcd_data_dma 004A  
                       _DATAEE_ReadByte CB4A                                   _fabsf B386  
                                 _flags 003E                    __size_of_check_range 0080  
             __size_of_CRC_ReverseValue 00CE                                   _r_cal 0400  
              __size_of_calc_model_data 044C                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay D2E2  
                                 _fputc A1E8              __size_of_send_lcd_cmd_long 0040  
                       __end_of_isalpha C766                                   _fputs B822  
                       __end_of_isdigit CC3C                         __end_of_ivln2_h FAC7  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand CA46  
                                 _width 003A                                   _putch D188  
          __end_of_set_ac_charger_relay D2B8                         __end_of_islower CBDC  
                       __end_of_isspace C43E                _INT1_SetInterruptHandler CE5A  
                       __end_of_set_dac B386                         __end_of_isupper CC0C  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw0 003FEB                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler CDE2  
           _UART1_SetRxInterruptHandler CDBA                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf AAA6                         __end_of_tolower BC92  
                       __end_of_strncmp 8812                         __end_of_toupper BC0E  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr CF24  
              __size_of_SPI1_Initialize 0016                 __end_of_update_cal_data C3EC  
                       _TMR5_Initialize C606                   __end_of_ringBufS_init CD42  
                       __initialization A42E                       _UART2_rx_vect_isr CF4C  
                          __end_of_cp_h FACF                            __end_of_cp_l FACB  
                          __end_of_atoi 816C                            __end_of_ctoa BB8A  
                          __end_of_main 1292                            __end_of_dtoa 5D8C  
                          __end_of_nanf C228                            __end_of_spin FABB  
                          __end_of_stoa 7C78                            __end_of_utoa 73F6  
                          __end_of_xtoa 6A06                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize D1EE  
                 __end_of_send_lcd_data CF98                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button C8A8                       __end_of_CRC_Start D372  
              _TMR5_SetInterruptHandler CE0A                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A2  
                     _port_data_dma_ptr D30C                      esr_check@esr_state 00CA  
                   ??_UART2_rx_vect_isr 0026                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize CCF0                         _PWM8_Initialize D204  
                      _UART1_Initialize C5BE                       _UART2_tx_vect_isr CF24  
                    _UART2_Transmit_ISR CCC4                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan C100                                  _ADLTHH 003EDF  
                                STR_100 FFED                                  _ADLTHL 003EDE  
                                STR_110 FFF6                                  STR_103 FFF3  
                                STR_112 FFE7                                  STR_105 FFF3  
                                STR_114 FFE7                                  STR_108 FFF6  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue C766  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1021 AD0A                                  _RB6PPS 003A0E  
                                i1l1209 9AFA                    _start_switch_handler D0B2  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize C696                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright D2C6  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                _NVMDAT 0039E3                    __size_of_hid_display 0122  
                                u981_25 D2B2                                  u981_26 D2B4  
                                u989_20 9004                        __end_of___xxtofl 8C28  
 __end_of_ADCC_DischargeSampleCapacitor D354  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor D34C                __end_of_send_lcd_cmd_dma D12E  
                       _TMR3_WriteTimer C8E8                     ??_UART2_tx_vect_isr 0026  
             __end_of_UART2_rx_vect_isr CF74              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize D302                        _UART2_Initialize C228  
                                _WaitMs CA10                         _conv_raw_result 5450  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 98CE                                  ___fleq B09A  
                     _ADCC_ThresholdISR BFC8                          __CFG_STVREN$ON 000000  
                                _crcObj 00D5                          _ringBufS_flush B94C  
                                _efgtoa 1292                                  _floorf 6A06  
                     dac_spi_control@S0 0042                       dac_spi_control@S1 00CE  
                     dac_spi_control@S2 00CD                       dac_spi_control@SB 00CB  
                     dac_spi_control@SC 00CC                      ?_ADCC_ThresholdISR 0021  
                                _memset 73F6                    __size_of_help_button 0038  
                                clear_0 A4C2                                  clear_1 A4D6  
                                clear_2 A4E8                                  clear_3 A4F4  
                                clear_4 A500                                  clear_5 A50C  
                                clear_6 A518                                  clear_7 A524  
                                clear_8 A530               __end_of_port_data_dma_ptr D316  
                __size_of_read_cal_data 01CA                                  _printf C164  
                    _eaDogM_WriteString B6DA                 __end_of_DATAEE_ReadByte CB7C  
                                _strcpy AE30                               ?_ADCC_ISR 0021  
                                _strlen B780                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 06FF                         _ADCC_Initialize BF5E  
                        _PMD_Initialize D230              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr CF4C                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan C164                            __mediumconst F8E2  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay C33C  
                      __end_of_spinners AC76                        __end_of_vfprintf B4E0  
                            _StartTimer C828                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize C64E  
                     _SYSTEM_Initialize C490                              __accesstop 0060  
               __end_of__initialization A542                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help D364  
                  __end_of_display_info D35C               __end_of_CLKREF_Initialize D30C  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer C8A8                   _set_temp_display_help D298  
                      _clear_hid_pflags CAE2                   __end_of_TMR3_CallBack D004  
             __end_of_ADCC_ThresholdISR C032                      __size_of_calc_bsoc 0A6E  
                __end_of_ringBufS_flush B9DE                          __pcstackCOMRAM 0021  
                            ___inthi_sp 12C4                              ___intlo_sp 1962  
                          __pidataBANK0 D33A                            __pidataBANK1 AFD2  
                          __pidataBANK2 B632             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf B434                               ?_TMR3_ISR 0021  
                             ?_TMR5_ISR 0021                               ?_TMR6_ISR 0021  
                      _DATAEE_WriteByte C032                          ivt0x8_undefint 00AC  
                         __end_of_fputc A30C                           __end_of_fputs B8BA  
                  _get_ac_charger_relay D2D4                           __end_of_srand CA7A  
                 __end_of_TMR5_CallBack CFE0                           __end_of_putch D1A2  
                  _set_ac_charger_relay D2A8                 __end_of_PWM8_Initialize D21A  
               __end_of_TMR6_Initialize CD1A                       _adc_int_t_handler BC92  
                __end_of_PMD_Initialize D244                              __end_of_bp FAC3  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack D04C  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0040  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR D324  
                 TMR3_ISR@CountCallBack 00C2                          _clear_adc_scan D372  
                    __size_of_hid_input 00D6                      __end_of_CRC_IsBusy D298  
                __size_of_mode_lamp_dim 0018                        _CRC_ReverseValue AF04  
              _UART2_RxInterruptHandler 00B7               __end_of_SYSTEM_Initialize C4DE  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer C928                              __pbssBANK0 0060  
                            __pbssBANK1 01C7                              __pbssBANK2 02A7  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
              __end_of_update_hist_data BEF4                              _check_help 8812  
                         _read_cal_data 8C28                 __end_of_conv_raw_result 590C  
                    __size_of_esr_check 02D8                   _INT0_InterruptHandler 00BD  
                            ??_INT0_ISR 0021                              ??_INT1_ISR 0027  
                     __end_of_TimerDone CD6A                        _DMA1_DMADCNT_ISR D318  
                       _convert_dac_raw A548                      __size_of_init_bsoc 0246  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma CB7C  
                 __end_of_wait_lcd_done D06E                __end_of_cal_current_zero B94C  
      __end_of_TMR3_SetInterruptHandler CE5A                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler CE0A                              ??_TMR3_ISR 00D8  
               __end_of_ADCC_Initialize BFC8                              ??_TMR5_ISR 002B  
             __end_of_adc_int_t_handler BD14                              ??_TMR6_ISR 0026  
                     __end_of___asfladd BE86                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9                      __size_of_set_dac_a 0034  
                    __size_of_set_dac_b 0034    __end_of_ADCC_SetADTIInterruptHandler CED2  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler CEAA  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                                 _CRCACCH 003963  
                               _CRCACCL 003962                                 _CRCDATH 003961  
                               _CRCDATL 003960                       _UART1_Receive_ISR D16A  
                               _CRCCON0 003968                                 _CRCCON1 003969  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan D378                                 u1012_20 D2DE  
                               _CRCXORH 003967                                 _CRCXORL 003966  
                               u1050_20 9E70                                 u1050_21 9E6A  
                               u1019_20 C9E0                                 u1019_26 C9E2  
                               u1140_44 BCFA                                 u1140_45 BCF4  
                               u1054_24 9F56                                 u1054_25 9F52  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR D2F4  
                               u1048_28 9E56                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 u1090_48 D038  
                               u1082_48 D014                                 _U1ERRIR 003DF9  
                               u1084_28 CFA8                                 _U2ERRIE 003DE2  
                               u1093_28 CFCC                                 _U2ERRIR 003DE1  
                               u1353_20 3AF6                                 u1360_28 CFF0  
                               u1355_20 3BC0                       _CRC_8BitDataWrite D244  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                         _dac_spi_control BD94  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _NVMADRH 0039E1                                 _NVMADRL 0039E0  
                     __end_of_calc_bsoc 3EF0                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _NVMCON2 0039E6  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch CC6A  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer C8E8  
               __size_of_switch_handler 0142                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one D288              __end_of_set_load_relay_two D278  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 92E4                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim D1BE                                 __Lparam 0000  
              __end_of_UART1_Initialize C606                       __end_of_hid_input AE30  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 7C78  
                               ___fladd 471A                                 ___aomod 83B2  
                               ___fldiv 4ED6                                 ___awdiv 9CEA  
                               ___flneg C576                                 ___awmod A660  
                               ___flmul 3EF0                                 ___flsub C6DC  
                               ___fltol 975C                                 ___lodiv 946A  
                               ___lomod 9F7A               __end_of_UART1_Receive_ISR D188  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display AB90                                 __pcinit A42E  
              __end_of_mode_lamp_bright D2D4                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand D2B8  
                               __ramtop 2000               __end_of_CRC_8BitDataWrite D256  
                               __ptext0 0000                                 __ptext1 BE86  
                               __ptext2 C396                                 __ptext3 C288  
                               __ptext4 D0B2                                 __ptext5 CA46  
                               __ptext6 CA7A                                 __ptext7 CAAE  
                               __ptext8 A548                                 __ptext9 B2D0  
                     __end_of_esr_check 79BA                       _UART2_Receive_ISR D0D2  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize D21A                            __size_of_abs 0046  
                               us706999 85E0                            __size_of_pad 0114  
                     __end_of_init_bsoc 83B2                                 _isalpha C722  
                               _isdigit CC0C                                 _ivln2_h FAC3  
                             _T3CONbits 003FA6                                 us695999 7EE2  
                               us791999 95D4                                 _mode_sw 00CF  
                               us796999 A0AA                       __end_of_lp_filter 8FAE  
                               _islower CBAC                                 _isspace C3EC  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
                               _set_dac B2D0                __end_of_UART2_Initialize C288  
                               _isupper CBDC                               _CRC_Start D36C  
            __size_of_SYSTEM_Initialize 004E                                 _sprintf A99C  
                               _tolower BC0E                   __size_of_display_help 0008  
                               _utctime 0096                 __end_of_convert_dac_raw A660  
                 __size_of_display_info 0008                                 _strncmp 85F2  
                               _toupper BB8A                    end_of_initialization A542  
             __size_of_convert_adc_data 00B8                               _SCANHADRH 00397A  
                             _SCANHADRL 003979                               _SCANHADRU 00397B  
                             _SCANLADRH 003977                               _SCANLADRL 003976  
                    _check_enter_button C868                               _SCANLADRU 003978  
                     __end_of_set_dac_a CAE2                       __end_of_set_dac_b CAAE  
                             i1u1375_20 9AF0     __end_of_UART2_SetRxInterruptHandler CDBA  
           _UART2_SetRxInterruptHandler CD92                               i2u1151_48 CF60  
                             i2u1143_48 CCB0                               i2u1145_48 BFFE  
                             i2u1145_49 C012                               i2u1147_48 CF10  
                             i2u1149_48 CF38                 check_day_time@day_delay 0041  
                     __end_of_set_vterm D14C                       __end_of_vfpfcnvrt 3482  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 0082  
                   __size_of_StartTimer 0040                       __end_of_start_lcd D384  
             __end_of_UART2_Receive_ISR D0F2                          wdtdelay@dcount 009A  
               __end_of_dac_spi_control BE0E             __size_of_current_sensor_cal 0474  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 00BA                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc D38A                               _PORTDbits 003FCD  
              _TMR3_SetInterruptHandler CE32                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler CDE2                            _display_help D35C  
                 _TMR5_InterruptHandler 00A5                            _display_info D354  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags CB16  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler CEFA  
           _ADCC_SetADIInterruptHandler CED2                              _update_lcd A88C  
                       _calc_model_data 6200                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc C288  
              __end_of_DATAEE_WriteByte C09A                         _DMA1_Initialize BEF4  
                   __end_of_check_range BD94                              _start_bsoc D090  
                __size_of_send_lcd_data 0024                         _SPI1_Initialize D1EE  
                 __end_of_get_vterm_ptr CC6A                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                __end_of_CRC_ReverseValue AFD2  
                        __end_of_WaitMs CA46            __end_of_INTERRUPT_Initialize C100  
                            _vterm_dump A0BA                          __end_of___flge 9A30  
                        __end_of___fleq B15E    __end_of_INT0_DefaultInterruptHandler D398  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler D396  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize C33C  
                         __pidataBIGRAM 6D72                          __end_of_efgtoa 24D6  
            __size_of_CRC_8BitDataWrite 0012                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 00E2                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 6D72  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 007A  
                        __end_of_memset 76E2                          __end_of_printf C1C6  
              __end_of_DMA1_DMADCNT_ISR D322             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack D028                          __end_of_strcpy AF04  
                        __end_of_strlen B822                     start_initialization A42E  
               __size_of_write_cal_data 0158    __end_of_TMR5_DefaultInterruptHandler CA10  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler C9D8  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs C6DC  
                 __end_of_INT1_CallBack CFBC               __size_of_set_display_info 001E  
                           __end_of_pad A88C                    __size_of_Default_ISR 0006  
               __size_of_CRC_Initialize 0092                    __end_of_send_lcd_cmd C828  
                        _switch_handler 9E38           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 006C  
                 __end_of___fpclassifyf 92E4                           _uart2RxBuffer 0600  
              __end_of_DMA1_DMASCNT_ISR D302                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR D330                     __end_of_hid_display A42E  
            __end_of_send_port_data_dma C490                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
       __end_of_CRC_CalculatedResultGet 975C                               _TimerDone CD42  
                         _ringBufS_init CD1A                             __pdataBANK0 00F1  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 0020                     __size_of_get_switch 002C  
            __end_of_EXT_INT_Initialize CB4A                __size_of_update_cal_data 0056  
               __end_of_calc_model_data 664C                           _send_lcd_data CF74  
                   __end_of_help_button C9D8         __end_of_eaDogM_WriteStringAtPos B632  
                   __end_of_BVSOC_TABLE F9B3                               ___asfladd BE0E  
                  calc_model_data@bcror 008E                             __pbssBIGRAM 0A42  
               __end_of_DMA1_Initialize BF5E                    calc_model_data@bvror 0092  
                           __pbssCOMRAM 003A                             _check_range BD14  
      __end_of_INT0_SetInterruptHandler CEAA                           __pcstackBANK0 00D8  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 9F7A                             _CRCCON0bits 003968  
                           _CRCCON1bits 003969                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize D204                _UART1_RxInterruptHandler 00B1  
              _UART2_TxInterruptHandler 00B4                               __end_of_T FA43  
                      _convert_adc_data B218                               _calc_bsoc 3482  
             __size_of_ringBufS_put_dma 00AA                            _init_display AAA6  
                __end_of_DMA1_DMAOR_ISR D33A                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00A8                      calc_ror_data@bcror 0086  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize C396  
                    calc_ror_data@bvror 008A                  _PIN_MANAGER_Initialize B9DE  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set D37E  
                         __pmediumconst F8E2                               __ptext100 CC0C  
                             __ptext101 D12E                               __ptext110 D354  
                             __ptext102 D298                               __ptext111 D35C  
                             __ptext103 D14C                               __ptext120 98CE  
                             __ptext112 C868                               __ptext104 D1BE  
                             __ptext121 6200                               __ptext113 92E4  
                             __ptext105 D2C6                               __ptext130 CD6A  
                             __ptext122 D384                               __ptext114 B386  
                             __ptext106 C766                               __ptext131 CD92  
                             __ptext123 D090                               __ptext115 5450  
                             __ptext107 C9A0                               __ptext140 D1D6  
                             __ptext132 C5BE                               __ptext124 8DF2  
                             __ptext116 C1C6                               __ptext108 CD42  
                             __ptext141 D1EE                               __ptext133 CDBA  
                             __ptext125 C6DC                               __ptext117 D06E  
                             __ptext109 C828                               __ptext150 CE82  
                             __ptext142 D204                               __ptext134 CCF0  
                             __ptext126 471A                               __ptext118 8A24  
                             __ptext151 C33C                               __ptext143 D230  
                             __ptext135 CDE2                               __ptext127 3EF0  
                             __ptext119 4ED6                               __ptext160 D392  
                             __ptext152 BEF4                               __ptext144 B9DE  
                             __ptext136 C606                               __ptext128 C490  
                             __ptext161 9E38                               __ptext153 BA70  
                             __ptext145 D21A                               __ptext137 CE0A  
                             __ptext129 C228                               __ptext170 C8E8  
                             __ptext162 AC78                               __ptext154 D302  
                             __ptext146 C09A                               __ptext138 C64E  
                             __ptext171 CFE0                               __ptext163 C8A8  
                             __ptext155 BF5E                               __ptext147 D364  
                             __ptext139 CE32                               __ptext180 D38C  
                             __ptext172 D394                               __ptext164 CFBC  
                             __ptext156 CEAA                               __ptext148 CB16  
                             __ptext181 CC98                               __ptext173 3482  
                             __ptext165 C9D8                               __ptext157 CED2  
                             __ptext149 CE5A                               __ptext190 CF4C  
                             __ptext182 BC92                               __ptext174 C43E  
                             __ptext166 8FAE                               __ptext158 C928  
                             __ptext191 D0D2                               __ptext183 D398  
                             __ptext175 D30C                               __ptext167 D2A8  
                             __ptext159 CF98                               __ptext192 D1A4  
                             __ptext184 D39A                               __ptext176 BE0E  
                             __ptext168 D2D4                               __ptext193 D028  
                             __ptext185 BFC8                               __ptext177 D2E4  
                             __ptext169 9A30                               __ptext194 C4DE  
                             __ptext186 CEFC                               __ptext178 D004  
                             __ptext195 D2F4                               __ptext187 D16A  
                             __ptext179 D396                               __ptext196 D318  
                             __ptext188 CF24                               __ptext197 D324  
                             __ptext189 CCC4                               __ptext198 D330  
                             __ptext199 0000                               _hid_input AD5A  
                    __end_of_StartTimer C868                      _set_load_relay_one D278  
                    _set_load_relay_two D268                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00E6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR CC98                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 007E                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 76E2  
               __size_of_get_raw_result 0022                          __size_of_fabsf 00AE  
                             _init_bsoc 816C                  __size_of_wait_lcd_done 0022  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                __size_of_DATAEE_ReadByte 0032  
                             _lp_filter 8DF2                             _hid_display A30C  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize C09A                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0021  
                              _INT0_ISR D2E4                                _INT1_ISR C928  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _SCANCON0 00397C  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _SCANTRIG 00397D                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 02A7                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                            _SPI1CON0bits 003D14  
                          _SPI1CON1bits 003D15                               _set_dac_a CAAE  
                             _set_dac_b CA7A                               _ring_buf1 04A7  
                             _ring_buf2 0500                                _PIR0bits 0039A0  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack CFE0  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm D12E  
                   __size_of_update_lcd 0110                             _help_button C9A0  
                              _TMR3_ISR 9A30                             _BVSOC_TABLE F8E3  
                              _TMR5_ISR AC78                                _TMR6_ISR D1A4  
                             _port_data 06FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 24D6                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack CFBC  
                            _ADCON0bits 003EF8                      __end_of_check_help 8A24  
                             _start_lcd D37E                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack D028  
                        _write_cal_data 9B92                   __size_of_send_lcd_cmd 0040  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc D384  
                      _set_display_info D14C                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                          _CRC_Initialize BA70  
                           _INTCON0bits 003FD2                               copy_data0 A442  
                             copy_data1 A468                               copy_data2 A48A  
                             copy_data3 A4AC        __size_of_CRC_CalculatedResultGet 0172  
              _INT0_SetInterruptHandler CE82                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler CD92             _UART2_SetTxInterruptHandler CD6A  
                          _uart1RxCount 00D3                            _uart2RxCount 00D0  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000              __end_of_current_sensor_cal 6200  
              __size_of_conv_raw_result 04BC                           _wait_lcd_done D04C  
                          _send_lcd_cmd C7E8                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler D39A  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch CC96                 __size_of_check_day_time 01A0  
                __end_of_write_cal_data 9CEA                   __end_of_DMA1_DMAA_ISR D32E  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 8A24  
                __end_of_CRC_Initialize BB02                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand D2C6                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                        __size_of_set_dac 00B6  
                              __ptext10 BD94                                __ptext11 8C28  
                              __ptext20 816C                                __ptext12 CB4A  
                              __ptext21 B15E                                __ptext13 CB7C  
                              __ptext30 5D8C                                __ptext22 A30C  
                              __ptext14 AAA6                                __ptext31 9B92  
                              __ptext23 AD5A                                __ptext15 CF74  
                              __ptext40 D34C                                __ptext32 C032  
                              __ptext24 76E2                                __ptext16 C7A8  
                              __ptext41 AB90                                __ptext33 D36C  
                              __ptext25 C966                                __ptext17 C7E8  
                              __ptext50 A99C                                __ptext42 CC6A  
                              __ptext34 D288                                __ptext26 D344  
                              __ptext18 D0F2                                __ptext51 CC3C  
                              __ptext43 D372                                __ptext35 95EA  
                              __ptext27 D268                                __ptext19 CD1A  
                              __ptext60 D378                                __ptext52 CA10  
                              __ptext44 B8BA                                __ptext36 AF04  
                              __ptext28 D278                                __ptext61 D37E  
                              __ptext53 A88C                                __ptext45 BD14  
                              __ptext37 D244                                __ptext29 D2B8  
                              __ptext70 C722                                __ptext62 B94C  
                              __ptext54 B58A                                __ptext46 B218  
                              __ptext38 C100                                __ptext71 70B6  
                              __ptext63 73F6                                __ptext55 D110  
                              __ptext47 CAE2                                __ptext39 D256  
                              __ptext80 6A06                                __ptext72 9F7A  
                              __ptext64 C164                                __ptext56 D04C  
                              __ptext48 8812                                __ptext81 914E  
                              __ptext73 946A                                __ptext65 B434  
                              __ptext57 C2E2                                __ptext49 A0BA  
                              __ptext90 7C78                                __ptext82 975C  
                              __ptext74 85F2                                __ptext66 24D6  
                              __ptext58 C52C                                __ptext91 BB02  
                              __ptext83 C576                                __ptext75 79BA  
                              __ptext67 664C                                __ptext59 B6DA  
                              __ptext92 A778                                __ptext84 B09A  
                              __ptext76 1292                                __ptext68 BB8A  
                              __ptext93 B780                                __ptext85 A660  
                              __ptext77 BC0E                                __ptext69 CBAC  
                              __ptext94 B822                                __ptext86 9CEA  
                              __ptext78 CBDC                                __ptext95 A1E8  
                              __ptext87 590C                                __ptext79 AE30  
                              __ptext96 D188                                __ptext88 C696  
                              __ptext97 B4E0                                __ptext89 83B2  
                              __ptext98 7EF8                                __ptext99 C3EC  
                      __size_of_isupper 0030                   __end_of_read_cal_data 8DF2  
                              us1202999 5926                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1271999 79CC  
                              us1283999 711C                                us1292999 66CC  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma B4E0                    __end_of_Volts_to_SOC B218  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 1292                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                     dac_spi_control@init 0043  
                            _CRC_IsBusy D288                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma CBAC  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00AE                               stoa@F1166 0100  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion D268  
                              _spi_link 0060                                _wdtdelay C2E2  
            __end_of_UART2_Transmit_ISR CCF0                                _spinners AB90  
                              _vfprintf B434                __end_of_convert_adc_data B2D0  
             __size_of_update_hist_data 006E              __end_of_PWM8_LoadDutyValue C7A8  
  __end_of_TMR3_DefaultInterruptHandler D396   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler D394    __end_of_INT1_DefaultInterruptHandler D394  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler D392  
                    _send_port_data_dma C43E                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0044                             _uart1RxTail 00D4  
                        _get_raw_result D06E                             _NVMCON1bits 0039E5  
                           _uart2TxHead 00D2                             _uart2RxTail 00D1  
                             spinners@s 0074                             _uart2TxTail 0046  
             __size_of_cal_current_zero 0092                            _wait_lcd_set D378  
                    _EXT_INT_Initialize CB16    __end_of_TMR6_DefaultInterruptHandler C52C  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler C4DE  
                     _send_lcd_data_dma C52C    __end_of_ADCC_DefaultInterruptHandler D39A  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler D398  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long C7A8          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help D2A8                   __end_of_calc_ror_data 946A  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString B780  
                 __end_of_mode_lamp_dim D1D6                 __end_of_adc_int_handler D39C  
              __size_of_convert_dac_raw 0118                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd A99C  
                _uart2TxBufferRemaining 0045                      __end_of_static_soc C2E2  
                    __end_of_start_bsoc D0B2                          _FVR_Initialize D364  
                __end_of_get_raw_result D090                        _send_lcd_cmd_dma D110  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 00C6  
      __end_of_INT1_SetInterruptHandler CE82               __size_of_UART1_Initialize 0048  
              __size_of_dac_spi_control 007A               __end_of_send_lcd_data_dma C576  
                      ??_DMA1_DMAOR_ISR 0027                 _CRC_CalculatedResultGet 95EA  
             __end_of_send_lcd_cmd_long C7E8                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR D392          __end_of_PIN_MANAGER_Initialize BA70  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump A1E8  
               _eaDogM_WriteStringAtPos B58A                           _get_vterm_ptr CC3C  
                        _check_adc_scan D344               __size_of_UART2_Initialize 0060  
